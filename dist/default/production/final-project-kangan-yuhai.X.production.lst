

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Mar 15 17:30:46 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 05/05/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK0
   132  005D44                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _SENSITIVITY
   136  005D44  0168               	dw	360
   137                           
   138                           	psect	smallconst
   139  000E00                     __psmallconst:
   140                           	callstack 0
   141  000E00  00                 	db	0
   142  000E01  0000               	dw	0
   143  000E03  4B00               	dw	19200
   144  000E05                     __end_of_toint:
   145                           	callstack 0
   146  0000                     _TX4REG	set	3812
   147  0000                     _RC4STAbits	set	3815
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISGbits	set	3975
   151  0000                     _TRISEbits	set	3973
   152  0000                     _LATGbits	set	3967
   153  0000                     _LATFbits	set	3966
   154  0000                     _TRISFbits	set	3974
   155  0000                     _SSP2CON2bits	set	3802
   156  0000                     _LATG	set	3967
   157  0000                     _LATE	set	3965
   158  0000                     _RX4PPS	set	3605
   159  0000                     _SSP2CLKPPS	set	3612
   160  0000                     _SSP2DATPPS	set	3613
   161  0000                     _ANSELDbits	set	3751
   162  0000                     _SSP2ADD	set	3798
   163  0000                     _SSP2CON1bits	set	3801
   164  0000                     _LATAbits	set	3961
   165  0000                     _LATDbits	set	3964
   166  0000                     _LATHbits	set	3968
   167  0000                     _TRISDbits	set	3972
   168  0000                     _TRISHbits	set	3976
   169  0000                     _PORTFbits	set	3982
   170  0000                     _T2PR	set	4028
   171  0000                     _T2CONbits	set	4029
   172  0000                     _PWM7DCH	set	4000
   173  0000                     _PWM6DCH	set	4003
   174  0000                     _TRISAbits	set	3969
   175  0000                     _TRISCbits	set	3971
   176  0000                     _LATCbits	set	3963
   177  0000                     _RC4REG	set	3811
   178  0000                     _SP4BRGL	set	3813
   179  0000                     _TX4STAbits	set	3816
   180  0000                     _BAUD4CONbits	set	3817
   181  0000                     _SSP2CON2	set	3802
   182  0000                     _SSP2STAT	set	3800
   183  0000                     _ANSELFbits	set	3764
   184  0000                     _SSP2BUF	set	3797
   185  0000                     _PIE0bits	set	3625
   186  0000                     _PIR4bits	set	3639
   187  0000                     _RC0PPS	set	3682
   188  0000                     _RC7PPS	set	3689
   189  0000                     _RD5PPS	set	3695
   190  0000                     _RE2PPS	set	3700
   191  0000                     _RD6PPS	set	3696
   192  0000                     _TMR0L	set	4051
   193  0000                     _TMR0H	set	4052
   194  0000                     _T0CON0bits	set	4053
   195  0000                     _T2CLKCONbits	set	4031
   196  0000                     _T2HLTbits	set	4030
   197  0000                     _PWM6CONbits	set	4004
   198  0000                     _PWM7CONbits	set	4001
   199  0000                     _T0CON1bits	set	4054
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PIR0bits	set	3635
   202  000E05                     STR_1:
   203                           
   204                           ; BSR set to: 14
   205  000E05  25                 	db	37
   206  000E06  64                 	db	100	;'d'
   207  000E07  09                 	db	9
   208  000E08  25                 	db	37
   209  000E09  64                 	db	100	;'d'
   210  000E0A  09                 	db	9
   211  000E0B  25                 	db	37
   212  000E0C  64                 	db	100	;'d'
   213  000E0D  09                 	db	9
   214  000E0E  25                 	db	37
   215  000E0F  64                 	db	100	;'d'
   216  000E10  0D                 	db	13
   217  000E11  0A                 	db	10
   218  000E12  00                 	db	0
   219  000E13  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  00587C                     __pcinit:
   225                           	callstack 0
   226  00587C                     start_initialization:
   227                           	callstack 0
   228  00587C                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Initialize objects allocated to BANK0 (2 bytes)
   232                           ; load TBLPTR registers with __pidataBANK0
   233  00587C  0E44               	movlw	low __pidataBANK0
   234  00587E  6EF6               	movwf	tblptrl,c
   235  005880  0E5D               	movlw	high __pidataBANK0
   236  005882  6EF7               	movwf	tblptrh,c
   237  005884  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   238  005886  6EF8               	movwf	tblptru,c
   239  005888  0009               	tblrd		*+	;fetch initializer
   240  00588A  CFF5 F0DB          	movff	tablat,__pdataBANK0
   241  00588E  0009               	tblrd		*+	;fetch initializer
   242  005890  CFF5 F0DC          	movff	tablat,__pdataBANK0+1
   243                           
   244                           ; Clear objects allocated to BANK1 (48 bytes)
   245  005894  EE01  F0A7         	lfsr	0,__pbssBANK1
   246  005898  0E30               	movlw	48
   247  00589A                     clear_0:
   248  00589A  6AEE               	clrf	postinc0,c
   249  00589C  06E8               	decf	wreg,f,c
   250  00589E  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (62 bytes)
   253  0058A0  EE00  F060         	lfsr	0,__pbssBANK0
   254  0058A4  0E3E               	movlw	62
   255  0058A6                     clear_1:
   256  0058A6  6AEE               	clrf	postinc0,c
   257  0058A8  06E8               	decf	wreg,f,c
   258  0058AA  E1FD               	bnz	clear_1
   259  0058AC                     end_of_initialization:
   260                           	callstack 0
   261  0058AC                     __end_of__initialization:
   262                           	callstack 0
   263  0058AC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264  0058AE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  0058B0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   266  0058B2  6EF8               	movwf	tblptru,c
   267  0058B4  0E0E               	movlw	high __Lsmallconst
   268  0058B6  6EF7               	movwf	tblptrh,c
   269  0058B8  0100               	movlb	0
   270  0058BA  EFD1  F016         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssBANK0
   273  000060                     __pbssBANK0:
   274                           	callstack 0
   275  000060                     _motorR:
   276                           	callstack 0
   277  000060                     	ds	9
   278  000069                     _motorL:
   279                           	callstack 0
   280  000069                     	ds	9
   281  000072                     roundf@F527:
   282                           	callstack 0
   283  000072                     	ds	4
   284  000076                     _nout:
   285                           	callstack 0
   286  000076                     	ds	2
   287  000078                     _width:
   288                           	callstack 0
   289  000078                     	ds	2
   290  00007A                     _prec:
   291                           	callstack 0
   292  00007A                     	ds	2
   293  00007C                     _flags:
   294                           	callstack 0
   295  00007C                     	ds	2
   296  00007E                     _dbuf:
   297                           	callstack 0
   298  00007E                     	ds	32
   299                           
   300                           	psect	dataBANK0
   301  0000DB                     __pdataBANK0:
   302                           	callstack 0
   303  0000DB                     _SENSITIVITY:
   304                           	callstack 0
   305  0000DB                     	ds	2
   306                           
   307                           	psect	bssBANK1
   308  0001A7                     __pbssBANK1:
   309                           	callstack 0
   310  0001A7                     _memory:
   311                           	callstack 0
   312  0001A7                     	ds	40
   313  0001CF                     _stop_move:
   314                           	callstack 0
   315  0001CF                     	ds	2
   316  0001D1                     _start_move:
   317                           	callstack 0
   318  0001D1                     	ds	2
   319  0001D3                     _centisecond:
   320                           	callstack 0
   321  0001D3                     	ds	2
   322  0001D5                     _color:
   323                           	callstack 0
   324  0001D5                     	ds	1
   325  0001D6                     _array_index:
   326                           	callstack 0
   327  0001D6                     	ds	1
   328                           
   329                           	psect	cstackBANK1
   330  000100                     __pcstackBANK1:
   331                           	callstack 0
   332  000100                     main@buf:
   333                           	callstack 0
   334                           
   335                           ; 100 bytes @ 0x0
   336  000100                     	ds	100
   337  000164                     main@amb:
   338                           	callstack 0
   339                           
   340                           ; 8 bytes @ 0x64
   341  000164                     	ds	8
   342  00016C                     main@amb_light:
   343                           	callstack 0
   344                           
   345                           ; 2 bytes @ 0x6C
   346  00016C                     	ds	2
   347  00016E                     main@setup:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x6E
   351  00016E                     	ds	1
   352  00016F                     main@stop_signal:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x6F
   356  00016F                     	ds	1
   357  000170                     main@accident:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x70
   361  000170                     	ds	1
   362  000171                     main@rgb:
   363                           	callstack 0
   364                           
   365                           ; 8 bytes @ 0x71
   366  000171                     	ds	8
   367  000179                     main@white:
   368                           	callstack 0
   369                           
   370                           ; 28 bytes @ 0x79
   371  000179                     	ds	28
   372  000195                     main@motorL:
   373                           	callstack 0
   374                           
   375                           ; 9 bytes @ 0x95
   376  000195                     	ds	9
   377  00019E                     main@motorR:
   378                           	callstack 0
   379                           
   380                           ; 9 bytes @ 0x9E
   381  00019E                     	ds	9
   382                           
   383                           	psect	cstackBANK0
   384  00009E                     __pcstackBANK0:
   385                           	callstack 0
   386  00009E                     ??___fltol:
   387  00009E                     ?_sprintf:
   388                           	callstack 0
   389  00009E                     sprintf@s:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x0
   393  00009E                     	ds	2
   394  0000A0                     sprintf@fmt:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x2
   398  0000A0                     	ds	2
   399  0000A2                     ___fltol@sign1:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x4
   403  0000A2                     	ds	1
   404  0000A3                     ___fltol@exp1:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x5
   408  0000A3                     	ds	1
   409  0000A4                     ?_lroundf:
   410                           	callstack 0
   411  0000A4                     lroundf@x:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x6
   415  0000A4                     	ds	4
   416  0000A8                     ?_amb_light_measure:
   417                           	callstack 0
   418  0000A8                     compare@lower:
   419                           	callstack 0
   420  0000A8                     amb_light_measure@amb:
   421                           	callstack 0
   422  0000A8                     distance_measure@mL:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xA
   426  0000A8                     	ds	2
   427  0000AA                     ??_amb_light_measure:
   428  0000AA                     compare@value2compare:
   429                           	callstack 0
   430  0000AA                     distance_measure@mR:
   431                           	callstack 0
   432  0000AA                     sprintf@ap:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0xC
   436  0000AA                     	ds	2
   437  0000AC                     compare@upper:
   438                           	callstack 0
   439  0000AC                     amb_light_measure@upper_bound:
   440                           	callstack 0
   441  0000AC                     distance_measure@amb_light:
   442                           	callstack 0
   443  0000AC                     sprintf@f:
   444                           	callstack 0
   445                           
   446                           ; 11 bytes @ 0xE
   447  0000AC                     	ds	2
   448  0000AE                     ??_distance_measure:
   449  0000AE                     compare@result:
   450                           	callstack 0
   451  0000AE                     amb_light_measure@CC_amb_ave:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x10
   455  0000AE                     	ds	1
   456  0000AF                     detect_color@m:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x11
   460  0000AF                     	ds	1
   461  0000B0                     amb_light_measure@CC_amb_1:
   462                           	callstack 0
   463  0000B0                     distance_measure@CG_amb:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x12
   467  0000B0                     	ds	1
   468  0000B1                     detect_color@w:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x13
   472  0000B1                     	ds	1
   473  0000B2                     amb_light_measure@CC_amb_2:
   474                           	callstack 0
   475  0000B2                     _distance_measure$3232:
   476                           	callstack 0
   477                           
   478                           ; 4 bytes @ 0x14
   479  0000B2                     	ds	1
   480  0000B3                     ??_detect_color:
   481                           
   482                           ; 1 bytes @ 0x15
   483  0000B3                     	ds	1
   484  0000B4                     amb_light_measure@CC_amb_3:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x16
   488  0000B4                     	ds	2
   489  0000B6                     distance_measure@CC_amb:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x18
   493  0000B6                     	ds	1
   494  0000B7                     detect_color@RG:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x19
   498  0000B7                     	ds	1
   499  0000B8                     distance_measure@threshold:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x1A
   503  0000B8                     	ds	1
   504  0000B9                     detect_color@BC:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x1B
   508  0000B9                     	ds	1
   509  0000BA                     distance_measure@stop:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x1C
   513  0000BA                     	ds	1
   514  0000BB                     detect_color@GR:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x1D
   518  0000BB                     	ds	2
   519  0000BD                     detect_color@BB:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1F
   523  0000BD                     	ds	2
   524  0000BF                     detect_color@RB:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x21
   528  0000BF                     	ds	2
   529  0000C1                     detect_color@GB:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x23
   533  0000C1                     	ds	2
   534  0000C3                     detect_color@BR:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x25
   538  0000C3                     	ds	2
   539  0000C5                     detect_color@GG:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x27
   543  0000C5                     	ds	2
   544  0000C7                     detect_color@color:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x29
   548  0000C7                     	ds	1
   549  0000C8                     detect_color@RR:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2A
   553  0000C8                     	ds	2
   554  0000CA                     detect_color@BG:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x2C
   558  0000CA                     	ds	2
   559  0000CC                     _detect_color$3231:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x2E
   563  0000CC                     	ds	4
   564  0000D0                     verify_color@m:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x32
   568  0000D0                     	ds	2
   569  0000D2                     verify_color@w:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x34
   573  0000D2                     	ds	2
   574  0000D4                     ??_verify_color:
   575                           
   576                           ; 1 bytes @ 0x36
   577  0000D4                     	ds	2
   578  0000D6                     verify_color@color2:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x38
   582  0000D6                     	ds	2
   583  0000D8                     verify_color@color:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x3A
   587  0000D8                     	ds	1
   588  0000D9                     ??_main:
   589                           
   590                           ; 1 bytes @ 0x3B
   591  0000D9                     	ds	2
   592                           
   593                           	psect	cstackCOMRAM
   594  000001                     __pcstackCOMRAM:
   595                           	callstack 0
   596  000001                     ??_LED_OFF:
   597  000001                     ??_LED_R:
   598  000001                     ??_LED_C:
   599  000001                     ??_LED_B:
   600  000001                     ??_LED_G:
   601  000001                     ??_I2C_2_Master_Idle:
   602  000001                     ?_strlen:
   603                           	callstack 0
   604  000001                     ?___wmul:
   605                           	callstack 0
   606  000001                     ?___fladd:
   607                           	callstack 0
   608  000001                     ?___flneg:
   609                           	callstack 0
   610  000001                     ?___xxtofl:
   611                           	callstack 0
   612  000001                     ?___aodiv:
   613                           	callstack 0
   614  000001                     ?___aomod:
   615                           	callstack 0
   616  000001                     toggle_light@toggletime:
   617                           	callstack 0
   618  000001                     sendCharSerial4@charToSend:
   619                           	callstack 0
   620  000001                     initDCmotorsPWM@PWMperiod:
   621                           	callstack 0
   622  000001                     initDCmotors_parameter@motorL:
   623                           	callstack 0
   624  000001                     ___wmul@multiplier:
   625                           	callstack 0
   626  000001                     fputc@c:
   627                           	callstack 0
   628  000001                     strlen@s:
   629                           	callstack 0
   630  000001                     ___flge@ff1:
   631                           	callstack 0
   632  000001                     ___flneg@f1:
   633                           	callstack 0
   634  000001                     ___fladd@b:
   635                           	callstack 0
   636  000001                     ___xxtofl@val:
   637                           	callstack 0
   638  000001                     ___aodiv@dividend:
   639                           	callstack 0
   640  000001                     ___aomod@dividend:
   641                           	callstack 0
   642                           
   643                           ; 8 bytes @ 0x0
   644  000001                     	ds	1
   645  000002                     ??_I2C_2_Master_Read:
   646  000002                     ??_toggle_light:
   647  000002                     I2C_2_Master_Write@data_byte:
   648                           	callstack 0
   649  000002                     sendStringSerial4@string:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x1
   653  000002                     	ds	1
   654  000003                     color_writetoaddr@value:
   655                           	callstack 0
   656  000003                     I2C_2_Master_Read@ack:
   657                           	callstack 0
   658  000003                     initDCmotors_parameter@motorR:
   659                           	callstack 0
   660  000003                     ___wmul@multiplicand:
   661                           	callstack 0
   662  000003                     fputc@fp:
   663                           	callstack 0
   664  000003                     strlen@a:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x2
   668  000003                     	ds	1
   669  000004                     toggle_light@i:
   670                           	callstack 0
   671  000004                     color_writetoaddr@address:
   672                           	callstack 0
   673  000004                     I2C_2_Master_Read@tmp:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x3
   677  000004                     	ds	1
   678  000005                     ??_fputc:
   679  000005                     ??_color_click_init:
   680  000005                     ??___xxtofl:
   681  000005                     ?_color_read_Red:
   682                           	callstack 0
   683  000005                     ?_color_read_Blue:
   684                           	callstack 0
   685  000005                     ?_color_read_Green:
   686                           	callstack 0
   687  000005                     ?_color_read_Clear:
   688                           	callstack 0
   689  000005                     toggle_light@lightnumber:
   690                           	callstack 0
   691  000005                     ___wmul@product:
   692                           	callstack 0
   693  000005                     ___flge@ff2:
   694                           	callstack 0
   695  000005                     ___fladd@a:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x4
   699  000005                     	ds	2
   700  000007                     ??_color_read_Red:
   701  000007                     ??_color_read_Blue:
   702  000007                     ??_color_read_Green:
   703  000007                     ??_color_read_Clear:
   704  000007                     ?___awdiv:
   705                           	callstack 0
   706  000007                     ___awdiv@dividend:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x6
   710  000007                     	ds	2
   711  000009                     ??___fladd:
   712  000009                     ??___flge:
   713  000009                     ___xxtofl@sign:
   714                           	callstack 0
   715  000009                     ___awdiv@divisor:
   716                           	callstack 0
   717  000009                     ___aodiv@divisor:
   718                           	callstack 0
   719  000009                     ___aomod@divisor:
   720                           	callstack 0
   721                           
   722                           ; 8 bytes @ 0x8
   723  000009                     	ds	1
   724  00000A                     ___xxtofl@exp:
   725                           	callstack 0
   726  00000A                     color_read_Red@tmp:
   727                           	callstack 0
   728  00000A                     color_read_Blue@tmp:
   729                           	callstack 0
   730  00000A                     color_read_Green@tmp:
   731                           	callstack 0
   732  00000A                     color_read_Clear@tmp:
   733                           	callstack 0
   734  00000A                     fputs@s:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x9
   738  00000A                     	ds	1
   739  00000B                     ___awdiv@counter:
   740                           	callstack 0
   741  00000B                     ___xxtofl@arg:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0xA
   745  00000B                     	ds	1
   746  00000C                     ___awdiv@sign:
   747                           	callstack 0
   748  00000C                     read_color@m:
   749                           	callstack 0
   750  00000C                     calibrate_white@w:
   751                           	callstack 0
   752  00000C                     fputs@fp:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0xB
   756  00000C                     	ds	1
   757  00000D                     ___fladd@signs:
   758                           	callstack 0
   759  00000D                     ___awdiv@quotient:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0xC
   763  00000D                     	ds	1
   764  00000E                     ??_calibrate_white:
   765  00000E                     ___fladd@aexp:
   766                           	callstack 0
   767  00000E                     fputs@c:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0xD
   771  00000E                     	ds	1
   772  00000F                     ?___fldiv:
   773                           	callstack 0
   774  00000F                     ___fladd@bexp:
   775                           	callstack 0
   776  00000F                     setMotorPWM@m:
   777                           	callstack 0
   778  00000F                     fputs@i:
   779                           	callstack 0
   780  00000F                     ___fldiv@b:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0xE
   784  00000F                     	ds	1
   785  000010                     ___fladd@grs:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0xF
   789  000010                     	ds	1
   790  000011                     ??_setMotorPWM:
   791  000011                     ?_pad:
   792                           	callstack 0
   793  000011                     ?___flsub:
   794                           	callstack 0
   795  000011                     ___aodiv@counter:
   796                           	callstack 0
   797  000011                     ___aomod@counter:
   798                           	callstack 0
   799  000011                     pad@fp:
   800                           	callstack 0
   801  000011                     ___flsub@b:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x10
   805  000011                     	ds	1
   806  000012                     ___aodiv@sign:
   807                           	callstack 0
   808  000012                     ___aomod@sign:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x11
   812  000012                     	ds	1
   813  000013                     ?_abs:
   814                           	callstack 0
   815  000013                     pad@buf:
   816                           	callstack 0
   817  000013                     abs@a:
   818                           	callstack 0
   819  000013                     ___fldiv@a:
   820                           	callstack 0
   821  000013                     ___aodiv@quotient:
   822                           	callstack 0
   823                           
   824                           ; 8 bytes @ 0x12
   825  000013                     	ds	2
   826  000015                     ??_abs:
   827  000015                     pad@p:
   828                           	callstack 0
   829  000015                     ___flsub@a:
   830                           	callstack 0
   831                           
   832                           ; 4 bytes @ 0x14
   833  000015                     	ds	2
   834  000017                     ??___fldiv:
   835  000017                     ??_pad:
   836                           
   837                           ; 1 bytes @ 0x16
   838  000017                     	ds	1
   839  000018                     setMotorPWM@PWMduty:
   840                           	callstack 0
   841  000018                     pad@i:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x17
   845  000018                     	ds	1
   846  000019                     
   847                           ; 1 bytes @ 0x18
   848  000019                     	ds	1
   849  00001A                     stop@mL:
   850                           	callstack 0
   851  00001A                     fullSpeedAhead@mL:
   852                           	callstack 0
   853  00001A                     fullSpeedBack@mL:
   854                           	callstack 0
   855  00001A                     pad@w:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x19
   859  00001A                     	ds	1
   860  00001B                     ___fldiv@rem:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x1A
   864  00001B                     	ds	1
   865  00001C                     ?_dtoa:
   866                           	callstack 0
   867  00001C                     stop@mR:
   868                           	callstack 0
   869  00001C                     fullSpeedAhead@mR:
   870                           	callstack 0
   871  00001C                     fullSpeedBack@mR:
   872                           	callstack 0
   873  00001C                     dtoa@fp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x1B
   877  00001C                     	ds	2
   878  00001E                     ??_stop:
   879  00001E                     ??_fullSpeedAhead:
   880  00001E                     ??_fullSpeedBack:
   881  00001E                     dtoa@d:
   882                           	callstack 0
   883                           
   884                           ; 8 bytes @ 0x1D
   885  00001E                     	ds	1
   886  00001F                     ___fldiv@sign:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x1E
   890  00001F                     	ds	1
   891  000020                     turn45@mL:
   892                           	callstack 0
   893  000020                     turnLeft@mL:
   894                           	callstack 0
   895  000020                     turnRight@mL:
   896                           	callstack 0
   897  000020                     fullSpeedAhead_test@mL:
   898                           	callstack 0
   899  000020                     short_reverse@mL:
   900                           	callstack 0
   901  000020                     short_burst@mL:
   902                           	callstack 0
   903  000020                     ___fldiv@new_exp:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x1F
   907  000020                     	ds	2
   908  000022                     turn45@mR:
   909                           	callstack 0
   910  000022                     turnLeft@mR:
   911                           	callstack 0
   912  000022                     turnRight@mR:
   913                           	callstack 0
   914  000022                     fullSpeedAhead_test@mR:
   915                           	callstack 0
   916  000022                     short_reverse@mR:
   917                           	callstack 0
   918  000022                     short_burst@mR:
   919                           	callstack 0
   920  000022                     ___fldiv@grs:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x21
   924  000022                     	ds	2
   925  000024                     ??_short_burst:
   926  000024                     ??_fullSpeedAhead_test:
   927  000024                     turn45@turn_time:
   928                           	callstack 0
   929  000024                     turnLeft@angle_left:
   930                           	callstack 0
   931  000024                     turnRight@angle_right:
   932                           	callstack 0
   933  000024                     short_reverse@instruction:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x23
   937  000024                     	ds	1
   938  000025                     ??_turnLeft:
   939  000025                     ??_turnRight:
   940  000025                     ??_short_reverse:
   941  000025                     turn45@direction:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x24
   945  000025                     	ds	1
   946  000026                     ??_turn45:
   947  000026                     ??_dtoa:
   948  000026                     ___fldiv@bexp:
   949                           	callstack 0
   950  000026                     turnRight@delay_135:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x25
   954  000026                     	ds	1
   955  000027                     ___fldiv@aexp:
   956                           	callstack 0
   957  000027                     turn45@delay_1306:
   958                           	callstack 0
   959  000027                     turnLeft@delay_135:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x26
   963  000027                     	ds	1
   964  000028                     ?___flmul:
   965                           	callstack 0
   966  000028                     turnRight@delay_180:
   967                           	callstack 0
   968  000028                     ___flmul@b:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x27
   972  000028                     	ds	1
   973  000029                     turn45@delay:
   974                           	callstack 0
   975  000029                     turnLeft@delay_180:
   976                           	callstack 0
   977                           
   978                           ; 2 bytes @ 0x28
   979  000029                     	ds	1
   980  00002A                     turnRight@i:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x29
   984  00002A                     	ds	1
   985  00002B                     turn45@i_1304:
   986                           	callstack 0
   987  00002B                     turnLeft@i:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x2A
   991  00002B                     	ds	1
   992  00002C                     turnRight@i_1350:
   993                           	callstack 0
   994  00002C                     ___flmul@a:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x2B
   998  00002C                     	ds	1
   999  00002D                     turn45@i_1307:
  1000                           	callstack 0
  1001  00002D                     turnLeft@i_1328:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x2C
  1005  00002D                     	ds	1
  1006  00002E                     turnRight@i_1351:
  1007                           	callstack 0
  1008  00002E                     _dtoa$2892:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x2D
  1012  00002E                     	ds	1
  1013  00002F                     turn45@i:
  1014                           	callstack 0
  1015  00002F                     turnLeft@i_1329:
  1016                           	callstack 0
  1017                           
  1018                           ; 2 bytes @ 0x2E
  1019  00002F                     	ds	1
  1020  000030                     ??___flmul:
  1021  000030                     turnRight@delay:
  1022                           	callstack 0
  1023  000030                     goback@mL:
  1024                           	callstack 0
  1025  000030                     dtoa@p:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x2F
  1029  000030                     	ds	1
  1030  000031                     turnLeft@delay:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x30
  1034  000031                     	ds	1
  1035  000032                     goback@mR:
  1036                           	callstack 0
  1037  000032                     dtoa@w:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x31
  1041  000032                     	ds	1
  1042  000033                     test_action@mL:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x32
  1046  000033                     	ds	1
  1047  000034                     ??_goback:
  1048  000034                     ___flmul@sign:
  1049                           	callstack 0
  1050  000034                     dtoa@s:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x33
  1054  000034                     	ds	1
  1055  000035                     test_action@mR:
  1056                           	callstack 0
  1057  000035                     ___flmul@grs:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x34
  1061  000035                     	ds	1
  1062  000036                     goback@i:
  1063                           	callstack 0
  1064  000036                     dtoa@n:
  1065                           	callstack 0
  1066                           
  1067                           ; 8 bytes @ 0x35
  1068  000036                     	ds	1
  1069  000037                     calibration_motor@mL:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x36
  1073  000037                     	ds	1
  1074  000038                     action@mL:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x37
  1078  000038                     	ds	1
  1079  000039                     ___flmul@aexp:
  1080                           	callstack 0
  1081  000039                     calibration_motor@mR:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x38
  1085  000039                     	ds	1
  1086  00003A                     ___flmul@bexp:
  1087                           	callstack 0
  1088  00003A                     action@mR:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x39
  1092  00003A                     	ds	1
  1093  00003B                     ??_calibration_motor:
  1094  00003B                     ___flmul@prod:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x3A
  1098  00003B                     	ds	1
  1099  00003C                     action@color:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x3B
  1103  00003C                     	ds	2
  1104  00003E                     dtoa@i:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x3D
  1108  00003E                     	ds	1
  1109  00003F                     ___flmul@temp:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x3E
  1113  00003F                     	ds	1
  1114  000040                     ?_vfpfcnvrt:
  1115                           	callstack 0
  1116  000040                     vfpfcnvrt@fp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x3F
  1120  000040                     	ds	1
  1121  000041                     ?_roundf:
  1122                           	callstack 0
  1123  000041                     roundf@x:
  1124                           	callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x40
  1127  000041                     	ds	1
  1128  000042                     vfpfcnvrt@fmt:
  1129                           	callstack 0
  1130                           
  1131                           ; 2 bytes @ 0x41
  1132  000042                     	ds	2
  1133  000044                     vfpfcnvrt@ap:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x43
  1137  000044                     	ds	1
  1138  000045                     ??_roundf:
  1139                           
  1140                           ; 1 bytes @ 0x44
  1141  000045                     	ds	1
  1142  000046                     ??_vfpfcnvrt:
  1143                           
  1144                           ; 1 bytes @ 0x45
  1145  000046                     	ds	2
  1146  000048                     vfpfcnvrt@ll:
  1147                           	callstack 0
  1148                           
  1149                           ; 8 bytes @ 0x47
  1150  000048                     	ds	1
  1151  000049                     _roundf$3234:
  1152                           	callstack 0
  1153                           
  1154                           ; 4 bytes @ 0x48
  1155  000049                     	ds	4
  1156  00004D                     roundf@e:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x4C
  1160  00004D                     	ds	2
  1161  00004F                     _roundf$3233:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x4E
  1165  00004F                     	ds	1
  1166  000050                     ?_vfprintf:
  1167                           	callstack 0
  1168  000050                     vfprintf@fp:
  1169                           	callstack 0
  1170                           
  1171                           ; 2 bytes @ 0x4F
  1172  000050                     	ds	2
  1173  000052                     vfprintf@fmt:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x51
  1177  000052                     	ds	1
  1178  000053                     roundf@u:
  1179                           	callstack 0
  1180                           
  1181                           ; 4 bytes @ 0x52
  1182  000053                     	ds	1
  1183  000054                     vfprintf@ap:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x53
  1187  000054                     	ds	2
  1188  000056                     vfprintf@cfmt:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x55
  1192  000056                     	ds	1
  1193  000057                     roundf@y:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x56
  1197  000057                     	ds	1
  1198  000058                     
  1199                           ; 1 bytes @ 0x57
  1200  000058                     	ds	3
  1201  00005B                     ?___fltol:
  1202                           	callstack 0
  1203  00005B                     ___fltol@f1:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x5A
  1207  00005B                     	ds	4
  1208  00005F                     
  1209                           ; 1 bytes @ 0x5E
  1210 ;;
  1211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1212 ;;
  1213 ;; *************** function _main *****************
  1214 ;; Defined at:
  1215 ;;		line 29 in file "main.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1220 ;;  j               1    0        unsigned char 
  1221 ;;  i               1    0        unsigned char 
  1222 ;;  white          28  121[BANK1 ] struct white_card
  1223 ;;  motorR          9  158[BANK1 ] struct DC_motor
  1224 ;;  motorL          9  149[BANK1 ] struct DC_motor
  1225 ;;  rgb             8  113[BANK1 ] struct color_rgb
  1226 ;;  amb             8  100[BANK1 ] struct color_rgb
  1227 ;;  amb_light       2  108[BANK1 ] unsigned int 
  1228 ;;  accident        1  112[BANK1 ] unsigned char 
  1229 ;;  stop_signal     1  111[BANK1 ] unsigned char 
  1230 ;;  setup           1  110[BANK1 ] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;      Locals:         0       0     167       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Totals:         0       2     167       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;Total ram usage:      169 bytes
  1245 ;; Hardware stack levels required when called: 9
  1246 ;; This function calls:
  1247 ;;		_I2C_2_Master_Init
  1248 ;;		_Interrupts_init
  1249 ;;		_LED_OFF
  1250 ;;		_Timer0_init
  1251 ;;		_action
  1252 ;;		_amb_light_measure
  1253 ;;		_buggylight_init
  1254 ;;		_calibrate_white
  1255 ;;		_calibration_motor
  1256 ;;		_color_click_init
  1257 ;;		_detect_color
  1258 ;;		_distance_measure
  1259 ;;		_fullSpeedAhead
  1260 ;;		_goback
  1261 ;;		_initDCmotorsPWM
  1262 ;;		_initDCmotors_parameter
  1263 ;;		_initUSART4
  1264 ;;		_pin_init
  1265 ;;		_sendStringSerial4
  1266 ;;		_short_burst
  1267 ;;		_sprintf
  1268 ;;		_stop
  1269 ;;		_verify_color
  1270 ;; This function is called by:
  1271 ;;		Startup code after reset
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text0
  1276  002DA2                     __ptext0:
  1277                           	callstack 0
  1278  002DA2                     _main:
  1279                           	callstack 22
  1280  002DA2                     
  1281                           ;main.c: 32:     I2C_2_Master_Init();
  1282  002DA2  ECA6  F02D         	call	_I2C_2_Master_Init	;wreg free
  1283  002DA6                     
  1284                           ;main.c: 33:     color_click_init();
  1285  002DA6  EC74  F02D         	call	_color_click_init	;wreg free
  1286  002DAA                     
  1287                           ;main.c: 34:     initDCmotorsPWM(199);
  1288  002DAA  0E00               	movlw	0
  1289  002DAC  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1290  002DAE  0EC7               	movlw	199
  1291  002DB0  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1292  002DB2  EC80  F02C         	call	_initDCmotorsPWM	;wreg free
  1293  002DB6                     
  1294                           ;main.c: 35:     buggylight_init();
  1295  002DB6  EC7C  F02E         	call	_buggylight_init	;wreg free
  1296  002DBA                     
  1297                           ;main.c: 36:     initUSART4();
  1298  002DBA  EC52  F02E         	call	_initUSART4	;wreg free
  1299  002DBE                     
  1300                           ;main.c: 37:     Timer0_init();
  1301  002DBE  EC61  F02E         	call	_Timer0_init	;wreg free
  1302  002DC2                     
  1303                           ;main.c: 38:     Interrupts_init();
  1304  002DC2  EC8D  F02E         	call	_Interrupts_init	;wreg free
  1305  002DC6                     
  1306                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1307  002DC6  ECE2  F02D         	call	_pin_init	;wreg free
  1308  002DCA                     
  1309                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1310  002DCA  0E95               	movlw	low main@motorL
  1311  002DCC  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1312  002DCE  0E01               	movlw	high main@motorL
  1313  002DD0  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1314  002DD2  0E9E               	movlw	low main@motorR
  1315  002DD4  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1316  002DD6  0E01               	movlw	high main@motorR
  1317  002DD8  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1318  002DDA  EC3E  F027         	call	_initDCmotors_parameter	;wreg free
  1319  002DDE                     
  1320                           ;main.c: 49:     unsigned char stop_signal = 0;
  1321  002DDE  0E00               	movlw	0
  1322  002DE0  0101               	movlb	1	; () banked
  1323  002DE2  6F6F               	movwf	main@stop_signal& (0+255),b
  1324  002DE4                     
  1325                           ; BSR set to: 1
  1326                           ;main.c: 51:     unsigned int amb_light = 0;
  1327  002DE4  0E00               	movlw	0
  1328  002DE6  6F6D               	movwf	(main@amb_light+1)& (0+255),b
  1329  002DE8  0E00               	movlw	0
  1330  002DEA  6F6C               	movwf	main@amb_light& (0+255),b
  1331  002DEC                     
  1332                           ; BSR set to: 1
  1333                           ;main.c: 53:     unsigned char setup = 0;
  1334  002DEC  0E00               	movlw	0
  1335  002DEE  6F6E               	movwf	main@setup& (0+255),b
  1336  002DF0                     
  1337                           ; BSR set to: 1
  1338                           ;main.c: 55:     if (0 == 0){
  1339  002DF0  0E00               	movlw	0
  1340  002DF2  6F70               	movwf	main@accident& (0+255),b
  1341                           
  1342                           ;main.c: 56:         while(!setup){
  1343  002DF4  EF77  F017         	goto	l5547
  1344  002DF8                     l5517:
  1345                           
  1346                           ; BSR set to: 1
  1347                           ;main.c: 57:             LED_OFF();
  1348  002DF8  EC12  F02E         	call	_LED_OFF	;wreg free
  1349  002DFC                     
  1350                           ;main.c: 58:             LATDbits.LATD7 = 1;
  1351  002DFC  8E7C               	bsf	124,7,c	;volatile
  1352  002DFE                     
  1353                           ;main.c: 59:             LATHbits.LATH3 = 1;
  1354  002DFE  8680               	bsf	128,3,c	;volatile
  1355  002E00                     l482:
  1356  002E00  B48E               	btfsc	142,2,c	;volatile
  1357  002E02  EF05  F017         	goto	u5891
  1358  002E06  EF07  F017         	goto	u5890
  1359  002E0A                     u5891:
  1360  002E0A  EF00  F017         	goto	l482
  1361  002E0E                     u5890:
  1362  002E0E                     
  1363                           ;main.c: 61:             if (!PORTFbits.RF2){calibrate_white(&white); LATDbits.LATD7 = 0
      +                          ; _delay((unsigned long)((500)*(64000000/4000.0)));}
  1364  002E0E  B48E               	btfsc	142,2,c	;volatile
  1365  002E10  EF0C  F017         	goto	u5901
  1366  002E14  EF0E  F017         	goto	u5900
  1367  002E18                     u5901:
  1368  002E18  EF21  F017         	goto	l486
  1369  002E1C                     u5900:
  1370  002E1C  0E79               	movlw	low main@white
  1371  002E1E  6E0C               	movwf	calibrate_white@w^0,c
  1372  002E20  0E01               	movlw	high main@white
  1373  002E22  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1374  002E24  ECB3  F01C         	call	_calibrate_white	;wreg free
  1375  002E28  9E7C               	bcf	124,7,c	;volatile
  1376  002E2A  0E29               	movlw	41
  1377  002E2C  0100               	movlb	0	; () banked
  1378  002E2E  6FDA               	movwf	(??_main+1)& (0+255),b
  1379  002E30  0E96               	movlw	150
  1380  002E32  6FD9               	movwf	??_main& (0+255),b
  1381  002E34  0E7F               	movlw	127
  1382  002E36                     u6107:
  1383  002E36  2EE8               	decfsz	wreg,f,c
  1384  002E38  D7FE               	bra	u6107
  1385  002E3A  2FD9               	decfsz	??_main& (0+255),f,b
  1386  002E3C  D7FC               	bra	u6107
  1387  002E3E  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1388  002E40  D7FA               	bra	u6107
  1389  002E42                     l486:
  1390  002E42  B68E               	btfsc	142,3,c	;volatile
  1391  002E44  EF26  F017         	goto	u5911
  1392  002E48  EF28  F017         	goto	u5910
  1393  002E4C                     u5911:
  1394  002E4C  EF21  F017         	goto	l486
  1395  002E50                     u5910:
  1396  002E50                     
  1397                           ;main.c: 63:             if (!PORTFbits.RF3){amb_light = amb_light_measure(&amb); LATHbi
      +                          ts.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  1398  002E50  B68E               	btfsc	142,3,c	;volatile
  1399  002E52  EF2D  F017         	goto	u5921
  1400  002E56  EF2F  F017         	goto	u5920
  1401  002E5A                     u5921:
  1402  002E5A  EF47  F017         	goto	l5535
  1403  002E5E                     u5920:
  1404  002E5E  0E64               	movlw	low main@amb
  1405  002E60  0100               	movlb	0	; () banked
  1406  002E62  6FA8               	movwf	amb_light_measure@amb& (0+255),b
  1407  002E64  0E01               	movlw	high main@amb
  1408  002E66  6FA9               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1409  002E68  EC2D  F025         	call	_amb_light_measure	;wreg free
  1410  002E6C  C0A8  F16C         	movff	?_amb_light_measure,main@amb_light
  1411  002E70  C0A9  F16D         	movff	?_amb_light_measure+1,main@amb_light+1
  1412  002E74  9680               	bcf	128,3,c	;volatile
  1413  002E76  0E29               	movlw	41
  1414  002E78  0100               	movlb	0	; () banked
  1415  002E7A  6FDA               	movwf	(??_main+1)& (0+255),b
  1416  002E7C  0E96               	movlw	150
  1417  002E7E  6FD9               	movwf	??_main& (0+255),b
  1418  002E80  0E7F               	movlw	127
  1419  002E82                     u6117:
  1420  002E82  2EE8               	decfsz	wreg,f,c
  1421  002E84  D7FE               	bra	u6117
  1422  002E86  2FD9               	decfsz	??_main& (0+255),f,b
  1423  002E88  D7FC               	bra	u6117
  1424  002E8A  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1425  002E8C  D7FA               	bra	u6117
  1426  002E8E                     l5535:
  1427                           
  1428                           ;main.c: 64:             LATDbits.LATD7 = 1;
  1429  002E8E  8E7C               	bsf	124,7,c	;volatile
  1430  002E90                     
  1431                           ;main.c: 65:             if (!PORTFbits.RF3){calibration_motor(&motorL, &motorR);}
  1432  002E90  B68E               	btfsc	142,3,c	;volatile
  1433  002E92  EF4D  F017         	goto	u5931
  1434  002E96  EF4F  F017         	goto	u5930
  1435  002E9A                     u5931:
  1436  002E9A  EF59  F017         	goto	l491
  1437  002E9E                     u5930:
  1438  002E9E  0E95               	movlw	low main@motorL
  1439  002EA0  6E37               	movwf	calibration_motor@mL^0,c
  1440  002EA2  0E01               	movlw	high main@motorL
  1441  002EA4  6E38               	movwf	(calibration_motor@mL+1)^0,c
  1442  002EA6  0E9E               	movlw	low main@motorR
  1443  002EA8  6E39               	movwf	calibration_motor@mR^0,c
  1444  002EAA  0E01               	movlw	high main@motorR
  1445  002EAC  6E3A               	movwf	(calibration_motor@mR+1)^0,c
  1446  002EAE  ECC7  F026         	call	_calibration_motor	;wreg free
  1447  002EB2                     l491:
  1448  002EB2  B48E               	btfsc	142,2,c	;volatile
  1449  002EB4  EF5E  F017         	goto	u5941
  1450  002EB8  EF60  F017         	goto	u5940
  1451  002EBC                     u5941:
  1452  002EBC  EF59  F017         	goto	l491
  1453  002EC0                     u5940:
  1454  002EC0                     
  1455                           ;main.c: 67:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; setup = 1;_delay((unsig
      +                          ned long)((500)*(64000000/4000.0)));}
  1456  002EC0  B48E               	btfsc	142,2,c	;volatile
  1457  002EC2  EF65  F017         	goto	u5951
  1458  002EC6  EF67  F017         	goto	u5950
  1459  002ECA                     u5951:
  1460  002ECA  EF77  F017         	goto	l5547
  1461  002ECE                     u5950:
  1462  002ECE  9E7C               	bcf	124,7,c	;volatile
  1463  002ED0  0E01               	movlw	1
  1464  002ED2  0101               	movlb	1	; () banked
  1465  002ED4  6F6E               	movwf	main@setup& (0+255),b
  1466  002ED6                     
  1467                           ; BSR set to: 1
  1468  002ED6  0E29               	movlw	41
  1469  002ED8  0100               	movlb	0	; () banked
  1470  002EDA  6FDA               	movwf	(??_main+1)& (0+255),b
  1471  002EDC  0E96               	movlw	150
  1472  002EDE  6FD9               	movwf	??_main& (0+255),b
  1473  002EE0  0E7F               	movlw	127
  1474  002EE2                     u6127:
  1475  002EE2  2EE8               	decfsz	wreg,f,c
  1476  002EE4  D7FE               	bra	u6127
  1477  002EE6  2FD9               	decfsz	??_main& (0+255),f,b
  1478  002EE8  D7FC               	bra	u6127
  1479  002EEA  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1480  002EEC  D7FA               	bra	u6127
  1481  002EEE                     l5547:
  1482                           
  1483                           ;main.c: 56:         while(!setup){
  1484  002EEE  0101               	movlb	1	; () banked
  1485  002EF0  516E               	movf	main@setup& (0+255),w,b
  1486  002EF2  B4D8               	btfsc	status,2,c
  1487  002EF4  EF7E  F017         	goto	u5961
  1488  002EF8  EF80  F017         	goto	u5960
  1489  002EFC                     u5961:
  1490  002EFC  EFFC  F016         	goto	l5517
  1491  002F00                     u5960:
  1492  002F00                     l5553:
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;main.c: 91:             T0CON0bits.T0EN=1;
  1496  002F00  8ED5               	bsf	213,7,c	;volatile
  1497  002F02                     
  1498                           ; BSR set to: 1
  1499                           ;main.c: 92:             start_move = centisecond;
  1500  002F02  C1D3  F1D1         	movff	_centisecond,_start_move
  1501  002F06  C1D4  F1D2         	movff	_centisecond+1,_start_move+1
  1502                           
  1503                           ;main.c: 93:             while (stop_signal == 0){
  1504  002F0A  EFA2  F017         	goto	l5561
  1505  002F0E                     l5557:
  1506                           
  1507                           ; BSR set to: 1
  1508                           ;main.c: 94:                 fullSpeedAhead(&motorL, &motorR);
  1509  002F0E  0E95               	movlw	low main@motorL
  1510  002F10  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1511  002F12  0E01               	movlw	high main@motorL
  1512  002F14  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1513  002F16  0E9E               	movlw	low main@motorR
  1514  002F18  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1515  002F1A  0E01               	movlw	high main@motorR
  1516  002F1C  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1517  002F1E  ECD2  F028         	call	_fullSpeedAhead	;wreg free
  1518  002F22                     
  1519                           ;main.c: 95:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1520  002F22  0E95               	movlw	low main@motorL
  1521  002F24  0100               	movlb	0	; () banked
  1522  002F26  6FA8               	movwf	distance_measure@mL& (0+255),b
  1523  002F28  0E01               	movlw	high main@motorL
  1524  002F2A  6FA9               	movwf	(distance_measure@mL+1)& (0+255),b
  1525  002F2C  0E9E               	movlw	low main@motorR
  1526  002F2E  6FAA               	movwf	distance_measure@mR& (0+255),b
  1527  002F30  0E01               	movlw	high main@motorR
  1528  002F32  6FAB               	movwf	(distance_measure@mR+1)& (0+255),b
  1529  002F34  C16C  F0AC         	movff	main@amb_light,distance_measure@amb_light
  1530  002F38  C16D  F0AD         	movff	main@amb_light+1,distance_measure@amb_light+1
  1531  002F3C  EC6F  F028         	call	_distance_measure	;wreg free
  1532  002F40  0101               	movlb	1	; () banked
  1533  002F42  6F6F               	movwf	main@stop_signal& (0+255),b
  1534  002F44                     l5561:
  1535                           
  1536                           ; BSR set to: 1
  1537                           ;main.c: 93:             while (stop_signal == 0){
  1538  002F44  516F               	movf	main@stop_signal& (0+255),w,b
  1539  002F46  B4D8               	btfsc	status,2,c
  1540  002F48  EFA8  F017         	goto	u5971
  1541  002F4C  EFAA  F017         	goto	u5970
  1542  002F50                     u5971:
  1543  002F50  EF87  F017         	goto	l5557
  1544  002F54                     u5970:
  1545  002F54                     
  1546                           ; BSR set to: 1
  1547                           ;main.c: 97:             T0CON0bits.T0EN=0;
  1548  002F54  9ED5               	bcf	213,7,c	;volatile
  1549                           
  1550                           ;main.c: 98:             stop_move = centisecond;
  1551  002F56  C1D3  F1CF         	movff	_centisecond,_stop_move
  1552  002F5A  C1D4  F1D0         	movff	_centisecond+1,_stop_move+1
  1553  002F5E                     
  1554                           ; BSR set to: 1
  1555                           ;main.c: 99:             if ((stop_move-start_move)>1){
  1556  002F5E  51D1               	movf	_start_move& (0+255),w,b
  1557  002F60  5DCF               	subwf	_stop_move& (0+255),w,b
  1558  002F62  0100               	movlb	0	; () banked
  1559  002F64  6FD9               	movwf	??_main& (0+255),b
  1560  002F66  0101               	movlb	1	; () banked
  1561  002F68  51D2               	movf	(_start_move+1)& (0+255),w,b
  1562  002F6A  59D0               	subwfb	(_stop_move+1)& (0+255),w,b
  1563  002F6C  0100               	movlb	0	; () banked
  1564  002F6E  6FDA               	movwf	(??_main+1)& (0+255),b
  1565  002F70  51DA               	movf	(??_main+1)& (0+255),w,b
  1566  002F72  E109               	bnz	u5980
  1567  002F74  0E02               	movlw	2
  1568  002F76  5DD9               	subwf	??_main& (0+255),w,b
  1569  002F78  A0D8               	btfss	status,0,c
  1570  002F7A  EFC1  F017         	goto	u5981
  1571  002F7E  EFC3  F017         	goto	u5980
  1572  002F82                     u5981:
  1573  002F82  EFDD  F017         	goto	l5569
  1574  002F86                     u5980:
  1575  002F86                     
  1576                           ; BSR set to: 0
  1577                           ;main.c: 100:                 memory[array_index] = (stop_move-start_move);
  1578  002F86  0101               	movlb	1	; () banked
  1579  002F88  51D1               	movf	_start_move& (0+255),w,b
  1580  002F8A  5DCF               	subwf	_stop_move& (0+255),w,b
  1581  002F8C  0100               	movlb	0	; () banked
  1582  002F8E  6FD9               	movwf	??_main& (0+255),b
  1583  002F90  0101               	movlb	1	; () banked
  1584  002F92  51D2               	movf	(_start_move+1)& (0+255),w,b
  1585  002F94  59D0               	subwfb	(_stop_move+1)& (0+255),w,b
  1586  002F96  0100               	movlb	0	; () banked
  1587  002F98  6FDA               	movwf	(??_main+1)& (0+255),b
  1588  002F9A  0101               	movlb	1	; () banked
  1589  002F9C  51D6               	movf	_array_index& (0+255),w,b
  1590  002F9E  0D02               	mullw	2
  1591  002FA0  0EA7               	movlw	low _memory
  1592  002FA2  24F3               	addwf	243,w,c
  1593  002FA4  6ED9               	movwf	fsr2l,c
  1594  002FA6  0E01               	movlw	high _memory
  1595  002FA8  20F4               	addwfc	prodh,w,c
  1596  002FAA  6EDA               	movwf	fsr2h,c
  1597  002FAC  C0D9  FFDE         	movff	??_main,postinc2
  1598  002FB0  C0DA  FFDD         	movff	??_main+1,postdec2
  1599  002FB4                     
  1600                           ; BSR set to: 1
  1601                           ;main.c: 101:                 array_index++;
  1602  002FB4  2BD6               	incf	_array_index& (0+255),f,b
  1603                           
  1604                           ;main.c: 102:             }
  1605  002FB6  EFF4  F017         	goto	l5577
  1606  002FBA                     l5569:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;main.c: 104:                 accident++;
  1610  002FBA  0101               	movlb	1	; () banked
  1611  002FBC  2B70               	incf	main@accident& (0+255),f,b
  1612  002FBE                     
  1613                           ; BSR set to: 1
  1614                           ;main.c: 105:                 if (accident >= 10){
  1615  002FBE  0E09               	movlw	9
  1616  002FC0  6570               	cpfsgt	main@accident& (0+255),b
  1617  002FC2  EFE5  F017         	goto	u5991
  1618  002FC6  EFE7  F017         	goto	u5990
  1619  002FCA                     u5991:
  1620  002FCA  EFF4  F017         	goto	l5577
  1621  002FCE                     u5990:
  1622  002FCE                     
  1623                           ; BSR set to: 1
  1624                           ;main.c: 106:                     goback(&motorL, &motorR);
  1625  002FCE  0E95               	movlw	low main@motorL
  1626  002FD0  6E30               	movwf	goback@mL^0,c
  1627  002FD2  0E01               	movlw	high main@motorL
  1628  002FD4  6E31               	movwf	(goback@mL+1)^0,c
  1629  002FD6  0E9E               	movlw	low main@motorR
  1630  002FD8  6E32               	movwf	goback@mR^0,c
  1631  002FDA  0E01               	movlw	high main@motorR
  1632  002FDC  6E33               	movwf	(goback@mR+1)^0,c
  1633  002FDE  EC25  F015         	call	_goback	;wreg free
  1634  002FE2                     
  1635                           ;main.c: 107:                     accident = 0;
  1636  002FE2  0E00               	movlw	0
  1637  002FE4  0101               	movlb	1	; () banked
  1638  002FE6  6F70               	movwf	main@accident& (0+255),b
  1639  002FE8                     l5577:
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;main.c: 111:             char buf[100];;main.c: 112:             sprintf(buf,"%d\r\n",(
      +                          stop_move-start_move));
  1643  002FE8  0E00               	movlw	low main@buf
  1644  002FEA  0100               	movlb	0	; () banked
  1645  002FEC  6F9E               	movwf	sprintf@s& (0+255),b
  1646  002FEE  0E01               	movlw	high main@buf
  1647  002FF0  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1648  002FF2  0E0E               	movlw	low (STR_1+9)
  1649  002FF4  6FA0               	movwf	sprintf@fmt& (0+255),b
  1650  002FF6  0E0E               	movlw	high (STR_1+9)
  1651  002FF8  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1652  002FFA  0101               	movlb	1	; () banked
  1653  002FFC  51D1               	movf	_start_move& (0+255),w,b
  1654  002FFE  5DCF               	subwf	_stop_move& (0+255),w,b
  1655  003000  0100               	movlb	0	; () banked
  1656  003002  6FA2               	movwf	(?_sprintf+4)& (0+255),b
  1657  003004  0101               	movlb	1	; () banked
  1658  003006  51D2               	movf	(_start_move+1)& (0+255),w,b
  1659  003008  59D0               	subwfb	(_stop_move+1)& (0+255),w,b
  1660  00300A  0100               	movlb	0	; () banked
  1661  00300C  6FA3               	movwf	(?_sprintf+5)& (0+255),b
  1662  00300E  EC30  F02B         	call	_sprintf	;wreg free
  1663  003012                     
  1664                           ;main.c: 113:             sendStringSerial4(buf);
  1665  003012  0E00               	movlw	low main@buf
  1666  003014  6E02               	movwf	sendStringSerial4@string^0,c
  1667  003016  0E01               	movlw	high main@buf
  1668  003018  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1669  00301A  EC8E  F02D         	call	_sendStringSerial4	;wreg free
  1670  00301E                     
  1671                           ;main.c: 115:             stop(&motorL, &motorR);
  1672  00301E  0E95               	movlw	low main@motorL
  1673  003020  6E1A               	movwf	stop@mL^0,c
  1674  003022  0E01               	movlw	high main@motorL
  1675  003024  6E1B               	movwf	(stop@mL+1)^0,c
  1676  003026  0E9E               	movlw	low main@motorR
  1677  003028  6E1C               	movwf	stop@mR^0,c
  1678  00302A  0E01               	movlw	high main@motorR
  1679  00302C  6E1D               	movwf	(stop@mR+1)^0,c
  1680  00302E  EC96  F029         	call	_stop	;wreg free
  1681  003032                     
  1682                           ;main.c: 116:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1683  003032  0E52               	movlw	82
  1684  003034  0100               	movlb	0	; () banked
  1685  003036  6FDA               	movwf	(??_main+1)& (0+255),b
  1686  003038  0E2B               	movlw	43
  1687  00303A  6FD9               	movwf	??_main& (0+255),b
  1688  00303C  0E00               	movlw	0
  1689  00303E                     u6137:
  1690  00303E  2EE8               	decfsz	wreg,f,c
  1691  003040  D7FE               	bra	u6137
  1692  003042  2FD9               	decfsz	??_main& (0+255),f,b
  1693  003044  D7FC               	bra	u6137
  1694  003046  2FDA               	decfsz	(??_main+1)& (0+255),f,b
  1695  003048  D7FA               	bra	u6137
  1696  00304A  F000               	nop	
  1697  00304C                     
  1698                           ;main.c: 117:             short_burst(&motorL, &motorR);
  1699  00304C  0E95               	movlw	low main@motorL
  1700  00304E  6E20               	movwf	short_burst@mL^0,c
  1701  003050  0E01               	movlw	high main@motorL
  1702  003052  6E21               	movwf	(short_burst@mL+1)^0,c
  1703  003054  0E9E               	movlw	low main@motorR
  1704  003056  6E22               	movwf	short_burst@mR^0,c
  1705  003058  0E01               	movlw	high main@motorR
  1706  00305A  6E23               	movwf	(short_burst@mR+1)^0,c
  1707  00305C  EC5F  F02C         	call	_short_burst	;wreg free
  1708  003060                     
  1709                           ;main.c: 118:             color = detect_color(&rgb, &white);
  1710  003060  0E71               	movlw	low main@rgb
  1711  003062  0100               	movlb	0	; () banked
  1712  003064  6FAF               	movwf	detect_color@m& (0+255),b
  1713  003066  0E01               	movlw	high main@rgb
  1714  003068  6FB0               	movwf	(detect_color@m+1)& (0+255),b
  1715  00306A  0E79               	movlw	low main@white
  1716  00306C  6FB1               	movwf	detect_color@w& (0+255),b
  1717  00306E  0E01               	movlw	high main@white
  1718  003070  6FB2               	movwf	(detect_color@w+1)& (0+255),b
  1719  003072  EC0A  F007         	call	_detect_color	;wreg free
  1720  003076  0101               	movlb	1	; () banked
  1721  003078  6FD5               	movwf	_color& (0+255),b
  1722  00307A                     
  1723                           ; BSR set to: 1
  1724                           ;main.c: 119:             color = verify_color(color, &rgb, &white);
  1725  00307A  0E71               	movlw	low main@rgb
  1726  00307C  0100               	movlb	0	; () banked
  1727  00307E  6FD0               	movwf	verify_color@m& (0+255),b
  1728  003080  0E01               	movlw	high main@rgb
  1729  003082  6FD1               	movwf	(verify_color@m+1)& (0+255),b
  1730  003084  0E79               	movlw	low main@white
  1731  003086  6FD2               	movwf	verify_color@w& (0+255),b
  1732  003088  0E01               	movlw	high main@white
  1733  00308A  6FD3               	movwf	(verify_color@w+1)& (0+255),b
  1734  00308C  0101               	movlb	1	; () banked
  1735  00308E  51D5               	movf	_color& (0+255),w,b
  1736  003090  EC92  F02A         	call	_verify_color
  1737  003094  0101               	movlb	1	; () banked
  1738  003096  6FD5               	movwf	_color& (0+255),b
  1739  003098                     
  1740                           ; BSR set to: 1
  1741                           ;main.c: 120:             if (color!= 0){action(color, &motorL, &motorR); color = 0;}
  1742  003098  51D5               	movf	_color& (0+255),w,b
  1743  00309A  B4D8               	btfsc	status,2,c
  1744  00309C  EF52  F018         	goto	u6001
  1745  0030A0  EF54  F018         	goto	u6000
  1746  0030A4                     u6001:
  1747  0030A4  EF62  F018         	goto	l5597
  1748  0030A8                     u6000:
  1749  0030A8                     
  1750                           ; BSR set to: 1
  1751  0030A8  0E95               	movlw	low main@motorL
  1752  0030AA  6E38               	movwf	action@mL^0,c
  1753  0030AC  0E01               	movlw	high main@motorL
  1754  0030AE  6E39               	movwf	(action@mL+1)^0,c
  1755  0030B0  0E9E               	movlw	low main@motorR
  1756  0030B2  6E3A               	movwf	action@mR^0,c
  1757  0030B4  0E01               	movlw	high main@motorR
  1758  0030B6  6E3B               	movwf	(action@mR+1)^0,c
  1759  0030B8  51D5               	movf	_color& (0+255),w,b
  1760  0030BA  EC68  F018         	call	_action
  1761  0030BE  0E00               	movlw	0
  1762  0030C0  0101               	movlb	1	; () banked
  1763  0030C2  6FD5               	movwf	_color& (0+255),b
  1764  0030C4                     l5597:
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;main.c: 121:             stop_signal = 0;
  1768  0030C4  0E00               	movlw	0
  1769  0030C6  6F6F               	movwf	main@stop_signal& (0+255),b
  1770  0030C8  EF80  F017         	goto	l5553
  1771  0030CC  EF18  F000         	goto	start
  1772  0030D0                     __end_of_main:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _verify_color *****************
  1776 ;; Defined at:
  1777 ;;		line 365 in file "color.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  color           1    wreg     unsigned char 
  1780 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1781 ;;		 -> main@rgb(8), 
  1782 ;;  w               2   52[BANK0 ] PTR struct white_card
  1783 ;;		 -> main@white(28), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  color           1   58[BANK0 ] unsigned char 
  1786 ;;  color2          2   56[BANK0 ] unsigned int 
  1787 ;;  color3          2    0        unsigned int 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      unsigned char 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;Total ram usage:        9 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 6
  1804 ;; This function calls:
  1805 ;;		_detect_color
  1806 ;; This function is called by:
  1807 ;;		_main
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text1
  1812  005524                     __ptext1:
  1813                           	callstack 0
  1814  005524                     _verify_color:
  1815                           	callstack 24
  1816                           
  1817                           ; BSR set to: 1
  1818                           ;incstack = 0
  1819                           ;verify_color@color stored from wreg
  1820  005524  0100               	movlb	0	; () banked
  1821  005526  6FD8               	movwf	verify_color@color& (0+255),b
  1822  005528                     
  1823                           ;color.c: 365: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 366: {;color.c: 367:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1824  005528  0E05               	movlw	5
  1825  00552A  0100               	movlb	0	; () banked
  1826  00552C  6FD5               	movwf	(??_verify_color+1)& (0+255),b
  1827  00552E  0E0F               	movlw	15
  1828  005530  6FD4               	movwf	??_verify_color& (0+255),b
  1829  005532  0EF1               	movlw	241
  1830  005534                     u6147:
  1831  005534  2EE8               	decfsz	wreg,f,c
  1832  005536  D7FE               	bra	u6147
  1833  005538  2FD4               	decfsz	??_verify_color& (0+255),f,b
  1834  00553A  D7FC               	bra	u6147
  1835  00553C  2FD5               	decfsz	(??_verify_color+1)& (0+255),f,b
  1836  00553E  D7FA               	bra	u6147
  1837  005540                     
  1838                           ;color.c: 368:     unsigned int color2, color3;;color.c: 369:     color2 = detect_color(
      +                          m,w);
  1839  005540  C0D0  F0AF         	movff	verify_color@m,detect_color@m
  1840  005544  C0D1  F0B0         	movff	verify_color@m+1,detect_color@m+1
  1841  005548  C0D2  F0B1         	movff	verify_color@w,detect_color@w
  1842  00554C  C0D3  F0B2         	movff	verify_color@w+1,detect_color@w+1
  1843  005550  EC0A  F007         	call	_detect_color	;wreg free
  1844  005554  0100               	movlb	0	; () banked
  1845  005556  6FD4               	movwf	??_verify_color& (0+255),b
  1846  005558  51D4               	movf	??_verify_color& (0+255),w,b
  1847  00555A  6FD6               	movwf	verify_color@color2& (0+255),b
  1848  00555C  6BD7               	clrf	(verify_color@color2+1)& (0+255),b
  1849  00555E                     
  1850                           ; BSR set to: 0
  1851                           ;color.c: 370:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1852  00555E  0E05               	movlw	5
  1853  005560  0100               	movlb	0	; () banked
  1854  005562  6FD5               	movwf	(??_verify_color+1)& (0+255),b
  1855  005564  0E0F               	movlw	15
  1856  005566  6FD4               	movwf	??_verify_color& (0+255),b
  1857  005568  0EF1               	movlw	241
  1858  00556A                     u6157:
  1859  00556A  2EE8               	decfsz	wreg,f,c
  1860  00556C  D7FE               	bra	u6157
  1861  00556E  2FD4               	decfsz	??_verify_color& (0+255),f,b
  1862  005570  D7FC               	bra	u6157
  1863  005572  2FD5               	decfsz	(??_verify_color+1)& (0+255),f,b
  1864  005574  D7FA               	bra	u6157
  1865  005576                     
  1866                           ;color.c: 372:     if (color == color2){return color;}
  1867  005576  0100               	movlb	0	; () banked
  1868  005578  51D8               	movf	verify_color@color& (0+255),w,b
  1869  00557A  6FD4               	movwf	??_verify_color& (0+255),b
  1870  00557C  6BD5               	clrf	(??_verify_color+1)& (0+255),b
  1871  00557E  51D6               	movf	verify_color@color2& (0+255),w,b
  1872  005580  19D4               	xorwf	??_verify_color& (0+255),w,b
  1873  005582  E107               	bnz	u5721
  1874  005584  51D7               	movf	(verify_color@color2+1)& (0+255),w,b
  1875  005586  19D5               	xorwf	(??_verify_color+1)& (0+255),w,b
  1876  005588  A4D8               	btfss	status,2,c
  1877  00558A  EFC9  F02A         	goto	u5721
  1878  00558E  EFCB  F02A         	goto	u5720
  1879  005592                     u5721:
  1880  005592  EFCE  F02A         	goto	l5289
  1881  005596                     u5720:
  1882  005596                     
  1883                           ; BSR set to: 0
  1884  005596  51D8               	movf	verify_color@color& (0+255),w,b
  1885  005598  EFCF  F02A         	goto	l153
  1886  00559C                     l5289:
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;color.c: 375:         return color;}
  1890  00559C  0E00               	movlw	0
  1891  00559E                     l153:
  1892                           
  1893                           ; BSR set to: 0
  1894  00559E  0012               	return		;funcret
  1895  0055A0                     __end_of_verify_color:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _detect_color *****************
  1899 ;; Defined at:
  1900 ;;		line 290 in file "color.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  1903 ;;		 -> main@rgb(8), 
  1904 ;;  w               2   19[BANK0 ] PTR struct white_card
  1905 ;;		 -> main@white(28), 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  BG              2   44[BANK0 ] unsigned int 
  1908 ;;  RR              2   42[BANK0 ] unsigned int 
  1909 ;;  GG              2   39[BANK0 ] unsigned int 
  1910 ;;  BR              2   37[BANK0 ] unsigned int 
  1911 ;;  GB              2   35[BANK0 ] unsigned int 
  1912 ;;  RB              2   33[BANK0 ] unsigned int 
  1913 ;;  BB              2   31[BANK0 ] unsigned int 
  1914 ;;  GR              2   29[BANK0 ] unsigned int 
  1915 ;;  BC              2   27[BANK0 ] unsigned int 
  1916 ;;  RG              2   25[BANK0 ] unsigned int 
  1917 ;;  color           1   41[BANK0 ] unsigned char 
  1918 ;; Return value:  Size  Location     Type
  1919 ;;                  1    wreg      unsigned char 
  1920 ;; Registers used:
  1921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;Total ram usage:       33 bytes
  1932 ;; Hardware stack levels used: 1
  1933 ;; Hardware stack levels required when called: 5
  1934 ;; This function calls:
  1935 ;;		_LED_B
  1936 ;;		_LED_G
  1937 ;;		_LED_R
  1938 ;;		___fldiv
  1939 ;;		___flmul
  1940 ;;		___xxtofl
  1941 ;;		_compare
  1942 ;;		_lroundf
  1943 ;;		_read_color
  1944 ;;		_toggle_light
  1945 ;; This function is called by:
  1946 ;;		_verify_color
  1947 ;;		_main
  1948 ;;		_test_function
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text2
  1953  000E14                     __ptext2:
  1954                           	callstack 0
  1955  000E14                     _detect_color:
  1956                           	callstack 24
  1957  000E14  0E00               	movlw	0
  1958  000E16  0100               	movlb	0	; () banked
  1959  000E18  6FB8               	movwf	(detect_color@RG+1)& (0+255),b
  1960  000E1A  0E00               	movlw	0
  1961  000E1C  6FB7               	movwf	detect_color@RG& (0+255),b
  1962  000E1E  0E00               	movlw	0
  1963  000E20  6FC0               	movwf	(detect_color@RB+1)& (0+255),b
  1964  000E22  0E00               	movlw	0
  1965  000E24  6FBF               	movwf	detect_color@RB& (0+255),b
  1966  000E26  0E00               	movlw	0
  1967  000E28  6FBC               	movwf	(detect_color@GR+1)& (0+255),b
  1968  000E2A  0E00               	movlw	0
  1969  000E2C  6FBB               	movwf	detect_color@GR& (0+255),b
  1970  000E2E  0E00               	movlw	0
  1971  000E30  6FC6               	movwf	(detect_color@GG+1)& (0+255),b
  1972  000E32  0E00               	movlw	0
  1973  000E34  6FC5               	movwf	detect_color@GG& (0+255),b
  1974  000E36  0E00               	movlw	0
  1975  000E38  6FC2               	movwf	(detect_color@GB+1)& (0+255),b
  1976  000E3A  0E00               	movlw	0
  1977  000E3C  6FC1               	movwf	detect_color@GB& (0+255),b
  1978  000E3E  0E00               	movlw	0
  1979  000E40  6FC4               	movwf	(detect_color@BR+1)& (0+255),b
  1980  000E42  0E00               	movlw	0
  1981  000E44  6FC3               	movwf	detect_color@BR& (0+255),b
  1982  000E46  0E00               	movlw	0
  1983  000E48  6FCB               	movwf	(detect_color@BG+1)& (0+255),b
  1984  000E4A  0E00               	movlw	0
  1985  000E4C  6FCA               	movwf	detect_color@BG& (0+255),b
  1986  000E4E  0E00               	movlw	0
  1987  000E50  6FBE               	movwf	(detect_color@BB+1)& (0+255),b
  1988  000E52  0E00               	movlw	0
  1989  000E54  6FBD               	movwf	detect_color@BB& (0+255),b
  1990  000E56  0E00               	movlw	0
  1991  000E58  6FBA               	movwf	(detect_color@BC+1)& (0+255),b
  1992  000E5A  0E00               	movlw	0
  1993  000E5C  6FB9               	movwf	detect_color@BC& (0+255),b
  1994                           
  1995                           ;color.c: 296:     unsigned char color = 0;
  1996  000E5E  0E00               	movlw	0
  1997  000E60  6FC7               	movwf	detect_color@color& (0+255),b
  1998  000E62                     
  1999                           ; BSR set to: 0
  2000                           ;color.c: 298:     LED_R();
  2001  000E62  EC02  F02E         	call	_LED_R	;wreg free
  2002  000E66                     
  2003                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2004  000E66  0E09               	movlw	9
  2005  000E68  0100               	movlb	0	; () banked
  2006  000E6A  6FB4               	movwf	(??_detect_color+1)& (0+255),b
  2007  000E6C  0E1E               	movlw	30
  2008  000E6E  6FB3               	movwf	??_detect_color& (0+255),b
  2009  000E70  0EE4               	movlw	228
  2010  000E72                     u6167:
  2011  000E72  2EE8               	decfsz	wreg,f,c
  2012  000E74  D7FE               	bra	u6167
  2013  000E76  2FB3               	decfsz	??_detect_color& (0+255),f,b
  2014  000E78  D7FC               	bra	u6167
  2015  000E7A  2FB4               	decfsz	(??_detect_color+1)& (0+255),f,b
  2016  000E7C  D7FA               	bra	u6167
  2017  000E7E  F000               	nop	
  2018  000E80                     
  2019                           ;color.c: 300:     read_color(m);
  2020  000E80  C0AF  F00C         	movff	detect_color@m,read_color@m
  2021  000E84  C0B0  F00D         	movff	detect_color@m+1,read_color@m+1
  2022  000E88  EC01  F02B         	call	_read_color	;wreg free
  2023  000E8C                     
  2024                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2025  000E8C  C0B1  FFD9         	movff	detect_color@w,fsr2l
  2026  000E90  C0B2  FFDA         	movff	detect_color@w+1,fsr2h
  2027  000E94  CFDE F0B3          	movff	postinc2,??_detect_color
  2028  000E98  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2029  000E9C  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2030  000EA0  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2031  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2032  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2033  000EA8  0E00               	movlw	0
  2034  000EAA  EC41  F021         	call	___xxtofl
  2035  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2036  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2037  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2038  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2039  000EBE  C0AF  FFD9         	movff	detect_color@m,fsr2l
  2040  000EC2  C0B0  FFDA         	movff	detect_color@m+1,fsr2h
  2041  000EC6  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2042  000ECA  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2043  000ECE  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2044  000ED2  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2045  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2046  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2047  000EDA  0E00               	movlw	0
  2048  000EDC  EC41  F021         	call	___xxtofl
  2049  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2050  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2051  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2052  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2053  000EF0  EC58  F013         	call	___fldiv	;wreg free
  2054  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  2055  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2056  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2057  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2058  000F04  0E00               	movlw	0
  2059  000F06  6E2C               	movwf	___flmul@a^0,c
  2060  000F08  0E00               	movlw	0
  2061  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  2062  000F0C  0EC8               	movlw	200
  2063  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  2064  000F10  0E42               	movlw	66
  2065  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  2066  000F14  EC6C  F00F         	call	___flmul	;wreg free
  2067  000F18  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2068  000F1C  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2069  000F20  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2070  000F24  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2071  000F28                     
  2072                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2073  000F28  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2074  000F2C  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2075  000F30  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2076  000F34  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2077  000F38  EC20  F02D         	call	_lroundf	;wreg free
  2078  000F3C  C0A4  F0C8         	movff	?_lroundf,detect_color@RR
  2079  000F40  C0A5  F0C9         	movff	?_lroundf+1,detect_color@RR+1
  2080  000F44  0100               	movlb	0	; () banked
  2081  000F46  EE20 F002          	lfsr	2,2
  2082  000F4A  51B1               	movf	detect_color@w& (0+255),w,b
  2083  000F4C  26D9               	addwf	fsr2l,f,c
  2084  000F4E  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2085  000F50  22DA               	addwfc	fsr2h,f,c
  2086  000F52  CFDE F0B3          	movff	postinc2,??_detect_color
  2087  000F56  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2088  000F5A  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2089  000F5E  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2090  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  2091  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  2092  000F66  0E00               	movlw	0
  2093  000F68  EC41  F021         	call	___xxtofl
  2094  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2095  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2096  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2097  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2098  000F7C  0100               	movlb	0	; () banked
  2099  000F7E  EE20 F002          	lfsr	2,2
  2100  000F82  51AF               	movf	detect_color@m& (0+255),w,b
  2101  000F84  26D9               	addwf	fsr2l,f,c
  2102  000F86  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2103  000F88  22DA               	addwfc	fsr2h,f,c
  2104  000F8A  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2105  000F8E  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2106  000F92  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2107  000F96  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2108  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2109  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2110  000F9E  0E00               	movlw	0
  2111  000FA0  EC41  F021         	call	___xxtofl
  2112  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2113  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2114  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2115  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2116  000FB4  EC58  F013         	call	___fldiv	;wreg free
  2117  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  2118  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2119  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2120  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2121  000FC8  0E00               	movlw	0
  2122  000FCA  6E2C               	movwf	___flmul@a^0,c
  2123  000FCC  0E00               	movlw	0
  2124  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  2125  000FD0  0EC8               	movlw	200
  2126  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  2127  000FD4  0E42               	movlw	66
  2128  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  2129  000FD8  EC6C  F00F         	call	___flmul	;wreg free
  2130  000FDC  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2131  000FE0  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2132  000FE4  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2133  000FE8  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2134  000FEC  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2135  000FF0  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2136  000FF4  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2137  000FF8  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2138  000FFC  EC20  F02D         	call	_lroundf	;wreg free
  2139  001000  0100               	movlb	0	; () banked
  2140  001002  EE20 F004          	lfsr	2,4
  2141  001006  51B1               	movf	detect_color@w& (0+255),w,b
  2142  001008  26D9               	addwf	fsr2l,f,c
  2143  00100A  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2144  00100C  22DA               	addwfc	fsr2h,f,c
  2145  00100E  CFDE F0B3          	movff	postinc2,??_detect_color
  2146  001012  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2147  001016  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2148  00101A  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2149  00101E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2150  001020  6A04               	clrf	(___xxtofl@val+3)^0,c
  2151  001022  0E00               	movlw	0
  2152  001024  EC41  F021         	call	___xxtofl
  2153  001028  C001  F013         	movff	?___xxtofl,___fldiv@a
  2154  00102C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2155  001030  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2156  001034  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2157  001038  0100               	movlb	0	; () banked
  2158  00103A  EE20 F004          	lfsr	2,4
  2159  00103E  51AF               	movf	detect_color@m& (0+255),w,b
  2160  001040  26D9               	addwf	fsr2l,f,c
  2161  001042  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2162  001044  22DA               	addwfc	fsr2h,f,c
  2163  001046  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2164  00104A  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2165  00104E  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2166  001052  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2167  001056  6A03               	clrf	(___xxtofl@val+2)^0,c
  2168  001058  6A04               	clrf	(___xxtofl@val+3)^0,c
  2169  00105A  0E00               	movlw	0
  2170  00105C  EC41  F021         	call	___xxtofl
  2171  001060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2172  001064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2173  001068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2174  00106C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2175  001070  EC58  F013         	call	___fldiv	;wreg free
  2176  001074  C00F  F028         	movff	?___fldiv,___flmul@b
  2177  001078  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2178  00107C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2179  001080  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2180  001084  0E00               	movlw	0
  2181  001086  6E2C               	movwf	___flmul@a^0,c
  2182  001088  0E00               	movlw	0
  2183  00108A  6E2D               	movwf	(___flmul@a+1)^0,c
  2184  00108C  0EC8               	movlw	200
  2185  00108E  6E2E               	movwf	(___flmul@a+2)^0,c
  2186  001090  0E42               	movlw	66
  2187  001092  6E2F               	movwf	(___flmul@a+3)^0,c
  2188  001094  EC6C  F00F         	call	___flmul	;wreg free
  2189  001098  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2190  00109C  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2191  0010A0  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2192  0010A4  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2193  0010A8  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2194  0010AC  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2195  0010B0  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2196  0010B4  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2197  0010B8  EC20  F02D         	call	_lroundf	;wreg free
  2198  0010BC  C0A4  F0BF         	movff	?_lroundf,detect_color@RB
  2199  0010C0  C0A5  F0C0         	movff	?_lroundf+1,detect_color@RB+1
  2200  0010C4                     
  2201                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2202  0010C4  0E05               	movlw	5
  2203  0010C6  0100               	movlb	0	; () banked
  2204  0010C8  6FB4               	movwf	(??_detect_color+1)& (0+255),b
  2205  0010CA  0E0F               	movlw	15
  2206  0010CC  6FB3               	movwf	??_detect_color& (0+255),b
  2207  0010CE  0EF1               	movlw	241
  2208  0010D0                     u6177:
  2209  0010D0  2EE8               	decfsz	wreg,f,c
  2210  0010D2  D7FE               	bra	u6177
  2211  0010D4  2FB3               	decfsz	??_detect_color& (0+255),f,b
  2212  0010D6  D7FC               	bra	u6177
  2213  0010D8  2FB4               	decfsz	(??_detect_color+1)& (0+255),f,b
  2214  0010DA  D7FA               	bra	u6177
  2215  0010DC                     
  2216                           ;color.c: 309:     LED_G();
  2217  0010DC  EC22  F02E         	call	_LED_G	;wreg free
  2218  0010E0                     
  2219                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2220  0010E0  0E09               	movlw	9
  2221  0010E2  0100               	movlb	0	; () banked
  2222  0010E4  6FB4               	movwf	(??_detect_color+1)& (0+255),b
  2223  0010E6  0E1E               	movlw	30
  2224  0010E8  6FB3               	movwf	??_detect_color& (0+255),b
  2225  0010EA  0EE4               	movlw	228
  2226  0010EC                     u6187:
  2227  0010EC  2EE8               	decfsz	wreg,f,c
  2228  0010EE  D7FE               	bra	u6187
  2229  0010F0  2FB3               	decfsz	??_detect_color& (0+255),f,b
  2230  0010F2  D7FC               	bra	u6187
  2231  0010F4  2FB4               	decfsz	(??_detect_color+1)& (0+255),f,b
  2232  0010F6  D7FA               	bra	u6187
  2233  0010F8  F000               	nop	
  2234  0010FA                     
  2235                           ;color.c: 311:     read_color(m);
  2236  0010FA  C0AF  F00C         	movff	detect_color@m,read_color@m
  2237  0010FE  C0B0  F00D         	movff	detect_color@m+1,read_color@m+1
  2238  001102  EC01  F02B         	call	_read_color	;wreg free
  2239  001106                     
  2240                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2241  001106  0100               	movlb	0	; () banked
  2242  001108  EE20 F006          	lfsr	2,6
  2243  00110C  51B1               	movf	detect_color@w& (0+255),w,b
  2244  00110E  26D9               	addwf	fsr2l,f,c
  2245  001110  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2246  001112  22DA               	addwfc	fsr2h,f,c
  2247  001114  CFDE F0B3          	movff	postinc2,??_detect_color
  2248  001118  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2249  00111C  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2250  001120  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2251  001124  6A03               	clrf	(___xxtofl@val+2)^0,c
  2252  001126  6A04               	clrf	(___xxtofl@val+3)^0,c
  2253  001128  0E00               	movlw	0
  2254  00112A  EC41  F021         	call	___xxtofl
  2255  00112E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2256  001132  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2257  001136  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2258  00113A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2259  00113E  C0AF  FFD9         	movff	detect_color@m,fsr2l
  2260  001142  C0B0  FFDA         	movff	detect_color@m+1,fsr2h
  2261  001146  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2262  00114A  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2263  00114E  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2264  001152  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2265  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2266  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2267  00115A  0E00               	movlw	0
  2268  00115C  EC41  F021         	call	___xxtofl
  2269  001160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2270  001164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2271  001168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2272  00116C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2273  001170  EC58  F013         	call	___fldiv	;wreg free
  2274  001174  C00F  F028         	movff	?___fldiv,___flmul@b
  2275  001178  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2276  00117C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2277  001180  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2278  001184  0E00               	movlw	0
  2279  001186  6E2C               	movwf	___flmul@a^0,c
  2280  001188  0E00               	movlw	0
  2281  00118A  6E2D               	movwf	(___flmul@a+1)^0,c
  2282  00118C  0EC8               	movlw	200
  2283  00118E  6E2E               	movwf	(___flmul@a+2)^0,c
  2284  001190  0E42               	movlw	66
  2285  001192  6E2F               	movwf	(___flmul@a+3)^0,c
  2286  001194  EC6C  F00F         	call	___flmul	;wreg free
  2287  001198  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2288  00119C  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2289  0011A0  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2290  0011A4  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2291  0011A8                     
  2292                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2293  0011A8  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2294  0011AC  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2295  0011B0  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2296  0011B4  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2297  0011B8  EC20  F02D         	call	_lroundf	;wreg free
  2298  0011BC  C0A4  F0BB         	movff	?_lroundf,detect_color@GR
  2299  0011C0  C0A5  F0BC         	movff	?_lroundf+1,detect_color@GR+1
  2300  0011C4  0100               	movlb	0	; () banked
  2301  0011C6  EE20 F008          	lfsr	2,8
  2302  0011CA  51B1               	movf	detect_color@w& (0+255),w,b
  2303  0011CC  26D9               	addwf	fsr2l,f,c
  2304  0011CE  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2305  0011D0  22DA               	addwfc	fsr2h,f,c
  2306  0011D2  CFDE F0B3          	movff	postinc2,??_detect_color
  2307  0011D6  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2308  0011DA  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2309  0011DE  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2310  0011E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2311  0011E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2312  0011E6  0E00               	movlw	0
  2313  0011E8  EC41  F021         	call	___xxtofl
  2314  0011EC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2315  0011F0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2316  0011F4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2317  0011F8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2318  0011FC  0100               	movlb	0	; () banked
  2319  0011FE  EE20 F002          	lfsr	2,2
  2320  001202  51AF               	movf	detect_color@m& (0+255),w,b
  2321  001204  26D9               	addwf	fsr2l,f,c
  2322  001206  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2323  001208  22DA               	addwfc	fsr2h,f,c
  2324  00120A  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2325  00120E  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2326  001212  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2327  001216  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2328  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2329  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2330  00121E  0E00               	movlw	0
  2331  001220  EC41  F021         	call	___xxtofl
  2332  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2333  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2334  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2335  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2336  001234  EC58  F013         	call	___fldiv	;wreg free
  2337  001238  C00F  F028         	movff	?___fldiv,___flmul@b
  2338  00123C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2339  001240  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2340  001244  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2341  001248  0E00               	movlw	0
  2342  00124A  6E2C               	movwf	___flmul@a^0,c
  2343  00124C  0E00               	movlw	0
  2344  00124E  6E2D               	movwf	(___flmul@a+1)^0,c
  2345  001250  0EC8               	movlw	200
  2346  001252  6E2E               	movwf	(___flmul@a+2)^0,c
  2347  001254  0E42               	movlw	66
  2348  001256  6E2F               	movwf	(___flmul@a+3)^0,c
  2349  001258  EC6C  F00F         	call	___flmul	;wreg free
  2350  00125C  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2351  001260  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2352  001264  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2353  001268  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2354  00126C  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2355  001270  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2356  001274  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2357  001278  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2358  00127C  EC20  F02D         	call	_lroundf	;wreg free
  2359  001280  C0A4  F0C5         	movff	?_lroundf,detect_color@GG
  2360  001284  C0A5  F0C6         	movff	?_lroundf+1,detect_color@GG+1
  2361  001288  0100               	movlb	0	; () banked
  2362  00128A  EE20 F00A          	lfsr	2,10
  2363  00128E  51B1               	movf	detect_color@w& (0+255),w,b
  2364  001290  26D9               	addwf	fsr2l,f,c
  2365  001292  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2366  001294  22DA               	addwfc	fsr2h,f,c
  2367  001296  CFDE F0B3          	movff	postinc2,??_detect_color
  2368  00129A  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2369  00129E  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2370  0012A2  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2371  0012A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2372  0012A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2373  0012AA  0E00               	movlw	0
  2374  0012AC  EC41  F021         	call	___xxtofl
  2375  0012B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2376  0012B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2377  0012B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2378  0012BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2379  0012C0  0100               	movlb	0	; () banked
  2380  0012C2  EE20 F004          	lfsr	2,4
  2381  0012C6  51AF               	movf	detect_color@m& (0+255),w,b
  2382  0012C8  26D9               	addwf	fsr2l,f,c
  2383  0012CA  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2384  0012CC  22DA               	addwfc	fsr2h,f,c
  2385  0012CE  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2386  0012D2  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2387  0012D6  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2388  0012DA  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2389  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2390  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2391  0012E2  0E00               	movlw	0
  2392  0012E4  EC41  F021         	call	___xxtofl
  2393  0012E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2394  0012EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2395  0012F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2396  0012F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2397  0012F8  EC58  F013         	call	___fldiv	;wreg free
  2398  0012FC  C00F  F028         	movff	?___fldiv,___flmul@b
  2399  001300  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2400  001304  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2401  001308  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2402  00130C  0E00               	movlw	0
  2403  00130E  6E2C               	movwf	___flmul@a^0,c
  2404  001310  0E00               	movlw	0
  2405  001312  6E2D               	movwf	(___flmul@a+1)^0,c
  2406  001314  0EC8               	movlw	200
  2407  001316  6E2E               	movwf	(___flmul@a+2)^0,c
  2408  001318  0E42               	movlw	66
  2409  00131A  6E2F               	movwf	(___flmul@a+3)^0,c
  2410  00131C  EC6C  F00F         	call	___flmul	;wreg free
  2411  001320  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2412  001324  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2413  001328  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2414  00132C  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2415  001330  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2416  001334  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2417  001338  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2418  00133C  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2419  001340  EC20  F02D         	call	_lroundf	;wreg free
  2420  001344  C0A4  F0C1         	movff	?_lroundf,detect_color@GB
  2421  001348  C0A5  F0C2         	movff	?_lroundf+1,detect_color@GB+1
  2422  00134C                     
  2423                           ;color.c: 319:     LED_B();
  2424  00134C  EC32  F02E         	call	_LED_B	;wreg free
  2425  001350                     
  2426                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2427  001350  0E09               	movlw	9
  2428  001352  0100               	movlb	0	; () banked
  2429  001354  6FB4               	movwf	(??_detect_color+1)& (0+255),b
  2430  001356  0E1E               	movlw	30
  2431  001358  6FB3               	movwf	??_detect_color& (0+255),b
  2432  00135A  0EE4               	movlw	228
  2433  00135C                     u6197:
  2434  00135C  2EE8               	decfsz	wreg,f,c
  2435  00135E  D7FE               	bra	u6197
  2436  001360  2FB3               	decfsz	??_detect_color& (0+255),f,b
  2437  001362  D7FC               	bra	u6197
  2438  001364  2FB4               	decfsz	(??_detect_color+1)& (0+255),f,b
  2439  001366  D7FA               	bra	u6197
  2440  001368  F000               	nop	
  2441  00136A                     
  2442                           ;color.c: 321:     read_color(m);
  2443  00136A  C0AF  F00C         	movff	detect_color@m,read_color@m
  2444  00136E  C0B0  F00D         	movff	detect_color@m+1,read_color@m+1
  2445  001372  EC01  F02B         	call	_read_color	;wreg free
  2446  001376                     
  2447                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2448  001376  0100               	movlb	0	; () banked
  2449  001378  EE20 F00C          	lfsr	2,12
  2450  00137C  51B1               	movf	detect_color@w& (0+255),w,b
  2451  00137E  26D9               	addwf	fsr2l,f,c
  2452  001380  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2453  001382  22DA               	addwfc	fsr2h,f,c
  2454  001384  CFDE F0B3          	movff	postinc2,??_detect_color
  2455  001388  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2456  00138C  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2457  001390  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2458  001394  6A03               	clrf	(___xxtofl@val+2)^0,c
  2459  001396  6A04               	clrf	(___xxtofl@val+3)^0,c
  2460  001398  0E00               	movlw	0
  2461  00139A  EC41  F021         	call	___xxtofl
  2462  00139E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2463  0013A2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2464  0013A6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2465  0013AA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2466  0013AE  C0AF  FFD9         	movff	detect_color@m,fsr2l
  2467  0013B2  C0B0  FFDA         	movff	detect_color@m+1,fsr2h
  2468  0013B6  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2469  0013BA  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2470  0013BE  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2471  0013C2  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2472  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2473  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2474  0013CA  0E00               	movlw	0
  2475  0013CC  EC41  F021         	call	___xxtofl
  2476  0013D0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2477  0013D4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2478  0013D8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2479  0013DC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2480  0013E0  EC58  F013         	call	___fldiv	;wreg free
  2481  0013E4  C00F  F028         	movff	?___fldiv,___flmul@b
  2482  0013E8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2483  0013EC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2484  0013F0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2485  0013F4  0E00               	movlw	0
  2486  0013F6  6E2C               	movwf	___flmul@a^0,c
  2487  0013F8  0E00               	movlw	0
  2488  0013FA  6E2D               	movwf	(___flmul@a+1)^0,c
  2489  0013FC  0EC8               	movlw	200
  2490  0013FE  6E2E               	movwf	(___flmul@a+2)^0,c
  2491  001400  0E42               	movlw	66
  2492  001402  6E2F               	movwf	(___flmul@a+3)^0,c
  2493  001404  EC6C  F00F         	call	___flmul	;wreg free
  2494  001408  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2495  00140C  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2496  001410  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2497  001414  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2498  001418                     
  2499                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2500  001418  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2501  00141C  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2502  001420  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2503  001424  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2504  001428  EC20  F02D         	call	_lroundf	;wreg free
  2505  00142C  C0A4  F0C3         	movff	?_lroundf,detect_color@BR
  2506  001430  C0A5  F0C4         	movff	?_lroundf+1,detect_color@BR+1
  2507  001434  0100               	movlb	0	; () banked
  2508  001436  EE20 F00E          	lfsr	2,14
  2509  00143A  51B1               	movf	detect_color@w& (0+255),w,b
  2510  00143C  26D9               	addwf	fsr2l,f,c
  2511  00143E  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2512  001440  22DA               	addwfc	fsr2h,f,c
  2513  001442  CFDE F0B3          	movff	postinc2,??_detect_color
  2514  001446  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2515  00144A  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2516  00144E  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2517  001452  6A03               	clrf	(___xxtofl@val+2)^0,c
  2518  001454  6A04               	clrf	(___xxtofl@val+3)^0,c
  2519  001456  0E00               	movlw	0
  2520  001458  EC41  F021         	call	___xxtofl
  2521  00145C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2522  001460  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2523  001464  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2524  001468  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2525  00146C  0100               	movlb	0	; () banked
  2526  00146E  EE20 F002          	lfsr	2,2
  2527  001472  51AF               	movf	detect_color@m& (0+255),w,b
  2528  001474  26D9               	addwf	fsr2l,f,c
  2529  001476  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2530  001478  22DA               	addwfc	fsr2h,f,c
  2531  00147A  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2532  00147E  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2533  001482  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2534  001486  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2535  00148A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2536  00148C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2537  00148E  0E00               	movlw	0
  2538  001490  EC41  F021         	call	___xxtofl
  2539  001494  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2540  001498  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2541  00149C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2542  0014A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2543  0014A4  EC58  F013         	call	___fldiv	;wreg free
  2544  0014A8  C00F  F028         	movff	?___fldiv,___flmul@b
  2545  0014AC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2546  0014B0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2547  0014B4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2548  0014B8  0E00               	movlw	0
  2549  0014BA  6E2C               	movwf	___flmul@a^0,c
  2550  0014BC  0E00               	movlw	0
  2551  0014BE  6E2D               	movwf	(___flmul@a+1)^0,c
  2552  0014C0  0EC8               	movlw	200
  2553  0014C2  6E2E               	movwf	(___flmul@a+2)^0,c
  2554  0014C4  0E42               	movlw	66
  2555  0014C6  6E2F               	movwf	(___flmul@a+3)^0,c
  2556  0014C8  EC6C  F00F         	call	___flmul	;wreg free
  2557  0014CC  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2558  0014D0  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2559  0014D4  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2560  0014D8  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2561  0014DC  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2562  0014E0  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2563  0014E4  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2564  0014E8  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2565  0014EC  EC20  F02D         	call	_lroundf	;wreg free
  2566  0014F0  C0A4  F0CA         	movff	?_lroundf,detect_color@BG
  2567  0014F4  C0A5  F0CB         	movff	?_lroundf+1,detect_color@BG+1
  2568  0014F8  0100               	movlb	0	; () banked
  2569  0014FA  EE20 F010          	lfsr	2,16
  2570  0014FE  51B1               	movf	detect_color@w& (0+255),w,b
  2571  001500  26D9               	addwf	fsr2l,f,c
  2572  001502  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2573  001504  22DA               	addwfc	fsr2h,f,c
  2574  001506  CFDE F0B3          	movff	postinc2,??_detect_color
  2575  00150A  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2576  00150E  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2577  001512  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2578  001516  6A03               	clrf	(___xxtofl@val+2)^0,c
  2579  001518  6A04               	clrf	(___xxtofl@val+3)^0,c
  2580  00151A  0E00               	movlw	0
  2581  00151C  EC41  F021         	call	___xxtofl
  2582  001520  C001  F013         	movff	?___xxtofl,___fldiv@a
  2583  001524  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2584  001528  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2585  00152C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2586  001530  0100               	movlb	0	; () banked
  2587  001532  EE20 F004          	lfsr	2,4
  2588  001536  51AF               	movf	detect_color@m& (0+255),w,b
  2589  001538  26D9               	addwf	fsr2l,f,c
  2590  00153A  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2591  00153C  22DA               	addwfc	fsr2h,f,c
  2592  00153E  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2593  001542  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2594  001546  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2595  00154A  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2596  00154E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2597  001550  6A04               	clrf	(___xxtofl@val+3)^0,c
  2598  001552  0E00               	movlw	0
  2599  001554  EC41  F021         	call	___xxtofl
  2600  001558  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2601  00155C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2602  001560  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2603  001564  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2604  001568  EC58  F013         	call	___fldiv	;wreg free
  2605  00156C  C00F  F028         	movff	?___fldiv,___flmul@b
  2606  001570  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2607  001574  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2608  001578  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2609  00157C  0E00               	movlw	0
  2610  00157E  6E2C               	movwf	___flmul@a^0,c
  2611  001580  0E00               	movlw	0
  2612  001582  6E2D               	movwf	(___flmul@a+1)^0,c
  2613  001584  0EC8               	movlw	200
  2614  001586  6E2E               	movwf	(___flmul@a+2)^0,c
  2615  001588  0E42               	movlw	66
  2616  00158A  6E2F               	movwf	(___flmul@a+3)^0,c
  2617  00158C  EC6C  F00F         	call	___flmul	;wreg free
  2618  001590  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2619  001594  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2620  001598  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2621  00159C  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2622  0015A0  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2623  0015A4  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2624  0015A8  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2625  0015AC  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2626  0015B0  EC20  F02D         	call	_lroundf	;wreg free
  2627  0015B4  C0A4  F0BD         	movff	?_lroundf,detect_color@BB
  2628  0015B8  C0A5  F0BE         	movff	?_lroundf+1,detect_color@BB+1
  2629  0015BC                     
  2630                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2631  0015BC  0100               	movlb	0	; () banked
  2632  0015BE  EE20 F01A          	lfsr	2,26
  2633  0015C2  51B1               	movf	detect_color@w& (0+255),w,b
  2634  0015C4  26D9               	addwf	fsr2l,f,c
  2635  0015C6  51B2               	movf	(detect_color@w+1)& (0+255),w,b
  2636  0015C8  22DA               	addwfc	fsr2h,f,c
  2637  0015CA  CFDE F0B3          	movff	postinc2,??_detect_color
  2638  0015CE  CFDD F0B4          	movff	postdec2,??_detect_color+1
  2639  0015D2  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2640  0015D6  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2641  0015DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2642  0015DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2643  0015DE  0E00               	movlw	0
  2644  0015E0  EC41  F021         	call	___xxtofl
  2645  0015E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  2646  0015E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2647  0015EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2648  0015F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2649  0015F4  0100               	movlb	0	; () banked
  2650  0015F6  EE20 F006          	lfsr	2,6
  2651  0015FA  51AF               	movf	detect_color@m& (0+255),w,b
  2652  0015FC  26D9               	addwf	fsr2l,f,c
  2653  0015FE  51B0               	movf	(detect_color@m+1)& (0+255),w,b
  2654  001600  22DA               	addwfc	fsr2h,f,c
  2655  001602  CFDE F0B5          	movff	postinc2,??_detect_color+2
  2656  001606  CFDD F0B6          	movff	postdec2,??_detect_color+3
  2657  00160A  C0B5  F001         	movff	??_detect_color+2,___xxtofl@val
  2658  00160E  C0B6  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2659  001612  6A03               	clrf	(___xxtofl@val+2)^0,c
  2660  001614  6A04               	clrf	(___xxtofl@val+3)^0,c
  2661  001616  0E00               	movlw	0
  2662  001618  EC41  F021         	call	___xxtofl
  2663  00161C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2664  001620  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2665  001624  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2666  001628  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2667  00162C  EC58  F013         	call	___fldiv	;wreg free
  2668  001630  C00F  F028         	movff	?___fldiv,___flmul@b
  2669  001634  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2670  001638  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2671  00163C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2672  001640  0E00               	movlw	0
  2673  001642  6E2C               	movwf	___flmul@a^0,c
  2674  001644  0E00               	movlw	0
  2675  001646  6E2D               	movwf	(___flmul@a+1)^0,c
  2676  001648  0EC8               	movlw	200
  2677  00164A  6E2E               	movwf	(___flmul@a+2)^0,c
  2678  00164C  0E42               	movlw	66
  2679  00164E  6E2F               	movwf	(___flmul@a+3)^0,c
  2680  001650  EC6C  F00F         	call	___flmul	;wreg free
  2681  001654  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2682  001658  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2683  00165C  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2684  001660  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2685  001664  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2686  001668  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2687  00166C  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2688  001670  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2689  001674  EC20  F02D         	call	_lroundf	;wreg free
  2690  001678                     
  2691                           ;color.c: 329:     if (compare(0, RR, 45)){
  2692  001678  0E00               	movlw	0
  2693  00167A  0100               	movlb	0	; () banked
  2694  00167C  6FA9               	movwf	(compare@lower+1)& (0+255),b
  2695  00167E  0E00               	movlw	0
  2696  001680  6FA8               	movwf	compare@lower& (0+255),b
  2697  001682  C0C8  F0AA         	movff	detect_color@RR,compare@value2compare
  2698  001686  C0C9  F0AB         	movff	detect_color@RR+1,compare@value2compare+1
  2699  00168A  0E00               	movlw	0
  2700  00168C  6FAD               	movwf	(compare@upper+1)& (0+255),b
  2701  00168E  0E2D               	movlw	45
  2702  001690  6FAC               	movwf	compare@upper& (0+255),b
  2703  001692  EC03  F02D         	call	_compare	;wreg free
  2704  001696  0900               	iorlw	0
  2705  001698  B4D8               	btfsc	status,2,c
  2706  00169A  EF51  F00B         	goto	u5391
  2707  00169E  EF53  F00B         	goto	u5390
  2708  0016A2                     u5391:
  2709  0016A2  EFC4  F00B         	goto	l4981
  2710  0016A6                     u5390:
  2711  0016A6                     
  2712                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  2713  0016A6  C0BD  F001         	movff	detect_color@BB,___xxtofl@val
  2714  0016AA  C0BE  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2715  0016AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2716  0016B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2717  0016B2  0E00               	movlw	0
  2718  0016B4  EC41  F021         	call	___xxtofl
  2719  0016B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2720  0016BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2721  0016C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2722  0016C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2723  0016C8  0100               	movlb	0	; () banked
  2724  0016CA  51CA               	movf	detect_color@BG& (0+255),w,b
  2725  0016CC  25C5               	addwf	detect_color@GG& (0+255),w,b
  2726  0016CE  6FB3               	movwf	??_detect_color& (0+255),b
  2727  0016D0  51CB               	movf	(detect_color@BG+1)& (0+255),w,b
  2728  0016D2  21C6               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2729  0016D4  6FB4               	movwf	(??_detect_color+1)& (0+255),b
  2730  0016D6  C0B3  F001         	movff	??_detect_color,___xxtofl@val
  2731  0016DA  C0B4  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2732  0016DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2733  0016E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2734  0016E2  0E00               	movlw	0
  2735  0016E4  EC41  F021         	call	___xxtofl
  2736  0016E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2737  0016EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2738  0016F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2739  0016F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2740  0016F8  EC58  F013         	call	___fldiv	;wreg free
  2741  0016FC  C00F  F028         	movff	?___fldiv,___flmul@b
  2742  001700  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2743  001704  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2744  001708  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2745  00170C  0E00               	movlw	0
  2746  00170E  6E2C               	movwf	___flmul@a^0,c
  2747  001710  0E00               	movlw	0
  2748  001712  6E2D               	movwf	(___flmul@a+1)^0,c
  2749  001714  0E48               	movlw	72
  2750  001716  6E2E               	movwf	(___flmul@a+2)^0,c
  2751  001718  0E43               	movlw	67
  2752  00171A  6E2F               	movwf	(___flmul@a+3)^0,c
  2753  00171C  EC6C  F00F         	call	___flmul	;wreg free
  2754  001720  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2755  001724  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2756  001728  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2757  00172C  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2758                           
  2759                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  2760  001730  0E00               	movlw	0
  2761  001732  0100               	movlb	0	; () banked
  2762  001734  6FA9               	movwf	(compare@lower+1)& (0+255),b
  2763  001736  0E00               	movlw	0
  2764  001738  6FA8               	movwf	compare@lower& (0+255),b
  2765  00173A  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2766  00173E  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2767  001742  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2768  001746  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2769  00174A  EC20  F02D         	call	_lroundf	;wreg free
  2770  00174E  C0A4  F0AA         	movff	?_lroundf,compare@value2compare
  2771  001752  C0A5  F0AB         	movff	?_lroundf+1,compare@value2compare+1
  2772  001756  0E01               	movlw	1
  2773  001758  0100               	movlb	0	; () banked
  2774  00175A  6FAD               	movwf	(compare@upper+1)& (0+255),b
  2775  00175C  0ED3               	movlw	211
  2776  00175E  6FAC               	movwf	compare@upper& (0+255),b
  2777  001760  EC03  F02D         	call	_compare	;wreg free
  2778  001764  0900               	iorlw	0
  2779  001766  B4D8               	btfsc	status,2,c
  2780  001768  EFB8  F00B         	goto	u5401
  2781  00176C  EFBA  F00B         	goto	u5400
  2782  001770                     u5401:
  2783  001770  EFBF  F00B         	goto	l4979
  2784  001774                     u5400:
  2785  001774  0E03               	movlw	3
  2786  001776  0100               	movlb	0	; () banked
  2787  001778  6FC7               	movwf	detect_color@color& (0+255),b
  2788  00177A  EF7F  F00C         	goto	l5007
  2789  00177E                     l4979:
  2790  00177E  0E02               	movlw	2
  2791  001780  0100               	movlb	0	; () banked
  2792  001782  6FC7               	movwf	detect_color@color& (0+255),b
  2793  001784  EF7F  F00C         	goto	l5007
  2794  001788                     l4981:
  2795                           
  2796                           ;color.c: 334:         if (GG <= 30 && GB <= 30){
  2797  001788  0100               	movlb	0	; () banked
  2798  00178A  51C6               	movf	(detect_color@GG+1)& (0+255),w,b
  2799  00178C  E107               	bnz	u5411
  2800  00178E  0E1F               	movlw	31
  2801  001790  5DC5               	subwf	detect_color@GG& (0+255),w,b
  2802  001792  B0D8               	btfsc	status,0,c
  2803  001794  EFCE  F00B         	goto	u5411
  2804  001798  EFD0  F00B         	goto	u5410
  2805  00179C                     u5411:
  2806  00179C  EF45  F00C         	goto	l4991
  2807  0017A0                     u5410:
  2808  0017A0                     
  2809                           ; BSR set to: 0
  2810  0017A0  51C2               	movf	(detect_color@GB+1)& (0+255),w,b
  2811  0017A2  E107               	bnz	u5421
  2812  0017A4  0E1F               	movlw	31
  2813  0017A6  5DC1               	subwf	detect_color@GB& (0+255),w,b
  2814  0017A8  B0D8               	btfsc	status,0,c
  2815  0017AA  EFD9  F00B         	goto	u5421
  2816  0017AE  EFDB  F00B         	goto	u5420
  2817  0017B2                     u5421:
  2818  0017B2  EF45  F00C         	goto	l4991
  2819  0017B6                     u5420:
  2820  0017B6                     
  2821                           ; BSR set to: 0
  2822                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  2823  0017B6  C0C8  F001         	movff	detect_color@RR,___xxtofl@val
  2824  0017BA  C0C9  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2825  0017BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2826  0017C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2827  0017C2  0E00               	movlw	0
  2828  0017C4  EC41  F021         	call	___xxtofl
  2829  0017C8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2830  0017CC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2831  0017D0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2832  0017D4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2833  0017D8  C0BB  F001         	movff	detect_color@GR,___xxtofl@val
  2834  0017DC  C0BC  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  2835  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2836  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2837  0017E4  0E00               	movlw	0
  2838  0017E6  EC41  F021         	call	___xxtofl
  2839  0017EA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2840  0017EE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2841  0017F2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2842  0017F6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2843  0017FA  EC58  F013         	call	___fldiv	;wreg free
  2844  0017FE  C00F  F028         	movff	?___fldiv,___flmul@b
  2845  001802  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2846  001806  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2847  00180A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2848  00180E  0E00               	movlw	0
  2849  001810  6E2C               	movwf	___flmul@a^0,c
  2850  001812  0E00               	movlw	0
  2851  001814  6E2D               	movwf	(___flmul@a+1)^0,c
  2852  001816  0EFA               	movlw	250
  2853  001818  6E2E               	movwf	(___flmul@a+2)^0,c
  2854  00181A  0E43               	movlw	67
  2855  00181C  6E2F               	movwf	(___flmul@a+3)^0,c
  2856  00181E  EC6C  F00F         	call	___flmul	;wreg free
  2857  001822  C028  F0CC         	movff	?___flmul,_detect_color$3231
  2858  001826  C029  F0CD         	movff	?___flmul+1,_detect_color$3231+1
  2859  00182A  C02A  F0CE         	movff	?___flmul+2,_detect_color$3231+2
  2860  00182E  C02B  F0CF         	movff	?___flmul+3,_detect_color$3231+3
  2861                           
  2862                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  2863  001832  0E00               	movlw	0
  2864  001834  0100               	movlb	0	; () banked
  2865  001836  6FA9               	movwf	(compare@lower+1)& (0+255),b
  2866  001838  0E00               	movlw	0
  2867  00183A  6FA8               	movwf	compare@lower& (0+255),b
  2868  00183C  C0CC  F0A4         	movff	_detect_color$3231,lroundf@x
  2869  001840  C0CD  F0A5         	movff	_detect_color$3231+1,lroundf@x+1
  2870  001844  C0CE  F0A6         	movff	_detect_color$3231+2,lroundf@x+2
  2871  001848  C0CF  F0A7         	movff	_detect_color$3231+3,lroundf@x+3
  2872  00184C  EC20  F02D         	call	_lroundf	;wreg free
  2873  001850  C0A4  F0AA         	movff	?_lroundf,compare@value2compare
  2874  001854  C0A5  F0AB         	movff	?_lroundf+1,compare@value2compare+1
  2875  001858  0E00               	movlw	0
  2876  00185A  0100               	movlb	0	; () banked
  2877  00185C  6FAD               	movwf	(compare@upper+1)& (0+255),b
  2878  00185E  0E96               	movlw	150
  2879  001860  6FAC               	movwf	compare@upper& (0+255),b
  2880  001862  EC03  F02D         	call	_compare	;wreg free
  2881  001866  0900               	iorlw	0
  2882  001868  B4D8               	btfsc	status,2,c
  2883  00186A  EF39  F00C         	goto	u5431
  2884  00186E  EF3B  F00C         	goto	u5430
  2885  001872                     u5431:
  2886  001872  EF40  F00C         	goto	l4989
  2887  001876                     u5430:
  2888  001876  0E01               	movlw	1
  2889  001878  0100               	movlb	0	; () banked
  2890  00187A  6FC7               	movwf	detect_color@color& (0+255),b
  2891  00187C  EF7F  F00C         	goto	l5007
  2892  001880                     l4989:
  2893  001880  0E06               	movlw	6
  2894  001882  0100               	movlb	0	; () banked
  2895  001884  6FC7               	movwf	detect_color@color& (0+255),b
  2896  001886  EF7F  F00C         	goto	l5007
  2897  00188A                     l4991:
  2898                           
  2899                           ; BSR set to: 0
  2900  00188A  51C6               	movf	(detect_color@GG+1)& (0+255),w,b
  2901  00188C  E109               	bnz	u5440
  2902  00188E  0E1F               	movlw	31
  2903  001890  5DC5               	subwf	detect_color@GG& (0+255),w,b
  2904  001892  A0D8               	btfss	status,0,c
  2905  001894  EF4E  F00C         	goto	u5441
  2906  001898  EF50  F00C         	goto	u5440
  2907  00189C                     u5441:
  2908  00189C  EF7D  F00C         	goto	l5005
  2909  0018A0                     u5440:
  2910  0018A0                     
  2911                           ; BSR set to: 0
  2912  0018A0  51C2               	movf	(detect_color@GB+1)& (0+255),w,b
  2913  0018A2  E109               	bnz	u5450
  2914  0018A4  0E1F               	movlw	31
  2915  0018A6  5DC1               	subwf	detect_color@GB& (0+255),w,b
  2916  0018A8  A0D8               	btfss	status,0,c
  2917  0018AA  EF59  F00C         	goto	u5451
  2918  0018AE  EF5B  F00C         	goto	u5450
  2919  0018B2                     u5451:
  2920  0018B2  EF7D  F00C         	goto	l5005
  2921  0018B6                     u5450:
  2922  0018B6                     
  2923                           ; BSR set to: 0
  2924                           ;color.c: 341:             if (BG >= BR) {color = 7;}
  2925  0018B6  51C3               	movf	detect_color@BR& (0+255),w,b
  2926  0018B8  5DCA               	subwf	detect_color@BG& (0+255),w,b
  2927  0018BA  51C4               	movf	(detect_color@BR+1)& (0+255),w,b
  2928  0018BC  59CB               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2929  0018BE  A0D8               	btfss	status,0,c
  2930  0018C0  EF64  F00C         	goto	u5461
  2931  0018C4  EF66  F00C         	goto	u5460
  2932  0018C8                     u5461:
  2933  0018C8  EF6A  F00C         	goto	l4999
  2934  0018CC                     u5460:
  2935  0018CC                     
  2936                           ; BSR set to: 0
  2937  0018CC  0E07               	movlw	7
  2938  0018CE  6FC7               	movwf	detect_color@color& (0+255),b
  2939  0018D0  EF7F  F00C         	goto	l5007
  2940  0018D4                     l4999:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;color.c: 343:                 if (BG < 48){color = 4;}
  2944  0018D4  51CB               	movf	(detect_color@BG+1)& (0+255),w,b
  2945  0018D6  E107               	bnz	u5471
  2946  0018D8  0E30               	movlw	48
  2947  0018DA  5DCA               	subwf	detect_color@BG& (0+255),w,b
  2948  0018DC  B0D8               	btfsc	status,0,c
  2949  0018DE  EF73  F00C         	goto	u5471
  2950  0018E2  EF75  F00C         	goto	u5470
  2951  0018E6                     u5471:
  2952  0018E6  EF79  F00C         	goto	l5003
  2953  0018EA                     u5470:
  2954  0018EA                     
  2955                           ; BSR set to: 0
  2956  0018EA  0E04               	movlw	4
  2957  0018EC  6FC7               	movwf	detect_color@color& (0+255),b
  2958  0018EE  EF7F  F00C         	goto	l5007
  2959  0018F2                     l5003:
  2960                           
  2961                           ; BSR set to: 0
  2962  0018F2  0E05               	movlw	5
  2963  0018F4  6FC7               	movwf	detect_color@color& (0+255),b
  2964  0018F6  EF7F  F00C         	goto	l5007
  2965  0018FA                     l5005:
  2966                           
  2967                           ; BSR set to: 0
  2968  0018FA  0E00               	movlw	0
  2969  0018FC  6FC7               	movwf	detect_color@color& (0+255),b
  2970  0018FE                     l5007:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;color.c: 350:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  2974  0018FE  0E00               	movlw	0
  2975  001900  6FA9               	movwf	(compare@lower+1)& (0+255),b
  2976  001902  0E5A               	movlw	90
  2977  001904  6FA8               	movwf	compare@lower& (0+255),b
  2978  001906  C0C8  F0AA         	movff	detect_color@RR,compare@value2compare
  2979  00190A  C0C9  F0AB         	movff	detect_color@RR+1,compare@value2compare+1
  2980  00190E  90D8               	bcf	status,0,c
  2981  001910  35C8               	rlcf	detect_color@RR& (0+255),w,b
  2982  001912  6FAC               	movwf	compare@upper& (0+255),b
  2983  001914  35C9               	rlcf	(detect_color@RR+1)& (0+255),w,b
  2984  001916  6FAD               	movwf	(compare@upper+1)& (0+255),b
  2985  001918  EC03  F02D         	call	_compare	;wreg free
  2986  00191C  0900               	iorlw	0
  2987  00191E  B4D8               	btfsc	status,2,c
  2988  001920  EF94  F00C         	goto	u5481
  2989  001924  EF96  F00C         	goto	u5480
  2990  001928                     u5481:
  2991  001928  EFC9  F00C         	goto	l5015
  2992  00192C                     u5480:
  2993  00192C  0E00               	movlw	0
  2994  00192E  0100               	movlb	0	; () banked
  2995  001930  6FA9               	movwf	(compare@lower+1)& (0+255),b
  2996  001932  0E5A               	movlw	90
  2997  001934  6FA8               	movwf	compare@lower& (0+255),b
  2998  001936  C0BF  F0AA         	movff	detect_color@RB,compare@value2compare
  2999  00193A  C0C0  F0AB         	movff	detect_color@RB+1,compare@value2compare+1
  3000  00193E  90D8               	bcf	status,0,c
  3001  001940  35BF               	rlcf	detect_color@RB& (0+255),w,b
  3002  001942  6FAC               	movwf	compare@upper& (0+255),b
  3003  001944  35C0               	rlcf	(detect_color@RB+1)& (0+255),w,b
  3004  001946  6FAD               	movwf	(compare@upper+1)& (0+255),b
  3005  001948  EC03  F02D         	call	_compare	;wreg free
  3006  00194C  0900               	iorlw	0
  3007  00194E  B4D8               	btfsc	status,2,c
  3008  001950  EFAC  F00C         	goto	u5491
  3009  001954  EFAE  F00C         	goto	u5490
  3010  001958                     u5491:
  3011  001958  EFC9  F00C         	goto	l5015
  3012  00195C                     u5490:
  3013  00195C  0E00               	movlw	0
  3014  00195E  0100               	movlb	0	; () banked
  3015  001960  6FA9               	movwf	(compare@lower+1)& (0+255),b
  3016  001962  0E5A               	movlw	90
  3017  001964  6FA8               	movwf	compare@lower& (0+255),b
  3018  001966  C0CA  F0AA         	movff	detect_color@BG,compare@value2compare
  3019  00196A  C0CB  F0AB         	movff	detect_color@BG+1,compare@value2compare+1
  3020  00196E  90D8               	bcf	status,0,c
  3021  001970  35CA               	rlcf	detect_color@BG& (0+255),w,b
  3022  001972  6FAC               	movwf	compare@upper& (0+255),b
  3023  001974  35CB               	rlcf	(detect_color@BG+1)& (0+255),w,b
  3024  001976  6FAD               	movwf	(compare@upper+1)& (0+255),b
  3025  001978  EC03  F02D         	call	_compare	;wreg free
  3026  00197C  0900               	iorlw	0
  3027  00197E  B4D8               	btfsc	status,2,c
  3028  001980  EFC4  F00C         	goto	u5501
  3029  001984  EFC6  F00C         	goto	u5500
  3030  001988                     u5501:
  3031  001988  EFC9  F00C         	goto	l5015
  3032  00198C                     u5500:
  3033  00198C  0E08               	movlw	8
  3034  00198E  0100               	movlb	0	; () banked
  3035  001990  6FC7               	movwf	detect_color@color& (0+255),b
  3036  001992                     l5015:
  3037                           
  3038                           ;color.c: 351:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  3039  001992  0E00               	movlw	0
  3040  001994  0100               	movlb	0	; () banked
  3041  001996  6FA9               	movwf	(compare@lower+1)& (0+255),b
  3042  001998  0E00               	movlw	0
  3043  00199A  6FA8               	movwf	compare@lower& (0+255),b
  3044  00199C  C0C3  F0AA         	movff	detect_color@BR,compare@value2compare
  3045  0019A0  C0C4  F0AB         	movff	detect_color@BR+1,compare@value2compare+1
  3046  0019A4  0E00               	movlw	0
  3047  0019A6  6FAD               	movwf	(compare@upper+1)& (0+255),b
  3048  0019A8  0E19               	movlw	25
  3049  0019AA  6FAC               	movwf	compare@upper& (0+255),b
  3050  0019AC  EC03  F02D         	call	_compare	;wreg free
  3051  0019B0  0900               	iorlw	0
  3052  0019B2  B4D8               	btfsc	status,2,c
  3053  0019B4  EFDE  F00C         	goto	u5511
  3054  0019B8  EFE0  F00C         	goto	u5510
  3055  0019BC                     u5511:
  3056  0019BC  EFFA  F00C         	goto	l5021
  3057  0019C0                     u5510:
  3058  0019C0  0E00               	movlw	0
  3059  0019C2  0100               	movlb	0	; () banked
  3060  0019C4  6FA9               	movwf	(compare@lower+1)& (0+255),b
  3061  0019C6  0E00               	movlw	0
  3062  0019C8  6FA8               	movwf	compare@lower& (0+255),b
  3063  0019CA  C0C8  F0AA         	movff	detect_color@RR,compare@value2compare
  3064  0019CE  C0C9  F0AB         	movff	detect_color@RR+1,compare@value2compare+1
  3065  0019D2  0E00               	movlw	0
  3066  0019D4  6FAD               	movwf	(compare@upper+1)& (0+255),b
  3067  0019D6  0E1E               	movlw	30
  3068  0019D8  6FAC               	movwf	compare@upper& (0+255),b
  3069  0019DA  EC03  F02D         	call	_compare	;wreg free
  3070  0019DE  0900               	iorlw	0
  3071  0019E0  B4D8               	btfsc	status,2,c
  3072  0019E2  EFF5  F00C         	goto	u5521
  3073  0019E6  EFF7  F00C         	goto	u5520
  3074  0019EA                     u5521:
  3075  0019EA  EFFA  F00C         	goto	l5021
  3076  0019EE                     u5520:
  3077  0019EE  0E00               	movlw	0
  3078  0019F0  0100               	movlb	0	; () banked
  3079  0019F2  6FC7               	movwf	detect_color@color& (0+255),b
  3080  0019F4                     l5021:
  3081                           
  3082                           ;color.c: 353:     if (color == 8) {toggle_light(2,1);}
  3083  0019F4  0E08               	movlw	8
  3084  0019F6  0100               	movlb	0	; () banked
  3085  0019F8  19C7               	xorwf	detect_color@color& (0+255),w,b
  3086  0019FA  A4D8               	btfss	status,2,c
  3087  0019FC  EF02  F00D         	goto	u5531
  3088  001A00  EF04  F00D         	goto	u5530
  3089  001A04                     u5531:
  3090  001A04  EF09  F00D         	goto	l5025
  3091  001A08                     u5530:
  3092  001A08                     
  3093                           ; BSR set to: 0
  3094  001A08  0E01               	movlw	1
  3095  001A0A  6E01               	movwf	toggle_light@toggletime^0,c
  3096  001A0C  0E02               	movlw	2
  3097  001A0E  EC5D  F01B         	call	_toggle_light
  3098  001A12                     l5025:
  3099                           
  3100                           ;color.c: 354:     return color;
  3101  001A12  0100               	movlb	0	; () banked
  3102  001A14  51C7               	movf	detect_color@color& (0+255),w,b
  3103  001A16                     
  3104                           ; BSR set to: 0
  3105  001A16  0012               	return		;funcret
  3106  001A18                     __end_of_detect_color:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _read_color *****************
  3110 ;; Defined at:
  3111 ;;		line 147 in file "color.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3114 ;;		 -> main@rgb(8), 
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3130 ;;Total ram usage:        2 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 4
  3133 ;; This function calls:
  3134 ;;		_color_read_Blue
  3135 ;;		_color_read_Clear
  3136 ;;		_color_read_Green
  3137 ;;		_color_read_Red
  3138 ;; This function is called by:
  3139 ;;		_detect_color
  3140 ;;		_color_data_collection
  3141 ;;		_test_function
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text3
  3146  005602                     __ptext3:
  3147                           	callstack 0
  3148  005602                     _read_color:
  3149                           	callstack 24
  3150  005602                     
  3151                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3152  005602  EC59  F02B         	call	_color_read_Red	;wreg free
  3153  005606  C00C  FFD9         	movff	read_color@m,fsr2l
  3154  00560A  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3155  00560E  C005  FFDE         	movff	?_color_read_Red,postinc2
  3156  005612  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3157                           
  3158                           ;color.c: 150:     m->B = color_read_Blue();
  3159  005616  ECA9  F02B         	call	_color_read_Blue	;wreg free
  3160  00561A  EE20 F004          	lfsr	2,4
  3161  00561E  500C               	movf	read_color@m^0,w,c
  3162  005620  26D9               	addwf	fsr2l,f,c
  3163  005622  500D               	movf	(read_color@m+1)^0,w,c
  3164  005624  22DA               	addwfc	fsr2h,f,c
  3165  005626  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3166  00562A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3167                           
  3168                           ;color.c: 151:     m->G = color_read_Green();
  3169  00562E  EC81  F02B         	call	_color_read_Green	;wreg free
  3170  005632  EE20 F002          	lfsr	2,2
  3171  005636  500C               	movf	read_color@m^0,w,c
  3172  005638  26D9               	addwf	fsr2l,f,c
  3173  00563A  500D               	movf	(read_color@m+1)^0,w,c
  3174  00563C  22DA               	addwfc	fsr2h,f,c
  3175  00563E  C005  FFDE         	movff	?_color_read_Green,postinc2
  3176  005642  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3177                           
  3178                           ;color.c: 152:     m->C = color_read_Clear();
  3179  005646  ECD1  F02B         	call	_color_read_Clear	;wreg free
  3180  00564A  EE20 F006          	lfsr	2,6
  3181  00564E  500C               	movf	read_color@m^0,w,c
  3182  005650  26D9               	addwf	fsr2l,f,c
  3183  005652  500D               	movf	(read_color@m+1)^0,w,c
  3184  005654  22DA               	addwfc	fsr2h,f,c
  3185  005656  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3186  00565A  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3187  00565E  0012               	return		;funcret
  3188  005660                     __end_of_read_color:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _compare *****************
  3192 ;; Defined at:
  3193 ;;		line 357 in file "color.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  lower           2   10[BANK0 ] unsigned int 
  3196 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3197 ;;  upper           2   14[BANK0 ] unsigned int 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  result          1   16[BANK0 ] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      unsigned char 
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3209 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3212 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3213 ;;Total ram usage:        7 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_detect_color
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text4
  3224  005A06                     __ptext4:
  3225                           	callstack 0
  3226  005A06                     _compare:
  3227                           	callstack 27
  3228  005A06                     
  3229                           ;color.c: 357: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 358: {;color.c: 359:     unsigned char result = 0;
  3230  005A06  0E00               	movlw	0
  3231  005A08  0100               	movlb	0	; () banked
  3232  005A0A  6FAE               	movwf	compare@result& (0+255),b
  3233  005A0C                     
  3234                           ; BSR set to: 0
  3235                           ;color.c: 360:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3236  005A0C  51AA               	movf	compare@value2compare& (0+255),w,b
  3237  005A0E  5DA8               	subwf	compare@lower& (0+255),w,b
  3238  005A10  51AB               	movf	(compare@value2compare+1)& (0+255),w,b
  3239  005A12  59A9               	subwfb	(compare@lower+1)& (0+255),w,b
  3240  005A14  B0D8               	btfsc	status,0,c
  3241  005A16  EF0F  F02D         	goto	u4751
  3242  005A1A  EF11  F02D         	goto	u4750
  3243  005A1E                     u4751:
  3244  005A1E  EF1E  F02D         	goto	l148
  3245  005A22                     u4750:
  3246  005A22                     
  3247                           ; BSR set to: 0
  3248  005A22  51AA               	movf	compare@value2compare& (0+255),w,b
  3249  005A24  5DAC               	subwf	compare@upper& (0+255),w,b
  3250  005A26  51AB               	movf	(compare@value2compare+1)& (0+255),w,b
  3251  005A28  59AD               	subwfb	(compare@upper+1)& (0+255),w,b
  3252  005A2A  A0D8               	btfss	status,0,c
  3253  005A2C  EF1A  F02D         	goto	u4761
  3254  005A30  EF1C  F02D         	goto	u4760
  3255  005A34                     u4761:
  3256  005A34  EF1E  F02D         	goto	l148
  3257  005A38                     u4760:
  3258  005A38                     
  3259                           ; BSR set to: 0
  3260  005A38  0E01               	movlw	1
  3261  005A3A  6FAE               	movwf	compare@result& (0+255),b
  3262  005A3C                     l148:
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;color.c: 361:     return result;
  3266  005A3C  51AE               	movf	compare@result& (0+255),w,b
  3267  005A3E                     
  3268                           ; BSR set to: 0
  3269  005A3E  0012               	return		;funcret
  3270  005A40                     __end_of_compare:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _sprintf *****************
  3274 ;; Defined at:
  3275 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  s               2    0[BANK0 ] PTR unsigned char 
  3278 ;;		 -> main@buf(100), color_predict@buf(100), color_display@buf(100), 
  3279 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  3280 ;;		 -> STR_3(5), STR_2(6), STR_1(14), 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  f              11   14[BANK0 ] struct _IO_FILE
  3283 ;;  ap              2   12[BANK0 ] PTR void [1]
  3284 ;;		 -> ?_sprintf(2), 
  3285 ;;  ret             2    0        int 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  2    0[BANK0 ] int 
  3288 ;; Registers used:
  3289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3295 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3296 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;Total ram usage:       25 bytes
  3300 ;; Hardware stack levels used: 1
  3301 ;; Hardware stack levels required when called: 8
  3302 ;; This function calls:
  3303 ;;		_vfprintf
  3304 ;; This function is called by:
  3305 ;;		_main
  3306 ;;		_color_display
  3307 ;;		_color_predict
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text5
  3312  005660                     __ptext5:
  3313                           	callstack 0
  3314  005660                     _sprintf:
  3315                           	callstack 22
  3316  005660  0EA2               	movlw	low (?_sprintf+4)
  3317  005662  0100               	movlb	0	; () banked
  3318  005664  6FAA               	movwf	sprintf@ap& (0+255),b
  3319  005666  0E00               	movlw	high (?_sprintf+4)
  3320  005668  6FAB               	movwf	(sprintf@ap+1)& (0+255),b
  3321  00566A  C09E  F0AC         	movff	sprintf@s,sprintf@f
  3322  00566E  C09F  F0AD         	movff	sprintf@s+1,sprintf@f+1
  3323  005672                     
  3324                           ; BSR set to: 0
  3325  005672  0E00               	movlw	0
  3326  005674  6FB0               	movwf	(sprintf@f+4)& (0+255),b
  3327  005676  0E00               	movlw	0
  3328  005678  6FAF               	movwf	(sprintf@f+3)& (0+255),b
  3329  00567A                     
  3330                           ; BSR set to: 0
  3331  00567A  0E00               	movlw	0
  3332  00567C  6FB6               	movwf	(sprintf@f+10)& (0+255),b
  3333  00567E  0E00               	movlw	0
  3334  005680  6FB5               	movwf	(sprintf@f+9)& (0+255),b
  3335  005682                     
  3336                           ; BSR set to: 0
  3337  005682  0EAC               	movlw	low sprintf@f
  3338  005684  6E50               	movwf	vfprintf@fp^0,c
  3339  005686  0E00               	movlw	high sprintf@f
  3340  005688  6E51               	movwf	(vfprintf@fp+1)^0,c
  3341  00568A  C0A0  F052         	movff	sprintf@fmt,vfprintf@fmt
  3342  00568E  C0A1  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3343  005692  0EAA               	movlw	low sprintf@ap
  3344  005694  6E54               	movwf	vfprintf@ap^0,c
  3345  005696  0E00               	movlw	high sprintf@ap
  3346  005698  6E55               	movwf	(vfprintf@ap+1)^0,c
  3347  00569A  ECD0  F02A         	call	_vfprintf	;wreg free
  3348  00569E  0100               	movlb	0	; () banked
  3349  0056A0  51AF               	movf	(sprintf@f+3)& (0+255),w,b
  3350  0056A2  259E               	addwf	sprintf@s& (0+255),w,b
  3351  0056A4  6ED9               	movwf	fsr2l,c
  3352  0056A6  51B0               	movf	(sprintf@f+4)& (0+255),w,b
  3353  0056A8  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  3354  0056AA  6EDA               	movwf	fsr2h,c
  3355  0056AC  0E00               	movlw	0
  3356  0056AE  6EDF               	movwf	indf2,c
  3357  0056B0                     
  3358                           ; BSR set to: 0
  3359  0056B0  0012               	return		;funcret
  3360  0056B2                     __end_of_sprintf:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _vfprintf *****************
  3364 ;; Defined at:
  3365 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3368 ;;		 -> sprintf@f(11), 
  3369 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3370 ;;		 -> STR_3(5), STR_2(6), STR_1(14), 
  3371 ;;  ap              2   83[COMRAM] PTR PTR void 
  3372 ;;		 -> sprintf@ap(2), 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3375 ;;		 -> STR_3(5), STR_2(6), STR_1(14), 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  2   79[COMRAM] int 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3385 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;Total ram usage:        8 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 7
  3392 ;; This function calls:
  3393 ;;		_vfpfcnvrt
  3394 ;; This function is called by:
  3395 ;;		_sprintf
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text6
  3400  0055A0                     __ptext6:
  3401                           	callstack 0
  3402  0055A0                     _vfprintf:
  3403                           	callstack 22
  3404  0055A0                     
  3405                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3406  0055A0  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3407  0055A4  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3408  0055A8                     
  3409                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3410  0055A8  0E00               	movlw	0
  3411  0055AA  0100               	movlb	0	; () banked
  3412  0055AC  6F77               	movwf	(_nout+1)& (0+255),b
  3413  0055AE  0E00               	movlw	0
  3414  0055B0  6F76               	movwf	_nout& (0+255),b
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3417  0055B2  EFEE  F02A         	goto	l5111
  3418  0055B6                     l5109:
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3422  0055B6  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3423  0055BA  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3424  0055BE  0E56               	movlw	low vfprintf@cfmt
  3425  0055C0  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3426  0055C2  0E00               	movlw	high vfprintf@cfmt
  3427  0055C4  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3428  0055C6  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3429  0055CA  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3430  0055CE  EC67  F020         	call	_vfpfcnvrt	;wreg free
  3431  0055D2  5040               	movf	?_vfpfcnvrt^0,w,c
  3432  0055D4  0100               	movlb	0	; () banked
  3433  0055D6  2776               	addwf	_nout& (0+255),f,b
  3434  0055D8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3435  0055DA  2377               	addwfc	(_nout+1)& (0+255),f,b
  3436  0055DC                     l5111:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3440  0055DC  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3441  0055E0  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3442  0055E4                     	if	0	;tblptru may be non-zero
  3443  0055E4                     	endif
  3444  0055E4                     	if	0	;tblptru may be non-zero
  3445  0055E4                     	endif
  3446  0055E4  0008               	tblrd		*
  3447  0055E6  50F5               	movf	tablat,w,c
  3448  0055E8  0900               	iorlw	0
  3449  0055EA  A4D8               	btfss	status,2,c
  3450  0055EC  EFFA  F02A         	goto	u5661
  3451  0055F0  EFFC  F02A         	goto	u5660
  3452  0055F4                     u5661:
  3453  0055F4  EFDB  F02A         	goto	l5109
  3454  0055F8                     u5660:
  3455  0055F8                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3458  0055F8  C076  F050         	movff	_nout,?_vfprintf
  3459  0055FC  C077  F051         	movff	_nout+1,?_vfprintf+1
  3460  005600                     
  3461                           ; BSR set to: 0
  3462  005600  0012               	return		;funcret
  3463  005602                     __end_of_vfprintf:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _vfpfcnvrt *****************
  3467 ;; Defined at:
  3468 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3471 ;;		 -> sprintf@f(11), 
  3472 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3473 ;;		 -> vfprintf@cfmt(2), 
  3474 ;;  ap              2   67[COMRAM] PTR PTR void 
  3475 ;;		 -> sprintf@ap(2), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  ll              8   71[COMRAM] long long 
  3478 ;;  llu             8    0        unsigned long long 
  3479 ;;  f               4    0        unsigned long long 
  3480 ;;  vp              3    0        PTR void 
  3481 ;;  ct              3    0        unsigned char [3]
  3482 ;;  cp              3    0        PTR unsigned char 
  3483 ;;  i               2    0        int 
  3484 ;;  done            2    0        int 
  3485 ;;  c               1    0        unsigned char 
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  2   63[COMRAM] int 
  3488 ;; Registers used:
  3489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3498 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3499 ;;Total ram usage:       16 bytes
  3500 ;; Hardware stack levels used: 1
  3501 ;; Hardware stack levels required when called: 6
  3502 ;; This function calls:
  3503 ;;		_dtoa
  3504 ;;		_fputc
  3505 ;; This function is called by:
  3506 ;;		_vfprintf
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text7
  3511  0040CE                     __ptext7:
  3512                           	callstack 0
  3513  0040CE                     _vfpfcnvrt:
  3514                           	callstack 22
  3515  0040CE                     
  3516                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3517  0040CE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3518  0040D2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3519  0040D6  CFDE FFF6          	movff	postinc2,tblptrl
  3520  0040DA  CFDD FFF7          	movff	postdec2,tblptrh
  3521  0040DE                     	if	0	;tblptru may be non-zero
  3522  0040DE                     	endif
  3523  0040DE                     	if	0	;tblptru may be non-zero
  3524  0040DE                     	endif
  3525  0040DE  0008               	tblrd		*
  3526  0040E0  50F5               	movf	tablat,w,c
  3527  0040E2  0A25               	xorlw	37
  3528  0040E4  A4D8               	btfss	status,2,c
  3529  0040E6  EF77  F020         	goto	u5351
  3530  0040EA  EF79  F020         	goto	u5350
  3531  0040EE                     u5351:
  3532  0040EE  EF25  F021         	goto	l4873
  3533  0040F2                     u5350:
  3534  0040F2                     
  3535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3536  0040F2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3537  0040F6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3538  0040FA  2ADE               	incf	postinc2,f,c
  3539  0040FC  0E00               	movlw	0
  3540  0040FE  22DD               	addwfc	postdec2,f,c
  3541  004100                     
  3542                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3543  004100  0E00               	movlw	0
  3544  004102  0100               	movlb	0	; () banked
  3545  004104  6F79               	movwf	(_width+1)& (0+255),b
  3546  004106  0E00               	movlw	0
  3547  004108  6F78               	movwf	_width& (0+255),b
  3548  00410A  C078  F07C         	movff	_width,_flags
  3549  00410E  C079  F07D         	movff	_width+1,_flags+1
  3550  004112                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3553  004112  697A               	setf	_prec& (0+255),b
  3554  004114  697B               	setf	(_prec+1)& (0+255),b
  3555  004116                     
  3556                           ; BSR set to: 0
  3557                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3558  004116  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3559  00411A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3560  00411E  CFDE FFF6          	movff	postinc2,tblptrl
  3561  004122  CFDD FFF7          	movff	postdec2,tblptrh
  3562  004126                     	if	0	;tblptru may be non-zero
  3563  004126                     	endif
  3564  004126                     	if	0	;tblptru may be non-zero
  3565  004126                     	endif
  3566  004126  0008               	tblrd		*
  3567  004128  50F5               	movf	tablat,w,c
  3568  00412A  0A64               	xorlw	100
  3569  00412C  B4D8               	btfsc	status,2,c
  3570  00412E  EF9B  F020         	goto	u5361
  3571  004132  EF9D  F020         	goto	u5360
  3572  004136                     u5361:
  3573  004136  EFAF  F020         	goto	l4851
  3574  00413A                     u5360:
  3575  00413A                     
  3576                           ; BSR set to: 0
  3577  00413A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3578  00413E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3579  004142  CFDE FFF6          	movff	postinc2,tblptrl
  3580  004146  CFDD FFF7          	movff	postdec2,tblptrh
  3581  00414A                     	if	0	;tblptru may be non-zero
  3582  00414A                     	endif
  3583  00414A                     	if	0	;tblptru may be non-zero
  3584  00414A                     	endif
  3585  00414A  0008               	tblrd		*
  3586  00414C  50F5               	movf	tablat,w,c
  3587  00414E  0A69               	xorlw	105
  3588  004150  A4D8               	btfss	status,2,c
  3589  004152  EFAD  F020         	goto	u5371
  3590  004156  EFAF  F020         	goto	u5370
  3591  00415A                     u5371:
  3592  00415A  EFEF  F020         	goto	l4857
  3593  00415E                     u5370:
  3594  00415E                     l4851:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3598  00415E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3599  004162  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3600  004166  2ADE               	incf	postinc2,f,c
  3601  004168  0E00               	movlw	0
  3602  00416A  22DD               	addwfc	postdec2,f,c
  3603                           
  3604                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3605  00416C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3606  004170  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3607  004174  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3608  004178  0E02               	movlw	2
  3609  00417A  26DE               	addwf	postinc2,f,c
  3610  00417C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3611  004180  0E00               	movlw	0
  3612  004182  22DD               	addwfc	postdec2,f,c
  3613  004184  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3614  004188  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3615  00418C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3616  004190  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3617  004194  0E00               	movlw	0
  3618  004196  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3619  004198  0EFF               	movlw	-1
  3620  00419A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3621  00419C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3622  00419E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3623  0041A0  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3624  0041A2  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3625  0041A4  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3626  0041A6                     
  3627                           ; BSR set to: 0
  3628                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3629  0041A6  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3630  0041AA  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3631  0041AE  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3632  0041B2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3633  0041B6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3634  0041BA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3635  0041BE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3636  0041C2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3637  0041C6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3638  0041CA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3639  0041CE  ECEC  F019         	call	_dtoa	;wreg free
  3640  0041D2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3641  0041D6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3642  0041DA  EF40  F021         	goto	l1463
  3643  0041DE                     l4857:
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3647  0041DE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3648  0041E2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3649  0041E6  CFDE FFF6          	movff	postinc2,tblptrl
  3650  0041EA  CFDD FFF7          	movff	postdec2,tblptrh
  3651  0041EE                     	if	0	;tblptru may be non-zero
  3652  0041EE                     	endif
  3653  0041EE                     	if	0	;tblptru may be non-zero
  3654  0041EE                     	endif
  3655  0041EE  0008               	tblrd		*
  3656  0041F0  50F5               	movf	tablat,w,c
  3657  0041F2  0A25               	xorlw	37
  3658  0041F4  A4D8               	btfss	status,2,c
  3659  0041F6  EFFF  F020         	goto	u5381
  3660  0041FA  EF01  F021         	goto	u5380
  3661  0041FE                     u5381:
  3662  0041FE  EF18  F021         	goto	l4867
  3663  004202                     u5380:
  3664  004202                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3667  004202  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3668  004206  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3669  00420A  2ADE               	incf	postinc2,f,c
  3670  00420C  0E00               	movlw	0
  3671  00420E  22DD               	addwfc	postdec2,f,c
  3672  004210                     
  3673                           ; BSR set to: 0
  3674                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3675  004210  0E00               	movlw	0
  3676  004212  6E02               	movwf	(fputc@c+1)^0,c
  3677  004214  0E25               	movlw	37
  3678  004216  6E01               	movwf	fputc@c^0,c
  3679  004218  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3680  00421C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3681  004220  ECA7  F027         	call	_fputc	;wreg free
  3682  004224                     l4863:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3685  004224  0E00               	movlw	0
  3686  004226  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3687  004228  0E01               	movlw	1
  3688  00422A  6E40               	movwf	?_vfpfcnvrt^0,c
  3689  00422C  EF40  F021         	goto	l1463
  3690  004230                     l4867:
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3694  004230  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3695  004234  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3696  004238  2ADE               	incf	postinc2,f,c
  3697  00423A  0E00               	movlw	0
  3698  00423C  22DD               	addwfc	postdec2,f,c
  3699  00423E                     
  3700                           ; BSR set to: 0
  3701                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3702  00423E  0E00               	movlw	0
  3703  004240  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3704  004242  0E00               	movlw	0
  3705  004244  6E40               	movwf	?_vfpfcnvrt^0,c
  3706  004246  EF40  F021         	goto	l1463
  3707  00424A                     l4873:
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3710  00424A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3711  00424E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3712  004252  CFDE FFF6          	movff	postinc2,tblptrl
  3713  004256  CFDD FFF7          	movff	postdec2,tblptrh
  3714  00425A                     	if	0	;tblptru may be non-zero
  3715  00425A                     	endif
  3716  00425A                     	if	0	;tblptru may be non-zero
  3717  00425A                     	endif
  3718  00425A  0008               	tblrd		*
  3719  00425C  50F5               	movf	tablat,w,c
  3720  00425E  6E01               	movwf	fputc@c^0,c
  3721  004260  6A02               	clrf	(fputc@c+1)^0,c
  3722  004262  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3723  004266  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3724  00426A  ECA7  F027         	call	_fputc	;wreg free
  3725  00426E                     
  3726                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3727  00426E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3728  004272  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3729  004276  2ADE               	incf	postinc2,f,c
  3730  004278  0E00               	movlw	0
  3731  00427A  22DD               	addwfc	postdec2,f,c
  3732  00427C  EF12  F021         	goto	l4863
  3733  004280                     l1463:
  3734  004280  0012               	return		;funcret
  3735  004282                     __end_of_vfpfcnvrt:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function _dtoa *****************
  3739 ;; Defined at:
  3740 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3743 ;;		 -> sprintf@f(11), 
  3744 ;;  d               8   29[COMRAM] long long 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  n               8   53[COMRAM] long long 
  3747 ;;  i               2   61[COMRAM] int 
  3748 ;;  s               2   51[COMRAM] int 
  3749 ;;  w               2   49[COMRAM] int 
  3750 ;;  p               2   47[COMRAM] int 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  2   27[COMRAM] int 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3760 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3762 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;Total ram usage:       36 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 5
  3767 ;; This function calls:
  3768 ;;		___aodiv
  3769 ;;		___aomod
  3770 ;;		_abs
  3771 ;;		_pad
  3772 ;; This function is called by:
  3773 ;;		_vfpfcnvrt
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text8
  3778  0033D8                     __ptext8:
  3779                           	callstack 0
  3780  0033D8                     _dtoa:
  3781                           	callstack 22
  3782  0033D8                     
  3783                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3784  0033D8  C01E  F036         	movff	dtoa@d,dtoa@n
  3785  0033DC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3786  0033E0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3787  0033E4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3788  0033E8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3789  0033EC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3790  0033F0  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3791  0033F4  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3792  0033F8                     
  3793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3794  0033F8  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3795  0033FA  EF01  F01A         	goto	u4341
  3796  0033FE  EF04  F01A         	goto	u4340
  3797  003402                     u4341:
  3798  003402  0E01               	movlw	1
  3799  003404  EF05  F01A         	goto	u4350
  3800  003408                     u4340:
  3801  003408  0E00               	movlw	0
  3802  00340A                     u4350:
  3803  00340A  6E34               	movwf	dtoa@s^0,c
  3804  00340C  6A35               	clrf	(dtoa@s+1)^0,c
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3807  00340E  5034               	movf	dtoa@s^0,w,c
  3808  003410  1035               	iorwf	(dtoa@s+1)^0,w,c
  3809  003412  B4D8               	btfsc	status,2,c
  3810  003414  EF0E  F01A         	goto	u4361
  3811  003418  EF10  F01A         	goto	u4360
  3812  00341C                     u4361:
  3813  00341C  EF20  F01A         	goto	l4359
  3814  003420                     u4360:
  3815  003420                     
  3816                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3817  003420  1E3D               	comf	(dtoa@n+7)^0,f,c
  3818  003422  1E3C               	comf	(dtoa@n+6)^0,f,c
  3819  003424  1E3B               	comf	(dtoa@n+5)^0,f,c
  3820  003426  1E3A               	comf	(dtoa@n+4)^0,f,c
  3821  003428  1E39               	comf	(dtoa@n+3)^0,f,c
  3822  00342A  1E38               	comf	(dtoa@n+2)^0,f,c
  3823  00342C  1E37               	comf	(dtoa@n+1)^0,f,c
  3824  00342E  6C36               	negf	dtoa@n^0,c
  3825  003430  0E00               	movlw	0
  3826  003432  2237               	addwfc	(dtoa@n+1)^0,f,c
  3827  003434  2238               	addwfc	(dtoa@n+2)^0,f,c
  3828  003436  2239               	addwfc	(dtoa@n+3)^0,f,c
  3829  003438  223A               	addwfc	(dtoa@n+4)^0,f,c
  3830  00343A  223B               	addwfc	(dtoa@n+5)^0,f,c
  3831  00343C  223C               	addwfc	(dtoa@n+6)^0,f,c
  3832  00343E  223D               	addwfc	(dtoa@n+7)^0,f,c
  3833  003440                     l4359:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3836  003440  0100               	movlb	0	; () banked
  3837  003442  BF7B               	btfsc	(_prec+1)& (0+255),7,b
  3838  003444  EF26  F01A         	goto	u4371
  3839  003448  EF28  F01A         	goto	u4370
  3840  00344C                     u4371:
  3841  00344C  EF29  F01A         	goto	l4363
  3842  003450                     u4370:
  3843  003450                     
  3844                           ; BSR set to: 0
  3845                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3846  003450  937C               	bcf	_flags& (0+255),1,b
  3847  003452                     l4363:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3851  003452  BF7B               	btfsc	(_prec+1)& (0+255),7,b
  3852  003454  EF36  F01A         	goto	u4380
  3853  003458  517B               	movf	(_prec+1)& (0+255),w,b
  3854  00345A  E106               	bnz	u4381
  3855  00345C  057A               	decf	_prec& (0+255),w,b
  3856  00345E  B0D8               	btfsc	status,0,c
  3857  003460  EF34  F01A         	goto	u4381
  3858  003464  EF36  F01A         	goto	u4380
  3859  003468                     u4381:
  3860  003468  EF3C  F01A         	goto	l1436
  3861  00346C                     u4380:
  3862  00346C                     
  3863                           ; BSR set to: 0
  3864  00346C  0E00               	movlw	0
  3865  00346E  6E31               	movwf	(dtoa@p+1)^0,c
  3866  003470  0E01               	movlw	1
  3867  003472  6E30               	movwf	dtoa@p^0,c
  3868  003474  EF40  F01A         	goto	l1438
  3869  003478                     l1436:
  3870                           
  3871                           ; BSR set to: 0
  3872  003478  C07A  F030         	movff	_prec,dtoa@p
  3873  00347C  C07B  F031         	movff	_prec+1,dtoa@p+1
  3874  003480                     l1438:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3878  003480  C078  F032         	movff	_width,dtoa@w
  3879  003484  C079  F033         	movff	_width+1,dtoa@w+1
  3880  003488                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3883  003488  5034               	movf	dtoa@s^0,w,c
  3884  00348A  1035               	iorwf	(dtoa@s+1)^0,w,c
  3885  00348C  A4D8               	btfss	status,2,c
  3886  00348E  EF4B  F01A         	goto	u4391
  3887  003492  EF4D  F01A         	goto	u4390
  3888  003496                     u4391:
  3889  003496  EF54  F01A         	goto	l4371
  3890  00349A                     u4390:
  3891  00349A                     
  3892                           ; BSR set to: 0
  3893  00349A  A57C               	btfss	_flags& (0+255),2,b
  3894  00349C  EF52  F01A         	goto	u4401
  3895  0034A0  EF54  F01A         	goto	u4400
  3896  0034A4                     u4401:
  3897  0034A4  EF57  F01A         	goto	l4373
  3898  0034A8                     u4400:
  3899  0034A8                     l4371:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  3903  0034A8  0632               	decf	dtoa@w^0,f,c
  3904  0034AA  A0D8               	btfss	status,0,c
  3905  0034AC  0633               	decf	(dtoa@w+1)^0,f,c
  3906  0034AE                     l4373:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3910  0034AE  0E00               	movlw	0
  3911  0034B0  6E3F               	movwf	(dtoa@i+1)^0,c
  3912  0034B2  0E1F               	movlw	31
  3913  0034B4  6E3E               	movwf	dtoa@i^0,c
  3914  0034B6                     
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3917  0034B6  0E00               	movlw	0
  3918  0034B8  6F9D               	movwf	(_dbuf+31)& (0+255),b
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3921  0034BA  EFDB  F01A         	goto	l4387
  3922  0034BE                     l4377:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  3925  0034BE  063E               	decf	dtoa@i^0,f,c
  3926  0034C0  A0D8               	btfss	status,0,c
  3927  0034C2  063F               	decf	(dtoa@i+1)^0,f,c
  3928  0034C4                     
  3929                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3930  0034C4  0E7E               	movlw	low _dbuf
  3931  0034C6  243E               	addwf	dtoa@i^0,w,c
  3932  0034C8  6ED9               	movwf	fsr2l,c
  3933  0034CA  0E00               	movlw	high _dbuf
  3934  0034CC  203F               	addwfc	(dtoa@i+1)^0,w,c
  3935  0034CE  6EDA               	movwf	fsr2h,c
  3936  0034D0  C036  F001         	movff	dtoa@n,___aomod@dividend
  3937  0034D4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3938  0034D8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3939  0034DC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3940  0034E0  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3941  0034E4  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3942  0034E8  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3943  0034EC  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3944  0034F0  0E0A               	movlw	10
  3945  0034F2  6E09               	movwf	___aomod@divisor^0,c
  3946  0034F4  0E00               	movlw	0
  3947  0034F6  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3948  0034F8  0E00               	movlw	0
  3949  0034FA  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3950  0034FC  0E00               	movlw	0
  3951  0034FE  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3952  003500  0E00               	movlw	0
  3953  003502  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3954  003504  0E00               	movlw	0
  3955  003506  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3956  003508  0E00               	movlw	0
  3957  00350A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3958  00350C  0E00               	movlw	0
  3959  00350E  6E10               	movwf	(___aomod@divisor+7)^0,c
  3960  003510  EC7B  F024         	call	___aomod	;wreg free
  3961  003514  C001  F026         	movff	?___aomod,??_dtoa
  3962  003518  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3963  00351C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3964  003520  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3965  003524  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3966  003528  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3967  00352C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3968  003530  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3969  003534  C026  F013         	movff	??_dtoa,abs@a
  3970  003538  C028  F014         	movff	??_dtoa+2,abs@a+1
  3971  00353C  ECE3  F02C         	call	_abs	;wreg free
  3972  003540  5013               	movf	?_abs^0,w,c
  3973  003542  0F30               	addlw	48
  3974  003544  6EDF               	movwf	indf2,c
  3975  003546                     
  3976                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  3977  003546  0630               	decf	dtoa@p^0,f,c
  3978  003548  A0D8               	btfss	status,0,c
  3979  00354A  0631               	decf	(dtoa@p+1)^0,f,c
  3980  00354C                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  3982  00354C  0632               	decf	dtoa@w^0,f,c
  3983  00354E  A0D8               	btfss	status,0,c
  3984  003550  0633               	decf	(dtoa@w+1)^0,f,c
  3985  003552                     
  3986                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3987  003552  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3988  003556  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3989  00355A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3990  00355E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3991  003562  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3992  003566  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3993  00356A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3994  00356E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3995  003572  0E0A               	movlw	10
  3996  003574  6E09               	movwf	___aodiv@divisor^0,c
  3997  003576  0E00               	movlw	0
  3998  003578  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3999  00357A  0E00               	movlw	0
  4000  00357C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4001  00357E  0E00               	movlw	0
  4002  003580  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4003  003582  0E00               	movlw	0
  4004  003584  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4005  003586  0E00               	movlw	0
  4006  003588  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4007  00358A  0E00               	movlw	0
  4008  00358C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4009  00358E  0E00               	movlw	0
  4010  003590  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4011  003592  ECB7  F023         	call	___aodiv	;wreg free
  4012  003596  C001  F036         	movff	?___aodiv,dtoa@n
  4013  00359A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4014  00359E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4015  0035A2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4016  0035A6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4017  0035AA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4018  0035AE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4019  0035B2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4020  0035B6                     l4387:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4023  0035B6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4024  0035B8  EFE6  F01A         	goto	u4411
  4025  0035BC  503F               	movf	(dtoa@i+1)^0,w,c
  4026  0035BE  E108               	bnz	u4410
  4027  0035C0  043E               	decf	dtoa@i^0,w,c
  4028  0035C2  A0D8               	btfss	status,0,c
  4029  0035C4  EFE6  F01A         	goto	u4411
  4030  0035C8  EFE8  F01A         	goto	u4410
  4031  0035CC                     u4411:
  4032  0035CC  EF19  F01B         	goto	l4397
  4033  0035D0                     u4410:
  4034  0035D0  5036               	movf	dtoa@n^0,w,c
  4035  0035D2  1037               	iorwf	(dtoa@n+1)^0,w,c
  4036  0035D4  1038               	iorwf	(dtoa@n+2)^0,w,c
  4037  0035D6  1039               	iorwf	(dtoa@n+3)^0,w,c
  4038  0035D8  103A               	iorwf	(dtoa@n+4)^0,w,c
  4039  0035DA  103B               	iorwf	(dtoa@n+5)^0,w,c
  4040  0035DC  103C               	iorwf	(dtoa@n+6)^0,w,c
  4041  0035DE  103D               	iorwf	(dtoa@n+7)^0,w,c
  4042  0035E0  A4D8               	btfss	status,2,c
  4043  0035E2  EFF5  F01A         	goto	u4421
  4044  0035E6  EFF7  F01A         	goto	u4420
  4045  0035EA                     u4421:
  4046  0035EA  EF5F  F01A         	goto	l4377
  4047  0035EE                     u4420:
  4048  0035EE  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4049  0035F0  EF04  F01B         	goto	u4430
  4050  0035F4  5031               	movf	(dtoa@p+1)^0,w,c
  4051  0035F6  E106               	bnz	u4431
  4052  0035F8  0430               	decf	dtoa@p^0,w,c
  4053  0035FA  B0D8               	btfsc	status,0,c
  4054  0035FC  EF02  F01B         	goto	u4431
  4055  003600  EF04  F01B         	goto	u4430
  4056  003604                     u4431:
  4057  003604  EF5F  F01A         	goto	l4377
  4058  003608                     u4430:
  4059  003608  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4060  00360A  EF0F  F01B         	goto	u4441
  4061  00360E  5033               	movf	(dtoa@w+1)^0,w,c
  4062  003610  E108               	bnz	u4440
  4063  003612  0432               	decf	dtoa@w^0,w,c
  4064  003614  A0D8               	btfss	status,0,c
  4065  003616  EF0F  F01B         	goto	u4441
  4066  00361A  EF11  F01B         	goto	u4440
  4067  00361E                     u4441:
  4068  00361E  EF19  F01B         	goto	l4397
  4069  003622                     u4440:
  4070  003622  0100               	movlb	0	; () banked
  4071  003624  B37C               	btfsc	_flags& (0+255),1,b
  4072  003626  EF17  F01B         	goto	u4451
  4073  00362A  EF19  F01B         	goto	u4450
  4074  00362E                     u4451:
  4075  00362E  EF5F  F01A         	goto	l4377
  4076  003632                     u4450:
  4077  003632                     l4397:
  4078                           
  4079                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4080  003632  5034               	movf	dtoa@s^0,w,c
  4081  003634  1035               	iorwf	(dtoa@s+1)^0,w,c
  4082  003636  A4D8               	btfss	status,2,c
  4083  003638  EF20  F01B         	goto	u4461
  4084  00363C  EF22  F01B         	goto	u4460
  4085  003640                     u4461:
  4086  003640  EF2A  F01B         	goto	l4401
  4087  003644                     u4460:
  4088  003644  0100               	movlb	0	; () banked
  4089  003646  A57C               	btfss	_flags& (0+255),2,b
  4090  003648  EF28  F01B         	goto	u4471
  4091  00364C  EF2A  F01B         	goto	u4470
  4092  003650                     u4471:
  4093  003650  EF48  F01B         	goto	l4411
  4094  003654                     u4470:
  4095  003654                     l4401:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4098  003654  063E               	decf	dtoa@i^0,f,c
  4099  003656  A0D8               	btfss	status,0,c
  4100  003658  063F               	decf	(dtoa@i+1)^0,f,c
  4101  00365A                     
  4102                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4103  00365A  5034               	movf	dtoa@s^0,w,c
  4104  00365C  1035               	iorwf	(dtoa@s+1)^0,w,c
  4105  00365E  A4D8               	btfss	status,2,c
  4106  003660  EF34  F01B         	goto	u4481
  4107  003664  EF36  F01B         	goto	u4480
  4108  003668                     u4481:
  4109  003668  EF3C  F01B         	goto	l4407
  4110  00366C                     u4480:
  4111  00366C  0E00               	movlw	0
  4112  00366E  6E2F               	movwf	(_dtoa$2892+1)^0,c
  4113  003670  0E2B               	movlw	43
  4114  003672  6E2E               	movwf	_dtoa$2892^0,c
  4115  003674  EF40  F01B         	goto	l4409
  4116  003678                     l4407:
  4117  003678  0E00               	movlw	0
  4118  00367A  6E2F               	movwf	(_dtoa$2892+1)^0,c
  4119  00367C  0E2D               	movlw	45
  4120  00367E  6E2E               	movwf	_dtoa$2892^0,c
  4121  003680                     l4409:
  4122  003680  0E7E               	movlw	low _dbuf
  4123  003682  243E               	addwf	dtoa@i^0,w,c
  4124  003684  6ED9               	movwf	fsr2l,c
  4125  003686  0E00               	movlw	high _dbuf
  4126  003688  203F               	addwfc	(dtoa@i+1)^0,w,c
  4127  00368A  6EDA               	movwf	fsr2h,c
  4128  00368C  C02E  FFDF         	movff	_dtoa$2892,indf2
  4129  003690                     l4411:
  4130                           
  4131                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4132  003690  C01C  F011         	movff	dtoa@fp,pad@fp
  4133  003694  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4134  003698  0E7E               	movlw	low _dbuf
  4135  00369A  243E               	addwf	dtoa@i^0,w,c
  4136  00369C  6E13               	movwf	pad@buf^0,c
  4137  00369E  0E00               	movlw	high _dbuf
  4138  0036A0  203F               	addwfc	(dtoa@i+1)^0,w,c
  4139  0036A2  6E14               	movwf	(pad@buf+1)^0,c
  4140  0036A4  C032  F015         	movff	dtoa@w,pad@p
  4141  0036A8  C033  F016         	movff	dtoa@w+1,pad@p+1
  4142  0036AC  EC0C  F028         	call	_pad	;wreg free
  4143  0036B0  C011  F01C         	movff	?_pad,?_dtoa
  4144  0036B4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4145  0036B8  0012               	return		;funcret
  4146  0036BA                     __end_of_dtoa:
  4147                           	callstack 0
  4148                           
  4149 ;; *************** function _pad *****************
  4150 ;; Defined at:
  4151 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4154 ;;		 -> sprintf@f(11), 
  4155 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4156 ;;		 -> dbuf(32), 
  4157 ;;  p               2   20[COMRAM] int 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  w               2   25[COMRAM] int 
  4160 ;;  i               2   23[COMRAM] int 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  2   16[COMRAM] int 
  4163 ;; Registers used:
  4164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4170 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4174 ;;Total ram usage:       11 bytes
  4175 ;; Hardware stack levels used: 1
  4176 ;; Hardware stack levels required when called: 4
  4177 ;; This function calls:
  4178 ;;		_fputc
  4179 ;;		_fputs
  4180 ;;		_strlen
  4181 ;; This function is called by:
  4182 ;;		_dtoa
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text9
  4187  005018                     __ptext9:
  4188                           	callstack 0
  4189  005018                     _pad:
  4190                           	callstack 22
  4191  005018                     
  4192                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4193  005018  0100               	movlb	0	; () banked
  4194  00501A  A17C               	btfss	_flags& (0+255),0,b
  4195  00501C  EF12  F028         	goto	u4031
  4196  005020  EF14  F028         	goto	u4030
  4197  005024                     u4031:
  4198  005024  EF1E  F028         	goto	l4173
  4199  005028                     u4030:
  4200  005028                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4203  005028  C013  F00A         	movff	pad@buf,fputs@s
  4204  00502C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4205  005030  C011  F00C         	movff	pad@fp,fputs@fp
  4206  005034  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4207  005038  EC1C  F02C         	call	_fputs	;wreg free
  4208  00503C                     l4173:
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4211  00503C  BE16               	btfsc	(pad@p+1)^0,7,c
  4212  00503E  EF23  F028         	goto	u4041
  4213  005042  EF25  F028         	goto	u4040
  4214  005046                     u4041:
  4215  005046  EF2B  F028         	goto	l4177
  4216  00504A                     u4040:
  4217  00504A  C015  F01A         	movff	pad@p,pad@w
  4218  00504E  C016  F01B         	movff	pad@p+1,pad@w+1
  4219  005052  EF2F  F028         	goto	l1425
  4220  005056                     l4177:
  4221  005056  0E00               	movlw	0
  4222  005058  6E1B               	movwf	(pad@w+1)^0,c
  4223  00505A  0E00               	movlw	0
  4224  00505C  6E1A               	movwf	pad@w^0,c
  4225  00505E                     l1425:
  4226                           
  4227                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4228  00505E  0E00               	movlw	0
  4229  005060  6E19               	movwf	(pad@i+1)^0,c
  4230  005062  0E00               	movlw	0
  4231  005064  6E18               	movwf	pad@i^0,c
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4234  005066  EF41  F028         	goto	l4183
  4235  00506A                     l4179:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4238  00506A  0E00               	movlw	0
  4239  00506C  6E02               	movwf	(fputc@c+1)^0,c
  4240  00506E  0E20               	movlw	32
  4241  005070  6E01               	movwf	fputc@c^0,c
  4242  005072  C011  F003         	movff	pad@fp,fputc@fp
  4243  005076  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4244  00507A  ECA7  F027         	call	_fputc	;wreg free
  4245  00507E                     
  4246                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4247  00507E  4A18               	infsnz	pad@i^0,f,c
  4248  005080  2A19               	incf	(pad@i+1)^0,f,c
  4249  005082                     l4183:
  4250                           
  4251                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4252  005082  501A               	movf	pad@w^0,w,c
  4253  005084  5C18               	subwf	pad@i^0,w,c
  4254  005086  5019               	movf	(pad@i+1)^0,w,c
  4255  005088  0A80               	xorlw	128
  4256  00508A  6E17               	movwf	??_pad^0,c
  4257  00508C  501B               	movf	(pad@w+1)^0,w,c
  4258  00508E  0A80               	xorlw	128
  4259  005090  5817               	subwfb	??_pad^0,w,c
  4260  005092  A0D8               	btfss	status,0,c
  4261  005094  EF4E  F028         	goto	u4051
  4262  005098  EF50  F028         	goto	u4050
  4263  00509C                     u4051:
  4264  00509C  EF35  F028         	goto	l4179
  4265  0050A0                     u4050:
  4266  0050A0                     
  4267                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4268  0050A0  0100               	movlb	0	; () banked
  4269  0050A2  B17C               	btfsc	_flags& (0+255),0,b
  4270  0050A4  EF56  F028         	goto	u4061
  4271  0050A8  EF58  F028         	goto	u4060
  4272  0050AC                     u4061:
  4273  0050AC  EF62  F028         	goto	l4187
  4274  0050B0                     u4060:
  4275  0050B0                     
  4276                           ; BSR set to: 0
  4277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4278  0050B0  C013  F00A         	movff	pad@buf,fputs@s
  4279  0050B4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4280  0050B8  C011  F00C         	movff	pad@fp,fputs@fp
  4281  0050BC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4282  0050C0  EC1C  F02C         	call	_fputs	;wreg free
  4283  0050C4                     l4187:
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4286  0050C4  C013  F001         	movff	pad@buf,strlen@s
  4287  0050C8  C014  F002         	movff	pad@buf+1,strlen@s+1
  4288  0050CC  EC59  F02D         	call	_strlen	;wreg free
  4289  0050D0  501A               	movf	pad@w^0,w,c
  4290  0050D2  2401               	addwf	?_strlen^0,w,c
  4291  0050D4  6E11               	movwf	?_pad^0,c
  4292  0050D6  501B               	movf	(pad@w+1)^0,w,c
  4293  0050D8  2002               	addwfc	(?_strlen+1)^0,w,c
  4294  0050DA  6E12               	movwf	(?_pad+1)^0,c
  4295  0050DC  0012               	return		;funcret
  4296  0050DE                     __end_of_pad:
  4297                           	callstack 0
  4298                           
  4299 ;; *************** function _strlen *****************
  4300 ;; Defined at:
  4301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4304 ;;		 -> dbuf(32), 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4307 ;;		 -> dbuf(32), 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  2    0[COMRAM] unsigned int 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4317 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;Total ram usage:        4 bytes
  4322 ;; Hardware stack levels used: 1
  4323 ;; Hardware stack levels required when called: 1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_pad
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text10
  4332  005AB2                     __ptext10:
  4333                           	callstack 0
  4334  005AB2                     _strlen:
  4335                           	callstack 24
  4336  005AB2  C001  F003         	movff	strlen@s,strlen@a
  4337  005AB6  C002  F004         	movff	strlen@s+1,strlen@a+1
  4338  005ABA  EF61  F02D         	goto	l3873
  4339  005ABE                     l3871:
  4340  005ABE  4A01               	infsnz	strlen@s^0,f,c
  4341  005AC0  2A02               	incf	(strlen@s+1)^0,f,c
  4342  005AC2                     l3873:
  4343  005AC2  C001  FFD9         	movff	strlen@s,fsr2l
  4344  005AC6  C002  FFDA         	movff	strlen@s+1,fsr2h
  4345  005ACA  50DF               	movf	indf2,w,c
  4346  005ACC  A4D8               	btfss	status,2,c
  4347  005ACE  EF6B  F02D         	goto	u3581
  4348  005AD2  EF6D  F02D         	goto	u3580
  4349  005AD6                     u3581:
  4350  005AD6  EF5F  F02D         	goto	l3871
  4351  005ADA                     u3580:
  4352  005ADA  5003               	movf	strlen@a^0,w,c
  4353  005ADC  5C01               	subwf	strlen@s^0,w,c
  4354  005ADE  6E01               	movwf	?_strlen^0,c
  4355  005AE0  5004               	movf	(strlen@a+1)^0,w,c
  4356  005AE2  5802               	subwfb	(strlen@s+1)^0,w,c
  4357  005AE4  6E02               	movwf	(?_strlen+1)^0,c
  4358  005AE6  0012               	return		;funcret
  4359  005AE8                     __end_of_strlen:
  4360                           	callstack 0
  4361                           
  4362 ;; *************** function _fputs *****************
  4363 ;; Defined at:
  4364 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4367 ;;		 -> dbuf(32), 
  4368 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4369 ;;		 -> sprintf@f(11), 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  i               2   14[COMRAM] int 
  4372 ;;  c               1   13[COMRAM] unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  2    9[COMRAM] int 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;Total ram usage:        7 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 3
  4389 ;; This function calls:
  4390 ;;		_fputc
  4391 ;; This function is called by:
  4392 ;;		_pad
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text11
  4397  005838                     __ptext11:
  4398                           	callstack 0
  4399  005838                     _fputs:
  4400                           	callstack 22
  4401  005838  0E00               	movlw	0
  4402  00583A  6E10               	movwf	(fputs@i+1)^0,c
  4403  00583C  0E00               	movlw	0
  4404  00583E  6E0F               	movwf	fputs@i^0,c
  4405  005840  EF2D  F02C         	goto	l3867
  4406  005844                     l3863:
  4407  005844  C00E  F001         	movff	fputs@c,fputc@c
  4408  005848  6A02               	clrf	(fputc@c+1)^0,c
  4409  00584A  C00C  F003         	movff	fputs@fp,fputc@fp
  4410  00584E  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4411  005852  ECA7  F027         	call	_fputc	;wreg free
  4412  005856  4A0F               	infsnz	fputs@i^0,f,c
  4413  005858  2A10               	incf	(fputs@i+1)^0,f,c
  4414  00585A                     l3867:
  4415  00585A  500F               	movf	fputs@i^0,w,c
  4416  00585C  240A               	addwf	fputs@s^0,w,c
  4417  00585E  6ED9               	movwf	fsr2l,c
  4418  005860  5010               	movf	(fputs@i+1)^0,w,c
  4419  005862  200B               	addwfc	(fputs@s+1)^0,w,c
  4420  005864  6EDA               	movwf	fsr2h,c
  4421  005866  50DF               	movf	indf2,w,c
  4422  005868  6E0E               	movwf	fputs@c^0,c
  4423  00586A  500E               	movf	fputs@c^0,w,c
  4424  00586C  A4D8               	btfss	status,2,c
  4425  00586E  EF3B  F02C         	goto	u3571
  4426  005872  EF3D  F02C         	goto	u3570
  4427  005876                     u3571:
  4428  005876  EF22  F02C         	goto	l3863
  4429  00587A                     u3570:
  4430  00587A  0012               	return		;funcret
  4431  00587C                     __end_of_fputs:
  4432                           	callstack 0
  4433                           
  4434 ;; *************** function _fputc *****************
  4435 ;; Defined at:
  4436 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  c               2    0[COMRAM] int 
  4439 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4440 ;;		 -> sprintf@f(11), 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2    0[COMRAM] int 
  4445 ;; Registers used:
  4446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;Total ram usage:        9 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 2
  4459 ;; This function calls:
  4460 ;;		_putch
  4461 ;; This function is called by:
  4462 ;;		_pad
  4463 ;;		_vfpfcnvrt
  4464 ;;		_fputs
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text12
  4469  004F4E                     __ptext12:
  4470                           	callstack 0
  4471  004F4E                     _fputc:
  4472                           	callstack 25
  4473  004F4E  5003               	movf	fputc@fp^0,w,c
  4474  004F50  1004               	iorwf	(fputc@fp+1)^0,w,c
  4475  004F52  B4D8               	btfsc	status,2,c
  4476  004F54  EFAE  F027         	goto	u3061
  4477  004F58  EFB0  F027         	goto	u3060
  4478  004F5C                     u3061:
  4479  004F5C  EFB9  F027         	goto	l3595
  4480  004F60                     u3060:
  4481  004F60  5003               	movf	fputc@fp^0,w,c
  4482  004F62  1004               	iorwf	(fputc@fp+1)^0,w,c
  4483  004F64  A4D8               	btfss	status,2,c
  4484  004F66  EFB7  F027         	goto	u3071
  4485  004F6A  EFB9  F027         	goto	u3070
  4486  004F6E                     u3071:
  4487  004F6E  EFBE  F027         	goto	l3597
  4488  004F72                     u3070:
  4489  004F72                     l3595:
  4490  004F72  5001               	movf	fputc@c^0,w,c
  4491  004F74  ECA3  F02E         	call	_putch
  4492  004F78  EF0B  F028         	goto	l1489
  4493  004F7C                     l3597:
  4494  004F7C  EE20 F009          	lfsr	2,9
  4495  004F80  5003               	movf	fputc@fp^0,w,c
  4496  004F82  26D9               	addwf	fsr2l,f,c
  4497  004F84  5004               	movf	(fputc@fp+1)^0,w,c
  4498  004F86  22DA               	addwfc	fsr2h,f,c
  4499  004F88  50DE               	movf	postinc2,w,c
  4500  004F8A  10DE               	iorwf	postinc2,w,c
  4501  004F8C  B4D8               	btfsc	status,2,c
  4502  004F8E  EFCB  F027         	goto	u3081
  4503  004F92  EFCD  F027         	goto	u3080
  4504  004F96                     u3081:
  4505  004F96  EFE8  F027         	goto	l3601
  4506  004F9A                     u3080:
  4507  004F9A  EE20 F009          	lfsr	2,9
  4508  004F9E  5003               	movf	fputc@fp^0,w,c
  4509  004FA0  26D9               	addwf	fsr2l,f,c
  4510  004FA2  5004               	movf	(fputc@fp+1)^0,w,c
  4511  004FA4  22DA               	addwfc	fsr2h,f,c
  4512  004FA6  EE10 F003          	lfsr	1,3
  4513  004FAA  5003               	movf	fputc@fp^0,w,c
  4514  004FAC  26E1               	addwf	fsr1l,f,c
  4515  004FAE  5004               	movf	(fputc@fp+1)^0,w,c
  4516  004FB0  22E2               	addwfc	fsr1h,f,c
  4517  004FB2  50DE               	movf	postinc2,w,c
  4518  004FB4  5CE6               	subwf	postinc1,w,c
  4519  004FB6  50E6               	movf	postinc1,w,c
  4520  004FB8  0A80               	xorlw	128
  4521  004FBA  6E09               	movwf	(??_fputc+4)^0,c
  4522  004FBC  50DE               	movf	postinc2,w,c
  4523  004FBE  0A80               	xorlw	128
  4524  004FC0  5809               	subwfb	(??_fputc+4)^0,w,c
  4525  004FC2  B0D8               	btfsc	status,0,c
  4526  004FC4  EFE6  F027         	goto	u3091
  4527  004FC8  EFE8  F027         	goto	u3090
  4528  004FCC                     u3091:
  4529  004FCC  EF0B  F028         	goto	l1489
  4530  004FD0                     u3090:
  4531  004FD0                     l3601:
  4532  004FD0  EE20 F003          	lfsr	2,3
  4533  004FD4  5003               	movf	fputc@fp^0,w,c
  4534  004FD6  26D9               	addwf	fsr2l,f,c
  4535  004FD8  5004               	movf	(fputc@fp+1)^0,w,c
  4536  004FDA  22DA               	addwfc	fsr2h,f,c
  4537  004FDC  CFDE F005          	movff	postinc2,??_fputc
  4538  004FE0  CFDD F006          	movff	postdec2,??_fputc+1
  4539  004FE4  C003  FFD9         	movff	fputc@fp,fsr2l
  4540  004FE8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4541  004FEC  CFDE F007          	movff	postinc2,??_fputc+2
  4542  004FF0  CFDD F008          	movff	postdec2,??_fputc+3
  4543  004FF4  5005               	movf	??_fputc^0,w,c
  4544  004FF6  2407               	addwf	(??_fputc+2)^0,w,c
  4545  004FF8  6ED9               	movwf	fsr2l,c
  4546  004FFA  5006               	movf	(??_fputc+1)^0,w,c
  4547  004FFC  2008               	addwfc	(??_fputc+3)^0,w,c
  4548  004FFE  6EDA               	movwf	fsr2h,c
  4549  005000  C001  FFDF         	movff	fputc@c,indf2
  4550  005004  EE20 F003          	lfsr	2,3
  4551  005008  5003               	movf	fputc@fp^0,w,c
  4552  00500A  26D9               	addwf	fsr2l,f,c
  4553  00500C  5004               	movf	(fputc@fp+1)^0,w,c
  4554  00500E  22DA               	addwfc	fsr2h,f,c
  4555  005010  2ADE               	incf	postinc2,f,c
  4556  005012  0E00               	movlw	0
  4557  005014  22DD               	addwfc	postdec2,f,c
  4558  005016                     l1489:
  4559  005016  0012               	return		;funcret
  4560  005018                     __end_of_fputc:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _putch *****************
  4564 ;; Defined at:
  4565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  c               1    wreg     unsigned char 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  c               1    0[COMRAM] unsigned char 
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  1    wreg      void 
  4572 ;; Registers used:
  4573 ;;		wreg
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;Total ram usage:        0 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; Hardware stack levels required when called: 1
  4586 ;; This function calls:
  4587 ;;		Nothing
  4588 ;; This function is called by:
  4589 ;;		_fputc
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text13
  4594  005D46                     __ptext13:
  4595                           	callstack 0
  4596  005D46                     _putch:
  4597                           	callstack 25
  4598  005D46  0012               	return		;funcret
  4599  005D48                     __end_of_putch:
  4600                           	callstack 0
  4601                           
  4602 ;; *************** function _abs *****************
  4603 ;; Defined at:
  4604 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  a               2   18[COMRAM] int 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;		None
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  2   18[COMRAM] int 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4622 ;;Total ram usage:        4 bytes
  4623 ;; Hardware stack levels used: 1
  4624 ;; Hardware stack levels required when called: 1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_dtoa
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text14
  4633  0059C6                     __ptext14:
  4634                           	callstack 0
  4635  0059C6                     _abs:
  4636                           	callstack 25
  4637  0059C6  BE14               	btfsc	(abs@a+1)^0,7,c
  4638  0059C8  EFF0  F02C         	goto	u4070
  4639  0059CC  5014               	movf	(abs@a+1)^0,w,c
  4640  0059CE  E106               	bnz	u4071
  4641  0059D0  0413               	decf	abs@a^0,w,c
  4642  0059D2  B0D8               	btfsc	status,0,c
  4643  0059D4  EFEE  F02C         	goto	u4071
  4644  0059D8  EFF0  F02C         	goto	u4070
  4645  0059DC                     u4071:
  4646  0059DC  EFFE  F02C         	goto	l1474
  4647  0059E0                     u4070:
  4648  0059E0  C013  F015         	movff	abs@a,??_abs
  4649  0059E4  C014  F016         	movff	abs@a+1,??_abs+1
  4650  0059E8  1E15               	comf	??_abs^0,f,c
  4651  0059EA  1E16               	comf	(??_abs+1)^0,f,c
  4652  0059EC  4A15               	infsnz	??_abs^0,f,c
  4653  0059EE  2A16               	incf	(??_abs+1)^0,f,c
  4654  0059F0  C015  F013         	movff	??_abs,?_abs
  4655  0059F4  C016  F014         	movff	??_abs+1,?_abs+1
  4656  0059F8  EF02  F02D         	goto	l1477
  4657  0059FC                     l1474:
  4658  0059FC  C013  F013         	movff	abs@a,?_abs
  4659  005A00  C014  F014         	movff	abs@a+1,?_abs+1
  4660  005A04                     l1477:
  4661  005A04  0012               	return		;funcret
  4662  005A06                     __end_of_abs:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function ___aomod *****************
  4666 ;; Defined at:
  4667 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  dividend        8    0[COMRAM] long long 
  4670 ;;  divisor         8    8[COMRAM] long long 
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  sign            1   17[COMRAM] unsigned char 
  4673 ;;  counter         1   16[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  8    0[COMRAM] long long 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4683 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;Total ram usage:       18 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 1
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_dtoa
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text15
  4698  0048F6                     __ptext15:
  4699                           	callstack 0
  4700  0048F6                     ___aomod:
  4701                           	callstack 25
  4702  0048F6  0E00               	movlw	0
  4703  0048F8  6E12               	movwf	___aomod@sign^0,c
  4704  0048FA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4705  0048FC  EF84  F024         	goto	u3720
  4706  004900  EF82  F024         	goto	u3721
  4707  004904                     u3721:
  4708  004904  EF96  F024         	goto	l3975
  4709  004908                     u3720:
  4710  004908  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4711  00490A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4712  00490C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4713  00490E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4714  004910  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4715  004912  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4716  004914  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4717  004916  6C01               	negf	___aomod@dividend^0,c
  4718  004918  0E00               	movlw	0
  4719  00491A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4720  00491C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4721  00491E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4722  004920  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4723  004922  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4724  004924  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4725  004926  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4726  004928  0E01               	movlw	1
  4727  00492A  6E12               	movwf	___aomod@sign^0,c
  4728  00492C                     l3975:
  4729  00492C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4730  00492E  EF9D  F024         	goto	u3730
  4731  004932  EF9B  F024         	goto	u3731
  4732  004936                     u3731:
  4733  004936  EFAD  F024         	goto	l3979
  4734  00493A                     u3730:
  4735  00493A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4736  00493C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4737  00493E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4738  004940  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4739  004942  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4740  004944  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4741  004946  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4742  004948  6C09               	negf	___aomod@divisor^0,c
  4743  00494A  0E00               	movlw	0
  4744  00494C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4745  00494E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4746  004950  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4747  004952  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4748  004954  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4749  004956  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4750  004958  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4751  00495A                     l3979:
  4752  00495A  5009               	movf	___aomod@divisor^0,w,c
  4753  00495C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4754  00495E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4755  004960  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4756  004962  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4757  004964  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4758  004966  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4759  004968  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4760  00496A  B4D8               	btfsc	status,2,c
  4761  00496C  EFBA  F024         	goto	u3741
  4762  004970  EFBC  F024         	goto	u3740
  4763  004974                     u3741:
  4764  004974  EF04  F025         	goto	l3995
  4765  004978                     u3740:
  4766  004978  0E01               	movlw	1
  4767  00497A  6E11               	movwf	___aomod@counter^0,c
  4768  00497C  EFCA  F024         	goto	l3985
  4769  004980                     l3983:
  4770  004980  90D8               	bcf	status,0,c
  4771  004982  3609               	rlcf	___aomod@divisor^0,f,c
  4772  004984  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4773  004986  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4774  004988  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4775  00498A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4776  00498C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4777  00498E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4778  004990  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4779  004992  2A11               	incf	___aomod@counter^0,f,c
  4780  004994                     l3985:
  4781  004994  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4782  004996  EFCF  F024         	goto	u3751
  4783  00499A  EFD1  F024         	goto	u3750
  4784  00499E                     u3751:
  4785  00499E  EFC0  F024         	goto	l3983
  4786  0049A2                     u3750:
  4787  0049A2                     l3987:
  4788  0049A2  5009               	movf	___aomod@divisor^0,w,c
  4789  0049A4  5C01               	subwf	___aomod@dividend^0,w,c
  4790  0049A6  500A               	movf	(___aomod@divisor+1)^0,w,c
  4791  0049A8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4792  0049AA  500B               	movf	(___aomod@divisor+2)^0,w,c
  4793  0049AC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4794  0049AE  500C               	movf	(___aomod@divisor+3)^0,w,c
  4795  0049B0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4796  0049B2  500D               	movf	(___aomod@divisor+4)^0,w,c
  4797  0049B4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4798  0049B6  500E               	movf	(___aomod@divisor+5)^0,w,c
  4799  0049B8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4800  0049BA  500F               	movf	(___aomod@divisor+6)^0,w,c
  4801  0049BC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4802  0049BE  5010               	movf	(___aomod@divisor+7)^0,w,c
  4803  0049C0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4804  0049C2  A0D8               	btfss	status,0,c
  4805  0049C4  EFE6  F024         	goto	u3761
  4806  0049C8  EFE8  F024         	goto	u3760
  4807  0049CC                     u3761:
  4808  0049CC  EFF8  F024         	goto	l3991
  4809  0049D0                     u3760:
  4810  0049D0  5009               	movf	___aomod@divisor^0,w,c
  4811  0049D2  5E01               	subwf	___aomod@dividend^0,f,c
  4812  0049D4  500A               	movf	(___aomod@divisor+1)^0,w,c
  4813  0049D6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4814  0049D8  500B               	movf	(___aomod@divisor+2)^0,w,c
  4815  0049DA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4816  0049DC  500C               	movf	(___aomod@divisor+3)^0,w,c
  4817  0049DE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4818  0049E0  500D               	movf	(___aomod@divisor+4)^0,w,c
  4819  0049E2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4820  0049E4  500E               	movf	(___aomod@divisor+5)^0,w,c
  4821  0049E6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4822  0049E8  500F               	movf	(___aomod@divisor+6)^0,w,c
  4823  0049EA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4824  0049EC  5010               	movf	(___aomod@divisor+7)^0,w,c
  4825  0049EE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4826  0049F0                     l3991:
  4827  0049F0  90D8               	bcf	status,0,c
  4828  0049F2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4829  0049F4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4830  0049F6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4831  0049F8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4832  0049FA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4833  0049FC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4834  0049FE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4835  004A00  3209               	rrcf	___aomod@divisor^0,f,c
  4836  004A02  2E11               	decfsz	___aomod@counter^0,f,c
  4837  004A04  EFD1  F024         	goto	l3987
  4838  004A08                     l3995:
  4839  004A08  5012               	movf	___aomod@sign^0,w,c
  4840  004A0A  B4D8               	btfsc	status,2,c
  4841  004A0C  EF0A  F025         	goto	u3771
  4842  004A10  EF0C  F025         	goto	u3770
  4843  004A14                     u3771:
  4844  004A14  EF1C  F025         	goto	l3999
  4845  004A18                     u3770:
  4846  004A18  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4847  004A1A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4848  004A1C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4849  004A1E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4850  004A20  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4851  004A22  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4852  004A24  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4853  004A26  6C01               	negf	___aomod@dividend^0,c
  4854  004A28  0E00               	movlw	0
  4855  004A2A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4856  004A2C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4857  004A2E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4858  004A30  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4859  004A32  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4860  004A34  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4861  004A36  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4862  004A38                     l3999:
  4863  004A38  C001  F001         	movff	___aomod@dividend,?___aomod
  4864  004A3C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4865  004A40  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4866  004A44  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4867  004A48  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4868  004A4C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4869  004A50  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4870  004A54  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4871  004A58  0012               	return		;funcret
  4872  004A5A                     __end_of___aomod:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function ___aodiv *****************
  4876 ;; Defined at:
  4877 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  dividend        8    0[COMRAM] long long 
  4880 ;;  divisor         8    8[COMRAM] long long 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  quotient        8   18[COMRAM] long long 
  4883 ;;  sign            1   17[COMRAM] unsigned char 
  4884 ;;  counter         1   16[COMRAM] unsigned char 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  8    0[COMRAM] long long 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4894 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4898 ;;Total ram usage:       26 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 1
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_dtoa
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text16
  4909  00476E                     __ptext16:
  4910                           	callstack 0
  4911  00476E                     ___aodiv:
  4912                           	callstack 25
  4913  00476E  0E00               	movlw	0
  4914  004770  6E12               	movwf	___aodiv@sign^0,c
  4915  004772  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4916  004774  EFC0  F023         	goto	u3650
  4917  004778  EFBE  F023         	goto	u3651
  4918  00477C                     u3651:
  4919  00477C  EFD2  F023         	goto	l3931
  4920  004780                     u3650:
  4921  004780  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4922  004782  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4923  004784  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4924  004786  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4925  004788  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4926  00478A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4927  00478C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4928  00478E  6C09               	negf	___aodiv@divisor^0,c
  4929  004790  0E00               	movlw	0
  4930  004792  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4931  004794  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4932  004796  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4933  004798  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4934  00479A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4935  00479C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4936  00479E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4937  0047A0  0E01               	movlw	1
  4938  0047A2  6E12               	movwf	___aodiv@sign^0,c
  4939  0047A4                     l3931:
  4940  0047A4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4941  0047A6  EFD9  F023         	goto	u3660
  4942  0047AA  EFD7  F023         	goto	u3661
  4943  0047AE                     u3661:
  4944  0047AE  EFEB  F023         	goto	l3937
  4945  0047B2                     u3660:
  4946  0047B2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4947  0047B4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4948  0047B6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4949  0047B8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4950  0047BA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4951  0047BC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4952  0047BE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4953  0047C0  6C01               	negf	___aodiv@dividend^0,c
  4954  0047C2  0E00               	movlw	0
  4955  0047C4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4956  0047C6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4957  0047C8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4958  0047CA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4959  0047CC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4960  0047CE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4961  0047D0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4962  0047D2  0E01               	movlw	1
  4963  0047D4  1A12               	xorwf	___aodiv@sign^0,f,c
  4964  0047D6                     l3937:
  4965  0047D6  EE20  F013         	lfsr	2,___aodiv@quotient
  4966  0047DA  0E07               	movlw	7
  4967  0047DC                     u3671:
  4968  0047DC  6ADE               	clrf	postinc2,c
  4969  0047DE  06E8               	decf	wreg,f,c
  4970  0047E0  E2FD               	bc	u3671
  4971  0047E2  5009               	movf	___aodiv@divisor^0,w,c
  4972  0047E4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4973  0047E6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4974  0047E8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4975  0047EA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4976  0047EC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4977  0047EE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4978  0047F0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4979  0047F2  B4D8               	btfsc	status,2,c
  4980  0047F4  EFFE  F023         	goto	u3681
  4981  0047F8  EF00  F024         	goto	u3680
  4982  0047FC                     u3681:
  4983  0047FC  EF52  F024         	goto	l3959
  4984  004800                     u3680:
  4985  004800  0E01               	movlw	1
  4986  004802  6E11               	movwf	___aodiv@counter^0,c
  4987  004804  EF0E  F024         	goto	l3945
  4988  004808                     l3943:
  4989  004808  90D8               	bcf	status,0,c
  4990  00480A  3609               	rlcf	___aodiv@divisor^0,f,c
  4991  00480C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4992  00480E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4993  004810  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4994  004812  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4995  004814  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4996  004816  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4997  004818  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4998  00481A  2A11               	incf	___aodiv@counter^0,f,c
  4999  00481C                     l3945:
  5000  00481C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5001  00481E  EF13  F024         	goto	u3691
  5002  004822  EF15  F024         	goto	u3690
  5003  004826                     u3691:
  5004  004826  EF04  F024         	goto	l3943
  5005  00482A                     u3690:
  5006  00482A                     l3947:
  5007  00482A  90D8               	bcf	status,0,c
  5008  00482C  3613               	rlcf	___aodiv@quotient^0,f,c
  5009  00482E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5010  004830  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5011  004832  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5012  004834  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5013  004836  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5014  004838  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5015  00483A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5016  00483C  5009               	movf	___aodiv@divisor^0,w,c
  5017  00483E  5C01               	subwf	___aodiv@dividend^0,w,c
  5018  004840  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5019  004842  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5020  004844  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5021  004846  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5022  004848  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5023  00484A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5024  00484C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5025  00484E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5026  004850  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5027  004852  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5028  004854  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5029  004856  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5030  004858  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5031  00485A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5032  00485C  A0D8               	btfss	status,0,c
  5033  00485E  EF33  F024         	goto	u3701
  5034  004862  EF35  F024         	goto	u3700
  5035  004866                     u3701:
  5036  004866  EF46  F024         	goto	l3955
  5037  00486A                     u3700:
  5038  00486A  5009               	movf	___aodiv@divisor^0,w,c
  5039  00486C  5E01               	subwf	___aodiv@dividend^0,f,c
  5040  00486E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5041  004870  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5042  004872  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5043  004874  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5044  004876  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5045  004878  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5046  00487A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5047  00487C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5048  00487E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5049  004880  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5050  004882  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5051  004884  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5052  004886  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5053  004888  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5054  00488A  8013               	bsf	___aodiv@quotient^0,0,c
  5055  00488C                     l3955:
  5056  00488C  90D8               	bcf	status,0,c
  5057  00488E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5058  004890  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5059  004892  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5060  004894  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5061  004896  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5062  004898  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5063  00489A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5064  00489C  3209               	rrcf	___aodiv@divisor^0,f,c
  5065  00489E  2E11               	decfsz	___aodiv@counter^0,f,c
  5066  0048A0  EF15  F024         	goto	l3947
  5067  0048A4                     l3959:
  5068  0048A4  5012               	movf	___aodiv@sign^0,w,c
  5069  0048A6  B4D8               	btfsc	status,2,c
  5070  0048A8  EF58  F024         	goto	u3711
  5071  0048AC  EF5A  F024         	goto	u3710
  5072  0048B0                     u3711:
  5073  0048B0  EF6A  F024         	goto	l3963
  5074  0048B4                     u3710:
  5075  0048B4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5076  0048B6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5077  0048B8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5078  0048BA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5079  0048BC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5080  0048BE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5081  0048C0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5082  0048C2  6C13               	negf	___aodiv@quotient^0,c
  5083  0048C4  0E00               	movlw	0
  5084  0048C6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5085  0048C8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5086  0048CA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5087  0048CC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5088  0048CE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5089  0048D0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5090  0048D2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5091  0048D4                     l3963:
  5092  0048D4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5093  0048D8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5094  0048DC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5095  0048E0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5096  0048E4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5097  0048E8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5098  0048EC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5099  0048F0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5100  0048F4  0012               	return		;funcret
  5101  0048F6                     __end_of___aodiv:
  5102                           	callstack 0
  5103                           
  5104 ;; *************** function _short_burst *****************
  5105 ;; Defined at:
  5106 ;;		line 10 in file "movement.c"
  5107 ;; Parameters:    Size  Location     Type
  5108 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5109 ;;		 -> main@motorL(9), 
  5110 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5111 ;;		 -> main@motorR(9), 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;		None
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;Total ram usage:        6 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; Hardware stack levels required when called: 4
  5130 ;; This function calls:
  5131 ;;		_fullSpeedAhead
  5132 ;;		_stop
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text17
  5139  0058BE                     __ptext17:
  5140                           	callstack 0
  5141  0058BE                     _short_burst:
  5142                           	callstack 26
  5143  0058BE                     
  5144                           ;movement.c: 10: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
  5145  0058BE  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  5146  0058C2  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  5147  0058C6  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  5148  0058CA  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  5149  0058CE  ECD2  F028         	call	_fullSpeedAhead	;wreg free
  5150  0058D2                     
  5151                           ;movement.c: 13:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5152  0058D2  0E29               	movlw	41
  5153  0058D4  6E25               	movwf	(??_short_burst+1)^0,c
  5154  0058D6  0E96               	movlw	150
  5155  0058D8  6E24               	movwf	??_short_burst^0,c
  5156  0058DA  0E7F               	movlw	127
  5157  0058DC                     u6207:
  5158  0058DC  2EE8               	decfsz	wreg,f,c
  5159  0058DE  D7FE               	bra	u6207
  5160  0058E0  2E24               	decfsz	??_short_burst^0,f,c
  5161  0058E2  D7FC               	bra	u6207
  5162  0058E4  2E25               	decfsz	(??_short_burst+1)^0,f,c
  5163  0058E6  D7FA               	bra	u6207
  5164  0058E8  F000               	nop	
  5165  0058EA                     
  5166                           ;movement.c: 14:     stop(mL,mR);
  5167  0058EA  C020  F01A         	movff	short_burst@mL,stop@mL
  5168  0058EE  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  5169  0058F2  C022  F01C         	movff	short_burst@mR,stop@mR
  5170  0058F6  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  5171  0058FA  EC96  F029         	call	_stop	;wreg free
  5172  0058FE  0012               	return		;funcret
  5173  005900                     __end_of_short_burst:
  5174                           	callstack 0
  5175                           
  5176 ;; *************** function _sendStringSerial4 *****************
  5177 ;; Defined at:
  5178 ;;		line 35 in file "serial.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  string          2    1[COMRAM] PTR unsigned char 
  5181 ;;		 -> main@buf(100), color_predict@buf(100), color_display@buf(100), 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5197 ;;Total ram usage:        2 bytes
  5198 ;; Hardware stack levels used: 1
  5199 ;; Hardware stack levels required when called: 2
  5200 ;; This function calls:
  5201 ;;		_sendCharSerial4
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;;		_color_display
  5205 ;;		_color_predict
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text18
  5210  005B1C                     __ptext18:
  5211                           	callstack 0
  5212  005B1C                     _sendStringSerial4:
  5213                           	callstack 28
  5214  005B1C                     
  5215                           ;serial.c: 37:     while(*string != 0){
  5216  005B1C  EF99  F02D         	goto	l5219
  5217  005B20                     l5215:
  5218                           
  5219                           ;serial.c: 38:   sendCharSerial4(*string++);}
  5220  005B20  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5221  005B24  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5222  005B28  50DF               	movf	indf2,w,c
  5223  005B2A  EC70  F02E         	call	_sendCharSerial4
  5224  005B2E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  5225  005B30  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  5226  005B32                     l5219:
  5227                           
  5228                           ;serial.c: 37:     while(*string != 0){
  5229  005B32  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5230  005B36  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5231  005B3A  50DF               	movf	indf2,w,c
  5232  005B3C  A4D8               	btfss	status,2,c
  5233  005B3E  EFA3  F02D         	goto	u5711
  5234  005B42  EFA5  F02D         	goto	u5710
  5235  005B46                     u5711:
  5236  005B46  EF90  F02D         	goto	l5215
  5237  005B4A                     u5710:
  5238  005B4A  0012               	return		;funcret
  5239  005B4C                     __end_of_sendStringSerial4:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _sendCharSerial4 *****************
  5243 ;; Defined at:
  5244 ;;		line 29 in file "serial.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  charToSend      1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  charToSend      1    0[COMRAM] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_sendStringSerial4
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text19
  5273  005CE0                     __ptext19:
  5274                           	callstack 0
  5275  005CE0                     _sendCharSerial4:
  5276                           	callstack 28
  5277                           
  5278                           ;incstack = 0
  5279                           ;sendCharSerial4@charToSend stored from wreg
  5280  005CE0  6E01               	movwf	sendCharSerial4@charToSend^0,c
  5281  005CE2                     l395:
  5282  005CE2  010E               	movlb	14	; () banked
  5283  005CE4  A537               	btfss	55,2,b	;volatile
  5284  005CE6  EF77  F02E         	goto	u5541
  5285  005CEA  EF79  F02E         	goto	u5540
  5286  005CEE                     u5541:
  5287  005CEE  EF71  F02E         	goto	l395
  5288  005CF2                     u5540:
  5289  005CF2                     
  5290                           ; BSR set to: 14
  5291                           ;serial.c: 31:     TX4REG = charToSend;
  5292  005CF2  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5293  005CF6                     
  5294                           ; BSR set to: 14
  5295  005CF6  0012               	return		;funcret
  5296  005CF8                     __end_of_sendCharSerial4:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function _pin_init *****************
  5300 ;; Defined at:
  5301 ;;		line 76 in file "movement.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		None
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 1
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_main
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text20
  5330  005BC4                     __ptext20:
  5331                           	callstack 0
  5332  005BC4                     _pin_init:
  5333                           	callstack 29
  5334  005BC4  8486               	bsf	134,2,c	;volatile
  5335                           
  5336                           ;movement.c: 78:     ANSELFbits.ANSELF2=0;
  5337  005BC6  010E               	movlb	14	; () banked
  5338  005BC8  95B4               	bcf	180,2,b	;volatile
  5339                           
  5340                           ;movement.c: 79:     TRISFbits.TRISF3=1;
  5341  005BCA  8686               	bsf	134,3,c	;volatile
  5342                           
  5343                           ;movement.c: 80:     ANSELFbits.ANSELF3=0;
  5344  005BCC  97B4               	bcf	180,3,b	;volatile
  5345                           
  5346                           ;movement.c: 85:     TRISGbits.TRISG1 = 0;
  5347  005BCE  9287               	bcf	135,1,c	;volatile
  5348                           
  5349                           ;movement.c: 86:     TRISFbits.TRISF7 = 0;
  5350  005BD0  9E86               	bcf	134,7,c	;volatile
  5351                           
  5352                           ;movement.c: 87:     TRISAbits.TRISA4 = 0;
  5353  005BD2  9881               	bcf	129,4,c	;volatile
  5354                           
  5355                           ;movement.c: 88:     LATGbits.LATG1 = 1;
  5356  005BD4  827F               	bsf	127,1,c	;volatile
  5357                           
  5358                           ;movement.c: 89:     LATFbits.LATF7 = 1;
  5359  005BD6  8E7E               	bsf	126,7,c	;volatile
  5360                           
  5361                           ;movement.c: 90:     LATAbits.LATA4 = 1;
  5362  005BD8  8879               	bsf	121,4,c	;volatile
  5363                           
  5364                           ;movement.c: 93:     TRISDbits.TRISD7 = 0;
  5365  005BDA  9E84               	bcf	132,7,c	;volatile
  5366                           
  5367                           ;movement.c: 94:     LATDbits.LATD7 = 0;
  5368  005BDC  9E7C               	bcf	124,7,c	;volatile
  5369                           
  5370                           ;movement.c: 95:     TRISHbits.TRISH3 = 0;
  5371  005BDE  9688               	bcf	136,3,c	;volatile
  5372                           
  5373                           ;movement.c: 96:     LATHbits.LATH3 = 0;
  5374  005BE0  9680               	bcf	128,3,c	;volatile
  5375  005BE2                     
  5376                           ; BSR set to: 14
  5377  005BE2  0012               	return		;funcret
  5378  005BE4                     __end_of_pin_init:
  5379                           	callstack 0
  5380                           
  5381 ;; *************** function _initUSART4 *****************
  5382 ;; Defined at:
  5383 ;;		line 4 in file "serial.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;Total ram usage:        0 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 1
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_main
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text21
  5412  005CA4                     __ptext21:
  5413                           	callstack 0
  5414  005CA4                     _initUSART4:
  5415                           	callstack 29
  5416  005CA4                     
  5417                           ;serial.c: 8:     RC0PPS = 0x12;
  5418  005CA4  0E12               	movlw	18
  5419  005CA6  010E               	movlb	14	; () banked
  5420  005CA8  6F62               	movwf	98,b	;volatile
  5421                           
  5422                           ;serial.c: 9:     RX4PPS = 0x11;
  5423  005CAA  0E11               	movlw	17
  5424  005CAC  6F15               	movwf	21,b	;volatile
  5425  005CAE                     
  5426                           ; BSR set to: 14
  5427                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  5428  005CAE  97E9               	bcf	233,3,b	;volatile
  5429  005CB0                     
  5430                           ; BSR set to: 14
  5431                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  5432  005CB0  95E8               	bcf	232,2,b	;volatile
  5433                           
  5434                           ;serial.c: 13:     SP4BRGL = 51;
  5435  005CB2  0E33               	movlw	51
  5436  005CB4  6FE5               	movwf	229,b	;volatile
  5437                           
  5438                           ;serial.c: 15:     SP4BRGH = 0;
  5439  005CB6  0E00               	movlw	0
  5440  005CB8  6FE6               	movwf	230,b	;volatile
  5441  005CBA                     
  5442                           ; BSR set to: 14
  5443                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  5444  005CBA  89E7               	bsf	231,4,b	;volatile
  5445  005CBC                     
  5446                           ; BSR set to: 14
  5447                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  5448  005CBC  8BE8               	bsf	232,5,b	;volatile
  5449  005CBE                     
  5450                           ; BSR set to: 14
  5451                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  5452  005CBE  8FE7               	bsf	231,7,b	;volatile
  5453  005CC0                     
  5454                           ; BSR set to: 14
  5455  005CC0  0012               	return		;funcret
  5456  005CC2                     __end_of_initUSART4:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _initDCmotors_parameter *****************
  5460 ;; Defined at:
  5461 ;;		line 40 in file "dc_motor.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  5464 ;;		 -> main@motorL(9), 
  5465 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  5466 ;;		 -> main@motorR(9), 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  1    wreg      void 
  5471 ;; Registers used:
  5472 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;Total ram usage:        4 bytes
  5483 ;; Hardware stack levels used: 1
  5484 ;; Hardware stack levels required when called: 1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_main
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text22
  5493  004E7C                     __ptext22:
  5494                           	callstack 0
  5495  004E7C                     _initDCmotors_parameter:
  5496                           	callstack 29
  5497  004E7C                     
  5498                           ;dc_motor.c: 42:     motorL->power = 0;
  5499  004E7C  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  5500  004E80  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  5501  004E84  0E00               	movlw	0
  5502  004E86  6EDF               	movwf	indf2,c
  5503  004E88                     
  5504                           ;dc_motor.c: 43:     motorL->direction = 1;
  5505  004E88  EE20 F001          	lfsr	2,1
  5506  004E8C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  5507  004E8E  26D9               	addwf	fsr2l,f,c
  5508  004E90  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  5509  004E92  22DA               	addwfc	fsr2h,f,c
  5510  004E94  0E01               	movlw	1
  5511  004E96  6EDF               	movwf	indf2,c
  5512  004E98                     
  5513                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  5514  004E98  EE20 F002          	lfsr	2,2
  5515  004E9C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  5516  004E9E  26D9               	addwf	fsr2l,f,c
  5517  004EA0  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  5518  004EA2  22DA               	addwfc	fsr2h,f,c
  5519  004EA4  0EA3               	movlw	163
  5520  004EA6  6EDE               	movwf	postinc2,c
  5521  004EA8  0E0F               	movlw	15
  5522  004EAA  6EDD               	movwf	postdec2,c
  5523  004EAC                     
  5524                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  5525  004EAC  EE20 F004          	lfsr	2,4
  5526  004EB0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  5527  004EB2  26D9               	addwf	fsr2l,f,c
  5528  004EB4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  5529  004EB6  22DA               	addwfc	fsr2h,f,c
  5530  004EB8  0E7D               	movlw	125
  5531  004EBA  6EDE               	movwf	postinc2,c
  5532  004EBC  0E0F               	movlw	15
  5533  004EBE  6EDD               	movwf	postdec2,c
  5534  004EC0                     
  5535                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  5536  004EC0  EE20 F006          	lfsr	2,6
  5537  004EC4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  5538  004EC6  26D9               	addwf	fsr2l,f,c
  5539  004EC8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  5540  004ECA  22DA               	addwfc	fsr2h,f,c
  5541  004ECC  0E04               	movlw	4
  5542  004ECE  6EDF               	movwf	indf2,c
  5543  004ED0                     
  5544                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  5545  004ED0  EE20 F007          	lfsr	2,7
  5546  004ED4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  5547  004ED6  26D9               	addwf	fsr2l,f,c
  5548  004ED8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  5549  004EDA  22DA               	addwfc	fsr2h,f,c
  5550  004EDC  0EC7               	movlw	199
  5551  004EDE  6EDE               	movwf	postinc2,c
  5552  004EE0  0E00               	movlw	0
  5553  004EE2  6EDD               	movwf	postdec2,c
  5554  004EE4                     
  5555                           ;dc_motor.c: 50:     motorR->power = 0;
  5556  004EE4  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  5557  004EE8  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  5558  004EEC  0E00               	movlw	0
  5559  004EEE  6EDF               	movwf	indf2,c
  5560                           
  5561                           ;dc_motor.c: 51:     motorR->direction = 1;
  5562  004EF0  EE20 F001          	lfsr	2,1
  5563  004EF4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  5564  004EF6  26D9               	addwf	fsr2l,f,c
  5565  004EF8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  5566  004EFA  22DA               	addwfc	fsr2h,f,c
  5567  004EFC  0E01               	movlw	1
  5568  004EFE  6EDF               	movwf	indf2,c
  5569                           
  5570                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  5571  004F00  EE20 F002          	lfsr	2,2
  5572  004F04  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  5573  004F06  26D9               	addwf	fsr2l,f,c
  5574  004F08  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  5575  004F0A  22DA               	addwfc	fsr2h,f,c
  5576  004F0C  0EA0               	movlw	160
  5577  004F0E  6EDE               	movwf	postinc2,c
  5578  004F10  0E0F               	movlw	15
  5579  004F12  6EDD               	movwf	postdec2,c
  5580                           
  5581                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  5582  004F14  EE20 F004          	lfsr	2,4
  5583  004F18  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  5584  004F1A  26D9               	addwf	fsr2l,f,c
  5585  004F1C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  5586  004F1E  22DA               	addwfc	fsr2h,f,c
  5587  004F20  0E7F               	movlw	127
  5588  004F22  6EDE               	movwf	postinc2,c
  5589  004F24  0E0F               	movlw	15
  5590  004F26  6EDD               	movwf	postdec2,c
  5591                           
  5592                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  5593  004F28  EE20 F006          	lfsr	2,6
  5594  004F2C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  5595  004F2E  26D9               	addwf	fsr2l,f,c
  5596  004F30  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  5597  004F32  22DA               	addwfc	fsr2h,f,c
  5598  004F34  0E06               	movlw	6
  5599  004F36  6EDF               	movwf	indf2,c
  5600                           
  5601                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  5602  004F38  EE20 F007          	lfsr	2,7
  5603  004F3C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  5604  004F3E  26D9               	addwf	fsr2l,f,c
  5605  004F40  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  5606  004F42  22DA               	addwfc	fsr2h,f,c
  5607  004F44  0EC7               	movlw	199
  5608  004F46  6EDE               	movwf	postinc2,c
  5609  004F48  0E00               	movlw	0
  5610  004F4A  6EDD               	movwf	postdec2,c
  5611  004F4C  0012               	return		;funcret
  5612  004F4E                     __end_of_initDCmotors_parameter:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _initDCmotorsPWM *****************
  5616 ;; Defined at:
  5617 ;;		line 10 in file "dc_motor.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  PWMperiod       2    0[COMRAM] int 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;Total ram usage:        2 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 1
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_main
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           	psect	text23
  5646  005900                     __ptext23:
  5647                           	callstack 0
  5648  005900                     _initDCmotorsPWM:
  5649                           	callstack 29
  5650  005900                     
  5651                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  5652  005900  9485               	bcf	133,2,c	;volatile
  5653                           
  5654                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  5655  005902  9E83               	bcf	131,7,c	;volatile
  5656                           
  5657                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  5658  005904  9C87               	bcf	135,6,c	;volatile
  5659                           
  5660                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  5661  005906  9885               	bcf	133,4,c	;volatile
  5662                           
  5663                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  5664  005908  947D               	bcf	125,2,c	;volatile
  5665                           
  5666                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  5667  00590A  9E7B               	bcf	123,7,c	;volatile
  5668                           
  5669                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  5670  00590C  9C7F               	bcf	127,6,c	;volatile
  5671                           
  5672                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  5673  00590E  987D               	bcf	125,4,c	;volatile
  5674  005910                     
  5675                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  5676  005910  50BD               	movf	189,w,c	;volatile
  5677  005912  0B8F               	andlw	-113
  5678  005914  0930               	iorlw	48
  5679  005916  6EBD               	movwf	189,c	;volatile
  5680                           
  5681                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  5682  005918  0EE0               	movlw	-32
  5683  00591A  16BE               	andwf	190,f,c	;volatile
  5684                           
  5685                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  5686  00591C  50BF               	movf	191,w,c	;volatile
  5687  00591E  0BF0               	andlw	-16
  5688  005920  0901               	iorlw	1
  5689  005922  6EBF               	movwf	191,c	;volatile
  5690                           
  5691                           ;dc_motor.c: 28:     T2PR=200-1;
  5692  005924  0EC7               	movlw	199
  5693  005926  6EBC               	movwf	188,c	;volatile
  5694  005928                     
  5695                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  5696  005928  8EBD               	bsf	189,7,c	;volatile
  5697                           
  5698                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  5699  00592A  0E0A               	movlw	10
  5700  00592C  010E               	movlb	14	; () banked
  5701  00592E  6F74               	movwf	116,b	;volatile
  5702                           
  5703                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  5704  005930  0E0B               	movlw	11
  5705  005932  6F69               	movwf	105,b	;volatile
  5706                           
  5707                           ;dc_motor.c: 34:     PWM6DCH=0;
  5708  005934  0E00               	movlw	0
  5709  005936  6EA3               	movwf	163,c	;volatile
  5710                           
  5711                           ;dc_motor.c: 35:     PWM7DCH=0;
  5712  005938  0E00               	movlw	0
  5713  00593A  6EA0               	movwf	160,c	;volatile
  5714  00593C                     
  5715                           ; BSR set to: 14
  5716                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  5717  00593C  8EA4               	bsf	164,7,c	;volatile
  5718  00593E                     
  5719                           ; BSR set to: 14
  5720                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  5721  00593E  8EA1               	bsf	161,7,c	;volatile
  5722  005940                     
  5723                           ; BSR set to: 14
  5724  005940  0012               	return		;funcret
  5725  005942                     __end_of_initDCmotorsPWM:
  5726                           	callstack 0
  5727                           
  5728 ;; *************** function _distance_measure *****************
  5729 ;; Defined at:
  5730 ;;		line 401 in file "color.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  5733 ;;		 -> main@motorL(9), 
  5734 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  5735 ;;		 -> main@motorR(9), 
  5736 ;;  amb_light       2   14[BANK0 ] unsigned int 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  threshold       2   26[BANK0 ] unsigned int 
  5739 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  5740 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  5741 ;;  stop            1   28[BANK0 ] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      unsigned char 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5751 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;Total ram usage:       19 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 5
  5758 ;; This function calls:
  5759 ;;		_LED_C
  5760 ;;		___flmul
  5761 ;;		___xxtofl
  5762 ;;		_color_read_Clear
  5763 ;;		_color_read_Green
  5764 ;;		_lroundf
  5765 ;; This function is called by:
  5766 ;;		_main
  5767 ;;		_test_function
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text24
  5772  0050DE                     __ptext24:
  5773                           	callstack 0
  5774  0050DE                     _distance_measure:
  5775                           	callstack 25
  5776  0050DE  0E00               	movlw	0
  5777  0050E0  0100               	movlb	0	; () banked
  5778  0050E2  6FB1               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  5779  0050E4  0E00               	movlw	0
  5780  0050E6  6FB0               	movwf	distance_measure@CG_amb& (0+255),b
  5781                           
  5782                           ;color.c: 404:     unsigned char stop = 0;
  5783  0050E8  0E00               	movlw	0
  5784  0050EA  6FBA               	movwf	distance_measure@stop& (0+255),b
  5785                           
  5786                           ;color.c: 405:     unsigned int threshold = 0;
  5787  0050EC  0E00               	movlw	0
  5788  0050EE  6FB9               	movwf	(distance_measure@threshold+1)& (0+255),b
  5789  0050F0  0E00               	movlw	0
  5790  0050F2  6FB8               	movwf	distance_measure@threshold& (0+255),b
  5791  0050F4                     
  5792                           ; BSR set to: 0
  5793                           ;color.c: 406:     LED_C();
  5794  0050F4  EC42  F02E         	call	_LED_C	;wreg free
  5795  0050F8                     
  5796                           ;color.c: 407:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5797  0050F8  0E09               	movlw	9
  5798  0050FA  0100               	movlb	0	; () banked
  5799  0050FC  6FAF               	movwf	(??_distance_measure+1)& (0+255),b
  5800  0050FE  0E1E               	movlw	30
  5801  005100  6FAE               	movwf	??_distance_measure& (0+255),b
  5802  005102  0EE4               	movlw	228
  5803  005104                     u6217:
  5804  005104  2EE8               	decfsz	wreg,f,c
  5805  005106  D7FE               	bra	u6217
  5806  005108  2FAE               	decfsz	??_distance_measure& (0+255),f,b
  5807  00510A  D7FC               	bra	u6217
  5808  00510C  2FAF               	decfsz	(??_distance_measure+1)& (0+255),f,b
  5809  00510E  D7FA               	bra	u6217
  5810  005110  F000               	nop	
  5811  005112                     
  5812                           ;color.c: 408:     CC_amb = color_read_Clear();
  5813  005112  ECD1  F02B         	call	_color_read_Clear	;wreg free
  5814  005116  C005  F0B6         	movff	?_color_read_Clear,distance_measure@CC_amb
  5815  00511A  C006  F0B7         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  5816  00511E  EC81  F02B         	call	_color_read_Green	;wreg free
  5817  005122                     
  5818                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.1);
  5819  005122  C0AC  F001         	movff	distance_measure@amb_light,___xxtofl@val
  5820  005126  C0AD  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  5821  00512A  6A03               	clrf	(___xxtofl@val+2)^0,c
  5822  00512C  6A04               	clrf	(___xxtofl@val+3)^0,c
  5823  00512E  0E00               	movlw	0
  5824  005130  EC41  F021         	call	___xxtofl
  5825  005134  C001  F028         	movff	?___xxtofl,___flmul@b
  5826  005138  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  5827  00513C  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  5828  005140  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  5829  005144  0ECD               	movlw	205
  5830  005146  6E2C               	movwf	___flmul@a^0,c
  5831  005148  0ECC               	movlw	204
  5832  00514A  6E2D               	movwf	(___flmul@a+1)^0,c
  5833  00514C  0E8C               	movlw	140
  5834  00514E  6E2E               	movwf	(___flmul@a+2)^0,c
  5835  005150  0E3F               	movlw	63
  5836  005152  6E2F               	movwf	(___flmul@a+3)^0,c
  5837  005154  EC6C  F00F         	call	___flmul	;wreg free
  5838  005158  C028  F0B2         	movff	?___flmul,_distance_measure$3232
  5839  00515C  C029  F0B3         	movff	?___flmul+1,_distance_measure$3232+1
  5840  005160  C02A  F0B4         	movff	?___flmul+2,_distance_measure$3232+2
  5841  005164  C02B  F0B5         	movff	?___flmul+3,_distance_measure$3232+3
  5842  005168                     
  5843                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.1);
  5844  005168  C0B2  F0A4         	movff	_distance_measure$3232,lroundf@x
  5845  00516C  C0B3  F0A5         	movff	_distance_measure$3232+1,lroundf@x+1
  5846  005170  C0B4  F0A6         	movff	_distance_measure$3232+2,lroundf@x+2
  5847  005174  C0B5  F0A7         	movff	_distance_measure$3232+3,lroundf@x+3
  5848  005178  EC20  F02D         	call	_lroundf	;wreg free
  5849  00517C  C0A4  F0B8         	movff	?_lroundf,distance_measure@threshold
  5850  005180  C0A5  F0B9         	movff	?_lroundf+1,distance_measure@threshold+1
  5851  005184                     
  5852                           ;color.c: 413:     if (CC_amb >= threshold){stop = 1;}
  5853  005184  0100               	movlb	0	; () banked
  5854  005186  51B8               	movf	distance_measure@threshold& (0+255),w,b
  5855  005188  5DB6               	subwf	distance_measure@CC_amb& (0+255),w,b
  5856  00518A  51B9               	movf	(distance_measure@threshold+1)& (0+255),w,b
  5857  00518C  59B7               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  5858  00518E  A0D8               	btfss	status,0,c
  5859  005190  EFCC  F028         	goto	u5731
  5860  005194  EFCE  F028         	goto	u5730
  5861  005198                     u5731:
  5862  005198  EFD0  F028         	goto	l160
  5863  00519C                     u5730:
  5864  00519C                     
  5865                           ; BSR set to: 0
  5866  00519C  0E01               	movlw	1
  5867  00519E  6FBA               	movwf	distance_measure@stop& (0+255),b
  5868  0051A0                     l160:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;color.c: 414:     return stop;
  5872  0051A0  51BA               	movf	distance_measure@stop& (0+255),w,b
  5873  0051A2                     
  5874                           ; BSR set to: 0
  5875  0051A2  0012               	return		;funcret
  5876  0051A4                     __end_of_distance_measure:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function _color_click_init *****************
  5880 ;; Defined at:
  5881 ;;		line 67 in file "color.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  1    wreg      void 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5897 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5899 ;;Total ram usage:        1 bytes
  5900 ;; Hardware stack levels used: 1
  5901 ;; Hardware stack levels required when called: 4
  5902 ;; This function calls:
  5903 ;;		_I2C_2_Master_Init
  5904 ;;		_color_writetoaddr
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text25
  5911  005AE8                     __ptext25:
  5912                           	callstack 0
  5913  005AE8                     _color_click_init:
  5914                           	callstack 26
  5915  005AE8                     
  5916                           ;color.c: 70:     I2C_2_Master_Init();
  5917  005AE8  ECA6  F02D         	call	_I2C_2_Master_Init	;wreg free
  5918  005AEC                     
  5919                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  5920  005AEC  0E01               	movlw	1
  5921  005AEE  6E03               	movwf	color_writetoaddr@value^0,c
  5922  005AF0  0E00               	movlw	0
  5923  005AF2  ECF2  F02D         	call	_color_writetoaddr
  5924  005AF6                     
  5925                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5926  005AF6  0E3F               	movlw	63
  5927  005AF8  6E05               	movwf	??_color_click_init^0,c
  5928  005AFA  0E55               	movlw	85
  5929  005AFC                     u6227:
  5930  005AFC  2EE8               	decfsz	wreg,f,c
  5931  005AFE  D7FE               	bra	u6227
  5932  005B00  2E05               	decfsz	??_color_click_init^0,f,c
  5933  005B02  D7FC               	bra	u6227
  5934  005B04  F000               	nop	
  5935  005B06                     
  5936                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  5937  005B06  0E03               	movlw	3
  5938  005B08  6E03               	movwf	color_writetoaddr@value^0,c
  5939  005B0A  0E00               	movlw	0
  5940  005B0C  ECF2  F02D         	call	_color_writetoaddr
  5941  005B10                     
  5942                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  5943  005B10  0ED5               	movlw	213
  5944  005B12  6E03               	movwf	color_writetoaddr@value^0,c
  5945  005B14  0E01               	movlw	1
  5946  005B16  ECF2  F02D         	call	_color_writetoaddr
  5947  005B1A  0012               	return		;funcret
  5948  005B1C                     __end_of_color_click_init:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function _color_writetoaddr *****************
  5952 ;; Defined at:
  5953 ;;		line 83 in file "color.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  address         1    wreg     unsigned char 
  5956 ;;  value           1    2[COMRAM] unsigned char 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  address         1    3[COMRAM] unsigned char 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, status,2, status,0, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5968 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;Total ram usage:        2 bytes
  5973 ;; Hardware stack levels used: 1
  5974 ;; Hardware stack levels required when called: 3
  5975 ;; This function calls:
  5976 ;;		_I2C_2_Master_Start
  5977 ;;		_I2C_2_Master_Stop
  5978 ;;		_I2C_2_Master_Write
  5979 ;; This function is called by:
  5980 ;;		_color_click_init
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text26
  5985  005BE4                     __ptext26:
  5986                           	callstack 0
  5987  005BE4                     _color_writetoaddr:
  5988                           	callstack 26
  5989                           
  5990                           ;incstack = 0
  5991                           ;color_writetoaddr@address stored from wreg
  5992  005BE4  6E04               	movwf	color_writetoaddr@address^0,c
  5993  005BE6                     
  5994                           ;color.c: 84:     I2C_2_Master_Start();
  5995  005BE6  EC98  F02E         	call	_I2C_2_Master_Start	;wreg free
  5996                           
  5997                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  5998  005BEA  0E52               	movlw	82
  5999  005BEC  EC87  F02E         	call	_I2C_2_Master_Write
  6000                           
  6001                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  6002  005BF0  5004               	movf	color_writetoaddr@address^0,w,c
  6003  005BF2  0980               	iorlw	128
  6004  005BF4  EC87  F02E         	call	_I2C_2_Master_Write
  6005                           
  6006                           ;color.c: 87:     I2C_2_Master_Write(value);
  6007  005BF8  5003               	movf	color_writetoaddr@value^0,w,c
  6008  005BFA  EC87  F02E         	call	_I2C_2_Master_Write
  6009                           
  6010                           ;color.c: 88:     I2C_2_Master_Stop();
  6011  005BFE  EC93  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6012  005C02  0012               	return		;funcret
  6013  005C04                     __end_of_color_writetoaddr:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function _I2C_2_Master_Init *****************
  6017 ;; Defined at:
  6018 ;;		line 4 in file "i2c.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		wreg, status,2
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used: 1
  6038 ;; Hardware stack levels required when called: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_color_click_init
  6043 ;;		_main
  6044 ;; This function uses a non-reentrant model
  6045 ;;
  6046                           
  6047                           	psect	text27
  6048  005B4C                     __ptext27:
  6049                           	callstack 0
  6050  005B4C                     _I2C_2_Master_Init:
  6051                           	callstack 28
  6052  005B4C                     
  6053                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6054  005B4C  010E               	movlb	14	; () banked
  6055  005B4E  51D9               	movf	217,w,b	;volatile
  6056  005B50  0BF0               	andlw	-16
  6057  005B52  0908               	iorlw	8
  6058  005B54  6FD9               	movwf	217,b	;volatile
  6059  005B56                     
  6060                           ; BSR set to: 14
  6061                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6062  005B56  8BD9               	bsf	217,5,b	;volatile
  6063                           
  6064                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6065  005B58  0E9F               	movlw	159
  6066  005B5A  6FD6               	movwf	214,b	;volatile
  6067  005B5C                     
  6068                           ; BSR set to: 14
  6069                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6070  005B5C  8A84               	bsf	132,5,c	;volatile
  6071  005B5E                     
  6072                           ; BSR set to: 14
  6073                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6074  005B5E  8C84               	bsf	132,6,c	;volatile
  6075  005B60                     
  6076                           ; BSR set to: 14
  6077                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6078  005B60  9BA7               	bcf	167,5,b	;volatile
  6079  005B62                     
  6080                           ; BSR set to: 14
  6081                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6082  005B62  9DA7               	bcf	167,6,b	;volatile
  6083                           
  6084                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6085  005B64  0E1D               	movlw	29
  6086  005B66  6F1D               	movwf	29,b	;volatile
  6087                           
  6088                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6089  005B68  0E1E               	movlw	30
  6090  005B6A  6F1C               	movwf	28,b	;volatile
  6091                           
  6092                           ;i2c.c: 18:   RD5PPS=0x1C;
  6093  005B6C  0E1C               	movlw	28
  6094  005B6E  6F6F               	movwf	111,b	;volatile
  6095                           
  6096                           ;i2c.c: 19:   RD6PPS=0x1B;
  6097  005B70  0E1B               	movlw	27
  6098  005B72  6F70               	movwf	112,b	;volatile
  6099  005B74                     
  6100                           ; BSR set to: 14
  6101  005B74  0012               	return		;funcret
  6102  005B76                     __end_of_I2C_2_Master_Init:
  6103                           	callstack 0
  6104                           
  6105 ;; *************** function _calibration_motor *****************
  6106 ;; Defined at:
  6107 ;;		line 82 in file "test_and_calibration.c"
  6108 ;; Parameters:    Size  Location     Type
  6109 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  6110 ;;		 -> main@motorL(9), 
  6111 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  6112 ;;		 -> main@motorR(9), 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;Total ram usage:        6 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 6
  6131 ;; This function calls:
  6132 ;;		_test_action
  6133 ;; This function is called by:
  6134 ;;		_main
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text28
  6139  004D8E                     __ptext28:
  6140                           	callstack 0
  6141  004D8E                     _calibration_motor:
  6142                           	callstack 24
  6143  004D8E                     l703:
  6144                           
  6145                           ;test_and_calibration.c: 85:         LATDbits.LATD7 = 1;
  6146  004D8E  8E7C               	bsf	124,7,c	;volatile
  6147                           
  6148                           ;test_and_calibration.c: 86:         LATHbits.LATH3 = 1;
  6149  004D90  8680               	bsf	128,3,c	;volatile
  6150                           
  6151                           ;test_and_calibration.c: 88:         if (!PORTFbits.RF2) {
  6152  004D92  B48E               	btfsc	142,2,c	;volatile
  6153  004D94  EFCE  F026         	goto	u5741
  6154  004D98  EFD0  F026         	goto	u5740
  6155  004D9C                     u5741:
  6156  004D9C  EFFC  F026         	goto	l704
  6157  004DA0                     u5740:
  6158  004DA0                     
  6159                           ;test_and_calibration.c: 89:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
  6160  004DA0  0E19               	movlw	25
  6161  004DA2  6E3C               	movwf	(??_calibration_motor+1)^0,c
  6162  004DA4  0E5A               	movlw	90
  6163  004DA6  6E3B               	movwf	??_calibration_motor^0,c
  6164  004DA8  0EB2               	movlw	178
  6165  004DAA                     u6237:
  6166  004DAA  2EE8               	decfsz	wreg,f,c
  6167  004DAC  D7FE               	bra	u6237
  6168  004DAE  2E3B               	decfsz	??_calibration_motor^0,f,c
  6169  004DB0  D7FC               	bra	u6237
  6170  004DB2  2E3C               	decfsz	(??_calibration_motor+1)^0,f,c
  6171  004DB4  D7FA               	bra	u6237
  6172  004DB6                     
  6173                           ;test_and_calibration.c: 90:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  6174  004DB6  B48E               	btfsc	142,2,c	;volatile
  6175  004DB8  EFE0  F026         	goto	u5751
  6176  004DBC  EFE2  F026         	goto	u5750
  6177  004DC0                     u5751:
  6178  004DC0  EFF3  F026         	goto	l5397
  6179  004DC4                     u5750:
  6180  004DC4  9E7C               	bcf	124,7,c	;volatile
  6181  004DC6  0E19               	movlw	25
  6182  004DC8  6E3C               	movwf	(??_calibration_motor+1)^0,c
  6183  004DCA  0E5A               	movlw	90
  6184  004DCC  6E3B               	movwf	??_calibration_motor^0,c
  6185  004DCE  0EB2               	movlw	178
  6186  004DD0                     u6247:
  6187  004DD0  2EE8               	decfsz	wreg,f,c
  6188  004DD2  D7FE               	bra	u6247
  6189  004DD4  2E3B               	decfsz	??_calibration_motor^0,f,c
  6190  004DD6  D7FC               	bra	u6247
  6191  004DD8  2E3C               	decfsz	(??_calibration_motor+1)^0,f,c
  6192  004DDA  D7FA               	bra	u6247
  6193  004DDC  0E05               	movlw	5
  6194  004DDE  0100               	movlb	0	; () banked
  6195  004DE0  27DB               	addwf	_SENSITIVITY& (0+255),f,b
  6196  004DE2  0E00               	movlw	0
  6197  004DE4  23DC               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  6198  004DE6                     l5397:
  6199                           
  6200                           ;test_and_calibration.c: 91:             if (!PORTFbits.RF3){break;}
  6201  004DE6  B68E               	btfsc	142,3,c	;volatile
  6202  004DE8  EFF8  F026         	goto	u5761
  6203  004DEC  EFFA  F026         	goto	u5760
  6204  004DF0                     u5761:
  6205  004DF0  EFFC  F026         	goto	l704
  6206  004DF4                     u5760:
  6207  004DF4  EF31  F027         	goto	l707
  6208  004DF8                     l704:
  6209                           
  6210                           ;test_and_calibration.c: 93:         if (!PORTFbits.RF3) {
  6211  004DF8  B68E               	btfsc	142,3,c	;volatile
  6212  004DFA  EF01  F027         	goto	u5771
  6213  004DFE  EF03  F027         	goto	u5770
  6214  004E02                     u5771:
  6215  004E02  EFC7  F026         	goto	l703
  6216  004E06                     u5770:
  6217  004E06                     
  6218                           ;test_and_calibration.c: 94:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
  6219  004E06  0E19               	movlw	25
  6220  004E08  6E3C               	movwf	(??_calibration_motor+1)^0,c
  6221  004E0A  0E5A               	movlw	90
  6222  004E0C  6E3B               	movwf	??_calibration_motor^0,c
  6223  004E0E  0EB2               	movlw	178
  6224  004E10                     u6257:
  6225  004E10  2EE8               	decfsz	wreg,f,c
  6226  004E12  D7FE               	bra	u6257
  6227  004E14  2E3B               	decfsz	??_calibration_motor^0,f,c
  6228  004E16  D7FC               	bra	u6257
  6229  004E18  2E3C               	decfsz	(??_calibration_motor+1)^0,f,c
  6230  004E1A  D7FA               	bra	u6257
  6231  004E1C                     
  6232                           ;test_and_calibration.c: 95:             if (!PORTFbits.RF2){break;}
  6233  004E1C  B48E               	btfsc	142,2,c	;volatile
  6234  004E1E  EF13  F027         	goto	u5781
  6235  004E22  EF15  F027         	goto	u5780
  6236  004E26                     u5781:
  6237  004E26  EF17  F027         	goto	l709
  6238  004E2A                     u5780:
  6239  004E2A  EF31  F027         	goto	l707
  6240  004E2E                     l709:
  6241                           
  6242                           ;test_and_calibration.c: 96:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  6243  004E2E  B68E               	btfsc	142,3,c	;volatile
  6244  004E30  EF1C  F027         	goto	u5791
  6245  004E34  EF1E  F027         	goto	u5790
  6246  004E38                     u5791:
  6247  004E38  EFC7  F026         	goto	l703
  6248  004E3C                     u5790:
  6249  004E3C  9680               	bcf	128,3,c	;volatile
  6250  004E3E  0E19               	movlw	25
  6251  004E40  6E3C               	movwf	(??_calibration_motor+1)^0,c
  6252  004E42  0E5A               	movlw	90
  6253  004E44  6E3B               	movwf	??_calibration_motor^0,c
  6254  004E46  0EB2               	movlw	178
  6255  004E48                     u6267:
  6256  004E48  2EE8               	decfsz	wreg,f,c
  6257  004E4A  D7FE               	bra	u6267
  6258  004E4C  2E3B               	decfsz	??_calibration_motor^0,f,c
  6259  004E4E  D7FC               	bra	u6267
  6260  004E50  2E3C               	decfsz	(??_calibration_motor+1)^0,f,c
  6261  004E52  D7FA               	bra	u6267
  6262  004E54  0E05               	movlw	5
  6263  004E56  0100               	movlb	0	; () banked
  6264  004E58  5FDB               	subwf	_SENSITIVITY& (0+255),f,b
  6265  004E5A  0E00               	movlw	0
  6266  004E5C  5BDC               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  6267  004E5E  EFC7  F026         	goto	l703
  6268  004E62                     l707:
  6269                           
  6270                           ;test_and_calibration.c: 99:     LATDbits.LATD7 = 0;
  6271  004E62  9E7C               	bcf	124,7,c	;volatile
  6272                           
  6273                           ;test_and_calibration.c: 100:     LATHbits.LATH3 = 0;
  6274  004E64  9680               	bcf	128,3,c	;volatile
  6275  004E66                     
  6276                           ;test_and_calibration.c: 101:     test_action(mL, mR);
  6277  004E66  C037  F033         	movff	calibration_motor@mL,test_action@mL
  6278  004E6A  C038  F034         	movff	calibration_motor@mL+1,test_action@mL+1
  6279  004E6E  C039  F035         	movff	calibration_motor@mR,test_action@mR
  6280  004E72  C03A  F036         	movff	calibration_motor@mR+1,test_action@mR+1
  6281  004E76  EC8A  F01F         	call	_test_action	;wreg free
  6282  004E7A  0012               	return		;funcret
  6283  004E7C                     __end_of_calibration_motor:
  6284                           	callstack 0
  6285                           
  6286 ;; *************** function _test_action *****************
  6287 ;; Defined at:
  6288 ;;		line 16 in file "test_and_calibration.c"
  6289 ;; Parameters:    Size  Location     Type
  6290 ;;  mL              2   50[COMRAM] PTR struct DC_motor
  6291 ;;		 -> main@motorL(9), 
  6292 ;;  mR              2   52[COMRAM] PTR struct DC_motor
  6293 ;;		 -> main@motorR(9), 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;Total ram usage:        4 bytes
  6310 ;; Hardware stack levels used: 1
  6311 ;; Hardware stack levels required when called: 5
  6312 ;; This function calls:
  6313 ;;		_fullSpeedAhead_test
  6314 ;;		_turnLeft
  6315 ;;		_turnRight
  6316 ;; This function is called by:
  6317 ;;		_calibration_motor
  6318 ;; This function uses a non-reentrant model
  6319 ;;
  6320                           
  6321                           	psect	text29
  6322  003F14                     __ptext29:
  6323                           	callstack 0
  6324  003F14                     _test_action:
  6325                           	callstack 24
  6326  003F14                     
  6327                           ;test_and_calibration.c: 16: void test_action (struct DC_motor *mL, struct DC_motor *mR)
      +                          ;test_and_calibration.c: 17: { fullSpeedAhead_test(mL,mR);
  6328  003F14  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6329  003F18  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6330  003F1C  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6331  003F20  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6332  003F24  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6333                           
  6334                           ;test_and_calibration.c: 18:     turnLeft(mL,mR,90);
  6335  003F28  C033  F020         	movff	test_action@mL,turnLeft@mL
  6336  003F2C  C034  F021         	movff	test_action@mL+1,turnLeft@mL+1
  6337  003F30  C035  F022         	movff	test_action@mR,turnLeft@mR
  6338  003F34  C036  F023         	movff	test_action@mR+1,turnLeft@mR+1
  6339  003F38  0E5A               	movlw	90
  6340  003F3A  6E24               	movwf	turnLeft@angle_left^0,c
  6341  003F3C  EC1B  F022         	call	_turnLeft	;wreg free
  6342                           
  6343                           ;test_and_calibration.c: 19:     fullSpeedAhead_test(mL,mR);
  6344  003F40  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6345  003F44  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6346  003F48  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6347  003F4C  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6348  003F50  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6349                           
  6350                           ;test_and_calibration.c: 20:     turnLeft(mL,mR,90);
  6351  003F54  C033  F020         	movff	test_action@mL,turnLeft@mL
  6352  003F58  C034  F021         	movff	test_action@mL+1,turnLeft@mL+1
  6353  003F5C  C035  F022         	movff	test_action@mR,turnLeft@mR
  6354  003F60  C036  F023         	movff	test_action@mR+1,turnLeft@mR+1
  6355  003F64  0E5A               	movlw	90
  6356  003F66  6E24               	movwf	turnLeft@angle_left^0,c
  6357  003F68  EC1B  F022         	call	_turnLeft	;wreg free
  6358                           
  6359                           ;test_and_calibration.c: 21:     fullSpeedAhead_test(mL,mR);
  6360  003F6C  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6361  003F70  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6362  003F74  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6363  003F78  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6364  003F7C  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6365                           
  6366                           ;test_and_calibration.c: 22:     turnLeft(mL,mR,180);
  6367  003F80  C033  F020         	movff	test_action@mL,turnLeft@mL
  6368  003F84  C034  F021         	movff	test_action@mL+1,turnLeft@mL+1
  6369  003F88  C035  F022         	movff	test_action@mR,turnLeft@mR
  6370  003F8C  C036  F023         	movff	test_action@mR+1,turnLeft@mR+1
  6371  003F90  0EB4               	movlw	180
  6372  003F92  6E24               	movwf	turnLeft@angle_left^0,c
  6373  003F94  EC1B  F022         	call	_turnLeft	;wreg free
  6374                           
  6375                           ;test_and_calibration.c: 23:     fullSpeedAhead_test(mL,mR);
  6376  003F98  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6377  003F9C  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6378  003FA0  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6379  003FA4  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6380  003FA8  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6381                           
  6382                           ;test_and_calibration.c: 24:     turnRight(mL,mR,90);
  6383  003FAC  C033  F020         	movff	test_action@mL,turnRight@mL
  6384  003FB0  C034  F021         	movff	test_action@mL+1,turnRight@mL+1
  6385  003FB4  C035  F022         	movff	test_action@mR,turnRight@mR
  6386  003FB8  C036  F023         	movff	test_action@mR+1,turnRight@mR+1
  6387  003FBC  0E5A               	movlw	90
  6388  003FBE  6E24               	movwf	turnRight@angle_right^0,c
  6389  003FC0  ECEC  F022         	call	_turnRight	;wreg free
  6390                           
  6391                           ;test_and_calibration.c: 25:     fullSpeedAhead_test(mL,mR);
  6392  003FC4  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6393  003FC8  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6394  003FCC  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6395  003FD0  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6396  003FD4  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6397                           
  6398                           ;test_and_calibration.c: 26:     turnRight(mL,mR,90);
  6399  003FD8  C033  F020         	movff	test_action@mL,turnRight@mL
  6400  003FDC  C034  F021         	movff	test_action@mL+1,turnRight@mL+1
  6401  003FE0  C035  F022         	movff	test_action@mR,turnRight@mR
  6402  003FE4  C036  F023         	movff	test_action@mR+1,turnRight@mR+1
  6403  003FE8  0E5A               	movlw	90
  6404  003FEA  6E24               	movwf	turnRight@angle_right^0,c
  6405  003FEC  ECEC  F022         	call	_turnRight	;wreg free
  6406                           
  6407                           ;test_and_calibration.c: 27:     fullSpeedAhead_test(mL,mR);
  6408  003FF0  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6409  003FF4  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6410  003FF8  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6411  003FFC  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6412  004000  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6413                           
  6414                           ;test_and_calibration.c: 28:     turnLeft(mL,mR,180);
  6415  004004  C033  F020         	movff	test_action@mL,turnLeft@mL
  6416  004008  C034  F021         	movff	test_action@mL+1,turnLeft@mL+1
  6417  00400C  C035  F022         	movff	test_action@mR,turnLeft@mR
  6418  004010  C036  F023         	movff	test_action@mR+1,turnLeft@mR+1
  6419  004014  0EB4               	movlw	180
  6420  004016  6E24               	movwf	turnLeft@angle_left^0,c
  6421  004018  EC1B  F022         	call	_turnLeft	;wreg free
  6422                           
  6423                           ;test_and_calibration.c: 29:     fullSpeedAhead_test(mL,mR);
  6424  00401C  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6425  004020  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6426  004024  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6427  004028  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6428  00402C  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6429                           
  6430                           ;test_and_calibration.c: 30:     turnLeft(mL,mR,135);
  6431  004030  C033  F020         	movff	test_action@mL,turnLeft@mL
  6432  004034  C034  F021         	movff	test_action@mL+1,turnLeft@mL+1
  6433  004038  C035  F022         	movff	test_action@mR,turnLeft@mR
  6434  00403C  C036  F023         	movff	test_action@mR+1,turnLeft@mR+1
  6435  004040  0E87               	movlw	135
  6436  004042  6E24               	movwf	turnLeft@angle_left^0,c
  6437  004044  EC1B  F022         	call	_turnLeft	;wreg free
  6438                           
  6439                           ;test_and_calibration.c: 31:     fullSpeedAhead_test(mL,mR);
  6440  004048  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6441  00404C  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6442  004050  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6443  004054  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6444  004058  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6445                           
  6446                           ;test_and_calibration.c: 32:     turnRight(mL,mR,135);
  6447  00405C  C033  F020         	movff	test_action@mL,turnRight@mL
  6448  004060  C034  F021         	movff	test_action@mL+1,turnRight@mL+1
  6449  004064  C035  F022         	movff	test_action@mR,turnRight@mR
  6450  004068  C036  F023         	movff	test_action@mR+1,turnRight@mR+1
  6451  00406C  0E87               	movlw	135
  6452  00406E  6E24               	movwf	turnRight@angle_right^0,c
  6453  004070  ECEC  F022         	call	_turnRight	;wreg free
  6454                           
  6455                           ;test_and_calibration.c: 33:     fullSpeedAhead_test(mL,mR);
  6456  004074  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6457  004078  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6458  00407C  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6459  004080  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6460  004084  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6461                           
  6462                           ;test_and_calibration.c: 34:     turnLeft(mL,mR,135);
  6463  004088  C033  F020         	movff	test_action@mL,turnLeft@mL
  6464  00408C  C034  F021         	movff	test_action@mL+1,turnLeft@mL+1
  6465  004090  C035  F022         	movff	test_action@mR,turnLeft@mR
  6466  004094  C036  F023         	movff	test_action@mR+1,turnLeft@mR+1
  6467  004098  0E87               	movlw	135
  6468  00409A  6E24               	movwf	turnLeft@angle_left^0,c
  6469  00409C  EC1B  F022         	call	_turnLeft	;wreg free
  6470                           
  6471                           ;test_and_calibration.c: 35:     fullSpeedAhead_test(mL,mR);
  6472  0040A0  C033  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  6473  0040A4  C034  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  6474  0040A8  C035  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  6475  0040AC  C036  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  6476  0040B0  ECA1  F02C         	call	_fullSpeedAhead_test	;wreg free
  6477                           
  6478                           ;test_and_calibration.c: 36:     turnRight(mL,mR,135);
  6479  0040B4  C033  F020         	movff	test_action@mL,turnRight@mL
  6480  0040B8  C034  F021         	movff	test_action@mL+1,turnRight@mL+1
  6481  0040BC  C035  F022         	movff	test_action@mR,turnRight@mR
  6482  0040C0  C036  F023         	movff	test_action@mR+1,turnRight@mR+1
  6483  0040C4  0E87               	movlw	135
  6484  0040C6  6E24               	movwf	turnRight@angle_right^0,c
  6485  0040C8  ECEC  F022         	call	_turnRight	;wreg free
  6486  0040CC  0012               	return		;funcret
  6487  0040CE                     __end_of_test_action:
  6488                           	callstack 0
  6489                           
  6490 ;; *************** function _turnRight *****************
  6491 ;; Defined at:
  6492 ;;		line 158 in file "dc_motor.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6495 ;;		 -> main@motorL(9), 
  6496 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6497 ;;		 -> main@motorR(9), 
  6498 ;;  angle_right     1   35[COMRAM] unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  i               2   45[COMRAM] unsigned int 
  6501 ;;  i               2   43[COMRAM] unsigned int 
  6502 ;;  i               2   41[COMRAM] unsigned int 
  6503 ;;  delay           2   47[COMRAM] unsigned int 
  6504 ;;  delay_180       2   39[COMRAM] unsigned int 
  6505 ;;  delay_135       2   37[COMRAM] unsigned int 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6515 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6518 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6519 ;;Total ram usage:       18 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 4
  6522 ;; This function calls:
  6523 ;;		___wmul
  6524 ;;		_setMotorPWM
  6525 ;;		_stop
  6526 ;; This function is called by:
  6527 ;;		_test_action
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text30
  6532  0045D8                     __ptext30:
  6533                           	callstack 0
  6534  0045D8                     _turnRight:
  6535                           	callstack 24
  6536  0045D8                     
  6537                           ;dc_motor.c: 158: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 159: {;dc_motor.c: 160:     mL->direction=1;
  6538  0045D8  EE20 F001          	lfsr	2,1
  6539  0045DC  5020               	movf	turnRight@mL^0,w,c
  6540  0045DE  26D9               	addwf	fsr2l,f,c
  6541  0045E0  5021               	movf	(turnRight@mL+1)^0,w,c
  6542  0045E2  22DA               	addwfc	fsr2h,f,c
  6543  0045E4  0E01               	movlw	1
  6544  0045E6  6EDF               	movwf	indf2,c
  6545                           
  6546                           ;dc_motor.c: 161:     mR->direction=1;
  6547  0045E8  EE20 F001          	lfsr	2,1
  6548  0045EC  5022               	movf	turnRight@mR^0,w,c
  6549  0045EE  26D9               	addwf	fsr2l,f,c
  6550  0045F0  5023               	movf	(turnRight@mR+1)^0,w,c
  6551  0045F2  22DA               	addwfc	fsr2h,f,c
  6552  0045F4  0E01               	movlw	1
  6553  0045F6  6EDF               	movwf	indf2,c
  6554                           
  6555                           ;dc_motor.c: 162:     while (mL->power <40){
  6556  0045F8  EF1D  F023         	goto	l4599
  6557  0045FC                     l4591:
  6558                           
  6559                           ;dc_motor.c: 163:         mL->power += 5;
  6560  0045FC  C020  FFD9         	movff	turnRight@mL,fsr2l
  6561  004600  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  6562  004604  0E05               	movlw	5
  6563  004606  26DF               	addwf	indf2,f,c
  6564                           
  6565                           ;dc_motor.c: 164:         mR->power = 0;
  6566  004608  C022  FFD9         	movff	turnRight@mR,fsr2l
  6567  00460C  C023  FFDA         	movff	turnRight@mR+1,fsr2h
  6568  004610  0E00               	movlw	0
  6569  004612  6EDF               	movwf	indf2,c
  6570  004614                     
  6571                           ;dc_motor.c: 165:         setMotorPWM(mL);
  6572  004614  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
  6573  004618  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
  6574  00461C  ECB8  F01D         	call	_setMotorPWM	;wreg free
  6575  004620                     
  6576                           ;dc_motor.c: 166:         setMotorPWM(mR);
  6577  004620  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
  6578  004624  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
  6579  004628  ECB8  F01D         	call	_setMotorPWM	;wreg free
  6580  00462C                     
  6581                           ;dc_motor.c: 167:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6582  00462C  0ED0               	movlw	208
  6583  00462E  6E25               	movwf	??_turnRight^0,c
  6584  004630  0ECA               	movlw	202
  6585  004632                     u6277:
  6586  004632  2EE8               	decfsz	wreg,f,c
  6587  004634  D7FE               	bra	u6277
  6588  004636  2E25               	decfsz	??_turnRight^0,f,c
  6589  004638  D7FC               	bra	u6277
  6590  00463A                     l4599:
  6591                           
  6592                           ;dc_motor.c: 162:     while (mL->power <40){
  6593  00463A  C020  FFD9         	movff	turnRight@mL,fsr2l
  6594  00463E  C021  FFDA         	movff	turnRight@mL+1,fsr2h
  6595  004642  0E27               	movlw	39
  6596  004644  64DF               	cpfsgt	indf2,c
  6597  004646  EF27  F023         	goto	u4921
  6598  00464A  EF29  F023         	goto	u4920
  6599  00464E                     u4921:
  6600  00464E  EFFE  F022         	goto	l4591
  6601  004652                     u4920:
  6602  004652                     
  6603                           ;dc_motor.c: 169:     unsigned int delay = angle_right * SENSITIVITY;
  6604  004652  C024  F001         	movff	turnRight@angle_right,___wmul@multiplier
  6605  004656  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6606  004658  C0DB  F003         	movff	_SENSITIVITY,___wmul@multiplicand
  6607  00465C  C0DC  F004         	movff	_SENSITIVITY+1,___wmul@multiplicand+1
  6608  004660  ECCF  F02D         	call	___wmul	;wreg free
  6609  004664  C001  F030         	movff	?___wmul,turnRight@delay
  6610  004668  C002  F031         	movff	?___wmul+1,turnRight@delay+1
  6611  00466C                     
  6612                           ;dc_motor.c: 170:     unsigned int delay_135 = delay + 15;;
  6613  00466C  0E0F               	movlw	15
  6614  00466E  2430               	addwf	turnRight@delay^0,w,c
  6615  004670  6E26               	movwf	turnRight@delay_135^0,c
  6616  004672  0E00               	movlw	0
  6617  004674  2031               	addwfc	(turnRight@delay+1)^0,w,c
  6618  004676  6E27               	movwf	(turnRight@delay_135+1)^0,c
  6619  004678                     
  6620                           ;dc_motor.c: 171:     unsigned int delay_180 = delay + 0;;
  6621  004678  C030  F028         	movff	turnRight@delay,turnRight@delay_180
  6622  00467C  C031  F029         	movff	turnRight@delay+1,turnRight@delay_180+1
  6623  004680                     
  6624                           ;dc_motor.c: 172:     if (angle_right == 180){
  6625  004680  0EB4               	movlw	180
  6626  004682  1824               	xorwf	turnRight@angle_right^0,w,c
  6627  004684  A4D8               	btfss	status,2,c
  6628  004686  EF47  F023         	goto	u4931
  6629  00468A  EF49  F023         	goto	u4930
  6630  00468E                     u4931:
  6631  00468E  EF64  F023         	goto	l4615
  6632  004692                     u4930:
  6633  004692                     
  6634                           ;dc_motor.c: 173:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
  6635  004692  0E00               	movlw	0
  6636  004694  6E2B               	movwf	(turnRight@i+1)^0,c
  6637  004696  0E00               	movlw	0
  6638  004698  6E2A               	movwf	turnRight@i^0,c
  6639  00469A  EF59  F023         	goto	l327
  6640  00469E                     l4611:
  6641  00469E  0E15               	movlw	21
  6642  0046A0  6E25               	movwf	??_turnRight^0,c
  6643  0046A2  0EC6               	movlw	198
  6644  0046A4                     u6287:
  6645  0046A4  2EE8               	decfsz	wreg,f,c
  6646  0046A6  D7FE               	bra	u6287
  6647  0046A8  2E25               	decfsz	??_turnRight^0,f,c
  6648  0046AA  D7FC               	bra	u6287
  6649  0046AC  D000               	nop2	
  6650  0046AE  4A2A               	infsnz	turnRight@i^0,f,c
  6651  0046B0  2A2B               	incf	(turnRight@i+1)^0,f,c
  6652  0046B2                     l327:
  6653  0046B2  5028               	movf	turnRight@delay_180^0,w,c
  6654  0046B4  5C2A               	subwf	turnRight@i^0,w,c
  6655  0046B6  5029               	movf	(turnRight@delay_180+1)^0,w,c
  6656  0046B8  582B               	subwfb	(turnRight@i+1)^0,w,c
  6657  0046BA  A0D8               	btfss	status,0,c
  6658  0046BC  EF62  F023         	goto	u4941
  6659  0046C0  EF64  F023         	goto	u4940
  6660  0046C4                     u4941:
  6661  0046C4  EF4F  F023         	goto	l4611
  6662  0046C8                     u4940:
  6663  0046C8                     l4615:
  6664                           
  6665                           ;dc_motor.c: 175:     if (angle_right == 135){
  6666  0046C8  0E87               	movlw	135
  6667  0046CA  1824               	xorwf	turnRight@angle_right^0,w,c
  6668  0046CC  A4D8               	btfss	status,2,c
  6669  0046CE  EF6B  F023         	goto	u4951
  6670  0046D2  EF6D  F023         	goto	u4950
  6671  0046D6                     u4951:
  6672  0046D6  EF88  F023         	goto	l4623
  6673  0046DA                     u4950:
  6674  0046DA                     
  6675                           ;dc_motor.c: 176:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
  6676  0046DA  0E00               	movlw	0
  6677  0046DC  6E2D               	movwf	(turnRight@i_1350+1)^0,c
  6678  0046DE  0E00               	movlw	0
  6679  0046E0  6E2C               	movwf	turnRight@i_1350^0,c
  6680  0046E2  EF7D  F023         	goto	l331
  6681  0046E6                     l4619:
  6682  0046E6  0E15               	movlw	21
  6683  0046E8  6E25               	movwf	??_turnRight^0,c
  6684  0046EA  0EC6               	movlw	198
  6685  0046EC                     u6297:
  6686  0046EC  2EE8               	decfsz	wreg,f,c
  6687  0046EE  D7FE               	bra	u6297
  6688  0046F0  2E25               	decfsz	??_turnRight^0,f,c
  6689  0046F2  D7FC               	bra	u6297
  6690  0046F4  D000               	nop2	
  6691  0046F6  4A2C               	infsnz	turnRight@i_1350^0,f,c
  6692  0046F8  2A2D               	incf	(turnRight@i_1350+1)^0,f,c
  6693  0046FA                     l331:
  6694  0046FA  5026               	movf	turnRight@delay_135^0,w,c
  6695  0046FC  5C2C               	subwf	turnRight@i_1350^0,w,c
  6696  0046FE  5027               	movf	(turnRight@delay_135+1)^0,w,c
  6697  004700  582D               	subwfb	(turnRight@i_1350+1)^0,w,c
  6698  004702  A0D8               	btfss	status,0,c
  6699  004704  EF86  F023         	goto	u4961
  6700  004708  EF88  F023         	goto	u4960
  6701  00470C                     u4961:
  6702  00470C  EF73  F023         	goto	l4619
  6703  004710                     u4960:
  6704  004710                     l4623:
  6705                           
  6706                           ;dc_motor.c: 178:     if (angle_right == 90){
  6707  004710  0E5A               	movlw	90
  6708  004712  1824               	xorwf	turnRight@angle_right^0,w,c
  6709  004714  A4D8               	btfss	status,2,c
  6710  004716  EF8F  F023         	goto	u4971
  6711  00471A  EF91  F023         	goto	u4970
  6712  00471E                     u4971:
  6713  00471E  EFAC  F023         	goto	l4631
  6714  004722                     u4970:
  6715  004722                     
  6716                           ;dc_motor.c: 179:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
  6717  004722  0E00               	movlw	0
  6718  004724  6E2F               	movwf	(turnRight@i_1351+1)^0,c
  6719  004726  0E00               	movlw	0
  6720  004728  6E2E               	movwf	turnRight@i_1351^0,c
  6721  00472A  EFA1  F023         	goto	l335
  6722  00472E                     l4627:
  6723  00472E  0E15               	movlw	21
  6724  004730  6E25               	movwf	??_turnRight^0,c
  6725  004732  0EC6               	movlw	198
  6726  004734                     u6307:
  6727  004734  2EE8               	decfsz	wreg,f,c
  6728  004736  D7FE               	bra	u6307
  6729  004738  2E25               	decfsz	??_turnRight^0,f,c
  6730  00473A  D7FC               	bra	u6307
  6731  00473C  D000               	nop2	
  6732  00473E  4A2E               	infsnz	turnRight@i_1351^0,f,c
  6733  004740  2A2F               	incf	(turnRight@i_1351+1)^0,f,c
  6734  004742                     l335:
  6735  004742  5030               	movf	turnRight@delay^0,w,c
  6736  004744  5C2E               	subwf	turnRight@i_1351^0,w,c
  6737  004746  5031               	movf	(turnRight@delay+1)^0,w,c
  6738  004748  582F               	subwfb	(turnRight@i_1351+1)^0,w,c
  6739  00474A  A0D8               	btfss	status,0,c
  6740  00474C  EFAA  F023         	goto	u4981
  6741  004750  EFAC  F023         	goto	u4980
  6742  004754                     u4981:
  6743  004754  EF97  F023         	goto	l4627
  6744  004758                     u4980:
  6745  004758                     l4631:
  6746                           
  6747                           ;dc_motor.c: 181:     stop(mL,mR);
  6748  004758  C020  F01A         	movff	turnRight@mL,stop@mL
  6749  00475C  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
  6750  004760  C022  F01C         	movff	turnRight@mR,stop@mR
  6751  004764  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
  6752  004768  EC96  F029         	call	_stop	;wreg free
  6753  00476C  0012               	return		;funcret
  6754  00476E                     __end_of_turnRight:
  6755                           	callstack 0
  6756                           
  6757 ;; *************** function _turnLeft *****************
  6758 ;; Defined at:
  6759 ;;		line 131 in file "dc_motor.c"
  6760 ;; Parameters:    Size  Location     Type
  6761 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6762 ;;		 -> main@motorL(9), 
  6763 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6764 ;;		 -> main@motorR(9), 
  6765 ;;  angle_left      1   35[COMRAM] unsigned char 
  6766 ;; Auto vars:     Size  Location     Type
  6767 ;;  i               2   46[COMRAM] unsigned int 
  6768 ;;  i               2   44[COMRAM] unsigned int 
  6769 ;;  i               2   42[COMRAM] unsigned int 
  6770 ;;  delay           2   48[COMRAM] unsigned int 
  6771 ;;  delay_180       2   40[COMRAM] unsigned int 
  6772 ;;  delay_135       2   38[COMRAM] unsigned int 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6782 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;Total ram usage:       19 bytes
  6787 ;; Hardware stack levels used: 1
  6788 ;; Hardware stack levels required when called: 4
  6789 ;; This function calls:
  6790 ;;		___wmul
  6791 ;;		_setMotorPWM
  6792 ;;		_stop
  6793 ;; This function is called by:
  6794 ;;		_test_action
  6795 ;; This function uses a non-reentrant model
  6796 ;;
  6797                           
  6798                           	psect	text31
  6799  004436                     __ptext31:
  6800                           	callstack 0
  6801  004436                     _turnLeft:
  6802                           	callstack 24
  6803  004436                     
  6804                           ;dc_motor.c: 131: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char 
      +                          angle_left);dc_motor.c: 132: {;dc_motor.c: 133:       mL->direction=1;
  6805  004436  EE20 F001          	lfsr	2,1
  6806  00443A  5020               	movf	turnLeft@mL^0,w,c
  6807  00443C  26D9               	addwf	fsr2l,f,c
  6808  00443E  5021               	movf	(turnLeft@mL+1)^0,w,c
  6809  004440  22DA               	addwfc	fsr2h,f,c
  6810  004442  0E01               	movlw	1
  6811  004444  6EDF               	movwf	indf2,c
  6812                           
  6813                           ;dc_motor.c: 134:       mR->direction=1;
  6814  004446  EE20 F001          	lfsr	2,1
  6815  00444A  5022               	movf	turnLeft@mR^0,w,c
  6816  00444C  26D9               	addwf	fsr2l,f,c
  6817  00444E  5023               	movf	(turnLeft@mR+1)^0,w,c
  6818  004450  22DA               	addwfc	fsr2h,f,c
  6819  004452  0E01               	movlw	1
  6820  004454  6EDF               	movwf	indf2,c
  6821                           
  6822                           ;dc_motor.c: 135:       while (mR->power <40){
  6823  004456  EF4C  F022         	goto	l4555
  6824  00445A                     l4547:
  6825                           
  6826                           ;dc_motor.c: 136:         mR->power += 5;
  6827  00445A  C022  FFD9         	movff	turnLeft@mR,fsr2l
  6828  00445E  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  6829  004462  0E05               	movlw	5
  6830  004464  26DF               	addwf	indf2,f,c
  6831                           
  6832                           ;dc_motor.c: 137:         mL->power = 0;
  6833  004466  C020  FFD9         	movff	turnLeft@mL,fsr2l
  6834  00446A  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
  6835  00446E  0E00               	movlw	0
  6836  004470  6EDF               	movwf	indf2,c
  6837  004472                     
  6838                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6839  004472  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
  6840  004476  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6841  00447A  ECB8  F01D         	call	_setMotorPWM	;wreg free
  6842  00447E                     
  6843                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6844  00447E  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
  6845  004482  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6846  004486  ECB8  F01D         	call	_setMotorPWM	;wreg free
  6847  00448A                     
  6848                           ;dc_motor.c: 140:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6849  00448A  0ED0               	movlw	208
  6850  00448C  6E25               	movwf	??_turnLeft^0,c
  6851  00448E  0ECA               	movlw	202
  6852  004490                     u6317:
  6853  004490  2EE8               	decfsz	wreg,f,c
  6854  004492  D7FE               	bra	u6317
  6855  004494  2E25               	decfsz	??_turnLeft^0,f,c
  6856  004496  D7FC               	bra	u6317
  6857  004498                     l4555:
  6858                           
  6859                           ;dc_motor.c: 135:       while (mR->power <40){
  6860  004498  C022  FFD9         	movff	turnLeft@mR,fsr2l
  6861  00449C  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
  6862  0044A0  0E27               	movlw	39
  6863  0044A2  64DF               	cpfsgt	indf2,c
  6864  0044A4  EF56  F022         	goto	u4851
  6865  0044A8  EF58  F022         	goto	u4850
  6866  0044AC                     u4851:
  6867  0044AC  EF2D  F022         	goto	l4547
  6868  0044B0                     u4850:
  6869  0044B0                     
  6870                           ;dc_motor.c: 142:     unsigned int delay = angle_left * SENSITIVITY;
  6871  0044B0  C024  F001         	movff	turnLeft@angle_left,___wmul@multiplier
  6872  0044B4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  6873  0044B6  C0DB  F003         	movff	_SENSITIVITY,___wmul@multiplicand
  6874  0044BA  C0DC  F004         	movff	_SENSITIVITY+1,___wmul@multiplicand+1
  6875  0044BE  ECCF  F02D         	call	___wmul	;wreg free
  6876  0044C2  C001  F031         	movff	?___wmul,turnLeft@delay
  6877  0044C6  C002  F032         	movff	?___wmul+1,turnLeft@delay+1
  6878  0044CA                     
  6879                           ;dc_motor.c: 143:     unsigned int delay_135 = delay + 15;;
  6880  0044CA  0E0F               	movlw	15
  6881  0044CC  2431               	addwf	turnLeft@delay^0,w,c
  6882  0044CE  6E27               	movwf	turnLeft@delay_135^0,c
  6883  0044D0  0E00               	movlw	0
  6884  0044D2  2032               	addwfc	(turnLeft@delay+1)^0,w,c
  6885  0044D4  6E28               	movwf	(turnLeft@delay_135+1)^0,c
  6886  0044D6                     
  6887                           ;dc_motor.c: 144:     unsigned int delay_180 = delay + 0;;
  6888  0044D6  C031  F029         	movff	turnLeft@delay,turnLeft@delay_180
  6889  0044DA  C032  F02A         	movff	turnLeft@delay+1,turnLeft@delay_180+1
  6890  0044DE                     
  6891                           ;dc_motor.c: 145:     if (angle_left == 180){
  6892  0044DE  0EB4               	movlw	180
  6893  0044E0  1824               	xorwf	turnLeft@angle_left^0,w,c
  6894  0044E2  A4D8               	btfss	status,2,c
  6895  0044E4  EF76  F022         	goto	u4861
  6896  0044E8  EF78  F022         	goto	u4860
  6897  0044EC                     u4861:
  6898  0044EC  EF93  F022         	goto	l4571
  6899  0044F0                     u4860:
  6900  0044F0                     
  6901                           ;dc_motor.c: 146:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
  6902  0044F0  0E00               	movlw	0
  6903  0044F2  6E2C               	movwf	(turnLeft@i+1)^0,c
  6904  0044F4  0E00               	movlw	0
  6905  0044F6  6E2B               	movwf	turnLeft@i^0,c
  6906  0044F8  EF88  F022         	goto	l309
  6907  0044FC                     l4567:
  6908  0044FC  0E15               	movlw	21
  6909  0044FE  6E25               	movwf	??_turnLeft^0,c
  6910  004500  0EC6               	movlw	198
  6911  004502                     u6327:
  6912  004502  2EE8               	decfsz	wreg,f,c
  6913  004504  D7FE               	bra	u6327
  6914  004506  2E25               	decfsz	??_turnLeft^0,f,c
  6915  004508  D7FC               	bra	u6327
  6916  00450A  D000               	nop2	
  6917  00450C  4A2B               	infsnz	turnLeft@i^0,f,c
  6918  00450E  2A2C               	incf	(turnLeft@i+1)^0,f,c
  6919  004510                     l309:
  6920  004510  5029               	movf	turnLeft@delay_180^0,w,c
  6921  004512  5C2B               	subwf	turnLeft@i^0,w,c
  6922  004514  502A               	movf	(turnLeft@delay_180+1)^0,w,c
  6923  004516  582C               	subwfb	(turnLeft@i+1)^0,w,c
  6924  004518  A0D8               	btfss	status,0,c
  6925  00451A  EF91  F022         	goto	u4871
  6926  00451E  EF93  F022         	goto	u4870
  6927  004522                     u4871:
  6928  004522  EF7E  F022         	goto	l4567
  6929  004526                     u4870:
  6930  004526                     l4571:
  6931                           
  6932                           ;dc_motor.c: 148:     if (angle_left == 135){
  6933  004526  0E87               	movlw	135
  6934  004528  1824               	xorwf	turnLeft@angle_left^0,w,c
  6935  00452A  A4D8               	btfss	status,2,c
  6936  00452C  EF9A  F022         	goto	u4881
  6937  004530  EF9C  F022         	goto	u4880
  6938  004534                     u4881:
  6939  004534  EFB7  F022         	goto	l4579
  6940  004538                     u4880:
  6941  004538                     
  6942                           ;dc_motor.c: 149:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
  6943  004538  0E00               	movlw	0
  6944  00453A  6E2E               	movwf	(turnLeft@i_1328+1)^0,c
  6945  00453C  0E00               	movlw	0
  6946  00453E  6E2D               	movwf	turnLeft@i_1328^0,c
  6947  004540  EFAC  F022         	goto	l313
  6948  004544                     l4575:
  6949  004544  0E15               	movlw	21
  6950  004546  6E25               	movwf	??_turnLeft^0,c
  6951  004548  0EC6               	movlw	198
  6952  00454A                     u6337:
  6953  00454A  2EE8               	decfsz	wreg,f,c
  6954  00454C  D7FE               	bra	u6337
  6955  00454E  2E25               	decfsz	??_turnLeft^0,f,c
  6956  004550  D7FC               	bra	u6337
  6957  004552  D000               	nop2	
  6958  004554  4A2D               	infsnz	turnLeft@i_1328^0,f,c
  6959  004556  2A2E               	incf	(turnLeft@i_1328+1)^0,f,c
  6960  004558                     l313:
  6961  004558  5027               	movf	turnLeft@delay_135^0,w,c
  6962  00455A  5C2D               	subwf	turnLeft@i_1328^0,w,c
  6963  00455C  5028               	movf	(turnLeft@delay_135+1)^0,w,c
  6964  00455E  582E               	subwfb	(turnLeft@i_1328+1)^0,w,c
  6965  004560  A0D8               	btfss	status,0,c
  6966  004562  EFB5  F022         	goto	u4891
  6967  004566  EFB7  F022         	goto	u4890
  6968  00456A                     u4891:
  6969  00456A  EFA2  F022         	goto	l4575
  6970  00456E                     u4890:
  6971  00456E                     l4579:
  6972                           
  6973                           ;dc_motor.c: 151:     if (angle_left == 90){
  6974  00456E  0E5A               	movlw	90
  6975  004570  1824               	xorwf	turnLeft@angle_left^0,w,c
  6976  004572  A4D8               	btfss	status,2,c
  6977  004574  EFBE  F022         	goto	u4901
  6978  004578  EFC0  F022         	goto	u4900
  6979  00457C                     u4901:
  6980  00457C  EFE1  F022         	goto	l4587
  6981  004580                     u4900:
  6982  004580                     
  6983                           ;dc_motor.c: 152:         for(unsigned int i = 0; i < delay+10; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
  6984  004580  0E00               	movlw	0
  6985  004582  6E30               	movwf	(turnLeft@i_1329+1)^0,c
  6986  004584  0E00               	movlw	0
  6987  004586  6E2F               	movwf	turnLeft@i_1329^0,c
  6988  004588  EFD0  F022         	goto	l317
  6989  00458C                     l4583:
  6990  00458C  0E15               	movlw	21
  6991  00458E  6E25               	movwf	??_turnLeft^0,c
  6992  004590  0EC6               	movlw	198
  6993  004592                     u6347:
  6994  004592  2EE8               	decfsz	wreg,f,c
  6995  004594  D7FE               	bra	u6347
  6996  004596  2E25               	decfsz	??_turnLeft^0,f,c
  6997  004598  D7FC               	bra	u6347
  6998  00459A  D000               	nop2	
  6999  00459C  4A2F               	infsnz	turnLeft@i_1329^0,f,c
  7000  00459E  2A30               	incf	(turnLeft@i_1329+1)^0,f,c
  7001  0045A0                     l317:
  7002  0045A0  0E0A               	movlw	10
  7003  0045A2  2431               	addwf	turnLeft@delay^0,w,c
  7004  0045A4  6E25               	movwf	??_turnLeft^0,c
  7005  0045A6  0E00               	movlw	0
  7006  0045A8  2032               	addwfc	(turnLeft@delay+1)^0,w,c
  7007  0045AA  6E26               	movwf	(??_turnLeft+1)^0,c
  7008  0045AC  5025               	movf	??_turnLeft^0,w,c
  7009  0045AE  5C2F               	subwf	turnLeft@i_1329^0,w,c
  7010  0045B0  5026               	movf	(??_turnLeft+1)^0,w,c
  7011  0045B2  5830               	subwfb	(turnLeft@i_1329+1)^0,w,c
  7012  0045B4  A0D8               	btfss	status,0,c
  7013  0045B6  EFDF  F022         	goto	u4911
  7014  0045BA  EFE1  F022         	goto	u4910
  7015  0045BE                     u4911:
  7016  0045BE  EFC6  F022         	goto	l4583
  7017  0045C2                     u4910:
  7018  0045C2                     l4587:
  7019                           
  7020                           ;dc_motor.c: 154:     stop(mL,mR);
  7021  0045C2  C020  F01A         	movff	turnLeft@mL,stop@mL
  7022  0045C6  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
  7023  0045CA  C022  F01C         	movff	turnLeft@mR,stop@mR
  7024  0045CE  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
  7025  0045D2  EC96  F029         	call	_stop	;wreg free
  7026  0045D6  0012               	return		;funcret
  7027  0045D8                     __end_of_turnLeft:
  7028                           	callstack 0
  7029                           
  7030 ;; *************** function _fullSpeedAhead_test *****************
  7031 ;; Defined at:
  7032 ;;		line 199 in file "dc_motor.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7035 ;;		 -> main@motorL(9), 
  7036 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7037 ;;		 -> main@motorR(9), 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;		None
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7053 ;;Total ram usage:        6 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 4
  7056 ;; This function calls:
  7057 ;;		_fullSpeedAhead
  7058 ;;		_stop
  7059 ;; This function is called by:
  7060 ;;		_test_action
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           
  7064                           	psect	text32
  7065  005942                     __ptext32:
  7066                           	callstack 0
  7067  005942                     _fullSpeedAhead_test:
  7068                           	callstack 24
  7069  005942                     
  7070                           ;dc_motor.c: 199: void fullSpeedAhead_test(struct DC_motor *mL, struct DC_motor *mR);dc_
      +                          motor.c: 200: { fullSpeedAhead(mL, mR);
  7071  005942  C020  F01A         	movff	fullSpeedAhead_test@mL,fullSpeedAhead@mL
  7072  005946  C021  F01B         	movff	fullSpeedAhead_test@mL+1,fullSpeedAhead@mL+1
  7073  00594A  C022  F01C         	movff	fullSpeedAhead_test@mR,fullSpeedAhead@mR
  7074  00594E  C023  F01D         	movff	fullSpeedAhead_test@mR+1,fullSpeedAhead@mR+1
  7075  005952  ECD2  F028         	call	_fullSpeedAhead	;wreg free
  7076  005956                     
  7077                           ;dc_motor.c: 201:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7078  005956  0E52               	movlw	82
  7079  005958  6E25               	movwf	(??_fullSpeedAhead_test+1)^0,c
  7080  00595A  0E2B               	movlw	43
  7081  00595C  6E24               	movwf	??_fullSpeedAhead_test^0,c
  7082  00595E  0E00               	movlw	0
  7083  005960                     u6357:
  7084  005960  2EE8               	decfsz	wreg,f,c
  7085  005962  D7FE               	bra	u6357
  7086  005964  2E24               	decfsz	??_fullSpeedAhead_test^0,f,c
  7087  005966  D7FC               	bra	u6357
  7088  005968  2E25               	decfsz	(??_fullSpeedAhead_test+1)^0,f,c
  7089  00596A  D7FA               	bra	u6357
  7090  00596C  D000               	nop2	
  7091  00596E                     
  7092                           ;dc_motor.c: 202:     stop(mL,mR);
  7093  00596E  C020  F01A         	movff	fullSpeedAhead_test@mL,stop@mL
  7094  005972  C021  F01B         	movff	fullSpeedAhead_test@mL+1,stop@mL+1
  7095  005976  C022  F01C         	movff	fullSpeedAhead_test@mR,stop@mR
  7096  00597A  C023  F01D         	movff	fullSpeedAhead_test@mR+1,stop@mR+1
  7097  00597E  EC96  F029         	call	_stop	;wreg free
  7098  005982  0012               	return		;funcret
  7099  005984                     __end_of_fullSpeedAhead_test:
  7100                           	callstack 0
  7101                           
  7102 ;; *************** function _calibrate_white *****************
  7103 ;; Defined at:
  7104 ;;		line 258 in file "color.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  w               2   11[COMRAM] PTR struct white_card
  7107 ;;		 -> main@white(28), 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;Total ram usage:        4 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 4
  7126 ;; This function calls:
  7127 ;;		_LED_B
  7128 ;;		_LED_C
  7129 ;;		_LED_G
  7130 ;;		_LED_OFF
  7131 ;;		_LED_R
  7132 ;;		_color_read_Blue
  7133 ;;		_color_read_Clear
  7134 ;;		_color_read_Green
  7135 ;;		_color_read_Red
  7136 ;;		_toggle_light
  7137 ;; This function is called by:
  7138 ;;		_main
  7139 ;;		_test_function
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text33
  7144  003966                     __ptext33:
  7145                           	callstack 0
  7146  003966                     _calibrate_white:
  7147                           	callstack 26
  7148  003966                     
  7149                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  7150  003966  EC12  F02E         	call	_LED_OFF	;wreg free
  7151  00396A                     
  7152                           ;color.c: 261:     toggle_light(1,2);
  7153  00396A  0E02               	movlw	2
  7154  00396C  6E01               	movwf	toggle_light@toggletime^0,c
  7155  00396E  0E01               	movlw	1
  7156  003970  EC5D  F01B         	call	_toggle_light
  7157  003974                     
  7158                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7159  003974  0E29               	movlw	41
  7160  003976  6E0F               	movwf	(??_calibrate_white+1)^0,c
  7161  003978  0E96               	movlw	150
  7162  00397A  6E0E               	movwf	??_calibrate_white^0,c
  7163  00397C  0E7F               	movlw	127
  7164  00397E                     u6367:
  7165  00397E  2EE8               	decfsz	wreg,f,c
  7166  003980  D7FE               	bra	u6367
  7167  003982  2E0E               	decfsz	??_calibrate_white^0,f,c
  7168  003984  D7FC               	bra	u6367
  7169  003986  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  7170  003988  D7FA               	bra	u6367
  7171  00398A  F000               	nop	
  7172  00398C                     
  7173                           ;color.c: 264:     LED_R();
  7174  00398C  EC02  F02E         	call	_LED_R	;wreg free
  7175  003990                     
  7176                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7177  003990  0E09               	movlw	9
  7178  003992  6E0F               	movwf	(??_calibrate_white+1)^0,c
  7179  003994  0E1E               	movlw	30
  7180  003996  6E0E               	movwf	??_calibrate_white^0,c
  7181  003998  0EE4               	movlw	228
  7182  00399A                     u6377:
  7183  00399A  2EE8               	decfsz	wreg,f,c
  7184  00399C  D7FE               	bra	u6377
  7185  00399E  2E0E               	decfsz	??_calibrate_white^0,f,c
  7186  0039A0  D7FC               	bra	u6377
  7187  0039A2  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  7188  0039A4  D7FA               	bra	u6377
  7189  0039A6  D000               	nop2	
  7190  0039A8                     
  7191                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  7192  0039A8  EC59  F02B         	call	_color_read_Red	;wreg free
  7193  0039AC  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  7194  0039B0  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  7195  0039B4  C005  FFDE         	movff	?_color_read_Red,postinc2
  7196  0039B8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7197  0039BC  EC81  F02B         	call	_color_read_Green	;wreg free
  7198  0039C0  EE20 F002          	lfsr	2,2
  7199  0039C4  500C               	movf	calibrate_white@w^0,w,c
  7200  0039C6  26D9               	addwf	fsr2l,f,c
  7201  0039C8  500D               	movf	(calibrate_white@w+1)^0,w,c
  7202  0039CA  22DA               	addwfc	fsr2h,f,c
  7203  0039CC  C005  FFDE         	movff	?_color_read_Green,postinc2
  7204  0039D0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7205  0039D4  ECA9  F02B         	call	_color_read_Blue	;wreg free
  7206  0039D8  EE20 F004          	lfsr	2,4
  7207  0039DC  500C               	movf	calibrate_white@w^0,w,c
  7208  0039DE  26D9               	addwf	fsr2l,f,c
  7209  0039E0  500D               	movf	(calibrate_white@w+1)^0,w,c
  7210  0039E2  22DA               	addwfc	fsr2h,f,c
  7211  0039E4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7212  0039E8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7213  0039EC                     
  7214                           ;color.c: 269:     LED_G();
  7215  0039EC  EC22  F02E         	call	_LED_G	;wreg free
  7216  0039F0                     
  7217                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7218  0039F0  0E09               	movlw	9
  7219  0039F2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  7220  0039F4  0E1E               	movlw	30
  7221  0039F6  6E0E               	movwf	??_calibrate_white^0,c
  7222  0039F8  0EE4               	movlw	228
  7223  0039FA                     u6387:
  7224  0039FA  2EE8               	decfsz	wreg,f,c
  7225  0039FC  D7FE               	bra	u6387
  7226  0039FE  2E0E               	decfsz	??_calibrate_white^0,f,c
  7227  003A00  D7FC               	bra	u6387
  7228  003A02  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  7229  003A04  D7FA               	bra	u6387
  7230  003A06  D000               	nop2	
  7231  003A08                     
  7232                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  7233  003A08  EC59  F02B         	call	_color_read_Red	;wreg free
  7234  003A0C  EE20 F006          	lfsr	2,6
  7235  003A10  500C               	movf	calibrate_white@w^0,w,c
  7236  003A12  26D9               	addwf	fsr2l,f,c
  7237  003A14  500D               	movf	(calibrate_white@w+1)^0,w,c
  7238  003A16  22DA               	addwfc	fsr2h,f,c
  7239  003A18  C005  FFDE         	movff	?_color_read_Red,postinc2
  7240  003A1C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7241  003A20  EC81  F02B         	call	_color_read_Green	;wreg free
  7242  003A24  EE20 F008          	lfsr	2,8
  7243  003A28  500C               	movf	calibrate_white@w^0,w,c
  7244  003A2A  26D9               	addwf	fsr2l,f,c
  7245  003A2C  500D               	movf	(calibrate_white@w+1)^0,w,c
  7246  003A2E  22DA               	addwfc	fsr2h,f,c
  7247  003A30  C005  FFDE         	movff	?_color_read_Green,postinc2
  7248  003A34  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7249  003A38  ECA9  F02B         	call	_color_read_Blue	;wreg free
  7250  003A3C  EE20 F00A          	lfsr	2,10
  7251  003A40  500C               	movf	calibrate_white@w^0,w,c
  7252  003A42  26D9               	addwf	fsr2l,f,c
  7253  003A44  500D               	movf	(calibrate_white@w+1)^0,w,c
  7254  003A46  22DA               	addwfc	fsr2h,f,c
  7255  003A48  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7256  003A4C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7257  003A50                     
  7258                           ;color.c: 275:     LED_B();
  7259  003A50  EC32  F02E         	call	_LED_B	;wreg free
  7260  003A54                     
  7261                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7262  003A54  0E09               	movlw	9
  7263  003A56  6E0F               	movwf	(??_calibrate_white+1)^0,c
  7264  003A58  0E1E               	movlw	30
  7265  003A5A  6E0E               	movwf	??_calibrate_white^0,c
  7266  003A5C  0EE4               	movlw	228
  7267  003A5E                     u6397:
  7268  003A5E  2EE8               	decfsz	wreg,f,c
  7269  003A60  D7FE               	bra	u6397
  7270  003A62  2E0E               	decfsz	??_calibrate_white^0,f,c
  7271  003A64  D7FC               	bra	u6397
  7272  003A66  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  7273  003A68  D7FA               	bra	u6397
  7274  003A6A  D000               	nop2	
  7275  003A6C                     
  7276                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  7277  003A6C  EC59  F02B         	call	_color_read_Red	;wreg free
  7278  003A70  EE20 F00C          	lfsr	2,12
  7279  003A74  500C               	movf	calibrate_white@w^0,w,c
  7280  003A76  26D9               	addwf	fsr2l,f,c
  7281  003A78  500D               	movf	(calibrate_white@w+1)^0,w,c
  7282  003A7A  22DA               	addwfc	fsr2h,f,c
  7283  003A7C  C005  FFDE         	movff	?_color_read_Red,postinc2
  7284  003A80  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7285  003A84  EC81  F02B         	call	_color_read_Green	;wreg free
  7286  003A88  EE20 F00E          	lfsr	2,14
  7287  003A8C  500C               	movf	calibrate_white@w^0,w,c
  7288  003A8E  26D9               	addwf	fsr2l,f,c
  7289  003A90  500D               	movf	(calibrate_white@w+1)^0,w,c
  7290  003A92  22DA               	addwfc	fsr2h,f,c
  7291  003A94  C005  FFDE         	movff	?_color_read_Green,postinc2
  7292  003A98  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7293  003A9C  ECA9  F02B         	call	_color_read_Blue	;wreg free
  7294  003AA0  EE20 F010          	lfsr	2,16
  7295  003AA4  500C               	movf	calibrate_white@w^0,w,c
  7296  003AA6  26D9               	addwf	fsr2l,f,c
  7297  003AA8  500D               	movf	(calibrate_white@w+1)^0,w,c
  7298  003AAA  22DA               	addwfc	fsr2h,f,c
  7299  003AAC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7300  003AB0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7301  003AB4  ECD1  F02B         	call	_color_read_Clear	;wreg free
  7302  003AB8  EE20 F01A          	lfsr	2,26
  7303  003ABC  500C               	movf	calibrate_white@w^0,w,c
  7304  003ABE  26D9               	addwf	fsr2l,f,c
  7305  003AC0  500D               	movf	(calibrate_white@w+1)^0,w,c
  7306  003AC2  22DA               	addwfc	fsr2h,f,c
  7307  003AC4  C005  FFDE         	movff	?_color_read_Clear,postinc2
  7308  003AC8  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  7309  003ACC                     
  7310                           ;color.c: 280:     LED_C();
  7311  003ACC  EC42  F02E         	call	_LED_C	;wreg free
  7312  003AD0                     
  7313                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  7314  003AD0  0E09               	movlw	9
  7315  003AD2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  7316  003AD4  0E1E               	movlw	30
  7317  003AD6  6E0E               	movwf	??_calibrate_white^0,c
  7318  003AD8  0EE4               	movlw	228
  7319  003ADA                     u6407:
  7320  003ADA  2EE8               	decfsz	wreg,f,c
  7321  003ADC  D7FE               	bra	u6407
  7322  003ADE  2E0E               	decfsz	??_calibrate_white^0,f,c
  7323  003AE0  D7FC               	bra	u6407
  7324  003AE2  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  7325  003AE4  D7FA               	bra	u6407
  7326  003AE6  D000               	nop2	
  7327  003AE8                     
  7328                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  7329  003AE8  EC59  F02B         	call	_color_read_Red	;wreg free
  7330  003AEC  EE20 F012          	lfsr	2,18
  7331  003AF0  500C               	movf	calibrate_white@w^0,w,c
  7332  003AF2  26D9               	addwf	fsr2l,f,c
  7333  003AF4  500D               	movf	(calibrate_white@w+1)^0,w,c
  7334  003AF6  22DA               	addwfc	fsr2h,f,c
  7335  003AF8  C005  FFDE         	movff	?_color_read_Red,postinc2
  7336  003AFC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7337  003B00  EC81  F02B         	call	_color_read_Green	;wreg free
  7338  003B04  EE20 F014          	lfsr	2,20
  7339  003B08  500C               	movf	calibrate_white@w^0,w,c
  7340  003B0A  26D9               	addwf	fsr2l,f,c
  7341  003B0C  500D               	movf	(calibrate_white@w+1)^0,w,c
  7342  003B0E  22DA               	addwfc	fsr2h,f,c
  7343  003B10  C005  FFDE         	movff	?_color_read_Green,postinc2
  7344  003B14  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7345  003B18  ECA9  F02B         	call	_color_read_Blue	;wreg free
  7346  003B1C  EE20 F016          	lfsr	2,22
  7347  003B20  500C               	movf	calibrate_white@w^0,w,c
  7348  003B22  26D9               	addwf	fsr2l,f,c
  7349  003B24  500D               	movf	(calibrate_white@w+1)^0,w,c
  7350  003B26  22DA               	addwfc	fsr2h,f,c
  7351  003B28  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7352  003B2C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7353  003B30  ECD1  F02B         	call	_color_read_Clear	;wreg free
  7354  003B34  EE20 F018          	lfsr	2,24
  7355  003B38  500C               	movf	calibrate_white@w^0,w,c
  7356  003B3A  26D9               	addwf	fsr2l,f,c
  7357  003B3C  500D               	movf	(calibrate_white@w+1)^0,w,c
  7358  003B3E  22DA               	addwfc	fsr2h,f,c
  7359  003B40  C005  FFDE         	movff	?_color_read_Clear,postinc2
  7360  003B44  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  7361  003B48                     
  7362                           ;color.c: 284:     LED_OFF();
  7363  003B48  EC12  F02E         	call	_LED_OFF	;wreg free
  7364  003B4C                     
  7365                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7366  003B4C  0E29               	movlw	41
  7367  003B4E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  7368  003B50  0E96               	movlw	150
  7369  003B52  6E0E               	movwf	??_calibrate_white^0,c
  7370  003B54  0E7F               	movlw	127
  7371  003B56                     u6417:
  7372  003B56  2EE8               	decfsz	wreg,f,c
  7373  003B58  D7FE               	bra	u6417
  7374  003B5A  2E0E               	decfsz	??_calibrate_white^0,f,c
  7375  003B5C  D7FC               	bra	u6417
  7376  003B5E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  7377  003B60  D7FA               	bra	u6417
  7378  003B62  F000               	nop	
  7379                           
  7380                           ;color.c: 286:     toggle_light(1,2);
  7381  003B64  0E02               	movlw	2
  7382  003B66  6E01               	movwf	toggle_light@toggletime^0,c
  7383  003B68  0E01               	movlw	1
  7384  003B6A  EC5D  F01B         	call	_toggle_light
  7385  003B6E  0012               	return		;funcret
  7386  003B70                     __end_of_calibrate_white:
  7387                           	callstack 0
  7388                           
  7389 ;; *************** function _color_read_Red *****************
  7390 ;; Defined at:
  7391 ;;		line 91 in file "color.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;		None
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  tmp             2    9[COMRAM] unsigned int 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  2    4[COMRAM] unsigned int 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7408 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;Total ram usage:        7 bytes
  7410 ;; Hardware stack levels used: 1
  7411 ;; Hardware stack levels required when called: 3
  7412 ;; This function calls:
  7413 ;;		_I2C_2_Master_Read
  7414 ;;		_I2C_2_Master_RepStart
  7415 ;;		_I2C_2_Master_Start
  7416 ;;		_I2C_2_Master_Stop
  7417 ;;		_I2C_2_Master_Write
  7418 ;; This function is called by:
  7419 ;;		_read_color
  7420 ;;		_calibrate_white
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text34
  7425  0056B2                     __ptext34:
  7426                           	callstack 0
  7427  0056B2                     _color_read_Red:
  7428                           	callstack 24
  7429  0056B2                     
  7430                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  7431  0056B2  EC98  F02E         	call	_I2C_2_Master_Start	;wreg free
  7432                           
  7433                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  7434  0056B6  0E52               	movlw	82
  7435  0056B8  EC87  F02E         	call	_I2C_2_Master_Write
  7436                           
  7437                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  7438  0056BC  0EB6               	movlw	182
  7439  0056BE  EC87  F02E         	call	_I2C_2_Master_Write
  7440                           
  7441                           ;color.c: 97:  I2C_2_Master_RepStart();
  7442  0056C2  EC9D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  7443                           
  7444                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  7445  0056C6  0E53               	movlw	83
  7446  0056C8  EC87  F02E         	call	_I2C_2_Master_Write
  7447                           
  7448                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  7449  0056CC  0E01               	movlw	1
  7450  0056CE  ECC2  F02C         	call	_I2C_2_Master_Read
  7451  0056D2  6E07               	movwf	??_color_read_Red^0,c
  7452  0056D4  5007               	movf	??_color_read_Red^0,w,c
  7453  0056D6  6E0A               	movwf	color_read_Red@tmp^0,c
  7454  0056D8  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7455                           
  7456                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7457  0056DA  0E00               	movlw	0
  7458  0056DC  ECC2  F02C         	call	_I2C_2_Master_Read
  7459  0056E0  6E07               	movwf	??_color_read_Red^0,c
  7460  0056E2  5007               	movf	??_color_read_Red^0,w,c
  7461  0056E4  6E09               	movwf	(??_color_read_Red+2)^0,c
  7462  0056E6  6A08               	clrf	(??_color_read_Red+1)^0,c
  7463  0056E8  500A               	movf	color_read_Red@tmp^0,w,c
  7464  0056EA  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7465  0056EC  6E0A               	movwf	color_read_Red@tmp^0,c
  7466  0056EE  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7467  0056F0  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7468  0056F2  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7469                           
  7470                           ;color.c: 101:  I2C_2_Master_Stop();
  7471  0056F4  EC93  F02E         	call	_I2C_2_Master_Stop	;wreg free
  7472  0056F8                     
  7473                           ;color.c: 102:  return tmp;
  7474  0056F8  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7475  0056FC  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7476  005700  0012               	return		;funcret
  7477  005702                     __end_of_color_read_Red:
  7478                           	callstack 0
  7479                           
  7480 ;; *************** function _color_read_Green *****************
  7481 ;; Defined at:
  7482 ;;		line 119 in file "color.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;		None
  7485 ;; Auto vars:     Size  Location     Type
  7486 ;;  tmp             2    9[COMRAM] unsigned int 
  7487 ;; Return value:  Size  Location     Type
  7488 ;;                  2    4[COMRAM] unsigned int 
  7489 ;; Registers used:
  7490 ;;		wreg, status,2, status,0, cstack
  7491 ;; Tracked objects:
  7492 ;;		On entry : 0/0
  7493 ;;		On exit  : 0/0
  7494 ;;		Unchanged: 0/0
  7495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7500 ;;Total ram usage:        7 bytes
  7501 ;; Hardware stack levels used: 1
  7502 ;; Hardware stack levels required when called: 3
  7503 ;; This function calls:
  7504 ;;		_I2C_2_Master_Read
  7505 ;;		_I2C_2_Master_RepStart
  7506 ;;		_I2C_2_Master_Start
  7507 ;;		_I2C_2_Master_Stop
  7508 ;;		_I2C_2_Master_Write
  7509 ;; This function is called by:
  7510 ;;		_read_color
  7511 ;;		_calibrate_white
  7512 ;;		_distance_measure
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text35
  7517  005702                     __ptext35:
  7518                           	callstack 0
  7519  005702                     _color_read_Green:
  7520                           	callstack 24
  7521  005702                     
  7522                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  7523  005702  EC98  F02E         	call	_I2C_2_Master_Start	;wreg free
  7524                           
  7525                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  7526  005706  0E52               	movlw	82
  7527  005708  EC87  F02E         	call	_I2C_2_Master_Write
  7528                           
  7529                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  7530  00570C  0EB8               	movlw	184
  7531  00570E  EC87  F02E         	call	_I2C_2_Master_Write
  7532                           
  7533                           ;color.c: 125:  I2C_2_Master_RepStart();
  7534  005712  EC9D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  7535                           
  7536                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  7537  005716  0E53               	movlw	83
  7538  005718  EC87  F02E         	call	_I2C_2_Master_Write
  7539                           
  7540                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  7541  00571C  0E01               	movlw	1
  7542  00571E  ECC2  F02C         	call	_I2C_2_Master_Read
  7543  005722  6E07               	movwf	??_color_read_Green^0,c
  7544  005724  5007               	movf	??_color_read_Green^0,w,c
  7545  005726  6E0A               	movwf	color_read_Green@tmp^0,c
  7546  005728  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7547                           
  7548                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7549  00572A  0E00               	movlw	0
  7550  00572C  ECC2  F02C         	call	_I2C_2_Master_Read
  7551  005730  6E07               	movwf	??_color_read_Green^0,c
  7552  005732  5007               	movf	??_color_read_Green^0,w,c
  7553  005734  6E09               	movwf	(??_color_read_Green+2)^0,c
  7554  005736  6A08               	clrf	(??_color_read_Green+1)^0,c
  7555  005738  500A               	movf	color_read_Green@tmp^0,w,c
  7556  00573A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7557  00573C  6E0A               	movwf	color_read_Green@tmp^0,c
  7558  00573E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7559  005740  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7560  005742  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7561                           
  7562                           ;color.c: 129:  I2C_2_Master_Stop();
  7563  005744  EC93  F02E         	call	_I2C_2_Master_Stop	;wreg free
  7564  005748                     
  7565                           ;color.c: 130:  return tmp;
  7566  005748  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7567  00574C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7568  005750  0012               	return		;funcret
  7569  005752                     __end_of_color_read_Green:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function _color_read_Blue *****************
  7573 ;; Defined at:
  7574 ;;		line 105 in file "color.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;		None
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;  tmp             2    9[COMRAM] unsigned int 
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  2    4[COMRAM] unsigned int 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2, status,0, cstack
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7590 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;Total ram usage:        7 bytes
  7593 ;; Hardware stack levels used: 1
  7594 ;; Hardware stack levels required when called: 3
  7595 ;; This function calls:
  7596 ;;		_I2C_2_Master_Read
  7597 ;;		_I2C_2_Master_RepStart
  7598 ;;		_I2C_2_Master_Start
  7599 ;;		_I2C_2_Master_Stop
  7600 ;;		_I2C_2_Master_Write
  7601 ;; This function is called by:
  7602 ;;		_read_color
  7603 ;;		_calibrate_white
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text36
  7608  005752                     __ptext36:
  7609                           	callstack 0
  7610  005752                     _color_read_Blue:
  7611                           	callstack 24
  7612  005752                     
  7613                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  7614  005752  EC98  F02E         	call	_I2C_2_Master_Start	;wreg free
  7615                           
  7616                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  7617  005756  0E52               	movlw	82
  7618  005758  EC87  F02E         	call	_I2C_2_Master_Write
  7619                           
  7620                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  7621  00575C  0EBA               	movlw	186
  7622  00575E  EC87  F02E         	call	_I2C_2_Master_Write
  7623                           
  7624                           ;color.c: 111:  I2C_2_Master_RepStart();
  7625  005762  EC9D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  7626                           
  7627                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  7628  005766  0E53               	movlw	83
  7629  005768  EC87  F02E         	call	_I2C_2_Master_Write
  7630                           
  7631                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  7632  00576C  0E01               	movlw	1
  7633  00576E  ECC2  F02C         	call	_I2C_2_Master_Read
  7634  005772  6E07               	movwf	??_color_read_Blue^0,c
  7635  005774  5007               	movf	??_color_read_Blue^0,w,c
  7636  005776  6E0A               	movwf	color_read_Blue@tmp^0,c
  7637  005778  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7638                           
  7639                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7640  00577A  0E00               	movlw	0
  7641  00577C  ECC2  F02C         	call	_I2C_2_Master_Read
  7642  005780  6E07               	movwf	??_color_read_Blue^0,c
  7643  005782  5007               	movf	??_color_read_Blue^0,w,c
  7644  005784  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7645  005786  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7646  005788  500A               	movf	color_read_Blue@tmp^0,w,c
  7647  00578A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7648  00578C  6E0A               	movwf	color_read_Blue@tmp^0,c
  7649  00578E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7650  005790  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7651  005792  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7652                           
  7653                           ;color.c: 115:  I2C_2_Master_Stop();
  7654  005794  EC93  F02E         	call	_I2C_2_Master_Stop	;wreg free
  7655  005798                     
  7656                           ;color.c: 116:  return tmp;
  7657  005798  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7658  00579C  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7659  0057A0  0012               	return		;funcret
  7660  0057A2                     __end_of_color_read_Blue:
  7661                           	callstack 0
  7662                           
  7663 ;; *************** function _LED_R *****************
  7664 ;; Defined at:
  7665 ;;		line 164 in file "color.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7683 ;;Total ram usage:        2 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 1
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_calibrate_white
  7690 ;;		_detect_color
  7691 ;;		_color_data_collection
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           	psect	text37
  7696  005C04                     __ptext37:
  7697                           	callstack 0
  7698  005C04                     _LED_R:
  7699                           	callstack 27
  7700  005C04                     
  7701                           ;color.c: 166:     LATGbits.LATG1 = 1;
  7702  005C04  827F               	bsf	127,1,c	;volatile
  7703                           
  7704                           ;color.c: 167:     LATFbits.LATF7 = 0;
  7705  005C06  9E7E               	bcf	126,7,c	;volatile
  7706                           
  7707                           ;color.c: 168:     LATAbits.LATA4 = 0;
  7708  005C08  9879               	bcf	121,4,c	;volatile
  7709  005C0A                     
  7710                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7711  005C0A  0E11               	movlw	17
  7712  005C0C  6E02               	movwf	(??_LED_R+1)^0,c
  7713  005C0E  0E3C               	movlw	60
  7714  005C10  6E01               	movwf	??_LED_R^0,c
  7715  005C12  0ECB               	movlw	203
  7716  005C14                     u6427:
  7717  005C14  2EE8               	decfsz	wreg,f,c
  7718  005C16  D7FE               	bra	u6427
  7719  005C18  2E01               	decfsz	??_LED_R^0,f,c
  7720  005C1A  D7FC               	bra	u6427
  7721  005C1C  2E02               	decfsz	(??_LED_R+1)^0,f,c
  7722  005C1E  D7FA               	bra	u6427
  7723  005C20  F000               	nop	
  7724  005C22  0012               	return		;funcret
  7725  005C24                     __end_of_LED_R:
  7726                           	callstack 0
  7727                           
  7728 ;; *************** function _LED_OFF *****************
  7729 ;; Defined at:
  7730 ;;		line 155 in file "color.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;		None
  7733 ;; Auto vars:     Size  Location     Type
  7734 ;;		None
  7735 ;; Return value:  Size  Location     Type
  7736 ;;                  1    wreg      void 
  7737 ;; Registers used:
  7738 ;;		wreg
  7739 ;; Tracked objects:
  7740 ;;		On entry : 0/0
  7741 ;;		On exit  : 0/0
  7742 ;;		Unchanged: 0/0
  7743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7748 ;;Total ram usage:        2 bytes
  7749 ;; Hardware stack levels used: 1
  7750 ;; Hardware stack levels required when called: 1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_calibrate_white
  7755 ;;		_main
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text38
  7760  005C24                     __ptext38:
  7761                           	callstack 0
  7762  005C24                     _LED_OFF:
  7763                           	callstack 28
  7764  005C24                     
  7765                           ;color.c: 157:     LATGbits.LATG1 = 0;
  7766  005C24  927F               	bcf	127,1,c	;volatile
  7767                           
  7768                           ;color.c: 158:     LATFbits.LATF7 = 0;
  7769  005C26  9E7E               	bcf	126,7,c	;volatile
  7770                           
  7771                           ;color.c: 159:     LATAbits.LATA4 = 0;
  7772  005C28  9879               	bcf	121,4,c	;volatile
  7773  005C2A                     
  7774                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7775  005C2A  0E11               	movlw	17
  7776  005C2C  6E02               	movwf	(??_LED_OFF+1)^0,c
  7777  005C2E  0E3C               	movlw	60
  7778  005C30  6E01               	movwf	??_LED_OFF^0,c
  7779  005C32  0ECB               	movlw	203
  7780  005C34                     u6437:
  7781  005C34  2EE8               	decfsz	wreg,f,c
  7782  005C36  D7FE               	bra	u6437
  7783  005C38  2E01               	decfsz	??_LED_OFF^0,f,c
  7784  005C3A  D7FC               	bra	u6437
  7785  005C3C  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  7786  005C3E  D7FA               	bra	u6437
  7787  005C40  F000               	nop	
  7788  005C42  0012               	return		;funcret
  7789  005C44                     __end_of_LED_OFF:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _LED_G *****************
  7793 ;; Defined at:
  7794 ;;		line 191 in file "color.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7811 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;Total ram usage:        2 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 1
  7815 ;; This function calls:
  7816 ;;		Nothing
  7817 ;; This function is called by:
  7818 ;;		_calibrate_white
  7819 ;;		_detect_color
  7820 ;;		_color_data_collection
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824                           	psect	text39
  7825  005C44                     __ptext39:
  7826                           	callstack 0
  7827  005C44                     _LED_G:
  7828                           	callstack 27
  7829  005C44                     
  7830                           ;color.c: 193:     LATGbits.LATG1 = 0;
  7831  005C44  927F               	bcf	127,1,c	;volatile
  7832                           
  7833                           ;color.c: 194:     LATFbits.LATF7 = 0;
  7834  005C46  9E7E               	bcf	126,7,c	;volatile
  7835                           
  7836                           ;color.c: 195:     LATAbits.LATA4 = 1;
  7837  005C48  8879               	bsf	121,4,c	;volatile
  7838  005C4A                     
  7839                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7840  005C4A  0E11               	movlw	17
  7841  005C4C  6E02               	movwf	(??_LED_G+1)^0,c
  7842  005C4E  0E3C               	movlw	60
  7843  005C50  6E01               	movwf	??_LED_G^0,c
  7844  005C52  0ECB               	movlw	203
  7845  005C54                     u6447:
  7846  005C54  2EE8               	decfsz	wreg,f,c
  7847  005C56  D7FE               	bra	u6447
  7848  005C58  2E01               	decfsz	??_LED_G^0,f,c
  7849  005C5A  D7FC               	bra	u6447
  7850  005C5C  2E02               	decfsz	(??_LED_G+1)^0,f,c
  7851  005C5E  D7FA               	bra	u6447
  7852  005C60  F000               	nop	
  7853  005C62  0012               	return		;funcret
  7854  005C64                     __end_of_LED_G:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _LED_B *****************
  7858 ;; Defined at:
  7859 ;;		line 182 in file "color.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;                  1    wreg      void 
  7866 ;; Registers used:
  7867 ;;		wreg
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;Total ram usage:        2 bytes
  7878 ;; Hardware stack levels used: 1
  7879 ;; Hardware stack levels required when called: 1
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_calibrate_white
  7884 ;;		_detect_color
  7885 ;;		_color_data_collection
  7886 ;; This function uses a non-reentrant model
  7887 ;;
  7888                           
  7889                           	psect	text40
  7890  005C64                     __ptext40:
  7891                           	callstack 0
  7892  005C64                     _LED_B:
  7893                           	callstack 27
  7894  005C64                     
  7895                           ;color.c: 184:     LATGbits.LATG1 = 0;
  7896  005C64  927F               	bcf	127,1,c	;volatile
  7897                           
  7898                           ;color.c: 185:     LATFbits.LATF7 = 1;
  7899  005C66  8E7E               	bsf	126,7,c	;volatile
  7900                           
  7901                           ;color.c: 186:     LATAbits.LATA4 = 0;
  7902  005C68  9879               	bcf	121,4,c	;volatile
  7903  005C6A                     
  7904                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7905  005C6A  0E11               	movlw	17
  7906  005C6C  6E02               	movwf	(??_LED_B+1)^0,c
  7907  005C6E  0E3C               	movlw	60
  7908  005C70  6E01               	movwf	??_LED_B^0,c
  7909  005C72  0ECB               	movlw	203
  7910  005C74                     u6457:
  7911  005C74  2EE8               	decfsz	wreg,f,c
  7912  005C76  D7FE               	bra	u6457
  7913  005C78  2E01               	decfsz	??_LED_B^0,f,c
  7914  005C7A  D7FC               	bra	u6457
  7915  005C7C  2E02               	decfsz	(??_LED_B+1)^0,f,c
  7916  005C7E  D7FA               	bra	u6457
  7917  005C80  F000               	nop	
  7918  005C82  0012               	return		;funcret
  7919  005C84                     __end_of_LED_B:
  7920                           	callstack 0
  7921                           
  7922 ;; *************** function _buggylight_init *****************
  7923 ;; Defined at:
  7924 ;;		line 13 in file "color.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;		None
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;		None
  7929 ;; Return value:  Size  Location     Type
  7930 ;;                  1    wreg      void 
  7931 ;; Registers used:
  7932 ;;		None
  7933 ;; Tracked objects:
  7934 ;;		On entry : 0/0
  7935 ;;		On exit  : 0/0
  7936 ;;		Unchanged: 0/0
  7937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;Total ram usage:        0 bytes
  7943 ;; Hardware stack levels used: 1
  7944 ;; Hardware stack levels required when called: 1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_main
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text41
  7953  005CF8                     __ptext41:
  7954                           	callstack 0
  7955  005CF8                     _buggylight_init:
  7956                           	callstack 29
  7957  005CF8                     
  7958                           ;color.c: 15:     TRISHbits.TRISH1=0;
  7959  005CF8  9288               	bcf	136,1,c	;volatile
  7960                           
  7961                           ;color.c: 16:     TRISDbits.TRISD4=0;
  7962  005CFA  9884               	bcf	132,4,c	;volatile
  7963                           
  7964                           ;color.c: 17:     TRISDbits.TRISD3=0;
  7965  005CFC  9684               	bcf	132,3,c	;volatile
  7966                           
  7967                           ;color.c: 18:     TRISFbits.TRISF0=0;
  7968  005CFE  9086               	bcf	134,0,c	;volatile
  7969                           
  7970                           ;color.c: 19:     TRISHbits.TRISH0=0;
  7971  005D00  9088               	bcf	136,0,c	;volatile
  7972                           
  7973                           ;color.c: 21:     LATHbits.LATH1 = 0;
  7974  005D02  9280               	bcf	128,1,c	;volatile
  7975                           
  7976                           ;color.c: 22:     LATDbits.LATD4 = 0;
  7977  005D04  987C               	bcf	124,4,c	;volatile
  7978                           
  7979                           ;color.c: 23:     LATDbits.LATD3 = 0;
  7980  005D06  967C               	bcf	124,3,c	;volatile
  7981                           
  7982                           ;color.c: 24:     LATFbits.LATF0 = 0;
  7983  005D08  907E               	bcf	126,0,c	;volatile
  7984                           
  7985                           ;color.c: 25:     LATHbits.LATH0 = 0;
  7986  005D0A  9080               	bcf	128,0,c	;volatile
  7987  005D0C  0012               	return		;funcret
  7988  005D0E                     __end_of_buggylight_init:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _amb_light_measure *****************
  7992 ;; Defined at:
  7993 ;;		line 378 in file "color.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  7996 ;;		 -> main@amb(8), 
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  7999 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  8000 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  8001 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  8002 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  2   10[BANK0 ] unsigned int 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8013 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8014 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8015 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;Total ram usage:       14 bytes
  8017 ;; Hardware stack levels used: 1
  8018 ;; Hardware stack levels required when called: 5
  8019 ;; This function calls:
  8020 ;;		_LED_C
  8021 ;;		___fldiv
  8022 ;;		___xxtofl
  8023 ;;		_color_read_Clear
  8024 ;;		_lroundf
  8025 ;;		_toggle_light
  8026 ;; This function is called by:
  8027 ;;		_main
  8028 ;;		_test_function
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           	psect	text42
  8033  004A5A                     __ptext42:
  8034                           	callstack 0
  8035  004A5A                     _amb_light_measure:
  8036                           	callstack 25
  8037  004A5A  0E00               	movlw	0
  8038  004A5C  0100               	movlb	0	; () banked
  8039  004A5E  6FB3               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  8040  004A60  0E00               	movlw	0
  8041  004A62  6FB2               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  8042  004A64  0E00               	movlw	0
  8043  004A66  6FB5               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  8044  004A68  0E00               	movlw	0
  8045  004A6A  6FB4               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  8046  004A6C  0E00               	movlw	0
  8047  004A6E  6FAD               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  8048  004A70  0E00               	movlw	0
  8049  004A72  6FAC               	movwf	amb_light_measure@upper_bound& (0+255),b
  8050  004A74                     
  8051                           ; BSR set to: 0
  8052                           ;color.c: 381:     toggle_light(2,2);
  8053  004A74  0E02               	movlw	2
  8054  004A76  6E01               	movwf	toggle_light@toggletime^0,c
  8055  004A78  0E02               	movlw	2
  8056  004A7A  EC5D  F01B         	call	_toggle_light
  8057  004A7E                     
  8058                           ;color.c: 382:     LED_C();
  8059  004A7E  EC42  F02E         	call	_LED_C	;wreg free
  8060  004A82                     
  8061                           ;color.c: 383:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8062  004A82  0E29               	movlw	41
  8063  004A84  0100               	movlb	0	; () banked
  8064  004A86  6FAB               	movwf	(??_amb_light_measure+1)& (0+255),b
  8065  004A88  0E96               	movlw	150
  8066  004A8A  6FAA               	movwf	??_amb_light_measure& (0+255),b
  8067  004A8C  0E7F               	movlw	127
  8068  004A8E                     u6467:
  8069  004A8E  2EE8               	decfsz	wreg,f,c
  8070  004A90  D7FE               	bra	u6467
  8071  004A92  2FAA               	decfsz	??_amb_light_measure& (0+255),f,b
  8072  004A94  D7FC               	bra	u6467
  8073  004A96  2FAB               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  8074  004A98  D7FA               	bra	u6467
  8075  004A9A                     
  8076                           ;color.c: 385:     CC_amb_1 = color_read_Clear();
  8077  004A9A  ECD1  F02B         	call	_color_read_Clear	;wreg free
  8078  004A9E  C005  F0B0         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  8079  004AA2  C006  F0B1         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  8080  004AA6                     
  8081                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8082  004AA6  0E11               	movlw	17
  8083  004AA8  0100               	movlb	0	; () banked
  8084  004AAA  6FAB               	movwf	(??_amb_light_measure+1)& (0+255),b
  8085  004AAC  0E3C               	movlw	60
  8086  004AAE  6FAA               	movwf	??_amb_light_measure& (0+255),b
  8087  004AB0  0ECB               	movlw	203
  8088  004AB2                     u6477:
  8089  004AB2  2EE8               	decfsz	wreg,f,c
  8090  004AB4  D7FE               	bra	u6477
  8091  004AB6  2FAA               	decfsz	??_amb_light_measure& (0+255),f,b
  8092  004AB8  D7FC               	bra	u6477
  8093  004ABA  2FAB               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  8094  004ABC  D7FA               	bra	u6477
  8095  004ABE                     
  8096                           ;color.c: 388:     CC_amb_2 = color_read_Clear();
  8097  004ABE  ECD1  F02B         	call	_color_read_Clear	;wreg free
  8098  004AC2  C005  F0B2         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  8099  004AC6  C006  F0B3         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  8100  004ACA                     
  8101                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8102  004ACA  0E11               	movlw	17
  8103  004ACC  0100               	movlb	0	; () banked
  8104  004ACE  6FAB               	movwf	(??_amb_light_measure+1)& (0+255),b
  8105  004AD0  0E3C               	movlw	60
  8106  004AD2  6FAA               	movwf	??_amb_light_measure& (0+255),b
  8107  004AD4  0ECB               	movlw	203
  8108  004AD6                     u6487:
  8109  004AD6  2EE8               	decfsz	wreg,f,c
  8110  004AD8  D7FE               	bra	u6487
  8111  004ADA  2FAA               	decfsz	??_amb_light_measure& (0+255),f,b
  8112  004ADC  D7FC               	bra	u6487
  8113  004ADE  2FAB               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  8114  004AE0  D7FA               	bra	u6487
  8115  004AE2                     
  8116                           ;color.c: 391:     CC_amb_3 = color_read_Clear();
  8117  004AE2  ECD1  F02B         	call	_color_read_Clear	;wreg free
  8118  004AE6  C005  F0B4         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  8119  004AEA  C006  F0B5         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  8120  004AEE                     
  8121                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8122  004AEE  0E11               	movlw	17
  8123  004AF0  0100               	movlb	0	; () banked
  8124  004AF2  6FAB               	movwf	(??_amb_light_measure+1)& (0+255),b
  8125  004AF4  0E3C               	movlw	60
  8126  004AF6  6FAA               	movwf	??_amb_light_measure& (0+255),b
  8127  004AF8  0ECB               	movlw	203
  8128  004AFA                     u6497:
  8129  004AFA  2EE8               	decfsz	wreg,f,c
  8130  004AFC  D7FE               	bra	u6497
  8131  004AFE  2FAA               	decfsz	??_amb_light_measure& (0+255),f,b
  8132  004B00  D7FC               	bra	u6497
  8133  004B02  2FAB               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  8134  004B04  D7FA               	bra	u6497
  8135  004B06                     
  8136                           ;color.c: 394:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  8137  004B06  0100               	movlb	0	; () banked
  8138  004B08  51B2               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  8139  004B0A  25B0               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  8140  004B0C  6FAA               	movwf	??_amb_light_measure& (0+255),b
  8141  004B0E  51B3               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  8142  004B10  21B1               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  8143  004B12  6FAB               	movwf	(??_amb_light_measure+1)& (0+255),b
  8144  004B14  51B4               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  8145  004B16  27AA               	addwf	??_amb_light_measure& (0+255),f,b
  8146  004B18  51B5               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  8147  004B1A  23AB               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  8148  004B1C  C0AA  F001         	movff	??_amb_light_measure,___xxtofl@val
  8149  004B20  C0AB  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  8150  004B24  6A03               	clrf	(___xxtofl@val+2)^0,c
  8151  004B26  6A04               	clrf	(___xxtofl@val+3)^0,c
  8152  004B28  0E00               	movlw	0
  8153  004B2A  EC41  F021         	call	___xxtofl
  8154  004B2E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  8155  004B32  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  8156  004B36  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  8157  004B3A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  8158  004B3E  0E00               	movlw	0
  8159  004B40  6E13               	movwf	___fldiv@a^0,c
  8160  004B42  0E00               	movlw	0
  8161  004B44  6E14               	movwf	(___fldiv@a+1)^0,c
  8162  004B46  0E40               	movlw	64
  8163  004B48  6E15               	movwf	(___fldiv@a+2)^0,c
  8164  004B4A  0E40               	movlw	64
  8165  004B4C  6E16               	movwf	(___fldiv@a+3)^0,c
  8166  004B4E  EC58  F013         	call	___fldiv	;wreg free
  8167  004B52  C00F  F0A4         	movff	?___fldiv,lroundf@x
  8168  004B56  C010  F0A5         	movff	?___fldiv+1,lroundf@x+1
  8169  004B5A  C011  F0A6         	movff	?___fldiv+2,lroundf@x+2
  8170  004B5E  C012  F0A7         	movff	?___fldiv+3,lroundf@x+3
  8171  004B62  EC20  F02D         	call	_lroundf	;wreg free
  8172  004B66  C0A4  F0AE         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  8173  004B6A  C0A5  F0AF         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  8174  004B6E                     
  8175                           ;color.c: 396:     toggle_light(2,2);
  8176  004B6E  0E02               	movlw	2
  8177  004B70  6E01               	movwf	toggle_light@toggletime^0,c
  8178  004B72  0E02               	movlw	2
  8179  004B74  EC5D  F01B         	call	_toggle_light
  8180  004B78                     
  8181                           ;color.c: 398:     return CC_amb_ave;
  8182  004B78  C0AE  F0A8         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  8183  004B7C  C0AF  F0A9         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  8184  004B80  0012               	return		;funcret
  8185  004B82                     __end_of_amb_light_measure:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function _lroundf *****************
  8189 ;; Defined at:
  8190 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  x               4    6[BANK0 ] float 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;		None
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  4    6[BANK0 ] long 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8208 ;;Total ram usage:        4 bytes
  8209 ;; Hardware stack levels used: 1
  8210 ;; Hardware stack levels required when called: 4
  8211 ;; This function calls:
  8212 ;;		___fltol
  8213 ;;		_roundf
  8214 ;; This function is called by:
  8215 ;;		_detect_color
  8216 ;;		_amb_light_measure
  8217 ;;		_distance_measure
  8218 ;;		_check_color_reading
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text43
  8223  005A40                     __ptext43:
  8224                           	callstack 0
  8225  005A40                     _lroundf:
  8226                           	callstack 24
  8227  005A40  C0A4  F041         	movff	lroundf@x,roundf@x
  8228  005A44  C0A5  F042         	movff	lroundf@x+1,roundf@x+1
  8229  005A48  C0A6  F043         	movff	lroundf@x+2,roundf@x+2
  8230  005A4C  C0A7  F044         	movff	lroundf@x+3,roundf@x+3
  8231  005A50  EC81  F011         	call	_roundf	;wreg free
  8232  005A54  C041  F05B         	movff	?_roundf,___fltol@f1
  8233  005A58  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  8234  005A5C  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  8235  005A60  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  8236  005A64  ECC1  F025         	call	___fltol	;wreg free
  8237  005A68  C05B  F0A4         	movff	?___fltol,?_lroundf
  8238  005A6C  C05C  F0A5         	movff	?___fltol+1,?_lroundf+1
  8239  005A70  C05D  F0A6         	movff	?___fltol+2,?_lroundf+2
  8240  005A74  C05E  F0A7         	movff	?___fltol+3,?_lroundf+3
  8241  005A78  0012               	return		;funcret
  8242  005A7A                     __end_of_lroundf:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _roundf *****************
  8246 ;; Defined at:
  8247 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  x               4   64[COMRAM] float 
  8250 ;; Auto vars:     Size  Location     Type
  8251 ;;  y               4   86[COMRAM] float 
  8252 ;;  u               4   82[COMRAM] struct .
  8253 ;;  e               2   76[COMRAM] int 
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  4   64[COMRAM] float 
  8256 ;; Registers used:
  8257 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8264 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;Total ram usage:       26 bytes
  8268 ;; Hardware stack levels used: 1
  8269 ;; Hardware stack levels required when called: 3
  8270 ;; This function calls:
  8271 ;;		___fladd
  8272 ;;		___flge
  8273 ;;		___flmul
  8274 ;;		___flneg
  8275 ;;		___flsub
  8276 ;; This function is called by:
  8277 ;;		_lroundf
  8278 ;; This function uses a non-reentrant model
  8279 ;;
  8280                           
  8281                           	psect	text44
  8282  002302                     __ptext44:
  8283                           	callstack 0
  8284  002302                     _roundf:
  8285                           	callstack 24
  8286  002302  C072  F053         	movff	roundf@F527,roundf@u
  8287  002306  C073  F054         	movff	roundf@F527+1,roundf@u+1
  8288  00230A  C074  F055         	movff	roundf@F527+2,roundf@u+2
  8289  00230E  C075  F056         	movff	roundf@F527+3,roundf@u+3
  8290  002312  C041  F053         	movff	roundf@x,roundf@u
  8291  002316  C042  F054         	movff	roundf@x+1,roundf@u+1
  8292  00231A  C043  F055         	movff	roundf@x+2,roundf@u+2
  8293  00231E  C044  F056         	movff	roundf@x+3,roundf@u+3
  8294  002322  C053  F045         	movff	roundf@u,??_roundf
  8295  002326  C054  F046         	movff	roundf@u+1,??_roundf+1
  8296  00232A  C055  F047         	movff	roundf@u+2,??_roundf+2
  8297  00232E  C056  F048         	movff	roundf@u+3,??_roundf+3
  8298  002332  0E18               	movlw	24
  8299  002334  EFA1  F011         	goto	u4250
  8300  002338                     u4255:
  8301  002338  90D8               	bcf	status,0,c
  8302  00233A  3248               	rrcf	(??_roundf+3)^0,f,c
  8303  00233C  3247               	rrcf	(??_roundf+2)^0,f,c
  8304  00233E  3246               	rrcf	(??_roundf+1)^0,f,c
  8305  002340  3245               	rrcf	??_roundf^0,f,c
  8306  002342                     u4250:
  8307  002342  2EE8               	decfsz	wreg,f,c
  8308  002344  EF9C  F011         	goto	u4255
  8309  002348  5045               	movf	??_roundf^0,w,c
  8310  00234A  6E4D               	movwf	roundf@e^0,c
  8311  00234C  6A4E               	clrf	(roundf@e+1)^0,c
  8312  00234E  BE4E               	btfsc	(roundf@e+1)^0,7,c
  8313  002350  EFB3  F011         	goto	u4261
  8314  002354  504E               	movf	(roundf@e+1)^0,w,c
  8315  002356  E109               	bnz	u4260
  8316  002358  0E96               	movlw	150
  8317  00235A  5C4D               	subwf	roundf@e^0,w,c
  8318  00235C  A0D8               	btfss	status,0,c
  8319  00235E  EFB3  F011         	goto	u4261
  8320  002362  EFB5  F011         	goto	u4260
  8321  002366                     u4261:
  8322  002366  EFBF  F011         	goto	l4325
  8323  00236A                     u4260:
  8324  00236A  C041  F041         	movff	roundf@x,?_roundf
  8325  00236E  C042  F042         	movff	roundf@x+1,?_roundf+1
  8326  002372  C043  F043         	movff	roundf@x+2,?_roundf+2
  8327  002376  C044  F044         	movff	roundf@x+3,?_roundf+3
  8328  00237A  EF57  F013         	goto	l1508
  8329  00237E                     l4325:
  8330  00237E  C053  F045         	movff	roundf@u,??_roundf
  8331  002382  C054  F046         	movff	roundf@u+1,??_roundf+1
  8332  002386  C055  F047         	movff	roundf@u+2,??_roundf+2
  8333  00238A  C056  F048         	movff	roundf@u+3,??_roundf+3
  8334  00238E  0E20               	movlw	32
  8335  002390  EFCF  F011         	goto	u4270
  8336  002394                     u4275:
  8337  002394  90D8               	bcf	status,0,c
  8338  002396  3248               	rrcf	(??_roundf+3)^0,f,c
  8339  002398  3247               	rrcf	(??_roundf+2)^0,f,c
  8340  00239A  3246               	rrcf	(??_roundf+1)^0,f,c
  8341  00239C  3245               	rrcf	??_roundf^0,f,c
  8342  00239E                     u4270:
  8343  00239E  2EE8               	decfsz	wreg,f,c
  8344  0023A0  EFCA  F011         	goto	u4275
  8345  0023A4  5045               	movf	??_roundf^0,w,c
  8346  0023A6  1046               	iorwf	(??_roundf+1)^0,w,c
  8347  0023A8  1047               	iorwf	(??_roundf+2)^0,w,c
  8348  0023AA  1048               	iorwf	(??_roundf+3)^0,w,c
  8349  0023AC  B4D8               	btfsc	status,2,c
  8350  0023AE  EFDB  F011         	goto	u4281
  8351  0023B2  EFDD  F011         	goto	u4280
  8352  0023B6                     u4281:
  8353  0023B6  EFEF  F011         	goto	l4329
  8354  0023BA                     u4280:
  8355  0023BA  C041  F001         	movff	roundf@x,___flneg@f1
  8356  0023BE  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  8357  0023C2  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  8358  0023C6  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  8359  0023CA  EC3D  F02D         	call	___flneg	;wreg free
  8360  0023CE  C001  F041         	movff	?___flneg,roundf@x
  8361  0023D2  C002  F042         	movff	?___flneg+1,roundf@x+1
  8362  0023D6  C003  F043         	movff	?___flneg+2,roundf@x+2
  8363  0023DA  C004  F044         	movff	?___flneg+3,roundf@x+3
  8364  0023DE                     l4329:
  8365  0023DE  BE4E               	btfsc	(roundf@e+1)^0,7,c
  8366  0023E0  EFFD  F011         	goto	u4290
  8367  0023E4  504E               	movf	(roundf@e+1)^0,w,c
  8368  0023E6  E107               	bnz	u4291
  8369  0023E8  0E7E               	movlw	126
  8370  0023EA  5C4D               	subwf	roundf@e^0,w,c
  8371  0023EC  B0D8               	btfsc	status,0,c
  8372  0023EE  EFFB  F011         	goto	u4291
  8373  0023F2  EFFD  F011         	goto	u4290
  8374  0023F6                     u4291:
  8375  0023F6  EF19  F012         	goto	l4335
  8376  0023FA                     u4290:
  8377  0023FA  C053  F028         	movff	roundf@u,___flmul@b
  8378  0023FE  C054  F029         	movff	roundf@u+1,___flmul@b+1
  8379  002402  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  8380  002406  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  8381  00240A  0E00               	movlw	0
  8382  00240C  6E2C               	movwf	___flmul@a^0,c
  8383  00240E  0E00               	movlw	0
  8384  002410  6E2D               	movwf	(___flmul@a+1)^0,c
  8385  002412  0E00               	movlw	0
  8386  002414  6E2E               	movwf	(___flmul@a+2)^0,c
  8387  002416  0E00               	movlw	0
  8388  002418  6E2F               	movwf	(___flmul@a+3)^0,c
  8389  00241A  EC6C  F00F         	call	___flmul	;wreg free
  8390  00241E  C028  F041         	movff	?___flmul,?_roundf
  8391  002422  C029  F042         	movff	?___flmul+1,?_roundf+1
  8392  002426  C02A  F043         	movff	?___flmul+2,?_roundf+2
  8393  00242A  C02B  F044         	movff	?___flmul+3,?_roundf+3
  8394  00242E  EF57  F013         	goto	l1508
  8395  002432                     l4335:
  8396  002432  0E00               	movlw	0
  8397  002434  6E05               	movwf	___fladd@a^0,c
  8398  002436  0E00               	movlw	0
  8399  002438  6E06               	movwf	(___fladd@a+1)^0,c
  8400  00243A  0E00               	movlw	0
  8401  00243C  6E07               	movwf	(___fladd@a+2)^0,c
  8402  00243E  0E4B               	movlw	75
  8403  002440  6E08               	movwf	(___fladd@a+3)^0,c
  8404  002442  C041  F001         	movff	roundf@x,___fladd@b
  8405  002446  C042  F002         	movff	roundf@x+1,___fladd@b+1
  8406  00244A  C043  F003         	movff	roundf@x+2,___fladd@b+2
  8407  00244E  C044  F004         	movff	roundf@x+3,___fladd@b+3
  8408  002452  EC0C  F00D         	call	___fladd	;wreg free
  8409  002456  C001  F04F         	movff	?___fladd,_roundf$3233
  8410  00245A  C002  F050         	movff	?___fladd+1,_roundf$3233+1
  8411  00245E  C003  F051         	movff	?___fladd+2,_roundf$3233+2
  8412  002462  C004  F052         	movff	?___fladd+3,_roundf$3233+3
  8413  002466  0E00               	movlw	0
  8414  002468  6E05               	movwf	___fladd@a^0,c
  8415  00246A  0E00               	movlw	0
  8416  00246C  6E06               	movwf	(___fladd@a+1)^0,c
  8417  00246E  0E00               	movlw	0
  8418  002470  6E07               	movwf	(___fladd@a+2)^0,c
  8419  002472  0ECB               	movlw	203
  8420  002474  6E08               	movwf	(___fladd@a+3)^0,c
  8421  002476  C04F  F001         	movff	_roundf$3233,___fladd@b
  8422  00247A  C050  F002         	movff	_roundf$3233+1,___fladd@b+1
  8423  00247E  C051  F003         	movff	_roundf$3233+2,___fladd@b+2
  8424  002482  C052  F004         	movff	_roundf$3233+3,___fladd@b+3
  8425  002486  EC0C  F00D         	call	___fladd	;wreg free
  8426  00248A  C001  F049         	movff	?___fladd,_roundf$3234
  8427  00248E  C002  F04A         	movff	?___fladd+1,_roundf$3234+1
  8428  002492  C003  F04B         	movff	?___fladd+2,_roundf$3234+2
  8429  002496  C004  F04C         	movff	?___fladd+3,_roundf$3234+3
  8430  00249A  C049  F011         	movff	_roundf$3234,___flsub@b
  8431  00249E  C04A  F012         	movff	_roundf$3234+1,___flsub@b+1
  8432  0024A2  C04B  F013         	movff	_roundf$3234+2,___flsub@b+2
  8433  0024A6  C04C  F014         	movff	_roundf$3234+3,___flsub@b+3
  8434  0024AA  C041  F015         	movff	roundf@x,___flsub@a
  8435  0024AE  C042  F016         	movff	roundf@x+1,___flsub@a+1
  8436  0024B2  C043  F017         	movff	roundf@x+2,___flsub@a+2
  8437  0024B6  C044  F018         	movff	roundf@x+3,___flsub@a+3
  8438  0024BA  ECF9  F02B         	call	___flsub	;wreg free
  8439  0024BE  C011  F057         	movff	?___flsub,roundf@y
  8440  0024C2  C012  F058         	movff	?___flsub+1,roundf@y+1
  8441  0024C6  C013  F059         	movff	?___flsub+2,roundf@y+2
  8442  0024CA  C014  F05A         	movff	?___flsub+3,roundf@y+3
  8443  0024CE  0E00               	movlw	0
  8444  0024D0  6E01               	movwf	___flge@ff1^0,c
  8445  0024D2  0E00               	movlw	0
  8446  0024D4  6E02               	movwf	(___flge@ff1+1)^0,c
  8447  0024D6  0E00               	movlw	0
  8448  0024D8  6E03               	movwf	(___flge@ff1+2)^0,c
  8449  0024DA  0E3F               	movlw	63
  8450  0024DC  6E04               	movwf	(___flge@ff1+3)^0,c
  8451  0024DE  C057  F005         	movff	roundf@y,___flge@ff2
  8452  0024E2  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  8453  0024E6  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  8454  0024EA  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  8455  0024EE  EC45  F026         	call	___flge	;wreg free
  8456  0024F2  B0D8               	btfsc	status,0,c
  8457  0024F4  EF7E  F012         	goto	u4301
  8458  0024F8  EF80  F012         	goto	u4300
  8459  0024FC                     u4301:
  8460  0024FC  EFB6  F012         	goto	l4339
  8461  002500                     u4300:
  8462  002500  C041  F005         	movff	roundf@x,___fladd@a
  8463  002504  C042  F006         	movff	roundf@x+1,___fladd@a+1
  8464  002508  C043  F007         	movff	roundf@x+2,___fladd@a+2
  8465  00250C  C044  F008         	movff	roundf@x+3,___fladd@a+3
  8466  002510  C057  F001         	movff	roundf@y,___fladd@b
  8467  002514  C058  F002         	movff	roundf@y+1,___fladd@b+1
  8468  002518  C059  F003         	movff	roundf@y+2,___fladd@b+2
  8469  00251C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  8470  002520  EC0C  F00D         	call	___fladd	;wreg free
  8471  002524  C001  F04F         	movff	?___fladd,_roundf$3233
  8472  002528  C002  F050         	movff	?___fladd+1,_roundf$3233+1
  8473  00252C  C003  F051         	movff	?___fladd+2,_roundf$3233+2
  8474  002530  C004  F052         	movff	?___fladd+3,_roundf$3233+3
  8475  002534  C04F  F001         	movff	_roundf$3233,___fladd@b
  8476  002538  C050  F002         	movff	_roundf$3233+1,___fladd@b+1
  8477  00253C  C051  F003         	movff	_roundf$3233+2,___fladd@b+2
  8478  002540  C052  F004         	movff	_roundf$3233+3,___fladd@b+3
  8479  002544  0E00               	movlw	0
  8480  002546  6E05               	movwf	___fladd@a^0,c
  8481  002548  0E00               	movlw	0
  8482  00254A  6E06               	movwf	(___fladd@a+1)^0,c
  8483  00254C  0E80               	movlw	128
  8484  00254E  6E07               	movwf	(___fladd@a+2)^0,c
  8485  002550  0EBF               	movlw	191
  8486  002552  6E08               	movwf	(___fladd@a+3)^0,c
  8487  002554  EC0C  F00D         	call	___fladd	;wreg free
  8488  002558  C001  F057         	movff	?___fladd,roundf@y
  8489  00255C  C002  F058         	movff	?___fladd+1,roundf@y+1
  8490  002560  C003  F059         	movff	?___fladd+2,roundf@y+2
  8491  002564  C004  F05A         	movff	?___fladd+3,roundf@y+3
  8492  002568  EF1F  F013         	goto	l4345
  8493  00256C                     l4339:
  8494  00256C  0E00               	movlw	0
  8495  00256E  6E01               	movwf	___flge@ff1^0,c
  8496  002570  0E00               	movlw	0
  8497  002572  6E02               	movwf	(___flge@ff1+1)^0,c
  8498  002574  0E00               	movlw	0
  8499  002576  6E03               	movwf	(___flge@ff1+2)^0,c
  8500  002578  0EBF               	movlw	191
  8501  00257A  6E04               	movwf	(___flge@ff1+3)^0,c
  8502  00257C  C057  F005         	movff	roundf@y,___flge@ff2
  8503  002580  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  8504  002584  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  8505  002588  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  8506  00258C  EC45  F026         	call	___flge	;wreg free
  8507  002590  A0D8               	btfss	status,0,c
  8508  002592  EFCD  F012         	goto	u4311
  8509  002596  EFCF  F012         	goto	u4310
  8510  00259A                     u4311:
  8511  00259A  EF05  F013         	goto	l4343
  8512  00259E                     u4310:
  8513  00259E  C041  F005         	movff	roundf@x,___fladd@a
  8514  0025A2  C042  F006         	movff	roundf@x+1,___fladd@a+1
  8515  0025A6  C043  F007         	movff	roundf@x+2,___fladd@a+2
  8516  0025AA  C044  F008         	movff	roundf@x+3,___fladd@a+3
  8517  0025AE  C057  F001         	movff	roundf@y,___fladd@b
  8518  0025B2  C058  F002         	movff	roundf@y+1,___fladd@b+1
  8519  0025B6  C059  F003         	movff	roundf@y+2,___fladd@b+2
  8520  0025BA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  8521  0025BE  EC0C  F00D         	call	___fladd	;wreg free
  8522  0025C2  C001  F04F         	movff	?___fladd,_roundf$3233
  8523  0025C6  C002  F050         	movff	?___fladd+1,_roundf$3233+1
  8524  0025CA  C003  F051         	movff	?___fladd+2,_roundf$3233+2
  8525  0025CE  C004  F052         	movff	?___fladd+3,_roundf$3233+3
  8526  0025D2  C04F  F001         	movff	_roundf$3233,___fladd@b
  8527  0025D6  C050  F002         	movff	_roundf$3233+1,___fladd@b+1
  8528  0025DA  C051  F003         	movff	_roundf$3233+2,___fladd@b+2
  8529  0025DE  C052  F004         	movff	_roundf$3233+3,___fladd@b+3
  8530  0025E2  0E00               	movlw	0
  8531  0025E4  6E05               	movwf	___fladd@a^0,c
  8532  0025E6  0E00               	movlw	0
  8533  0025E8  6E06               	movwf	(___fladd@a+1)^0,c
  8534  0025EA  0E80               	movlw	128
  8535  0025EC  6E07               	movwf	(___fladd@a+2)^0,c
  8536  0025EE  0E3F               	movlw	63
  8537  0025F0  6E08               	movwf	(___fladd@a+3)^0,c
  8538  0025F2  EC0C  F00D         	call	___fladd	;wreg free
  8539  0025F6  C001  F057         	movff	?___fladd,roundf@y
  8540  0025FA  C002  F058         	movff	?___fladd+1,roundf@y+1
  8541  0025FE  C003  F059         	movff	?___fladd+2,roundf@y+2
  8542  002602  C004  F05A         	movff	?___fladd+3,roundf@y+3
  8543  002606  EF1F  F013         	goto	l4345
  8544  00260A                     l4343:
  8545  00260A  C057  F001         	movff	roundf@y,___fladd@b
  8546  00260E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  8547  002612  C059  F003         	movff	roundf@y+2,___fladd@b+2
  8548  002616  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  8549  00261A  C041  F005         	movff	roundf@x,___fladd@a
  8550  00261E  C042  F006         	movff	roundf@x+1,___fladd@a+1
  8551  002622  C043  F007         	movff	roundf@x+2,___fladd@a+2
  8552  002626  C044  F008         	movff	roundf@x+3,___fladd@a+3
  8553  00262A  EC0C  F00D         	call	___fladd	;wreg free
  8554  00262E  C001  F057         	movff	?___fladd,roundf@y
  8555  002632  C002  F058         	movff	?___fladd+1,roundf@y+1
  8556  002636  C003  F059         	movff	?___fladd+2,roundf@y+2
  8557  00263A  C004  F05A         	movff	?___fladd+3,roundf@y+3
  8558  00263E                     l4345:
  8559  00263E  C053  F045         	movff	roundf@u,??_roundf
  8560  002642  C054  F046         	movff	roundf@u+1,??_roundf+1
  8561  002646  C055  F047         	movff	roundf@u+2,??_roundf+2
  8562  00264A  C056  F048         	movff	roundf@u+3,??_roundf+3
  8563  00264E  0E20               	movlw	32
  8564  002650  EF2F  F013         	goto	u4320
  8565  002654                     u4325:
  8566  002654  90D8               	bcf	status,0,c
  8567  002656  3248               	rrcf	(??_roundf+3)^0,f,c
  8568  002658  3247               	rrcf	(??_roundf+2)^0,f,c
  8569  00265A  3246               	rrcf	(??_roundf+1)^0,f,c
  8570  00265C  3245               	rrcf	??_roundf^0,f,c
  8571  00265E                     u4320:
  8572  00265E  2EE8               	decfsz	wreg,f,c
  8573  002660  EF2A  F013         	goto	u4325
  8574  002664  5045               	movf	??_roundf^0,w,c
  8575  002666  1046               	iorwf	(??_roundf+1)^0,w,c
  8576  002668  1047               	iorwf	(??_roundf+2)^0,w,c
  8577  00266A  1048               	iorwf	(??_roundf+3)^0,w,c
  8578  00266C  B4D8               	btfsc	status,2,c
  8579  00266E  EF3B  F013         	goto	u4331
  8580  002672  EF3D  F013         	goto	u4330
  8581  002676                     u4331:
  8582  002676  EF4F  F013         	goto	l4349
  8583  00267A                     u4330:
  8584  00267A  C057  F001         	movff	roundf@y,___flneg@f1
  8585  00267E  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  8586  002682  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  8587  002686  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  8588  00268A  EC3D  F02D         	call	___flneg	;wreg free
  8589  00268E  C001  F057         	movff	?___flneg,roundf@y
  8590  002692  C002  F058         	movff	?___flneg+1,roundf@y+1
  8591  002696  C003  F059         	movff	?___flneg+2,roundf@y+2
  8592  00269A  C004  F05A         	movff	?___flneg+3,roundf@y+3
  8593  00269E                     l4349:
  8594  00269E  C057  F041         	movff	roundf@y,?_roundf
  8595  0026A2  C058  F042         	movff	roundf@y+1,?_roundf+1
  8596  0026A6  C059  F043         	movff	roundf@y+2,?_roundf+2
  8597  0026AA  C05A  F044         	movff	roundf@y+3,?_roundf+3
  8598  0026AE                     l1508:
  8599  0026AE  0012               	return		;funcret
  8600  0026B0                     __end_of_roundf:
  8601                           	callstack 0
  8602                           
  8603 ;; *************** function ___flsub *****************
  8604 ;; Defined at:
  8605 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  b               4   16[COMRAM] float 
  8608 ;;  a               4   20[COMRAM] float 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;		None
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  4   16[COMRAM] float 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8620 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8623 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8624 ;;Total ram usage:        8 bytes
  8625 ;; Hardware stack levels used: 1
  8626 ;; Hardware stack levels required when called: 2
  8627 ;; This function calls:
  8628 ;;		___fladd
  8629 ;; This function is called by:
  8630 ;;		_roundf
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text45
  8635  0057F2                     __ptext45:
  8636                           	callstack 0
  8637  0057F2                     ___flsub:
  8638                           	callstack 24
  8639  0057F2  0E00               	movlw	0
  8640  0057F4  1A15               	xorwf	___flsub@a^0,f,c
  8641  0057F6  0E00               	movlw	0
  8642  0057F8  1A16               	xorwf	(___flsub@a+1)^0,f,c
  8643  0057FA  0E00               	movlw	0
  8644  0057FC  1A17               	xorwf	(___flsub@a+2)^0,f,c
  8645  0057FE  0E80               	movlw	128
  8646  005800  1A18               	xorwf	(___flsub@a+3)^0,f,c
  8647  005802  C011  F001         	movff	___flsub@b,___fladd@b
  8648  005806  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  8649  00580A  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  8650  00580E  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  8651  005812  C015  F005         	movff	___flsub@a,___fladd@a
  8652  005816  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  8653  00581A  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  8654  00581E  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  8655  005822  EC0C  F00D         	call	___fladd	;wreg free
  8656  005826  C001  F011         	movff	?___fladd,?___flsub
  8657  00582A  C002  F012         	movff	?___fladd+1,?___flsub+1
  8658  00582E  C003  F013         	movff	?___fladd+2,?___flsub+2
  8659  005832  C004  F014         	movff	?___fladd+3,?___flsub+3
  8660  005836  0012               	return		;funcret
  8661  005838                     __end_of___flsub:
  8662                           	callstack 0
  8663                           
  8664 ;; *************** function ___fladd *****************
  8665 ;; Defined at:
  8666 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  8667 ;; Parameters:    Size  Location     Type
  8668 ;;  b               4    0[COMRAM] float 
  8669 ;;  a               4    4[COMRAM] float 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;  grs             1   15[COMRAM] unsigned char 
  8672 ;;  bexp            1   14[COMRAM] unsigned char 
  8673 ;;  aexp            1   13[COMRAM] unsigned char 
  8674 ;;  signs           1   12[COMRAM] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  4    0[COMRAM] unsigned char 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8684 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;Total ram usage:       16 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 1
  8691 ;; This function calls:
  8692 ;;		Nothing
  8693 ;; This function is called by:
  8694 ;;		___flsub
  8695 ;;		_roundf
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text46
  8700  001A18                     __ptext46:
  8701                           	callstack 0
  8702  001A18                     ___fladd:
  8703                           	callstack 24
  8704  001A18  5004               	movf	(___fladd@b+3)^0,w,c
  8705  001A1A  0B80               	andlw	128
  8706  001A1C  6E0D               	movwf	___fladd@signs^0,c
  8707  001A1E  5004               	movf	(___fladd@b+3)^0,w,c
  8708  001A20  2404               	addwf	(___fladd@b+3)^0,w,c
  8709  001A22  6E0F               	movwf	___fladd@bexp^0,c
  8710  001A24  AE03               	btfss	(___fladd@b+2)^0,7,c
  8711  001A26  EF17  F00D         	goto	u3121
  8712  001A2A  EF19  F00D         	goto	u3120
  8713  001A2E                     u3121:
  8714  001A2E  EF1A  F00D         	goto	l3621
  8715  001A32                     u3120:
  8716  001A32  800F               	bsf	___fladd@bexp^0,0,c
  8717  001A34                     l3621:
  8718  001A34  500F               	movf	___fladd@bexp^0,w,c
  8719  001A36  B4D8               	btfsc	status,2,c
  8720  001A38  EF20  F00D         	goto	u3131
  8721  001A3C  EF22  F00D         	goto	u3130
  8722  001A40                     u3131:
  8723  001A40  EF37  F00D         	goto	l3631
  8724  001A44                     u3130:
  8725  001A44  280F               	incf	___fladd@bexp^0,w,c
  8726  001A46  A4D8               	btfss	status,2,c
  8727  001A48  EF28  F00D         	goto	u3141
  8728  001A4C  EF2A  F00D         	goto	u3140
  8729  001A50                     u3141:
  8730  001A50  EF32  F00D         	goto	l3627
  8731  001A54                     u3140:
  8732  001A54  0E00               	movlw	0
  8733  001A56  6E01               	movwf	___fladd@b^0,c
  8734  001A58  0E00               	movlw	0
  8735  001A5A  6E02               	movwf	(___fladd@b+1)^0,c
  8736  001A5C  0E00               	movlw	0
  8737  001A5E  6E03               	movwf	(___fladd@b+2)^0,c
  8738  001A60  0E00               	movlw	0
  8739  001A62  6E04               	movwf	(___fladd@b+3)^0,c
  8740  001A64                     l3627:
  8741  001A64  8E03               	bsf	(___fladd@b+2)^0,7,c
  8742  001A66  0E00               	movlw	0
  8743  001A68  6E04               	movwf	(___fladd@b+3)^0,c
  8744  001A6A  EF3F  F00D         	goto	l3633
  8745  001A6E                     l3631:
  8746  001A6E  0E00               	movlw	0
  8747  001A70  6E01               	movwf	___fladd@b^0,c
  8748  001A72  0E00               	movlw	0
  8749  001A74  6E02               	movwf	(___fladd@b+1)^0,c
  8750  001A76  0E00               	movlw	0
  8751  001A78  6E03               	movwf	(___fladd@b+2)^0,c
  8752  001A7A  0E00               	movlw	0
  8753  001A7C  6E04               	movwf	(___fladd@b+3)^0,c
  8754  001A7E                     l3633:
  8755  001A7E  5008               	movf	(___fladd@a+3)^0,w,c
  8756  001A80  0B80               	andlw	128
  8757  001A82  6E0E               	movwf	___fladd@aexp^0,c
  8758  001A84  500D               	movf	___fladd@signs^0,w,c
  8759  001A86  180E               	xorwf	___fladd@aexp^0,w,c
  8760  001A88  B4D8               	btfsc	status,2,c
  8761  001A8A  EF49  F00D         	goto	u3151
  8762  001A8E  EF4B  F00D         	goto	u3150
  8763  001A92                     u3151:
  8764  001A92  EF4C  F00D         	goto	l3639
  8765  001A96                     u3150:
  8766  001A96  8C0D               	bsf	___fladd@signs^0,6,c
  8767  001A98                     l3639:
  8768  001A98  5008               	movf	(___fladd@a+3)^0,w,c
  8769  001A9A  2408               	addwf	(___fladd@a+3)^0,w,c
  8770  001A9C  6E0E               	movwf	___fladd@aexp^0,c
  8771  001A9E  AE07               	btfss	(___fladd@a+2)^0,7,c
  8772  001AA0  EF54  F00D         	goto	u3161
  8773  001AA4  EF56  F00D         	goto	u3160
  8774  001AA8                     u3161:
  8775  001AA8  EF57  F00D         	goto	l3645
  8776  001AAC                     u3160:
  8777  001AAC  800E               	bsf	___fladd@aexp^0,0,c
  8778  001AAE                     l3645:
  8779  001AAE  500E               	movf	___fladd@aexp^0,w,c
  8780  001AB0  B4D8               	btfsc	status,2,c
  8781  001AB2  EF5D  F00D         	goto	u3171
  8782  001AB6  EF5F  F00D         	goto	u3170
  8783  001ABA                     u3171:
  8784  001ABA  EF74  F00D         	goto	l3655
  8785  001ABE                     u3170:
  8786  001ABE  280E               	incf	___fladd@aexp^0,w,c
  8787  001AC0  A4D8               	btfss	status,2,c
  8788  001AC2  EF65  F00D         	goto	u3181
  8789  001AC6  EF67  F00D         	goto	u3180
  8790  001ACA                     u3181:
  8791  001ACA  EF6F  F00D         	goto	l3651
  8792  001ACE                     u3180:
  8793  001ACE  0E00               	movlw	0
  8794  001AD0  6E05               	movwf	___fladd@a^0,c
  8795  001AD2  0E00               	movlw	0
  8796  001AD4  6E06               	movwf	(___fladd@a+1)^0,c
  8797  001AD6  0E00               	movlw	0
  8798  001AD8  6E07               	movwf	(___fladd@a+2)^0,c
  8799  001ADA  0E00               	movlw	0
  8800  001ADC  6E08               	movwf	(___fladd@a+3)^0,c
  8801  001ADE                     l3651:
  8802  001ADE  8E07               	bsf	(___fladd@a+2)^0,7,c
  8803  001AE0  0E00               	movlw	0
  8804  001AE2  6E08               	movwf	(___fladd@a+3)^0,c
  8805  001AE4  EF7C  F00D         	goto	l3657
  8806  001AE8                     l3655:
  8807  001AE8  0E00               	movlw	0
  8808  001AEA  6E05               	movwf	___fladd@a^0,c
  8809  001AEC  0E00               	movlw	0
  8810  001AEE  6E06               	movwf	(___fladd@a+1)^0,c
  8811  001AF0  0E00               	movlw	0
  8812  001AF2  6E07               	movwf	(___fladd@a+2)^0,c
  8813  001AF4  0E00               	movlw	0
  8814  001AF6  6E08               	movwf	(___fladd@a+3)^0,c
  8815  001AF8                     l3657:
  8816  001AF8  500F               	movf	___fladd@bexp^0,w,c
  8817  001AFA  5C0E               	subwf	___fladd@aexp^0,w,c
  8818  001AFC  B0D8               	btfsc	status,0,c
  8819  001AFE  EF83  F00D         	goto	u3191
  8820  001B02  EF85  F00D         	goto	u3190
  8821  001B06                     u3191:
  8822  001B06  EFAC  F00D         	goto	l3693
  8823  001B0A                     u3190:
  8824  001B0A  AC0D               	btfss	___fladd@signs^0,6,c
  8825  001B0C  EF8A  F00D         	goto	u3201
  8826  001B10  EF8C  F00D         	goto	u3200
  8827  001B14                     u3201:
  8828  001B14  EF8E  F00D         	goto	l3663
  8829  001B18                     u3200:
  8830  001B18  0E80               	movlw	128
  8831  001B1A  1A0D               	xorwf	___fladd@signs^0,f,c
  8832  001B1C                     l3663:
  8833  001B1C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  8834  001B20  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8835  001B24  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  8836  001B28  C001  F010         	movff	___fladd@b,___fladd@grs
  8837  001B2C  C005  F001         	movff	___fladd@a,___fladd@b
  8838  001B30  C010  F005         	movff	___fladd@grs,___fladd@a
  8839  001B34  C002  F010         	movff	___fladd@b+1,___fladd@grs
  8840  001B38  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  8841  001B3C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  8842  001B40  C003  F010         	movff	___fladd@b+2,___fladd@grs
  8843  001B44  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  8844  001B48  C010  F007         	movff	___fladd@grs,___fladd@a+2
  8845  001B4C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  8846  001B50  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  8847  001B54  C010  F008         	movff	___fladd@grs,___fladd@a+3
  8848  001B58                     l3693:
  8849  001B58  0E00               	movlw	0
  8850  001B5A  6E10               	movwf	___fladd@grs^0,c
  8851  001B5C  500F               	movf	___fladd@bexp^0,w,c
  8852  001B5E  C00E  F009         	movff	___fladd@aexp,??___fladd
  8853  001B62  6A0A               	clrf	(??___fladd+1)^0,c
  8854  001B64  5E09               	subwf	??___fladd^0,f,c
  8855  001B66  0E00               	movlw	0
  8856  001B68  5A0A               	subwfb	(??___fladd+1)^0,f,c
  8857  001B6A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  8858  001B6C  EFC1  F00D         	goto	u3211
  8859  001B70  500A               	movf	(??___fladd+1)^0,w,c
  8860  001B72  E109               	bnz	u3210
  8861  001B74  0E1A               	movlw	26
  8862  001B76  5C09               	subwf	??___fladd^0,w,c
  8863  001B78  A0D8               	btfss	status,0,c
  8864  001B7A  EFC1  F00D         	goto	u3211
  8865  001B7E  EFC3  F00D         	goto	u3210
  8866  001B82                     u3211:
  8867  001B82  EFFA  F00D         	goto	l1244
  8868  001B86                     u3210:
  8869  001B86  5001               	movf	___fladd@b^0,w,c
  8870  001B88  1002               	iorwf	(___fladd@b+1)^0,w,c
  8871  001B8A  1003               	iorwf	(___fladd@b+2)^0,w,c
  8872  001B8C  1004               	iorwf	(___fladd@b+3)^0,w,c
  8873  001B8E  A4D8               	btfss	status,2,c
  8874  001B90  EFCC  F00D         	goto	u3221
  8875  001B94  EFCF  F00D         	goto	u3220
  8876  001B98                     u3221:
  8877  001B98  0E01               	movlw	1
  8878  001B9A  EFD0  F00D         	goto	u3230
  8879  001B9E                     u3220:
  8880  001B9E  0E00               	movlw	0
  8881  001BA0                     u3230:
  8882  001BA0  6E10               	movwf	___fladd@grs^0,c
  8883  001BA2  0E00               	movlw	0
  8884  001BA4  6E01               	movwf	___fladd@b^0,c
  8885  001BA6  0E00               	movlw	0
  8886  001BA8  6E02               	movwf	(___fladd@b+1)^0,c
  8887  001BAA  0E00               	movlw	0
  8888  001BAC  6E03               	movwf	(___fladd@b+2)^0,c
  8889  001BAE  0E00               	movlw	0
  8890  001BB0  6E04               	movwf	(___fladd@b+3)^0,c
  8891  001BB2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  8892  001BB6  EF03  F00E         	goto	l1243
  8893  001BBA                     l1245:
  8894  001BBA  A010               	btfss	___fladd@grs^0,0,c
  8895  001BBC  EFE2  F00D         	goto	u3241
  8896  001BC0  EFE4  F00D         	goto	u3240
  8897  001BC4                     u3241:
  8898  001BC4  EFEA  F00D         	goto	l3705
  8899  001BC8                     u3240:
  8900  001BC8  90D8               	bcf	status,0,c
  8901  001BCA  3010               	rrcf	___fladd@grs^0,w,c
  8902  001BCC  0901               	iorlw	1
  8903  001BCE  6E10               	movwf	___fladd@grs^0,c
  8904  001BD0  EFEC  F00D         	goto	l3707
  8905  001BD4                     l3705:
  8906  001BD4  90D8               	bcf	status,0,c
  8907  001BD6  3210               	rrcf	___fladd@grs^0,f,c
  8908  001BD8                     l3707:
  8909  001BD8  A001               	btfss	___fladd@b^0,0,c
  8910  001BDA  EFF1  F00D         	goto	u3251
  8911  001BDE  EFF3  F00D         	goto	u3250
  8912  001BE2                     u3251:
  8913  001BE2  EFF4  F00D         	goto	l3711
  8914  001BE6                     u3250:
  8915  001BE6  8E10               	bsf	___fladd@grs^0,7,c
  8916  001BE8                     l3711:
  8917  001BE8  3404               	rlcf	(___fladd@b+3)^0,w,c
  8918  001BEA  3204               	rrcf	(___fladd@b+3)^0,f,c
  8919  001BEC  3203               	rrcf	(___fladd@b+2)^0,f,c
  8920  001BEE  3202               	rrcf	(___fladd@b+1)^0,f,c
  8921  001BF0  3201               	rrcf	___fladd@b^0,f,c
  8922  001BF2  2A0F               	incf	___fladd@bexp^0,f,c
  8923  001BF4                     l1244:
  8924  001BF4  500E               	movf	___fladd@aexp^0,w,c
  8925  001BF6  5C0F               	subwf	___fladd@bexp^0,w,c
  8926  001BF8  A0D8               	btfss	status,0,c
  8927  001BFA  EF01  F00E         	goto	u3261
  8928  001BFE  EF03  F00E         	goto	u3260
  8929  001C02                     u3261:
  8930  001C02  EFDD  F00D         	goto	l1245
  8931  001C06                     u3260:
  8932  001C06                     l1243:
  8933  001C06  BC0D               	btfsc	___fladd@signs^0,6,c
  8934  001C08  EF08  F00E         	goto	u3271
  8935  001C0C  EF0A  F00E         	goto	u3270
  8936  001C10                     u3271:
  8937  001C10  EF4A  F00E         	goto	l3739
  8938  001C14                     u3270:
  8939  001C14  500F               	movf	___fladd@bexp^0,w,c
  8940  001C16  A4D8               	btfss	status,2,c
  8941  001C18  EF10  F00E         	goto	u3281
  8942  001C1C  EF12  F00E         	goto	u3280
  8943  001C20                     u3281:
  8944  001C20  EF1C  F00E         	goto	l3721
  8945  001C24                     u3280:
  8946  001C24  0E00               	movlw	0
  8947  001C26  6E01               	movwf	?___fladd^0,c
  8948  001C28  0E00               	movlw	0
  8949  001C2A  6E02               	movwf	(?___fladd+1)^0,c
  8950  001C2C  0E00               	movlw	0
  8951  001C2E  6E03               	movwf	(?___fladd+2)^0,c
  8952  001C30  0E00               	movlw	0
  8953  001C32  6E04               	movwf	(?___fladd+3)^0,c
  8954  001C34  EF6B  F00F         	goto	l1252
  8955  001C38                     l3721:
  8956  001C38  5005               	movf	___fladd@a^0,w,c
  8957  001C3A  2601               	addwf	___fladd@b^0,f,c
  8958  001C3C  5006               	movf	(___fladd@a+1)^0,w,c
  8959  001C3E  2202               	addwfc	(___fladd@b+1)^0,f,c
  8960  001C40  5007               	movf	(___fladd@a+2)^0,w,c
  8961  001C42  2203               	addwfc	(___fladd@b+2)^0,f,c
  8962  001C44  5008               	movf	(___fladd@a+3)^0,w,c
  8963  001C46  2204               	addwfc	(___fladd@b+3)^0,f,c
  8964  001C48  A004               	btfss	(___fladd@b+3)^0,0,c
  8965  001C4A  EF29  F00E         	goto	u3291
  8966  001C4E  EF2B  F00E         	goto	u3290
  8967  001C52                     u3291:
  8968  001C52  EFD7  F00E         	goto	l3775
  8969  001C56                     u3290:
  8970  001C56  A010               	btfss	___fladd@grs^0,0,c
  8971  001C58  EF30  F00E         	goto	u3301
  8972  001C5C  EF32  F00E         	goto	u3300
  8973  001C60                     u3301:
  8974  001C60  EF38  F00E         	goto	l3729
  8975  001C64                     u3300:
  8976  001C64  90D8               	bcf	status,0,c
  8977  001C66  3010               	rrcf	___fladd@grs^0,w,c
  8978  001C68  0901               	iorlw	1
  8979  001C6A  6E10               	movwf	___fladd@grs^0,c
  8980  001C6C  EF3A  F00E         	goto	l3731
  8981  001C70                     l3729:
  8982  001C70  90D8               	bcf	status,0,c
  8983  001C72  3210               	rrcf	___fladd@grs^0,f,c
  8984  001C74                     l3731:
  8985  001C74  A001               	btfss	___fladd@b^0,0,c
  8986  001C76  EF3F  F00E         	goto	u3311
  8987  001C7A  EF41  F00E         	goto	u3310
  8988  001C7E                     u3311:
  8989  001C7E  EF42  F00E         	goto	l3735
  8990  001C82                     u3310:
  8991  001C82  8E10               	bsf	___fladd@grs^0,7,c
  8992  001C84                     l3735:
  8993  001C84  3404               	rlcf	(___fladd@b+3)^0,w,c
  8994  001C86  3204               	rrcf	(___fladd@b+3)^0,f,c
  8995  001C88  3203               	rrcf	(___fladd@b+2)^0,f,c
  8996  001C8A  3202               	rrcf	(___fladd@b+1)^0,f,c
  8997  001C8C  3201               	rrcf	___fladd@b^0,f,c
  8998  001C8E  2A0F               	incf	___fladd@bexp^0,f,c
  8999  001C90  EFD7  F00E         	goto	l3775
  9000  001C94                     l3739:
  9001  001C94  5005               	movf	___fladd@a^0,w,c
  9002  001C96  5C01               	subwf	___fladd@b^0,w,c
  9003  001C98  5006               	movf	(___fladd@a+1)^0,w,c
  9004  001C9A  5802               	subwfb	(___fladd@b+1)^0,w,c
  9005  001C9C  5007               	movf	(___fladd@a+2)^0,w,c
  9006  001C9E  5803               	subwfb	(___fladd@b+2)^0,w,c
  9007  001CA0  5004               	movf	(___fladd@b+3)^0,w,c
  9008  001CA2  0A80               	xorlw	128
  9009  001CA4  6E09               	movwf	??___fladd^0,c
  9010  001CA6  5008               	movf	(___fladd@a+3)^0,w,c
  9011  001CA8  0A80               	xorlw	128
  9012  001CAA  5809               	subwfb	??___fladd^0,w,c
  9013  001CAC  B0D8               	btfsc	status,0,c
  9014  001CAE  EF5B  F00E         	goto	u3321
  9015  001CB2  EF5D  F00E         	goto	u3320
  9016  001CB6                     u3321:
  9017  001CB6  EF88  F00E         	goto	l3749
  9018  001CBA                     u3320:
  9019  001CBA  5001               	movf	___fladd@b^0,w,c
  9020  001CBC  5C05               	subwf	___fladd@a^0,w,c
  9021  001CBE  6E09               	movwf	??___fladd^0,c
  9022  001CC0  5002               	movf	(___fladd@b+1)^0,w,c
  9023  001CC2  5806               	subwfb	(___fladd@a+1)^0,w,c
  9024  001CC4  6E0A               	movwf	(??___fladd+1)^0,c
  9025  001CC6  5003               	movf	(___fladd@b+2)^0,w,c
  9026  001CC8  5807               	subwfb	(___fladd@a+2)^0,w,c
  9027  001CCA  6E0B               	movwf	(??___fladd+2)^0,c
  9028  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
  9029  001CCE  5808               	subwfb	(___fladd@a+3)^0,w,c
  9030  001CD0  6E0C               	movwf	(??___fladd+3)^0,c
  9031  001CD2  0EFF               	movlw	255
  9032  001CD4  2409               	addwf	??___fladd^0,w,c
  9033  001CD6  6E01               	movwf	___fladd@b^0,c
  9034  001CD8  0EFF               	movlw	255
  9035  001CDA  200A               	addwfc	(??___fladd+1)^0,w,c
  9036  001CDC  6E02               	movwf	(___fladd@b+1)^0,c
  9037  001CDE  0EFF               	movlw	255
  9038  001CE0  200B               	addwfc	(??___fladd+2)^0,w,c
  9039  001CE2  6E03               	movwf	(___fladd@b+2)^0,c
  9040  001CE4  0EFF               	movlw	255
  9041  001CE6  200C               	addwfc	(??___fladd+3)^0,w,c
  9042  001CE8  6E04               	movwf	(___fladd@b+3)^0,c
  9043  001CEA  0E80               	movlw	128
  9044  001CEC  1A0D               	xorwf	___fladd@signs^0,f,c
  9045  001CEE  6C10               	negf	___fladd@grs^0,c
  9046  001CF0  5010               	movf	___fladd@grs^0,w,c
  9047  001CF2  A4D8               	btfss	status,2,c
  9048  001CF4  EF7E  F00E         	goto	u3331
  9049  001CF8  EF80  F00E         	goto	u3330
  9050  001CFC                     u3331:
  9051  001CFC  EF90  F00E         	goto	l1260
  9052  001D00                     u3330:
  9053  001D00  0E01               	movlw	1
  9054  001D02  2601               	addwf	___fladd@b^0,f,c
  9055  001D04  0E00               	movlw	0
  9056  001D06  2202               	addwfc	(___fladd@b+1)^0,f,c
  9057  001D08  2203               	addwfc	(___fladd@b+2)^0,f,c
  9058  001D0A  2204               	addwfc	(___fladd@b+3)^0,f,c
  9059  001D0C  EF90  F00E         	goto	l1260
  9060  001D10                     l3749:
  9061  001D10  5005               	movf	___fladd@a^0,w,c
  9062  001D12  5E01               	subwf	___fladd@b^0,f,c
  9063  001D14  5006               	movf	(___fladd@a+1)^0,w,c
  9064  001D16  5A02               	subwfb	(___fladd@b+1)^0,f,c
  9065  001D18  5007               	movf	(___fladd@a+2)^0,w,c
  9066  001D1A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  9067  001D1C  5008               	movf	(___fladd@a+3)^0,w,c
  9068  001D1E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  9069  001D20                     l1260:
  9070  001D20  5001               	movf	___fladd@b^0,w,c
  9071  001D22  1002               	iorwf	(___fladd@b+1)^0,w,c
  9072  001D24  1003               	iorwf	(___fladd@b+2)^0,w,c
  9073  001D26  1004               	iorwf	(___fladd@b+3)^0,w,c
  9074  001D28  A4D8               	btfss	status,2,c
  9075  001D2A  EF99  F00E         	goto	u3341
  9076  001D2E  EF9B  F00E         	goto	u3340
  9077  001D32                     u3341:
  9078  001D32  EFD0  F00E         	goto	l3773
  9079  001D36                     u3340:
  9080  001D36  5010               	movf	___fladd@grs^0,w,c
  9081  001D38  A4D8               	btfss	status,2,c
  9082  001D3A  EFA1  F00E         	goto	u3351
  9083  001D3E  EFA3  F00E         	goto	u3350
  9084  001D42                     u3351:
  9085  001D42  EFD0  F00E         	goto	l3773
  9086  001D46                     u3350:
  9087  001D46  0E00               	movlw	0
  9088  001D48  6E01               	movwf	?___fladd^0,c
  9089  001D4A  0E00               	movlw	0
  9090  001D4C  6E02               	movwf	(?___fladd+1)^0,c
  9091  001D4E  0E00               	movlw	0
  9092  001D50  6E03               	movwf	(?___fladd+2)^0,c
  9093  001D52  0E00               	movlw	0
  9094  001D54  6E04               	movwf	(?___fladd+3)^0,c
  9095  001D56  EF6B  F00F         	goto	l1252
  9096  001D5A                     l3757:
  9097  001D5A  90D8               	bcf	status,0,c
  9098  001D5C  3601               	rlcf	___fladd@b^0,f,c
  9099  001D5E  3602               	rlcf	(___fladd@b+1)^0,f,c
  9100  001D60  3603               	rlcf	(___fladd@b+2)^0,f,c
  9101  001D62  3604               	rlcf	(___fladd@b+3)^0,f,c
  9102  001D64  AE10               	btfss	___fladd@grs^0,7,c
  9103  001D66  EFB7  F00E         	goto	u3361
  9104  001D6A  EFB9  F00E         	goto	u3360
  9105  001D6E                     u3361:
  9106  001D6E  EFBA  F00E         	goto	l3763
  9107  001D72                     u3360:
  9108  001D72  8001               	bsf	___fladd@b^0,0,c
  9109  001D74                     l3763:
  9110  001D74  A010               	btfss	___fladd@grs^0,0,c
  9111  001D76  EFBF  F00E         	goto	u3371
  9112  001D7A  EFC1  F00E         	goto	u3370
  9113  001D7E                     u3371:
  9114  001D7E  EFC5  F00E         	goto	l3767
  9115  001D82                     u3370:
  9116  001D82  80D8               	bsf	status,0,c
  9117  001D84  3610               	rlcf	___fladd@grs^0,f,c
  9118  001D86  EFC7  F00E         	goto	l3769
  9119  001D8A                     l3767:
  9120  001D8A  90D8               	bcf	status,0,c
  9121  001D8C  3610               	rlcf	___fladd@grs^0,f,c
  9122  001D8E                     l3769:
  9123  001D8E  500F               	movf	___fladd@bexp^0,w,c
  9124  001D90  B4D8               	btfsc	status,2,c
  9125  001D92  EFCD  F00E         	goto	u3381
  9126  001D96  EFCF  F00E         	goto	u3380
  9127  001D9A                     u3381:
  9128  001D9A  EFD0  F00E         	goto	l3773
  9129  001D9E                     u3380:
  9130  001D9E  060F               	decf	___fladd@bexp^0,f,c
  9131  001DA0                     l3773:
  9132  001DA0  AE03               	btfss	(___fladd@b+2)^0,7,c
  9133  001DA2  EFD5  F00E         	goto	u3391
  9134  001DA6  EFD7  F00E         	goto	u3390
  9135  001DAA                     u3391:
  9136  001DAA  EFAD  F00E         	goto	l3757
  9137  001DAE                     u3390:
  9138  001DAE                     l3775:
  9139  001DAE  0E00               	movlw	0
  9140  001DB0  6E0E               	movwf	___fladd@aexp^0,c
  9141  001DB2  AE10               	btfss	___fladd@grs^0,7,c
  9142  001DB4  EFDE  F00E         	goto	u3401
  9143  001DB8  EFE0  F00E         	goto	u3400
  9144  001DBC                     u3401:
  9145  001DBC  EFF8  F00E         	goto	l1269
  9146  001DC0                     u3400:
  9147  001DC0  C010  F009         	movff	___fladd@grs,??___fladd
  9148  001DC4  0E7F               	movlw	127
  9149  001DC6  1609               	andwf	??___fladd^0,f,c
  9150  001DC8  B4D8               	btfsc	status,2,c
  9151  001DCA  EFE9  F00E         	goto	u3411
  9152  001DCE  EFEB  F00E         	goto	u3410
  9153  001DD2                     u3411:
  9154  001DD2  EFEF  F00E         	goto	l1270
  9155  001DD6                     u3410:
  9156  001DD6                     l3781:
  9157  001DD6  0E01               	movlw	1
  9158  001DD8  6E0E               	movwf	___fladd@aexp^0,c
  9159  001DDA  EFF8  F00E         	goto	l1269
  9160  001DDE                     l1270:
  9161  001DDE  A001               	btfss	___fladd@b^0,0,c
  9162  001DE0  EFF4  F00E         	goto	u3421
  9163  001DE4  EFF6  F00E         	goto	u3420
  9164  001DE8                     u3421:
  9165  001DE8  EFF8  F00E         	goto	l1269
  9166  001DEC                     u3420:
  9167  001DEC  EFEB  F00E         	goto	l3781
  9168  001DF0                     l1269:
  9169  001DF0  500E               	movf	___fladd@aexp^0,w,c
  9170  001DF2  B4D8               	btfsc	status,2,c
  9171  001DF4  EFFE  F00E         	goto	u3431
  9172  001DF8  EF00  F00F         	goto	u3430
  9173  001DFC                     u3431:
  9174  001DFC  EF2B  F00F         	goto	l3793
  9175  001E00                     u3430:
  9176  001E00  0E01               	movlw	1
  9177  001E02  2601               	addwf	___fladd@b^0,f,c
  9178  001E04  0E00               	movlw	0
  9179  001E06  2202               	addwfc	(___fladd@b+1)^0,f,c
  9180  001E08  2203               	addwfc	(___fladd@b+2)^0,f,c
  9181  001E0A  2204               	addwfc	(___fladd@b+3)^0,f,c
  9182  001E0C  A004               	btfss	(___fladd@b+3)^0,0,c
  9183  001E0E  EF0B  F00F         	goto	u3441
  9184  001E12  EF0D  F00F         	goto	u3440
  9185  001E16                     u3441:
  9186  001E16  EF2B  F00F         	goto	l3793
  9187  001E1A                     u3440:
  9188  001E1A  C001  F009         	movff	___fladd@b,??___fladd
  9189  001E1E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  9190  001E22  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  9191  001E26  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  9192  001E2A  340C               	rlcf	(??___fladd+3)^0,w,c
  9193  001E2C  320C               	rrcf	(??___fladd+3)^0,f,c
  9194  001E2E  320B               	rrcf	(??___fladd+2)^0,f,c
  9195  001E30  320A               	rrcf	(??___fladd+1)^0,f,c
  9196  001E32  3209               	rrcf	??___fladd^0,f,c
  9197  001E34  C009  F001         	movff	??___fladd,___fladd@b
  9198  001E38  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  9199  001E3C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  9200  001E40  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  9201  001E44  280F               	incf	___fladd@bexp^0,w,c
  9202  001E46  B4D8               	btfsc	status,2,c
  9203  001E48  EF28  F00F         	goto	u3451
  9204  001E4C  EF2A  F00F         	goto	u3450
  9205  001E50                     u3451:
  9206  001E50  EF2B  F00F         	goto	l3793
  9207  001E54                     u3450:
  9208  001E54  2A0F               	incf	___fladd@bexp^0,f,c
  9209  001E56                     l3793:
  9210  001E56  280F               	incf	___fladd@bexp^0,w,c
  9211  001E58  B4D8               	btfsc	status,2,c
  9212  001E5A  EF31  F00F         	goto	u3461
  9213  001E5E  EF33  F00F         	goto	u3460
  9214  001E62                     u3461:
  9215  001E62  EF3B  F00F         	goto	l3797
  9216  001E66                     u3460:
  9217  001E66  500F               	movf	___fladd@bexp^0,w,c
  9218  001E68  A4D8               	btfss	status,2,c
  9219  001E6A  EF39  F00F         	goto	u3471
  9220  001E6E  EF3B  F00F         	goto	u3470
  9221  001E72                     u3471:
  9222  001E72  EF4D  F00F         	goto	l3801
  9223  001E76                     u3470:
  9224  001E76                     l3797:
  9225  001E76  0E00               	movlw	0
  9226  001E78  6E01               	movwf	___fladd@b^0,c
  9227  001E7A  0E00               	movlw	0
  9228  001E7C  6E02               	movwf	(___fladd@b+1)^0,c
  9229  001E7E  0E00               	movlw	0
  9230  001E80  6E03               	movwf	(___fladd@b+2)^0,c
  9231  001E82  0E00               	movlw	0
  9232  001E84  6E04               	movwf	(___fladd@b+3)^0,c
  9233  001E86  500F               	movf	___fladd@bexp^0,w,c
  9234  001E88  A4D8               	btfss	status,2,c
  9235  001E8A  EF49  F00F         	goto	u3481
  9236  001E8E  EF4B  F00F         	goto	u3480
  9237  001E92                     u3481:
  9238  001E92  EF4D  F00F         	goto	l3801
  9239  001E96                     u3480:
  9240  001E96  0E00               	movlw	0
  9241  001E98  6E0D               	movwf	___fladd@signs^0,c
  9242  001E9A                     l3801:
  9243  001E9A  A00F               	btfss	___fladd@bexp^0,0,c
  9244  001E9C  EF52  F00F         	goto	u3491
  9245  001EA0  EF54  F00F         	goto	u3490
  9246  001EA4                     u3491:
  9247  001EA4  EF57  F00F         	goto	l3805
  9248  001EA8                     u3490:
  9249  001EA8  8E03               	bsf	(___fladd@b+2)^0,7,c
  9250  001EAA  EF58  F00F         	goto	l3807
  9251  001EAE                     l3805:
  9252  001EAE  9E03               	bcf	(___fladd@b+2)^0,7,c
  9253  001EB0                     l3807:
  9254  001EB0  90D8               	bcf	status,0,c
  9255  001EB2  300F               	rrcf	___fladd@bexp^0,w,c
  9256  001EB4  6E04               	movwf	(___fladd@b+3)^0,c
  9257  001EB6  AE0D               	btfss	___fladd@signs^0,7,c
  9258  001EB8  EF60  F00F         	goto	u3501
  9259  001EBC  EF62  F00F         	goto	u3500
  9260  001EC0                     u3501:
  9261  001EC0  EF63  F00F         	goto	l3813
  9262  001EC4                     u3500:
  9263  001EC4  8E04               	bsf	(___fladd@b+3)^0,7,c
  9264  001EC6                     l3813:
  9265  001EC6  C001  F001         	movff	___fladd@b,?___fladd
  9266  001ECA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  9267  001ECE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  9268  001ED2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  9269  001ED6                     l1252:
  9270  001ED6  0012               	return		;funcret
  9271  001ED8                     __end_of___fladd:
  9272                           	callstack 0
  9273                           
  9274 ;; *************** function ___flneg *****************
  9275 ;; Defined at:
  9276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;  f1              4    0[COMRAM] unsigned char 
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;		None
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  4    0[COMRAM] unsigned char 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;Total ram usage:        4 bytes
  9295 ;; Hardware stack levels used: 1
  9296 ;; Hardware stack levels required when called: 1
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		_roundf
  9301 ;; This function uses a non-reentrant model
  9302 ;;
  9303                           
  9304                           	psect	text47
  9305  005A7A                     __ptext47:
  9306                           	callstack 0
  9307  005A7A                     ___flneg:
  9308                           	callstack 25
  9309  005A7A  5001               	movf	___flneg@f1^0,w,c
  9310  005A7C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9311  005A7E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9312  005A80  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9313  005A82  B4D8               	btfsc	status,2,c
  9314  005A84  EF46  F02D         	goto	u4021
  9315  005A88  EF48  F02D         	goto	u4020
  9316  005A8C                     u4021:
  9317  005A8C  EF50  F02D         	goto	l4165
  9318  005A90                     u4020:
  9319  005A90  0E00               	movlw	0
  9320  005A92  1A01               	xorwf	___flneg@f1^0,f,c
  9321  005A94  0E00               	movlw	0
  9322  005A96  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9323  005A98  0E00               	movlw	0
  9324  005A9A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9325  005A9C  0E80               	movlw	128
  9326  005A9E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9327  005AA0                     l4165:
  9328  005AA0  C001  F001         	movff	___flneg@f1,?___flneg
  9329  005AA4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9330  005AA8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9331  005AAC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9332  005AB0  0012               	return		;funcret
  9333  005AB2                     __end_of___flneg:
  9334                           	callstack 0
  9335                           
  9336 ;; *************** function ___flmul *****************
  9337 ;; Defined at:
  9338 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  9339 ;; Parameters:    Size  Location     Type
  9340 ;;  b               4   39[COMRAM] unsigned char 
  9341 ;;  a               4   43[COMRAM] unsigned char 
  9342 ;; Auto vars:     Size  Location     Type
  9343 ;;  prod            4   58[COMRAM] struct .
  9344 ;;  grs             4   52[COMRAM] unsigned long 
  9345 ;;  temp            2   62[COMRAM] struct .
  9346 ;;  bexp            1   57[COMRAM] unsigned char 
  9347 ;;  aexp            1   56[COMRAM] unsigned char 
  9348 ;;  sign            1   51[COMRAM] unsigned char 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  4   39[COMRAM] unsigned char 
  9351 ;; Registers used:
  9352 ;;		wreg, status,2, status,0, prodl, prodh
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9359 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9362 ;;Total ram usage:       25 bytes
  9363 ;; Hardware stack levels used: 1
  9364 ;; Hardware stack levels required when called: 1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_detect_color
  9369 ;;		_distance_measure
  9370 ;;		_roundf
  9371 ;;		_check_color_reading
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text48
  9376  001ED8                     __ptext48:
  9377                           	callstack 0
  9378  001ED8                     ___flmul:
  9379                           	callstack 25
  9380  001ED8  502B               	movf	(___flmul@b+3)^0,w,c
  9381  001EDA  0B80               	andlw	128
  9382  001EDC  6E34               	movwf	___flmul@sign^0,c
  9383  001EDE  502B               	movf	(___flmul@b+3)^0,w,c
  9384  001EE0  242B               	addwf	(___flmul@b+3)^0,w,c
  9385  001EE2  6E3A               	movwf	___flmul@bexp^0,c
  9386  001EE4  AE2A               	btfss	(___flmul@b+2)^0,7,c
  9387  001EE6  EF77  F00F         	goto	u3781
  9388  001EEA  EF79  F00F         	goto	u3780
  9389  001EEE                     u3781:
  9390  001EEE  EF7A  F00F         	goto	l4009
  9391  001EF2                     u3780:
  9392  001EF2  803A               	bsf	___flmul@bexp^0,0,c
  9393  001EF4                     l4009:
  9394  001EF4  503A               	movf	___flmul@bexp^0,w,c
  9395  001EF6  B4D8               	btfsc	status,2,c
  9396  001EF8  EF80  F00F         	goto	u3791
  9397  001EFC  EF82  F00F         	goto	u3790
  9398  001F00                     u3791:
  9399  001F00  EF95  F00F         	goto	l4017
  9400  001F04                     u3790:
  9401  001F04  283A               	incf	___flmul@bexp^0,w,c
  9402  001F06  A4D8               	btfss	status,2,c
  9403  001F08  EF88  F00F         	goto	u3801
  9404  001F0C  EF8A  F00F         	goto	u3800
  9405  001F10                     u3801:
  9406  001F10  EF92  F00F         	goto	l4015
  9407  001F14                     u3800:
  9408  001F14  0E00               	movlw	0
  9409  001F16  6E28               	movwf	___flmul@b^0,c
  9410  001F18  0E00               	movlw	0
  9411  001F1A  6E29               	movwf	(___flmul@b+1)^0,c
  9412  001F1C  0E00               	movlw	0
  9413  001F1E  6E2A               	movwf	(___flmul@b+2)^0,c
  9414  001F20  0E00               	movlw	0
  9415  001F22  6E2B               	movwf	(___flmul@b+3)^0,c
  9416  001F24                     l4015:
  9417  001F24  8E2A               	bsf	(___flmul@b+2)^0,7,c
  9418  001F26  EF9D  F00F         	goto	l4019
  9419  001F2A                     l4017:
  9420  001F2A  0E00               	movlw	0
  9421  001F2C  6E28               	movwf	___flmul@b^0,c
  9422  001F2E  0E00               	movlw	0
  9423  001F30  6E29               	movwf	(___flmul@b+1)^0,c
  9424  001F32  0E00               	movlw	0
  9425  001F34  6E2A               	movwf	(___flmul@b+2)^0,c
  9426  001F36  0E00               	movlw	0
  9427  001F38  6E2B               	movwf	(___flmul@b+3)^0,c
  9428  001F3A                     l4019:
  9429  001F3A  502F               	movf	(___flmul@a+3)^0,w,c
  9430  001F3C  0B80               	andlw	128
  9431  001F3E  1A34               	xorwf	___flmul@sign^0,f,c
  9432  001F40  502F               	movf	(___flmul@a+3)^0,w,c
  9433  001F42  242F               	addwf	(___flmul@a+3)^0,w,c
  9434  001F44  6E39               	movwf	___flmul@aexp^0,c
  9435  001F46  AE2E               	btfss	(___flmul@a+2)^0,7,c
  9436  001F48  EFA8  F00F         	goto	u3811
  9437  001F4C  EFAA  F00F         	goto	u3810
  9438  001F50                     u3811:
  9439  001F50  EFAB  F00F         	goto	l4027
  9440  001F54                     u3810:
  9441  001F54  8039               	bsf	___flmul@aexp^0,0,c
  9442  001F56                     l4027:
  9443  001F56  5039               	movf	___flmul@aexp^0,w,c
  9444  001F58  B4D8               	btfsc	status,2,c
  9445  001F5A  EFB1  F00F         	goto	u3821
  9446  001F5E  EFB3  F00F         	goto	u3820
  9447  001F62                     u3821:
  9448  001F62  EFC6  F00F         	goto	l4035
  9449  001F66                     u3820:
  9450  001F66  2839               	incf	___flmul@aexp^0,w,c
  9451  001F68  A4D8               	btfss	status,2,c
  9452  001F6A  EFB9  F00F         	goto	u3831
  9453  001F6E  EFBB  F00F         	goto	u3830
  9454  001F72                     u3831:
  9455  001F72  EFC3  F00F         	goto	l4033
  9456  001F76                     u3830:
  9457  001F76  0E00               	movlw	0
  9458  001F78  6E2C               	movwf	___flmul@a^0,c
  9459  001F7A  0E00               	movlw	0
  9460  001F7C  6E2D               	movwf	(___flmul@a+1)^0,c
  9461  001F7E  0E00               	movlw	0
  9462  001F80  6E2E               	movwf	(___flmul@a+2)^0,c
  9463  001F82  0E00               	movlw	0
  9464  001F84  6E2F               	movwf	(___flmul@a+3)^0,c
  9465  001F86                     l4033:
  9466  001F86  8E2E               	bsf	(___flmul@a+2)^0,7,c
  9467  001F88  EFCE  F00F         	goto	l1329
  9468  001F8C                     l4035:
  9469  001F8C  0E00               	movlw	0
  9470  001F8E  6E2C               	movwf	___flmul@a^0,c
  9471  001F90  0E00               	movlw	0
  9472  001F92  6E2D               	movwf	(___flmul@a+1)^0,c
  9473  001F94  0E00               	movlw	0
  9474  001F96  6E2E               	movwf	(___flmul@a+2)^0,c
  9475  001F98  0E00               	movlw	0
  9476  001F9A  6E2F               	movwf	(___flmul@a+3)^0,c
  9477  001F9C                     l1329:
  9478  001F9C  5039               	movf	___flmul@aexp^0,w,c
  9479  001F9E  B4D8               	btfsc	status,2,c
  9480  001FA0  EFD4  F00F         	goto	u3841
  9481  001FA4  EFD6  F00F         	goto	u3840
  9482  001FA8                     u3841:
  9483  001FA8  EFDE  F00F         	goto	l4039
  9484  001FAC                     u3840:
  9485  001FAC  503A               	movf	___flmul@bexp^0,w,c
  9486  001FAE  A4D8               	btfss	status,2,c
  9487  001FB0  EFDC  F00F         	goto	u3851
  9488  001FB4  EFDE  F00F         	goto	u3850
  9489  001FB8                     u3851:
  9490  001FB8  EFE8  F00F         	goto	l4043
  9491  001FBC                     u3850:
  9492  001FBC                     l4039:
  9493  001FBC  0E00               	movlw	0
  9494  001FBE  6E28               	movwf	?___flmul^0,c
  9495  001FC0  0E00               	movlw	0
  9496  001FC2  6E29               	movwf	(?___flmul+1)^0,c
  9497  001FC4  0E00               	movlw	0
  9498  001FC6  6E2A               	movwf	(?___flmul+2)^0,c
  9499  001FC8  0E00               	movlw	0
  9500  001FCA  6E2B               	movwf	(?___flmul+3)^0,c
  9501  001FCC  EF80  F011         	goto	l1333
  9502  001FD0                     l4043:
  9503  001FD0  502E               	movf	(___flmul@a+2)^0,w,c
  9504  001FD2  0228               	mulwf	___flmul@b^0,c
  9505  001FD4  CFF3 F03F          	movff	prodl,___flmul@temp
  9506  001FD8  CFF4 F040          	movff	prodh,___flmul@temp+1
  9507  001FDC  503F               	movf	___flmul@temp^0,w,c
  9508  001FDE  6E35               	movwf	___flmul@grs^0,c
  9509  001FE0  6A36               	clrf	(___flmul@grs+1)^0,c
  9510  001FE2  6A37               	clrf	(___flmul@grs+2)^0,c
  9511  001FE4  6A38               	clrf	(___flmul@grs+3)^0,c
  9512  001FE6  5040               	movf	(___flmul@temp+1)^0,w,c
  9513  001FE8  6E3B               	movwf	___flmul@prod^0,c
  9514  001FEA  6A3C               	clrf	(___flmul@prod+1)^0,c
  9515  001FEC  6A3D               	clrf	(___flmul@prod+2)^0,c
  9516  001FEE  6A3E               	clrf	(___flmul@prod+3)^0,c
  9517  001FF0  502D               	movf	(___flmul@a+1)^0,w,c
  9518  001FF2  0229               	mulwf	(___flmul@b+1)^0,c
  9519  001FF4  CFF3 F03F          	movff	prodl,___flmul@temp
  9520  001FF8  CFF4 F040          	movff	prodh,___flmul@temp+1
  9521  001FFC  503F               	movf	___flmul@temp^0,w,c
  9522  001FFE  2635               	addwf	___flmul@grs^0,f,c
  9523  002000  0E00               	movlw	0
  9524  002002  2236               	addwfc	(___flmul@grs+1)^0,f,c
  9525  002004  2237               	addwfc	(___flmul@grs+2)^0,f,c
  9526  002006  2238               	addwfc	(___flmul@grs+3)^0,f,c
  9527  002008  5040               	movf	(___flmul@temp+1)^0,w,c
  9528  00200A  263B               	addwf	___flmul@prod^0,f,c
  9529  00200C  0E00               	movlw	0
  9530  00200E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9531  002010  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9532  002012  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9533  002014  502C               	movf	___flmul@a^0,w,c
  9534  002016  022A               	mulwf	(___flmul@b+2)^0,c
  9535  002018  CFF3 F03F          	movff	prodl,___flmul@temp
  9536  00201C  CFF4 F040          	movff	prodh,___flmul@temp+1
  9537  002020  503F               	movf	___flmul@temp^0,w,c
  9538  002022  2635               	addwf	___flmul@grs^0,f,c
  9539  002024  0E00               	movlw	0
  9540  002026  2236               	addwfc	(___flmul@grs+1)^0,f,c
  9541  002028  2237               	addwfc	(___flmul@grs+2)^0,f,c
  9542  00202A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  9543  00202C  5040               	movf	(___flmul@temp+1)^0,w,c
  9544  00202E  263B               	addwf	___flmul@prod^0,f,c
  9545  002030  0E00               	movlw	0
  9546  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9547  002034  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9548  002036  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9549  002038  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  9550  00203C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  9551  002040  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  9552  002044  6A35               	clrf	___flmul@grs^0,c
  9553  002046  502C               	movf	___flmul@a^0,w,c
  9554  002048  0229               	mulwf	(___flmul@b+1)^0,c
  9555  00204A  CFF3 F03F          	movff	prodl,___flmul@temp
  9556  00204E  CFF4 F040          	movff	prodh,___flmul@temp+1
  9557  002052  503F               	movf	___flmul@temp^0,w,c
  9558  002054  2635               	addwf	___flmul@grs^0,f,c
  9559  002056  5040               	movf	(___flmul@temp+1)^0,w,c
  9560  002058  2236               	addwfc	(___flmul@grs+1)^0,f,c
  9561  00205A  0E00               	movlw	0
  9562  00205C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  9563  00205E  0E00               	movlw	0
  9564  002060  2238               	addwfc	(___flmul@grs+3)^0,f,c
  9565  002062  502D               	movf	(___flmul@a+1)^0,w,c
  9566  002064  0228               	mulwf	___flmul@b^0,c
  9567  002066  CFF3 F03F          	movff	prodl,___flmul@temp
  9568  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
  9569  00206E  503F               	movf	___flmul@temp^0,w,c
  9570  002070  2635               	addwf	___flmul@grs^0,f,c
  9571  002072  5040               	movf	(___flmul@temp+1)^0,w,c
  9572  002074  2236               	addwfc	(___flmul@grs+1)^0,f,c
  9573  002076  0E00               	movlw	0
  9574  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
  9575  00207A  0E00               	movlw	0
  9576  00207C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  9577  00207E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  9578  002082  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  9579  002086  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  9580  00208A  6A35               	clrf	___flmul@grs^0,c
  9581  00208C  502C               	movf	___flmul@a^0,w,c
  9582  00208E  0228               	mulwf	___flmul@b^0,c
  9583  002090  CFF3 F03F          	movff	prodl,___flmul@temp
  9584  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
  9585  002098  503F               	movf	___flmul@temp^0,w,c
  9586  00209A  2635               	addwf	___flmul@grs^0,f,c
  9587  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
  9588  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  9589  0020A0  0E00               	movlw	0
  9590  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  9591  0020A4  0E00               	movlw	0
  9592  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  9593  0020A8  502E               	movf	(___flmul@a+2)^0,w,c
  9594  0020AA  0229               	mulwf	(___flmul@b+1)^0,c
  9595  0020AC  CFF3 F03F          	movff	prodl,___flmul@temp
  9596  0020B0  CFF4 F040          	movff	prodh,___flmul@temp+1
  9597  0020B4  503F               	movf	___flmul@temp^0,w,c
  9598  0020B6  263B               	addwf	___flmul@prod^0,f,c
  9599  0020B8  5040               	movf	(___flmul@temp+1)^0,w,c
  9600  0020BA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9601  0020BC  0E00               	movlw	0
  9602  0020BE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9603  0020C0  0E00               	movlw	0
  9604  0020C2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9605  0020C4  502D               	movf	(___flmul@a+1)^0,w,c
  9606  0020C6  022A               	mulwf	(___flmul@b+2)^0,c
  9607  0020C8  CFF3 F03F          	movff	prodl,___flmul@temp
  9608  0020CC  CFF4 F040          	movff	prodh,___flmul@temp+1
  9609  0020D0  503F               	movf	___flmul@temp^0,w,c
  9610  0020D2  263B               	addwf	___flmul@prod^0,f,c
  9611  0020D4  5040               	movf	(___flmul@temp+1)^0,w,c
  9612  0020D6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9613  0020D8  0E00               	movlw	0
  9614  0020DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9615  0020DC  0E00               	movlw	0
  9616  0020DE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9617  0020E0  502E               	movf	(___flmul@a+2)^0,w,c
  9618  0020E2  022A               	mulwf	(___flmul@b+2)^0,c
  9619  0020E4  CFF3 F03F          	movff	prodl,___flmul@temp
  9620  0020E8  CFF4 F040          	movff	prodh,___flmul@temp+1
  9621  0020EC  503F               	movf	___flmul@temp^0,w,c
  9622  0020EE  6E30               	movwf	??___flmul^0,c
  9623  0020F0  5040               	movf	(___flmul@temp+1)^0,w,c
  9624  0020F2  6E31               	movwf	(??___flmul+1)^0,c
  9625  0020F4  6A32               	clrf	(??___flmul+2)^0,c
  9626  0020F6  6A33               	clrf	(??___flmul+3)^0,c
  9627  0020F8  C032  F033         	movff	??___flmul+2,??___flmul+3
  9628  0020FC  C031  F032         	movff	??___flmul+1,??___flmul+2
  9629  002100  C030  F031         	movff	??___flmul,??___flmul+1
  9630  002104  6A30               	clrf	??___flmul^0,c
  9631  002106  5030               	movf	??___flmul^0,w,c
  9632  002108  263B               	addwf	___flmul@prod^0,f,c
  9633  00210A  5031               	movf	(??___flmul+1)^0,w,c
  9634  00210C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9635  00210E  5032               	movf	(??___flmul+2)^0,w,c
  9636  002110  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9637  002112  5033               	movf	(??___flmul+3)^0,w,c
  9638  002114  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9639  002116  C035  F030         	movff	___flmul@grs,??___flmul
  9640  00211A  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  9641  00211E  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  9642  002122  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  9643  002126  0E19               	movlw	25
  9644  002128  EF9B  F010         	goto	u3860
  9645  00212C                     u3865:
  9646  00212C  90D8               	bcf	status,0,c
  9647  00212E  3233               	rrcf	(??___flmul+3)^0,f,c
  9648  002130  3232               	rrcf	(??___flmul+2)^0,f,c
  9649  002132  3231               	rrcf	(??___flmul+1)^0,f,c
  9650  002134  3230               	rrcf	??___flmul^0,f,c
  9651  002136                     u3860:
  9652  002136  2EE8               	decfsz	wreg,f,c
  9653  002138  EF96  F010         	goto	u3865
  9654  00213C  5030               	movf	??___flmul^0,w,c
  9655  00213E  263B               	addwf	___flmul@prod^0,f,c
  9656  002140  5031               	movf	(??___flmul+1)^0,w,c
  9657  002142  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9658  002144  5032               	movf	(??___flmul+2)^0,w,c
  9659  002146  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9660  002148  5033               	movf	(??___flmul+3)^0,w,c
  9661  00214A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9662  00214C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  9663  002150  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  9664  002154  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  9665  002158  6A35               	clrf	___flmul@grs^0,c
  9666  00215A  5039               	movf	___flmul@aexp^0,w,c
  9667  00215C  C03A  F030         	movff	___flmul@bexp,??___flmul
  9668  002160  6A31               	clrf	(??___flmul+1)^0,c
  9669  002162  2630               	addwf	??___flmul^0,f,c
  9670  002164  0E00               	movlw	0
  9671  002166  2231               	addwfc	(??___flmul+1)^0,f,c
  9672  002168  0E82               	movlw	130
  9673  00216A  2430               	addwf	??___flmul^0,w,c
  9674  00216C  6E3F               	movwf	___flmul@temp^0,c
  9675  00216E  0EFF               	movlw	255
  9676  002170  2031               	addwfc	(??___flmul+1)^0,w,c
  9677  002172  6E40               	movwf	(___flmul@temp+1)^0,c
  9678  002174  EFD1  F010         	goto	l4091
  9679  002178                     l4085:
  9680  002178  90D8               	bcf	status,0,c
  9681  00217A  363B               	rlcf	___flmul@prod^0,f,c
  9682  00217C  363C               	rlcf	(___flmul@prod+1)^0,f,c
  9683  00217E  363D               	rlcf	(___flmul@prod+2)^0,f,c
  9684  002180  363E               	rlcf	(___flmul@prod+3)^0,f,c
  9685  002182  AE38               	btfss	(___flmul@grs+3)^0,7,c
  9686  002184  EFC6  F010         	goto	u3871
  9687  002188  EFC8  F010         	goto	u3870
  9688  00218C                     u3871:
  9689  00218C  EFC9  F010         	goto	l1336
  9690  002190                     u3870:
  9691  002190  803B               	bsf	___flmul@prod^0,0,c
  9692  002192                     l1336:
  9693  002192  90D8               	bcf	status,0,c
  9694  002194  3635               	rlcf	___flmul@grs^0,f,c
  9695  002196  3636               	rlcf	(___flmul@grs+1)^0,f,c
  9696  002198  3637               	rlcf	(___flmul@grs+2)^0,f,c
  9697  00219A  3638               	rlcf	(___flmul@grs+3)^0,f,c
  9698  00219C  063F               	decf	___flmul@temp^0,f,c
  9699  00219E  A0D8               	btfss	status,0,c
  9700  0021A0  0640               	decf	(___flmul@temp+1)^0,f,c
  9701  0021A2                     l4091:
  9702  0021A2  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  9703  0021A4  EFD6  F010         	goto	u3881
  9704  0021A8  EFD8  F010         	goto	u3880
  9705  0021AC                     u3881:
  9706  0021AC  EFBC  F010         	goto	l4085
  9707  0021B0                     u3880:
  9708  0021B0  0E00               	movlw	0
  9709  0021B2  6E39               	movwf	___flmul@aexp^0,c
  9710  0021B4  AE38               	btfss	(___flmul@grs+3)^0,7,c
  9711  0021B6  EFDF  F010         	goto	u3891
  9712  0021BA  EFE1  F010         	goto	u3890
  9713  0021BE                     u3891:
  9714  0021BE  EF05  F011         	goto	l1338
  9715  0021C2                     u3890:
  9716  0021C2  0EFF               	movlw	255
  9717  0021C4  1435               	andwf	___flmul@grs^0,w,c
  9718  0021C6  6E30               	movwf	??___flmul^0,c
  9719  0021C8  0EFF               	movlw	255
  9720  0021CA  1436               	andwf	(___flmul@grs+1)^0,w,c
  9721  0021CC  6E31               	movwf	(??___flmul+1)^0,c
  9722  0021CE  0EFF               	movlw	255
  9723  0021D0  1437               	andwf	(___flmul@grs+2)^0,w,c
  9724  0021D2  6E32               	movwf	(??___flmul+2)^0,c
  9725  0021D4  0E7F               	movlw	127
  9726  0021D6  1438               	andwf	(___flmul@grs+3)^0,w,c
  9727  0021D8  6E33               	movwf	(??___flmul+3)^0,c
  9728  0021DA  5030               	movf	??___flmul^0,w,c
  9729  0021DC  1031               	iorwf	(??___flmul+1)^0,w,c
  9730  0021DE  1032               	iorwf	(??___flmul+2)^0,w,c
  9731  0021E0  1033               	iorwf	(??___flmul+3)^0,w,c
  9732  0021E2  B4D8               	btfsc	status,2,c
  9733  0021E4  EFF6  F010         	goto	u3901
  9734  0021E8  EFF8  F010         	goto	u3900
  9735  0021EC                     u3901:
  9736  0021EC  EFFC  F010         	goto	l1339
  9737  0021F0                     u3900:
  9738  0021F0                     l4099:
  9739  0021F0  0E01               	movlw	1
  9740  0021F2  6E39               	movwf	___flmul@aexp^0,c
  9741  0021F4  EF05  F011         	goto	l1338
  9742  0021F8                     l1339:
  9743  0021F8  A03B               	btfss	___flmul@prod^0,0,c
  9744  0021FA  EF01  F011         	goto	u3911
  9745  0021FE  EF03  F011         	goto	u3910
  9746  002202                     u3911:
  9747  002202  EF05  F011         	goto	l1338
  9748  002206                     u3910:
  9749  002206  EFF8  F010         	goto	l4099
  9750  00220A                     l1338:
  9751  00220A  5039               	movf	___flmul@aexp^0,w,c
  9752  00220C  B4D8               	btfsc	status,2,c
  9753  00220E  EF0B  F011         	goto	u3921
  9754  002212  EF0D  F011         	goto	u3920
  9755  002216                     u3921:
  9756  002216  EF31  F011         	goto	l4111
  9757  00221A                     u3920:
  9758  00221A  0E01               	movlw	1
  9759  00221C  263B               	addwf	___flmul@prod^0,f,c
  9760  00221E  0E00               	movlw	0
  9761  002220  223C               	addwfc	(___flmul@prod+1)^0,f,c
  9762  002222  223D               	addwfc	(___flmul@prod+2)^0,f,c
  9763  002224  223E               	addwfc	(___flmul@prod+3)^0,f,c
  9764  002226  A03E               	btfss	(___flmul@prod+3)^0,0,c
  9765  002228  EF18  F011         	goto	u3931
  9766  00222C  EF1A  F011         	goto	u3930
  9767  002230                     u3931:
  9768  002230  EF31  F011         	goto	l4111
  9769  002234                     u3930:
  9770  002234  C03B  F030         	movff	___flmul@prod,??___flmul
  9771  002238  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  9772  00223C  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  9773  002240  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  9774  002244  3433               	rlcf	(??___flmul+3)^0,w,c
  9775  002246  3233               	rrcf	(??___flmul+3)^0,f,c
  9776  002248  3232               	rrcf	(??___flmul+2)^0,f,c
  9777  00224A  3231               	rrcf	(??___flmul+1)^0,f,c
  9778  00224C  3230               	rrcf	??___flmul^0,f,c
  9779  00224E  C030  F03B         	movff	??___flmul,___flmul@prod
  9780  002252  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  9781  002256  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  9782  00225A  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  9783  00225E  4A3F               	infsnz	___flmul@temp^0,f,c
  9784  002260  2A40               	incf	(___flmul@temp+1)^0,f,c
  9785  002262                     l4111:
  9786  002262  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  9787  002264  EF3C  F011         	goto	u3941
  9788  002268  5040               	movf	(___flmul@temp+1)^0,w,c
  9789  00226A  E108               	bnz	u3940
  9790  00226C  283F               	incf	___flmul@temp^0,w,c
  9791  00226E  A0D8               	btfss	status,0,c
  9792  002270  EF3C  F011         	goto	u3941
  9793  002274  EF3E  F011         	goto	u3940
  9794  002278                     u3941:
  9795  002278  EF48  F011         	goto	l4115
  9796  00227C                     u3940:
  9797  00227C  0E00               	movlw	0
  9798  00227E  6E3B               	movwf	___flmul@prod^0,c
  9799  002280  0E00               	movlw	0
  9800  002282  6E3C               	movwf	(___flmul@prod+1)^0,c
  9801  002284  0E80               	movlw	128
  9802  002286  6E3D               	movwf	(___flmul@prod+2)^0,c
  9803  002288  0E7F               	movlw	127
  9804  00228A  6E3E               	movwf	(___flmul@prod+3)^0,c
  9805  00228C  EF76  F011         	goto	l4127
  9806  002290                     l4115:
  9807  002290  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  9808  002292  EF55  F011         	goto	u3950
  9809  002296  5040               	movf	(___flmul@temp+1)^0,w,c
  9810  002298  E106               	bnz	u3951
  9811  00229A  043F               	decf	___flmul@temp^0,w,c
  9812  00229C  B0D8               	btfsc	status,0,c
  9813  00229E  EF53  F011         	goto	u3951
  9814  0022A2  EF55  F011         	goto	u3950
  9815  0022A6                     u3951:
  9816  0022A6  EF61  F011         	goto	l1346
  9817  0022AA                     u3950:
  9818  0022AA  0E00               	movlw	0
  9819  0022AC  6E3B               	movwf	___flmul@prod^0,c
  9820  0022AE  0E00               	movlw	0
  9821  0022B0  6E3C               	movwf	(___flmul@prod+1)^0,c
  9822  0022B2  0E00               	movlw	0
  9823  0022B4  6E3D               	movwf	(___flmul@prod+2)^0,c
  9824  0022B6  0E00               	movlw	0
  9825  0022B8  6E3E               	movwf	(___flmul@prod+3)^0,c
  9826  0022BA  0E00               	movlw	0
  9827  0022BC  6E34               	movwf	___flmul@sign^0,c
  9828  0022BE  EF76  F011         	goto	l4127
  9829  0022C2                     l1346:
  9830  0022C2  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  9831  0022C6  0EFF               	movlw	255
  9832  0022C8  163B               	andwf	___flmul@prod^0,f,c
  9833  0022CA  0EFF               	movlw	255
  9834  0022CC  163C               	andwf	(___flmul@prod+1)^0,f,c
  9835  0022CE  0E7F               	movlw	127
  9836  0022D0  163D               	andwf	(___flmul@prod+2)^0,f,c
  9837  0022D2  0E00               	movlw	0
  9838  0022D4  163E               	andwf	(___flmul@prod+3)^0,f,c
  9839  0022D6  A03A               	btfss	___flmul@bexp^0,0,c
  9840  0022D8  EF70  F011         	goto	u3961
  9841  0022DC  EF72  F011         	goto	u3960
  9842  0022E0                     u3961:
  9843  0022E0  EF73  F011         	goto	l4125
  9844  0022E4                     u3960:
  9845  0022E4  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  9846  0022E6                     l4125:
  9847  0022E6  90D8               	bcf	status,0,c
  9848  0022E8  303A               	rrcf	___flmul@bexp^0,w,c
  9849  0022EA  6E3E               	movwf	(___flmul@prod+3)^0,c
  9850  0022EC                     l4127:
  9851  0022EC  5034               	movf	___flmul@sign^0,w,c
  9852  0022EE  123E               	iorwf	(___flmul@prod+3)^0,f,c
  9853  0022F0  C03B  F028         	movff	___flmul@prod,?___flmul
  9854  0022F4  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  9855  0022F8  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  9856  0022FC  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  9857  002300                     l1333:
  9858  002300  0012               	return		;funcret
  9859  002302                     __end_of___flmul:
  9860                           	callstack 0
  9861                           
  9862 ;; *************** function ___flge *****************
  9863 ;; Defined at:
  9864 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;  ff1             4    0[COMRAM] unsigned char 
  9867 ;;  ff2             4    4[COMRAM] unsigned char 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;		None
  9870 ;; Return value:  Size  Location     Type
  9871 ;;		None               void
  9872 ;; Registers used:
  9873 ;;		wreg, status,2, status,0
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9879 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9881 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9882 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9883 ;;Total ram usage:       12 bytes
  9884 ;; Hardware stack levels used: 1
  9885 ;; Hardware stack levels required when called: 1
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_roundf
  9890 ;; This function uses a non-reentrant model
  9891 ;;
  9892                           
  9893                           	psect	text49
  9894  004C8A                     __ptext49:
  9895                           	callstack 0
  9896  004C8A                     ___flge:
  9897                           	callstack 25
  9898  004C8A  0E00               	movlw	0
  9899  004C8C  1401               	andwf	___flge@ff1^0,w,c
  9900  004C8E  6E09               	movwf	??___flge^0,c
  9901  004C90  0E00               	movlw	0
  9902  004C92  1402               	andwf	(___flge@ff1+1)^0,w,c
  9903  004C94  6E0A               	movwf	(??___flge+1)^0,c
  9904  004C96  0E80               	movlw	128
  9905  004C98  1403               	andwf	(___flge@ff1+2)^0,w,c
  9906  004C9A  6E0B               	movwf	(??___flge+2)^0,c
  9907  004C9C  0E7F               	movlw	127
  9908  004C9E  1404               	andwf	(___flge@ff1+3)^0,w,c
  9909  004CA0  6E0C               	movwf	(??___flge+3)^0,c
  9910  004CA2  5009               	movf	??___flge^0,w,c
  9911  004CA4  100A               	iorwf	(??___flge+1)^0,w,c
  9912  004CA6  100B               	iorwf	(??___flge+2)^0,w,c
  9913  004CA8  100C               	iorwf	(??___flge+3)^0,w,c
  9914  004CAA  A4D8               	btfss	status,2,c
  9915  004CAC  EF5A  F026         	goto	u3971
  9916  004CB0  EF5C  F026         	goto	u3970
  9917  004CB4                     u3971:
  9918  004CB4  EF64  F026         	goto	l4143
  9919  004CB8                     u3970:
  9920  004CB8  0E00               	movlw	0
  9921  004CBA  6E01               	movwf	___flge@ff1^0,c
  9922  004CBC  0E00               	movlw	0
  9923  004CBE  6E02               	movwf	(___flge@ff1+1)^0,c
  9924  004CC0  0E00               	movlw	0
  9925  004CC2  6E03               	movwf	(___flge@ff1+2)^0,c
  9926  004CC4  0E00               	movlw	0
  9927  004CC6  6E04               	movwf	(___flge@ff1+3)^0,c
  9928  004CC8                     l4143:
  9929  004CC8  0E00               	movlw	0
  9930  004CCA  1405               	andwf	___flge@ff2^0,w,c
  9931  004CCC  6E09               	movwf	??___flge^0,c
  9932  004CCE  0E00               	movlw	0
  9933  004CD0  1406               	andwf	(___flge@ff2+1)^0,w,c
  9934  004CD2  6E0A               	movwf	(??___flge+1)^0,c
  9935  004CD4  0E80               	movlw	128
  9936  004CD6  1407               	andwf	(___flge@ff2+2)^0,w,c
  9937  004CD8  6E0B               	movwf	(??___flge+2)^0,c
  9938  004CDA  0E7F               	movlw	127
  9939  004CDC  1408               	andwf	(___flge@ff2+3)^0,w,c
  9940  004CDE  6E0C               	movwf	(??___flge+3)^0,c
  9941  004CE0  5009               	movf	??___flge^0,w,c
  9942  004CE2  100A               	iorwf	(??___flge+1)^0,w,c
  9943  004CE4  100B               	iorwf	(??___flge+2)^0,w,c
  9944  004CE6  100C               	iorwf	(??___flge+3)^0,w,c
  9945  004CE8  A4D8               	btfss	status,2,c
  9946  004CEA  EF79  F026         	goto	u3981
  9947  004CEE  EF7B  F026         	goto	u3980
  9948  004CF2                     u3981:
  9949  004CF2  EF83  F026         	goto	l4147
  9950  004CF6                     u3980:
  9951  004CF6  0E00               	movlw	0
  9952  004CF8  6E05               	movwf	___flge@ff2^0,c
  9953  004CFA  0E00               	movlw	0
  9954  004CFC  6E06               	movwf	(___flge@ff2+1)^0,c
  9955  004CFE  0E00               	movlw	0
  9956  004D00  6E07               	movwf	(___flge@ff2+2)^0,c
  9957  004D02  0E00               	movlw	0
  9958  004D04  6E08               	movwf	(___flge@ff2+3)^0,c
  9959  004D06                     l4147:
  9960  004D06  AE04               	btfss	(___flge@ff1+3)^0,7,c
  9961  004D08  EF88  F026         	goto	u3991
  9962  004D0C  EF8A  F026         	goto	u3990
  9963  004D10                     u3991:
  9964  004D10  EF93  F026         	goto	l4151
  9965  004D14                     u3990:
  9966  004D14  6C01               	negf	___flge@ff1^0,c
  9967  004D16  1E02               	comf	(___flge@ff1+1)^0,f,c
  9968  004D18  B0D8               	btfsc	status,0,c
  9969  004D1A  2A02               	incf	(___flge@ff1+1)^0,f,c
  9970  004D1C  1E03               	comf	(___flge@ff1+2)^0,f,c
  9971  004D1E  B0D8               	btfsc	status,0,c
  9972  004D20  2A03               	incf	(___flge@ff1+2)^0,f,c
  9973  004D22  0E80               	movlw	128
  9974  004D24  5604               	subfwb	(___flge@ff1+3)^0,f,c
  9975  004D26                     l4151:
  9976  004D26  AE08               	btfss	(___flge@ff2+3)^0,7,c
  9977  004D28  EF98  F026         	goto	u4001
  9978  004D2C  EF9A  F026         	goto	u4000
  9979  004D30                     u4001:
  9980  004D30  EFA3  F026         	goto	l980
  9981  004D34                     u4000:
  9982  004D34  6C05               	negf	___flge@ff2^0,c
  9983  004D36  1E06               	comf	(___flge@ff2+1)^0,f,c
  9984  004D38  B0D8               	btfsc	status,0,c
  9985  004D3A  2A06               	incf	(___flge@ff2+1)^0,f,c
  9986  004D3C  1E07               	comf	(___flge@ff2+2)^0,f,c
  9987  004D3E  B0D8               	btfsc	status,0,c
  9988  004D40  2A07               	incf	(___flge@ff2+2)^0,f,c
  9989  004D42  0E80               	movlw	128
  9990  004D44  5608               	subfwb	(___flge@ff2+3)^0,f,c
  9991  004D46                     l980:
  9992  004D46  0E00               	movlw	0
  9993  004D48  1A01               	xorwf	___flge@ff1^0,f,c
  9994  004D4A  0E00               	movlw	0
  9995  004D4C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  9996  004D4E  0E00               	movlw	0
  9997  004D50  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  9998  004D52  0E80               	movlw	128
  9999  004D54  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 10000  004D56  0E00               	movlw	0
 10001  004D58  1A05               	xorwf	___flge@ff2^0,f,c
 10002  004D5A  0E00               	movlw	0
 10003  004D5C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 10004  004D5E  0E00               	movlw	0
 10005  004D60  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 10006  004D62  0E80               	movlw	128
 10007  004D64  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 10008  004D66  5005               	movf	___flge@ff2^0,w,c
 10009  004D68  5C01               	subwf	___flge@ff1^0,w,c
 10010  004D6A  5006               	movf	(___flge@ff2+1)^0,w,c
 10011  004D6C  5802               	subwfb	(___flge@ff1+1)^0,w,c
 10012  004D6E  5007               	movf	(___flge@ff2+2)^0,w,c
 10013  004D70  5803               	subwfb	(___flge@ff1+2)^0,w,c
 10014  004D72  5008               	movf	(___flge@ff2+3)^0,w,c
 10015  004D74  5804               	subwfb	(___flge@ff1+3)^0,w,c
 10016  004D76  B0D8               	btfsc	status,0,c
 10017  004D78  EFC0  F026         	goto	u4011
 10018  004D7C  EFC2  F026         	goto	u4010
 10019  004D80                     u4011:
 10020  004D80  EFC5  F026         	goto	l4157
 10021  004D84                     u4010:
 10022  004D84  90D8               	bcf	status,0,c
 10023  004D86  EFC6  F026         	goto	l985
 10024  004D8A                     l4157:
 10025  004D8A  80D8               	bsf	status,0,c
 10026  004D8C                     l985:
 10027  004D8C  0012               	return		;funcret
 10028  004D8E                     __end_of___flge:
 10029                           	callstack 0
 10030                           
 10031 ;; *************** function ___fltol *****************
 10032 ;; Defined at:
 10033 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  f1              4   90[COMRAM] unsigned char 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  exp1            1    5[BANK0 ] unsigned char 
 10038 ;;  sign1           1    4[BANK0 ] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  4   90[COMRAM] long 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10051 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10052 ;;Total ram usage:       10 bytes
 10053 ;; Hardware stack levels used: 1
 10054 ;; Hardware stack levels required when called: 1
 10055 ;; This function calls:
 10056 ;;		Nothing
 10057 ;; This function is called by:
 10058 ;;		_lroundf
 10059 ;; This function uses a non-reentrant model
 10060 ;;
 10061                           
 10062                           	psect	text50
 10063  004B82                     __ptext50:
 10064                           	callstack 0
 10065  004B82                     ___fltol:
 10066                           	callstack 26
 10067  004B82  345D               	rlcf	(___fltol@f1+2)^0,w,c
 10068  004B84  345E               	rlcf	(___fltol@f1+3)^0,w,c
 10069  004B86  0100               	movlb	0	; () banked
 10070  004B88  6FA3               	movwf	___fltol@exp1& (0+255),b
 10071  004B8A  51A3               	movf	___fltol@exp1& (0+255),w,b
 10072  004B8C  A4D8               	btfss	status,2,c
 10073  004B8E  EFCB  F025         	goto	u4181
 10074  004B92  EFCD  F025         	goto	u4180
 10075  004B96                     u4181:
 10076  004B96  EFD7  F025         	goto	l4281
 10077  004B9A                     u4180:
 10078  004B9A                     l4277:
 10079                           
 10080                           ; BSR set to: 0
 10081  004B9A  0E00               	movlw	0
 10082  004B9C  6E5B               	movwf	?___fltol^0,c
 10083  004B9E  0E00               	movlw	0
 10084  004BA0  6E5C               	movwf	(?___fltol+1)^0,c
 10085  004BA2  0E00               	movlw	0
 10086  004BA4  6E5D               	movwf	(?___fltol+2)^0,c
 10087  004BA6  0E00               	movlw	0
 10088  004BA8  6E5E               	movwf	(?___fltol+3)^0,c
 10089  004BAA  EF44  F026         	goto	l1012
 10090  004BAE                     l4281:
 10091                           
 10092                           ; BSR set to: 0
 10093  004BAE  C05B  F09E         	movff	___fltol@f1,??___fltol
 10094  004BB2  C05C  F09F         	movff	___fltol@f1+1,??___fltol+1
 10095  004BB6  C05D  F0A0         	movff	___fltol@f1+2,??___fltol+2
 10096  004BBA  C05E  F0A1         	movff	___fltol@f1+3,??___fltol+3
 10097  004BBE  0E20               	movlw	32
 10098  004BC0  EFE7  F025         	goto	u4190
 10099  004BC4                     u4195:
 10100  004BC4  90D8               	bcf	status,0,c
 10101  004BC6  33A1               	rrcf	(??___fltol+3)& (0+255),f,b
 10102  004BC8  33A0               	rrcf	(??___fltol+2)& (0+255),f,b
 10103  004BCA  339F               	rrcf	(??___fltol+1)& (0+255),f,b
 10104  004BCC  339E               	rrcf	??___fltol& (0+255),f,b
 10105  004BCE                     u4190:
 10106  004BCE  2EE8               	decfsz	wreg,f,c
 10107  004BD0  EFE2  F025         	goto	u4195
 10108  004BD4  519E               	movf	??___fltol& (0+255),w,b
 10109  004BD6  6FA2               	movwf	___fltol@sign1& (0+255),b
 10110  004BD8                     
 10111                           ; BSR set to: 0
 10112  004BD8  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 10113  004BDA                     
 10114                           ; BSR set to: 0
 10115  004BDA  0EFF               	movlw	255
 10116  004BDC  165B               	andwf	___fltol@f1^0,f,c
 10117  004BDE  0EFF               	movlw	255
 10118  004BE0  165C               	andwf	(___fltol@f1+1)^0,f,c
 10119  004BE2  0EFF               	movlw	255
 10120  004BE4  165D               	andwf	(___fltol@f1+2)^0,f,c
 10121  004BE6  0E00               	movlw	0
 10122  004BE8  165E               	andwf	(___fltol@f1+3)^0,f,c
 10123  004BEA                     
 10124                           ; BSR set to: 0
 10125  004BEA  0E96               	movlw	150
 10126  004BEC  5FA3               	subwf	___fltol@exp1& (0+255),f,b
 10127  004BEE                     
 10128                           ; BSR set to: 0
 10129  004BEE  BFA3               	btfsc	___fltol@exp1& (0+255),7,b
 10130  004BF0  EFFE  F025         	goto	u4200
 10131  004BF4  EFFC  F025         	goto	u4201
 10132  004BF8                     u4201:
 10133  004BF8  EF14  F026         	goto	l4301
 10134  004BFC                     u4200:
 10135  004BFC                     
 10136                           ; BSR set to: 0
 10137  004BFC  51A3               	movf	___fltol@exp1& (0+255),w,b
 10138  004BFE  0A80               	xorlw	128
 10139  004C00  0F97               	addlw	151
 10140  004C02  B0D8               	btfsc	status,0,c
 10141  004C04  EF06  F026         	goto	u4211
 10142  004C08  EF08  F026         	goto	u4210
 10143  004C0C                     u4211:
 10144  004C0C  EF0A  F026         	goto	l4297
 10145  004C10                     u4210:
 10146  004C10  EFCD  F025         	goto	l4277
 10147  004C14                     l4297:
 10148                           
 10149                           ; BSR set to: 0
 10150  004C14  90D8               	bcf	status,0,c
 10151  004C16  325E               	rrcf	(___fltol@f1+3)^0,f,c
 10152  004C18  325D               	rrcf	(___fltol@f1+2)^0,f,c
 10153  004C1A  325C               	rrcf	(___fltol@f1+1)^0,f,c
 10154  004C1C  325B               	rrcf	___fltol@f1^0,f,c
 10155  004C1E                     
 10156                           ; BSR set to: 0
 10157  004C1E  3FA3               	incfsz	___fltol@exp1& (0+255),f,b
 10158  004C20  EF0A  F026         	goto	l4297
 10159  004C24  EF2C  F026         	goto	l4311
 10160  004C28                     l4301:
 10161                           
 10162                           ; BSR set to: 0
 10163  004C28  0E1F               	movlw	31
 10164  004C2A  65A3               	cpfsgt	___fltol@exp1& (0+255),b
 10165  004C2C  EF1A  F026         	goto	u4221
 10166  004C30  EF1C  F026         	goto	u4220
 10167  004C34                     u4221:
 10168  004C34  EF24  F026         	goto	l4309
 10169  004C38                     u4220:
 10170  004C38  EFCD  F025         	goto	l4277
 10171  004C3C                     l4307:
 10172                           
 10173                           ; BSR set to: 0
 10174  004C3C  90D8               	bcf	status,0,c
 10175  004C3E  365B               	rlcf	___fltol@f1^0,f,c
 10176  004C40  365C               	rlcf	(___fltol@f1+1)^0,f,c
 10177  004C42  365D               	rlcf	(___fltol@f1+2)^0,f,c
 10178  004C44  365E               	rlcf	(___fltol@f1+3)^0,f,c
 10179  004C46  07A3               	decf	___fltol@exp1& (0+255),f,b
 10180  004C48                     l4309:
 10181                           
 10182                           ; BSR set to: 0
 10183  004C48  51A3               	movf	___fltol@exp1& (0+255),w,b
 10184  004C4A  A4D8               	btfss	status,2,c
 10185  004C4C  EF2A  F026         	goto	u4231
 10186  004C50  EF2C  F026         	goto	u4230
 10187  004C54                     u4231:
 10188  004C54  EF1E  F026         	goto	l4307
 10189  004C58                     u4230:
 10190  004C58                     l4311:
 10191                           
 10192                           ; BSR set to: 0
 10193  004C58  51A2               	movf	___fltol@sign1& (0+255),w,b
 10194  004C5A  B4D8               	btfsc	status,2,c
 10195  004C5C  EF32  F026         	goto	u4241
 10196  004C60  EF34  F026         	goto	u4240
 10197  004C64                     u4241:
 10198  004C64  EF3C  F026         	goto	l4315
 10199  004C68                     u4240:
 10200  004C68                     
 10201                           ; BSR set to: 0
 10202  004C68  1E5E               	comf	(___fltol@f1+3)^0,f,c
 10203  004C6A  1E5D               	comf	(___fltol@f1+2)^0,f,c
 10204  004C6C  1E5C               	comf	(___fltol@f1+1)^0,f,c
 10205  004C6E  6C5B               	negf	___fltol@f1^0,c
 10206  004C70  0E00               	movlw	0
 10207  004C72  225C               	addwfc	(___fltol@f1+1)^0,f,c
 10208  004C74  225D               	addwfc	(___fltol@f1+2)^0,f,c
 10209  004C76  225E               	addwfc	(___fltol@f1+3)^0,f,c
 10210  004C78                     l4315:
 10211                           
 10212                           ; BSR set to: 0
 10213  004C78  C05B  F05B         	movff	___fltol@f1,?___fltol
 10214  004C7C  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 10215  004C80  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 10216  004C84  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 10217  004C88                     l1012:
 10218                           
 10219                           ; BSR set to: 0
 10220  004C88  0012               	return		;funcret
 10221  004C8A                     __end_of___fltol:
 10222                           	callstack 0
 10223                           
 10224 ;; *************** function _color_read_Clear *****************
 10225 ;; Defined at:
 10226 ;;		line 133 in file "color.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;		None
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;  tmp             2    9[COMRAM] unsigned int 
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  2    4[COMRAM] unsigned int 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0, cstack
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10240 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10242 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;Total ram usage:        7 bytes
 10245 ;; Hardware stack levels used: 1
 10246 ;; Hardware stack levels required when called: 3
 10247 ;; This function calls:
 10248 ;;		_I2C_2_Master_Read
 10249 ;;		_I2C_2_Master_RepStart
 10250 ;;		_I2C_2_Master_Start
 10251 ;;		_I2C_2_Master_Stop
 10252 ;;		_I2C_2_Master_Write
 10253 ;; This function is called by:
 10254 ;;		_read_color
 10255 ;;		_calibrate_white
 10256 ;;		_amb_light_measure
 10257 ;;		_distance_measure
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           	psect	text51
 10262  0057A2                     __ptext51:
 10263                           	callstack 0
 10264  0057A2                     _color_read_Clear:
 10265                           	callstack 24
 10266  0057A2                     
 10267                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
 10268  0057A2  EC98  F02E         	call	_I2C_2_Master_Start	;wreg free
 10269                           
 10270                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
 10271  0057A6  0E52               	movlw	82
 10272  0057A8  EC87  F02E         	call	_I2C_2_Master_Write
 10273                           
 10274                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
 10275  0057AC  0EB4               	movlw	180
 10276  0057AE  EC87  F02E         	call	_I2C_2_Master_Write
 10277                           
 10278                           ;color.c: 139:  I2C_2_Master_RepStart();
 10279  0057B2  EC9D  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 10280                           
 10281                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
 10282  0057B6  0E53               	movlw	83
 10283  0057B8  EC87  F02E         	call	_I2C_2_Master_Write
 10284                           
 10285                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
 10286  0057BC  0E01               	movlw	1
 10287  0057BE  ECC2  F02C         	call	_I2C_2_Master_Read
 10288  0057C2  6E07               	movwf	??_color_read_Clear^0,c
 10289  0057C4  5007               	movf	??_color_read_Clear^0,w,c
 10290  0057C6  6E0A               	movwf	color_read_Clear@tmp^0,c
 10291  0057C8  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 10292                           
 10293                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10294  0057CA  0E00               	movlw	0
 10295  0057CC  ECC2  F02C         	call	_I2C_2_Master_Read
 10296  0057D0  6E07               	movwf	??_color_read_Clear^0,c
 10297  0057D2  5007               	movf	??_color_read_Clear^0,w,c
 10298  0057D4  6E09               	movwf	(??_color_read_Clear+2)^0,c
 10299  0057D6  6A08               	clrf	(??_color_read_Clear+1)^0,c
 10300  0057D8  500A               	movf	color_read_Clear@tmp^0,w,c
 10301  0057DA  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 10302  0057DC  6E0A               	movwf	color_read_Clear@tmp^0,c
 10303  0057DE  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 10304  0057E0  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 10305  0057E2  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 10306                           
 10307                           ;color.c: 143:  I2C_2_Master_Stop();
 10308  0057E4  EC93  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10309  0057E8                     
 10310                           ;color.c: 144:  return tmp;
 10311  0057E8  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 10312  0057EC  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 10313  0057F0  0012               	return		;funcret
 10314  0057F2                     __end_of_color_read_Clear:
 10315                           	callstack 0
 10316                           
 10317 ;; *************** function _I2C_2_Master_Write *****************
 10318 ;; Defined at:
 10319 ;;		line 45 in file "i2c.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  data_byte       1    wreg     unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  data_byte       1    1[COMRAM] unsigned char 
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2, status,0, cstack
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10337 ;;Total ram usage:        1 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 2
 10340 ;; This function calls:
 10341 ;;		_I2C_2_Master_Idle
 10342 ;; This function is called by:
 10343 ;;		_color_writetoaddr
 10344 ;;		_color_read_Red
 10345 ;;		_color_read_Blue
 10346 ;;		_color_read_Green
 10347 ;;		_color_read_Clear
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text52
 10352  005D0E                     __ptext52:
 10353                           	callstack 0
 10354  005D0E                     _I2C_2_Master_Write:
 10355                           	callstack 24
 10356                           
 10357                           ;incstack = 0
 10358                           ;I2C_2_Master_Write@data_byte stored from wreg
 10359  005D0E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10360  005D10                     
 10361                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10362  005D10  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10363  005D14                     
 10364                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10365  005D14  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10366  005D18  0012               	return		;funcret
 10367  005D1A                     __end_of_I2C_2_Master_Write:
 10368                           	callstack 0
 10369                           
 10370 ;; *************** function _I2C_2_Master_Stop *****************
 10371 ;; Defined at:
 10372 ;;		line 39 in file "i2c.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;		None
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2, status,0, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10390 ;;Total ram usage:        0 bytes
 10391 ;; Hardware stack levels used: 1
 10392 ;; Hardware stack levels required when called: 2
 10393 ;; This function calls:
 10394 ;;		_I2C_2_Master_Idle
 10395 ;; This function is called by:
 10396 ;;		_color_writetoaddr
 10397 ;;		_color_read_Red
 10398 ;;		_color_read_Blue
 10399 ;;		_color_read_Green
 10400 ;;		_color_read_Clear
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           	psect	text53
 10405  005D26                     __ptext53:
 10406                           	callstack 0
 10407  005D26                     _I2C_2_Master_Stop:
 10408                           	callstack 24
 10409  005D26                     
 10410                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10411  005D26  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10412  005D2A                     
 10413                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10414  005D2A  010E               	movlb	14	; () banked
 10415  005D2C  85DA               	bsf	218,2,b	;volatile
 10416  005D2E                     
 10417                           ; BSR set to: 14
 10418  005D2E  0012               	return		;funcret
 10419  005D30                     __end_of_I2C_2_Master_Stop:
 10420                           	callstack 0
 10421                           
 10422 ;; *************** function _I2C_2_Master_Start *****************
 10423 ;; Defined at:
 10424 ;;		line 27 in file "i2c.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used: 1
 10444 ;; Hardware stack levels required when called: 2
 10445 ;; This function calls:
 10446 ;;		_I2C_2_Master_Idle
 10447 ;; This function is called by:
 10448 ;;		_color_writetoaddr
 10449 ;;		_color_read_Red
 10450 ;;		_color_read_Blue
 10451 ;;		_color_read_Green
 10452 ;;		_color_read_Clear
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text54
 10457  005D30                     __ptext54:
 10458                           	callstack 0
 10459  005D30                     _I2C_2_Master_Start:
 10460                           	callstack 24
 10461  005D30                     
 10462                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10463  005D30  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10464  005D34                     
 10465                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10466  005D34  010E               	movlb	14	; () banked
 10467  005D36  81DA               	bsf	218,0,b	;volatile
 10468  005D38                     
 10469                           ; BSR set to: 14
 10470  005D38  0012               	return		;funcret
 10471  005D3A                     __end_of_I2C_2_Master_Start:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _I2C_2_Master_RepStart *****************
 10475 ;; Defined at:
 10476 ;;		line 33 in file "i2c.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;		None
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;		None
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg, status,2, status,0, cstack
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10494 ;;Total ram usage:        0 bytes
 10495 ;; Hardware stack levels used: 1
 10496 ;; Hardware stack levels required when called: 2
 10497 ;; This function calls:
 10498 ;;		_I2C_2_Master_Idle
 10499 ;; This function is called by:
 10500 ;;		_color_read_Red
 10501 ;;		_color_read_Blue
 10502 ;;		_color_read_Green
 10503 ;;		_color_read_Clear
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text55
 10508  005D3A                     __ptext55:
 10509                           	callstack 0
 10510  005D3A                     _I2C_2_Master_RepStart:
 10511                           	callstack 24
 10512  005D3A                     
 10513                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10514  005D3A  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10515  005D3E                     
 10516                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10517  005D3E  010E               	movlb	14	; () banked
 10518  005D40  83DA               	bsf	218,1,b	;volatile
 10519  005D42                     
 10520                           ; BSR set to: 14
 10521  005D42  0012               	return		;funcret
 10522  005D44                     __end_of_I2C_2_Master_RepStart:
 10523                           	callstack 0
 10524                           
 10525 ;; *************** function _I2C_2_Master_Read *****************
 10526 ;; Defined at:
 10527 ;;		line 51 in file "i2c.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;  ack             1    wreg     unsigned char 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  ack             1    2[COMRAM] unsigned char 
 10532 ;;  tmp             1    3[COMRAM] unsigned char 
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      unsigned char 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2, status,0, cstack
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10544 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10545 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10546 ;;Total ram usage:        3 bytes
 10547 ;; Hardware stack levels used: 1
 10548 ;; Hardware stack levels required when called: 2
 10549 ;; This function calls:
 10550 ;;		_I2C_2_Master_Idle
 10551 ;; This function is called by:
 10552 ;;		_color_read_Red
 10553 ;;		_color_read_Blue
 10554 ;;		_color_read_Green
 10555 ;;		_color_read_Clear
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text56
 10560  005984                     __ptext56:
 10561                           	callstack 0
 10562  005984                     _I2C_2_Master_Read:
 10563                           	callstack 24
 10564                           
 10565                           ; BSR set to: 14
 10566                           ;incstack = 0
 10567                           ;I2C_2_Master_Read@ack stored from wreg
 10568  005984  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 10569  005986                     
 10570                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10571  005986  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10572  00598A                     
 10573                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10574  00598A  010E               	movlb	14	; () banked
 10575  00598C  87DA               	bsf	218,3,b	;volatile
 10576                           
 10577                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10578  00598E  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10579  005992                     
 10580                           ;i2c.c: 57:   tmp = SSP2BUF;
 10581  005992  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10582                           
 10583                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10584  005996  ECBB  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10585  00599A                     
 10586                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10587  00599A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 10588  00599C  B4D8               	btfsc	status,2,c
 10589  00599E  EFD3  F02C         	goto	u3591
 10590  0059A2  EFD7  F02C         	goto	u3590
 10591  0059A6                     u3591:
 10592  0059A6  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10593  0059A8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 10594  0059AA  EFD8  F02C         	goto	u3608
 10595  0059AE                     u3590:
 10596  0059AE  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10597  0059B0                     u3608:
 10598  0059B0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 10599  0059B2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 10600  0059B4  010E               	movlb	14	; () banked
 10601  0059B6  51DA               	movf	218,w,b	;volatile
 10602  0059B8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10603  0059BA  0BDF               	andlw	-33
 10604  0059BC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10605  0059BE  6FDA               	movwf	218,b	;volatile
 10606  0059C0                     
 10607                           ; BSR set to: 14
 10608                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10609  0059C0  89DA               	bsf	218,4,b	;volatile
 10610  0059C2                     
 10611                           ; BSR set to: 14
 10612                           ;i2c.c: 61:   return tmp;
 10613  0059C2  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 10614  0059C4                     
 10615                           ; BSR set to: 14
 10616  0059C4  0012               	return		;funcret
 10617  0059C6                     __end_of_I2C_2_Master_Read:
 10618                           	callstack 0
 10619                           
 10620 ;; *************** function _I2C_2_Master_Idle *****************
 10621 ;; Defined at:
 10622 ;;		line 22 in file "i2c.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;		None
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10639 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10640 ;;Total ram usage:        1 bytes
 10641 ;; Hardware stack levels used: 1
 10642 ;; Hardware stack levels required when called: 1
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_I2C_2_Master_Start
 10647 ;;		_I2C_2_Master_RepStart
 10648 ;;		_I2C_2_Master_Stop
 10649 ;;		_I2C_2_Master_Write
 10650 ;;		_I2C_2_Master_Read
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text57
 10655  005B76                     __ptext57:
 10656                           	callstack 0
 10657  005B76                     _I2C_2_Master_Idle:
 10658                           	callstack 24
 10659  005B76                     l191:
 10660  005B76  010E               	movlb	14	; () banked
 10661  005B78  B5D8               	btfsc	216,2,b	;volatile
 10662  005B7A  EFC1  F02D         	goto	u3101
 10663  005B7E  EFC3  F02D         	goto	u3100
 10664  005B82                     u3101:
 10665  005B82  EFBB  F02D         	goto	l191
 10666  005B86                     u3100:
 10667  005B86                     
 10668                           ; BSR set to: 14
 10669  005B86  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10670  005B8A  0E1F               	movlw	31
 10671  005B8C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 10672  005B8E  A4D8               	btfss	status,2,c
 10673  005B90  EFCC  F02D         	goto	u3111
 10674  005B94  EFCE  F02D         	goto	u3110
 10675  005B98                     u3111:
 10676  005B98  EFBB  F02D         	goto	l191
 10677  005B9C                     u3110:
 10678  005B9C                     
 10679                           ; BSR set to: 14
 10680  005B9C  0012               	return		;funcret
 10681  005B9E                     __end_of_I2C_2_Master_Idle:
 10682                           	callstack 0
 10683                           
 10684 ;; *************** function ___xxtofl *****************
 10685 ;; Defined at:
 10686 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 10687 ;; Parameters:    Size  Location     Type
 10688 ;;  sign            1    wreg     unsigned char 
 10689 ;;  val             4    0[COMRAM] long 
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;  sign            1    8[COMRAM] unsigned char 
 10692 ;;  arg             4   10[COMRAM] unsigned long 
 10693 ;;  exp             1    9[COMRAM] unsigned char 
 10694 ;; Return value:  Size  Location     Type
 10695 ;;                  4    0[COMRAM] unsigned char 
 10696 ;; Registers used:
 10697 ;;		wreg, status,2, status,0
 10698 ;; Tracked objects:
 10699 ;;		On entry : 0/0
 10700 ;;		On exit  : 0/0
 10701 ;;		Unchanged: 0/0
 10702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10704 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10705 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10706 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10707 ;;Total ram usage:       14 bytes
 10708 ;; Hardware stack levels used: 1
 10709 ;; Hardware stack levels required when called: 1
 10710 ;; This function calls:
 10711 ;;		Nothing
 10712 ;; This function is called by:
 10713 ;;		_detect_color
 10714 ;;		_amb_light_measure
 10715 ;;		_distance_measure
 10716 ;;		_check_color_reading
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text58
 10721  004282                     __ptext58:
 10722                           	callstack 0
 10723  004282                     ___xxtofl:
 10724                           	callstack 27
 10725                           
 10726                           ; BSR set to: 14
 10727                           ;incstack = 0
 10728                           ;___xxtofl@sign stored from wreg
 10729  004282  6E09               	movwf	___xxtofl@sign^0,c
 10730  004284  5009               	movf	___xxtofl@sign^0,w,c
 10731  004286  B4D8               	btfsc	status,2,c
 10732  004288  EF48  F021         	goto	u5251
 10733  00428C  EF4A  F021         	goto	u5250
 10734  004290                     u5251:
 10735  004290  EF6C  F021         	goto	l1370
 10736  004294                     u5250:
 10737  004294  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10738  004296  EF51  F021         	goto	u5260
 10739  00429A  EF4F  F021         	goto	u5261
 10740  00429E                     u5261:
 10741  00429E  EF6C  F021         	goto	l1370
 10742  0042A2                     u5260:
 10743  0042A2  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10744  0042A6  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10745  0042AA  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10746  0042AE  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10747  0042B2  1E05               	comf	??___xxtofl^0,f,c
 10748  0042B4  1E06               	comf	(??___xxtofl+1)^0,f,c
 10749  0042B6  1E07               	comf	(??___xxtofl+2)^0,f,c
 10750  0042B8  1E08               	comf	(??___xxtofl+3)^0,f,c
 10751  0042BA  2A05               	incf	??___xxtofl^0,f,c
 10752  0042BC  0E00               	movlw	0
 10753  0042BE  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10754  0042C0  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10755  0042C2  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10756  0042C4  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10757  0042C8  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10758  0042CC  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10759  0042D0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10760  0042D4  EF74  F021         	goto	l4799
 10761  0042D8                     l1370:
 10762  0042D8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10763  0042DC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10764  0042E0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10765  0042E4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10766  0042E8                     l4799:
 10767  0042E8  5001               	movf	___xxtofl@val^0,w,c
 10768  0042EA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10769  0042EC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10770  0042EE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10771  0042F0  A4D8               	btfss	status,2,c
 10772  0042F2  EF7D  F021         	goto	u5271
 10773  0042F6  EF7F  F021         	goto	u5270
 10774  0042FA                     u5271:
 10775  0042FA  EF89  F021         	goto	l4805
 10776  0042FE                     u5270:
 10777  0042FE  0E00               	movlw	0
 10778  004300  6E01               	movwf	?___xxtofl^0,c
 10779  004302  0E00               	movlw	0
 10780  004304  6E02               	movwf	(?___xxtofl+1)^0,c
 10781  004306  0E00               	movlw	0
 10782  004308  6E03               	movwf	(?___xxtofl+2)^0,c
 10783  00430A  0E00               	movlw	0
 10784  00430C  6E04               	movwf	(?___xxtofl+3)^0,c
 10785  00430E  EF1A  F022         	goto	l1373
 10786  004312                     l4805:
 10787  004312  0E96               	movlw	150
 10788  004314  6E0A               	movwf	___xxtofl@exp^0,c
 10789  004316  EF93  F021         	goto	l4809
 10790  00431A                     l4807:
 10791  00431A  2A0A               	incf	___xxtofl@exp^0,f,c
 10792  00431C  90D8               	bcf	status,0,c
 10793  00431E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10794  004320  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10795  004322  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10796  004324  320B               	rrcf	___xxtofl@arg^0,f,c
 10797  004326                     l4809:
 10798  004326  0E00               	movlw	0
 10799  004328  140B               	andwf	___xxtofl@arg^0,w,c
 10800  00432A  6E05               	movwf	??___xxtofl^0,c
 10801  00432C  0E00               	movlw	0
 10802  00432E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10803  004330  6E06               	movwf	(??___xxtofl+1)^0,c
 10804  004332  0E00               	movlw	0
 10805  004334  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10806  004336  6E07               	movwf	(??___xxtofl+2)^0,c
 10807  004338  0EFE               	movlw	254
 10808  00433A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10809  00433C  6E08               	movwf	(??___xxtofl+3)^0,c
 10810  00433E  5005               	movf	??___xxtofl^0,w,c
 10811  004340  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10812  004342  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10813  004344  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10814  004346  A4D8               	btfss	status,2,c
 10815  004348  EFA8  F021         	goto	u5281
 10816  00434C  EFAA  F021         	goto	u5280
 10817  004350                     u5281:
 10818  004350  EF8D  F021         	goto	l4807
 10819  004354                     u5280:
 10820  004354  EFB8  F021         	goto	l1377
 10821  004358                     l4811:
 10822  004358  2A0A               	incf	___xxtofl@exp^0,f,c
 10823  00435A  0E01               	movlw	1
 10824  00435C  260B               	addwf	___xxtofl@arg^0,f,c
 10825  00435E  0E00               	movlw	0
 10826  004360  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10827  004362  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10828  004364  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10829  004366  90D8               	bcf	status,0,c
 10830  004368  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10831  00436A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10832  00436C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10833  00436E  320B               	rrcf	___xxtofl@arg^0,f,c
 10834  004370                     l1377:
 10835  004370  0E00               	movlw	0
 10836  004372  140B               	andwf	___xxtofl@arg^0,w,c
 10837  004374  6E05               	movwf	??___xxtofl^0,c
 10838  004376  0E00               	movlw	0
 10839  004378  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10840  00437A  6E06               	movwf	(??___xxtofl+1)^0,c
 10841  00437C  0E00               	movlw	0
 10842  00437E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10843  004380  6E07               	movwf	(??___xxtofl+2)^0,c
 10844  004382  0EFF               	movlw	255
 10845  004384  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10846  004386  6E08               	movwf	(??___xxtofl+3)^0,c
 10847  004388  5005               	movf	??___xxtofl^0,w,c
 10848  00438A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10849  00438C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10850  00438E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10851  004390  A4D8               	btfss	status,2,c
 10852  004392  EFCD  F021         	goto	u5291
 10853  004396  EFCF  F021         	goto	u5290
 10854  00439A                     u5291:
 10855  00439A  EFAC  F021         	goto	l4811
 10856  00439E                     u5290:
 10857  00439E  EFD7  F021         	goto	l4819
 10858  0043A2                     l4817:
 10859  0043A2  060A               	decf	___xxtofl@exp^0,f,c
 10860  0043A4  90D8               	bcf	status,0,c
 10861  0043A6  360B               	rlcf	___xxtofl@arg^0,f,c
 10862  0043A8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10863  0043AA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10864  0043AC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10865  0043AE                     l4819:
 10866  0043AE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10867  0043B0  EFDC  F021         	goto	u5301
 10868  0043B4  EFDE  F021         	goto	u5300
 10869  0043B8                     u5301:
 10870  0043B8  EFE6  F021         	goto	l1384
 10871  0043BC                     u5300:
 10872  0043BC  0E02               	movlw	2
 10873  0043BE  600A               	cpfslt	___xxtofl@exp^0,c
 10874  0043C0  EFE4  F021         	goto	u5311
 10875  0043C4  EFE6  F021         	goto	u5310
 10876  0043C8                     u5311:
 10877  0043C8  EFD1  F021         	goto	l4817
 10878  0043CC                     u5310:
 10879  0043CC                     l1384:
 10880  0043CC  B00A               	btfsc	___xxtofl@exp^0,0,c
 10881  0043CE  EFEB  F021         	goto	u5321
 10882  0043D2  EFED  F021         	goto	u5320
 10883  0043D6                     u5321:
 10884  0043D6  EFEE  F021         	goto	l4825
 10885  0043DA                     u5320:
 10886  0043DA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10887  0043DC                     l4825:
 10888  0043DC  90D8               	bcf	status,0,c
 10889  0043DE  320A               	rrcf	___xxtofl@exp^0,f,c
 10890  0043E0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10891  0043E4  6A06               	clrf	(??___xxtofl+1)^0,c
 10892  0043E6  6A07               	clrf	(??___xxtofl+2)^0,c
 10893  0043E8  6A08               	clrf	(??___xxtofl+3)^0,c
 10894  0043EA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10895  0043EE  6A07               	clrf	(??___xxtofl+2)^0,c
 10896  0043F0  6A06               	clrf	(??___xxtofl+1)^0,c
 10897  0043F2  6A05               	clrf	??___xxtofl^0,c
 10898  0043F4  5005               	movf	??___xxtofl^0,w,c
 10899  0043F6  120B               	iorwf	___xxtofl@arg^0,f,c
 10900  0043F8  5006               	movf	(??___xxtofl+1)^0,w,c
 10901  0043FA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10902  0043FC  5007               	movf	(??___xxtofl+2)^0,w,c
 10903  0043FE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10904  004400  5008               	movf	(??___xxtofl+3)^0,w,c
 10905  004402  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10906  004404  5009               	movf	___xxtofl@sign^0,w,c
 10907  004406  B4D8               	btfsc	status,2,c
 10908  004408  EF08  F022         	goto	u5331
 10909  00440C  EF0A  F022         	goto	u5330
 10910  004410                     u5331:
 10911  004410  EF12  F022         	goto	l4835
 10912  004414                     u5330:
 10913  004414  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10914  004416  EF11  F022         	goto	u5340
 10915  00441A  EF0F  F022         	goto	u5341
 10916  00441E                     u5341:
 10917  00441E  EF12  F022         	goto	l4835
 10918  004422                     u5340:
 10919  004422  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10920  004424                     l4835:
 10921  004424  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10922  004428  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10923  00442C  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10924  004430  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10925  004434                     l1373:
 10926  004434  0012               	return		;funcret
 10927  004436                     __end_of___xxtofl:
 10928                           	callstack 0
 10929                           
 10930 ;; *************** function ___fldiv *****************
 10931 ;; Defined at:
 10932 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  b               4   14[COMRAM] unsigned char 
 10935 ;;  a               4   18[COMRAM] unsigned char 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;  grs             4   33[COMRAM] unsigned long 
 10938 ;;  rem             4   26[COMRAM] unsigned long 
 10939 ;;  new_exp         2   31[COMRAM] short 
 10940 ;;  aexp            1   38[COMRAM] unsigned char 
 10941 ;;  bexp            1   37[COMRAM] unsigned char 
 10942 ;;  sign            1   30[COMRAM] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  4   14[COMRAM] unsigned char 
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10955 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10956 ;;Total ram usage:       25 bytes
 10957 ;; Hardware stack levels used: 1
 10958 ;; Hardware stack levels required when called: 1
 10959 ;; This function calls:
 10960 ;;		Nothing
 10961 ;; This function is called by:
 10962 ;;		_detect_color
 10963 ;;		_amb_light_measure
 10964 ;;		_check_color_reading
 10965 ;; This function uses a non-reentrant model
 10966 ;;
 10967                           
 10968                           	psect	text59
 10969  0026B0                     __ptext59:
 10970                           	callstack 0
 10971  0026B0                     ___fldiv:
 10972                           	callstack 27
 10973  0026B0  5012               	movf	(___fldiv@b+3)^0,w,c
 10974  0026B2  0B80               	andlw	128
 10975  0026B4  6E1F               	movwf	___fldiv@sign^0,c
 10976  0026B6  5012               	movf	(___fldiv@b+3)^0,w,c
 10977  0026B8  2412               	addwf	(___fldiv@b+3)^0,w,c
 10978  0026BA  6E26               	movwf	___fldiv@bexp^0,c
 10979  0026BC  AE11               	btfss	(___fldiv@b+2)^0,7,c
 10980  0026BE  EF63  F013         	goto	u5021
 10981  0026C2  EF65  F013         	goto	u5020
 10982  0026C6                     u5021:
 10983  0026C6  EF66  F013         	goto	l4661
 10984  0026CA                     u5020:
 10985  0026CA  8026               	bsf	___fldiv@bexp^0,0,c
 10986  0026CC                     l4661:
 10987  0026CC  5026               	movf	___fldiv@bexp^0,w,c
 10988  0026CE  B4D8               	btfsc	status,2,c
 10989  0026D0  EF6C  F013         	goto	u5031
 10990  0026D4  EF6E  F013         	goto	u5030
 10991  0026D8                     u5031:
 10992  0026D8  EF83  F013         	goto	l4671
 10993  0026DC                     u5030:
 10994  0026DC  2826               	incf	___fldiv@bexp^0,w,c
 10995  0026DE  A4D8               	btfss	status,2,c
 10996  0026E0  EF74  F013         	goto	u5041
 10997  0026E4  EF76  F013         	goto	u5040
 10998  0026E8                     u5041:
 10999  0026E8  EF7E  F013         	goto	l4667
 11000  0026EC                     u5040:
 11001  0026EC  0E00               	movlw	0
 11002  0026EE  6E0F               	movwf	___fldiv@b^0,c
 11003  0026F0  0E00               	movlw	0
 11004  0026F2  6E10               	movwf	(___fldiv@b+1)^0,c
 11005  0026F4  0E00               	movlw	0
 11006  0026F6  6E11               	movwf	(___fldiv@b+2)^0,c
 11007  0026F8  0E00               	movlw	0
 11008  0026FA  6E12               	movwf	(___fldiv@b+3)^0,c
 11009  0026FC                     l4667:
 11010  0026FC  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11011  0026FE  0E00               	movlw	0
 11012  002700  6E12               	movwf	(___fldiv@b+3)^0,c
 11013  002702  EF8B  F013         	goto	l4673
 11014  002706                     l4671:
 11015  002706  0E00               	movlw	0
 11016  002708  6E0F               	movwf	___fldiv@b^0,c
 11017  00270A  0E00               	movlw	0
 11018  00270C  6E10               	movwf	(___fldiv@b+1)^0,c
 11019  00270E  0E00               	movlw	0
 11020  002710  6E11               	movwf	(___fldiv@b+2)^0,c
 11021  002712  0E00               	movlw	0
 11022  002714  6E12               	movwf	(___fldiv@b+3)^0,c
 11023  002716                     l4673:
 11024  002716  5016               	movf	(___fldiv@a+3)^0,w,c
 11025  002718  0B80               	andlw	128
 11026  00271A  1A1F               	xorwf	___fldiv@sign^0,f,c
 11027  00271C  5016               	movf	(___fldiv@a+3)^0,w,c
 11028  00271E  2416               	addwf	(___fldiv@a+3)^0,w,c
 11029  002720  6E27               	movwf	___fldiv@aexp^0,c
 11030  002722  AE15               	btfss	(___fldiv@a+2)^0,7,c
 11031  002724  EF96  F013         	goto	u5051
 11032  002728  EF98  F013         	goto	u5050
 11033  00272C                     u5051:
 11034  00272C  EF99  F013         	goto	l4681
 11035  002730                     u5050:
 11036  002730  8027               	bsf	___fldiv@aexp^0,0,c
 11037  002732                     l4681:
 11038  002732  5027               	movf	___fldiv@aexp^0,w,c
 11039  002734  B4D8               	btfsc	status,2,c
 11040  002736  EF9F  F013         	goto	u5061
 11041  00273A  EFA1  F013         	goto	u5060
 11042  00273E                     u5061:
 11043  00273E  EFB6  F013         	goto	l4691
 11044  002742                     u5060:
 11045  002742  2827               	incf	___fldiv@aexp^0,w,c
 11046  002744  A4D8               	btfss	status,2,c
 11047  002746  EFA7  F013         	goto	u5071
 11048  00274A  EFA9  F013         	goto	u5070
 11049  00274E                     u5071:
 11050  00274E  EFB1  F013         	goto	l4687
 11051  002752                     u5070:
 11052  002752  0E00               	movlw	0
 11053  002754  6E13               	movwf	___fldiv@a^0,c
 11054  002756  0E00               	movlw	0
 11055  002758  6E14               	movwf	(___fldiv@a+1)^0,c
 11056  00275A  0E00               	movlw	0
 11057  00275C  6E15               	movwf	(___fldiv@a+2)^0,c
 11058  00275E  0E00               	movlw	0
 11059  002760  6E16               	movwf	(___fldiv@a+3)^0,c
 11060  002762                     l4687:
 11061  002762  8E15               	bsf	(___fldiv@a+2)^0,7,c
 11062  002764  0E00               	movlw	0
 11063  002766  6E16               	movwf	(___fldiv@a+3)^0,c
 11064  002768  EFBE  F013         	goto	l4693
 11065  00276C                     l4691:
 11066  00276C  0E00               	movlw	0
 11067  00276E  6E13               	movwf	___fldiv@a^0,c
 11068  002770  0E00               	movlw	0
 11069  002772  6E14               	movwf	(___fldiv@a+1)^0,c
 11070  002774  0E00               	movlw	0
 11071  002776  6E15               	movwf	(___fldiv@a+2)^0,c
 11072  002778  0E00               	movlw	0
 11073  00277A  6E16               	movwf	(___fldiv@a+3)^0,c
 11074  00277C                     l4693:
 11075  00277C  5013               	movf	___fldiv@a^0,w,c
 11076  00277E  1014               	iorwf	(___fldiv@a+1)^0,w,c
 11077  002780  1015               	iorwf	(___fldiv@a+2)^0,w,c
 11078  002782  1016               	iorwf	(___fldiv@a+3)^0,w,c
 11079  002784  A4D8               	btfss	status,2,c
 11080  002786  EFC7  F013         	goto	u5081
 11081  00278A  EFC9  F013         	goto	u5080
 11082  00278E                     u5081:
 11083  00278E  EFE1  F013         	goto	l4705
 11084  002792                     u5080:
 11085  002792  0E00               	movlw	0
 11086  002794  6E0F               	movwf	___fldiv@b^0,c
 11087  002796  0E00               	movlw	0
 11088  002798  6E10               	movwf	(___fldiv@b+1)^0,c
 11089  00279A  0E00               	movlw	0
 11090  00279C  6E11               	movwf	(___fldiv@b+2)^0,c
 11091  00279E  0E00               	movlw	0
 11092  0027A0  6E12               	movwf	(___fldiv@b+3)^0,c
 11093  0027A2  0E80               	movlw	128
 11094  0027A4  1211               	iorwf	(___fldiv@b+2)^0,f,c
 11095  0027A6  0E7F               	movlw	127
 11096  0027A8  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11097  0027AA                     l4699:
 11098  0027AA  501F               	movf	___fldiv@sign^0,w,c
 11099  0027AC  1212               	iorwf	(___fldiv@b+3)^0,f,c
 11100  0027AE  C00F  F00F         	movff	___fldiv@b,?___fldiv
 11101  0027B2  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 11102  0027B6  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 11103  0027BA  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 11104  0027BE  EF24  F015         	goto	l1297
 11105  0027C2                     l4705:
 11106  0027C2  5026               	movf	___fldiv@bexp^0,w,c
 11107  0027C4  A4D8               	btfss	status,2,c
 11108  0027C6  EFE7  F013         	goto	u5091
 11109  0027CA  EFE9  F013         	goto	u5090
 11110  0027CE                     u5091:
 11111  0027CE  EFF3  F013         	goto	l4713
 11112  0027D2                     u5090:
 11113  0027D2  0E00               	movlw	0
 11114  0027D4  6E0F               	movwf	?___fldiv^0,c
 11115  0027D6  0E00               	movlw	0
 11116  0027D8  6E10               	movwf	(?___fldiv+1)^0,c
 11117  0027DA  0E00               	movlw	0
 11118  0027DC  6E11               	movwf	(?___fldiv+2)^0,c
 11119  0027DE  0E00               	movlw	0
 11120  0027E0  6E12               	movwf	(?___fldiv+3)^0,c
 11121  0027E2  EF24  F015         	goto	l1297
 11122  0027E6                     l4713:
 11123  0027E6  5027               	movf	___fldiv@aexp^0,w,c
 11124  0027E8  C026  F017         	movff	___fldiv@bexp,??___fldiv
 11125  0027EC  6A18               	clrf	(??___fldiv+1)^0,c
 11126  0027EE  5E17               	subwf	??___fldiv^0,f,c
 11127  0027F0  0E00               	movlw	0
 11128  0027F2  5A18               	subwfb	(??___fldiv+1)^0,f,c
 11129  0027F4  0E7F               	movlw	127
 11130  0027F6  2417               	addwf	??___fldiv^0,w,c
 11131  0027F8  6E20               	movwf	___fldiv@new_exp^0,c
 11132  0027FA  0E00               	movlw	0
 11133  0027FC  2018               	addwfc	(??___fldiv+1)^0,w,c
 11134  0027FE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11135  002800  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 11136  002804  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 11137  002808  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 11138  00280C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 11139  002810  0E00               	movlw	0
 11140  002812  6E0F               	movwf	___fldiv@b^0,c
 11141  002814  0E00               	movlw	0
 11142  002816  6E10               	movwf	(___fldiv@b+1)^0,c
 11143  002818  0E00               	movlw	0
 11144  00281A  6E11               	movwf	(___fldiv@b+2)^0,c
 11145  00281C  0E00               	movlw	0
 11146  00281E  6E12               	movwf	(___fldiv@b+3)^0,c
 11147  002820  0E00               	movlw	0
 11148  002822  6E22               	movwf	___fldiv@grs^0,c
 11149  002824  0E00               	movlw	0
 11150  002826  6E23               	movwf	(___fldiv@grs+1)^0,c
 11151  002828  0E00               	movlw	0
 11152  00282A  6E24               	movwf	(___fldiv@grs+2)^0,c
 11153  00282C  0E00               	movlw	0
 11154  00282E  6E25               	movwf	(___fldiv@grs+3)^0,c
 11155  002830  0E00               	movlw	0
 11156  002832  6E27               	movwf	___fldiv@aexp^0,c
 11157  002834  EF54  F014         	goto	l1299
 11158  002838                     l4723:
 11159  002838  5027               	movf	___fldiv@aexp^0,w,c
 11160  00283A  B4D8               	btfsc	status,2,c
 11161  00283C  EF22  F014         	goto	u5101
 11162  002840  EF24  F014         	goto	u5100
 11163  002844                     u5101:
 11164  002844  EF3B  F014         	goto	l4731
 11165  002848                     u5100:
 11166  002848  90D8               	bcf	status,0,c
 11167  00284A  361B               	rlcf	___fldiv@rem^0,f,c
 11168  00284C  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 11169  00284E  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 11170  002850  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 11171  002852  90D8               	bcf	status,0,c
 11172  002854  360F               	rlcf	___fldiv@b^0,f,c
 11173  002856  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11174  002858  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11175  00285A  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11176  00285C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11177  00285E  EF33  F014         	goto	u5111
 11178  002862  EF35  F014         	goto	u5110
 11179  002866                     u5111:
 11180  002866  EF36  F014         	goto	l1302
 11181  00286A                     u5110:
 11182  00286A  800F               	bsf	___fldiv@b^0,0,c
 11183  00286C                     l1302:
 11184  00286C  90D8               	bcf	status,0,c
 11185  00286E  3622               	rlcf	___fldiv@grs^0,f,c
 11186  002870  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11187  002872  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11188  002874  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11189  002876                     l4731:
 11190  002876  5013               	movf	___fldiv@a^0,w,c
 11191  002878  5C1B               	subwf	___fldiv@rem^0,w,c
 11192  00287A  5014               	movf	(___fldiv@a+1)^0,w,c
 11193  00287C  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 11194  00287E  5015               	movf	(___fldiv@a+2)^0,w,c
 11195  002880  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 11196  002882  5016               	movf	(___fldiv@a+3)^0,w,c
 11197  002884  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 11198  002886  A0D8               	btfss	status,0,c
 11199  002888  EF48  F014         	goto	u5121
 11200  00288C  EF4A  F014         	goto	u5120
 11201  002890                     u5121:
 11202  002890  EF53  F014         	goto	l4737
 11203  002894                     u5120:
 11204  002894  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 11205  002896  5013               	movf	___fldiv@a^0,w,c
 11206  002898  5E1B               	subwf	___fldiv@rem^0,f,c
 11207  00289A  5014               	movf	(___fldiv@a+1)^0,w,c
 11208  00289C  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 11209  00289E  5015               	movf	(___fldiv@a+2)^0,w,c
 11210  0028A0  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 11211  0028A2  5016               	movf	(___fldiv@a+3)^0,w,c
 11212  0028A4  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 11213  0028A6                     l4737:
 11214  0028A6  2A27               	incf	___fldiv@aexp^0,f,c
 11215  0028A8                     l1299:
 11216  0028A8  0E19               	movlw	25
 11217  0028AA  6427               	cpfsgt	___fldiv@aexp^0,c
 11218  0028AC  EF5A  F014         	goto	u5131
 11219  0028B0  EF5C  F014         	goto	u5130
 11220  0028B4                     u5131:
 11221  0028B4  EF1C  F014         	goto	l4723
 11222  0028B8                     u5130:
 11223  0028B8  501B               	movf	___fldiv@rem^0,w,c
 11224  0028BA  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 11225  0028BC  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 11226  0028BE  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 11227  0028C0  B4D8               	btfsc	status,2,c
 11228  0028C2  EF65  F014         	goto	u5141
 11229  0028C6  EF67  F014         	goto	u5140
 11230  0028CA                     u5141:
 11231  0028CA  EF7F  F014         	goto	l4749
 11232  0028CE                     u5140:
 11233  0028CE  8022               	bsf	___fldiv@grs^0,0,c
 11234  0028D0  EF7F  F014         	goto	l4749
 11235  0028D4                     l4743:
 11236  0028D4  90D8               	bcf	status,0,c
 11237  0028D6  360F               	rlcf	___fldiv@b^0,f,c
 11238  0028D8  3610               	rlcf	(___fldiv@b+1)^0,f,c
 11239  0028DA  3611               	rlcf	(___fldiv@b+2)^0,f,c
 11240  0028DC  3612               	rlcf	(___fldiv@b+3)^0,f,c
 11241  0028DE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11242  0028E0  EF74  F014         	goto	u5151
 11243  0028E4  EF76  F014         	goto	u5150
 11244  0028E8                     u5151:
 11245  0028E8  EF77  F014         	goto	l1308
 11246  0028EC                     u5150:
 11247  0028EC  800F               	bsf	___fldiv@b^0,0,c
 11248  0028EE                     l1308:
 11249  0028EE  90D8               	bcf	status,0,c
 11250  0028F0  3622               	rlcf	___fldiv@grs^0,f,c
 11251  0028F2  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 11252  0028F4  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 11253  0028F6  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 11254  0028F8  0620               	decf	___fldiv@new_exp^0,f,c
 11255  0028FA  A0D8               	btfss	status,0,c
 11256  0028FC  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 11257  0028FE                     l4749:
 11258  0028FE  AE11               	btfss	(___fldiv@b+2)^0,7,c
 11259  002900  EF84  F014         	goto	u5161
 11260  002904  EF86  F014         	goto	u5160
 11261  002908                     u5161:
 11262  002908  EF6A  F014         	goto	l4743
 11263  00290C                     u5160:
 11264  00290C  0E00               	movlw	0
 11265  00290E  6E27               	movwf	___fldiv@aexp^0,c
 11266  002910  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 11267  002912  EF8D  F014         	goto	u5171
 11268  002916  EF8F  F014         	goto	u5170
 11269  00291A                     u5171:
 11270  00291A  EFB3  F014         	goto	l1310
 11271  00291E                     u5170:
 11272  00291E  0EFF               	movlw	255
 11273  002920  1422               	andwf	___fldiv@grs^0,w,c
 11274  002922  6E17               	movwf	??___fldiv^0,c
 11275  002924  0EFF               	movlw	255
 11276  002926  1423               	andwf	(___fldiv@grs+1)^0,w,c
 11277  002928  6E18               	movwf	(??___fldiv+1)^0,c
 11278  00292A  0EFF               	movlw	255
 11279  00292C  1424               	andwf	(___fldiv@grs+2)^0,w,c
 11280  00292E  6E19               	movwf	(??___fldiv+2)^0,c
 11281  002930  0E7F               	movlw	127
 11282  002932  1425               	andwf	(___fldiv@grs+3)^0,w,c
 11283  002934  6E1A               	movwf	(??___fldiv+3)^0,c
 11284  002936  5017               	movf	??___fldiv^0,w,c
 11285  002938  1018               	iorwf	(??___fldiv+1)^0,w,c
 11286  00293A  1019               	iorwf	(??___fldiv+2)^0,w,c
 11287  00293C  101A               	iorwf	(??___fldiv+3)^0,w,c
 11288  00293E  B4D8               	btfsc	status,2,c
 11289  002940  EFA4  F014         	goto	u5181
 11290  002944  EFA6  F014         	goto	u5180
 11291  002948                     u5181:
 11292  002948  EFAA  F014         	goto	l1311
 11293  00294C                     u5180:
 11294  00294C                     l4757:
 11295  00294C  0E01               	movlw	1
 11296  00294E  6E27               	movwf	___fldiv@aexp^0,c
 11297  002950  EFB3  F014         	goto	l1310
 11298  002954                     l1311:
 11299  002954  A00F               	btfss	___fldiv@b^0,0,c
 11300  002956  EFAF  F014         	goto	u5191
 11301  00295A  EFB1  F014         	goto	u5190
 11302  00295E                     u5191:
 11303  00295E  EFB3  F014         	goto	l1310
 11304  002962                     u5190:
 11305  002962  EFA6  F014         	goto	l4757
 11306  002966                     l1310:
 11307  002966  5027               	movf	___fldiv@aexp^0,w,c
 11308  002968  B4D8               	btfsc	status,2,c
 11309  00296A  EFB9  F014         	goto	u5201
 11310  00296E  EFBB  F014         	goto	u5200
 11311  002972                     u5201:
 11312  002972  EFDF  F014         	goto	l4769
 11313  002976                     u5200:
 11314  002976  0E01               	movlw	1
 11315  002978  260F               	addwf	___fldiv@b^0,f,c
 11316  00297A  0E00               	movlw	0
 11317  00297C  2210               	addwfc	(___fldiv@b+1)^0,f,c
 11318  00297E  2211               	addwfc	(___fldiv@b+2)^0,f,c
 11319  002980  2212               	addwfc	(___fldiv@b+3)^0,f,c
 11320  002982  A012               	btfss	(___fldiv@b+3)^0,0,c
 11321  002984  EFC6  F014         	goto	u5211
 11322  002988  EFC8  F014         	goto	u5210
 11323  00298C                     u5211:
 11324  00298C  EFDF  F014         	goto	l4769
 11325  002990                     u5210:
 11326  002990  C00F  F017         	movff	___fldiv@b,??___fldiv
 11327  002994  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 11328  002998  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 11329  00299C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 11330  0029A0  341A               	rlcf	(??___fldiv+3)^0,w,c
 11331  0029A2  321A               	rrcf	(??___fldiv+3)^0,f,c
 11332  0029A4  3219               	rrcf	(??___fldiv+2)^0,f,c
 11333  0029A6  3218               	rrcf	(??___fldiv+1)^0,f,c
 11334  0029A8  3217               	rrcf	??___fldiv^0,f,c
 11335  0029AA  C017  F00F         	movff	??___fldiv,___fldiv@b
 11336  0029AE  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 11337  0029B2  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 11338  0029B6  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 11339  0029BA  4A20               	infsnz	___fldiv@new_exp^0,f,c
 11340  0029BC  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 11341  0029BE                     l4769:
 11342  0029BE  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11343  0029C0  EFEA  F014         	goto	u5221
 11344  0029C4  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11345  0029C6  E108               	bnz	u5220
 11346  0029C8  2820               	incf	___fldiv@new_exp^0,w,c
 11347  0029CA  A0D8               	btfss	status,0,c
 11348  0029CC  EFEA  F014         	goto	u5221
 11349  0029D0  EFEC  F014         	goto	u5220
 11350  0029D4                     u5221:
 11351  0029D4  EFF7  F014         	goto	l4773
 11352  0029D8                     u5220:
 11353  0029D8  0E00               	movlw	0
 11354  0029DA  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11355  0029DC  6820               	setf	___fldiv@new_exp^0,c
 11356  0029DE  0E00               	movlw	0
 11357  0029E0  6E0F               	movwf	___fldiv@b^0,c
 11358  0029E2  0E00               	movlw	0
 11359  0029E4  6E10               	movwf	(___fldiv@b+1)^0,c
 11360  0029E6  0E00               	movlw	0
 11361  0029E8  6E11               	movwf	(___fldiv@b+2)^0,c
 11362  0029EA  0E00               	movlw	0
 11363  0029EC  6E12               	movwf	(___fldiv@b+3)^0,c
 11364  0029EE                     l4773:
 11365  0029EE  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11366  0029F0  EF04  F015         	goto	u5230
 11367  0029F4  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 11368  0029F6  E106               	bnz	u5231
 11369  0029F8  0420               	decf	___fldiv@new_exp^0,w,c
 11370  0029FA  B0D8               	btfsc	status,0,c
 11371  0029FC  EF02  F015         	goto	u5231
 11372  002A00  EF04  F015         	goto	u5230
 11373  002A04                     u5231:
 11374  002A04  EF12  F015         	goto	l4777
 11375  002A08                     u5230:
 11376  002A08  0E00               	movlw	0
 11377  002A0A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 11378  002A0C  0E00               	movlw	0
 11379  002A0E  6E20               	movwf	___fldiv@new_exp^0,c
 11380  002A10  0E00               	movlw	0
 11381  002A12  6E0F               	movwf	___fldiv@b^0,c
 11382  002A14  0E00               	movlw	0
 11383  002A16  6E10               	movwf	(___fldiv@b+1)^0,c
 11384  002A18  0E00               	movlw	0
 11385  002A1A  6E11               	movwf	(___fldiv@b+2)^0,c
 11386  002A1C  0E00               	movlw	0
 11387  002A1E  6E12               	movwf	(___fldiv@b+3)^0,c
 11388  002A20  0E00               	movlw	0
 11389  002A22  6E1F               	movwf	___fldiv@sign^0,c
 11390  002A24                     l4777:
 11391  002A24  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 11392  002A28  A026               	btfss	___fldiv@bexp^0,0,c
 11393  002A2A  EF19  F015         	goto	u5241
 11394  002A2E  EF1B  F015         	goto	u5240
 11395  002A32                     u5241:
 11396  002A32  EF1E  F015         	goto	l4783
 11397  002A36                     u5240:
 11398  002A36  8E11               	bsf	(___fldiv@b+2)^0,7,c
 11399  002A38  EF1F  F015         	goto	l4785
 11400  002A3C                     l4783:
 11401  002A3C  9E11               	bcf	(___fldiv@b+2)^0,7,c
 11402  002A3E                     l4785:
 11403  002A3E  90D8               	bcf	status,0,c
 11404  002A40  3026               	rrcf	___fldiv@bexp^0,w,c
 11405  002A42  6E12               	movwf	(___fldiv@b+3)^0,c
 11406  002A44  EFD5  F013         	goto	l4699
 11407  002A48                     l1297:
 11408  002A48  0012               	return		;funcret
 11409  002A4A                     __end_of___fldiv:
 11410                           	callstack 0
 11411                           
 11412 ;; *************** function _LED_C *****************
 11413 ;; Defined at:
 11414 ;;		line 173 in file "color.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;		None
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;		None
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      void 
 11421 ;; Registers used:
 11422 ;;		wreg
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11432 ;;Total ram usage:        2 bytes
 11433 ;; Hardware stack levels used: 1
 11434 ;; Hardware stack levels required when called: 1
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		_calibrate_white
 11439 ;;		_amb_light_measure
 11440 ;;		_distance_measure
 11441 ;;		_color_data_collection
 11442 ;;		_test_function
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           	psect	text60
 11447  005C84                     __ptext60:
 11448                           	callstack 0
 11449  005C84                     _LED_C:
 11450                           	callstack 28
 11451  005C84                     
 11452                           ;color.c: 175:     LATGbits.LATG1 = 1;
 11453  005C84  827F               	bsf	127,1,c	;volatile
 11454                           
 11455                           ;color.c: 176:     LATFbits.LATF7 = 1;
 11456  005C86  8E7E               	bsf	126,7,c	;volatile
 11457                           
 11458                           ;color.c: 177:     LATAbits.LATA4 = 1;
 11459  005C88  8879               	bsf	121,4,c	;volatile
 11460  005C8A                     
 11461                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11462  005C8A  0E11               	movlw	17
 11463  005C8C  6E02               	movwf	(??_LED_C+1)^0,c
 11464  005C8E  0E3C               	movlw	60
 11465  005C90  6E01               	movwf	??_LED_C^0,c
 11466  005C92  0ECB               	movlw	203
 11467  005C94                     u6507:
 11468  005C94  2EE8               	decfsz	wreg,f,c
 11469  005C96  D7FE               	bra	u6507
 11470  005C98  2E01               	decfsz	??_LED_C^0,f,c
 11471  005C9A  D7FC               	bra	u6507
 11472  005C9C  2E02               	decfsz	(??_LED_C+1)^0,f,c
 11473  005C9E  D7FA               	bra	u6507
 11474  005CA0  F000               	nop	
 11475  005CA2  0012               	return		;funcret
 11476  005CA4                     __end_of_LED_C:
 11477                           	callstack 0
 11478                           
 11479 ;; *************** function _action *****************
 11480 ;; Defined at:
 11481 ;;		line 17 in file "movement.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;  color           1    wreg     unsigned char 
 11484 ;;  mL              2   55[COMRAM] PTR struct DC_motor
 11485 ;;		 -> main@motorL(9), 
 11486 ;;  mR              2   57[COMRAM] PTR struct DC_motor
 11487 ;;		 -> main@motorR(9), 
 11488 ;; Auto vars:     Size  Location     Type
 11489 ;;  color           1   59[COMRAM] unsigned char 
 11490 ;; Return value:  Size  Location     Type
 11491 ;;                  1    wreg      void 
 11492 ;; Registers used:
 11493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11494 ;; Tracked objects:
 11495 ;;		On entry : 0/0
 11496 ;;		On exit  : 0/0
 11497 ;;		Unchanged: 0/0
 11498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11502 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11503 ;;Total ram usage:        5 bytes
 11504 ;; Hardware stack levels used: 1
 11505 ;; Hardware stack levels required when called: 6
 11506 ;; This function calls:
 11507 ;;		_goback
 11508 ;;		_short_reverse
 11509 ;;		_toggle_light
 11510 ;;		_turn45
 11511 ;; This function is called by:
 11512 ;;		_main
 11513 ;; This function uses a non-reentrant model
 11514 ;;
 11515                           
 11516                           	psect	text61
 11517  0030D0                     __ptext61:
 11518                           	callstack 0
 11519  0030D0                     _action:
 11520                           	callstack 24
 11521                           
 11522                           ;incstack = 0
 11523                           ;action@color stored from wreg
 11524  0030D0  6E3C               	movwf	action@color^0,c
 11525  0030D2                     
 11526                           ;movement.c: 17: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 18: { if (color != 0){
 11527  0030D2  503C               	movf	action@color^0,w,c
 11528  0030D4  B4D8               	btfsc	status,2,c
 11529  0030D6  EF6F  F018         	goto	u5801
 11530  0030DA  EF71  F018         	goto	u5800
 11531  0030DE                     u5801:
 11532  0030DE  EFEB  F019         	goto	l569
 11533  0030E2                     u5800:
 11534  0030E2                     
 11535                           ;movement.c: 19:         if (color == 1){
 11536  0030E2  043C               	decf	action@color^0,w,c
 11537  0030E4  A4D8               	btfss	status,2,c
 11538  0030E6  EF77  F018         	goto	u5811
 11539  0030EA  EF79  F018         	goto	u5810
 11540  0030EE                     u5811:
 11541  0030EE  EFA1  F018         	goto	l5431
 11542  0030F2                     u5810:
 11543  0030F2                     
 11544                           ;movement.c: 20:             short_reverse(mL,mR,1);
 11545  0030F2  C038  F020         	movff	action@mL,short_reverse@mL
 11546  0030F6  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11547  0030FA  C03A  F022         	movff	action@mR,short_reverse@mR
 11548  0030FE  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11549  003102  0E01               	movlw	1
 11550  003104  6E24               	movwf	short_reverse@instruction^0,c
 11551  003106  ECF5  F029         	call	_short_reverse	;wreg free
 11552                           
 11553                           ;movement.c: 21:             turn45(mL, mR, 2, 2);
 11554  00310A  C038  F020         	movff	action@mL,turn45@mL
 11555  00310E  C039  F021         	movff	action@mL+1,turn45@mL+1
 11556  003112  C03A  F022         	movff	action@mR,turn45@mR
 11557  003116  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11558  00311A  0E02               	movlw	2
 11559  00311C  6E24               	movwf	turn45@turn_time^0,c
 11560  00311E  0E02               	movlw	2
 11561  003120  6E25               	movwf	turn45@direction^0,c
 11562  003122  ECA2  F01E         	call	_turn45	;wreg free
 11563  003126                     
 11564                           ;movement.c: 23:             memory[array_index] = 1;
 11565  003126  0101               	movlb	1	; () banked
 11566  003128  51D6               	movf	_array_index& (0+255),w,b
 11567  00312A  0D02               	mullw	2
 11568  00312C  0EA7               	movlw	low _memory
 11569  00312E  24F3               	addwf	243,w,c
 11570  003130  6ED9               	movwf	fsr2l,c
 11571  003132  0E01               	movlw	high _memory
 11572  003134  20F4               	addwfc	prodh,w,c
 11573  003136  6EDA               	movwf	fsr2h,c
 11574  003138  0E01               	movlw	1
 11575  00313A  6EDE               	movwf	postinc2,c
 11576  00313C  0E00               	movlw	0
 11577  00313E  6EDD               	movwf	postdec2,c
 11578  003140                     
 11579                           ; BSR set to: 1
 11580                           ;movement.c: 24:             array_index++;
 11581  003140  2BD6               	incf	_array_index& (0+255),f,b
 11582  003142                     l5431:
 11583                           
 11584                           ;movement.c: 26:         if (color == 2){
 11585  003142  0E02               	movlw	2
 11586  003144  183C               	xorwf	action@color^0,w,c
 11587  003146  A4D8               	btfss	status,2,c
 11588  003148  EFA8  F018         	goto	u5821
 11589  00314C  EFAA  F018         	goto	u5820
 11590  003150                     u5821:
 11591  003150  EFD2  F018         	goto	l5439
 11592  003154                     u5820:
 11593  003154                     
 11594                           ;movement.c: 27:             short_reverse(mL,mR,1);
 11595  003154  C038  F020         	movff	action@mL,short_reverse@mL
 11596  003158  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11597  00315C  C03A  F022         	movff	action@mR,short_reverse@mR
 11598  003160  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11599  003164  0E01               	movlw	1
 11600  003166  6E24               	movwf	short_reverse@instruction^0,c
 11601  003168  ECF5  F029         	call	_short_reverse	;wreg free
 11602                           
 11603                           ;movement.c: 28:             turn45(mL, mR, 2, 1);
 11604  00316C  C038  F020         	movff	action@mL,turn45@mL
 11605  003170  C039  F021         	movff	action@mL+1,turn45@mL+1
 11606  003174  C03A  F022         	movff	action@mR,turn45@mR
 11607  003178  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11608  00317C  0E02               	movlw	2
 11609  00317E  6E24               	movwf	turn45@turn_time^0,c
 11610  003180  0E01               	movlw	1
 11611  003182  6E25               	movwf	turn45@direction^0,c
 11612  003184  ECA2  F01E         	call	_turn45	;wreg free
 11613  003188                     
 11614                           ;movement.c: 30:             memory[array_index] = 2;
 11615  003188  0101               	movlb	1	; () banked
 11616  00318A  51D6               	movf	_array_index& (0+255),w,b
 11617  00318C  0D02               	mullw	2
 11618  00318E  0EA7               	movlw	low _memory
 11619  003190  24F3               	addwf	243,w,c
 11620  003192  6ED9               	movwf	fsr2l,c
 11621  003194  0E01               	movlw	high _memory
 11622  003196  20F4               	addwfc	prodh,w,c
 11623  003198  6EDA               	movwf	fsr2h,c
 11624  00319A  0E02               	movlw	2
 11625  00319C  6EDE               	movwf	postinc2,c
 11626  00319E  0E00               	movlw	0
 11627  0031A0  6EDD               	movwf	postdec2,c
 11628  0031A2                     
 11629                           ; BSR set to: 1
 11630                           ;movement.c: 31:             array_index++;
 11631  0031A2  2BD6               	incf	_array_index& (0+255),f,b
 11632  0031A4                     l5439:
 11633                           
 11634                           ;movement.c: 33:         if (color == 3){
 11635  0031A4  0E03               	movlw	3
 11636  0031A6  183C               	xorwf	action@color^0,w,c
 11637  0031A8  A4D8               	btfss	status,2,c
 11638  0031AA  EFD9  F018         	goto	u5831
 11639  0031AE  EFDB  F018         	goto	u5830
 11640  0031B2                     u5831:
 11641  0031B2  EF03  F019         	goto	l5447
 11642  0031B6                     u5830:
 11643  0031B6                     
 11644                           ;movement.c: 34:             short_reverse(mL,mR,1);
 11645  0031B6  C038  F020         	movff	action@mL,short_reverse@mL
 11646  0031BA  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11647  0031BE  C03A  F022         	movff	action@mR,short_reverse@mR
 11648  0031C2  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11649  0031C6  0E01               	movlw	1
 11650  0031C8  6E24               	movwf	short_reverse@instruction^0,c
 11651  0031CA  ECF5  F029         	call	_short_reverse	;wreg free
 11652                           
 11653                           ;movement.c: 35:             turn45(mL, mR, 4, 1);
 11654  0031CE  C038  F020         	movff	action@mL,turn45@mL
 11655  0031D2  C039  F021         	movff	action@mL+1,turn45@mL+1
 11656  0031D6  C03A  F022         	movff	action@mR,turn45@mR
 11657  0031DA  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11658  0031DE  0E04               	movlw	4
 11659  0031E0  6E24               	movwf	turn45@turn_time^0,c
 11660  0031E2  0E01               	movlw	1
 11661  0031E4  6E25               	movwf	turn45@direction^0,c
 11662  0031E6  ECA2  F01E         	call	_turn45	;wreg free
 11663  0031EA                     
 11664                           ;movement.c: 37:             memory[array_index] = 3;
 11665  0031EA  0101               	movlb	1	; () banked
 11666  0031EC  51D6               	movf	_array_index& (0+255),w,b
 11667  0031EE  0D02               	mullw	2
 11668  0031F0  0EA7               	movlw	low _memory
 11669  0031F2  24F3               	addwf	243,w,c
 11670  0031F4  6ED9               	movwf	fsr2l,c
 11671  0031F6  0E01               	movlw	high _memory
 11672  0031F8  20F4               	addwfc	prodh,w,c
 11673  0031FA  6EDA               	movwf	fsr2h,c
 11674  0031FC  0E03               	movlw	3
 11675  0031FE  6EDE               	movwf	postinc2,c
 11676  003200  0E00               	movlw	0
 11677  003202  6EDD               	movwf	postdec2,c
 11678  003204                     
 11679                           ; BSR set to: 1
 11680                           ;movement.c: 38:             array_index++;
 11681  003204  2BD6               	incf	_array_index& (0+255),f,b
 11682  003206                     l5447:
 11683                           
 11684                           ;movement.c: 40:         if (color == 4){
 11685  003206  0E04               	movlw	4
 11686  003208  183C               	xorwf	action@color^0,w,c
 11687  00320A  A4D8               	btfss	status,2,c
 11688  00320C  EF0A  F019         	goto	u5841
 11689  003210  EF0C  F019         	goto	u5840
 11690  003214                     u5841:
 11691  003214  EF34  F019         	goto	l5455
 11692  003218                     u5840:
 11693  003218                     
 11694                           ;movement.c: 41:             short_reverse(mL,mR,3);
 11695  003218  C038  F020         	movff	action@mL,short_reverse@mL
 11696  00321C  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11697  003220  C03A  F022         	movff	action@mR,short_reverse@mR
 11698  003224  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11699  003228  0E03               	movlw	3
 11700  00322A  6E24               	movwf	short_reverse@instruction^0,c
 11701  00322C  ECF5  F029         	call	_short_reverse	;wreg free
 11702                           
 11703                           ;movement.c: 42:             turn45(mL, mR, 2, 2);
 11704  003230  C038  F020         	movff	action@mL,turn45@mL
 11705  003234  C039  F021         	movff	action@mL+1,turn45@mL+1
 11706  003238  C03A  F022         	movff	action@mR,turn45@mR
 11707  00323C  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11708  003240  0E02               	movlw	2
 11709  003242  6E24               	movwf	turn45@turn_time^0,c
 11710  003244  0E02               	movlw	2
 11711  003246  6E25               	movwf	turn45@direction^0,c
 11712  003248  ECA2  F01E         	call	_turn45	;wreg free
 11713  00324C                     
 11714                           ;movement.c: 44:             memory[array_index] = 4;
 11715  00324C  0101               	movlb	1	; () banked
 11716  00324E  51D6               	movf	_array_index& (0+255),w,b
 11717  003250  0D02               	mullw	2
 11718  003252  0EA7               	movlw	low _memory
 11719  003254  24F3               	addwf	243,w,c
 11720  003256  6ED9               	movwf	fsr2l,c
 11721  003258  0E01               	movlw	high _memory
 11722  00325A  20F4               	addwfc	prodh,w,c
 11723  00325C  6EDA               	movwf	fsr2h,c
 11724  00325E  0E04               	movlw	4
 11725  003260  6EDE               	movwf	postinc2,c
 11726  003262  0E00               	movlw	0
 11727  003264  6EDD               	movwf	postdec2,c
 11728  003266                     
 11729                           ; BSR set to: 1
 11730                           ;movement.c: 45:             array_index++;
 11731  003266  2BD6               	incf	_array_index& (0+255),f,b
 11732  003268                     l5455:
 11733                           
 11734                           ;movement.c: 47:         if (color == 5){
 11735  003268  0E05               	movlw	5
 11736  00326A  183C               	xorwf	action@color^0,w,c
 11737  00326C  A4D8               	btfss	status,2,c
 11738  00326E  EF3B  F019         	goto	u5851
 11739  003272  EF3D  F019         	goto	u5850
 11740  003276                     u5851:
 11741  003276  EF65  F019         	goto	l5463
 11742  00327A                     u5850:
 11743  00327A                     
 11744                           ;movement.c: 48:             short_reverse(mL,mR,3);
 11745  00327A  C038  F020         	movff	action@mL,short_reverse@mL
 11746  00327E  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11747  003282  C03A  F022         	movff	action@mR,short_reverse@mR
 11748  003286  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11749  00328A  0E03               	movlw	3
 11750  00328C  6E24               	movwf	short_reverse@instruction^0,c
 11751  00328E  ECF5  F029         	call	_short_reverse	;wreg free
 11752                           
 11753                           ;movement.c: 49:             turn45(mL, mR, 2, 1);
 11754  003292  C038  F020         	movff	action@mL,turn45@mL
 11755  003296  C039  F021         	movff	action@mL+1,turn45@mL+1
 11756  00329A  C03A  F022         	movff	action@mR,turn45@mR
 11757  00329E  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11758  0032A2  0E02               	movlw	2
 11759  0032A4  6E24               	movwf	turn45@turn_time^0,c
 11760  0032A6  0E01               	movlw	1
 11761  0032A8  6E25               	movwf	turn45@direction^0,c
 11762  0032AA  ECA2  F01E         	call	_turn45	;wreg free
 11763  0032AE                     
 11764                           ;movement.c: 51:             memory[array_index] = 5;
 11765  0032AE  0101               	movlb	1	; () banked
 11766  0032B0  51D6               	movf	_array_index& (0+255),w,b
 11767  0032B2  0D02               	mullw	2
 11768  0032B4  0EA7               	movlw	low _memory
 11769  0032B6  24F3               	addwf	243,w,c
 11770  0032B8  6ED9               	movwf	fsr2l,c
 11771  0032BA  0E01               	movlw	high _memory
 11772  0032BC  20F4               	addwfc	prodh,w,c
 11773  0032BE  6EDA               	movwf	fsr2h,c
 11774  0032C0  0E05               	movlw	5
 11775  0032C2  6EDE               	movwf	postinc2,c
 11776  0032C4  0E00               	movlw	0
 11777  0032C6  6EDD               	movwf	postdec2,c
 11778  0032C8                     
 11779                           ; BSR set to: 1
 11780                           ;movement.c: 52:             array_index++;
 11781  0032C8  2BD6               	incf	_array_index& (0+255),f,b
 11782  0032CA                     l5463:
 11783                           
 11784                           ;movement.c: 54:         if (color == 6){
 11785  0032CA  0E06               	movlw	6
 11786  0032CC  183C               	xorwf	action@color^0,w,c
 11787  0032CE  A4D8               	btfss	status,2,c
 11788  0032D0  EF6C  F019         	goto	u5861
 11789  0032D4  EF6E  F019         	goto	u5860
 11790  0032D8                     u5861:
 11791  0032D8  EF96  F019         	goto	l5471
 11792  0032DC                     u5860:
 11793  0032DC                     
 11794                           ;movement.c: 55:             short_reverse(mL,mR,1);
 11795  0032DC  C038  F020         	movff	action@mL,short_reverse@mL
 11796  0032E0  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11797  0032E4  C03A  F022         	movff	action@mR,short_reverse@mR
 11798  0032E8  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11799  0032EC  0E01               	movlw	1
 11800  0032EE  6E24               	movwf	short_reverse@instruction^0,c
 11801  0032F0  ECF5  F029         	call	_short_reverse	;wreg free
 11802                           
 11803                           ;movement.c: 56:             turn45(mL, mR, 3, 2);
 11804  0032F4  C038  F020         	movff	action@mL,turn45@mL
 11805  0032F8  C039  F021         	movff	action@mL+1,turn45@mL+1
 11806  0032FC  C03A  F022         	movff	action@mR,turn45@mR
 11807  003300  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11808  003304  0E03               	movlw	3
 11809  003306  6E24               	movwf	turn45@turn_time^0,c
 11810  003308  0E02               	movlw	2
 11811  00330A  6E25               	movwf	turn45@direction^0,c
 11812  00330C  ECA2  F01E         	call	_turn45	;wreg free
 11813  003310                     
 11814                           ;movement.c: 58:             memory[array_index] = 6;
 11815  003310  0101               	movlb	1	; () banked
 11816  003312  51D6               	movf	_array_index& (0+255),w,b
 11817  003314  0D02               	mullw	2
 11818  003316  0EA7               	movlw	low _memory
 11819  003318  24F3               	addwf	243,w,c
 11820  00331A  6ED9               	movwf	fsr2l,c
 11821  00331C  0E01               	movlw	high _memory
 11822  00331E  20F4               	addwfc	prodh,w,c
 11823  003320  6EDA               	movwf	fsr2h,c
 11824  003322  0E06               	movlw	6
 11825  003324  6EDE               	movwf	postinc2,c
 11826  003326  0E00               	movlw	0
 11827  003328  6EDD               	movwf	postdec2,c
 11828  00332A                     
 11829                           ; BSR set to: 1
 11830                           ;movement.c: 59:             array_index++;
 11831  00332A  2BD6               	incf	_array_index& (0+255),f,b
 11832  00332C                     l5471:
 11833                           
 11834                           ;movement.c: 61:         if (color == 7){
 11835  00332C  0E07               	movlw	7
 11836  00332E  183C               	xorwf	action@color^0,w,c
 11837  003330  A4D8               	btfss	status,2,c
 11838  003332  EF9D  F019         	goto	u5871
 11839  003336  EF9F  F019         	goto	u5870
 11840  00333A                     u5871:
 11841  00333A  EFC7  F019         	goto	l5479
 11842  00333E                     u5870:
 11843  00333E                     
 11844                           ;movement.c: 62:             short_reverse(mL,mR,1);
 11845  00333E  C038  F020         	movff	action@mL,short_reverse@mL
 11846  003342  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11847  003346  C03A  F022         	movff	action@mR,short_reverse@mR
 11848  00334A  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11849  00334E  0E01               	movlw	1
 11850  003350  6E24               	movwf	short_reverse@instruction^0,c
 11851  003352  ECF5  F029         	call	_short_reverse	;wreg free
 11852                           
 11853                           ;movement.c: 63:             turn45(mL, mR, 3, 1);
 11854  003356  C038  F020         	movff	action@mL,turn45@mL
 11855  00335A  C039  F021         	movff	action@mL+1,turn45@mL+1
 11856  00335E  C03A  F022         	movff	action@mR,turn45@mR
 11857  003362  C03B  F023         	movff	action@mR+1,turn45@mR+1
 11858  003366  0E03               	movlw	3
 11859  003368  6E24               	movwf	turn45@turn_time^0,c
 11860  00336A  0E01               	movlw	1
 11861  00336C  6E25               	movwf	turn45@direction^0,c
 11862  00336E  ECA2  F01E         	call	_turn45	;wreg free
 11863  003372                     
 11864                           ;movement.c: 65:             memory[array_index] = 7;
 11865  003372  0101               	movlb	1	; () banked
 11866  003374  51D6               	movf	_array_index& (0+255),w,b
 11867  003376  0D02               	mullw	2
 11868  003378  0EA7               	movlw	low _memory
 11869  00337A  24F3               	addwf	243,w,c
 11870  00337C  6ED9               	movwf	fsr2l,c
 11871  00337E  0E01               	movlw	high _memory
 11872  003380  20F4               	addwfc	prodh,w,c
 11873  003382  6EDA               	movwf	fsr2h,c
 11874  003384  0E07               	movlw	7
 11875  003386  6EDE               	movwf	postinc2,c
 11876  003388  0E00               	movlw	0
 11877  00338A  6EDD               	movwf	postdec2,c
 11878  00338C                     
 11879                           ; BSR set to: 1
 11880                           ;movement.c: 66:             array_index++;
 11881  00338C  2BD6               	incf	_array_index& (0+255),f,b
 11882  00338E                     l5479:
 11883                           
 11884                           ;movement.c: 68:         if (color == 8){
 11885  00338E  0E08               	movlw	8
 11886  003390  183C               	xorwf	action@color^0,w,c
 11887  003392  A4D8               	btfss	status,2,c
 11888  003394  EFCE  F019         	goto	u5881
 11889  003398  EFD0  F019         	goto	u5880
 11890  00339C                     u5881:
 11891  00339C  EFEB  F019         	goto	l569
 11892  0033A0                     u5880:
 11893  0033A0                     
 11894                           ;movement.c: 69:             toggle_light(2,1);
 11895  0033A0  0E01               	movlw	1
 11896  0033A2  6E01               	movwf	toggle_light@toggletime^0,c
 11897  0033A4  0E02               	movlw	2
 11898  0033A6  EC5D  F01B         	call	_toggle_light
 11899  0033AA                     
 11900                           ;movement.c: 70:             short_reverse(mL,mR,1);
 11901  0033AA  C038  F020         	movff	action@mL,short_reverse@mL
 11902  0033AE  C039  F021         	movff	action@mL+1,short_reverse@mL+1
 11903  0033B2  C03A  F022         	movff	action@mR,short_reverse@mR
 11904  0033B6  C03B  F023         	movff	action@mR+1,short_reverse@mR+1
 11905  0033BA  0E01               	movlw	1
 11906  0033BC  6E24               	movwf	short_reverse@instruction^0,c
 11907  0033BE  ECF5  F029         	call	_short_reverse	;wreg free
 11908  0033C2                     
 11909                           ;movement.c: 71:             goback(mL,mR);
 11910  0033C2  C038  F030         	movff	action@mL,goback@mL
 11911  0033C6  C039  F031         	movff	action@mL+1,goback@mL+1
 11912  0033CA  C03A  F032         	movff	action@mR,goback@mR
 11913  0033CE  C03B  F033         	movff	action@mR+1,goback@mR+1
 11914  0033D2  EC25  F015         	call	_goback	;wreg free
 11915  0033D6                     l569:
 11916  0033D6  0012               	return		;funcret
 11917  0033D8                     __end_of_action:
 11918                           	callstack 0
 11919                           
 11920 ;; *************** function _toggle_light *****************
 11921 ;; Defined at:
 11922 ;;		line 29 in file "color.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;  lightnumber     1    wreg     unsigned char 
 11925 ;;  toggletime      1    0[COMRAM] unsigned char 
 11926 ;; Auto vars:     Size  Location     Type
 11927 ;;  lightnumber     1    4[COMRAM] unsigned char 
 11928 ;;  i               1    3[COMRAM] unsigned char 
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      void 
 11931 ;; Registers used:
 11932 ;;		wreg, status,2, status,0
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11938 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11941 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11942 ;;Total ram usage:        5 bytes
 11943 ;; Hardware stack levels used: 1
 11944 ;; Hardware stack levels required when called: 1
 11945 ;; This function calls:
 11946 ;;		Nothing
 11947 ;; This function is called by:
 11948 ;;		_calibrate_white
 11949 ;;		_detect_color
 11950 ;;		_amb_light_measure
 11951 ;;		_action
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           	psect	text62
 11956  0036BA                     __ptext62:
 11957                           	callstack 0
 11958  0036BA                     _toggle_light:
 11959                           	callstack 27
 11960                           
 11961                           ;incstack = 0
 11962                           ;toggle_light@lightnumber stored from wreg
 11963  0036BA  6E05               	movwf	toggle_light@lightnumber^0,c
 11964  0036BC                     
 11965                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
 11966  0036BC  0E00               	movlw	0
 11967  0036BE  6E04               	movwf	toggle_light@i^0,c
 11968                           
 11969                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
 11970  0036C0  0E00               	movlw	0
 11971  0036C2  6E04               	movwf	toggle_light@i^0,c
 11972  0036C4  EFA9  F01C         	goto	l58
 11973  0036C8                     l4417:
 11974                           
 11975                           ;color.c: 34:         if (lightnumber == 1){
 11976  0036C8  0405               	decf	toggle_light@lightnumber^0,w,c
 11977  0036CA  A4D8               	btfss	status,2,c
 11978  0036CC  EF6A  F01B         	goto	u4491
 11979  0036D0  EF6C  F01B         	goto	u4490
 11980  0036D4                     u4491:
 11981  0036D4  EFA4  F01B         	goto	l4425
 11982  0036D8                     u4490:
 11983  0036D8                     
 11984                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
 11985  0036D8  A280               	btfss	128,1,c	;volatile
 11986  0036DA  EF71  F01B         	goto	u4501
 11987  0036DE  EF75  F01B         	goto	u4500
 11988  0036E2                     u4501:
 11989  0036E2  6A02               	clrf	??_toggle_light^0,c
 11990  0036E4  2A02               	incf	??_toggle_light^0,f,c
 11991  0036E6  EF76  F01B         	goto	u4518
 11992  0036EA                     u4500:
 11993  0036EA  6A02               	clrf	??_toggle_light^0,c
 11994  0036EC                     u4518:
 11995  0036EC  4602               	rlncf	??_toggle_light^0,f,c
 11996  0036EE  5080               	movf	128,w,c	;volatile
 11997  0036F0  1802               	xorwf	??_toggle_light^0,w,c
 11998  0036F2  0BFD               	andlw	-3
 11999  0036F4  1802               	xorwf	??_toggle_light^0,w,c
 12000  0036F6  6E80               	movwf	128,c	;volatile
 12001  0036F8                     
 12002                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12003  0036F8  0E29               	movlw	41
 12004  0036FA  6E03               	movwf	(??_toggle_light+1)^0,c
 12005  0036FC  0E96               	movlw	150
 12006  0036FE  6E02               	movwf	??_toggle_light^0,c
 12007  003700  0E7F               	movlw	127
 12008  003702                     u6517:
 12009  003702  2EE8               	decfsz	wreg,f,c
 12010  003704  D7FE               	bra	u6517
 12011  003706  2E02               	decfsz	??_toggle_light^0,f,c
 12012  003708  D7FC               	bra	u6517
 12013  00370A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12014  00370C  D7FA               	bra	u6517
 12015  00370E  F000               	nop	
 12016  003710                     
 12017                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
 12018  003710  A280               	btfss	128,1,c	;volatile
 12019  003712  EF8D  F01B         	goto	u4521
 12020  003716  EF91  F01B         	goto	u4520
 12021  00371A                     u4521:
 12022  00371A  6A02               	clrf	??_toggle_light^0,c
 12023  00371C  2A02               	incf	??_toggle_light^0,f,c
 12024  00371E  EF92  F01B         	goto	u4538
 12025  003722                     u4520:
 12026  003722  6A02               	clrf	??_toggle_light^0,c
 12027  003724                     u4538:
 12028  003724  4602               	rlncf	??_toggle_light^0,f,c
 12029  003726  5080               	movf	128,w,c	;volatile
 12030  003728  1802               	xorwf	??_toggle_light^0,w,c
 12031  00372A  0BFD               	andlw	-3
 12032  00372C  1802               	xorwf	??_toggle_light^0,w,c
 12033  00372E  6E80               	movwf	128,c	;volatile
 12034                           
 12035                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12036  003730  0E29               	movlw	41
 12037  003732  6E03               	movwf	(??_toggle_light+1)^0,c
 12038  003734  0E96               	movlw	150
 12039  003736  6E02               	movwf	??_toggle_light^0,c
 12040  003738  0E7F               	movlw	127
 12041  00373A                     u6527:
 12042  00373A  2EE8               	decfsz	wreg,f,c
 12043  00373C  D7FE               	bra	u6527
 12044  00373E  2E02               	decfsz	??_toggle_light^0,f,c
 12045  003740  D7FC               	bra	u6527
 12046  003742  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12047  003744  D7FA               	bra	u6527
 12048  003746  F000               	nop	
 12049  003748                     l4425:
 12050                           
 12051                           ;color.c: 40:         if (lightnumber == 2){
 12052  003748  0E02               	movlw	2
 12053  00374A  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12054  00374C  A4D8               	btfss	status,2,c
 12055  00374E  EFAB  F01B         	goto	u4541
 12056  003752  EFAD  F01B         	goto	u4540
 12057  003756                     u4541:
 12058  003756  EFE5  F01B         	goto	l4433
 12059  00375A                     u4540:
 12060  00375A                     
 12061                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
 12062  00375A  A87C               	btfss	124,4,c	;volatile
 12063  00375C  EFB2  F01B         	goto	u4551
 12064  003760  EFB6  F01B         	goto	u4550
 12065  003764                     u4551:
 12066  003764  6A02               	clrf	??_toggle_light^0,c
 12067  003766  2A02               	incf	??_toggle_light^0,f,c
 12068  003768  EFB7  F01B         	goto	u4568
 12069  00376C                     u4550:
 12070  00376C  6A02               	clrf	??_toggle_light^0,c
 12071  00376E                     u4568:
 12072  00376E  3A02               	swapf	??_toggle_light^0,f,c
 12073  003770  507C               	movf	124,w,c	;volatile
 12074  003772  1802               	xorwf	??_toggle_light^0,w,c
 12075  003774  0BEF               	andlw	-17
 12076  003776  1802               	xorwf	??_toggle_light^0,w,c
 12077  003778  6E7C               	movwf	124,c	;volatile
 12078  00377A                     
 12079                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12080  00377A  0E29               	movlw	41
 12081  00377C  6E03               	movwf	(??_toggle_light+1)^0,c
 12082  00377E  0E96               	movlw	150
 12083  003780  6E02               	movwf	??_toggle_light^0,c
 12084  003782  0E7F               	movlw	127
 12085  003784                     u6537:
 12086  003784  2EE8               	decfsz	wreg,f,c
 12087  003786  D7FE               	bra	u6537
 12088  003788  2E02               	decfsz	??_toggle_light^0,f,c
 12089  00378A  D7FC               	bra	u6537
 12090  00378C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12091  00378E  D7FA               	bra	u6537
 12092  003790  F000               	nop	
 12093  003792                     
 12094                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
 12095  003792  A87C               	btfss	124,4,c	;volatile
 12096  003794  EFCE  F01B         	goto	u4571
 12097  003798  EFD2  F01B         	goto	u4570
 12098  00379C                     u4571:
 12099  00379C  6A02               	clrf	??_toggle_light^0,c
 12100  00379E  2A02               	incf	??_toggle_light^0,f,c
 12101  0037A0  EFD3  F01B         	goto	u4588
 12102  0037A4                     u4570:
 12103  0037A4  6A02               	clrf	??_toggle_light^0,c
 12104  0037A6                     u4588:
 12105  0037A6  3A02               	swapf	??_toggle_light^0,f,c
 12106  0037A8  507C               	movf	124,w,c	;volatile
 12107  0037AA  1802               	xorwf	??_toggle_light^0,w,c
 12108  0037AC  0BEF               	andlw	-17
 12109  0037AE  1802               	xorwf	??_toggle_light^0,w,c
 12110  0037B0  6E7C               	movwf	124,c	;volatile
 12111                           
 12112                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12113  0037B2  0E29               	movlw	41
 12114  0037B4  6E03               	movwf	(??_toggle_light+1)^0,c
 12115  0037B6  0E96               	movlw	150
 12116  0037B8  6E02               	movwf	??_toggle_light^0,c
 12117  0037BA  0E7F               	movlw	127
 12118  0037BC                     u6547:
 12119  0037BC  2EE8               	decfsz	wreg,f,c
 12120  0037BE  D7FE               	bra	u6547
 12121  0037C0  2E02               	decfsz	??_toggle_light^0,f,c
 12122  0037C2  D7FC               	bra	u6547
 12123  0037C4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12124  0037C6  D7FA               	bra	u6547
 12125  0037C8  F000               	nop	
 12126  0037CA                     l4433:
 12127                           
 12128                           ;color.c: 46:         if (lightnumber == 3){
 12129  0037CA  0E03               	movlw	3
 12130  0037CC  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12131  0037CE  A4D8               	btfss	status,2,c
 12132  0037D0  EFEC  F01B         	goto	u4591
 12133  0037D4  EFEE  F01B         	goto	u4590
 12134  0037D8                     u4591:
 12135  0037D8  EF2A  F01C         	goto	l4441
 12136  0037DC                     u4590:
 12137  0037DC                     
 12138                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
 12139  0037DC  A67C               	btfss	124,3,c	;volatile
 12140  0037DE  EFF3  F01B         	goto	u4601
 12141  0037E2  EFF7  F01B         	goto	u4600
 12142  0037E6                     u4601:
 12143  0037E6  6A02               	clrf	??_toggle_light^0,c
 12144  0037E8  2A02               	incf	??_toggle_light^0,f,c
 12145  0037EA  EFF8  F01B         	goto	u4618
 12146  0037EE                     u4600:
 12147  0037EE  6A02               	clrf	??_toggle_light^0,c
 12148  0037F0                     u4618:
 12149  0037F0  4602               	rlncf	??_toggle_light^0,f,c
 12150  0037F2  4602               	rlncf	??_toggle_light^0,f,c
 12151  0037F4  4602               	rlncf	??_toggle_light^0,f,c
 12152  0037F6  507C               	movf	124,w,c	;volatile
 12153  0037F8  1802               	xorwf	??_toggle_light^0,w,c
 12154  0037FA  0BF7               	andlw	-9
 12155  0037FC  1802               	xorwf	??_toggle_light^0,w,c
 12156  0037FE  6E7C               	movwf	124,c	;volatile
 12157  003800                     
 12158                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12159  003800  0E29               	movlw	41
 12160  003802  6E03               	movwf	(??_toggle_light+1)^0,c
 12161  003804  0E96               	movlw	150
 12162  003806  6E02               	movwf	??_toggle_light^0,c
 12163  003808  0E7F               	movlw	127
 12164  00380A                     u6557:
 12165  00380A  2EE8               	decfsz	wreg,f,c
 12166  00380C  D7FE               	bra	u6557
 12167  00380E  2E02               	decfsz	??_toggle_light^0,f,c
 12168  003810  D7FC               	bra	u6557
 12169  003812  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12170  003814  D7FA               	bra	u6557
 12171  003816  F000               	nop	
 12172  003818                     
 12173                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
 12174  003818  A67C               	btfss	124,3,c	;volatile
 12175  00381A  EF11  F01C         	goto	u4621
 12176  00381E  EF15  F01C         	goto	u4620
 12177  003822                     u4621:
 12178  003822  6A02               	clrf	??_toggle_light^0,c
 12179  003824  2A02               	incf	??_toggle_light^0,f,c
 12180  003826  EF16  F01C         	goto	u4638
 12181  00382A                     u4620:
 12182  00382A  6A02               	clrf	??_toggle_light^0,c
 12183  00382C                     u4638:
 12184  00382C  4602               	rlncf	??_toggle_light^0,f,c
 12185  00382E  4602               	rlncf	??_toggle_light^0,f,c
 12186  003830  4602               	rlncf	??_toggle_light^0,f,c
 12187  003832  507C               	movf	124,w,c	;volatile
 12188  003834  1802               	xorwf	??_toggle_light^0,w,c
 12189  003836  0BF7               	andlw	-9
 12190  003838  1802               	xorwf	??_toggle_light^0,w,c
 12191  00383A  6E7C               	movwf	124,c	;volatile
 12192                           
 12193                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12194  00383C  0E29               	movlw	41
 12195  00383E  6E03               	movwf	(??_toggle_light+1)^0,c
 12196  003840  0E96               	movlw	150
 12197  003842  6E02               	movwf	??_toggle_light^0,c
 12198  003844  0E7F               	movlw	127
 12199  003846                     u6567:
 12200  003846  2EE8               	decfsz	wreg,f,c
 12201  003848  D7FE               	bra	u6567
 12202  00384A  2E02               	decfsz	??_toggle_light^0,f,c
 12203  00384C  D7FC               	bra	u6567
 12204  00384E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12205  003850  D7FA               	bra	u6567
 12206  003852  F000               	nop	
 12207  003854                     l4441:
 12208                           
 12209                           ;color.c: 52:         if (lightnumber == 4){
 12210  003854  0E04               	movlw	4
 12211  003856  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12212  003858  A4D8               	btfss	status,2,c
 12213  00385A  EF31  F01C         	goto	u4641
 12214  00385E  EF33  F01C         	goto	u4640
 12215  003862                     u4641:
 12216  003862  EF69  F01C         	goto	l4449
 12217  003866                     u4640:
 12218  003866                     
 12219                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
 12220  003866  A07E               	btfss	126,0,c	;volatile
 12221  003868  EF38  F01C         	goto	u4651
 12222  00386C  EF3C  F01C         	goto	u4650
 12223  003870                     u4651:
 12224  003870  6A02               	clrf	??_toggle_light^0,c
 12225  003872  2A02               	incf	??_toggle_light^0,f,c
 12226  003874  EF3D  F01C         	goto	u4668
 12227  003878                     u4650:
 12228  003878  6A02               	clrf	??_toggle_light^0,c
 12229  00387A                     u4668:
 12230  00387A  507E               	movf	126,w,c	;volatile
 12231  00387C  1802               	xorwf	??_toggle_light^0,w,c
 12232  00387E  0BFE               	andlw	-2
 12233  003880  1802               	xorwf	??_toggle_light^0,w,c
 12234  003882  6E7E               	movwf	126,c	;volatile
 12235  003884                     
 12236                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12237  003884  0E29               	movlw	41
 12238  003886  6E03               	movwf	(??_toggle_light+1)^0,c
 12239  003888  0E96               	movlw	150
 12240  00388A  6E02               	movwf	??_toggle_light^0,c
 12241  00388C  0E7F               	movlw	127
 12242  00388E                     u6577:
 12243  00388E  2EE8               	decfsz	wreg,f,c
 12244  003890  D7FE               	bra	u6577
 12245  003892  2E02               	decfsz	??_toggle_light^0,f,c
 12246  003894  D7FC               	bra	u6577
 12247  003896  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12248  003898  D7FA               	bra	u6577
 12249  00389A  F000               	nop	
 12250  00389C                     
 12251                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
 12252  00389C  A07E               	btfss	126,0,c	;volatile
 12253  00389E  EF53  F01C         	goto	u4671
 12254  0038A2  EF57  F01C         	goto	u4670
 12255  0038A6                     u4671:
 12256  0038A6  6A02               	clrf	??_toggle_light^0,c
 12257  0038A8  2A02               	incf	??_toggle_light^0,f,c
 12258  0038AA  EF58  F01C         	goto	u4688
 12259  0038AE                     u4670:
 12260  0038AE  6A02               	clrf	??_toggle_light^0,c
 12261  0038B0                     u4688:
 12262  0038B0  507E               	movf	126,w,c	;volatile
 12263  0038B2  1802               	xorwf	??_toggle_light^0,w,c
 12264  0038B4  0BFE               	andlw	-2
 12265  0038B6  1802               	xorwf	??_toggle_light^0,w,c
 12266  0038B8  6E7E               	movwf	126,c	;volatile
 12267                           
 12268                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12269  0038BA  0E29               	movlw	41
 12270  0038BC  6E03               	movwf	(??_toggle_light+1)^0,c
 12271  0038BE  0E96               	movlw	150
 12272  0038C0  6E02               	movwf	??_toggle_light^0,c
 12273  0038C2  0E7F               	movlw	127
 12274  0038C4                     u6587:
 12275  0038C4  2EE8               	decfsz	wreg,f,c
 12276  0038C6  D7FE               	bra	u6587
 12277  0038C8  2E02               	decfsz	??_toggle_light^0,f,c
 12278  0038CA  D7FC               	bra	u6587
 12279  0038CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12280  0038CE  D7FA               	bra	u6587
 12281  0038D0  F000               	nop	
 12282  0038D2                     l4449:
 12283                           
 12284                           ;color.c: 58:         if (lightnumber == 3){
 12285  0038D2  0E03               	movlw	3
 12286  0038D4  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12287  0038D6  A4D8               	btfss	status,2,c
 12288  0038D8  EF70  F01C         	goto	u4691
 12289  0038DC  EF72  F01C         	goto	u4690
 12290  0038E0                     u4691:
 12291  0038E0  EFA8  F01C         	goto	l4457
 12292  0038E4                     u4690:
 12293  0038E4                     
 12294                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 12295  0038E4  A080               	btfss	128,0,c	;volatile
 12296  0038E6  EF77  F01C         	goto	u4701
 12297  0038EA  EF7B  F01C         	goto	u4700
 12298  0038EE                     u4701:
 12299  0038EE  6A02               	clrf	??_toggle_light^0,c
 12300  0038F0  2A02               	incf	??_toggle_light^0,f,c
 12301  0038F2  EF7C  F01C         	goto	u4718
 12302  0038F6                     u4700:
 12303  0038F6  6A02               	clrf	??_toggle_light^0,c
 12304  0038F8                     u4718:
 12305  0038F8  5080               	movf	128,w,c	;volatile
 12306  0038FA  1802               	xorwf	??_toggle_light^0,w,c
 12307  0038FC  0BFE               	andlw	-2
 12308  0038FE  1802               	xorwf	??_toggle_light^0,w,c
 12309  003900  6E80               	movwf	128,c	;volatile
 12310  003902                     
 12311                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12312  003902  0E29               	movlw	41
 12313  003904  6E03               	movwf	(??_toggle_light+1)^0,c
 12314  003906  0E96               	movlw	150
 12315  003908  6E02               	movwf	??_toggle_light^0,c
 12316  00390A  0E7F               	movlw	127
 12317  00390C                     u6597:
 12318  00390C  2EE8               	decfsz	wreg,f,c
 12319  00390E  D7FE               	bra	u6597
 12320  003910  2E02               	decfsz	??_toggle_light^0,f,c
 12321  003912  D7FC               	bra	u6597
 12322  003914  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12323  003916  D7FA               	bra	u6597
 12324  003918  F000               	nop	
 12325  00391A                     
 12326                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 12327  00391A  A080               	btfss	128,0,c	;volatile
 12328  00391C  EF92  F01C         	goto	u4721
 12329  003920  EF96  F01C         	goto	u4720
 12330  003924                     u4721:
 12331  003924  6A02               	clrf	??_toggle_light^0,c
 12332  003926  2A02               	incf	??_toggle_light^0,f,c
 12333  003928  EF97  F01C         	goto	u4738
 12334  00392C                     u4720:
 12335  00392C  6A02               	clrf	??_toggle_light^0,c
 12336  00392E                     u4738:
 12337  00392E  5080               	movf	128,w,c	;volatile
 12338  003930  1802               	xorwf	??_toggle_light^0,w,c
 12339  003932  0BFE               	andlw	-2
 12340  003934  1802               	xorwf	??_toggle_light^0,w,c
 12341  003936  6E80               	movwf	128,c	;volatile
 12342                           
 12343                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12344  003938  0E29               	movlw	41
 12345  00393A  6E03               	movwf	(??_toggle_light+1)^0,c
 12346  00393C  0E96               	movlw	150
 12347  00393E  6E02               	movwf	??_toggle_light^0,c
 12348  003940  0E7F               	movlw	127
 12349  003942                     u6607:
 12350  003942  2EE8               	decfsz	wreg,f,c
 12351  003944  D7FE               	bra	u6607
 12352  003946  2E02               	decfsz	??_toggle_light^0,f,c
 12353  003948  D7FC               	bra	u6607
 12354  00394A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12355  00394C  D7FA               	bra	u6607
 12356  00394E  F000               	nop	
 12357  003950                     l4457:
 12358                           
 12359                           ;color.c: 64:     }
 12360  003950  2A04               	incf	toggle_light@i^0,f,c
 12361  003952                     l58:
 12362  003952  5001               	movf	toggle_light@toggletime^0,w,c
 12363  003954  5C04               	subwf	toggle_light@i^0,w,c
 12364  003956  A0D8               	btfss	status,0,c
 12365  003958  EFB0  F01C         	goto	u4741
 12366  00395C  EFB2  F01C         	goto	u4740
 12367  003960                     u4741:
 12368  003960  EF64  F01B         	goto	l4417
 12369  003964                     u4740:
 12370  003964  0012               	return		;funcret
 12371  003966                     __end_of_toggle_light:
 12372                           	callstack 0
 12373                           
 12374 ;; *************** function _goback *****************
 12375 ;; Defined at:
 12376 ;;		line 99 in file "movement.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;  mL              2   47[COMRAM] PTR struct DC_motor
 12379 ;;		 -> main@motorL(9), 
 12380 ;;  mR              2   49[COMRAM] PTR struct DC_motor
 12381 ;;		 -> main@motorR(9), 
 12382 ;; Auto vars:     Size  Location     Type
 12383 ;;  i               2   53[COMRAM] unsigned int 
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  1    wreg      void 
 12386 ;; Registers used:
 12387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12388 ;; Tracked objects:
 12389 ;;		On entry : 0/0
 12390 ;;		On exit  : 0/0
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12394 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12395 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12396 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;Total ram usage:        8 bytes
 12398 ;; Hardware stack levels used: 1
 12399 ;; Hardware stack levels required when called: 5
 12400 ;; This function calls:
 12401 ;;		_fullSpeedAhead
 12402 ;;		_short_reverse
 12403 ;;		_stop
 12404 ;;		_turn45
 12405 ;; This function is called by:
 12406 ;;		_main
 12407 ;;		_action
 12408 ;; This function uses a non-reentrant model
 12409 ;;
 12410                           
 12411                           	psect	text63
 12412  002A4A                     __ptext63:
 12413                           	callstack 0
 12414  002A4A                     _goback:
 12415                           	callstack 25
 12416  002A4A                     l5033:
 12417                           
 12418                           ;movement.c: 99: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 100: 
      +                          { turn45(mL, mR, 4, 1);
 12419  002A4A  C030  F020         	movff	goback@mL,turn45@mL
 12420  002A4E  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12421  002A52  C032  F022         	movff	goback@mR,turn45@mR
 12422  002A56  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12423  002A5A  0E04               	movlw	4
 12424  002A5C  6E24               	movwf	turn45@turn_time^0,c
 12425  002A5E  0E01               	movlw	1
 12426  002A60  6E25               	movwf	turn45@direction^0,c
 12427  002A62  ECA2  F01E         	call	_turn45	;wreg free
 12428                           
 12429                           ;movement.c: 102:     short_reverse(mL,mR,2);
 12430  002A66  C030  F020         	movff	goback@mL,short_reverse@mL
 12431  002A6A  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12432  002A6E  C032  F022         	movff	goback@mR,short_reverse@mR
 12433  002A72  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12434  002A76  0E02               	movlw	2
 12435  002A78  6E24               	movwf	short_reverse@instruction^0,c
 12436  002A7A  ECF5  F029         	call	_short_reverse	;wreg free
 12437  002A7E                     l5035:
 12438                           
 12439                           ;movement.c: 103:     array_index--;
 12440  002A7E  0101               	movlb	1	; () banked
 12441  002A80  07D6               	decf	_array_index& (0+255),f,b
 12442  002A82                     l5037:
 12443                           
 12444                           ; BSR set to: 1
 12445                           ;movement.c: 105:         fullSpeedAhead(mL,mR);
 12446  002A82  C030  F01A         	movff	goback@mL,fullSpeedAhead@mL
 12447  002A86  C031  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 12448  002A8A  C032  F01C         	movff	goback@mR,fullSpeedAhead@mR
 12449  002A8E  C033  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 12450  002A92  ECD2  F028         	call	_fullSpeedAhead	;wreg free
 12451  002A96                     
 12452                           ;movement.c: 106:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
 12453  002A96  0E00               	movlw	0
 12454  002A98  6E37               	movwf	(goback@i+1)^0,c
 12455  002A9A  0E00               	movlw	0
 12456  002A9C  6E36               	movwf	goback@i^0,c
 12457  002A9E  EF5F  F015         	goto	l5045
 12458  002AA2                     l5041:
 12459                           
 12460                           ; BSR set to: 1
 12461  002AA2  0E09               	movlw	9
 12462  002AA4  6E35               	movwf	(??_goback+1)^0,c
 12463  002AA6  0E1E               	movlw	30
 12464  002AA8  6E34               	movwf	??_goback^0,c
 12465  002AAA  0EE4               	movlw	228
 12466  002AAC                     u6617:
 12467  002AAC  2EE8               	decfsz	wreg,f,c
 12468  002AAE  D7FE               	bra	u6617
 12469  002AB0  2E34               	decfsz	??_goback^0,f,c
 12470  002AB2  D7FC               	bra	u6617
 12471  002AB4  2E35               	decfsz	(??_goback+1)^0,f,c
 12472  002AB6  D7FA               	bra	u6617
 12473  002AB8  D000               	nop2	
 12474  002ABA  4A36               	infsnz	goback@i^0,f,c
 12475  002ABC  2A37               	incf	(goback@i+1)^0,f,c
 12476  002ABE                     l5045:
 12477  002ABE  0101               	movlb	1	; () banked
 12478  002AC0  51D6               	movf	_array_index& (0+255),w,b
 12479  002AC2  0D02               	mullw	2
 12480  002AC4  0EA7               	movlw	low _memory
 12481  002AC6  24F3               	addwf	243,w,c
 12482  002AC8  6ED9               	movwf	fsr2l,c
 12483  002ACA  0E01               	movlw	high _memory
 12484  002ACC  20F4               	addwfc	prodh,w,c
 12485  002ACE  6EDA               	movwf	fsr2h,c
 12486  002AD0  50DE               	movf	postinc2,w,c
 12487  002AD2  5C36               	subwf	goback@i^0,w,c
 12488  002AD4  50DE               	movf	postinc2,w,c
 12489  002AD6  5837               	subwfb	(goback@i+1)^0,w,c
 12490  002AD8  A0D8               	btfss	status,0,c
 12491  002ADA  EF71  F015         	goto	u5551
 12492  002ADE  EF73  F015         	goto	u5550
 12493  002AE2                     u5551:
 12494  002AE2  EF51  F015         	goto	l5041
 12495  002AE6                     u5550:
 12496  002AE6                     
 12497                           ; BSR set to: 1
 12498                           ;movement.c: 107:         stop(mL,mR);
 12499  002AE6  C030  F01A         	movff	goback@mL,stop@mL
 12500  002AEA  C031  F01B         	movff	goback@mL+1,stop@mL+1
 12501  002AEE  C032  F01C         	movff	goback@mR,stop@mR
 12502  002AF2  C033  F01D         	movff	goback@mR+1,stop@mR+1
 12503  002AF6  EC96  F029         	call	_stop	;wreg free
 12504  002AFA                     
 12505                           ;movement.c: 108:         if (array_index == 0){break;}
 12506  002AFA  0101               	movlb	1	; () banked
 12507  002AFC  51D6               	movf	_array_index& (0+255),w,b
 12508  002AFE  A4D8               	btfss	status,2,c
 12509  002B00  EF84  F015         	goto	u5561
 12510  002B04  EF86  F015         	goto	u5560
 12511  002B08                     u5561:
 12512  002B08  EF88  F015         	goto	l5053
 12513  002B0C                     u5560:
 12514  002B0C  EFB2  F016         	goto	l581
 12515  002B10                     l5053:
 12516                           
 12517                           ; BSR set to: 1
 12518                           ;movement.c: 109:         array_index--;
 12519  002B10  07D6               	decf	_array_index& (0+255),f,b
 12520  002B12                     
 12521                           ; BSR set to: 1
 12522                           ;movement.c: 110:         if (memory[array_index] == 1){turn45(mL, mR, 2, 1);short_rever
      +                          se(mL,mR,2);array_index--;}
 12523  002B12  51D6               	movf	_array_index& (0+255),w,b
 12524  002B14  0D02               	mullw	2
 12525  002B16  0EA7               	movlw	low _memory
 12526  002B18  24F3               	addwf	243,w,c
 12527  002B1A  6ED9               	movwf	fsr2l,c
 12528  002B1C  0E01               	movlw	high _memory
 12529  002B1E  20F4               	addwfc	prodh,w,c
 12530  002B20  6EDA               	movwf	fsr2h,c
 12531  002B22  04DE               	decf	postinc2,w,c
 12532  002B24  10DE               	iorwf	postinc2,w,c
 12533  002B26  A4D8               	btfss	status,2,c
 12534  002B28  EF98  F015         	goto	u5571
 12535  002B2C  EF9A  F015         	goto	u5570
 12536  002B30                     u5571:
 12537  002B30  EFB6  F015         	goto	l5061
 12538  002B34                     u5570:
 12539  002B34                     
 12540                           ; BSR set to: 1
 12541  002B34  C030  F020         	movff	goback@mL,turn45@mL
 12542  002B38  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12543  002B3C  C032  F022         	movff	goback@mR,turn45@mR
 12544  002B40  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12545  002B44  0E02               	movlw	2
 12546  002B46  6E24               	movwf	turn45@turn_time^0,c
 12547  002B48  0E01               	movlw	1
 12548  002B4A  6E25               	movwf	turn45@direction^0,c
 12549  002B4C  ECA2  F01E         	call	_turn45	;wreg free
 12550  002B50  C030  F020         	movff	goback@mL,short_reverse@mL
 12551  002B54  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12552  002B58  C032  F022         	movff	goback@mR,short_reverse@mR
 12553  002B5C  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12554  002B60  0E02               	movlw	2
 12555  002B62  6E24               	movwf	short_reverse@instruction^0,c
 12556  002B64  ECF5  F029         	call	_short_reverse	;wreg free
 12557  002B68  EF3F  F015         	goto	l5035
 12558  002B6C                     l5061:
 12559                           
 12560                           ; BSR set to: 1
 12561  002B6C  51D6               	movf	_array_index& (0+255),w,b
 12562  002B6E  0D02               	mullw	2
 12563  002B70  0EA7               	movlw	low _memory
 12564  002B72  24F3               	addwf	243,w,c
 12565  002B74  6ED9               	movwf	fsr2l,c
 12566  002B76  0E01               	movlw	high _memory
 12567  002B78  20F4               	addwfc	prodh,w,c
 12568  002B7A  6EDA               	movwf	fsr2h,c
 12569  002B7C  0E02               	movlw	2
 12570  002B7E  18DE               	xorwf	postinc2,w,c
 12571  002B80  10DE               	iorwf	postinc2,w,c
 12572  002B82  A4D8               	btfss	status,2,c
 12573  002B84  EFC6  F015         	goto	u5581
 12574  002B88  EFC8  F015         	goto	u5580
 12575  002B8C                     u5581:
 12576  002B8C  EFE4  F015         	goto	l5067
 12577  002B90                     u5580:
 12578  002B90                     
 12579                           ; BSR set to: 1
 12580  002B90  C030  F020         	movff	goback@mL,turn45@mL
 12581  002B94  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12582  002B98  C032  F022         	movff	goback@mR,turn45@mR
 12583  002B9C  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12584  002BA0  0E02               	movlw	2
 12585  002BA2  6E24               	movwf	turn45@turn_time^0,c
 12586  002BA4  0E02               	movlw	2
 12587  002BA6  6E25               	movwf	turn45@direction^0,c
 12588  002BA8  ECA2  F01E         	call	_turn45	;wreg free
 12589  002BAC  C030  F020         	movff	goback@mL,short_reverse@mL
 12590  002BB0  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12591  002BB4  C032  F022         	movff	goback@mR,short_reverse@mR
 12592  002BB8  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12593  002BBC  0E02               	movlw	2
 12594  002BBE  6E24               	movwf	short_reverse@instruction^0,c
 12595  002BC0  ECF5  F029         	call	_short_reverse	;wreg free
 12596  002BC4  EF3F  F015         	goto	l5035
 12597  002BC8                     l5067:
 12598                           
 12599                           ; BSR set to: 1
 12600  002BC8  51D6               	movf	_array_index& (0+255),w,b
 12601  002BCA  0D02               	mullw	2
 12602  002BCC  0EA7               	movlw	low _memory
 12603  002BCE  24F3               	addwf	243,w,c
 12604  002BD0  6ED9               	movwf	fsr2l,c
 12605  002BD2  0E01               	movlw	high _memory
 12606  002BD4  20F4               	addwfc	prodh,w,c
 12607  002BD6  6EDA               	movwf	fsr2h,c
 12608  002BD8  0E03               	movlw	3
 12609  002BDA  18DE               	xorwf	postinc2,w,c
 12610  002BDC  10DE               	iorwf	postinc2,w,c
 12611  002BDE  A4D8               	btfss	status,2,c
 12612  002BE0  EFF4  F015         	goto	u5591
 12613  002BE4  EFF6  F015         	goto	u5590
 12614  002BE8                     u5591:
 12615  002BE8  EFF8  F015         	goto	l5073
 12616  002BEC                     u5590:
 12617  002BEC  EF25  F015         	goto	l5033
 12618  002BF0                     l5073:
 12619                           
 12620                           ; BSR set to: 1
 12621  002BF0  51D6               	movf	_array_index& (0+255),w,b
 12622  002BF2  0D02               	mullw	2
 12623  002BF4  0EA7               	movlw	low _memory
 12624  002BF6  24F3               	addwf	243,w,c
 12625  002BF8  6ED9               	movwf	fsr2l,c
 12626  002BFA  0E01               	movlw	high _memory
 12627  002BFC  20F4               	addwfc	prodh,w,c
 12628  002BFE  6EDA               	movwf	fsr2h,c
 12629  002C00  0E04               	movlw	4
 12630  002C02  18DE               	xorwf	postinc2,w,c
 12631  002C04  10DE               	iorwf	postinc2,w,c
 12632  002C06  A4D8               	btfss	status,2,c
 12633  002C08  EF08  F016         	goto	u5601
 12634  002C0C  EF0A  F016         	goto	u5600
 12635  002C10                     u5601:
 12636  002C10  EF26  F016         	goto	l5079
 12637  002C14                     u5600:
 12638  002C14                     
 12639                           ; BSR set to: 1
 12640  002C14  C030  F020         	movff	goback@mL,turn45@mL
 12641  002C18  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12642  002C1C  C032  F022         	movff	goback@mR,turn45@mR
 12643  002C20  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12644  002C24  0E02               	movlw	2
 12645  002C26  6E24               	movwf	turn45@turn_time^0,c
 12646  002C28  0E01               	movlw	1
 12647  002C2A  6E25               	movwf	turn45@direction^0,c
 12648  002C2C  ECA2  F01E         	call	_turn45	;wreg free
 12649  002C30  C030  F020         	movff	goback@mL,short_reverse@mL
 12650  002C34  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12651  002C38  C032  F022         	movff	goback@mR,short_reverse@mR
 12652  002C3C  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12653  002C40  0E03               	movlw	3
 12654  002C42  6E24               	movwf	short_reverse@instruction^0,c
 12655  002C44  ECF5  F029         	call	_short_reverse	;wreg free
 12656  002C48  EF3F  F015         	goto	l5035
 12657  002C4C                     l5079:
 12658                           
 12659                           ; BSR set to: 1
 12660  002C4C  51D6               	movf	_array_index& (0+255),w,b
 12661  002C4E  0D02               	mullw	2
 12662  002C50  0EA7               	movlw	low _memory
 12663  002C52  24F3               	addwf	243,w,c
 12664  002C54  6ED9               	movwf	fsr2l,c
 12665  002C56  0E01               	movlw	high _memory
 12666  002C58  20F4               	addwfc	prodh,w,c
 12667  002C5A  6EDA               	movwf	fsr2h,c
 12668  002C5C  0E05               	movlw	5
 12669  002C5E  18DE               	xorwf	postinc2,w,c
 12670  002C60  10DE               	iorwf	postinc2,w,c
 12671  002C62  A4D8               	btfss	status,2,c
 12672  002C64  EF36  F016         	goto	u5611
 12673  002C68  EF38  F016         	goto	u5610
 12674  002C6C                     u5611:
 12675  002C6C  EF54  F016         	goto	l5085
 12676  002C70                     u5610:
 12677  002C70                     
 12678                           ; BSR set to: 1
 12679  002C70  C030  F020         	movff	goback@mL,turn45@mL
 12680  002C74  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12681  002C78  C032  F022         	movff	goback@mR,turn45@mR
 12682  002C7C  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12683  002C80  0E02               	movlw	2
 12684  002C82  6E24               	movwf	turn45@turn_time^0,c
 12685  002C84  0E02               	movlw	2
 12686  002C86  6E25               	movwf	turn45@direction^0,c
 12687  002C88  ECA2  F01E         	call	_turn45	;wreg free
 12688  002C8C  C030  F020         	movff	goback@mL,short_reverse@mL
 12689  002C90  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12690  002C94  C032  F022         	movff	goback@mR,short_reverse@mR
 12691  002C98  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12692  002C9C  0E03               	movlw	3
 12693  002C9E  6E24               	movwf	short_reverse@instruction^0,c
 12694  002CA0  ECF5  F029         	call	_short_reverse	;wreg free
 12695  002CA4  EF3F  F015         	goto	l5035
 12696  002CA8                     l5085:
 12697                           
 12698                           ; BSR set to: 1
 12699  002CA8  51D6               	movf	_array_index& (0+255),w,b
 12700  002CAA  0D02               	mullw	2
 12701  002CAC  0EA7               	movlw	low _memory
 12702  002CAE  24F3               	addwf	243,w,c
 12703  002CB0  6ED9               	movwf	fsr2l,c
 12704  002CB2  0E01               	movlw	high _memory
 12705  002CB4  20F4               	addwfc	prodh,w,c
 12706  002CB6  6EDA               	movwf	fsr2h,c
 12707  002CB8  0E06               	movlw	6
 12708  002CBA  18DE               	xorwf	postinc2,w,c
 12709  002CBC  10DE               	iorwf	postinc2,w,c
 12710  002CBE  A4D8               	btfss	status,2,c
 12711  002CC0  EF64  F016         	goto	u5621
 12712  002CC4  EF66  F016         	goto	u5620
 12713  002CC8                     u5621:
 12714  002CC8  EF82  F016         	goto	l5091
 12715  002CCC                     u5620:
 12716  002CCC                     
 12717                           ; BSR set to: 1
 12718  002CCC  C030  F020         	movff	goback@mL,turn45@mL
 12719  002CD0  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12720  002CD4  C032  F022         	movff	goback@mR,turn45@mR
 12721  002CD8  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12722  002CDC  0E03               	movlw	3
 12723  002CDE  6E24               	movwf	turn45@turn_time^0,c
 12724  002CE0  0E01               	movlw	1
 12725  002CE2  6E25               	movwf	turn45@direction^0,c
 12726  002CE4  ECA2  F01E         	call	_turn45	;wreg free
 12727  002CE8  C030  F020         	movff	goback@mL,short_reverse@mL
 12728  002CEC  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12729  002CF0  C032  F022         	movff	goback@mR,short_reverse@mR
 12730  002CF4  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12731  002CF8  0E02               	movlw	2
 12732  002CFA  6E24               	movwf	short_reverse@instruction^0,c
 12733  002CFC  ECF5  F029         	call	_short_reverse	;wreg free
 12734  002D00  EF3F  F015         	goto	l5035
 12735  002D04                     l5091:
 12736                           
 12737                           ; BSR set to: 1
 12738  002D04  51D6               	movf	_array_index& (0+255),w,b
 12739  002D06  0D02               	mullw	2
 12740  002D08  0EA7               	movlw	low _memory
 12741  002D0A  24F3               	addwf	243,w,c
 12742  002D0C  6ED9               	movwf	fsr2l,c
 12743  002D0E  0E01               	movlw	high _memory
 12744  002D10  20F4               	addwfc	prodh,w,c
 12745  002D12  6EDA               	movwf	fsr2h,c
 12746  002D14  0E07               	movlw	7
 12747  002D16  18DE               	xorwf	postinc2,w,c
 12748  002D18  10DE               	iorwf	postinc2,w,c
 12749  002D1A  A4D8               	btfss	status,2,c
 12750  002D1C  EF92  F016         	goto	u5631
 12751  002D20  EF94  F016         	goto	u5630
 12752  002D24                     u5631:
 12753  002D24  EFB0  F016         	goto	l589
 12754  002D28                     u5630:
 12755  002D28                     
 12756                           ; BSR set to: 1
 12757  002D28  C030  F020         	movff	goback@mL,turn45@mL
 12758  002D2C  C031  F021         	movff	goback@mL+1,turn45@mL+1
 12759  002D30  C032  F022         	movff	goback@mR,turn45@mR
 12760  002D34  C033  F023         	movff	goback@mR+1,turn45@mR+1
 12761  002D38  0E03               	movlw	3
 12762  002D3A  6E24               	movwf	turn45@turn_time^0,c
 12763  002D3C  0E02               	movlw	2
 12764  002D3E  6E25               	movwf	turn45@direction^0,c
 12765  002D40  ECA2  F01E         	call	_turn45	;wreg free
 12766  002D44  C030  F020         	movff	goback@mL,short_reverse@mL
 12767  002D48  C031  F021         	movff	goback@mL+1,short_reverse@mL+1
 12768  002D4C  C032  F022         	movff	goback@mR,short_reverse@mR
 12769  002D50  C033  F023         	movff	goback@mR+1,short_reverse@mR+1
 12770  002D54  0E02               	movlw	2
 12771  002D56  6E24               	movwf	short_reverse@instruction^0,c
 12772  002D58  ECF5  F029         	call	_short_reverse	;wreg free
 12773  002D5C  EF3F  F015         	goto	l5035
 12774  002D60                     l589:
 12775                           
 12776                           ; BSR set to: 1
 12777  002D60  EF41  F015         	goto	l5037
 12778  002D64                     l581:
 12779                           
 12780                           ; BSR set to: 1
 12781                           ;movement.c: 118:     LATDbits.LATD7 = 1;
 12782  002D64  8E7C               	bsf	124,7,c	;volatile
 12783                           
 12784                           ;movement.c: 119:     while(PORTFbits.RF2){
 12785  002D66  EFC9  F016         	goto	l595
 12786  002D6A                     l5097:
 12787                           
 12788                           ;movement.c: 120:         stop(mL,mR);
 12789  002D6A  C030  F01A         	movff	goback@mL,stop@mL
 12790  002D6E  C031  F01B         	movff	goback@mL+1,stop@mL+1
 12791  002D72  C032  F01C         	movff	goback@mR,stop@mR
 12792  002D76  C033  F01D         	movff	goback@mR+1,stop@mR+1
 12793  002D7A  EC96  F029         	call	_stop	;wreg free
 12794  002D7E                     
 12795                           ;movement.c: 121:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
 12796  002D7E  B48E               	btfsc	142,2,c	;volatile
 12797  002D80  EFC4  F016         	goto	u5641
 12798  002D84  EFC6  F016         	goto	u5640
 12799  002D88                     u5641:
 12800  002D88  EFC9  F016         	goto	l595
 12801  002D8C                     u5640:
 12802  002D8C  9E7C               	bcf	124,7,c	;volatile
 12803  002D8E  EFD0  F016         	goto	l599
 12804  002D92                     l595:
 12805                           
 12806                           ;movement.c: 119:     while(PORTFbits.RF2){
 12807  002D92  B48E               	btfsc	142,2,c	;volatile
 12808  002D94  EFCE  F016         	goto	u5651
 12809  002D98  EFD0  F016         	goto	u5650
 12810  002D9C                     u5651:
 12811  002D9C  EFB5  F016         	goto	l5097
 12812  002DA0                     u5650:
 12813  002DA0                     l599:
 12814  002DA0  0012               	return		;funcret
 12815  002DA2                     __end_of_goback:
 12816                           	callstack 0
 12817                           
 12818 ;; *************** function _turn45 *****************
 12819 ;; Defined at:
 12820 ;;		line 94 in file "dc_motor.c"
 12821 ;; Parameters:    Size  Location     Type
 12822 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12823 ;;		 -> main@motorL(9), 
 12824 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12825 ;;		 -> main@motorR(9), 
 12826 ;;  turn_time       1   35[COMRAM] unsigned char 
 12827 ;;  direction       1   36[COMRAM] unsigned char 
 12828 ;; Auto vars:     Size  Location     Type
 12829 ;;  i               2   44[COMRAM] unsigned int 
 12830 ;;  i               2   42[COMRAM] unsigned int 
 12831 ;;  delay           2   38[COMRAM] unsigned int 
 12832 ;;  delay           2   40[COMRAM] unsigned int 
 12833 ;;  i               1   46[COMRAM] unsigned char 
 12834 ;; Return value:  Size  Location     Type
 12835 ;;                  1    wreg      void 
 12836 ;; Registers used:
 12837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12838 ;; Tracked objects:
 12839 ;;		On entry : 0/0
 12840 ;;		On exit  : 0/0
 12841 ;;		Unchanged: 0/0
 12842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12843 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12844 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12846 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12847 ;;Total ram usage:       16 bytes
 12848 ;; Hardware stack levels used: 1
 12849 ;; Hardware stack levels required when called: 4
 12850 ;; This function calls:
 12851 ;;		_setMotorPWM
 12852 ;;		_stop
 12853 ;; This function is called by:
 12854 ;;		_action
 12855 ;;		_goback
 12856 ;; This function uses a non-reentrant model
 12857 ;;
 12858                           
 12859                           	psect	text64
 12860  003D44                     __ptext64:
 12861                           	callstack 0
 12862  003D44                     _turn45:
 12863                           	callstack 25
 12864  003D44                     
 12865                           ;dc_motor.c: 94: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 95: {;dc_motor.c: 97:     unsigned char i =
      +                           0;
 12866  003D44  0E00               	movlw	0
 12867  003D46  6E2F               	movwf	turn45@i^0,c
 12868                           
 12869                           ;dc_motor.c: 99:     for (i = 0; i < turn_time; i++){
 12870  003D48  0E00               	movlw	0
 12871  003D4A  6E2F               	movwf	turn45@i^0,c
 12872  003D4C  EF80  F01F         	goto	l4543
 12873  003D50                     l4489:
 12874                           
 12875                           ;dc_motor.c: 100:         mL->direction=1;
 12876  003D50  EE20 F001          	lfsr	2,1
 12877  003D54  5020               	movf	turn45@mL^0,w,c
 12878  003D56  26D9               	addwf	fsr2l,f,c
 12879  003D58  5021               	movf	(turn45@mL+1)^0,w,c
 12880  003D5A  22DA               	addwfc	fsr2h,f,c
 12881  003D5C  0E01               	movlw	1
 12882  003D5E  6EDF               	movwf	indf2,c
 12883                           
 12884                           ;dc_motor.c: 101:         mR->direction=1;
 12885  003D60  EE20 F001          	lfsr	2,1
 12886  003D64  5022               	movf	turn45@mR^0,w,c
 12887  003D66  26D9               	addwf	fsr2l,f,c
 12888  003D68  5023               	movf	(turn45@mR+1)^0,w,c
 12889  003D6A  22DA               	addwfc	fsr2h,f,c
 12890  003D6C  0E01               	movlw	1
 12891  003D6E  6EDF               	movwf	indf2,c
 12892  003D70                     
 12893                           ;dc_motor.c: 102:         if (direction == 1){
 12894  003D70  0425               	decf	turn45@direction^0,w,c
 12895  003D72  A4D8               	btfss	status,2,c
 12896  003D74  EFBE  F01E         	goto	u4771
 12897  003D78  EFC0  F01E         	goto	u4770
 12898  003D7C                     u4771:
 12899  003D7C  EF25  F01F         	goto	l4517
 12900  003D80                     u4770:
 12901  003D80  EFE1  F01E         	goto	l4503
 12902  003D84                     l4495:
 12903                           
 12904                           ;dc_motor.c: 104:                 mR->power += 5;
 12905  003D84  C022  FFD9         	movff	turn45@mR,fsr2l
 12906  003D88  C023  FFDA         	movff	turn45@mR+1,fsr2h
 12907  003D8C  0E05               	movlw	5
 12908  003D8E  26DF               	addwf	indf2,f,c
 12909                           
 12910                           ;dc_motor.c: 105:                 mL->power = 0;
 12911  003D90  C020  FFD9         	movff	turn45@mL,fsr2l
 12912  003D94  C021  FFDA         	movff	turn45@mL+1,fsr2h
 12913  003D98  0E00               	movlw	0
 12914  003D9A  6EDF               	movwf	indf2,c
 12915  003D9C                     
 12916                           ;dc_motor.c: 106:                 setMotorPWM(mL);
 12917  003D9C  C020  F00F         	movff	turn45@mL,setMotorPWM@m
 12918  003DA0  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
 12919  003DA4  ECB8  F01D         	call	_setMotorPWM	;wreg free
 12920  003DA8                     
 12921                           ;dc_motor.c: 107:                 setMotorPWM(mR);
 12922  003DA8  C022  F00F         	movff	turn45@mR,setMotorPWM@m
 12923  003DAC  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
 12924  003DB0  ECB8  F01D         	call	_setMotorPWM	;wreg free
 12925  003DB4                     
 12926                           ;dc_motor.c: 108:                 _delay((unsigned long)((10)*(64000000/4000.0)));
 12927  003DB4  0ED0               	movlw	208
 12928  003DB6  6E26               	movwf	??_turn45^0,c
 12929  003DB8  0ECA               	movlw	202
 12930  003DBA                     u6627:
 12931  003DBA  2EE8               	decfsz	wreg,f,c
 12932  003DBC  D7FE               	bra	u6627
 12933  003DBE  2E26               	decfsz	??_turn45^0,f,c
 12934  003DC0  D7FC               	bra	u6627
 12935  003DC2                     l4503:
 12936                           
 12937                           ;dc_motor.c: 103:             while (mR->power <30){
 12938  003DC2  C022  FFD9         	movff	turn45@mR,fsr2l
 12939  003DC6  C023  FFDA         	movff	turn45@mR+1,fsr2h
 12940  003DCA  0E1D               	movlw	29
 12941  003DCC  64DF               	cpfsgt	indf2,c
 12942  003DCE  EFEB  F01E         	goto	u4781
 12943  003DD2  EFED  F01E         	goto	u4780
 12944  003DD6                     u4781:
 12945  003DD6  EFC2  F01E         	goto	l4495
 12946  003DDA                     u4780:
 12947  003DDA                     
 12948                           ;dc_motor.c: 110:             unsigned int delay = SENSITIVITY;
 12949  003DDA  C0DB  F029         	movff	_SENSITIVITY,turn45@delay
 12950  003DDE  C0DC  F02A         	movff	_SENSITIVITY+1,turn45@delay+1
 12951  003DE2                     
 12952                           ;dc_motor.c: 111:             if (direction == 4){delay += 10;}
 12953  003DE2  0E04               	movlw	4
 12954  003DE4  1825               	xorwf	turn45@direction^0,w,c
 12955  003DE6  A4D8               	btfss	status,2,c
 12956  003DE8  EFF8  F01E         	goto	u4791
 12957  003DEC  EFFA  F01E         	goto	u4790
 12958  003DF0                     u4791:
 12959  003DF0  EFFE  F01E         	goto	l4509
 12960  003DF4                     u4790:
 12961  003DF4  0E0A               	movlw	10
 12962  003DF6  2629               	addwf	turn45@delay^0,f,c
 12963  003DF8  0E00               	movlw	0
 12964  003DFA  222A               	addwfc	(turn45@delay+1)^0,f,c
 12965  003DFC                     l4509:
 12966                           
 12967                           ;dc_motor.c: 112:             for(unsigned int i = 0; i <delay; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12968  003DFC  0E00               	movlw	0
 12969  003DFE  6E2C               	movwf	(turn45@i_1304+1)^0,c
 12970  003E00  0E00               	movlw	0
 12971  003E02  6E2B               	movwf	turn45@i_1304^0,c
 12972  003E04  EF0E  F01F         	goto	l290
 12973  003E08                     l4511:
 12974  003E08  0E15               	movlw	21
 12975  003E0A  6E26               	movwf	??_turn45^0,c
 12976  003E0C  0EC6               	movlw	198
 12977  003E0E                     u6637:
 12978  003E0E  2EE8               	decfsz	wreg,f,c
 12979  003E10  D7FE               	bra	u6637
 12980  003E12  2E26               	decfsz	??_turn45^0,f,c
 12981  003E14  D7FC               	bra	u6637
 12982  003E16  D000               	nop2	
 12983  003E18  4A2B               	infsnz	turn45@i_1304^0,f,c
 12984  003E1A  2A2C               	incf	(turn45@i_1304+1)^0,f,c
 12985  003E1C                     l290:
 12986  003E1C  5029               	movf	turn45@delay^0,w,c
 12987  003E1E  5C2B               	subwf	turn45@i_1304^0,w,c
 12988  003E20  502A               	movf	(turn45@delay+1)^0,w,c
 12989  003E22  582C               	subwfb	(turn45@i_1304+1)^0,w,c
 12990  003E24  A0D8               	btfss	status,0,c
 12991  003E26  EF17  F01F         	goto	u4801
 12992  003E2A  EF19  F01F         	goto	u4800
 12993  003E2E                     u4801:
 12994  003E2E  EF04  F01F         	goto	l4511
 12995  003E32                     u4800:
 12996  003E32                     l4515:
 12997                           
 12998                           ;dc_motor.c: 113:             stop(mL,mR);
 12999  003E32  C020  F01A         	movff	turn45@mL,stop@mL
 13000  003E36  C021  F01B         	movff	turn45@mL+1,stop@mL+1
 13001  003E3A  C022  F01C         	movff	turn45@mR,stop@mR
 13002  003E3E  C023  F01D         	movff	turn45@mR+1,stop@mR+1
 13003  003E42  EC96  F029         	call	_stop	;wreg free
 13004                           
 13005                           ;dc_motor.c: 114:         }
 13006  003E46  EF7F  F01F         	goto	l4541
 13007  003E4A                     l4517:
 13008  003E4A  0E02               	movlw	2
 13009  003E4C  1825               	xorwf	turn45@direction^0,w,c
 13010  003E4E  A4D8               	btfss	status,2,c
 13011  003E50  EF2C  F01F         	goto	u4811
 13012  003E54  EF2E  F01F         	goto	u4810
 13013  003E58                     u4811:
 13014  003E58  EF7F  F01F         	goto	l4541
 13015  003E5C                     u4810:
 13016  003E5C  EF4F  F01F         	goto	l4529
 13017  003E60                     l4521:
 13018                           
 13019                           ;dc_motor.c: 117:                 mL->power += 5;
 13020  003E60  C020  FFD9         	movff	turn45@mL,fsr2l
 13021  003E64  C021  FFDA         	movff	turn45@mL+1,fsr2h
 13022  003E68  0E05               	movlw	5
 13023  003E6A  26DF               	addwf	indf2,f,c
 13024                           
 13025                           ;dc_motor.c: 118:                 mR->power = 0;
 13026  003E6C  C022  FFD9         	movff	turn45@mR,fsr2l
 13027  003E70  C023  FFDA         	movff	turn45@mR+1,fsr2h
 13028  003E74  0E00               	movlw	0
 13029  003E76  6EDF               	movwf	indf2,c
 13030  003E78                     
 13031                           ;dc_motor.c: 119:                 setMotorPWM(mL);
 13032  003E78  C020  F00F         	movff	turn45@mL,setMotorPWM@m
 13033  003E7C  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
 13034  003E80  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13035  003E84                     
 13036                           ;dc_motor.c: 120:                 setMotorPWM(mR);
 13037  003E84  C022  F00F         	movff	turn45@mR,setMotorPWM@m
 13038  003E88  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
 13039  003E8C  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13040  003E90                     
 13041                           ;dc_motor.c: 121:                 _delay((unsigned long)((10)*(64000000/4000.0)));
 13042  003E90  0ED0               	movlw	208
 13043  003E92  6E26               	movwf	??_turn45^0,c
 13044  003E94  0ECA               	movlw	202
 13045  003E96                     u6647:
 13046  003E96  2EE8               	decfsz	wreg,f,c
 13047  003E98  D7FE               	bra	u6647
 13048  003E9A  2E26               	decfsz	??_turn45^0,f,c
 13049  003E9C  D7FC               	bra	u6647
 13050  003E9E                     l4529:
 13051                           
 13052                           ;dc_motor.c: 116:             while (mL->power <30){
 13053  003E9E  C020  FFD9         	movff	turn45@mL,fsr2l
 13054  003EA2  C021  FFDA         	movff	turn45@mL+1,fsr2h
 13055  003EA6  0E1D               	movlw	29
 13056  003EA8  64DF               	cpfsgt	indf2,c
 13057  003EAA  EF59  F01F         	goto	u4821
 13058  003EAE  EF5B  F01F         	goto	u4820
 13059  003EB2                     u4821:
 13060  003EB2  EF30  F01F         	goto	l4521
 13061  003EB6                     u4820:
 13062  003EB6                     
 13063                           ;dc_motor.c: 123:             unsigned int delay = 20 + SENSITIVITY;
 13064  003EB6  0E14               	movlw	20
 13065  003EB8  0100               	movlb	0	; () banked
 13066  003EBA  25DB               	addwf	_SENSITIVITY& (0+255),w,b
 13067  003EBC  6E27               	movwf	turn45@delay_1306^0,c
 13068  003EBE  0E00               	movlw	0
 13069  003EC0  21DC               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
 13070  003EC2  6E28               	movwf	(turn45@delay_1306+1)^0,c
 13071  003EC4                     
 13072                           ; BSR set to: 0
 13073                           ;dc_motor.c: 124:             for(unsigned int i = 0; i <delay; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13074  003EC4  0E00               	movlw	0
 13075  003EC6  6E2E               	movwf	(turn45@i_1307+1)^0,c
 13076  003EC8  0E00               	movlw	0
 13077  003ECA  6E2D               	movwf	turn45@i_1307^0,c
 13078  003ECC  EF72  F01F         	goto	l298
 13079  003ED0                     l4535:
 13080  003ED0  0E15               	movlw	21
 13081  003ED2  6E26               	movwf	??_turn45^0,c
 13082  003ED4  0EC6               	movlw	198
 13083  003ED6                     u6657:
 13084  003ED6  2EE8               	decfsz	wreg,f,c
 13085  003ED8  D7FE               	bra	u6657
 13086  003EDA  2E26               	decfsz	??_turn45^0,f,c
 13087  003EDC  D7FC               	bra	u6657
 13088  003EDE  D000               	nop2	
 13089  003EE0  4A2D               	infsnz	turn45@i_1307^0,f,c
 13090  003EE2  2A2E               	incf	(turn45@i_1307+1)^0,f,c
 13091  003EE4                     l298:
 13092  003EE4  5027               	movf	turn45@delay_1306^0,w,c
 13093  003EE6  5C2D               	subwf	turn45@i_1307^0,w,c
 13094  003EE8  5028               	movf	(turn45@delay_1306+1)^0,w,c
 13095  003EEA  582E               	subwfb	(turn45@i_1307+1)^0,w,c
 13096  003EEC  A0D8               	btfss	status,0,c
 13097  003EEE  EF7B  F01F         	goto	u4831
 13098  003EF2  EF7D  F01F         	goto	u4830
 13099  003EF6                     u4831:
 13100  003EF6  EF68  F01F         	goto	l4535
 13101  003EFA                     u4830:
 13102  003EFA  EF19  F01F         	goto	l4515
 13103  003EFE                     l4541:
 13104                           
 13105                           ;dc_motor.c: 127:     }
 13106  003EFE  2A2F               	incf	turn45@i^0,f,c
 13107  003F00                     l4543:
 13108  003F00  5024               	movf	turn45@turn_time^0,w,c
 13109  003F02  5C2F               	subwf	turn45@i^0,w,c
 13110  003F04  A0D8               	btfss	status,0,c
 13111  003F06  EF87  F01F         	goto	u4841
 13112  003F0A  EF89  F01F         	goto	u4840
 13113  003F0E                     u4841:
 13114  003F0E  EFA8  F01E         	goto	l4489
 13115  003F12                     u4840:
 13116  003F12  0012               	return		;funcret
 13117  003F14                     __end_of_turn45:
 13118                           	callstack 0
 13119                           
 13120 ;; *************** function _short_reverse *****************
 13121 ;; Defined at:
 13122 ;;		line 220 in file "dc_motor.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13125 ;;		 -> main@motorL(9), 
 13126 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13127 ;;		 -> main@motorR(9), 
 13128 ;;  instruction     1   35[COMRAM] unsigned char 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;		None
 13131 ;; Return value:  Size  Location     Type
 13132 ;;                  1    wreg      void 
 13133 ;; Registers used:
 13134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13135 ;; Tracked objects:
 13136 ;;		On entry : 0/0
 13137 ;;		On exit  : 0/0
 13138 ;;		Unchanged: 0/0
 13139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13140 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13143 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13144 ;;Total ram usage:        7 bytes
 13145 ;; Hardware stack levels used: 1
 13146 ;; Hardware stack levels required when called: 4
 13147 ;; This function calls:
 13148 ;;		_fullSpeedBack
 13149 ;;		_stop
 13150 ;; This function is called by:
 13151 ;;		_action
 13152 ;;		_goback
 13153 ;; This function uses a non-reentrant model
 13154 ;;
 13155                           
 13156                           	psect	text65
 13157  0053EA                     __ptext65:
 13158                           	callstack 0
 13159  0053EA                     _short_reverse:
 13160                           	callstack 25
 13161  0053EA                     
 13162                           ;dc_motor.c: 220: void short_reverse(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 221: {;dc_motor.c: 222:     fullSpeedBack(mL, mR);
 13163  0053EA  C020  F01A         	movff	short_reverse@mL,fullSpeedBack@mL
 13164  0053EE  C021  F01B         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 13165  0053F2  C022  F01C         	movff	short_reverse@mR,fullSpeedBack@mR
 13166  0053F6  C023  F01D         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 13167  0053FA  EC48  F02A         	call	_fullSpeedBack	;wreg free
 13168  0053FE                     
 13169                           ;dc_motor.c: 223:     if (instruction == 1) {_delay((unsigned long)((500)*(64000000/4000
      +                          .0)));}
 13170  0053FE  0424               	decf	short_reverse@instruction^0,w,c
 13171  005400  A4D8               	btfss	status,2,c
 13172  005402  EF05  F02A         	goto	u4991
 13173  005406  EF07  F02A         	goto	u4990
 13174  00540A                     u4991:
 13175  00540A  EF13  F02A         	goto	l4645
 13176  00540E                     u4990:
 13177  00540E  0E29               	movlw	41
 13178  005410  6E26               	movwf	(??_short_reverse+1)^0,c
 13179  005412  0E96               	movlw	150
 13180  005414  6E25               	movwf	??_short_reverse^0,c
 13181  005416  0E7F               	movlw	127
 13182  005418                     u6667:
 13183  005418  2EE8               	decfsz	wreg,f,c
 13184  00541A  D7FE               	bra	u6667
 13185  00541C  2E25               	decfsz	??_short_reverse^0,f,c
 13186  00541E  D7FC               	bra	u6667
 13187  005420  2E26               	decfsz	(??_short_reverse+1)^0,f,c
 13188  005422  D7FA               	bra	u6667
 13189  005424  F000               	nop	
 13190  005426                     l4645:
 13191                           
 13192                           ;dc_motor.c: 224:     if (instruction == 2) {_delay((unsigned long)((700)*(64000000/4000
      +                          .0)));}
 13193  005426  0E02               	movlw	2
 13194  005428  1824               	xorwf	short_reverse@instruction^0,w,c
 13195  00542A  A4D8               	btfss	status,2,c
 13196  00542C  EF1A  F02A         	goto	u5001
 13197  005430  EF1C  F02A         	goto	u5000
 13198  005434                     u5001:
 13199  005434  EF28  F02A         	goto	l4649
 13200  005438                     u5000:
 13201  005438  0E39               	movlw	57
 13202  00543A  6E26               	movwf	(??_short_reverse+1)^0,c
 13203  00543C  0ED2               	movlw	210
 13204  00543E  6E25               	movwf	??_short_reverse^0,c
 13205  005440  0E4C               	movlw	76
 13206  005442                     u6677:
 13207  005442  2EE8               	decfsz	wreg,f,c
 13208  005444  D7FE               	bra	u6677
 13209  005446  2E25               	decfsz	??_short_reverse^0,f,c
 13210  005448  D7FC               	bra	u6677
 13211  00544A  2E26               	decfsz	(??_short_reverse+1)^0,f,c
 13212  00544C  D7FA               	bra	u6677
 13213  00544E  D000               	nop2	
 13214  005450                     l4649:
 13215                           
 13216                           ;dc_motor.c: 225:     if (instruction == 3) {_delay((unsigned long)((1300)*(64000000/400
      +                          0.0)));}
 13217  005450  0E03               	movlw	3
 13218  005452  1824               	xorwf	short_reverse@instruction^0,w,c
 13219  005454  A4D8               	btfss	status,2,c
 13220  005456  EF2F  F02A         	goto	u5011
 13221  00545A  EF31  F02A         	goto	u5010
 13222  00545E                     u5011:
 13223  00545E  EF3D  F02A         	goto	l4653
 13224  005462                     u5010:
 13225  005462  0E6A               	movlw	106
 13226  005464  6E26               	movwf	(??_short_reverse+1)^0,c
 13227  005466  0E85               	movlw	133
 13228  005468  6E25               	movwf	??_short_reverse^0,c
 13229  00546A  0EB4               	movlw	180
 13230  00546C                     u6687:
 13231  00546C  2EE8               	decfsz	wreg,f,c
 13232  00546E  D7FE               	bra	u6687
 13233  005470  2E25               	decfsz	??_short_reverse^0,f,c
 13234  005472  D7FC               	bra	u6687
 13235  005474  2E26               	decfsz	(??_short_reverse+1)^0,f,c
 13236  005476  D7FA               	bra	u6687
 13237  005478  D000               	nop2	
 13238  00547A                     l4653:
 13239                           
 13240                           ;dc_motor.c: 226:     stop(mL,mR);
 13241  00547A  C020  F01A         	movff	short_reverse@mL,stop@mL
 13242  00547E  C021  F01B         	movff	short_reverse@mL+1,stop@mL+1
 13243  005482  C022  F01C         	movff	short_reverse@mR,stop@mR
 13244  005486  C023  F01D         	movff	short_reverse@mR+1,stop@mR+1
 13245  00548A  EC96  F029         	call	_stop	;wreg free
 13246  00548E  0012               	return		;funcret
 13247  005490                     __end_of_short_reverse:
 13248                           	callstack 0
 13249                           
 13250 ;; *************** function _stop *****************
 13251 ;; Defined at:
 13252 ;;		line 82 in file "dc_motor.c"
 13253 ;; Parameters:    Size  Location     Type
 13254 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13255 ;;		 -> main@motorL(9), 
 13256 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13257 ;;		 -> main@motorR(9), 
 13258 ;; Auto vars:     Size  Location     Type
 13259 ;;		None
 13260 ;; Return value:  Size  Location     Type
 13261 ;;                  1    wreg      void 
 13262 ;; Registers used:
 13263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13264 ;; Tracked objects:
 13265 ;;		On entry : 0/0
 13266 ;;		On exit  : 0/0
 13267 ;;		Unchanged: 0/0
 13268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13272 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13273 ;;Total ram usage:        6 bytes
 13274 ;; Hardware stack levels used: 1
 13275 ;; Hardware stack levels required when called: 3
 13276 ;; This function calls:
 13277 ;;		_setMotorPWM
 13278 ;; This function is called by:
 13279 ;;		_turn45
 13280 ;;		_turnLeft
 13281 ;;		_turnRight
 13282 ;;		_fullSpeedAhead_test
 13283 ;;		_short_reverse
 13284 ;;		_main
 13285 ;;		_short_burst
 13286 ;;		_goback
 13287 ;;		_test_function
 13288 ;; This function uses a non-reentrant model
 13289 ;;
 13290                           
 13291                           	psect	text66
 13292  00532C                     __ptext66:
 13293                           	callstack 0
 13294  00532C                     _stop:
 13295                           	callstack 27
 13296  00532C                     
 13297                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13298  00532C  EFD0  F029         	goto	l4235
 13299  005330                     l4221:
 13300                           
 13301                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 2;}
 13302  005330  C01A  FFD9         	movff	stop@mL,fsr2l
 13303  005334  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13304  005338  50DF               	movf	indf2,w,c
 13305  00533A  B4D8               	btfsc	status,2,c
 13306  00533C  EFA2  F029         	goto	u4081
 13307  005340  EFA4  F029         	goto	u4080
 13308  005344                     u4081:
 13309  005344  EFAA  F029         	goto	l4225
 13310  005348                     u4080:
 13311  005348  C01A  FFD9         	movff	stop@mL,fsr2l
 13312  00534C  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13313  005350  0E02               	movlw	2
 13314  005352  5EDF               	subwf	indf2,f,c
 13315  005354                     l4225:
 13316                           
 13317                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 2;}
 13318  005354  C01C  FFD9         	movff	stop@mR,fsr2l
 13319  005358  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13320  00535C  50DF               	movf	indf2,w,c
 13321  00535E  B4D8               	btfsc	status,2,c
 13322  005360  EFB4  F029         	goto	u4091
 13323  005364  EFB6  F029         	goto	u4090
 13324  005368                     u4091:
 13325  005368  EFBC  F029         	goto	l4229
 13326  00536C                     u4090:
 13327  00536C  C01C  FFD9         	movff	stop@mR,fsr2l
 13328  005370  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13329  005374  0E02               	movlw	2
 13330  005376  5EDF               	subwf	indf2,f,c
 13331  005378                     l4229:
 13332                           
 13333                           ;dc_motor.c: 87:         setMotorPWM(mL);
 13334  005378  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 13335  00537C  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 13336  005380  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13337  005384                     
 13338                           ;dc_motor.c: 88:         setMotorPWM(mR);
 13339  005384  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 13340  005388  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 13341  00538C  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13342  005390                     
 13343                           ;dc_motor.c: 89:         _delay((unsigned long)((5)*(64000000/4000.0)));
 13344  005390  0E68               	movlw	104
 13345  005392  6E1E               	movwf	??_stop^0,c
 13346  005394  0EE4               	movlw	228
 13347  005396                     u6697:
 13348  005396  2EE8               	decfsz	wreg,f,c
 13349  005398  D7FE               	bra	u6697
 13350  00539A  2E1E               	decfsz	??_stop^0,f,c
 13351  00539C  D7FC               	bra	u6697
 13352  00539E  D000               	nop2	
 13353  0053A0                     l4235:
 13354                           
 13355                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13356  0053A0  C01A  FFD9         	movff	stop@mL,fsr2l
 13357  0053A4  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13358  0053A8  50DF               	movf	indf2,w,c
 13359  0053AA  A4D8               	btfss	status,2,c
 13360  0053AC  EFDA  F029         	goto	u4101
 13361  0053B0  EFDC  F029         	goto	u4100
 13362  0053B4                     u4101:
 13363  0053B4  EF98  F029         	goto	l4221
 13364  0053B8                     u4100:
 13365  0053B8  C01C  FFD9         	movff	stop@mR,fsr2l
 13366  0053BC  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13367  0053C0  50DF               	movf	indf2,w,c
 13368  0053C2  A4D8               	btfss	status,2,c
 13369  0053C4  EFE6  F029         	goto	u4111
 13370  0053C8  EFE8  F029         	goto	u4110
 13371  0053CC                     u4111:
 13372  0053CC  EF98  F029         	goto	l4221
 13373  0053D0                     u4110:
 13374  0053D0                     
 13375                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 13376  0053D0  0E29               	movlw	41
 13377  0053D2  6E1F               	movwf	(??_stop+1)^0,c
 13378  0053D4  0E96               	movlw	150
 13379  0053D6  6E1E               	movwf	??_stop^0,c
 13380  0053D8  0E7F               	movlw	127
 13381  0053DA                     u6707:
 13382  0053DA  2EE8               	decfsz	wreg,f,c
 13383  0053DC  D7FE               	bra	u6707
 13384  0053DE  2E1E               	decfsz	??_stop^0,f,c
 13385  0053E0  D7FC               	bra	u6707
 13386  0053E2  2E1F               	decfsz	(??_stop+1)^0,f,c
 13387  0053E4  D7FA               	bra	u6707
 13388  0053E6  F000               	nop	
 13389  0053E8  0012               	return		;funcret
 13390  0053EA                     __end_of_stop:
 13391                           	callstack 0
 13392                           
 13393 ;; *************** function _fullSpeedBack *****************
 13394 ;; Defined at:
 13395 ;;		line 205 in file "dc_motor.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13398 ;;		 -> main@motorL(9), 
 13399 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13400 ;;		 -> main@motorR(9), 
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;		None
 13403 ;; Return value:  Size  Location     Type
 13404 ;;                  1    wreg      void 
 13405 ;; Registers used:
 13406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13407 ;; Tracked objects:
 13408 ;;		On entry : 0/0
 13409 ;;		On exit  : 0/0
 13410 ;;		Unchanged: 0/0
 13411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13414 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;Total ram usage:        5 bytes
 13417 ;; Hardware stack levels used: 1
 13418 ;; Hardware stack levels required when called: 3
 13419 ;; This function calls:
 13420 ;;		_setMotorPWM
 13421 ;; This function is called by:
 13422 ;;		_short_reverse
 13423 ;; This function uses a non-reentrant model
 13424 ;;
 13425                           
 13426                           	psect	text67
 13427  005490                     __ptext67:
 13428                           	callstack 0
 13429  005490                     _fullSpeedBack:
 13430                           	callstack 25
 13431  005490                     
 13432                           ;dc_motor.c: 205: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 206: {;dc_motor.c: 207:     mL->direction=0;
 13433  005490  EE20 F001          	lfsr	2,1
 13434  005494  501A               	movf	fullSpeedBack@mL^0,w,c
 13435  005496  26D9               	addwf	fsr2l,f,c
 13436  005498  501B               	movf	(fullSpeedBack@mL+1)^0,w,c
 13437  00549A  22DA               	addwfc	fsr2h,f,c
 13438  00549C  0E00               	movlw	0
 13439  00549E  6EDF               	movwf	indf2,c
 13440                           
 13441                           ;dc_motor.c: 208:     mR->direction=0;
 13442  0054A0  EE20 F001          	lfsr	2,1
 13443  0054A4  501C               	movf	fullSpeedBack@mR^0,w,c
 13444  0054A6  26D9               	addwf	fsr2l,f,c
 13445  0054A8  501D               	movf	(fullSpeedBack@mR+1)^0,w,c
 13446  0054AA  22DA               	addwfc	fsr2h,f,c
 13447  0054AC  0E00               	movlw	0
 13448  0054AE  6EDF               	movwf	indf2,c
 13449                           
 13450                           ;dc_motor.c: 209:     while (mL->power<40 && mR->power<40){
 13451  0054B0  EF79  F02A         	goto	l4271
 13452  0054B4                     l4263:
 13453                           
 13454                           ;dc_motor.c: 210:         mL->power += 10;
 13455  0054B4  C01A  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13456  0054B8  C01B  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13457  0054BC  0E0A               	movlw	10
 13458  0054BE  26DF               	addwf	indf2,f,c
 13459                           
 13460                           ;dc_motor.c: 211:         mR->power += 10;
 13461  0054C0  C01C  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13462  0054C4  C01D  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13463  0054C8  0E0A               	movlw	10
 13464  0054CA  26DF               	addwf	indf2,f,c
 13465  0054CC                     
 13466                           ;dc_motor.c: 212:         setMotorPWM(mL);
 13467  0054CC  C01A  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 13468  0054D0  C01B  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 13469  0054D4  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13470  0054D8                     
 13471                           ;dc_motor.c: 213:         setMotorPWM(mR);
 13472  0054D8  C01C  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 13473  0054DC  C01D  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 13474  0054E0  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13475  0054E4                     
 13476                           ;dc_motor.c: 214:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13477  0054E4  0ED0               	movlw	208
 13478  0054E6  6E1E               	movwf	??_fullSpeedBack^0,c
 13479  0054E8  0ECA               	movlw	202
 13480  0054EA                     u6717:
 13481  0054EA  2EE8               	decfsz	wreg,f,c
 13482  0054EC  D7FE               	bra	u6717
 13483  0054EE  2E1E               	decfsz	??_fullSpeedBack^0,f,c
 13484  0054F0  D7FC               	bra	u6717
 13485  0054F2                     l4271:
 13486                           
 13487                           ;dc_motor.c: 209:     while (mL->power<40 && mR->power<40){
 13488  0054F2  C01A  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13489  0054F6  C01B  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13490  0054FA  0E28               	movlw	40
 13491  0054FC  60DF               	cpfslt	indf2,c
 13492  0054FE  EF83  F02A         	goto	u4161
 13493  005502  EF85  F02A         	goto	u4160
 13494  005506                     u4161:
 13495  005506  EF91  F02A         	goto	l357
 13496  00550A                     u4160:
 13497  00550A  C01C  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13498  00550E  C01D  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13499  005512  0E27               	movlw	39
 13500  005514  64DF               	cpfsgt	indf2,c
 13501  005516  EF8F  F02A         	goto	u4171
 13502  00551A  EF91  F02A         	goto	u4170
 13503  00551E                     u4171:
 13504  00551E  EF5A  F02A         	goto	l4263
 13505  005522                     u4170:
 13506  005522                     l357:
 13507  005522  0012               	return		;funcret
 13508  005524                     __end_of_fullSpeedBack:
 13509                           	callstack 0
 13510                           
 13511 ;; *************** function _fullSpeedAhead *****************
 13512 ;; Defined at:
 13513 ;;		line 185 in file "dc_motor.c"
 13514 ;; Parameters:    Size  Location     Type
 13515 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13516 ;;		 -> main@motorL(9), 
 13517 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13518 ;;		 -> main@motorR(9), 
 13519 ;; Auto vars:     Size  Location     Type
 13520 ;;		None
 13521 ;; Return value:  Size  Location     Type
 13522 ;;                  1    wreg      void 
 13523 ;; Registers used:
 13524 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13525 ;; Tracked objects:
 13526 ;;		On entry : 0/0
 13527 ;;		On exit  : 0/0
 13528 ;;		Unchanged: 0/0
 13529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13533 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13534 ;;Total ram usage:        5 bytes
 13535 ;; Hardware stack levels used: 1
 13536 ;; Hardware stack levels required when called: 3
 13537 ;; This function calls:
 13538 ;;		_setMotorPWM
 13539 ;; This function is called by:
 13540 ;;		_fullSpeedAhead_test
 13541 ;;		_main
 13542 ;;		_short_burst
 13543 ;;		_goback
 13544 ;;		_test_function
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           	psect	text68
 13549  0051A4                     __ptext68:
 13550                           	callstack 0
 13551  0051A4                     _fullSpeedAhead:
 13552                           	callstack 26
 13553  0051A4                     
 13554                           ;dc_motor.c: 185: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 186: {;dc_motor.c: 187:     mL->direction=1;
 13555  0051A4  EE20 F001          	lfsr	2,1
 13556  0051A8  501A               	movf	fullSpeedAhead@mL^0,w,c
 13557  0051AA  26D9               	addwf	fsr2l,f,c
 13558  0051AC  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 13559  0051AE  22DA               	addwfc	fsr2h,f,c
 13560  0051B0  0E01               	movlw	1
 13561  0051B2  6EDF               	movwf	indf2,c
 13562                           
 13563                           ;dc_motor.c: 188:     mR->direction=1;
 13564  0051B4  EE20 F001          	lfsr	2,1
 13565  0051B8  501C               	movf	fullSpeedAhead@mR^0,w,c
 13566  0051BA  26D9               	addwf	fsr2l,f,c
 13567  0051BC  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 13568  0051BE  22DA               	addwfc	fsr2h,f,c
 13569  0051C0  0E01               	movlw	1
 13570  0051C2  6EDF               	movwf	indf2,c
 13571                           
 13572                           ;dc_motor.c: 189:     while (mL->power<34 || mR->power<30){
 13573  0051C4  EF1B  F029         	goto	l4257
 13574  0051C8                     l4243:
 13575                           
 13576                           ;dc_motor.c: 190:         if (mL->power<34) {mL->power += 2;}
 13577  0051C8  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13578  0051CC  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13579  0051D0  0E22               	movlw	34
 13580  0051D2  60DF               	cpfslt	indf2,c
 13581  0051D4  EFEE  F028         	goto	u4121
 13582  0051D8  EFF0  F028         	goto	u4120
 13583  0051DC                     u4121:
 13584  0051DC  EFF6  F028         	goto	l4247
 13585  0051E0                     u4120:
 13586  0051E0  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13587  0051E4  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13588  0051E8  0E02               	movlw	2
 13589  0051EA  26DF               	addwf	indf2,f,c
 13590  0051EC                     l4247:
 13591                           
 13592                           ;dc_motor.c: 191:         if (mR->power<30) {mR->power += 2;}
 13593  0051EC  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13594  0051F0  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13595  0051F4  0E1E               	movlw	30
 13596  0051F6  60DF               	cpfslt	indf2,c
 13597  0051F8  EF00  F029         	goto	u4131
 13598  0051FC  EF02  F029         	goto	u4130
 13599  005200                     u4131:
 13600  005200  EF08  F029         	goto	l4251
 13601  005204                     u4130:
 13602  005204  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13603  005208  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13604  00520C  0E02               	movlw	2
 13605  00520E  26DF               	addwf	indf2,f,c
 13606  005210                     l4251:
 13607                           
 13608                           ;dc_motor.c: 193:         setMotorPWM(mL);
 13609  005210  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 13610  005214  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 13611  005218  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13612  00521C                     
 13613                           ;dc_motor.c: 194:         setMotorPWM(mR);
 13614  00521C  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 13615  005220  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 13616  005224  ECB8  F01D         	call	_setMotorPWM	;wreg free
 13617  005228                     
 13618                           ;dc_motor.c: 195:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13619  005228  0ED0               	movlw	208
 13620  00522A  6E1E               	movwf	??_fullSpeedAhead^0,c
 13621  00522C  0ECA               	movlw	202
 13622  00522E                     u6727:
 13623  00522E  2EE8               	decfsz	wreg,f,c
 13624  005230  D7FE               	bra	u6727
 13625  005232  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 13626  005234  D7FC               	bra	u6727
 13627  005236                     l4257:
 13628                           
 13629                           ;dc_motor.c: 189:     while (mL->power<34 || mR->power<30){
 13630  005236  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13631  00523A  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13632  00523E  0E21               	movlw	33
 13633  005240  64DF               	cpfsgt	indf2,c
 13634  005242  EF25  F029         	goto	u4141
 13635  005246  EF27  F029         	goto	u4140
 13636  00524A                     u4141:
 13637  00524A  EFE4  F028         	goto	l4243
 13638  00524E                     u4140:
 13639  00524E  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13640  005252  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13641  005256  0E1D               	movlw	29
 13642  005258  64DF               	cpfsgt	indf2,c
 13643  00525A  EF31  F029         	goto	u4151
 13644  00525E  EF33  F029         	goto	u4150
 13645  005262                     u4151:
 13646  005262  EFE4  F028         	goto	l4243
 13647  005266                     u4150:
 13648  005266  0012               	return		;funcret
 13649  005268                     __end_of_fullSpeedAhead:
 13650                           	callstack 0
 13651                           
 13652 ;; *************** function _setMotorPWM *****************
 13653 ;; Defined at:
 13654 ;;		line 59 in file "dc_motor.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  m               2   14[COMRAM] PTR struct DC_motor
 13657 ;;		 -> main@motorR(9), main@motorL(9), 
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;  PWMduty         2   23[COMRAM] int 
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      void 
 13662 ;; Registers used:
 13663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13664 ;; Tracked objects:
 13665 ;;		On entry : 0/0
 13666 ;;		On exit  : 0/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13671 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13672 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13673 ;;Total ram usage:       11 bytes
 13674 ;; Hardware stack levels used: 1
 13675 ;; Hardware stack levels required when called: 2
 13676 ;; This function calls:
 13677 ;;		___awdiv
 13678 ;;		___wmul
 13679 ;; This function is called by:
 13680 ;;		_stop
 13681 ;;		_turn45
 13682 ;;		_turnLeft
 13683 ;;		_turnRight
 13684 ;;		_fullSpeedAhead
 13685 ;;		_fullSpeedBack
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           	psect	text69
 13690  003B70                     __ptext69:
 13691                           	callstack 0
 13692  003B70                     _setMotorPWM:
 13693                           	callstack 27
 13694  003B70                     
 13695                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 13696  003B70  EE20 F001          	lfsr	2,1
 13697  003B74  500F               	movf	setMotorPWM@m^0,w,c
 13698  003B76  26D9               	addwf	fsr2l,f,c
 13699  003B78  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13700  003B7A  22DA               	addwfc	fsr2h,f,c
 13701  003B7C  50DF               	movf	indf2,w,c
 13702  003B7E  B4D8               	btfsc	status,2,c
 13703  003B80  EFC4  F01D         	goto	u3611
 13704  003B84  EFC6  F01D         	goto	u3610
 13705  003B88                     u3611:
 13706  003B88  EFF7  F01D         	goto	l3913
 13707  003B8C                     u3610:
 13708  003B8C                     
 13709                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 13710  003B8C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 13711  003B90  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13712  003B94  50DF               	movf	indf2,w,c
 13713  003B96  6E11               	movwf	??_setMotorPWM^0,c
 13714  003B98  5011               	movf	??_setMotorPWM^0,w,c
 13715  003B9A  6E01               	movwf	___wmul@multiplier^0,c
 13716  003B9C  6A02               	clrf	(___wmul@multiplier+1)^0,c
 13717  003B9E  EE20 F007          	lfsr	2,7
 13718  003BA2  500F               	movf	setMotorPWM@m^0,w,c
 13719  003BA4  26D9               	addwf	fsr2l,f,c
 13720  003BA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13721  003BA8  22DA               	addwfc	fsr2h,f,c
 13722  003BAA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13723  003BAE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13724  003BB2  ECCF  F02D         	call	___wmul	;wreg free
 13725  003BB6  C001  F007         	movff	?___wmul,___awdiv@dividend
 13726  003BBA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 13727  003BBE  0E00               	movlw	0
 13728  003BC0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 13729  003BC2  0E64               	movlw	100
 13730  003BC4  6E09               	movwf	___awdiv@divisor^0,c
 13731  003BC6  EC34  F029         	call	___awdiv	;wreg free
 13732  003BCA  EE20 F007          	lfsr	2,7
 13733  003BCE  500F               	movf	setMotorPWM@m^0,w,c
 13734  003BD0  26D9               	addwf	fsr2l,f,c
 13735  003BD2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13736  003BD4  22DA               	addwfc	fsr2h,f,c
 13737  003BD6  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 13738  003BDA  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 13739  003BDE  5007               	movf	?___awdiv^0,w,c
 13740  003BE0  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 13741  003BE2  6E18               	movwf	setMotorPWM@PWMduty^0,c
 13742  003BE4  5008               	movf	(?___awdiv+1)^0,w,c
 13743  003BE6  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 13744  003BE8  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 13745                           
 13746                           ;dc_motor.c: 66:  }
 13747  003BEA  EF1A  F01E         	goto	l3915
 13748  003BEE                     l3913:
 13749                           
 13750                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13751  003BEE  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 13752  003BF2  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13753  003BF6  50DF               	movf	indf2,w,c
 13754  003BF8  6E11               	movwf	??_setMotorPWM^0,c
 13755  003BFA  5011               	movf	??_setMotorPWM^0,w,c
 13756  003BFC  6E01               	movwf	___wmul@multiplier^0,c
 13757  003BFE  6A02               	clrf	(___wmul@multiplier+1)^0,c
 13758  003C00  EE20 F007          	lfsr	2,7
 13759  003C04  500F               	movf	setMotorPWM@m^0,w,c
 13760  003C06  26D9               	addwf	fsr2l,f,c
 13761  003C08  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13762  003C0A  22DA               	addwfc	fsr2h,f,c
 13763  003C0C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13764  003C10  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13765  003C14  ECCF  F02D         	call	___wmul	;wreg free
 13766  003C18  C001  F007         	movff	?___wmul,___awdiv@dividend
 13767  003C1C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 13768  003C20  0E00               	movlw	0
 13769  003C22  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 13770  003C24  0E64               	movlw	100
 13771  003C26  6E09               	movwf	___awdiv@divisor^0,c
 13772  003C28  EC34  F029         	call	___awdiv	;wreg free
 13773  003C2C  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 13774  003C30  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 13775  003C34                     l3915:
 13776                           
 13777                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 13778  003C34  EE20 F002          	lfsr	2,2
 13779  003C38  500F               	movf	setMotorPWM@m^0,w,c
 13780  003C3A  26D9               	addwf	fsr2l,f,c
 13781  003C3C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13782  003C3E  22DA               	addwfc	fsr2h,f,c
 13783  003C40  CFDE F011          	movff	postinc2,??_setMotorPWM
 13784  003C44  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 13785  003C48  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 13786  003C4C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13787  003C50  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 13788  003C54                     
 13789                           ;dc_motor.c: 74:  if (m->direction){
 13790  003C54  EE20 F001          	lfsr	2,1
 13791  003C58  500F               	movf	setMotorPWM@m^0,w,c
 13792  003C5A  26D9               	addwf	fsr2l,f,c
 13793  003C5C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13794  003C5E  22DA               	addwfc	fsr2h,f,c
 13795  003C60  50DF               	movf	indf2,w,c
 13796  003C62  B4D8               	btfsc	status,2,c
 13797  003C64  EF36  F01E         	goto	u3621
 13798  003C68  EF38  F01E         	goto	u3620
 13799  003C6C                     u3621:
 13800  003C6C  EF6D  F01E         	goto	l3921
 13801  003C70                     u3620:
 13802  003C70                     
 13803                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 13804  003C70  EE20 F004          	lfsr	2,4
 13805  003C74  500F               	movf	setMotorPWM@m^0,w,c
 13806  003C76  26D9               	addwf	fsr2l,f,c
 13807  003C78  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13808  003C7A  22DA               	addwfc	fsr2h,f,c
 13809  003C7C  CFDE F011          	movff	postinc2,??_setMotorPWM
 13810  003C80  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 13811  003C84  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 13812  003C88  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13813  003C8C  EE10 F004          	lfsr	1,4
 13814  003C90  500F               	movf	setMotorPWM@m^0,w,c
 13815  003C92  26E1               	addwf	fsr1l,f,c
 13816  003C94  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13817  003C96  22E2               	addwfc	fsr1h,f,c
 13818  003C98  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 13819  003C9C  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 13820  003CA0  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13821  003CA4  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13822  003CA8  50E7               	movf	indf1,w,c
 13823  003CAA  6E15               	movwf	(??_setMotorPWM+4)^0,c
 13824  003CAC  EE10 F006          	lfsr	1,6
 13825  003CB0  500F               	movf	setMotorPWM@m^0,w,c
 13826  003CB2  26E1               	addwf	fsr1l,f,c
 13827  003CB4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13828  003CB6  22E2               	addwfc	fsr1h,f,c
 13829  003CB8  50E7               	movf	indf1,w,c
 13830  003CBA  6E16               	movwf	(??_setMotorPWM+5)^0,c
 13831  003CBC  0E01               	movlw	1
 13832  003CBE  6E17               	movwf	(??_setMotorPWM+6)^0,c
 13833  003CC0  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 13834  003CC2  EF65  F01E         	goto	u3634
 13835  003CC6                     u3635:
 13836  003CC6  90D8               	bcf	status,0,c
 13837  003CC8  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 13838  003CCA                     u3634:
 13839  003CCA  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 13840  003CCC  EF63  F01E         	goto	u3635
 13841  003CD0  5017               	movf	(??_setMotorPWM+6)^0,w,c
 13842  003CD2  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 13843  003CD4  6EDF               	movwf	indf2,c
 13844                           
 13845                           ;dc_motor.c: 76:  } else {
 13846  003CD6  EFA1  F01E         	goto	l272
 13847  003CDA                     l3921:
 13848                           
 13849                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 13850  003CDA  EE20 F004          	lfsr	2,4
 13851  003CDE  500F               	movf	setMotorPWM@m^0,w,c
 13852  003CE0  26D9               	addwf	fsr2l,f,c
 13853  003CE2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13854  003CE4  22DA               	addwfc	fsr2h,f,c
 13855  003CE6  CFDE F011          	movff	postinc2,??_setMotorPWM
 13856  003CEA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 13857  003CEE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 13858  003CF2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13859  003CF6  EE10 F004          	lfsr	1,4
 13860  003CFA  500F               	movf	setMotorPWM@m^0,w,c
 13861  003CFC  26E1               	addwf	fsr1l,f,c
 13862  003CFE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13863  003D00  22E2               	addwfc	fsr1h,f,c
 13864  003D02  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 13865  003D06  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 13866  003D0A  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13867  003D0E  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13868  003D12  50E7               	movf	indf1,w,c
 13869  003D14  6E15               	movwf	(??_setMotorPWM+4)^0,c
 13870  003D16  EE10 F006          	lfsr	1,6
 13871  003D1A  500F               	movf	setMotorPWM@m^0,w,c
 13872  003D1C  26E1               	addwf	fsr1l,f,c
 13873  003D1E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13874  003D20  22E2               	addwfc	fsr1h,f,c
 13875  003D22  50E7               	movf	indf1,w,c
 13876  003D24  6E16               	movwf	(??_setMotorPWM+5)^0,c
 13877  003D26  0E01               	movlw	1
 13878  003D28  6E17               	movwf	(??_setMotorPWM+6)^0,c
 13879  003D2A  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 13880  003D2C  EF9A  F01E         	goto	u3644
 13881  003D30                     u3645:
 13882  003D30  90D8               	bcf	status,0,c
 13883  003D32  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 13884  003D34                     u3644:
 13885  003D34  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 13886  003D36  EF98  F01E         	goto	u3645
 13887  003D3A  5017               	movf	(??_setMotorPWM+6)^0,w,c
 13888  003D3C  0AFF               	xorlw	255
 13889  003D3E  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 13890  003D40  6EDF               	movwf	indf2,c
 13891  003D42                     l272:
 13892  003D42  0012               	return		;funcret
 13893  003D44                     __end_of_setMotorPWM:
 13894                           	callstack 0
 13895                           
 13896 ;; *************** function ___wmul *****************
 13897 ;; Defined at:
 13898 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  multiplier      2    0[COMRAM] unsigned int 
 13901 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  product         2    4[COMRAM] unsigned int 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  2    0[COMRAM] unsigned int 
 13906 ;; Registers used:
 13907 ;;		wreg, status,2, status,0, prodl, prodh
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13916 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13917 ;;Total ram usage:        6 bytes
 13918 ;; Hardware stack levels used: 1
 13919 ;; Hardware stack levels required when called: 1
 13920 ;; This function calls:
 13921 ;;		Nothing
 13922 ;; This function is called by:
 13923 ;;		_setMotorPWM
 13924 ;;		_turnLeft
 13925 ;;		_turnRight
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text70
 13930  005B9E                     __ptext70:
 13931                           	callstack 0
 13932  005B9E                     ___wmul:
 13933                           	callstack 27
 13934  005B9E  5001               	movf	___wmul@multiplier^0,w,c
 13935  005BA0  0203               	mulwf	___wmul@multiplicand^0,c
 13936  005BA2  CFF3 F005          	movff	prodl,___wmul@product
 13937  005BA6  CFF4 F006          	movff	prodh,___wmul@product+1
 13938  005BAA  5001               	movf	___wmul@multiplier^0,w,c
 13939  005BAC  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13940  005BAE  50F3               	movf	243,w,c
 13941  005BB0  2606               	addwf	(___wmul@product+1)^0,f,c
 13942  005BB2  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13943  005BB4  0203               	mulwf	___wmul@multiplicand^0,c
 13944  005BB6  50F3               	movf	243,w,c
 13945  005BB8  2606               	addwf	(___wmul@product+1)^0,f,c
 13946  005BBA  C005  F001         	movff	___wmul@product,?___wmul
 13947  005BBE  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13948  005BC2  0012               	return		;funcret
 13949  005BC4                     __end_of___wmul:
 13950                           	callstack 0
 13951                           
 13952 ;; *************** function ___awdiv *****************
 13953 ;; Defined at:
 13954 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;  dividend        2    6[COMRAM] int 
 13957 ;;  divisor         2    8[COMRAM] int 
 13958 ;; Auto vars:     Size  Location     Type
 13959 ;;  quotient        2   12[COMRAM] int 
 13960 ;;  sign            1   11[COMRAM] unsigned char 
 13961 ;;  counter         1   10[COMRAM] unsigned char 
 13962 ;; Return value:  Size  Location     Type
 13963 ;;                  2    6[COMRAM] int 
 13964 ;; Registers used:
 13965 ;;		wreg, status,2, status,0
 13966 ;; Tracked objects:
 13967 ;;		On entry : 0/0
 13968 ;;		On exit  : 0/0
 13969 ;;		Unchanged: 0/0
 13970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13974 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13975 ;;Total ram usage:        8 bytes
 13976 ;; Hardware stack levels used: 1
 13977 ;; Hardware stack levels required when called: 1
 13978 ;; This function calls:
 13979 ;;		Nothing
 13980 ;; This function is called by:
 13981 ;;		_setMotorPWM
 13982 ;; This function uses a non-reentrant model
 13983 ;;
 13984                           
 13985                           	psect	text71
 13986  005268                     __ptext71:
 13987                           	callstack 0
 13988  005268                     ___awdiv:
 13989                           	callstack 27
 13990  005268  0E00               	movlw	0
 13991  00526A  6E0C               	movwf	___awdiv@sign^0,c
 13992  00526C  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 13993  00526E  EF3D  F029         	goto	u3510
 13994  005272  EF3B  F029         	goto	u3511
 13995  005276                     u3511:
 13996  005276  EF43  F029         	goto	l3825
 13997  00527A                     u3510:
 13998  00527A  6C09               	negf	___awdiv@divisor^0,c
 13999  00527C  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 14000  00527E  B0D8               	btfsc	status,0,c
 14001  005280  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 14002  005282  0E01               	movlw	1
 14003  005284  6E0C               	movwf	___awdiv@sign^0,c
 14004  005286                     l3825:
 14005  005286  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 14006  005288  EF4A  F029         	goto	u3520
 14007  00528C  EF48  F029         	goto	u3521
 14008  005290                     u3521:
 14009  005290  EF50  F029         	goto	l3831
 14010  005294                     u3520:
 14011  005294  6C07               	negf	___awdiv@dividend^0,c
 14012  005296  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 14013  005298  B0D8               	btfsc	status,0,c
 14014  00529A  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 14015  00529C  0E01               	movlw	1
 14016  00529E  1A0C               	xorwf	___awdiv@sign^0,f,c
 14017  0052A0                     l3831:
 14018  0052A0  0E00               	movlw	0
 14019  0052A2  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 14020  0052A4  0E00               	movlw	0
 14021  0052A6  6E0D               	movwf	___awdiv@quotient^0,c
 14022  0052A8  5009               	movf	___awdiv@divisor^0,w,c
 14023  0052AA  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 14024  0052AC  B4D8               	btfsc	status,2,c
 14025  0052AE  EF5B  F029         	goto	u3531
 14026  0052B2  EF5D  F029         	goto	u3530
 14027  0052B6                     u3531:
 14028  0052B6  EF85  F029         	goto	l3853
 14029  0052BA                     u3530:
 14030  0052BA  0E01               	movlw	1
 14031  0052BC  6E0B               	movwf	___awdiv@counter^0,c
 14032  0052BE  EF65  F029         	goto	l3839
 14033  0052C2                     l3837:
 14034  0052C2  90D8               	bcf	status,0,c
 14035  0052C4  3609               	rlcf	___awdiv@divisor^0,f,c
 14036  0052C6  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 14037  0052C8  2A0B               	incf	___awdiv@counter^0,f,c
 14038  0052CA                     l3839:
 14039  0052CA  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 14040  0052CC  EF6A  F029         	goto	u3541
 14041  0052D0  EF6C  F029         	goto	u3540
 14042  0052D4                     u3541:
 14043  0052D4  EF61  F029         	goto	l3837
 14044  0052D8                     u3540:
 14045  0052D8                     l3841:
 14046  0052D8  90D8               	bcf	status,0,c
 14047  0052DA  360D               	rlcf	___awdiv@quotient^0,f,c
 14048  0052DC  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 14049  0052DE  5009               	movf	___awdiv@divisor^0,w,c
 14050  0052E0  5C07               	subwf	___awdiv@dividend^0,w,c
 14051  0052E2  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14052  0052E4  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 14053  0052E6  A0D8               	btfss	status,0,c
 14054  0052E8  EF78  F029         	goto	u3551
 14055  0052EC  EF7A  F029         	goto	u3550
 14056  0052F0                     u3551:
 14057  0052F0  EF7F  F029         	goto	l3849
 14058  0052F4                     u3550:
 14059  0052F4  5009               	movf	___awdiv@divisor^0,w,c
 14060  0052F6  5E07               	subwf	___awdiv@dividend^0,f,c
 14061  0052F8  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14062  0052FA  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 14063  0052FC  800D               	bsf	___awdiv@quotient^0,0,c
 14064  0052FE                     l3849:
 14065  0052FE  90D8               	bcf	status,0,c
 14066  005300  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 14067  005302  3209               	rrcf	___awdiv@divisor^0,f,c
 14068  005304  2E0B               	decfsz	___awdiv@counter^0,f,c
 14069  005306  EF6C  F029         	goto	l3841
 14070  00530A                     l3853:
 14071  00530A  500C               	movf	___awdiv@sign^0,w,c
 14072  00530C  B4D8               	btfsc	status,2,c
 14073  00530E  EF8B  F029         	goto	u3561
 14074  005312  EF8D  F029         	goto	u3560
 14075  005316                     u3561:
 14076  005316  EF91  F029         	goto	l3857
 14077  00531A                     u3560:
 14078  00531A  6C0D               	negf	___awdiv@quotient^0,c
 14079  00531C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 14080  00531E  B0D8               	btfsc	status,0,c
 14081  005320  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 14082  005322                     l3857:
 14083  005322  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 14084  005326  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 14085  00532A  0012               	return		;funcret
 14086  00532C                     __end_of___awdiv:
 14087                           	callstack 0
 14088                           
 14089 ;; *************** function _Timer0_init *****************
 14090 ;; Defined at:
 14091 ;;		line 7 in file "timers.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;		None
 14094 ;; Auto vars:     Size  Location     Type
 14095 ;;		None
 14096 ;; Return value:  Size  Location     Type
 14097 ;;                  1    wreg      void 
 14098 ;; Registers used:
 14099 ;;		wreg, status,2
 14100 ;; Tracked objects:
 14101 ;;		On entry : 0/0
 14102 ;;		On exit  : 0/0
 14103 ;;		Unchanged: 0/0
 14104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14109 ;;Total ram usage:        0 bytes
 14110 ;; Hardware stack levels used: 1
 14111 ;; Hardware stack levels required when called: 1
 14112 ;; This function calls:
 14113 ;;		Nothing
 14114 ;; This function is called by:
 14115 ;;		_main
 14116 ;; This function uses a non-reentrant model
 14117 ;;
 14118                           
 14119                           	psect	text72
 14120  005CC2                     __ptext72:
 14121                           	callstack 0
 14122  005CC2                     _Timer0_init:
 14123                           	callstack 29
 14124  005CC2                     
 14125                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14126  005CC2  50D6               	movf	214,w,c	;volatile
 14127  005CC4  0B1F               	andlw	-225
 14128  005CC6  0940               	iorlw	64
 14129  005CC8  6ED6               	movwf	214,c	;volatile
 14130  005CCA                     
 14131                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14132  005CCA  88D6               	bsf	214,4,c	;volatile
 14133                           
 14134                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14135  005CCC  50D6               	movf	214,w,c	;volatile
 14136  005CCE  0BF0               	andlw	-16
 14137  005CD0  0905               	iorlw	5
 14138  005CD2  6ED6               	movwf	214,c	;volatile
 14139  005CD4                     
 14140                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14141  005CD4  88D5               	bsf	213,4,c	;volatile
 14142                           
 14143                           ;timers.c: 16:     TMR0H=0b00111100;
 14144  005CD6  0E3C               	movlw	60
 14145  005CD8  6ED4               	movwf	212,c	;volatile
 14146                           
 14147                           ;timers.c: 17:     TMR0L=0b10101111;
 14148  005CDA  0EAF               	movlw	175
 14149  005CDC  6ED3               	movwf	211,c	;volatile
 14150  005CDE  0012               	return		;funcret
 14151  005CE0                     __end_of_Timer0_init:
 14152                           	callstack 0
 14153                           
 14154 ;; *************** function _Interrupts_init *****************
 14155 ;; Defined at:
 14156 ;;		line 9 in file "interrupts.c"
 14157 ;; Parameters:    Size  Location     Type
 14158 ;;		None
 14159 ;; Auto vars:     Size  Location     Type
 14160 ;;		None
 14161 ;; Return value:  Size  Location     Type
 14162 ;;                  1    wreg      void 
 14163 ;; Registers used:
 14164 ;;		None
 14165 ;; Tracked objects:
 14166 ;;		On entry : 0/0
 14167 ;;		On exit  : 0/0
 14168 ;;		Unchanged: 0/0
 14169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14174 ;;Total ram usage:        0 bytes
 14175 ;; Hardware stack levels used: 1
 14176 ;; Hardware stack levels required when called: 1
 14177 ;; This function calls:
 14178 ;;		Nothing
 14179 ;; This function is called by:
 14180 ;;		_main
 14181 ;; This function uses a non-reentrant model
 14182 ;;
 14183                           
 14184                           	psect	text73
 14185  005D1A                     __ptext73:
 14186                           	callstack 0
 14187  005D1A                     _Interrupts_init:
 14188                           	callstack 29
 14189  005D1A  8EF2               	bsf	242,7,c	;volatile
 14190                           
 14191                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14192  005D1C  8AF2               	bsf	242,5,c	;volatile
 14193                           
 14194                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14195  005D1E  8CF2               	bsf	242,6,c	;volatile
 14196                           
 14197                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14198  005D20  010E               	movlb	14	; () banked
 14199  005D22  8B29               	bsf	41,5,b	;volatile
 14200  005D24                     
 14201                           ; BSR set to: 14
 14202  005D24  0012               	return		;funcret
 14203  005D26                     __end_of_Interrupts_init:
 14204                           	callstack 0
 14205                           
 14206 ;; *************** function _HighISR *****************
 14207 ;; Defined at:
 14208 ;;		line 21 in file "interrupts.c"
 14209 ;; Parameters:    Size  Location     Type
 14210 ;;		None
 14211 ;; Auto vars:     Size  Location     Type
 14212 ;;		None
 14213 ;; Return value:  Size  Location     Type
 14214 ;;                  1    wreg      void 
 14215 ;; Registers used:
 14216 ;;		wreg, status,2, status,0
 14217 ;; Tracked objects:
 14218 ;;		On entry : 0/0
 14219 ;;		On exit  : 0/0
 14220 ;;		Unchanged: 0/0
 14221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14226 ;;Total ram usage:        0 bytes
 14227 ;; Hardware stack levels used: 1
 14228 ;; This function calls:
 14229 ;;		Nothing
 14230 ;; This function is called by:
 14231 ;;		Interrupt level 2
 14232 ;; This function uses a non-reentrant model
 14233 ;;
 14234                           
 14235                           	psect	intcode
 14236  000008                     __pintcode:
 14237                           	callstack 0
 14238  000008                     _HighISR:
 14239                           	callstack 22
 14240                           
 14241                           ; BSR set to: 14
 14242                           ;incstack = 0
 14243  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14244  00000A                     
 14245                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14246  00000A  010E               	movlb	14	; () banked
 14247  00000C  AB33               	btfss	51,5,b	;volatile
 14248  00000E  EF0B  F000         	goto	i2u601_41
 14249  000012  EF0D  F000         	goto	i2u601_40
 14250  000016                     i2u601_41:
 14251  000016  EF16  F000         	goto	i2l624
 14252  00001A                     i2u601_40:
 14253  00001A                     
 14254                           ; BSR set to: 14
 14255                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14256  00001A  0E3C               	movlw	60
 14257  00001C  6ED4               	movwf	212,c	;volatile
 14258                           
 14259                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14260  00001E  0EAF               	movlw	175
 14261  000020  6ED3               	movwf	211,c	;volatile
 14262  000022                     
 14263                           ; BSR set to: 14
 14264                           ;interrupts.c: 26:         centisecond ++;
 14265  000022  0101               	movlb	1	; () banked
 14266  000024  4BD3               	infsnz	_centisecond& (0+255),f,b
 14267  000026  2BD4               	incf	(_centisecond+1)& (0+255),f,b
 14268  000028                     
 14269                           ; BSR set to: 1
 14270                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14271  000028  010E               	movlb	14	; () banked
 14272  00002A  9B33               	bcf	51,5,b	;volatile
 14273  00002C                     i2l624:
 14274                           
 14275                           ; BSR set to: 14
 14276  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14277  00002E  0011               	retfie		f
 14278  000030                     __end_of_HighISR:
 14279                           	callstack 0
 14280                           
 14281                           	psect	rparam
 14282  0000                     
 14283                           	psect	temp
 14284  00005F                     btemp:
 14285                           	callstack 0
 14286  00005F                     	ds	1
 14287  0000                     int$flags	set	btemp
 14288  0000                     wtemp8	set	btemp+1
 14289  0000                     ttemp5	set	btemp+1
 14290  0000                     ttemp6	set	btemp+4
 14291  0000                     ttemp7	set	btemp+8
 14292                           
 14293                           	psect	idloc
 14294                           
 14295                           ;Config register IDLOC0 @ 0x200000
 14296                           ;	unspecified, using default values
 14297  200000                     	org	2097152
 14298  200000  0FFF               	dw	4095
 14299                           
 14300                           ;Config register IDLOC1 @ 0x200002
 14301                           ;	unspecified, using default values
 14302  200002                     	org	2097154
 14303  200002  0FFF               	dw	4095
 14304                           
 14305                           ;Config register IDLOC2 @ 0x200004
 14306                           ;	unspecified, using default values
 14307  200004                     	org	2097156
 14308  200004  0FFF               	dw	4095
 14309                           
 14310                           ;Config register IDLOC3 @ 0x200006
 14311                           ;	unspecified, using default values
 14312  200006                     	org	2097158
 14313  200006  0FFF               	dw	4095
 14314                           
 14315                           ;Config register IDLOC4 @ 0x200008
 14316                           ;	unspecified, using default values
 14317  200008                     	org	2097160
 14318  200008  0FFF               	dw	4095
 14319                           
 14320                           ;Config register IDLOC5 @ 0x20000A
 14321                           ;	unspecified, using default values
 14322  20000A                     	org	2097162
 14323  20000A  0FFF               	dw	4095
 14324                           
 14325                           ;Config register IDLOC6 @ 0x20000C
 14326                           ;	unspecified, using default values
 14327  20000C                     	org	2097164
 14328  20000C  0FFF               	dw	4095
 14329                           
 14330                           ;Config register IDLOC7 @ 0x20000E
 14331                           ;	unspecified, using default values
 14332  20000E                     	org	2097166
 14333  20000E  0FFF               	dw	4095
 14334                           
 14335                           	psect	config
 14336                           
 14337                           ;Config register CONFIG1L @ 0x300000
 14338                           ;	External Oscillator mode Selection bits
 14339                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14340                           ;	Power-up default value for COSC bits
 14341                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14342  300000                     	org	3145728
 14343  300000  AA                 	db	170
 14344                           
 14345                           ;Config register CONFIG1H @ 0x300001
 14346                           ;	unspecified, using default values
 14347                           ;	Clock Out Enable bit
 14348                           ;	CLKOUTEN = 0x1, unprogrammed default
 14349                           ;	Clock Switch Enable bit
 14350                           ;	CSWEN = 0x1, unprogrammed default
 14351                           ;	Fail-Safe Clock Monitor Enable bit
 14352                           ;	FCMEN = 0x1, unprogrammed default
 14353  300001                     	org	3145729
 14354  300001  FF                 	db	255
 14355                           
 14356                           ;Config register CONFIG2L @ 0x300002
 14357                           ;	unspecified, using default values
 14358                           ;	Master Clear Enable bit
 14359                           ;	MCLRE = 0x1, unprogrammed default
 14360                           ;	Power-up Timer Enable bit
 14361                           ;	PWRTE = 0x1, unprogrammed default
 14362                           ;	Low-power BOR enable bit
 14363                           ;	LPBOREN = 0x1, unprogrammed default
 14364                           ;	Brown-out Reset Enable bits
 14365                           ;	BOREN = 0x3, unprogrammed default
 14366  300002                     	org	3145730
 14367  300002  FF                 	db	255
 14368                           
 14369                           ;Config register CONFIG2H @ 0x300003
 14370                           ;	unspecified, using default values
 14371                           ;	Brown Out Reset Voltage selection bits
 14372                           ;	BORV = 0x3, unprogrammed default
 14373                           ;	ZCD Disable bit
 14374                           ;	ZCD = 0x1, unprogrammed default
 14375                           ;	PPSLOCK bit One-Way Set Enable bit
 14376                           ;	PPS1WAY = 0x1, unprogrammed default
 14377                           ;	Stack Full/Underflow Reset Enable bit
 14378                           ;	STVREN = 0x1, unprogrammed default
 14379                           ;	Debugger Enable bit
 14380                           ;	DEBUG = 0x1, unprogrammed default
 14381                           ;	Extended Instruction Set Enable bit
 14382                           ;	XINST = 0x1, unprogrammed default
 14383  300003                     	org	3145731
 14384  300003  FF                 	db	255
 14385                           
 14386                           ;Config register CONFIG3L @ 0x300004
 14387                           ;	WDT Period Select bits
 14388                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14389                           ;	WDT operating mode
 14390                           ;	WDTE = OFF, WDT Disabled
 14391  300004                     	org	3145732
 14392  300004  9F                 	db	159
 14393                           
 14394                           ;Config register CONFIG3H @ 0x300005
 14395                           ;	unspecified, using default values
 14396                           ;	WDT Window Select bits
 14397                           ;	WDTCWS = 0x7, unprogrammed default
 14398                           ;	WDT input clock selector
 14399                           ;	WDTCCS = 0x7, unprogrammed default
 14400  300005                     	org	3145733
 14401  300005  FF                 	db	255
 14402                           
 14403                           ;Config register CONFIG4L @ 0x300006
 14404                           ;	unspecified, using default values
 14405                           ;	Write Protection Block 0
 14406                           ;	WRT0 = 0x1, unprogrammed default
 14407                           ;	Write Protection Block 1
 14408                           ;	WRT1 = 0x1, unprogrammed default
 14409                           ;	Write Protection Block 2
 14410                           ;	WRT2 = 0x1, unprogrammed default
 14411                           ;	Write Protection Block 3
 14412                           ;	WRT3 = 0x1, unprogrammed default
 14413                           ;	Write Protection Block 3
 14414                           ;	WRT4 = 0x1, unprogrammed default
 14415                           ;	Write Protection Block 3
 14416                           ;	WRT5 = 0x1, unprogrammed default
 14417                           ;	Write Protection Block 3
 14418                           ;	WRT6 = 0x1, unprogrammed default
 14419                           ;	Write Protection Block 3
 14420                           ;	WRT7 = 0x1, unprogrammed default
 14421  300006                     	org	3145734
 14422  300006  FF                 	db	255
 14423                           
 14424                           ;Config register CONFIG4H @ 0x300007
 14425                           ;	unspecified, using default values
 14426                           ;	Configuration Register Write Protection bit
 14427                           ;	WRTC = 0x1, unprogrammed default
 14428                           ;	Boot Block Write Protection bit
 14429                           ;	WRTB = 0x1, unprogrammed default
 14430                           ;	Data EEPROM Write Protection bit
 14431                           ;	WRTD = 0x1, unprogrammed default
 14432                           ;	Scanner Enable bit
 14433                           ;	SCANE = 0x1, unprogrammed default
 14434                           ;	Low Voltage Programming Enable bit
 14435                           ;	LVP = 0x1, unprogrammed default
 14436  300007                     	org	3145735
 14437  300007  FF                 	db	255
 14438                           
 14439                           ;Config register CONFIG5L @ 0x300008
 14440                           ;	unspecified, using default values
 14441                           ;	UserNVM Program Memory Code Protection bit
 14442                           ;	CP = 0x1, unprogrammed default
 14443                           ;	DataNVM Memory Code Protection bit
 14444                           ;	CPD = 0x1, unprogrammed default
 14445  300008                     	org	3145736
 14446  300008  FF                 	db	255
 14447                           
 14448                           ;Config register CONFIG5H @ 0x300009
 14449                           ;	unspecified, using default values
 14450  300009                     	org	3145737
 14451  300009  FF                 	db	255
 14452                           
 14453                           ;Config register CONFIG6L @ 0x30000A
 14454                           ;	unspecified, using default values
 14455                           ;	Table Read Protection Block 0
 14456                           ;	EBTR0 = 0x1, unprogrammed default
 14457                           ;	Table Read Protection Block 1
 14458                           ;	EBTR1 = 0x1, unprogrammed default
 14459                           ;	Table Read Protection Block 2
 14460                           ;	EBTR2 = 0x1, unprogrammed default
 14461                           ;	Table Read Protection Block 3
 14462                           ;	EBTR3 = 0x1, unprogrammed default
 14463                           ;	Table Read Protection Block 4
 14464                           ;	EBTR4 = 0x1, unprogrammed default
 14465                           ;	Table Read Protection Block 5
 14466                           ;	EBTR5 = 0x1, unprogrammed default
 14467                           ;	Table Read Protection Block 6
 14468                           ;	EBTR6 = 0x1, unprogrammed default
 14469                           ;	Table Read Protection Block 7
 14470                           ;	EBTR7 = 0x1, unprogrammed default
 14471  30000A                     	org	3145738
 14472  30000A  FF                 	db	255
 14473                           
 14474                           ;Config register CONFIG6H @ 0x30000B
 14475                           ;	unspecified, using default values
 14476                           ;	Boot Block Table Read Protection bit
 14477                           ;	EBTRB = 0x1, unprogrammed default
 14478  30000B                     	org	3145739
 14479  30000B  FF                 	db	255
 14480                           tosu	equ	0xFFF
 14481                           tosh	equ	0xFFE
 14482                           tosl	equ	0xFFD
 14483                           stkptr	equ	0xFFC
 14484                           pclatu	equ	0xFFB
 14485                           pclath	equ	0xFFA
 14486                           pcl	equ	0xFF9
 14487                           tblptru	equ	0xFF8
 14488                           tblptrh	equ	0xFF7
 14489                           tblptrl	equ	0xFF6
 14490                           tablat	equ	0xFF5
 14491                           prodh	equ	0xFF4
 14492                           prodl	equ	0xFF3
 14493                           indf0	equ	0xFEF
 14494                           postinc0	equ	0xFEE
 14495                           postdec0	equ	0xFED
 14496                           preinc0	equ	0xFEC
 14497                           plusw0	equ	0xFEB
 14498                           fsr0h	equ	0xFEA
 14499                           fsr0l	equ	0xFE9
 14500                           wreg	equ	0xFE8
 14501                           indf1	equ	0xFE7
 14502                           postinc1	equ	0xFE6
 14503                           postdec1	equ	0xFE5
 14504                           preinc1	equ	0xFE4
 14505                           plusw1	equ	0xFE3
 14506                           fsr1h	equ	0xFE2
 14507                           fsr1l	equ	0xFE1
 14508                           bsr	equ	0xFE0
 14509                           indf2	equ	0xFDF
 14510                           postinc2	equ	0xFDE
 14511                           postdec2	equ	0xFDD
 14512                           preinc2	equ	0xFDC
 14513                           plusw2	equ	0xFDB
 14514                           fsr2h	equ	0xFDA
 14515                           fsr2l	equ	0xFD9
 14516                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     61     125
    BANK1           256    167     215
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2810$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2810$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead_test@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead_test@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _short_burst->_stop
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration_motor->_test_action
    _test_action->_turnLeft
    _turnRight->_stop
    _turnLeft->_stop
    _fullSpeedAhead_test->_stop
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _action->_goback
    _goback->_turn45
    _turn45->_stop
    _short_reverse->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_verify_color
    _verify_color->_detect_color
    _detect_color->_compare
    _compare->_lroundf
    _distance_measure->_lroundf
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               171   171      0  239691
                                             59 BANK0      2     2      0
                                              0 BANK1    167   167      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                            _LED_OFF
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                  _calibration_motor
                   _color_click_init
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                  _sendStringSerial4
                        _short_burst
                            _sprintf
                               _stop
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26931
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26645
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    8506
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _distance_measure                                    19    13      6   19139
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_motor                                    6     2      4   30094
                                             54 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          4     0      4   29898
                                             50 COMRAM     4     0      4
                _fullSpeedAhead_test
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                           18    13      5    9268
                                             31 COMRAM    18    13      5
                             ___wmul
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                            19    14      5    9724
                                             31 COMRAM    19    14      5
                             ___wmul
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead_test                                  6     2      4    9874
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _amb_light_measure                                   14    12      2   18815
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13096
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11629
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3332
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   58133
                                             55 COMRAM     5     1      4
                             _goback
                      _short_reverse
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _goback                                               8     4      4   32948
                                             47 COMRAM     8     4      4
                     _fullSpeedAhead
                      _short_reverse
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              16    10      6   12254
                                             31 COMRAM    16    10      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        7     2      5   11264
                                             31 COMRAM     7     2      5
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    4491
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3775
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2643
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     751
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_OFF
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _short_reverse
         _fullSpeedBack
           _setMotorPWM
         _stop
           _setMotorPWM
       _stop
       _turn45
         _setMotorPWM
         _stop
     _short_reverse
     _toggle_light
     _turn45
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _calibration_motor
     _test_action
       _fullSpeedAhead_test
         _fullSpeedAhead
         _stop
       _turnLeft
         ___wmul
         _setMotorPWM
         _stop
       _turnRight
         ___wmul
         _setMotorPWM
         _stop
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _goback
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _sendStringSerial4
     _sendCharSerial4
   _short_burst
     _fullSpeedAhead
     _stop
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     A7      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     3D      7D       5       78.1%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      55        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      53        0.0%
BITBIGSFRllllll      9      0       0      52        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2      56        0.0%
DATA                 0      0     1B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Mar 15 17:30:46 2022

                ?_short_reverse 0020                  _color_read_Red 56B2                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 5752  
                            l55 5D0C                              l72 5C02                              l81 5750  
                            l66 3964                              l58 3952                              l90 5C42  
                            l75 5700                              l84 57F0                              l93 5C22  
                            l69 5B1A                              l78 57A0                              l87 565E  
                            l96 5CA2                              l99 5C82                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 57A2                _color_read_Green 5702  
             ??_Interrupts_init 0001                             l102 5C62                             l200 5D42  
                           l203 5D2E                             l125 3B6E                             l302 3F12  
                           l206 5D18                             l320 45D6                             l160 51A0  
                           l209 59C4                             l313 4558                             l161 51A2  
                           l145 1A16                             l153 559E                             l331 46FA  
                           l404 5B4A                             l148 5A3C                             l157 4B80  
                           l317 45A0                             l309 4510                             l149 5A3E  
                           l501 2F54                             l262 5940                             l191 5B76  
                           l335 4742                             l327 46B2                             l272 3D42  
                           l280 53E8                             l265 4F4C                             l346 5266  
                           l290 3E1C                             l194 5B9C                             l338 476C  
                           l363 548E                             l188 5B74                             l357 5522  
                           l197 5D38                             l349 5982                             l703 4D8E  
                           l288 3DDA                             l712 4E7A                             l704 4DF8  
                           l618 5D24                             l298 3EE4                             l386 5CC0  
                           l482 2E00                             l635 5CDE                             l715 5BC2  
                           l707 4E62                             l395 5CE2                             l491 2EB2  
                           l572 5BE2                             l484 2E0E                             l581 2D64  
                           l709 4E2E                             l557 58FE                             l493 2EC0  
                           l398 5CF6                             l486 2E42                             l488 2E50  
                           l569 33D6                             l682 40CC                             l842 4A58  
                           l595 2D92                             l589 2D60                             l829 48F4  
                           l599 2DA0                             l946 532A                             l980 4D46  
                           l985 4D8C                             l989 5AB0               verify_color@color 00D8  
              ?_calibrate_white 000C        __end_of_distance_measure 51A4                             _abs 59C6  
                           _pad 5018                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                 __end_of_LED_OFF 5C44  
                  ___fltol@exp1 00A3                            l1012 4C88                            ?_abs 0013  
                          l1310 2966                            l1302 286C                            l1311 2954  
                          l1243 1C06                            l1308 28EE                            l1260 1D20  
                          l1252 1ED6                            l1244 1BF4                            l1500 5D46  
                          l1333 2300                            l1245 1BBA                            l1270 1DDE  
                          l1430 50DC                            l1336 2192                            l1329 1F9C  
                          l1521 5AE6                            l1425 505E                            l1370 42D8  
                          l1346 22C2                            l1338 220A                            l1339 21F8  
                          l4011 1F04                            l4003 1ED8                            l1508 26AE  
                          l1428 50A0                            l1436 3478                            l1373 4434  
                          l4021 1F40                            l4013 1F14                            l4005 1EE4  
                          l1269 1DF0                            l1285 5836                            l1438 3480  
                          l1470 5600                            l4103 221A                            l4111 2262  
                          l4031 1F76                            l4023 1F46                            l4015 1F24  
                          l4007 1EF2                            l1391 5A78                            l1463 4280  
                          l1384 43CC                            l1456 36B8                            l1297 2A48  
                          l1377 4370                            l4121 22D6                            l4113 227C  
                          l4105 2226                            l4033 1F86                            l4025 1F54  
                          l4017 1F2A                            l4009 1EF4                            l4201 5752  
                          l5001 18EA                            l1474 59FC                            l1299 28A8  
                          l4123 22E4                            l4115 2290                            l4107 2234  
                          l4051 2008                            l4043 1FD0                            l4035 1F8C  
                          l4027 1F56                            l4019 1F3A                            l4203 5798  
                          l5011 195C                            l5003 18F2                            l4221 5330  
                          l5101 2D8C                            l4213 57A2                            l4301 4C28  
                          l4141 4CB8                            l4125 22E6                            l4117 22AA  
                          l4109 225E                            l4061 2052                            l4053 2020  
                          l4045 1FDC                            l4037 1FAC                            l4029 1F66  
                          l4133 57F2                            l1477 5A04                            l1469 55F8  
                          l5021 19F4                            l5013 198C                            l5005 18FA  
                          l1398 56B0                            l4231 5384                            l4223 5348  
                          l4215 57E8                            l4311 4C58                            l4151 4D26  
                          l4143 4CC8                            l4119 22C6                            l4127 22EC  
                          l4071 20A8                            l4063 2062                            l4055 202C  
                          l4047 1FE6                            l4039 1FBC                            l4135 5802  
                          l4207 5702                            l5103 3F14                            l5031 5CF2  
                          l5111 55DC                            l5023 1A08                            l5015 1992  
                          l5007 18FE                            l4241 51A4                            l4233 5390  
                          l4225 5354                            l5041 2AA2                            l5033 2A4A  
                          l4313 4C68                            l4153 4D34                            l4145 4CF6  
                          l4129 22F0                            l4081 214C                            l4073 20C4  
                          l4065 206E                            l4057 2038                            l4049 1FFC  
                          l4161 5A7A                            l4321 2322                            l5113 5CF8  
                          l4209 5748                            l5121 5B06                            l3601 4FD0  
                          l1489 5016                            l1497 587A                            l4401 3654  
                          l5105 55A0                            l5201 5660                            l5025 1A12  
                          l5017 19C0                            l5009 192C                            l3611 5BBA  
                          l4251 5210                            l4243 51C8                            l4227 536C  
                          l4235 53A0                            l4219 532C                            l5043 2ABA  
                          l5035 2A7E                            l4315 4C78                            l4307 4C3C  
                          l4155 4D84                            l4147 4D06                            l4139 4C8A  
                          l4091 21A2                            l4083 215A                            l4075 20D0  
                          l4067 207E                            l4059 2046                            l4163 5A90  
                          l4331 23FA                            l4323 236A                            l5123 5B10  
                          l5115 5AE8                            l4171 5028                            l4403 365A  
                          l4411 3690                            l5107 55A8                            l5203 5672  
                          l5019 19EE                            l4253 521C                            l4245 51E0  
                          l4261 5490                            l4237 53B8                            l4229 5378  
                          l4501 3DB4                            l5061 2B6C                            l5053 2B10  
                          l5045 2ABE                            l5037 2A82                            l4421 36F8  
                          l3605 5B76                            l4309 4C48                            l4157 4D8A  
                          l4149 4D14                            l4093 21B0                            l4085 2178  
                          l4077 20EC                            l4069 2098                            l4165 5AA0  
                          l3701 1BB2                            l3621 1A34                            l4341 259E  
                          l4325 237E                            l5301 4A9A                            l5221 3966  
                          l5117 5AEC                            l5029 5CE2                            l5213 5B1C  
                          l4181 507E                            l4173 503C                            l4405 366C  
                          l5109 55B6                            l5205 567A                            l4255 5228  
                          l4247 51EC                            l4263 54B4                            l4271 54F2  
                          l4239 53D0                            l4511 3E08                            l4503 3DC2  
                          l5063 2B90                            l5055 2B12                            l5047 2AE6  
                          l5039 2A96                            l4431 3792                            l4423 3710  
                          l4415 36BC                            l3607 5B86                            l4095 21B4  
                          l4087 2182                            l4079 2116                            l3711 1BE8  
                          l3703 1BC8                            l3623 1A44                            l3631 1A6E  
                          l3615 1A18                            l4343 260A                            l4335 2432  
                          l4327 23BA                            l4319 2302                            l5311 4AEE  
                          l5303 4AA6                            l5231 39A8                            l5223 396A  
                          l5119 5AF6                            l5215 5B20                            l4191 59C6  
                          l4183 5082                            l4175 504A                            l4407 3678  
                          l5207 5682                            l3609 5B9E                            l4249 5204  
                          l4257 5236                            l4273 550A                            l4265 54CC  
                          l4521 3E60                            l4513 3E18                            l4505 3DE2  
                          l5081 2C70                            l5073 2BF0                            l5057 2B34  
                          l5049 2AFA                            l4441 3854                            l4433 37CA  
                          l4425 3748                            l4417 36C8                            l4281 4BAE  
                          l4097 21C2                            l4089 2190                            l3801 1E9A  
                          l3721 1C38                            l3713 1BF2                            l3705 1BD4  
                          l3641 1A9E                            l3633 1A7E                            l3625 1A54  
                          l3617 1A24                            l4345 263E                            l4337 2500  
                          l4329 23DE                            l5313 4B06                            l5305 4ABE  
                          l5241 3A08                            l5233 39BC                            l5225 3974  
                          l4601 4652                            l5401 4E06                            l5321 50DE  
                          l5217 5B2E                            l4193 59E0                            l4185 50B0  
                          l4177 5056                            l4169 5018                            l4409 3680  
                          l4361 3450                            l4353 33D8                            l5209 569E  
                          l4259 524E                            l4267 54D8                            l4531 3EB6  
                          l4523 3E78                            l4515 3E32                            l4507 3DF4  
                          l5091 2D04                            l5075 2C14                            l5067 2BC8  
                          l4451 38E4                            l4443 3866                            l4435 37DC  
                          l4427 375A                            l4419 36D8                            l4291 4BFC  
                          l4283 4BD8                            l4275 4B82                            l4099 21F0  
                          l3811 1EC4                            l3803 1EA8                            l3731 1C74  
                          l3723 1C48                            l3715 1C14                            l3707 1BD8  
                          l3651 1ADE                            l3643 1AAC                            l3635 1A84  
                          l3627 1A64                            l3619 1A32                            l4347 267A  
                          l4339 256C                            l5315 4B6E                            l5307 4ACA  
                          l4195 56B2                            l5251 3A6C                            l5243 3A20  
                          l5235 39D4                            l5227 398C                            l4611 469E  
                          l4603 466C                            l5411 4E54                            l5403 4E1C  
                          l5331 5122                            l5323 50F4                            l5219 5B32  
                          l4187 50C4                            l4179 506A                            l4371 34A8  
                          l4363 3452                            l4355 33F8                            l3821 527A  
                          l4269 54E4                            l4533 3EC4                            l4525 3E84  
                          l4541 3EFE                            l4509 3DFC                            l4517 3E4A  
                          l5093 2D28                            l5085 2CA8                            l4453 3902  
                          l4445 3884                            l4437 3800                            l4429 377A  
                          l5421 30D2                            l4701 27AE                            l3901 599A  
                          l4285 4BDA                            l4277 4B9A                            l3813 1EC6  
                          l3805 1EAE                            l3741 1CBA                            l3733 1C82  
                          l3725 1C56                            l3717 1C24                            l3709 1BE6  
                          l3661 1B18                            l3653 1AE0                            l3645 1AAE  
                          l3637 1A96                            l3629 1A66                            l4349 269E  
                          l5317 4B78                            l5309 4AE2                            l4461 5C04  
                          l4197 56F8                            l5261 3AD0                            l5253 3A84  
                          l5245 3A38                            l5237 39EC                            l5229 3990  
                          l4621 46F6                            l4613 46AE                            l4605 4678  
                          l5413 4E66                            l5333 5168                            l5325 50F8  
                          l5341 5900                            l4381 3546                            l4373 34AE  
                          l4365 346C                            l4357 3420                            l5501 2DBE  
                          ?_pad 0011                            l3831 52A0                            l3823 5282  
                          l3911 3B8C                            l4535 3ED0                            l4527 3E90  
                          l4543 3F00                            l5087 2CCC                            l5079 2C4C  
                          l4455 391A                            l4447 389C                            l4439 3818  
                          l5431 3142                            l5423 30E2                            l3903 59C0  
                          l4287 4BEA                            l3807 1EB0                            l3751 1D36  
                          l3743 1CEE                            l3735 1C84                            l3727 1C64  
                          l3671 1B2C                            l3663 1B1C                            l3647 1ABE  
                          l3655 1AE8                            l3639 1A98                            l4471 5C4A  
                          l4463 5C0A                            l5271 3B48                            l5263 3AE8  
                          l5255 3A9C                            l5247 3A50                            l5239 39F0  
                          l4551 447E                            l4631 4758                            l4623 4710  
                          l4615 46C8                            l4607 4680                            l5407 4E3C  
                          l5335 5184                            l5327 5112                            l5343 5910  
                          l5351 4E7C                            l5415 58BE                            l3591 4F4E  
                          l4391 35EE                            l4383 354C                            l4375 34B6  
                          l4367 3488                            l4359 3440                            l5511 2DE4  
                          l5503 2DC2                            l3841 52D8                            l3833 52A8  
                          l3825 5286                            l3817 5268                            l3921 3CDA  
                          l3913 3BEE                            l4641 53FE                            l4537 3EE0  
                          l4529 3E9E                            l5097 2D6A                            l4457 3950  
                          l4449 38D2                            l5441 31B6                            l5433 3154  
                          l5425 30F2                            l4721 2830                            l4713 27E6  
                          l4705 27C2                            l4801 42FE                            l3905 59C2  
                          l4297 4C14                            l4289 4BEE                            l3809 1EB6  
                          l3761 1D72                            l3753 1D46                            l3745 1CF0  
                          l3737 1C8E                            l3729 1C70                            l3681 1B40  
                          l3673 1B30                            l3665 1B20                            l3657 1AF8  
                          l3649 1ACE                            l4473 5A40                            l4465 5C64  
                          l5273 3B4C                            l5265 3B00                            l5257 3AB4  
                          l5249 3A54                            l4633 5942                            l4561 44D6  
                          l4553 448A                            l4545 4436                            l4625 4722  
                          l4617 46DA                            l4609 4692                            l5409 4E3E  
                          l5337 519C                            l5329 511E                            l5345 5928  
                          l5361 4ED0                            l5353 4E88                            l5417 58D2  
                          l3593 4F60                            l4393 3608                            l4385 3552  
                          l4377 34BE                            l4369 349A                            l4481 5A22  
                          l5281 5576                            l5521 2DFE                            l5513 2DEC  
                          l5505 2DC6                            l3851 5304                            l3843 52DE  
                          l3835 52BA                            l3827 5294                            l3819 526C  
                          l3915 3C34                            l4651 5462                            l4643 540E  
                          l4491 3D70                            l5099 2D7E                            l5451 324C  
                          l5443 31EA                            l5435 3188                            l5427 3126  
                          l4731 2876                            l4723 2838                            l4715 2800  
                          l4707 27D2                            l4811 4358                            l4299 4C1E  
                          l3771 1D9E                            l3763 1D74                            l3747 1D00  
                          l3739 1C94                            l3691 1B54                            l3683 1B44  
                          l3675 1B34                            l3667 1B24                            l3659 1B0A  
                          l4467 5C6A                            l5267 3B18                            l5259 3ACC  
                          l4635 5956                            l4571 4526                            l4563 44DE  
                          l4547 445A                            l4555 4498                            l4627 472E  
                          l4619 46E6                            l5347 593C                            l5363 4EE4  
                          l5355 4E98                            l5371 5CBA                            l5419 58EA  
                          l3931 47A4                            l3923 476E                            l3595 4F72  
                          l4395 3622                            l4379 34C4                            l4387 35B6  
                          l4483 5A38                            l4459 5602                            l5283 5596  
                          l5275 5528                            l5531 2E74                            l5523 2E1C  
                          l5515 2DF0                            l5507 2DCA                            l5381 5CD4  
                          l3845 52F4                            l3837 52C2                            l3853 530A  
                          l3829 529C                            l3917 3C54                            l3909 3B70  
                          l4653 547A                            l4645 5426                            l5461 32C8  
                          l5453 3266                            l5445 3204                            l5437 31A2  
                          l5429 3140                            l4901 5C8A                            l4741 28CE  
                          l4733 2894                            l4725 2848                            l4717 2810  
                          l4709 27D2                            l4661 26CC                            l4821 43BC  
                          l4813 435A                            l4805 4312                            l3781 1DD6  
                          l3765 1D82                            l3757 1D5A                            l3773 1DA0  
                          l3749 1D10                            l3685 1B48                            l3677 1B38  
                          l3669 1B28                            l3693 1B58                            l5293 4A5A  
                          l4469 5C44                            l5269 3B30                            l4637 596E  
                          l4581 4580                            l4573 4538                            l4565 44F0  
                          l4557 44B0                            l4549 4472                            l4629 473E  
                          l5349 593E                            l5357 4EAC                            l5373 5CBC  
                          l5365 5CA4                            l3941 4800                            l3933 47B2  
                          l3925 4772                            l3597 4F7C                            l3861 5838  
                          l4389 35D0                            l4397 3632                            l4477 5A06  
                          l5277 5540                            l5541 2ECE                            l5533 2E76  
                          l5525 2E28                            l5517 2DF8                            l5509 2DDE  
                          l5383 5D1A                            l3855 531A                            l3847 52FC  
                          l3839 52CA                            l3919 3C70                            l4647 5438  
                          l4639 53EA                            l4495 3D84                            l4487 3D44  
                          l5471 332C                            l5463 32CA                            l5455 3268  
                          l5447 3206                            l5439 31A4                            l4751 290C  
                          l4743 28D4                            l4735 2896                            l4727 285C  
                          l4719 2820                            l4663 26DC                            l4671 2706  
                          l4655 26B0                            l4831 4414                            l4823 43DA  
                          l4815 4366                            l4807 431A                            l3791 1E54  
                          l3767 1D8A                            l3759 1D64                            l3775 1DAE  
                          l3695 1B5C                            l3687 1B4C                            l3679 1B3C  
                          l5295 4A74                            l4583 458C                            l4575 4544  
                          l4567 44FC                            l4559 44CA                            l4591 45FC  
                          l5391 4DC4                            l5359 4EC0                            l5375 5CBE  
                          l5367 5CAE                            l3951 486A                            l3943 4808  
                          l3935 47D2                            l3927 4780                            l3599 4F9A  
                          l3863 5844                            l3871 5ABE                            l4399 3644  
                          l4479 5A0C                            l4911 0E14                            l5279 555E  
                          l5543 2ED0                            l5535 2E8E                            l5527 2E2A  
                          l5519 2DFC                            l5377 5CC2                            l3857 5322  
                          l3849 52FE                            l4649 5450                            l4497 3D9C  
                          l4489 3D50                            l5481 33A0                            l5473 333E  
                          l5465 32DC                            l5457 327A                            l5449 3218  
                          l4761 2976                            l4753 2910                            l4745 28DE  
                          l4737 28A6                            l4729 286A                            l4681 2732  
                          l4673 2716                            l4665 26EC                            l4657 26BC  
                          l4833 4422                            l4825 43DC                            l4817 43A2  
                          l4809 4326                            l3881 5D34                            l3785 1E00  
                          l3793 1E56                            l3777 1DB2                            l3769 1D8E  
                          l3697 1B86                            l3689 1B50                            l5297 4A7E  
                          l4585 459C                            l4577 4554                            l4569 450C  
                          l4593 4614                            l5393 4DC6                            l5369 5CB0  
                          l5385 5BC4                            l3961 48B4                            l3953 488A  
                          l3945 481C                            l3937 47D6                            l3929 47A0  
                          l3865 5856                            l3873 5AC2                            l4841 40F2  
                          l4921 0F28                            l4913 0E62                            l5289 559C  
                          l5561 2F44                            l5553 2F00                            l5545 2ED6  
                          l5537 2E90                            l5529 2E5E                            l5379 5CCA  
                          l4499 3DA8                            l5483 33AA                            l5475 3372  
                          l5467 3310                            l5459 32AE                            l4771 29D8  
                          l4763 2982                            l4755 291E                            l4747 28EC  
                          l4739 28B8                            l4683 2742                            l4691 276C  
                          l4675 271C                            l4667 26FC                            l4659 26CA  
                          l4835 4424                            l4827 43E0                            l4819 43AE  
                          l3891 5D3A                            l3883 5D10                            l3795 1E66  
                          l3787 1E0C                            l3779 1DC0                            l3699 1BA2  
                          l5299 4A82                            l4587 45C2                            l4579 456E  
                          l4595 4620                            l5395 4DDC                            l5387 4DA0  
                          l3963 48D4                            l3955 488C                            l3947 482A  
                          l3939 47E2                            l3971 4908                            l3867 585A  
                          l3875 5ADA                            l4851 415E                            l4843 4100  
                          l4931 10C4                            l4923 0F44                            l4915 0E66  
                          l5571 2FBE                            l5563 2F5E                            l5555 2F02  
                          l5539 2E9E                            l5547 2EEE                            l5491 2DA2  
                          l5485 33C2                            l5477 338C                            l5469 332A  
                          l4781 2A36                            l4773 29EE                            l4765 2990  
                          l4757 294C                            l4749 28FE                            l4693 277C  
                          l4685 2752                            l4677 2722                            l4669 26FE  
                          l4829 4404                            l3893 5D3E                            l3885 5D14  
                          l3797 1E76                            l3789 1E1A                            l4597 462C  
                          l4589 45D8                            l5397 4DE6                            l5389 4DB6  
                          l3957 489E                            l3949 483C                            l3981 4978  
                          l3973 4928                            l3869 5AB2                            l4861 4210  
                          l4853 41A6                            l4845 4112                            l4941 11A8  
                          l4933 10DC                            l4925 0FEC                            l4917 0E80  
                          l5581 301E                            l5573 2FCE                            l5565 2F86  
                          l5557 2F0E                            l5493 2DA6                            l5479 338E  
                          l4783 2A3C                            l4775 2A08                            l4767 29BA  
                          l4695 2792                            l4687 2762                            l4679 2730  
                          l3895 5986                            l3879 5D30                            l3887 5D26  
                          l3799 1E96                            l4599 463A                            l3959 48A4  
                          l3991 49F0                            l3983 4980                            l3975 492C  
                          l3967 48F6                            l4863 4224                            l4847 4116  
                          l4839 40CE                            l4951 134C                            l4943 11C4  
                          l4935 10E0                            l4927 1000                            l4919 0E8C  
                          l5591 3098                            l5583 3032                            l5575 2FE2  
                          l5567 2FB4                            l5559 2F22                            l5495 2DAA  
                          l4785 2A3E                            l4777 2A24                            l4769 29BE  
                          l4697 27A2                            l4689 2764                            l4793 4284  
                          l3897 598A                            l3889 5D2A                            l4881 5B4C  
                          l3993 4A02                            l3985 4994                            l3977 493A  
                          l3969 48FA                            l4857 41DE                            l4849 413A  
                          l4873 424A                            l4961 1434                            l4953 1350  
                          l4945 126C                            l4937 10FA                            l4929 10A8  
                          l5593 30A8                            l5585 304C                            l5577 2FE8  
                          l5569 2FBA                            l5497 2DB6                            l4779 2A28  
                          l4699 27AA                            l4795 4294                            l3899 5992  
                          l4891 5B62                            l4883 5B56                            l3987 49A2  
                          l3995 4A08                            l3979 495A                            l4875 426E  
                          l4859 4202                            l4867 4230                            l4971 1664  
                          l4963 14DC                            l4955 136A                            l4947 1288  
                          l4939 1106                            l5595 30BE                            l5587 3060  
                          l5579 3012                            l5499 2DBA                            l4797 42A2  
                          l4885 5B5C                            l4893 5BE6                            l3997 4A18  
                          l3989 49D0                            l4869 423E                            l4981 1788  
                          l4973 1678                            l4965 14F8                            l4957 1376  
                          l4949 1330                            l5597 30C4                            l5589 307A  
                          l4799 42E8                            l4895 5C24                            l4887 5B5E  
                          l3999 4A38                            l4983 17A0                            l4991 188A  
                          l4975 16A6                            l4967 15A0                            l4959 1418  
                          l4897 5C2A                            l4889 5B60                            l4993 18A0  
                          l4985 17B6                            l4977 1774                            l4969 15BC  
                          l4899 5C84                            l4995 18B6                            l4987 1876  
                          l4979 177E                            l4997 18CC                            l4989 1880  
                          l4999 18D4                            STR_1 0E05                            STR_3 0E0E  
                          u3100 5B86                            u3101 5B82                            u3110 5B9C  
                          u3111 5B98                            u4000 4D34                            u3200 1B18  
                          u3120 1A32                    _BAUD4CONbits 000EE9                            u4001 4D30  
                          u3201 1B14                            u3121 1A2E                            _LATE 000F7D  
                          u4010 4D84                            u3210 1B86                            u3130 1A44  
                          u4011 4D80                            u3211 1B82                            u3131 1A40  
                          _LATG 000F7F                            u4100 53B8                            u4020 5A90  
                          u3300 1C64                            u3220 1B9E                            u3140 1A54  
                          u3060 4F60                            u4101 53B4                            u4021 5A8C  
                          u3301 1C60                            u3221 1B98                            u3141 1A50  
                          u3061 4F5C                            u4110 53D0                            u3310 1C82  
                          u3230 1BA0                            u3150 1A96                            u3070 4F72  
                          u4030 5028                            u4111 53CC                            u3311 1C7E  
                          u3151 1A92                            u3071 4F6E                            u4031 5024  
                          u4120 51E0                            u5000 5438                            u4200 4BFC  
                          u3400 1DC0                            u3320 1CBA                            u3240 1BC8  
                          u3160 1AAC                            u3080 4F9A                            u4040 504A  
                          u4121 51DC                            u5001 5434                            u4201 4BF8  
                          u3401 1DBC                            u3321 1CB6                            u3241 1BC4  
                          u3161 1AA8                            u3081 4F96                            u4041 5046  
                          u4130 5204                            u5010 5462                            u4210 4C10  
                          u3410 1DD6                            u3330 1D00                            u3250 1BE6  
                          u3170 1ABE                            u3090 4FD0                            u4050 50A0  
                          _T2PR 000FBC                            u4131 5200                            u5011 545E  
                          u4211 4C0C                            u3411 1DD2                            u3331 1CFC  
                          u3251 1BE2                            u3171 1ABA                            u3091 4FCC  
                          u4051 509C                            u4140 524E                            u5100 2848  
                          u5020 26CA                            u4220 4C38                            u3500 1EC4  
                          u3420 1DEC                            u3340 1D36                            u3260 1C06  
                          u3180 1ACE                            u4300 2500                            u4060 50B0  
                          u4141 524A                            u5101 2844                            u5021 26C6  
                          u4221 4C34                            u3501 1EC0                            u3421 1DE8  
                          u3341 1D32                            u3261 1C02                            u3181 1ACA  
                          u4301 24FC                            u4061 50AC                            u3510 527A  
                          u4150 5266                            u5110 286A                            u5030 26DC  
                          u4230 4C58                            u3430 1E00                            u3350 1D46  
                          u3270 1C14                            u3190 1B0A                            u4310 259E  
                          u4070 59E0                            u3511 5276                            u4151 5262  
                          u5111 2866                            u5031 26D8                            u4231 4C54  
                          u3431 1DFC                            u3351 1D42                            u3271 1C10  
                          u3191 1B06                            u4311 259A                            u4071 59DC  
                          u3520 5294                            u4160 550A                            u4080 5348  
                          u5200 2976                            u5120 2894                            u5040 26EC  
                          u4240 4C68                            u3440 1E1A                            u3360 1D72  
                          u3280 1C24                            u4320 265E                            u4400 34A8  
                          u6000 30A8                            u3521 5290                            u4161 5506  
                          u4081 5344                            u5201 2972                            u5121 2890  
                          u5041 26E8                            u4241 4C64                            u3441 1E16  
                          u3361 1D6E                            u3281 1C20                            u4401 34A4  
                          u6001 30A4                            u3530 52BA                            u3610 3B8C  
                          u4170 5522                            u4090 536C                            u5210 2990  
                          u5130 28B8                            u5050 2730                            u3450 1E54  
                          u3370 1D82                            u3290 1C56                            u4330 267A  
                          u4250 2342                            u4410 35D0                            u3531 52B6  
                          u3611 3B88                            u4171 551E                            u4091 5368  
                          u5211 298C                            u5131 28B4                            u5051 272C  
                          u3451 1E50                            u3371 1D7E                            u3291 1C52  
                          u4331 2676                            u4411 35CC                            u3540 52D8  
                          u3620 3C70                            u4500 36EA                            u5220 29D8  
                          u5140 28CE                            u5060 2742                            u5300 43BC  
                          u4180 4B9A                            u3460 1E66                            u3380 1D9E  
                          u4260 236A                            u3700 486A                            u4420 35EE  
                          u4340 3408                            u3541 52D4                            u3621 3C6C  
                          u4501 36E2                            u5221 29D4                            u5141 28CA  
                          u5061 273E                            u5301 43B8                            u4181 4B96  
                          u3461 1E62                            u3381 1D9A                            u4325 2654  
                          u4261 2366                            u3701 4866                            u4421 35EA  
                          u4341 3402                            u3550 52F4                            u5230 2A08  
                          u5150 28EC                            u5070 2752                            u5310 43CC  
                          u4190 4BCE                            u3470 1E76                            u3390 1DAE  
                          u4270 239E                            u3710 48B4                            u4430 3608  
                          u4350 340A                            u3551 52F0                            u5231 2A04  
                          u5151 28E8                            u5071 274E                            u5311 43C8  
                          u3471 1E72                            u3391 1DAA                            u4255 2338  
                          u3711 48B0                            u4431 3604                            u3560 531A  
                          u4600 37EE                            u4520 3722                            u5240 2A36  
                          u5160 290C                            u5080 2792                            u5320 43DA  
                          u3608 59B0                            u3800 1F14                            u3480 1E96  
                          u4280 23BA                            u3720 4908                            u4440 3622  
                          u4360 3420                            u5400 1774                            u3561 5316  
                          u4601 37E6                            u4521 371A                            u5241 2A32  
                          u5161 2908                            u5081 278E                            u5321 43D6  
                          u3801 1F10                            u3481 1E92                            u4281 23B6  
                          u3721 4904                            u4441 361E                            u4361 341C  
                          u5401 1770                            u3634 3CCA                            u5170 291E  
                          u5090 27D2                            u5330 4414                            u5250 4294  
                          u3810 1F54                            u3490 1EA8                            u4290 23FA  
                          u3650 4780                            u3730 493A                            u3570 587A  
                          u4450 3632                            u4370 3450                            u5410 17A0  
            verify_color@color2 00D6                            u3635 3CC6                            u5171 291A  
                          u5091 27CE                            u5331 4410                            u5251 4290  
                          u4195 4BC4                            u3811 1F50                            u3491 1EA4  
                          u4291 23F6                            u4275 2394                            u3651 477C  
                          u3731 4936                            u3571 5876                            u4451 362E  
                          u4371 344C                            u5411 179C                            u6107 2E36  
                          u3644 3D34                            u4700 38F6                            u4620 382A  
                          u4540 375A                            u5180 294C                            u5340 4422  
                          u5260 42A2                            u3900 21F0                            u3820 1F66  
                          u3660 47B2                            u3740 4978                            u3580 5ADA  
                          u4460 3644                            u4380 346C                            u5500 198C  
                          u5420 17B6                            u3645 3D30                            u4701 38EE  
                          u4621 3822                            u4541 3756                            u5181 2948  
                          u5341 441E                            u5261 429E                            u3901 21EC  
                          u3821 1F62                            u3661 47AE                            u3741 4974  
                          u3581 5AD6                            u4461 3640                            u4381 3468  
                          u5501 1988                            u5421 17B2                            u6117 2E82  
                          u4550 376C                            u4518 36EC                            u5190 2962  
                          u5270 42FE                            u3590 59AE                            u3910 2206  
                          u3830 1F76                            u3750 49A2                            u4470 3654  
                          u4390 349A                            u5350 40F2                            u5510 19C0  
                          u5430 1876                            u4551 3764                            u5191 295E  
                          u5271 42FA                            u3591 59A6                            u3911 2202  
                          u3831 1F72                            u6207 58DC                            u3671 47DC  
                          u3751 499E                            u4471 3650                            u4391 3496  
                          u5351 40EE                            u5511 19BC                            u5431 1872  
                          u6127 2EE2                            u4800 3E32                            u5600 2C14  
                          u4720 392C                            u4640 3866                            u5280 4354  
                          u3920 221A                            u3840 1FAC                            u3680 4800  
                          u3760 49D0                            u4480 366C                            u5360 413A  
                          u5520 19EE                            u5440 18A0                            u4801 3E2E  
                          u5601 2C10                            u4721 3924                            u4641 3862  
                          u5281 4350                            u3921 2216                            u3841 1FA8  
                          u6217 5104                            u3681 47FC                            u3761 49CC  
                          u4481 3668                            u5361 4136                            u5521 19EA  
                          u5441 189C                            u6137 303E                            u4810 3E5C  
                          u5610 2C70                            u4650 3878                            u4618 37F0  
                          u4570 37A4                            u4538 3724                            u4490 36D8  
                          u5290 439E                            u3930 2234                            u3850 1FBC  
                          u3690 482A                            u3770 4A18                            u5370 415E  
                          u5530 1A08                            u5450 18B6                            u4811 3E58  
                          u5611 2C6C                            u4651 3870                            u4571 379C  
                          u4491 36D4                            u5291 439A                            u3931 2230  
                          u3851 1FB8                            u6307 4734                            u6227 5AFC  
                          u3691 4826                            u3771 4A14                            u5371 415A  
                          u5531 1A04                            u5451 18B2                            u6147 5534  
                          u4820 3EB6                            u5620 2CCC                            u4740 3964  
                          u3940 227C                            u3860 2136                            u3780 1EF2  
                          u4900 4580                            u5540 5CF2                            u5380 4202  
                          u5460 18CC                            u4821 3EB2                            u5621 2CC8  
                          u4741 3960                            u3941 2278                            u3781 1EEE  
                          u4901 457C                            u6317 4490                            u6237 4DAA  
                          u5541 5CEE                            u5381 41FE                            u5461 18C8  
                          u6157 556A                            u4830 3EFA                            u5630 2D28  
                          u5550 2AE6                            u4718 38F8                            u4670 38AE  
                          u4638 382C                            u4590 37DC                            u3950 22AA  
                          u3870 2190                            u3790 1F04                            u4910 45C2  
                          u5710 5B4A                            u4750 5A22                            u5470 18EA  
                          u5390 16A6                            u4831 3EF6                            u5631 2D24  
                          u5551 2AE2                            u4671 38A6                            u4591 37D8  
                          u3951 22A6                            u3871 218C                            u3791 1F00  
                          u6407 3ADA                            u4911 45BE                            u6327 4502  
                          u6247 4DD0                            u5711 5B46                            u4751 5A1E  
                          u5471 18E6                            u5391 16A2                            u6167 0E72  
                          u4840 3F12                            u5640 2D8C                            u5560 2B0C  
                          u4568 376E                            u5800 30E2                            u3960 22E4  
                          u3880 21B0                            u4920 4652                            u4760 5A38  
                          u5480 192C                            u5720 5596                            u4841 3F0E  
                          u5641 2D88                            u5561 2B08                            u5801 30DE  
                          u3961 22E0                            u3881 21AC                            u3865 212C  
                          u6417 3B56                            u6337 454A                            u4921 464E  
                          u6257 4E10                            u4761 5A34                            u5481 1928  
                          u6177 10D0                            u5721 5592                            u4770 3D80  
                          u5650 2DA0                            u5570 2B34                            u4738 392E  
                          u4690 38E4                            u5810 30F2                            u3970 4CB8  
                          u3890 21C2                            u4850 44B0                            u4930 4692  
                          u5730 519C                            u5490 195C                            u4771 3D7C  
                          u5651 2D9C                            u5571 2B30                            u4691 38E0  
                          u5811 30EE                            u6507 5C94                            u3971 4CB4  
                          u3891 21BE                            u6427 5C14                            u6347 4592  
                          u4851 44AC                            u4931 468E                            u6267 4E48  
                          u5731 5198                            u5491 1958                            u6187 10EC  
                          u4780 3DDA                            u5580 2B90                            u4668 387A  
                          u4588 37A6                            u5820 3154                            u3980 4CF6  
                          u4860 44F0                            u4940 46C8                            u5740 4DA0  
                          u5660 55F8                            u5900 2E1C                            u4781 3DD6  
                          u5581 2B8C                            u6517 3702                            u5821 3150  
                          u3981 4CF2                            u6437 5C34                            u6357 5960  
                          u4861 44EC                            u4941 46C4                            u6277 4632  
                          u5741 4D9C                            u5661 55F4                            u6197 135C  
                          u5901 2E18                            u4790 3DF4                            u5590 2BEC  
                          u5830 31B6                            u3990 4D14                            u4870 4526  
                          u4950 46DA                            u5750 4DC4                            u5910 2E50  
                          u4791 3DF0                            u5591 2BE8                            u6607 3942  
                          u6527 373A                            u5831 31B2                            u3991 4D10  
                          u6447 5C54                            u6367 397E                            u4871 4522  
                          u4951 46D6                            u6287 46A4                            u5751 4DC0  
                          u5911 2E4C                            u4688 38B0                            u5840 3218  
                          u4880 4538                            u4960 4710                            u5760 4DF4  
                          u5920 2E5E                            u6617 2AAC                            u6537 3784  
                          u5841 3214                            u6457 5C74                            u6377 399A  
                          u4881 4534                            u4961 470C                            u6297 46EC  
                          u5761 4DF0                            u5921 2E5A                            u5850 327A  
                          u4890 456E                            u4970 4722                            u5770 4E06  
                          u5930 2E9E                            u6707 53DA                            u6627 3DBA  
                          u6547 37BC                            u5851 3276                            u6467 4A8E  
                          u6387 39FA                            u4891 456A                            u4971 471E  
                          u5771 4E02                            u5931 2E9A                            u5860 32DC  
                          u4980 4758                            u5780 4E2A                            u5940 2EC0  
                          u6717 54EA                            u6637 3E0E                            u6557 380A  
                          u5861 32D8                            u6477 4AB2                            u6397 3A5E  
                          u4981 4754                            u5781 4E26                            u5941 2EBC  
                          u4990 540E                            u5870 333E                            u5790 4E3C  
                          u5950 2ECE                            u6727 522E                            u4991 540A  
                          u6647 3E96                            u6567 3846                            u5871 333A  
                          u6487 4AD6                            u5791 4E38                            u5951 2ECA  
                          u5880 33A0                            u5960 2F00                            u6657 3ED6  
                          u6577 388E                            u5881 339C                            u6497 4AFA  
                          u5961 2EFC                            u5970 2F54                            u5890 2E0E  
                          u6667 5418                            u6587 38C4                            u5971 2F50  
                          u5891 2E0A                            u5980 2F86                            u6677 5442  
                          u6597 390C                            u5981 2F82                            u5990 2FCE  
                          u6687 546C                            u5991 2FCA                            u6697 5396  
                          abs@a 0013                            _dbuf 007E                            _main 2DA2  
                          _dtoa 33D8                            _prec 007A                            _nout 0076  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 532C                            prodh 000FF4  
                          prodl 000FF3                            start 0030                    main@accident 0170  
                 test_action@mL 0033                   test_action@mR 0035                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 5702                 __end_of_HighISR 0030                    ___param_bank 000000  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 00A2  
               __end_of___aodiv 48F6       amb_light_measure@CC_amb_1 00B0       amb_light_measure@CC_amb_2 00B2  
     amb_light_measure@CC_amb_3 00B4                 __end_of___fladd 1ED8                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 4A5A                 __end_of___fldiv 2A4A  
               __end_of___awdiv 532C                 __end_of___flneg 5AB2                 __end_of___flmul 2302  
               __end_of___flsub 5838                 __end_of___fltol 4C8A                           ?_stop 001A  
               ___awdiv@divisor 0009                           _LED_B 5C64                           _LED_C 5C84  
                         _LED_G 5C44                           _LED_R 5C04                           i2l624 002C  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 5CF8      __end_of_I2C_2_Master_Start 5D3A  
    __end_of_I2C_2_Master_Write 5D1A                 __end_of_compare 5A40                    compare@lower 00A8  
                         _flags 007C                           _color 01D5                    compare@upper 00AC  
                         _fputc 4F4E                           _fputs 5838                           pad@fp 0011  
                         _width 0078                           _putch 5D46                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
          amb_light_measure@amb 00A8                           tablat 000FF5                 __end_of_lroundf 5A7A  
                         ttemp5 0060                           ttemp6 0063                           ttemp7 0067  
                         status 000FD8                           wtemp8 0060                 __end_of_sprintf 56B2  
       __end_of_color_read_Blue 57A2           _I2C_2_Master_RepStart 5D3A               _calibration_motor 4D8E  
               ??_short_reverse 0025                 ?_color_read_Red 0005                 __initialization 587C  
                 short_burst@mL 0020                   short_burst@mR 0022              ?_calibration_motor 0037  
                  __end_of_main 30D0                    __end_of_dtoa 36BA                   main@amb_light 016C  
          __end_of_detect_color 1A18                    __end_of_stop 53EA             ??_calibration_motor 003B  
                        ??_main 00D9                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001                 _buggylight_init 5CF8  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4E7C                    turn45@i_1304 002B  
                  turn45@i_1307 002D                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5601 001A                          i2l5603 0022                          i2l5605 0028  
            turnLeft@angle_left 0024                          i2l5599 000A                       ??_HighISR 0001  
      __end_of_color_click_init 5B1C                          _RX4PPS 000E15                          _TX4REG 000EE4  
     __end_of_calibration_motor 4E7C                __end_of___xxtofl 4436                   ??_Timer0_init 0001  
                  vfprintf@cfmt 0056                          ___flge 4C8A                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 5B9E  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 30D0                       ??___flsub 0019  
                     ??___fltol 009E                          _goback 2A4A                   compare@result 00AE  
                        _memory 01A7                          clear_0 589A                          clear_1 58A6  
              ___awdiv@quotient 000D                          _motorL 0069                          _motorR 0060  
                        isa$std 000001                          pad@buf 0013                          _turn45 3D44  
                        _roundf 2302                          dtoa@fp 001C                          _strlen 5AB2  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5BE4  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 5602                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                    ?_test_action 0033  
                     ??_sprintf 0058                __end_of_turnLeft 45D8                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                    ?_short_burst 0020                calibrate_white@w 000C  
               fullSpeedBack@mL 001A                 fullSpeedBack@mR 001C                      __accesstop 0060  
       __end_of__initialization 58AC                   verify_color@m 00D0                   verify_color@w 00D2  
      __end_of_color_read_Clear 57F2                      ___flneg@f1 0001        __end_of_color_read_Green 5752  
        ?_I2C_2_Master_RepStart 0001    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 5C84  
                 __end_of_LED_C 5CA4                   __end_of_LED_G 5C64                   __end_of_LED_R 5C24  
              ?_color_read_Blue 0005                 _Interrupts_init 5D1A                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 5490                    __pidataBANK0 5D44         __end_of_buggylight_init 5D0E  
          turnRight@angle_right 0024           _distance_measure$3232 00B2                   __end_of_fputc 5018  
             detect_color@color 00C7                   __end_of_fputs 587C                   __end_of_putch 5D48  
                 __end_of_toint 0E05             __end_of_Timer0_init 5CE0                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 00A8           fullSpeedAhead_test@mL 0020           fullSpeedAhead_test@mR 0022  
            ??_distance_measure 00AE                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 0060                      __pbssBANK1 01A7  
           calibration_motor@mL 0037             calibration_motor@mR 0039       distance_measure@amb_light 00AC  
             _color_writetoaddr 5BE4                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 001A  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 0038                         ?_goback 0030                         ?_turn45 0020  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 5C24                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 00AC  
                  _detect_color 0E14         __end_of_Interrupts_init 5D26          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5C04  
            _I2C_2_Master_Start 5D30                      _initUSART4 5CA4              _I2C_2_Master_Write 5D0E  
           _fullSpeedAhead_test 5942                       ?_pin_init 0001                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 5CC2  
       sendStringSerial4@string 0002                         ___aodiv 476E                         ___fladd 1A18  
                       ___aomod 48F6                         ___fldiv 26B0                         ___awdiv 5268  
                       ___flneg 5A7A                         ___flmul 1ED8                         ___flsub 57F2  
                       ___fltol 4B82             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 00B8                         __pcinit 587C                         __ramtop 0E00  
                    _read_color 5602                       ?_turnLeft 0020                         __ptext0 2DA2  
                       __ptext1 5524                         __ptext2 0E14                         __ptext3 5602  
                       __ptext4 5A06                         __ptext5 5660                         __ptext6 55A0  
                       __ptext7 40CE                         __ptext8 33D8                         __ptext9 5018  
                       _compare 5A06         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
          ?_fullSpeedAhead_test 0020                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
                       _lroundf 5A40                         goback@i 0036          distance_measure@CC_amb 00B6  
                       main@amb 0164                         main@buf 0100          distance_measure@CG_amb 00B0  
                       _sprintf 5660                         main@rgb 0171            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 58AC              setMotorPWM@PWMduty 0018  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
               ??_fullSpeedBack 001E                      ??_pin_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 4282           __end_of_short_reverse 5490                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         turn45@i 002F                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 5900                      ??_turnLeft 0025                 turn45@direction 0025  
__end_of_initDCmotors_parameter 4F4E                       _PORTFbits 000F8E           ??_fullSpeedAhead_test 0024  
             __end_of_turnRight 476E                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                      _start_move 01D1                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 00D0                      main@motorL 0195                      main@motorR 019E  
   amb_light_measure@CC_amb_ave 00AE               ??_calibrate_white 000E              ??_color_read_Clear 0007  
            ??_color_read_Green 0007                  detect_color@BB 00BD                  detect_color@BC 00B9  
                detect_color@BG 00CA                  detect_color@GB 00C1                  detect_color@GG 00C5  
                detect_color@BR 00C3                  detect_color@GR 00BB                  detect_color@RB 00BF  
                detect_color@RG 00B7                  detect_color@RR 00C8                  __end_of___flge 4D8E  
                _fullSpeedAhead 51A4                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5BC4                  __end_of_action 33D8  
                   ?_read_color 000C                  __end_of_goback 2DA2                  __end_of_turn45 3F14  
                __end_of_roundf 26B0              turnRight@delay_135 0026              turnRight@delay_180 0028  
                __end_of_strlen 5AE8             color_read_Clear@tmp 000A             start_initialization 587C  
                   __end_of_abs 5A06                     __end_of_pad 50DE                 turn45@turn_time 0024  
             turnLeft@delay_135 0027               turnLeft@delay_180 0029                  ??_toggle_light 0002  
                ??_verify_color 00D4                     turn45@delay 0029             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 5942                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 5268  
                      ??___flge 0009                        ??___wmul 0005                        ??_action 003C  
                      ??_goback 0034                 short_reverse@mL 0020                 short_reverse@mR 0022  
                   __pdataBANK0 00DB                        ??_turn45 0026                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 009E                   __pcstackBANK1 0100  
              ___aodiv@dividend 0001                        ?_HighISR 0001                       _dtoa$2892 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B                 turnRight@i_1350 002C                 turnRight@i_1351 002E  
                   _centisecond 01D3                  turnLeft@i_1328 002D                  turnLeft@i_1329 002F  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 00A8  
                   __smallconst 0E00               _I2C_2_Master_Idle 5B76               _I2C_2_Master_Init 5B4C  
             _I2C_2_Master_Read 5984               _I2C_2_Master_Stop 5D26          toggle_light@toggletime 0001  
                      ?_lroundf 00A4              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 009E               _sendStringSerial4 5B1C  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                     turnRight@mL 0020  
                   turnRight@mR 0022                        _PIR0bits 000E33                        i2u601_40 001A  
                      i2u601_41 0016                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                     _array_index 01D6                       _vfpfcnvrt 40CE  
     __end_of_I2C_2_Master_Idle 5B9E            __end_of_toggle_light 3966       __end_of_I2C_2_Master_Init 5B76  
     __end_of_I2C_2_Master_Read 59C6               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5D30  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 55A0  
                     main@setup 016E                       main@white 0179               ??_color_read_Blue 0007  
                     _stop_move 01CF                   detect_color@m 00AF                   detect_color@w 00B1  
                     _turnRight 45D8                   ??_test_action 0037                 _calibrate_white 3966  
     __end_of_sendStringSerial4 5B4C                   ??_short_burst 0024               _amb_light_measure 4A5A  
 __end_of_I2C_2_Master_RepStart 5D44              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3D44  
                    roundf@F527 0072                _distance_measure 50DE                    ??_initUSART4 0001  
            ?_amb_light_measure 00A8                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 5524  
                  __Lsmallconst 0E00            compare@value2compare 00AA             ??_amb_light_measure 00AA  
   __end_of_fullSpeedAhead_test 5984                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                     action@color 003C                      sprintf@fmt 00A0  
                      ___xxtofl 4282                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5CC2                      ?_turnRight 0020                        __ptext10 5AB2  
                      __ptext11 5838                        __ptext20 5BC4                        __ptext12 4F4E  
                      __ptext21 5CA4                        __ptext13 5D46                        __ptext30 45D8  
                      __ptext22 4E7C                        __ptext14 59C6                        __ptext31 4436  
                      __ptext23 5900                        __ptext15 48F6                        __ptext40 5C64  
                      __ptext32 5942                        __ptext24 50DE                        __ptext16 476E  
                      __ptext41 5CF8                        __ptext33 3966                        __ptext25 5AE8  
                      __ptext17 58BE                        __ptext50 4B82                        __ptext42 4A5A  
                      __ptext34 56B2                        __ptext26 5BE4                        __ptext18 5B1C  
                      __ptext51 57A2                        __ptext43 5A40                        __ptext35 5702  
                      __ptext27 5B4C                        __ptext19 5CE0                        __ptext60 5C84  
                      __ptext52 5D0E                        __ptext44 2302                        __ptext36 5752  
                      __ptext28 4D8E                        __ptext61 30D0                        __ptext53 5D26  
                      __ptext45 57F2                        __ptext37 5C04                        __ptext29 3F14  
                      __ptext70 5B9E                        __ptext62 36BA                        __ptext54 5D30  
                      __ptext46 1A18                        __ptext38 5C24                        __ptext71 5268  
                      __ptext63 2A4A                        __ptext55 5D3A                        __ptext47 5A7A  
                      __ptext39 5C44                        __ptext72 5CC2                        __ptext64 3D44  
                      __ptext56 5984                        __ptext48 1ED8                        __ptext73 5D1A  
                      __ptext65 53EA                        __ptext57 5B76                        __ptext49 4C8A  
                      __ptext66 532C                        __ptext58 4282                        __ptext67 5490  
                      __ptext59 26B0                        __ptext68 51A4                        __ptext69 3B70  
     __end_of_amb_light_measure 4B82                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
                turnRight@delay 0030                   turnLeft@delay 0031                        action@mL 0038  
                      action@mR 003A                      turnLeft@mL 0020                      turnLeft@mR 0022  
           __end_of_test_action 40CE              __end_of_read_color 5660                        _pin_init 5BC4  
                    turnRight@i 002A             __end_of_short_burst 5900                        isa$xinst 000000  
          distance_measure@stop 00BA                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00DB                        goback@mL 0030                        goback@mR 0032  
                      _vfprintf 55A0                        _turnLeft 4436                ___aomod@dividend 0001  
       __end_of_calibrate_white 3B70                      _INTCONbits 000FF2                     _setMotorPWM 3B70  
                 ?_detect_color 00AF                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 00AA               ??_buggylight_init 0001  
              ??_fullSpeedAhead 001E                turn45@delay_1306 0027                       turnLeft@i 002B  
                      lroundf@x 00A4        ??_initDCmotors_parameter 0005                   _short_reverse 53EA  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
                      turn45@mL 0020                        turn45@mR 0022                _color_click_init 5AE8  
                      sprintf@f 00AC                        sprintf@s 009E               _detect_color$3231 00CC  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C              distance_measure@mL 00A8  
            distance_measure@mR 00AA                  ??_detect_color 00B3                     ??_turnRight 0025  
                   _test_action 3F14                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012        short_reverse@instruction 0024                 _sendCharSerial4 5CE0  
                   _short_burst 58BE                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                  _toggle_light 36BA                    ___aomod@sign 0012                    _verify_color 5524  
                   _roundf$3233 004F                     _roundf$3234 0049                 main@stop_signal 016F  
