

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 03 11:19:36 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.35
    50                           ; Generated 05/05/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     _TRISFbits	set	3974
    85  0000                     _TX4REG	set	3812
    86  0000                     _RC4STAbits	set	3815
    87  0000                     _SP4BRGH	set	3814
    88  0000                     _TRISGbits	set	3975
    89  0000                     _TRISEbits	set	3973
    90  0000                     _SSP2CON2bits	set	3802
    91  0000                     _LATG	set	3967
    92  0000                     _LATE	set	3965
    93  0000                     _RX4PPS	set	3605
    94  0000                     _SSP2CLKPPS	set	3612
    95  0000                     _SSP2DATPPS	set	3613
    96  0000                     _ANSELDbits	set	3751
    97  0000                     _SSP2ADD	set	3798
    98  0000                     _SSP2CON1bits	set	3801
    99  0000                     _LATAbits	set	3961
   100  0000                     _LATFbits	set	3966
   101  0000                     _LATGbits	set	3967
   102  0000                     _TRISAbits	set	3969
   103  0000                     _TRISCbits	set	3971
   104  0000                     _TRISDbits	set	3972
   105  0000                     _LATCbits	set	3963
   106  0000                     _LATEbits	set	3965
   107  0000                     _RC4REG	set	3811
   108  0000                     _SP4BRGL	set	3813
   109  0000                     _TX4STAbits	set	3816
   110  0000                     _BAUD4CONbits	set	3817
   111  0000                     _SSP2CON2	set	3802
   112  0000                     _SSP2STAT	set	3800
   113  0000                     _SSP2BUF	set	3797
   114  0000                     _PIE4bits	set	3629
   115  0000                     _PIR4bits	set	3639
   116  0000                     _RC0PPS	set	3682
   117  0000                     _RC7PPS	set	3689
   118  0000                     _RD5PPS	set	3695
   119  0000                     _RE2PPS	set	3700
   120  0000                     _RD6PPS	set	3696
   121  0000                     _T2PR	set	4028
   122  0000                     _T2CONbits	set	4029
   123  0000                     _PWM7DCH	set	4000
   124  0000                     _PWM6DCH	set	4003
   125  0000                     _T2CLKCONbits	set	4031
   126  0000                     _T2HLTbits	set	4030
   127  0000                     _PWM6CONbits	set	4004
   128  0000                     _PWM7CONbits	set	4001
   129                           
   130                           	psect	smallconst
   131  000E00                     __psmallconst:
   132                           	callstack 0
   133  000E00  00                 	db	0
   134  000E01                     STR_1:
   135                           
   136                           ; BSR set to: 14
   137  000E01  09                 	db	9
   138  000E02  25                 	db	37
   139  000E03  64                 	db	100	;'d'
   140  000E04  09                 	db	9
   141  000E05  25                 	db	37
   142  000E06  64                 	db	100	;'d'
   143  000E07  09                 	db	9
   144  000E08  25                 	db	37
   145  000E09  64                 	db	100	;'d'
   146  000E0A  09                 	db	9
   147  000E0B  25                 	db	37
   148  000E0C  64                 	db	100	;'d'
   149  000E0D  0D                 	db	13
   150  000E0E  0A                 	db	10
   151  000E0F  00                 	db	0
   152  000E10  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  001CA6                     __pcinit:
   158                           	callstack 0
   159  001CA6                     start_initialization:
   160                           	callstack 0
   161  001CA6                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (112 bytes)
   165  001CA6  EE01  F000         	lfsr	0,__pbssBANK1
   166  001CAA  0E70               	movlw	112
   167  001CAC                     clear_0:
   168  001CAC  6AEE               	clrf	postinc0,c
   169  001CAE  06E8               	decf	wreg,f,c
   170  001CB0  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (12 bytes)
   173  001CB2  EE00  F0F3         	lfsr	0,__pbssBANK0
   174  001CB6  0E0C               	movlw	12
   175  001CB8                     clear_1:
   176  001CB8  6AEE               	clrf	postinc0,c
   177  001CBA  06E8               	decf	wreg,f,c
   178  001CBC  E1FD               	bnz	clear_1
   179  001CBE                     end_of_initialization:
   180                           	callstack 0
   181  001CBE                     __end_of__initialization:
   182                           	callstack 0
   183  001CBE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   184  001CC0  6EF8               	movwf	tblptru,c
   185  001CC2  0E0E               	movlw	high __Lsmallconst
   186  001CC4  6EF7               	movwf	tblptrh,c
   187  001CC6  0100               	movlb	0
   188  001CC8  EF93  F00B         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssBANK0
   191  0000F3                     __pbssBANK0:
   192                           	callstack 0
   193  0000F3                     _nout:
   194                           	callstack 0
   195  0000F3                     	ds	2
   196  0000F5                     _width:
   197                           	callstack 0
   198  0000F5                     	ds	2
   199  0000F7                     _prec:
   200                           	callstack 0
   201  0000F7                     	ds	2
   202  0000F9                     _flags:
   203                           	callstack 0
   204  0000F9                     	ds	2
   205  0000FB                     _TxBufReadCnt:
   206                           	callstack 0
   207  0000FB                     	ds	1
   208  0000FC                     _TxBufWriteCnt:
   209                           	callstack 0
   210  0000FC                     	ds	1
   211  0000FD                     _RxBufReadCnt:
   212                           	callstack 0
   213  0000FD                     	ds	1
   214  0000FE                     _RxBufWriteCnt:
   215                           	callstack 0
   216  0000FE                     	ds	1
   217                           
   218                           	psect	bssBANK1
   219  000100                     __pbssBANK1:
   220                           	callstack 0
   221  000100                     _EUSART4TXbuf:
   222                           	callstack 0
   223  000100                     	ds	60
   224  00013C                     _EUSART4RXbuf:
   225                           	callstack 0
   226  00013C                     	ds	20
   227  000150                     _dbuf:
   228                           	callstack 0
   229  000150                     	ds	32
   230                           
   231                           	psect	cstackBANK0
   232  000060                     __pcstackBANK0:
   233                           	callstack 0
   234  000060                     ?_sprintf:
   235                           	callstack 0
   236  000060                     sprintf@s:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x0
   240  000060                     	ds	2
   241  000062                     sprintf@fmt:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000062                     	ds	10
   246  00006C                     sprintf@ap:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0xC
   250  00006C                     	ds	2
   251  00006E                     sprintf@f:
   252                           	callstack 0
   253                           
   254                           ; 11 bytes @ 0xE
   255  00006E                     	ds	11
   256  000079                     color_display@buf:
   257                           	callstack 0
   258                           
   259                           ; 100 bytes @ 0x19
   260  000079                     	ds	100
   261  0000DD                     main@rgb:
   262                           	callstack 0
   263                           
   264                           ; 4 bytes @ 0x7D
   265  0000DD                     	ds	4
   266  0000E1                     main@motorL:
   267                           	callstack 0
   268                           
   269                           ; 9 bytes @ 0x81
   270  0000E1                     	ds	9
   271  0000EA                     main@motorR:
   272                           	callstack 0
   273                           
   274                           ; 9 bytes @ 0x8A
   275  0000EA                     	ds	9
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280  000001                     ??_I2C_2_Master_Idle:
   281  000001                     ?_strlen:
   282                           	callstack 0
   283  000001                     ?___aodiv:
   284                           	callstack 0
   285  000001                     ?___aomod:
   286                           	callstack 0
   287  000001                     sendCharSerial4@charToSend:
   288                           	callstack 0
   289  000001                     initDCmotorsPWM@PWMperiod:
   290                           	callstack 0
   291  000001                     fputc@c:
   292                           	callstack 0
   293  000001                     strlen@s:
   294                           	callstack 0
   295  000001                     ___aodiv@dividend:
   296                           	callstack 0
   297  000001                     ___aomod@dividend:
   298                           	callstack 0
   299                           
   300                           ; 8 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     ??_I2C_2_Master_Read:
   303  000002                     I2C_2_Master_Write@data_byte:
   304                           	callstack 0
   305  000002                     sendStringSerial4@string:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x1
   309  000002                     	ds	1
   310  000003                     color_writetoaddr@value:
   311                           	callstack 0
   312  000003                     I2C_2_Master_Read@ack:
   313                           	callstack 0
   314  000003                     fputc@fp:
   315                           	callstack 0
   316  000003                     strlen@a:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x2
   320  000003                     	ds	1
   321  000004                     color_writetoaddr@address:
   322                           	callstack 0
   323  000004                     I2C_2_Master_Read@tmp:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x3
   327  000004                     	ds	1
   328  000005                     ??_fputc:
   329  000005                     ??_color_click_init:
   330  000005                     ?_color_read_Red:
   331                           	callstack 0
   332  000005                     ?_color_read_Blue:
   333                           	callstack 0
   334  000005                     ?_color_read_Green:
   335                           	callstack 0
   336  000005                     ?_color_read_Clear:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x4
   340  000005                     	ds	2
   341  000007                     ??_color_read_Red:
   342  000007                     ??_color_read_Blue:
   343  000007                     ??_color_read_Green:
   344  000007                     ??_color_read_Clear:
   345                           
   346                           ; 1 bytes @ 0x6
   347  000007                     	ds	2
   348  000009                     ___aodiv@divisor:
   349                           	callstack 0
   350  000009                     ___aomod@divisor:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x8
   354  000009                     	ds	1
   355  00000A                     color_read_Red@tmp:
   356                           	callstack 0
   357  00000A                     color_read_Blue@tmp:
   358                           	callstack 0
   359  00000A                     color_read_Green@tmp:
   360                           	callstack 0
   361  00000A                     color_read_Clear@tmp:
   362                           	callstack 0
   363  00000A                     fputs@s:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367  00000A                     	ds	2
   368  00000C                     get_color@m:
   369                           	callstack 0
   370  00000C                     fputs@fp:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xB
   374  00000C                     	ds	2
   375  00000E                     fputs@c:
   376                           	callstack 0
   377  00000E                     detect_color_G@m:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xD
   381  00000E                     	ds	1
   382  00000F                     fputs@i:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00000F                     	ds	1
   387  000010                     ??_detect_color_G:
   388                           
   389                           ; 1 bytes @ 0xF
   390  000010                     	ds	1
   391  000011                     ?_pad:
   392                           	callstack 0
   393  000011                     ___aodiv@counter:
   394                           	callstack 0
   395  000011                     ___aomod@counter:
   396                           	callstack 0
   397  000011                     pad@fp:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x10
   401  000011                     	ds	1
   402  000012                     ___aodiv@sign:
   403                           	callstack 0
   404  000012                     ___aomod@sign:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x11
   408  000012                     	ds	1
   409  000013                     ?_abs:
   410                           	callstack 0
   411  000013                     pad@buf:
   412                           	callstack 0
   413  000013                     abs@a:
   414                           	callstack 0
   415  000013                     ___aodiv@quotient:
   416                           	callstack 0
   417                           
   418                           ; 8 bytes @ 0x12
   419  000013                     	ds	2
   420  000015                     ??_abs:
   421  000015                     pad@p:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x14
   425  000015                     	ds	2
   426  000017                     ??_pad:
   427                           
   428                           ; 1 bytes @ 0x16
   429  000017                     	ds	1
   430  000018                     pad@i:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x17
   434  000018                     	ds	2
   435  00001A                     pad@w:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x19
   439  00001A                     	ds	2
   440  00001C                     ?_dtoa:
   441                           	callstack 0
   442  00001C                     dtoa@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x1B
   446  00001C                     	ds	2
   447  00001E                     dtoa@d:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0x1D
   451  00001E                     	ds	8
   452  000026                     ??_dtoa:
   453                           
   454                           ; 1 bytes @ 0x25
   455  000026                     	ds	8
   456  00002E                     _dtoa$1865:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2D
   460  00002E                     	ds	2
   461  000030                     dtoa@p:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x2F
   465  000030                     	ds	2
   466  000032                     dtoa@w:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x31
   470  000032                     	ds	2
   471  000034                     dtoa@s:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x33
   475  000034                     	ds	2
   476  000036                     dtoa@n:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x35
   480  000036                     	ds	8
   481  00003E                     dtoa@i:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x3D
   485  00003E                     	ds	2
   486  000040                     ?_vfpfcnvrt:
   487                           	callstack 0
   488  000040                     vfpfcnvrt@fp:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x3F
   492  000040                     	ds	2
   493  000042                     vfpfcnvrt@fmt:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x41
   497  000042                     	ds	2
   498  000044                     vfpfcnvrt@ap:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x43
   502  000044                     	ds	2
   503  000046                     ??_vfpfcnvrt:
   504                           
   505                           ; 1 bytes @ 0x45
   506  000046                     	ds	2
   507  000048                     vfpfcnvrt@ll:
   508                           	callstack 0
   509                           
   510                           ; 8 bytes @ 0x47
   511  000048                     	ds	8
   512  000050                     ?_vfprintf:
   513                           	callstack 0
   514  000050                     vfprintf@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x4F
   518  000050                     	ds	2
   519  000052                     vfprintf@fmt:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x51
   523  000052                     	ds	2
   524  000054                     vfprintf@ap:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x53
   528  000054                     	ds	2
   529  000056                     vfprintf@cfmt:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x55
   533  000056                     	ds	2
   534  000058                     color_display@m:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x57
   538  000058                     	ds	2
   539  00005A                     ??_color_display:
   540                           
   541                           ; 1 bytes @ 0x59
   542  00005A                     	ds	4
   543  00005E                     ??_main:
   544                           
   545                           ; 1 bytes @ 0x5D
   546  00005E                     	ds	2
   547                           
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 25 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  motorR          9  138[BANK0 ] struct DC_motor
   558 ;;  motorL          9  129[BANK0 ] struct DC_motor
   559 ;;  rgb             4  125[BANK0 ] struct color_rgb
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   572 ;;      Totals:         2      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   573 ;;Total ram usage:       24 bytes
   574 ;; Hardware stack levels required when called: 9
   575 ;; This function calls:
   576 ;;		_I2C_2_Master_Init
   577 ;;		_color_click_init
   578 ;;		_color_display
   579 ;;		_detect_color_G
   580 ;;		_initDCmotorsPWM
   581 ;;		_initUSART4
   582 ;; This function is called by:
   583 ;;		Startup code after reset
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text0
   588  001726                     __ptext0:
   589                           	callstack 0
   590  001726                     _main:
   591                           	callstack 22
   592  001726                     
   593                           ;main.c: 26:     I2C_2_Master_Init();
   594  001726  EC2A  F00E         	call	_I2C_2_Master_Init	;wreg free
   595  00172A                     
   596                           ;main.c: 27:     color_click_init();
   597  00172A  ECE2  F00D         	call	_color_click_init	;wreg free
   598  00172E                     
   599                           ;main.c: 28:     initDCmotorsPWM(199);
   600  00172E  0E00               	movlw	0
   601  001730  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   602  001732  0EC7               	movlw	199
   603  001734  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   604  001736  EC65  F00D         	call	_initDCmotorsPWM	;wreg free
   605  00173A                     
   606                           ;main.c: 29:     initUSART4();
   607  00173A  EC76  F00E         	call	_initUSART4	;wreg free
   608  00173E                     
   609                           ;main.c: 31:     struct DC_motor motorL, motorR;;main.c: 32:     struct color_rgb rgb;;m
      +                          ain.c: 35:     motorL.power = 0;
   610  00173E  0E00               	movlw	0
   611  001740  0100               	movlb	0	; () banked
   612  001742  6FE1               	movwf	main@motorL& (0+255),b
   613  001744                     
   614                           ; BSR set to: 0
   615                           ;main.c: 36:     motorL.direction = 1;
   616  001744  0E01               	movlw	1
   617  001746  6FE2               	movwf	(main@motorL+1)& (0+255),b
   618  001748                     
   619                           ; BSR set to: 0
   620                           ;main.c: 37:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   621  001748  0EA3               	movlw	163
   622  00174A  6FE3               	movwf	(main@motorL+2)& (0+255),b
   623  00174C  0E0F               	movlw	15
   624  00174E  6FE4               	movwf	(main@motorL+3)& (0+255),b
   625  001750                     
   626                           ; BSR set to: 0
   627                           ;main.c: 38:     motorL.dir_LAT = (unsigned char *)(&LATE);
   628  001750  0E7D               	movlw	125
   629  001752  6FE5               	movwf	(main@motorL+4)& (0+255),b
   630  001754  0E0F               	movlw	15
   631  001756  6FE6               	movwf	(main@motorL+5)& (0+255),b
   632  001758                     
   633                           ; BSR set to: 0
   634                           ;main.c: 39:     motorL.dir_pin = 4;
   635  001758  0E04               	movlw	4
   636  00175A  6FE7               	movwf	(main@motorL+6)& (0+255),b
   637  00175C                     
   638                           ; BSR set to: 0
   639                           ;main.c: 40:     motorL.PWMperiod = 199;
   640  00175C  0E00               	movlw	0
   641  00175E  6FE9               	movwf	(main@motorL+8)& (0+255),b
   642  001760  0EC7               	movlw	199
   643  001762  6FE8               	movwf	(main@motorL+7)& (0+255),b
   644  001764                     
   645                           ; BSR set to: 0
   646                           ;main.c: 43:     motorR.power = 0;
   647  001764  0E00               	movlw	0
   648  001766  6FEA               	movwf	main@motorR& (0+255),b
   649  001768                     
   650                           ; BSR set to: 0
   651                           ;main.c: 44:     motorR.direction = 1;
   652  001768  0E01               	movlw	1
   653  00176A  6FEB               	movwf	(main@motorR+1)& (0+255),b
   654  00176C                     
   655                           ; BSR set to: 0
   656                           ;main.c: 45:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   657  00176C  0EA0               	movlw	160
   658  00176E  6FEC               	movwf	(main@motorR+2)& (0+255),b
   659  001770  0E0F               	movlw	15
   660  001772  6FED               	movwf	(main@motorR+3)& (0+255),b
   661  001774                     
   662                           ; BSR set to: 0
   663                           ;main.c: 46:     motorR.dir_LAT = (unsigned char *)(&LATG);
   664  001774  0E7F               	movlw	127
   665  001776  6FEE               	movwf	(main@motorR+4)& (0+255),b
   666  001778  0E0F               	movlw	15
   667  00177A  6FEF               	movwf	(main@motorR+5)& (0+255),b
   668  00177C                     
   669                           ; BSR set to: 0
   670                           ;main.c: 47:     motorR.dir_pin = 6;
   671  00177C  0E06               	movlw	6
   672  00177E  6FF0               	movwf	(main@motorR+6)& (0+255),b
   673  001780                     
   674                           ; BSR set to: 0
   675                           ;main.c: 48:     motorR.PWMperiod = 199;
   676  001780  0E00               	movlw	0
   677  001782  6FF2               	movwf	(main@motorR+8)& (0+255),b
   678  001784  0EC7               	movlw	199
   679  001786  6FF1               	movwf	(main@motorR+7)& (0+255),b
   680  001788                     
   681                           ; BSR set to: 0
   682                           ;main.c: 51:     TRISGbits.TRISG1 = 0;
   683  001788  9287               	bcf	135,1,c	;volatile
   684  00178A                     
   685                           ; BSR set to: 0
   686                           ;main.c: 52:     TRISFbits.TRISF7 = 0;
   687  00178A  9E86               	bcf	134,7,c	;volatile
   688  00178C                     
   689                           ; BSR set to: 0
   690                           ;main.c: 53:     TRISAbits.TRISA4 = 0;
   691  00178C  9881               	bcf	129,4,c	;volatile
   692  00178E                     
   693                           ; BSR set to: 0
   694                           ;main.c: 54:     LATGbits.LATG1 = 1;
   695  00178E  827F               	bsf	127,1,c	;volatile
   696  001790                     
   697                           ; BSR set to: 0
   698                           ;main.c: 55:     LATFbits.LATF7 = 1;
   699  001790  8E7E               	bsf	126,7,c	;volatile
   700  001792                     
   701                           ; BSR set to: 0
   702                           ;main.c: 56:     LATAbits.LATA4 = 1;
   703  001792  8879               	bsf	121,4,c	;volatile
   704  001794                     l2189:
   705                           
   706                           ;main.c: 62:         detect_color_G(&rgb);
   707  001794  0EDD               	movlw	low main@rgb
   708  001796  6E0E               	movwf	detect_color_G@m^0,c
   709  001798  0E00               	movlw	high main@rgb
   710  00179A  6E0F               	movwf	(detect_color_G@m+1)^0,c
   711  00179C  EC14  F00E         	call	_detect_color_G	;wreg free
   712  0017A0                     
   713                           ;main.c: 63:         color_display(&rgb);
   714  0017A0  0EDD               	movlw	low main@rgb
   715  0017A2  6E58               	movwf	color_display@m^0,c
   716  0017A4  0E00               	movlw	high main@rgb
   717  0017A6  6E59               	movwf	(color_display@m+1)^0,c
   718  0017A8  ECE6  F00B         	call	_color_display	;wreg free
   719  0017AC                     
   720                           ;main.c: 64:         _delay((unsigned long)((500)*(64000000/4000.0)));
   721  0017AC  0E29               	movlw	41
   722  0017AE  6E5F               	movwf	(??_main+1)^0,c
   723  0017B0  0E96               	movlw	150
   724  0017B2  6E5E               	movwf	??_main^0,c
   725  0017B4  0E7F               	movlw	127
   726  0017B6                     u1247:
   727  0017B6  2EE8               	decfsz	wreg,f,c
   728  0017B8  D7FE               	bra	u1247
   729  0017BA  2E5E               	decfsz	??_main^0,f,c
   730  0017BC  D7FC               	bra	u1247
   731  0017BE  2E5F               	decfsz	(??_main+1)^0,f,c
   732  0017C0  D7FA               	bra	u1247
   733  0017C2  F000               	nop	
   734  0017C4  EFCA  F00B         	goto	l2189
   735  0017C8  EF00  F000         	goto	start
   736  0017CC                     __end_of_main:
   737                           	callstack 0
   738                           
   739 ;; *************** function _initUSART4 *****************
   740 ;; Defined at:
   741 ;;		line 4 in file "serial.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text1
   769  001CEC                     __ptext1:
   770                           	callstack 0
   771  001CEC                     _initUSART4:
   772                           	callstack 30
   773  001CEC                     
   774                           ;serial.c: 8:     RC0PPS = 0x12;
   775  001CEC  0E12               	movlw	18
   776  001CEE  010E               	movlb	14	; () banked
   777  001CF0  6F62               	movwf	98,b	;volatile
   778                           
   779                           ;serial.c: 9:     RX4PPS = 0x11;
   780  001CF2  0E11               	movlw	17
   781  001CF4  6F15               	movwf	21,b	;volatile
   782  001CF6                     
   783                           ; BSR set to: 14
   784                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
   785  001CF6  97E9               	bcf	233,3,b	;volatile
   786  001CF8                     
   787                           ; BSR set to: 14
   788                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
   789  001CF8  95E8               	bcf	232,2,b	;volatile
   790                           
   791                           ;serial.c: 13:     SP4BRGL = 51;
   792  001CFA  0E33               	movlw	51
   793  001CFC  6FE5               	movwf	229,b	;volatile
   794                           
   795                           ;serial.c: 15:     SP4BRGH = 0;
   796  001CFE  0E00               	movlw	0
   797  001D00  6FE6               	movwf	230,b	;volatile
   798  001D02                     
   799                           ; BSR set to: 14
   800                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   801  001D02  89E7               	bsf	231,4,b	;volatile
   802  001D04                     
   803                           ; BSR set to: 14
   804                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   805  001D04  8BE8               	bsf	232,5,b	;volatile
   806  001D06                     
   807                           ; BSR set to: 14
   808                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   809  001D06  8FE7               	bsf	231,7,b	;volatile
   810  001D08                     
   811                           ; BSR set to: 14
   812  001D08  0012               	return		;funcret
   813  001D0A                     __end_of_initUSART4:
   814                           	callstack 0
   815                           
   816 ;; *************** function _initDCmotorsPWM *****************
   817 ;; Defined at:
   818 ;;		line 5 in file "dc_motor.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  PWMperiod       2    0[COMRAM] int 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:        2 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846  001ACA                     __ptext2:
   847                           	callstack 0
   848  001ACA                     _initDCmotorsPWM:
   849                           	callstack 30
   850  001ACA                     
   851                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   852  001ACA  9485               	bcf	133,2,c	;volatile
   853                           
   854                           ;dc_motor.c: 9:     TRISCbits.TRISC7=0;
   855  001ACC  9E83               	bcf	131,7,c	;volatile
   856                           
   857                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
   858  001ACE  9C87               	bcf	135,6,c	;volatile
   859                           
   860                           ;dc_motor.c: 11:     TRISEbits.TRISE4=0;
   861  001AD0  9885               	bcf	133,4,c	;volatile
   862                           
   863                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
   864  001AD2  947D               	bcf	125,2,c	;volatile
   865                           
   866                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
   867  001AD4  9E7B               	bcf	123,7,c	;volatile
   868                           
   869                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
   870  001AD6  9C7F               	bcf	127,6,c	;volatile
   871                           
   872                           ;dc_motor.c: 15:     LATEbits.LATE4=0;
   873  001AD8  987D               	bcf	125,4,c	;volatile
   874  001ADA                     
   875                           ;dc_motor.c: 18:     T2CONbits.CKPS=0b011;
   876  001ADA  50BD               	movf	189,w,c	;volatile
   877  001ADC  0B8F               	andlw	-113
   878  001ADE  0930               	iorlw	48
   879  001AE0  6EBD               	movwf	189,c	;volatile
   880                           
   881                           ;dc_motor.c: 19:     T2HLTbits.MODE=0b00000;
   882  001AE2  0EE0               	movlw	-32
   883  001AE4  16BE               	andwf	190,f,c	;volatile
   884                           
   885                           ;dc_motor.c: 20:     T2CLKCONbits.CS=0b0001;
   886  001AE6  50BF               	movf	191,w,c	;volatile
   887  001AE8  0BF0               	andlw	-16
   888  001AEA  0901               	iorlw	1
   889  001AEC  6EBF               	movwf	191,c	;volatile
   890                           
   891                           ;dc_motor.c: 23:     T2PR=200-1;
   892  001AEE  0EC7               	movlw	199
   893  001AF0  6EBC               	movwf	188,c	;volatile
   894  001AF2                     
   895                           ;dc_motor.c: 24:     T2CONbits.ON=1;
   896  001AF2  8EBD               	bsf	189,7,c	;volatile
   897                           
   898                           ;dc_motor.c: 26:     RE2PPS=0x0A;
   899  001AF4  0E0A               	movlw	10
   900  001AF6  010E               	movlb	14	; () banked
   901  001AF8  6F74               	movwf	116,b	;volatile
   902                           
   903                           ;dc_motor.c: 27:     RC7PPS=0x0B;
   904  001AFA  0E0B               	movlw	11
   905  001AFC  6F69               	movwf	105,b	;volatile
   906                           
   907                           ;dc_motor.c: 29:     PWM6DCH=0;
   908  001AFE  0E00               	movlw	0
   909  001B00  6EA3               	movwf	163,c	;volatile
   910                           
   911                           ;dc_motor.c: 30:     PWM7DCH=0;
   912  001B02  0E00               	movlw	0
   913  001B04  6EA0               	movwf	160,c	;volatile
   914  001B06                     
   915                           ; BSR set to: 14
   916                           ;dc_motor.c: 32:     PWM6CONbits.EN = 1;
   917  001B06  8EA4               	bsf	164,7,c	;volatile
   918  001B08                     
   919                           ; BSR set to: 14
   920                           ;dc_motor.c: 33:     PWM7CONbits.EN = 1;
   921  001B08  8EA1               	bsf	161,7,c	;volatile
   922  001B0A                     
   923                           ; BSR set to: 14
   924  001B0A  0012               	return		;funcret
   925  001B0C                     __end_of_initDCmotorsPWM:
   926                           	callstack 0
   927                           
   928 ;; *************** function _detect_color_G *****************
   929 ;; Defined at:
   930 ;;		line 124 in file "color.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  m               2   13[COMRAM] PTR struct color_rgb
   933 ;;		 -> main@rgb(4), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;Total ram usage:        4 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 4
   952 ;; This function calls:
   953 ;;		_get_color
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text3
   960  001C28                     __ptext3:
   961                           	callstack 0
   962  001C28                     _detect_color_G:
   963                           	callstack 26
   964  001C28                     
   965                           ;color.c: 124: void detect_color_G(struct color_rgb *m);color.c: 125: {;color.c: 126:   
      +                            LATGbits.LATG1 = 0;
   966  001C28  927F               	bcf	127,1,c	;volatile
   967                           
   968                           ;color.c: 127:     LATFbits.LATF7 = 0;
   969  001C2A  9E7E               	bcf	126,7,c	;volatile
   970                           
   971                           ;color.c: 128:     LATAbits.LATA4 = 1;
   972  001C2C  8879               	bsf	121,4,c	;volatile
   973  001C2E                     
   974                           ;color.c: 129:     _delay((unsigned long)((200)*(64000000/4000.0)));
   975  001C2E  0E11               	movlw	17
   976  001C30  6E11               	movwf	(??_detect_color_G+1)^0,c
   977  001C32  0E3C               	movlw	60
   978  001C34  6E10               	movwf	??_detect_color_G^0,c
   979  001C36  0ECB               	movlw	203
   980  001C38                     u1257:
   981  001C38  2EE8               	decfsz	wreg,f,c
   982  001C3A  D7FE               	bra	u1257
   983  001C3C  2E10               	decfsz	??_detect_color_G^0,f,c
   984  001C3E  D7FC               	bra	u1257
   985  001C40  2E11               	decfsz	(??_detect_color_G+1)^0,f,c
   986  001C42  D7FA               	bra	u1257
   987  001C44  F000               	nop	
   988  001C46                     
   989                           ;color.c: 130:     get_color(m);
   990  001C46  C00E  F00C         	movff	detect_color_G@m,get_color@m
   991  001C4A  C00F  F00D         	movff	detect_color_G@m+1,get_color@m+1
   992  001C4E  EC1C  F00D         	call	_get_color	;wreg free
   993  001C52  0012               	return		;funcret
   994  001C54                     __end_of_detect_color_G:
   995                           	callstack 0
   996                           
   997 ;; *************** function _get_color *****************
   998 ;; Defined at:
   999 ;;		line 88 in file "color.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;  m               2   11[COMRAM] PTR struct color_rgb
  1002 ;;		 -> main@rgb(4), 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1018 ;;Total ram usage:        2 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 3
  1021 ;; This function calls:
  1022 ;;		_color_read_Blue
  1023 ;;		_color_read_Clear
  1024 ;;		_color_read_Green
  1025 ;;		_color_read_Red
  1026 ;; This function is called by:
  1027 ;;		_detect_color_G
  1028 ;;		_detect_color_R
  1029 ;;		_detect_color_C
  1030 ;;		_detect_color_B
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text4
  1035  001A38                     __ptext4:
  1036                           	callstack 0
  1037  001A38                     _get_color:
  1038                           	callstack 26
  1039  001A38                     
  1040                           ;color.c: 88: void get_color (struct color_rgb *m);color.c: 89: {;color.c: 90:     m->R 
      +                          = color_read_Red();
  1041  001A38  EC7C  F00C         	call	_color_read_Red	;wreg free
  1042  001A3C  5005               	movf	?_color_read_Red^0,w,c
  1043  001A3E  C00C  FFD9         	movff	get_color@m,fsr2l
  1044  001A42  C00D  FFDA         	movff	get_color@m+1,fsr2h
  1045  001A46  6EDF               	movwf	indf2,c
  1046                           
  1047                           ;color.c: 91:     m->B = color_read_Blue();
  1048  001A48  EE20 F002          	lfsr	2,2
  1049  001A4C  500C               	movf	get_color@m^0,w,c
  1050  001A4E  26D9               	addwf	fsr2l,f,c
  1051  001A50  500D               	movf	(get_color@m+1)^0,w,c
  1052  001A52  22DA               	addwfc	fsr2h,f,c
  1053  001A54  ECF4  F00C         	call	_color_read_Blue	;wreg free
  1054  001A58  5005               	movf	?_color_read_Blue^0,w,c
  1055  001A5A  6EDF               	movwf	indf2,c
  1056                           
  1057                           ;color.c: 92:     m->G = color_read_Green();
  1058  001A5C  EE20 F001          	lfsr	2,1
  1059  001A60  500C               	movf	get_color@m^0,w,c
  1060  001A62  26D9               	addwf	fsr2l,f,c
  1061  001A64  500D               	movf	(get_color@m+1)^0,w,c
  1062  001A66  22DA               	addwfc	fsr2h,f,c
  1063  001A68  ECA4  F00C         	call	_color_read_Green	;wreg free
  1064  001A6C  5005               	movf	?_color_read_Green^0,w,c
  1065  001A6E  6EDF               	movwf	indf2,c
  1066                           
  1067                           ;color.c: 93:     m->C = color_read_Clear();
  1068  001A70  EE20 F003          	lfsr	2,3
  1069  001A74  500C               	movf	get_color@m^0,w,c
  1070  001A76  26D9               	addwf	fsr2l,f,c
  1071  001A78  500D               	movf	(get_color@m+1)^0,w,c
  1072  001A7A  22DA               	addwfc	fsr2h,f,c
  1073  001A7C  ECCC  F00C         	call	_color_read_Clear	;wreg free
  1074  001A80  5005               	movf	?_color_read_Clear^0,w,c
  1075  001A82  6EDF               	movwf	indf2,c
  1076  001A84  0012               	return		;funcret
  1077  001A86                     __end_of_get_color:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _color_read_Red *****************
  1081 ;; Defined at:
  1082 ;;		line 32 in file "color.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  tmp             2    9[COMRAM] unsigned int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    4[COMRAM] unsigned int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; Hardware stack levels required when called: 2
  1103 ;; This function calls:
  1104 ;;		_I2C_2_Master_Read
  1105 ;;		_I2C_2_Master_RepStart
  1106 ;;		_I2C_2_Master_Start
  1107 ;;		_I2C_2_Master_Stop
  1108 ;;		_I2C_2_Master_Write
  1109 ;; This function is called by:
  1110 ;;		_get_color
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text5
  1115  0018F8                     __ptext5:
  1116                           	callstack 0
  1117  0018F8                     _color_read_Red:
  1118                           	callstack 26
  1119  0018F8                     
  1120                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  1121  0018F8  ECA1  F00E         	call	_I2C_2_Master_Start	;wreg free
  1122                           
  1123                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  1124  0018FC  0E52               	movlw	82
  1125  0018FE  EC91  F00E         	call	_I2C_2_Master_Write
  1126                           
  1127                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  1128  001902  0EB6               	movlw	182
  1129  001904  EC91  F00E         	call	_I2C_2_Master_Write
  1130                           
  1131                           ;color.c: 38:  I2C_2_Master_RepStart();
  1132  001908  EC97  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1133                           
  1134                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  1135  00190C  0E53               	movlw	83
  1136  00190E  EC91  F00E         	call	_I2C_2_Master_Write
  1137                           
  1138                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  1139  001912  0E01               	movlw	1
  1140  001914  EC86  F00D         	call	_I2C_2_Master_Read
  1141  001918  6E07               	movwf	??_color_read_Red^0,c
  1142  00191A  5007               	movf	??_color_read_Red^0,w,c
  1143  00191C  6E0A               	movwf	color_read_Red@tmp^0,c
  1144  00191E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1145                           
  1146                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1147  001920  0E00               	movlw	0
  1148  001922  EC86  F00D         	call	_I2C_2_Master_Read
  1149  001926  6E07               	movwf	??_color_read_Red^0,c
  1150  001928  5007               	movf	??_color_read_Red^0,w,c
  1151  00192A  6E09               	movwf	(??_color_read_Red+2)^0,c
  1152  00192C  6A08               	clrf	(??_color_read_Red+1)^0,c
  1153  00192E  500A               	movf	color_read_Red@tmp^0,w,c
  1154  001930  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1155  001932  6E0A               	movwf	color_read_Red@tmp^0,c
  1156  001934  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1157  001936  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1158  001938  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1159                           
  1160                           ;color.c: 42:  I2C_2_Master_Stop();
  1161  00193A  EC9C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1162  00193E                     
  1163                           ;color.c: 43:  return tmp;
  1164  00193E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1165  001942  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1166  001946  0012               	return		;funcret
  1167  001948                     __end_of_color_read_Red:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _color_read_Green *****************
  1171 ;; Defined at:
  1172 ;;		line 60 in file "color.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;  tmp             2    9[COMRAM] unsigned int 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2    4[COMRAM] unsigned int 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1187 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1188 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;Total ram usage:        7 bytes
  1191 ;; Hardware stack levels used: 1
  1192 ;; Hardware stack levels required when called: 2
  1193 ;; This function calls:
  1194 ;;		_I2C_2_Master_Read
  1195 ;;		_I2C_2_Master_RepStart
  1196 ;;		_I2C_2_Master_Start
  1197 ;;		_I2C_2_Master_Stop
  1198 ;;		_I2C_2_Master_Write
  1199 ;; This function is called by:
  1200 ;;		_get_color
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text6
  1205  001948                     __ptext6:
  1206                           	callstack 0
  1207  001948                     _color_read_Green:
  1208                           	callstack 26
  1209  001948                     
  1210                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  1211  001948  ECA1  F00E         	call	_I2C_2_Master_Start	;wreg free
  1212                           
  1213                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  1214  00194C  0E52               	movlw	82
  1215  00194E  EC91  F00E         	call	_I2C_2_Master_Write
  1216                           
  1217                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  1218  001952  0EB8               	movlw	184
  1219  001954  EC91  F00E         	call	_I2C_2_Master_Write
  1220                           
  1221                           ;color.c: 66:  I2C_2_Master_RepStart();
  1222  001958  EC97  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1223                           
  1224                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  1225  00195C  0E53               	movlw	83
  1226  00195E  EC91  F00E         	call	_I2C_2_Master_Write
  1227                           
  1228                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  1229  001962  0E01               	movlw	1
  1230  001964  EC86  F00D         	call	_I2C_2_Master_Read
  1231  001968  6E07               	movwf	??_color_read_Green^0,c
  1232  00196A  5007               	movf	??_color_read_Green^0,w,c
  1233  00196C  6E0A               	movwf	color_read_Green@tmp^0,c
  1234  00196E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1235                           
  1236                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1237  001970  0E00               	movlw	0
  1238  001972  EC86  F00D         	call	_I2C_2_Master_Read
  1239  001976  6E07               	movwf	??_color_read_Green^0,c
  1240  001978  5007               	movf	??_color_read_Green^0,w,c
  1241  00197A  6E09               	movwf	(??_color_read_Green+2)^0,c
  1242  00197C  6A08               	clrf	(??_color_read_Green+1)^0,c
  1243  00197E  500A               	movf	color_read_Green@tmp^0,w,c
  1244  001980  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1245  001982  6E0A               	movwf	color_read_Green@tmp^0,c
  1246  001984  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1247  001986  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1248  001988  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1249                           
  1250                           ;color.c: 70:  I2C_2_Master_Stop();
  1251  00198A  EC9C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1252  00198E                     
  1253                           ;color.c: 71:  return tmp;
  1254  00198E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1255  001992  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1256  001996  0012               	return		;funcret
  1257  001998                     __end_of_color_read_Green:
  1258                           	callstack 0
  1259                           
  1260 ;; *************** function _color_read_Clear *****************
  1261 ;; Defined at:
  1262 ;;		line 74 in file "color.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  tmp             2    9[COMRAM] unsigned int 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  2    4[COMRAM] unsigned int 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1278 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1279 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1280 ;;Total ram usage:        7 bytes
  1281 ;; Hardware stack levels used: 1
  1282 ;; Hardware stack levels required when called: 2
  1283 ;; This function calls:
  1284 ;;		_I2C_2_Master_Read
  1285 ;;		_I2C_2_Master_RepStart
  1286 ;;		_I2C_2_Master_Start
  1287 ;;		_I2C_2_Master_Stop
  1288 ;;		_I2C_2_Master_Write
  1289 ;; This function is called by:
  1290 ;;		_get_color
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text7
  1295  001998                     __ptext7:
  1296                           	callstack 0
  1297  001998                     _color_read_Clear:
  1298                           	callstack 26
  1299  001998                     
  1300                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  1301  001998  ECA1  F00E         	call	_I2C_2_Master_Start	;wreg free
  1302                           
  1303                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  1304  00199C  0E52               	movlw	82
  1305  00199E  EC91  F00E         	call	_I2C_2_Master_Write
  1306                           
  1307                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  1308  0019A2  0EB4               	movlw	180
  1309  0019A4  EC91  F00E         	call	_I2C_2_Master_Write
  1310                           
  1311                           ;color.c: 80:  I2C_2_Master_RepStart();
  1312  0019A8  EC97  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1313                           
  1314                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  1315  0019AC  0E53               	movlw	83
  1316  0019AE  EC91  F00E         	call	_I2C_2_Master_Write
  1317                           
  1318                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  1319  0019B2  0E01               	movlw	1
  1320  0019B4  EC86  F00D         	call	_I2C_2_Master_Read
  1321  0019B8  6E07               	movwf	??_color_read_Clear^0,c
  1322  0019BA  5007               	movf	??_color_read_Clear^0,w,c
  1323  0019BC  6E0A               	movwf	color_read_Clear@tmp^0,c
  1324  0019BE  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1325                           
  1326                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1327  0019C0  0E00               	movlw	0
  1328  0019C2  EC86  F00D         	call	_I2C_2_Master_Read
  1329  0019C6  6E07               	movwf	??_color_read_Clear^0,c
  1330  0019C8  5007               	movf	??_color_read_Clear^0,w,c
  1331  0019CA  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1332  0019CC  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1333  0019CE  500A               	movf	color_read_Clear@tmp^0,w,c
  1334  0019D0  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1335  0019D2  6E0A               	movwf	color_read_Clear@tmp^0,c
  1336  0019D4  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1337  0019D6  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1338  0019D8  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1339                           
  1340                           ;color.c: 84:  I2C_2_Master_Stop();
  1341  0019DA  EC9C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1342  0019DE                     
  1343                           ;color.c: 85:  return tmp;
  1344  0019DE  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1345  0019E2  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1346  0019E6  0012               	return		;funcret
  1347  0019E8                     __end_of_color_read_Clear:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function _color_read_Blue *****************
  1351 ;; Defined at:
  1352 ;;		line 46 in file "color.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  tmp             2    9[COMRAM] unsigned int 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    4[COMRAM] unsigned int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1368 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1370 ;;Total ram usage:        7 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; Hardware stack levels required when called: 2
  1373 ;; This function calls:
  1374 ;;		_I2C_2_Master_Read
  1375 ;;		_I2C_2_Master_RepStart
  1376 ;;		_I2C_2_Master_Start
  1377 ;;		_I2C_2_Master_Stop
  1378 ;;		_I2C_2_Master_Write
  1379 ;; This function is called by:
  1380 ;;		_get_color
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text8
  1385  0019E8                     __ptext8:
  1386                           	callstack 0
  1387  0019E8                     _color_read_Blue:
  1388                           	callstack 26
  1389  0019E8                     
  1390                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  1391  0019E8  ECA1  F00E         	call	_I2C_2_Master_Start	;wreg free
  1392                           
  1393                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  1394  0019EC  0E52               	movlw	82
  1395  0019EE  EC91  F00E         	call	_I2C_2_Master_Write
  1396                           
  1397                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x1A);
  1398  0019F2  0EBA               	movlw	186
  1399  0019F4  EC91  F00E         	call	_I2C_2_Master_Write
  1400                           
  1401                           ;color.c: 52:  I2C_2_Master_RepStart();
  1402  0019F8  EC97  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1403                           
  1404                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  1405  0019FC  0E53               	movlw	83
  1406  0019FE  EC91  F00E         	call	_I2C_2_Master_Write
  1407                           
  1408                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  1409  001A02  0E01               	movlw	1
  1410  001A04  EC86  F00D         	call	_I2C_2_Master_Read
  1411  001A08  6E07               	movwf	??_color_read_Blue^0,c
  1412  001A0A  5007               	movf	??_color_read_Blue^0,w,c
  1413  001A0C  6E0A               	movwf	color_read_Blue@tmp^0,c
  1414  001A0E  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1415                           
  1416                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1417  001A10  0E00               	movlw	0
  1418  001A12  EC86  F00D         	call	_I2C_2_Master_Read
  1419  001A16  6E07               	movwf	??_color_read_Blue^0,c
  1420  001A18  5007               	movf	??_color_read_Blue^0,w,c
  1421  001A1A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1422  001A1C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1423  001A1E  500A               	movf	color_read_Blue@tmp^0,w,c
  1424  001A20  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1425  001A22  6E0A               	movwf	color_read_Blue@tmp^0,c
  1426  001A24  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1427  001A26  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1428  001A28  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1429                           
  1430                           ;color.c: 56:  I2C_2_Master_Stop();
  1431  001A2A  EC9C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1432  001A2E                     
  1433                           ;color.c: 57:  return tmp;
  1434  001A2E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1435  001A32  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1436  001A36  0012               	return		;funcret
  1437  001A38                     __end_of_color_read_Blue:
  1438                           	callstack 0
  1439                           
  1440 ;; *************** function _I2C_2_Master_RepStart *****************
  1441 ;; Defined at:
  1442 ;;		line 33 in file "i2c.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		wreg, status,2, status,0, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 1
  1463 ;; This function calls:
  1464 ;;		_I2C_2_Master_Idle
  1465 ;; This function is called by:
  1466 ;;		_color_read_Red
  1467 ;;		_color_read_Blue
  1468 ;;		_color_read_Green
  1469 ;;		_color_read_Clear
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text9
  1474  001D2E                     __ptext9:
  1475                           	callstack 0
  1476  001D2E                     _I2C_2_Master_RepStart:
  1477                           	callstack 26
  1478  001D2E                     
  1479                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1480  001D2E  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1481  001D32                     
  1482                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1483  001D32  010E               	movlb	14	; () banked
  1484  001D34  83DA               	bsf	218,1,b	;volatile
  1485  001D36                     
  1486                           ; BSR set to: 14
  1487  001D36  0012               	return		;funcret
  1488  001D38                     __end_of_I2C_2_Master_RepStart:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _I2C_2_Master_Read *****************
  1492 ;; Defined at:
  1493 ;;		line 51 in file "i2c.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  ack             1    wreg     unsigned char 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  ack             1    2[COMRAM] unsigned char 
  1498 ;;  tmp             1    3[COMRAM] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1510 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1511 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1512 ;;Total ram usage:        3 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 1
  1515 ;; This function calls:
  1516 ;;		_I2C_2_Master_Idle
  1517 ;; This function is called by:
  1518 ;;		_color_read_Red
  1519 ;;		_color_read_Blue
  1520 ;;		_color_read_Green
  1521 ;;		_color_read_Clear
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text10
  1526  001B0C                     __ptext10:
  1527                           	callstack 0
  1528  001B0C                     _I2C_2_Master_Read:
  1529                           	callstack 26
  1530                           
  1531                           ; BSR set to: 14
  1532                           ;incstack = 0
  1533                           ;I2C_2_Master_Read@ack stored from wreg
  1534  001B0C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1535  001B0E                     
  1536                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1537  001B0E  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1538  001B12                     
  1539                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1540  001B12  010E               	movlb	14	; () banked
  1541  001B14  87DA               	bsf	218,3,b	;volatile
  1542                           
  1543                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1544  001B16  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1545  001B1A                     
  1546                           ;i2c.c: 57:   tmp = SSP2BUF;
  1547  001B1A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1548                           
  1549                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1550  001B1E  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1551  001B22                     
  1552                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1553  001B22  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1554  001B24  B4D8               	btfsc	status,2,c
  1555  001B26  EF97  F00D         	goto	u1081
  1556  001B2A  EF9B  F00D         	goto	u1080
  1557  001B2E                     u1081:
  1558  001B2E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1559  001B30  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1560  001B32  EF9C  F00D         	goto	u1098
  1561  001B36                     u1080:
  1562  001B36  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1563  001B38                     u1098:
  1564  001B38  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1565  001B3A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1566  001B3C  010E               	movlb	14	; () banked
  1567  001B3E  51DA               	movf	218,w,b	;volatile
  1568  001B40  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1569  001B42  0BDF               	andlw	-33
  1570  001B44  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1571  001B46  6FDA               	movwf	218,b	;volatile
  1572  001B48                     
  1573                           ; BSR set to: 14
  1574                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1575  001B48  89DA               	bsf	218,4,b	;volatile
  1576  001B4A                     
  1577                           ; BSR set to: 14
  1578                           ;i2c.c: 61:   return tmp;
  1579  001B4A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1580  001B4C                     
  1581                           ; BSR set to: 14
  1582  001B4C  0012               	return		;funcret
  1583  001B4E                     __end_of_I2C_2_Master_Read:
  1584                           	callstack 0
  1585                           
  1586 ;; *************** function _color_display *****************
  1587 ;; Defined at:
  1588 ;;		line 133 in file "color.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  m               2   87[COMRAM] PTR struct color_rgb
  1591 ;;		 -> main@rgb(4), 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  buf           100   25[BANK0 ] unsigned char [100]
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1604 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Totals:         6     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;Total ram usage:      106 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 8
  1610 ;; This function calls:
  1611 ;;		_sendStringSerial4
  1612 ;;		_sprintf
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text11
  1619  0017CC                     __ptext11:
  1620                           	callstack 0
  1621  0017CC                     _color_display:
  1622                           	callstack 22
  1623  0017CC                     
  1624                           ;color.c: 133: void color_display(struct color_rgb *m);color.c: 134: {;color.c: 135:    
      +                           char buf[100];;color.c: 136:     sprintf(buf,"\t%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, 
      +                          m->C);
  1625  0017CC  0E79               	movlw	low color_display@buf
  1626  0017CE  0100               	movlb	0	; () banked
  1627  0017D0  6F60               	movwf	sprintf@s& (0+255),b
  1628  0017D2  0E00               	movlw	high color_display@buf
  1629  0017D4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1630  0017D6  0E01               	movlw	low STR_1
  1631  0017D8  6F62               	movwf	sprintf@fmt& (0+255),b
  1632  0017DA  0E0E               	movlw	high STR_1
  1633  0017DC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1634  0017DE  C058  FFD9         	movff	color_display@m,fsr2l
  1635  0017E2  C059  FFDA         	movff	color_display@m+1,fsr2h
  1636  0017E6  50DF               	movf	indf2,w,c
  1637  0017E8  6E5A               	movwf	??_color_display^0,c
  1638  0017EA  505A               	movf	??_color_display^0,w,c
  1639  0017EC  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1640  0017EE  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1641  0017F0  EE20 F001          	lfsr	2,1
  1642  0017F4  5058               	movf	color_display@m^0,w,c
  1643  0017F6  26D9               	addwf	fsr2l,f,c
  1644  0017F8  5059               	movf	(color_display@m+1)^0,w,c
  1645  0017FA  22DA               	addwfc	fsr2h,f,c
  1646  0017FC  50DF               	movf	indf2,w,c
  1647  0017FE  6E5B               	movwf	(??_color_display+1)^0,c
  1648  001800  505B               	movf	(??_color_display+1)^0,w,c
  1649  001802  6F66               	movwf	(?_sprintf+6)& (0+255),b
  1650  001804  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1651  001806  EE20 F002          	lfsr	2,2
  1652  00180A  5058               	movf	color_display@m^0,w,c
  1653  00180C  26D9               	addwf	fsr2l,f,c
  1654  00180E  5059               	movf	(color_display@m+1)^0,w,c
  1655  001810  22DA               	addwfc	fsr2h,f,c
  1656  001812  50DF               	movf	indf2,w,c
  1657  001814  6E5C               	movwf	(??_color_display+2)^0,c
  1658  001816  505C               	movf	(??_color_display+2)^0,w,c
  1659  001818  6F68               	movwf	(?_sprintf+8)& (0+255),b
  1660  00181A  6B69               	clrf	(?_sprintf+9)& (0+255),b
  1661  00181C  EE20 F003          	lfsr	2,3
  1662  001820  5058               	movf	color_display@m^0,w,c
  1663  001822  26D9               	addwf	fsr2l,f,c
  1664  001824  5059               	movf	(color_display@m+1)^0,w,c
  1665  001826  22DA               	addwfc	fsr2h,f,c
  1666  001828  50DF               	movf	indf2,w,c
  1667  00182A  6E5D               	movwf	(??_color_display+3)^0,c
  1668  00182C  505D               	movf	(??_color_display+3)^0,w,c
  1669  00182E  6F6A               	movwf	(?_sprintf+10)& (0+255),b
  1670  001830  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1671  001832  EC53  F00C         	call	_sprintf	;wreg free
  1672  001836                     
  1673                           ;color.c: 137:     sendStringSerial4(buf);
  1674  001836  0E79               	movlw	low color_display@buf
  1675  001838  6E02               	movwf	sendStringSerial4@string^0,c
  1676  00183A  0E00               	movlw	high color_display@buf
  1677  00183C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1678  00183E  ECFC  F00D         	call	_sendStringSerial4	;wreg free
  1679  001842  0012               	return		;funcret
  1680  001844                     __end_of_color_display:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _sprintf *****************
  1684 ;; Defined at:
  1685 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1688 ;;		 -> color_display@buf(100), 
  1689 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1690 ;;		 -> STR_1(15), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1693 ;;  ap              2   12[BANK0 ] PTR void [1]
  1694 ;;		 -> ?_sprintf(2), 
  1695 ;;  ret             2    0        int 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    0[BANK0 ] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1705 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1706 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1708 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1709 ;;Total ram usage:       25 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 7
  1712 ;; This function calls:
  1713 ;;		_vfprintf
  1714 ;; This function is called by:
  1715 ;;		_color_display
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text12
  1720  0018A6                     __ptext12:
  1721                           	callstack 0
  1722  0018A6                     _sprintf:
  1723                           	callstack 22
  1724  0018A6  0E64               	movlw	low (?_sprintf+4)
  1725  0018A8  0100               	movlb	0	; () banked
  1726  0018AA  6F6C               	movwf	sprintf@ap& (0+255),b
  1727  0018AC  0E00               	movlw	high (?_sprintf+4)
  1728  0018AE  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1729  0018B0  C060  F06E         	movff	sprintf@s,sprintf@f
  1730  0018B4  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1731  0018B8                     
  1732                           ; BSR set to: 0
  1733  0018B8  0E00               	movlw	0
  1734  0018BA  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1735  0018BC  0E00               	movlw	0
  1736  0018BE  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1737  0018C0                     
  1738                           ; BSR set to: 0
  1739  0018C0  0E00               	movlw	0
  1740  0018C2  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1741  0018C4  0E00               	movlw	0
  1742  0018C6  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1743  0018C8                     
  1744                           ; BSR set to: 0
  1745  0018C8  0E6E               	movlw	low sprintf@f
  1746  0018CA  6E50               	movwf	vfprintf@fp^0,c
  1747  0018CC  0E00               	movlw	high sprintf@f
  1748  0018CE  6E51               	movwf	(vfprintf@fp+1)^0,c
  1749  0018D0  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  1750  0018D4  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1751  0018D8  0E6C               	movlw	low sprintf@ap
  1752  0018DA  6E54               	movwf	vfprintf@ap^0,c
  1753  0018DC  0E00               	movlw	high sprintf@ap
  1754  0018DE  6E55               	movwf	(vfprintf@ap+1)^0,c
  1755  0018E0  EC22  F00C         	call	_vfprintf	;wreg free
  1756  0018E4  0100               	movlb	0	; () banked
  1757  0018E6  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1758  0018E8  2560               	addwf	sprintf@s& (0+255),w,b
  1759  0018EA  6ED9               	movwf	fsr2l,c
  1760  0018EC  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1761  0018EE  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1762  0018F0  6EDA               	movwf	fsr2h,c
  1763  0018F2  0E00               	movlw	0
  1764  0018F4  6EDF               	movwf	indf2,c
  1765  0018F6                     
  1766                           ; BSR set to: 0
  1767  0018F6  0012               	return		;funcret
  1768  0018F8                     __end_of_sprintf:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _vfprintf *****************
  1772 ;; Defined at:
  1773 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1776 ;;		 -> sprintf@f(11), 
  1777 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1778 ;;		 -> STR_1(15), 
  1779 ;;  ap              2   83[COMRAM] PTR PTR void 
  1780 ;;		 -> sprintf@ap(2), 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1783 ;;		 -> STR_1(15), 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  2   79[COMRAM] int 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1793 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;Total ram usage:        8 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 6
  1800 ;; This function calls:
  1801 ;;		_vfpfcnvrt
  1802 ;; This function is called by:
  1803 ;;		_sprintf
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text13
  1808  001844                     __ptext13:
  1809                           	callstack 0
  1810  001844                     _vfprintf:
  1811                           	callstack 22
  1812  001844                     
  1813                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1814  001844  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1815  001848  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1816  00184C                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1818  00184C  0E00               	movlw	0
  1819  00184E  0100               	movlb	0	; () banked
  1820  001850  6FF4               	movwf	(_nout+1)& (0+255),b
  1821  001852  0E00               	movlw	0
  1822  001854  6FF3               	movwf	_nout& (0+255),b
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1825  001856  EF40  F00C         	goto	l2003
  1826  00185A                     l2001:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1830  00185A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1831  00185E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1832  001862  0E56               	movlw	low vfprintf@cfmt
  1833  001864  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1834  001866  0E00               	movlw	high vfprintf@cfmt
  1835  001868  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1836  00186A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1837  00186E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1838  001872  EC7B  F008         	call	_vfpfcnvrt	;wreg free
  1839  001876  5040               	movf	?_vfpfcnvrt^0,w,c
  1840  001878  0100               	movlb	0	; () banked
  1841  00187A  27F3               	addwf	_nout& (0+255),f,b
  1842  00187C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1843  00187E  23F4               	addwfc	(_nout+1)& (0+255),f,b
  1844  001880                     l2003:
  1845                           
  1846                           ; BSR set to: 0
  1847                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1848  001880  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1849  001884  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1850  001888                     	if	0	;tblptru may be non-zero
  1851  001888                     	endif
  1852  001888                     	if	0	;tblptru may be non-zero
  1853  001888                     	endif
  1854  001888  0008               	tblrd		*
  1855  00188A  50F5               	movf	tablat,w,c
  1856  00188C  0900               	iorlw	0
  1857  00188E  A4D8               	btfss	status,2,c
  1858  001890  EF4C  F00C         	goto	u1151
  1859  001894  EF4E  F00C         	goto	u1150
  1860  001898                     u1151:
  1861  001898  EF2D  F00C         	goto	l2001
  1862  00189C                     u1150:
  1863  00189C                     
  1864                           ; BSR set to: 0
  1865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1866  00189C  C0F3  F050         	movff	_nout,?_vfprintf
  1867  0018A0  C0F4  F051         	movff	_nout+1,?_vfprintf+1
  1868  0018A4                     
  1869                           ; BSR set to: 0
  1870  0018A4  0012               	return		;funcret
  1871  0018A6                     __end_of_vfprintf:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function _vfpfcnvrt *****************
  1875 ;; Defined at:
  1876 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1879 ;;		 -> sprintf@f(11), 
  1880 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1881 ;;		 -> vfprintf@cfmt(2), 
  1882 ;;  ap              2   67[COMRAM] PTR PTR void 
  1883 ;;		 -> sprintf@ap(2), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  ll              8   71[COMRAM] long long 
  1886 ;;  llu             8    0        unsigned long long 
  1887 ;;  f               4    0        unsigned long long 
  1888 ;;  vp              3    0        PTR void 
  1889 ;;  ct              3    0        unsigned char [3]
  1890 ;;  cp              3    0        PTR unsigned char 
  1891 ;;  i               2    0        int 
  1892 ;;  done            2    0        int 
  1893 ;;  c               1    0        unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  2   63[COMRAM] int 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1903 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1904 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1906 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1907 ;;Total ram usage:       16 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 5
  1910 ;; This function calls:
  1911 ;;		_dtoa
  1912 ;;		_fputc
  1913 ;; This function is called by:
  1914 ;;		_vfprintf
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text14
  1919  0010F6                     __ptext14:
  1920                           	callstack 0
  1921  0010F6                     _vfpfcnvrt:
  1922                           	callstack 22
  1923  0010F6                     
  1924                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1925  0010F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1926  0010FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1927  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  1928  001102  CFDD FFF7          	movff	postdec2,tblptrh
  1929  001106                     	if	0	;tblptru may be non-zero
  1930  001106                     	endif
  1931  001106                     	if	0	;tblptru may be non-zero
  1932  001106                     	endif
  1933  001106  0008               	tblrd		*
  1934  001108  50F5               	movf	tablat,w,c
  1935  00110A  0A25               	xorlw	37
  1936  00110C  A4D8               	btfss	status,2,c
  1937  00110E  EF8B  F008         	goto	u1101
  1938  001112  EF8D  F008         	goto	u1100
  1939  001116                     u1101:
  1940  001116  EF39  F009         	goto	l1961
  1941  00111A                     u1100:
  1942  00111A                     
  1943                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1944  00111A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1945  00111E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1946  001122  2ADE               	incf	postinc2,f,c
  1947  001124  0E00               	movlw	0
  1948  001126  22DD               	addwfc	postdec2,f,c
  1949  001128                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1951  001128  0E00               	movlw	0
  1952  00112A  0100               	movlb	0	; () banked
  1953  00112C  6FF6               	movwf	(_width+1)& (0+255),b
  1954  00112E  0E00               	movlw	0
  1955  001130  6FF5               	movwf	_width& (0+255),b
  1956  001132  C0F5  F0F9         	movff	_width,_flags
  1957  001136  C0F6  F0FA         	movff	_width+1,_flags+1
  1958  00113A                     
  1959                           ; BSR set to: 0
  1960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1961  00113A  69F7               	setf	_prec& (0+255),b
  1962  00113C  69F8               	setf	(_prec+1)& (0+255),b
  1963  00113E                     
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1966  00113E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  001142  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  001146  CFDE FFF6          	movff	postinc2,tblptrl
  1969  00114A  CFDD FFF7          	movff	postdec2,tblptrh
  1970  00114E                     	if	0	;tblptru may be non-zero
  1971  00114E                     	endif
  1972  00114E                     	if	0	;tblptru may be non-zero
  1973  00114E                     	endif
  1974  00114E  0008               	tblrd		*
  1975  001150  50F5               	movf	tablat,w,c
  1976  001152  0A64               	xorlw	100
  1977  001154  B4D8               	btfsc	status,2,c
  1978  001156  EFAF  F008         	goto	u1111
  1979  00115A  EFB1  F008         	goto	u1110
  1980  00115E                     u1111:
  1981  00115E  EFC3  F008         	goto	l1939
  1982  001162                     u1110:
  1983  001162                     
  1984                           ; BSR set to: 0
  1985  001162  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1986  001166  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1987  00116A  CFDE FFF6          	movff	postinc2,tblptrl
  1988  00116E  CFDD FFF7          	movff	postdec2,tblptrh
  1989  001172                     	if	0	;tblptru may be non-zero
  1990  001172                     	endif
  1991  001172                     	if	0	;tblptru may be non-zero
  1992  001172                     	endif
  1993  001172  0008               	tblrd		*
  1994  001174  50F5               	movf	tablat,w,c
  1995  001176  0A69               	xorlw	105
  1996  001178  A4D8               	btfss	status,2,c
  1997  00117A  EFC1  F008         	goto	u1121
  1998  00117E  EFC3  F008         	goto	u1120
  1999  001182                     u1121:
  2000  001182  EF03  F009         	goto	l1945
  2001  001186                     u1120:
  2002  001186                     l1939:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2006  001186  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2007  00118A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2008  00118E  2ADE               	incf	postinc2,f,c
  2009  001190  0E00               	movlw	0
  2010  001192  22DD               	addwfc	postdec2,f,c
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2013  001194  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2014  001198  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2015  00119C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2016  0011A0  0E02               	movlw	2
  2017  0011A2  26DE               	addwf	postinc2,f,c
  2018  0011A4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2019  0011A8  0E00               	movlw	0
  2020  0011AA  22DD               	addwfc	postdec2,f,c
  2021  0011AC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2022  0011B0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2023  0011B4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2024  0011B8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2025  0011BC  0E00               	movlw	0
  2026  0011BE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2027  0011C0  0EFF               	movlw	-1
  2028  0011C2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2029  0011C4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2030  0011C6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2031  0011C8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2032  0011CA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2033  0011CC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2034  0011CE                     
  2035                           ; BSR set to: 0
  2036                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2037  0011CE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2038  0011D2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2039  0011D6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2040  0011DA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2041  0011DE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2042  0011E2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2043  0011E6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2044  0011EA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2045  0011EE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2046  0011F2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2047  0011F6  EC09  F007         	call	_dtoa	;wreg free
  2048  0011FA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2049  0011FE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2050  001202  EF54  F009         	goto	l1084
  2051  001206                     l1945:
  2052                           
  2053                           ; BSR set to: 0
  2054                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2055  001206  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2056  00120A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2057  00120E  CFDE FFF6          	movff	postinc2,tblptrl
  2058  001212  CFDD FFF7          	movff	postdec2,tblptrh
  2059  001216                     	if	0	;tblptru may be non-zero
  2060  001216                     	endif
  2061  001216                     	if	0	;tblptru may be non-zero
  2062  001216                     	endif
  2063  001216  0008               	tblrd		*
  2064  001218  50F5               	movf	tablat,w,c
  2065  00121A  0A25               	xorlw	37
  2066  00121C  A4D8               	btfss	status,2,c
  2067  00121E  EF13  F009         	goto	u1131
  2068  001222  EF15  F009         	goto	u1130
  2069  001226                     u1131:
  2070  001226  EF2C  F009         	goto	l1955
  2071  00122A                     u1130:
  2072  00122A                     
  2073                           ; BSR set to: 0
  2074                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2075  00122A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2076  00122E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2077  001232  2ADE               	incf	postinc2,f,c
  2078  001234  0E00               	movlw	0
  2079  001236  22DD               	addwfc	postdec2,f,c
  2080  001238                     
  2081                           ; BSR set to: 0
  2082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2083  001238  0E00               	movlw	0
  2084  00123A  6E02               	movwf	(fputc@c+1)^0,c
  2085  00123C  0E25               	movlw	37
  2086  00123E  6E01               	movwf	fputc@c^0,c
  2087  001240  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2088  001244  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2089  001248  ECCB  F00A         	call	_fputc	;wreg free
  2090  00124C                     l1951:
  2091                           
  2092                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2093  00124C  0E00               	movlw	0
  2094  00124E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2095  001250  0E01               	movlw	1
  2096  001252  6E40               	movwf	?_vfpfcnvrt^0,c
  2097  001254  EF54  F009         	goto	l1084
  2098  001258                     l1955:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2102  001258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2103  00125C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2104  001260  2ADE               	incf	postinc2,f,c
  2105  001262  0E00               	movlw	0
  2106  001264  22DD               	addwfc	postdec2,f,c
  2107  001266                     
  2108                           ; BSR set to: 0
  2109                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2110  001266  0E00               	movlw	0
  2111  001268  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2112  00126A  0E00               	movlw	0
  2113  00126C  6E40               	movwf	?_vfpfcnvrt^0,c
  2114  00126E  EF54  F009         	goto	l1084
  2115  001272                     l1961:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2118  001272  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2119  001276  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2120  00127A  CFDE FFF6          	movff	postinc2,tblptrl
  2121  00127E  CFDD FFF7          	movff	postdec2,tblptrh
  2122  001282                     	if	0	;tblptru may be non-zero
  2123  001282                     	endif
  2124  001282                     	if	0	;tblptru may be non-zero
  2125  001282                     	endif
  2126  001282  0008               	tblrd		*
  2127  001284  50F5               	movf	tablat,w,c
  2128  001286  6E01               	movwf	fputc@c^0,c
  2129  001288  6A02               	clrf	(fputc@c+1)^0,c
  2130  00128A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2131  00128E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2132  001292  ECCB  F00A         	call	_fputc	;wreg free
  2133  001296                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2135  001296  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2136  00129A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2137  00129E  2ADE               	incf	postinc2,f,c
  2138  0012A0  0E00               	movlw	0
  2139  0012A2  22DD               	addwfc	postdec2,f,c
  2140  0012A4  EF26  F009         	goto	l1951
  2141  0012A8                     l1084:
  2142  0012A8  0012               	return		;funcret
  2143  0012AA                     __end_of_vfpfcnvrt:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _dtoa *****************
  2147 ;; Defined at:
  2148 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2151 ;;		 -> sprintf@f(11), 
  2152 ;;  d               8   29[COMRAM] long long 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  n               8   53[COMRAM] long long 
  2155 ;;  i               2   61[COMRAM] int 
  2156 ;;  s               2   51[COMRAM] int 
  2157 ;;  w               2   49[COMRAM] int 
  2158 ;;  p               2   47[COMRAM] int 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  2   27[COMRAM] int 
  2161 ;; Registers used:
  2162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2168 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;Total ram usage:       36 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; Hardware stack levels required when called: 4
  2175 ;; This function calls:
  2176 ;;		___aodiv
  2177 ;;		___aomod
  2178 ;;		_abs
  2179 ;;		_pad
  2180 ;; This function is called by:
  2181 ;;		_vfpfcnvrt
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text15
  2186  000E12                     __ptext15:
  2187                           	callstack 0
  2188  000E12                     _dtoa:
  2189                           	callstack 22
  2190  000E12                     
  2191                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2192  000E12  C01E  F036         	movff	dtoa@d,dtoa@n
  2193  000E16  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2194  000E1A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2195  000E1E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2196  000E22  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2197  000E26  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2198  000E2A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2199  000E2E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2200  000E32                     
  2201                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2202  000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2203  000E34  EF1E  F007         	goto	u931
  2204  000E38  EF21  F007         	goto	u930
  2205  000E3C                     u931:
  2206  000E3C  0E01               	movlw	1
  2207  000E3E  EF22  F007         	goto	u940
  2208  000E42                     u930:
  2209  000E42  0E00               	movlw	0
  2210  000E44                     u940:
  2211  000E44  6E34               	movwf	dtoa@s^0,c
  2212  000E46  6A35               	clrf	(dtoa@s+1)^0,c
  2213                           
  2214                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2215  000E48  5034               	movf	dtoa@s^0,w,c
  2216  000E4A  1035               	iorwf	(dtoa@s+1)^0,w,c
  2217  000E4C  B4D8               	btfsc	status,2,c
  2218  000E4E  EF2B  F007         	goto	u951
  2219  000E52  EF2D  F007         	goto	u950
  2220  000E56                     u951:
  2221  000E56  EF3D  F007         	goto	l1841
  2222  000E5A                     u950:
  2223  000E5A                     
  2224                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2225  000E5A  1E3D               	comf	(dtoa@n+7)^0,f,c
  2226  000E5C  1E3C               	comf	(dtoa@n+6)^0,f,c
  2227  000E5E  1E3B               	comf	(dtoa@n+5)^0,f,c
  2228  000E60  1E3A               	comf	(dtoa@n+4)^0,f,c
  2229  000E62  1E39               	comf	(dtoa@n+3)^0,f,c
  2230  000E64  1E38               	comf	(dtoa@n+2)^0,f,c
  2231  000E66  1E37               	comf	(dtoa@n+1)^0,f,c
  2232  000E68  6C36               	negf	dtoa@n^0,c
  2233  000E6A  0E00               	movlw	0
  2234  000E6C  2237               	addwfc	(dtoa@n+1)^0,f,c
  2235  000E6E  2238               	addwfc	(dtoa@n+2)^0,f,c
  2236  000E70  2239               	addwfc	(dtoa@n+3)^0,f,c
  2237  000E72  223A               	addwfc	(dtoa@n+4)^0,f,c
  2238  000E74  223B               	addwfc	(dtoa@n+5)^0,f,c
  2239  000E76  223C               	addwfc	(dtoa@n+6)^0,f,c
  2240  000E78  223D               	addwfc	(dtoa@n+7)^0,f,c
  2241  000E7A                     l1841:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2244  000E7A  0100               	movlb	0	; () banked
  2245  000E7C  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2246  000E7E  EF43  F007         	goto	u961
  2247  000E82  EF45  F007         	goto	u960
  2248  000E86                     u961:
  2249  000E86  EF46  F007         	goto	l1845
  2250  000E8A                     u960:
  2251  000E8A                     
  2252                           ; BSR set to: 0
  2253                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2254  000E8A  93F9               	bcf	_flags& (0+255),1,b
  2255  000E8C                     l1845:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2259  000E8C  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2260  000E8E  EF53  F007         	goto	u970
  2261  000E92  51F8               	movf	(_prec+1)& (0+255),w,b
  2262  000E94  E106               	bnz	u971
  2263  000E96  05F7               	decf	_prec& (0+255),w,b
  2264  000E98  B0D8               	btfsc	status,0,c
  2265  000E9A  EF51  F007         	goto	u971
  2266  000E9E  EF53  F007         	goto	u970
  2267  000EA2                     u971:
  2268  000EA2  EF59  F007         	goto	l1057
  2269  000EA6                     u970:
  2270  000EA6                     
  2271                           ; BSR set to: 0
  2272  000EA6  0E00               	movlw	0
  2273  000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  2274  000EAA  0E01               	movlw	1
  2275  000EAC  6E30               	movwf	dtoa@p^0,c
  2276  000EAE  EF5D  F007         	goto	l1059
  2277  000EB2                     l1057:
  2278                           
  2279                           ; BSR set to: 0
  2280  000EB2  C0F7  F030         	movff	_prec,dtoa@p
  2281  000EB6  C0F8  F031         	movff	_prec+1,dtoa@p+1
  2282  000EBA                     l1059:
  2283                           
  2284                           ; BSR set to: 0
  2285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2286  000EBA  C0F5  F032         	movff	_width,dtoa@w
  2287  000EBE  C0F6  F033         	movff	_width+1,dtoa@w+1
  2288  000EC2                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2291  000EC2  5034               	movf	dtoa@s^0,w,c
  2292  000EC4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2293  000EC6  A4D8               	btfss	status,2,c
  2294  000EC8  EF68  F007         	goto	u981
  2295  000ECC  EF6A  F007         	goto	u980
  2296  000ED0                     u981:
  2297  000ED0  EF71  F007         	goto	l1853
  2298  000ED4                     u980:
  2299  000ED4                     
  2300                           ; BSR set to: 0
  2301  000ED4  A5F9               	btfss	_flags& (0+255),2,b
  2302  000ED6  EF6F  F007         	goto	u991
  2303  000EDA  EF71  F007         	goto	u990
  2304  000EDE                     u991:
  2305  000EDE  EF74  F007         	goto	l1855
  2306  000EE2                     u990:
  2307  000EE2                     l1853:
  2308                           
  2309                           ; BSR set to: 0
  2310                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  2311  000EE2  0632               	decf	dtoa@w^0,f,c
  2312  000EE4  A0D8               	btfss	status,0,c
  2313  000EE6  0633               	decf	(dtoa@w+1)^0,f,c
  2314  000EE8                     l1855:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2318  000EE8  0E00               	movlw	0
  2319  000EEA  6E3F               	movwf	(dtoa@i+1)^0,c
  2320  000EEC  0E1F               	movlw	31
  2321  000EEE  6E3E               	movwf	dtoa@i^0,c
  2322  000EF0                     
  2323                           ; BSR set to: 0
  2324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2325  000EF0  0E00               	movlw	0
  2326  000EF2  0101               	movlb	1	; () banked
  2327  000EF4  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2330  000EF6  EFF9  F007         	goto	l1869
  2331  000EFA                     l1859:
  2332                           
  2333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  2334  000EFA  063E               	decf	dtoa@i^0,f,c
  2335  000EFC  A0D8               	btfss	status,0,c
  2336  000EFE  063F               	decf	(dtoa@i+1)^0,f,c
  2337  000F00                     
  2338                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2339  000F00  0E50               	movlw	low _dbuf
  2340  000F02  243E               	addwf	dtoa@i^0,w,c
  2341  000F04  6ED9               	movwf	fsr2l,c
  2342  000F06  0E01               	movlw	high _dbuf
  2343  000F08  203F               	addwfc	(dtoa@i+1)^0,w,c
  2344  000F0A  6EDA               	movwf	fsr2h,c
  2345  000F0C  C036  F001         	movff	dtoa@n,___aomod@dividend
  2346  000F10  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2347  000F14  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2348  000F18  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2349  000F1C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2350  000F20  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2351  000F24  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2352  000F28  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2353  000F2C  0E0A               	movlw	10
  2354  000F2E  6E09               	movwf	___aomod@divisor^0,c
  2355  000F30  0E00               	movlw	0
  2356  000F32  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2357  000F34  0E00               	movlw	0
  2358  000F36  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2359  000F38  0E00               	movlw	0
  2360  000F3A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2361  000F3C  0E00               	movlw	0
  2362  000F3E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2363  000F40  0E00               	movlw	0
  2364  000F42  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2365  000F44  0E00               	movlw	0
  2366  000F46  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2367  000F48  0E00               	movlw	0
  2368  000F4A  6E10               	movwf	(___aomod@divisor+7)^0,c
  2369  000F4C  EC19  F00A         	call	___aomod	;wreg free
  2370  000F50  C001  F026         	movff	?___aomod,??_dtoa
  2371  000F54  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2372  000F58  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2373  000F5C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2374  000F60  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2375  000F64  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2376  000F68  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2377  000F6C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2378  000F70  C026  F013         	movff	??_dtoa,abs@a
  2379  000F74  C028  F014         	movff	??_dtoa+2,abs@a+1
  2380  000F78  ECA7  F00D         	call	_abs	;wreg free
  2381  000F7C  5013               	movf	?_abs^0,w,c
  2382  000F7E  0F30               	addlw	48
  2383  000F80  6EDF               	movwf	indf2,c
  2384  000F82                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  2386  000F82  0630               	decf	dtoa@p^0,f,c
  2387  000F84  A0D8               	btfss	status,0,c
  2388  000F86  0631               	decf	(dtoa@p+1)^0,f,c
  2389  000F88                     
  2390                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  2391  000F88  0632               	decf	dtoa@w^0,f,c
  2392  000F8A  A0D8               	btfss	status,0,c
  2393  000F8C  0633               	decf	(dtoa@w+1)^0,f,c
  2394  000F8E                     
  2395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2396  000F8E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2397  000F92  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2398  000F96  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2399  000F9A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2400  000F9E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2401  000FA2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2402  000FA6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2403  000FAA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2404  000FAE  0E0A               	movlw	10
  2405  000FB0  6E09               	movwf	___aodiv@divisor^0,c
  2406  000FB2  0E00               	movlw	0
  2407  000FB4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2408  000FB6  0E00               	movlw	0
  2409  000FB8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2410  000FBA  0E00               	movlw	0
  2411  000FBC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2412  000FBE  0E00               	movlw	0
  2413  000FC0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2414  000FC2  0E00               	movlw	0
  2415  000FC4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2416  000FC6  0E00               	movlw	0
  2417  000FC8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2418  000FCA  0E00               	movlw	0
  2419  000FCC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2420  000FCE  EC55  F009         	call	___aodiv	;wreg free
  2421  000FD2  C001  F036         	movff	?___aodiv,dtoa@n
  2422  000FD6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2423  000FDA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2424  000FDE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2425  000FE2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2426  000FE6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2427  000FEA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2428  000FEE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2429  000FF2                     l1869:
  2430                           
  2431                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2432  000FF2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2433  000FF4  EF04  F008         	goto	u1001
  2434  000FF8  503F               	movf	(dtoa@i+1)^0,w,c
  2435  000FFA  E108               	bnz	u1000
  2436  000FFC  043E               	decf	dtoa@i^0,w,c
  2437  000FFE  A0D8               	btfss	status,0,c
  2438  001000  EF04  F008         	goto	u1001
  2439  001004  EF06  F008         	goto	u1000
  2440  001008                     u1001:
  2441  001008  EF37  F008         	goto	l1879
  2442  00100C                     u1000:
  2443  00100C  5036               	movf	dtoa@n^0,w,c
  2444  00100E  1037               	iorwf	(dtoa@n+1)^0,w,c
  2445  001010  1038               	iorwf	(dtoa@n+2)^0,w,c
  2446  001012  1039               	iorwf	(dtoa@n+3)^0,w,c
  2447  001014  103A               	iorwf	(dtoa@n+4)^0,w,c
  2448  001016  103B               	iorwf	(dtoa@n+5)^0,w,c
  2449  001018  103C               	iorwf	(dtoa@n+6)^0,w,c
  2450  00101A  103D               	iorwf	(dtoa@n+7)^0,w,c
  2451  00101C  A4D8               	btfss	status,2,c
  2452  00101E  EF13  F008         	goto	u1011
  2453  001022  EF15  F008         	goto	u1010
  2454  001026                     u1011:
  2455  001026  EF7D  F007         	goto	l1859
  2456  00102A                     u1010:
  2457  00102A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2458  00102C  EF22  F008         	goto	u1020
  2459  001030  5031               	movf	(dtoa@p+1)^0,w,c
  2460  001032  E106               	bnz	u1021
  2461  001034  0430               	decf	dtoa@p^0,w,c
  2462  001036  B0D8               	btfsc	status,0,c
  2463  001038  EF20  F008         	goto	u1021
  2464  00103C  EF22  F008         	goto	u1020
  2465  001040                     u1021:
  2466  001040  EF7D  F007         	goto	l1859
  2467  001044                     u1020:
  2468  001044  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2469  001046  EF2D  F008         	goto	u1031
  2470  00104A  5033               	movf	(dtoa@w+1)^0,w,c
  2471  00104C  E108               	bnz	u1030
  2472  00104E  0432               	decf	dtoa@w^0,w,c
  2473  001050  A0D8               	btfss	status,0,c
  2474  001052  EF2D  F008         	goto	u1031
  2475  001056  EF2F  F008         	goto	u1030
  2476  00105A                     u1031:
  2477  00105A  EF37  F008         	goto	l1879
  2478  00105E                     u1030:
  2479  00105E  0100               	movlb	0	; () banked
  2480  001060  B3F9               	btfsc	_flags& (0+255),1,b
  2481  001062  EF35  F008         	goto	u1041
  2482  001066  EF37  F008         	goto	u1040
  2483  00106A                     u1041:
  2484  00106A  EF7D  F007         	goto	l1859
  2485  00106E                     u1040:
  2486  00106E                     l1879:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2489  00106E  5034               	movf	dtoa@s^0,w,c
  2490  001070  1035               	iorwf	(dtoa@s+1)^0,w,c
  2491  001072  A4D8               	btfss	status,2,c
  2492  001074  EF3E  F008         	goto	u1051
  2493  001078  EF40  F008         	goto	u1050
  2494  00107C                     u1051:
  2495  00107C  EF48  F008         	goto	l1883
  2496  001080                     u1050:
  2497  001080  0100               	movlb	0	; () banked
  2498  001082  A5F9               	btfss	_flags& (0+255),2,b
  2499  001084  EF46  F008         	goto	u1061
  2500  001088  EF48  F008         	goto	u1060
  2501  00108C                     u1061:
  2502  00108C  EF66  F008         	goto	l1893
  2503  001090                     u1060:
  2504  001090                     l1883:
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  2507  001090  063E               	decf	dtoa@i^0,f,c
  2508  001092  A0D8               	btfss	status,0,c
  2509  001094  063F               	decf	(dtoa@i+1)^0,f,c
  2510  001096                     
  2511                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2512  001096  5034               	movf	dtoa@s^0,w,c
  2513  001098  1035               	iorwf	(dtoa@s+1)^0,w,c
  2514  00109A  A4D8               	btfss	status,2,c
  2515  00109C  EF52  F008         	goto	u1071
  2516  0010A0  EF54  F008         	goto	u1070
  2517  0010A4                     u1071:
  2518  0010A4  EF5A  F008         	goto	l1889
  2519  0010A8                     u1070:
  2520  0010A8  0E00               	movlw	0
  2521  0010AA  6E2F               	movwf	(_dtoa$1865+1)^0,c
  2522  0010AC  0E2B               	movlw	43
  2523  0010AE  6E2E               	movwf	_dtoa$1865^0,c
  2524  0010B0  EF5E  F008         	goto	l1891
  2525  0010B4                     l1889:
  2526  0010B4  0E00               	movlw	0
  2527  0010B6  6E2F               	movwf	(_dtoa$1865+1)^0,c
  2528  0010B8  0E2D               	movlw	45
  2529  0010BA  6E2E               	movwf	_dtoa$1865^0,c
  2530  0010BC                     l1891:
  2531  0010BC  0E50               	movlw	low _dbuf
  2532  0010BE  243E               	addwf	dtoa@i^0,w,c
  2533  0010C0  6ED9               	movwf	fsr2l,c
  2534  0010C2  0E01               	movlw	high _dbuf
  2535  0010C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  2536  0010C6  6EDA               	movwf	fsr2h,c
  2537  0010C8  C02E  FFDF         	movff	_dtoa$1865,indf2
  2538  0010CC                     l1893:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2541  0010CC  C01C  F011         	movff	dtoa@fp,pad@fp
  2542  0010D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2543  0010D4  0E50               	movlw	low _dbuf
  2544  0010D6  243E               	addwf	dtoa@i^0,w,c
  2545  0010D8  6E13               	movwf	pad@buf^0,c
  2546  0010DA  0E01               	movlw	high _dbuf
  2547  0010DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  2548  0010DE  6E14               	movwf	(pad@buf+1)^0,c
  2549  0010E0  C032  F015         	movff	dtoa@w,pad@p
  2550  0010E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  2551  0010E8  EC30  F00B         	call	_pad	;wreg free
  2552  0010EC  C011  F01C         	movff	?_pad,?_dtoa
  2553  0010F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2554  0010F4  0012               	return		;funcret
  2555  0010F6                     __end_of_dtoa:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _pad *****************
  2559 ;; Defined at:
  2560 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2563 ;;		 -> sprintf@f(11), 
  2564 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2565 ;;		 -> dbuf(32), 
  2566 ;;  p               2   20[COMRAM] int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  w               2   25[COMRAM] int 
  2569 ;;  i               2   23[COMRAM] int 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2   16[COMRAM] int 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2579 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;Total ram usage:       11 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 3
  2586 ;; This function calls:
  2587 ;;		_fputc
  2588 ;;		_fputs
  2589 ;;		_strlen
  2590 ;; This function is called by:
  2591 ;;		_dtoa
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text16
  2596  001660                     __ptext16:
  2597                           	callstack 0
  2598  001660                     _pad:
  2599                           	callstack 22
  2600  001660                     
  2601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2602  001660  0100               	movlb	0	; () banked
  2603  001662  A1F9               	btfss	_flags& (0+255),0,b
  2604  001664  EF36  F00B         	goto	u861
  2605  001668  EF38  F00B         	goto	u860
  2606  00166C                     u861:
  2607  00166C  EF42  F00B         	goto	l1809
  2608  001670                     u860:
  2609  001670                     
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2612  001670  C013  F00A         	movff	pad@buf,fputs@s
  2613  001674  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2614  001678  C011  F00C         	movff	pad@fp,fputs@fp
  2615  00167C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2616  001680  EC43  F00D         	call	_fputs	;wreg free
  2617  001684                     l1809:
  2618                           
  2619                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2620  001684  BE16               	btfsc	(pad@p+1)^0,7,c
  2621  001686  EF47  F00B         	goto	u871
  2622  00168A  EF49  F00B         	goto	u870
  2623  00168E                     u871:
  2624  00168E  EF4F  F00B         	goto	l1813
  2625  001692                     u870:
  2626  001692  C015  F01A         	movff	pad@p,pad@w
  2627  001696  C016  F01B         	movff	pad@p+1,pad@w+1
  2628  00169A  EF53  F00B         	goto	l1046
  2629  00169E                     l1813:
  2630  00169E  0E00               	movlw	0
  2631  0016A0  6E1B               	movwf	(pad@w+1)^0,c
  2632  0016A2  0E00               	movlw	0
  2633  0016A4  6E1A               	movwf	pad@w^0,c
  2634  0016A6                     l1046:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2637  0016A6  0E00               	movlw	0
  2638  0016A8  6E19               	movwf	(pad@i+1)^0,c
  2639  0016AA  0E00               	movlw	0
  2640  0016AC  6E18               	movwf	pad@i^0,c
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2643  0016AE  EF65  F00B         	goto	l1819
  2644  0016B2                     l1815:
  2645                           
  2646                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2647  0016B2  0E00               	movlw	0
  2648  0016B4  6E02               	movwf	(fputc@c+1)^0,c
  2649  0016B6  0E20               	movlw	32
  2650  0016B8  6E01               	movwf	fputc@c^0,c
  2651  0016BA  C011  F003         	movff	pad@fp,fputc@fp
  2652  0016BE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2653  0016C2  ECCB  F00A         	call	_fputc	;wreg free
  2654  0016C6                     
  2655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2656  0016C6  4A18               	infsnz	pad@i^0,f,c
  2657  0016C8  2A19               	incf	(pad@i+1)^0,f,c
  2658  0016CA                     l1819:
  2659                           
  2660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2661  0016CA  501A               	movf	pad@w^0,w,c
  2662  0016CC  5C18               	subwf	pad@i^0,w,c
  2663  0016CE  5019               	movf	(pad@i+1)^0,w,c
  2664  0016D0  0A80               	xorlw	128
  2665  0016D2  6E17               	movwf	??_pad^0,c
  2666  0016D4  501B               	movf	(pad@w+1)^0,w,c
  2667  0016D6  0A80               	xorlw	128
  2668  0016D8  5817               	subwfb	??_pad^0,w,c
  2669  0016DA  A0D8               	btfss	status,0,c
  2670  0016DC  EF72  F00B         	goto	u881
  2671  0016E0  EF74  F00B         	goto	u880
  2672  0016E4                     u881:
  2673  0016E4  EF59  F00B         	goto	l1815
  2674  0016E8                     u880:
  2675  0016E8                     
  2676                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2677  0016E8  0100               	movlb	0	; () banked
  2678  0016EA  B1F9               	btfsc	_flags& (0+255),0,b
  2679  0016EC  EF7A  F00B         	goto	u891
  2680  0016F0  EF7C  F00B         	goto	u890
  2681  0016F4                     u891:
  2682  0016F4  EF86  F00B         	goto	l1823
  2683  0016F8                     u890:
  2684  0016F8                     
  2685                           ; BSR set to: 0
  2686                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2687  0016F8  C013  F00A         	movff	pad@buf,fputs@s
  2688  0016FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2689  001700  C011  F00C         	movff	pad@fp,fputs@fp
  2690  001704  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2691  001708  EC43  F00D         	call	_fputs	;wreg free
  2692  00170C                     l1823:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2695  00170C  C013  F001         	movff	pad@buf,strlen@s
  2696  001710  C014  F002         	movff	pad@buf+1,strlen@s+1
  2697  001714  ECC7  F00D         	call	_strlen	;wreg free
  2698  001718  501A               	movf	pad@w^0,w,c
  2699  00171A  2401               	addwf	?_strlen^0,w,c
  2700  00171C  6E11               	movwf	?_pad^0,c
  2701  00171E  501B               	movf	(pad@w+1)^0,w,c
  2702  001720  2002               	addwfc	(?_strlen+1)^0,w,c
  2703  001722  6E12               	movwf	(?_pad+1)^0,c
  2704  001724  0012               	return		;funcret
  2705  001726                     __end_of_pad:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _strlen *****************
  2709 ;; Defined at:
  2710 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2713 ;;		 -> dbuf(32), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2716 ;;		 -> dbuf(32), 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2    0[COMRAM] unsigned int 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2730 ;;Total ram usage:        4 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_pad
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text17
  2740  001B8E                     __ptext17:
  2741                           	callstack 0
  2742  001B8E                     _strlen:
  2743                           	callstack 24
  2744  001B8E  C001  F003         	movff	strlen@s,strlen@a
  2745  001B92  C002  F004         	movff	strlen@s+1,strlen@a+1
  2746  001B96  EFCF  F00D         	goto	l1719
  2747  001B9A                     l1717:
  2748  001B9A  4A01               	infsnz	strlen@s^0,f,c
  2749  001B9C  2A02               	incf	(strlen@s+1)^0,f,c
  2750  001B9E                     l1719:
  2751  001B9E  C001  FFD9         	movff	strlen@s,fsr2l
  2752  001BA2  C002  FFDA         	movff	strlen@s+1,fsr2h
  2753  001BA6  50DF               	movf	indf2,w,c
  2754  001BA8  A4D8               	btfss	status,2,c
  2755  001BAA  EFD9  F00D         	goto	u721
  2756  001BAE  EFDB  F00D         	goto	u720
  2757  001BB2                     u721:
  2758  001BB2  EFCD  F00D         	goto	l1717
  2759  001BB6                     u720:
  2760  001BB6  5003               	movf	strlen@a^0,w,c
  2761  001BB8  5C01               	subwf	strlen@s^0,w,c
  2762  001BBA  6E01               	movwf	?_strlen^0,c
  2763  001BBC  5004               	movf	(strlen@a+1)^0,w,c
  2764  001BBE  5802               	subwfb	(strlen@s+1)^0,w,c
  2765  001BC0  6E02               	movwf	(?_strlen+1)^0,c
  2766  001BC2  0012               	return		;funcret
  2767  001BC4                     __end_of_strlen:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _fputs *****************
  2771 ;; Defined at:
  2772 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2775 ;;		 -> dbuf(32), 
  2776 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2777 ;;		 -> sprintf@f(11), 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  i               2   14[COMRAM] int 
  2780 ;;  c               1   13[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  2    9[COMRAM] int 
  2783 ;; Registers used:
  2784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;Total ram usage:        7 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 2
  2797 ;; This function calls:
  2798 ;;		_fputc
  2799 ;; This function is called by:
  2800 ;;		_pad
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text18
  2805  001A86                     __ptext18:
  2806                           	callstack 0
  2807  001A86                     _fputs:
  2808                           	callstack 22
  2809  001A86  0E00               	movlw	0
  2810  001A88  6E10               	movwf	(fputs@i+1)^0,c
  2811  001A8A  0E00               	movlw	0
  2812  001A8C  6E0F               	movwf	fputs@i^0,c
  2813  001A8E  EF54  F00D         	goto	l1713
  2814  001A92                     l1709:
  2815  001A92  C00E  F001         	movff	fputs@c,fputc@c
  2816  001A96  6A02               	clrf	(fputc@c+1)^0,c
  2817  001A98  C00C  F003         	movff	fputs@fp,fputc@fp
  2818  001A9C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2819  001AA0  ECCB  F00A         	call	_fputc	;wreg free
  2820  001AA4  4A0F               	infsnz	fputs@i^0,f,c
  2821  001AA6  2A10               	incf	(fputs@i+1)^0,f,c
  2822  001AA8                     l1713:
  2823  001AA8  500F               	movf	fputs@i^0,w,c
  2824  001AAA  240A               	addwf	fputs@s^0,w,c
  2825  001AAC  6ED9               	movwf	fsr2l,c
  2826  001AAE  5010               	movf	(fputs@i+1)^0,w,c
  2827  001AB0  200B               	addwfc	(fputs@s+1)^0,w,c
  2828  001AB2  6EDA               	movwf	fsr2h,c
  2829  001AB4  50DF               	movf	indf2,w,c
  2830  001AB6  6E0E               	movwf	fputs@c^0,c
  2831  001AB8  500E               	movf	fputs@c^0,w,c
  2832  001ABA  A4D8               	btfss	status,2,c
  2833  001ABC  EF62  F00D         	goto	u711
  2834  001AC0  EF64  F00D         	goto	u710
  2835  001AC4                     u711:
  2836  001AC4  EF49  F00D         	goto	l1709
  2837  001AC8                     u710:
  2838  001AC8  0012               	return		;funcret
  2839  001ACA                     __end_of_fputs:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _fputc *****************
  2843 ;; Defined at:
  2844 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  c               2    0[COMRAM] int 
  2847 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2848 ;;		 -> sprintf@f(11), 
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  2    0[COMRAM] int 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;Total ram usage:        9 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 1
  2867 ;; This function calls:
  2868 ;;		_putch
  2869 ;; This function is called by:
  2870 ;;		_pad
  2871 ;;		_vfpfcnvrt
  2872 ;;		_fputs
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876                           	psect	text19
  2877  001596                     __ptext19:
  2878                           	callstack 0
  2879  001596                     _fputc:
  2880                           	callstack 25
  2881  001596  5003               	movf	fputc@fp^0,w,c
  2882  001598  1004               	iorwf	(fputc@fp+1)^0,w,c
  2883  00159A  B4D8               	btfsc	status,2,c
  2884  00159C  EFD2  F00A         	goto	u671
  2885  0015A0  EFD4  F00A         	goto	u670
  2886  0015A4                     u671:
  2887  0015A4  EFDD  F00A         	goto	l1697
  2888  0015A8                     u670:
  2889  0015A8  5003               	movf	fputc@fp^0,w,c
  2890  0015AA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2891  0015AC  A4D8               	btfss	status,2,c
  2892  0015AE  EFDB  F00A         	goto	u681
  2893  0015B2  EFDD  F00A         	goto	u680
  2894  0015B6                     u681:
  2895  0015B6  EFE2  F00A         	goto	l1699
  2896  0015BA                     u680:
  2897  0015BA                     l1697:
  2898  0015BA  5001               	movf	fputc@c^0,w,c
  2899  0015BC  ECA6  F00E         	call	_putch
  2900  0015C0  EF2F  F00B         	goto	l1110
  2901  0015C4                     l1699:
  2902  0015C4  EE20 F009          	lfsr	2,9
  2903  0015C8  5003               	movf	fputc@fp^0,w,c
  2904  0015CA  26D9               	addwf	fsr2l,f,c
  2905  0015CC  5004               	movf	(fputc@fp+1)^0,w,c
  2906  0015CE  22DA               	addwfc	fsr2h,f,c
  2907  0015D0  50DE               	movf	postinc2,w,c
  2908  0015D2  10DE               	iorwf	postinc2,w,c
  2909  0015D4  B4D8               	btfsc	status,2,c
  2910  0015D6  EFEF  F00A         	goto	u691
  2911  0015DA  EFF1  F00A         	goto	u690
  2912  0015DE                     u691:
  2913  0015DE  EF0C  F00B         	goto	l1703
  2914  0015E2                     u690:
  2915  0015E2  EE20 F009          	lfsr	2,9
  2916  0015E6  5003               	movf	fputc@fp^0,w,c
  2917  0015E8  26D9               	addwf	fsr2l,f,c
  2918  0015EA  5004               	movf	(fputc@fp+1)^0,w,c
  2919  0015EC  22DA               	addwfc	fsr2h,f,c
  2920  0015EE  EE10 F003          	lfsr	1,3
  2921  0015F2  5003               	movf	fputc@fp^0,w,c
  2922  0015F4  26E1               	addwf	fsr1l,f,c
  2923  0015F6  5004               	movf	(fputc@fp+1)^0,w,c
  2924  0015F8  22E2               	addwfc	fsr1h,f,c
  2925  0015FA  50DE               	movf	postinc2,w,c
  2926  0015FC  5CE6               	subwf	postinc1,w,c
  2927  0015FE  50E6               	movf	postinc1,w,c
  2928  001600  0A80               	xorlw	128
  2929  001602  6E09               	movwf	(??_fputc+4)^0,c
  2930  001604  50DE               	movf	postinc2,w,c
  2931  001606  0A80               	xorlw	128
  2932  001608  5809               	subwfb	(??_fputc+4)^0,w,c
  2933  00160A  B0D8               	btfsc	status,0,c
  2934  00160C  EF0A  F00B         	goto	u701
  2935  001610  EF0C  F00B         	goto	u700
  2936  001614                     u701:
  2937  001614  EF2F  F00B         	goto	l1110
  2938  001618                     u700:
  2939  001618                     l1703:
  2940  001618  EE20 F003          	lfsr	2,3
  2941  00161C  5003               	movf	fputc@fp^0,w,c
  2942  00161E  26D9               	addwf	fsr2l,f,c
  2943  001620  5004               	movf	(fputc@fp+1)^0,w,c
  2944  001622  22DA               	addwfc	fsr2h,f,c
  2945  001624  CFDE F005          	movff	postinc2,??_fputc
  2946  001628  CFDD F006          	movff	postdec2,??_fputc+1
  2947  00162C  C003  FFD9         	movff	fputc@fp,fsr2l
  2948  001630  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2949  001634  CFDE F007          	movff	postinc2,??_fputc+2
  2950  001638  CFDD F008          	movff	postdec2,??_fputc+3
  2951  00163C  5005               	movf	??_fputc^0,w,c
  2952  00163E  2407               	addwf	(??_fputc+2)^0,w,c
  2953  001640  6ED9               	movwf	fsr2l,c
  2954  001642  5006               	movf	(??_fputc+1)^0,w,c
  2955  001644  2008               	addwfc	(??_fputc+3)^0,w,c
  2956  001646  6EDA               	movwf	fsr2h,c
  2957  001648  C001  FFDF         	movff	fputc@c,indf2
  2958  00164C  EE20 F003          	lfsr	2,3
  2959  001650  5003               	movf	fputc@fp^0,w,c
  2960  001652  26D9               	addwf	fsr2l,f,c
  2961  001654  5004               	movf	(fputc@fp+1)^0,w,c
  2962  001656  22DA               	addwfc	fsr2h,f,c
  2963  001658  2ADE               	incf	postinc2,f,c
  2964  00165A  0E00               	movlw	0
  2965  00165C  22DD               	addwfc	postdec2,f,c
  2966  00165E                     l1110:
  2967  00165E  0012               	return		;funcret
  2968  001660                     __end_of_fputc:
  2969                           	callstack 0
  2970                           
  2971 ;; *************** function _putch *****************
  2972 ;; Defined at:
  2973 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  c               1    wreg     unsigned char 
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  c               1    0[COMRAM] unsigned char 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  1    wreg      void 
  2980 ;; Registers used:
  2981 ;;		wreg
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2991 ;;Total ram usage:        0 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; This function calls:
  2994 ;;		Nothing
  2995 ;; This function is called by:
  2996 ;;		_fputc
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text20
  3001  001D4C                     __ptext20:
  3002                           	callstack 0
  3003  001D4C                     _putch:
  3004                           	callstack 25
  3005  001D4C  0012               	return		;funcret
  3006  001D4E                     __end_of_putch:
  3007                           	callstack 0
  3008                           
  3009 ;; *************** function _abs *****************
  3010 ;; Defined at:
  3011 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  a               2   18[COMRAM] int 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  2   18[COMRAM] int 
  3018 ;; Registers used:
  3019 ;;		wreg, status,2, status,0
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;Total ram usage:        4 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_dtoa
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text21
  3039  001B4E                     __ptext21:
  3040                           	callstack 0
  3041  001B4E                     _abs:
  3042                           	callstack 25
  3043  001B4E  BE14               	btfsc	(abs@a+1)^0,7,c
  3044  001B50  EFB4  F00D         	goto	u900
  3045  001B54  5014               	movf	(abs@a+1)^0,w,c
  3046  001B56  E106               	bnz	u901
  3047  001B58  0413               	decf	abs@a^0,w,c
  3048  001B5A  B0D8               	btfsc	status,0,c
  3049  001B5C  EFB2  F00D         	goto	u901
  3050  001B60  EFB4  F00D         	goto	u900
  3051  001B64                     u901:
  3052  001B64  EFC2  F00D         	goto	l1095
  3053  001B68                     u900:
  3054  001B68  C013  F015         	movff	abs@a,??_abs
  3055  001B6C  C014  F016         	movff	abs@a+1,??_abs+1
  3056  001B70  1E15               	comf	??_abs^0,f,c
  3057  001B72  1E16               	comf	(??_abs+1)^0,f,c
  3058  001B74  4A15               	infsnz	??_abs^0,f,c
  3059  001B76  2A16               	incf	(??_abs+1)^0,f,c
  3060  001B78  C015  F013         	movff	??_abs,?_abs
  3061  001B7C  C016  F014         	movff	??_abs+1,?_abs+1
  3062  001B80  EFC6  F00D         	goto	l1098
  3063  001B84                     l1095:
  3064  001B84  C013  F013         	movff	abs@a,?_abs
  3065  001B88  C014  F014         	movff	abs@a+1,?_abs+1
  3066  001B8C                     l1098:
  3067  001B8C  0012               	return		;funcret
  3068  001B8E                     __end_of_abs:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function ___aomod *****************
  3072 ;; Defined at:
  3073 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  dividend        8    0[COMRAM] long long 
  3076 ;;  divisor         8    8[COMRAM] long long 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  sign            1   17[COMRAM] unsigned char 
  3079 ;;  counter         1   16[COMRAM] unsigned char 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  8    0[COMRAM] long long 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3089 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;Total ram usage:       18 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_dtoa
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text22
  3103  001432                     __ptext22:
  3104                           	callstack 0
  3105  001432                     ___aomod:
  3106                           	callstack 25
  3107  001432  0E00               	movlw	0
  3108  001434  6E12               	movwf	___aomod@sign^0,c
  3109  001436  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3110  001438  EF22  F00A         	goto	u800
  3111  00143C  EF20  F00A         	goto	u801
  3112  001440                     u801:
  3113  001440  EF34  F00A         	goto	l1777
  3114  001444                     u800:
  3115  001444  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3116  001446  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3117  001448  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3118  00144A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3119  00144C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3120  00144E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3121  001450  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3122  001452  6C01               	negf	___aomod@dividend^0,c
  3123  001454  0E00               	movlw	0
  3124  001456  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3125  001458  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3126  00145A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3127  00145C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3128  00145E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3129  001460  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3130  001462  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3131  001464  0E01               	movlw	1
  3132  001466  6E12               	movwf	___aomod@sign^0,c
  3133  001468                     l1777:
  3134  001468  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3135  00146A  EF3B  F00A         	goto	u810
  3136  00146E  EF39  F00A         	goto	u811
  3137  001472                     u811:
  3138  001472  EF4B  F00A         	goto	l1781
  3139  001476                     u810:
  3140  001476  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3141  001478  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3142  00147A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3143  00147C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3144  00147E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3145  001480  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3146  001482  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3147  001484  6C09               	negf	___aomod@divisor^0,c
  3148  001486  0E00               	movlw	0
  3149  001488  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3150  00148A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3151  00148C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3152  00148E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3153  001490  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3154  001492  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3155  001494  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3156  001496                     l1781:
  3157  001496  5009               	movf	___aomod@divisor^0,w,c
  3158  001498  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3159  00149A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3160  00149C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3161  00149E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3162  0014A0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3163  0014A2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3164  0014A4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3165  0014A6  B4D8               	btfsc	status,2,c
  3166  0014A8  EF58  F00A         	goto	u821
  3167  0014AC  EF5A  F00A         	goto	u820
  3168  0014B0                     u821:
  3169  0014B0  EFA2  F00A         	goto	l1797
  3170  0014B4                     u820:
  3171  0014B4  0E01               	movlw	1
  3172  0014B6  6E11               	movwf	___aomod@counter^0,c
  3173  0014B8  EF68  F00A         	goto	l1787
  3174  0014BC                     l1785:
  3175  0014BC  90D8               	bcf	status,0,c
  3176  0014BE  3609               	rlcf	___aomod@divisor^0,f,c
  3177  0014C0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3178  0014C2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3179  0014C4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3180  0014C6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3181  0014C8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3182  0014CA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3183  0014CC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3184  0014CE  2A11               	incf	___aomod@counter^0,f,c
  3185  0014D0                     l1787:
  3186  0014D0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3187  0014D2  EF6D  F00A         	goto	u831
  3188  0014D6  EF6F  F00A         	goto	u830
  3189  0014DA                     u831:
  3190  0014DA  EF5E  F00A         	goto	l1785
  3191  0014DE                     u830:
  3192  0014DE                     l1789:
  3193  0014DE  5009               	movf	___aomod@divisor^0,w,c
  3194  0014E0  5C01               	subwf	___aomod@dividend^0,w,c
  3195  0014E2  500A               	movf	(___aomod@divisor+1)^0,w,c
  3196  0014E4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3197  0014E6  500B               	movf	(___aomod@divisor+2)^0,w,c
  3198  0014E8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3199  0014EA  500C               	movf	(___aomod@divisor+3)^0,w,c
  3200  0014EC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3201  0014EE  500D               	movf	(___aomod@divisor+4)^0,w,c
  3202  0014F0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3203  0014F2  500E               	movf	(___aomod@divisor+5)^0,w,c
  3204  0014F4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3205  0014F6  500F               	movf	(___aomod@divisor+6)^0,w,c
  3206  0014F8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3207  0014FA  5010               	movf	(___aomod@divisor+7)^0,w,c
  3208  0014FC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3209  0014FE  A0D8               	btfss	status,0,c
  3210  001500  EF84  F00A         	goto	u841
  3211  001504  EF86  F00A         	goto	u840
  3212  001508                     u841:
  3213  001508  EF96  F00A         	goto	l1793
  3214  00150C                     u840:
  3215  00150C  5009               	movf	___aomod@divisor^0,w,c
  3216  00150E  5E01               	subwf	___aomod@dividend^0,f,c
  3217  001510  500A               	movf	(___aomod@divisor+1)^0,w,c
  3218  001512  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3219  001514  500B               	movf	(___aomod@divisor+2)^0,w,c
  3220  001516  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3221  001518  500C               	movf	(___aomod@divisor+3)^0,w,c
  3222  00151A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3223  00151C  500D               	movf	(___aomod@divisor+4)^0,w,c
  3224  00151E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3225  001520  500E               	movf	(___aomod@divisor+5)^0,w,c
  3226  001522  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3227  001524  500F               	movf	(___aomod@divisor+6)^0,w,c
  3228  001526  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3229  001528  5010               	movf	(___aomod@divisor+7)^0,w,c
  3230  00152A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3231  00152C                     l1793:
  3232  00152C  90D8               	bcf	status,0,c
  3233  00152E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3234  001530  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3235  001532  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3236  001534  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3237  001536  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3238  001538  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3239  00153A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3240  00153C  3209               	rrcf	___aomod@divisor^0,f,c
  3241  00153E  2E11               	decfsz	___aomod@counter^0,f,c
  3242  001540  EF6F  F00A         	goto	l1789
  3243  001544                     l1797:
  3244  001544  5012               	movf	___aomod@sign^0,w,c
  3245  001546  B4D8               	btfsc	status,2,c
  3246  001548  EFA8  F00A         	goto	u851
  3247  00154C  EFAA  F00A         	goto	u850
  3248  001550                     u851:
  3249  001550  EFBA  F00A         	goto	l1801
  3250  001554                     u850:
  3251  001554  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3252  001556  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3253  001558  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3254  00155A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3255  00155C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3256  00155E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3257  001560  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3258  001562  6C01               	negf	___aomod@dividend^0,c
  3259  001564  0E00               	movlw	0
  3260  001566  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3261  001568  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3262  00156A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3263  00156C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3264  00156E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3265  001570  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3266  001572  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3267  001574                     l1801:
  3268  001574  C001  F001         	movff	___aomod@dividend,?___aomod
  3269  001578  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3270  00157C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3271  001580  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3272  001584  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3273  001588  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3274  00158C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3275  001590  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3276  001594  0012               	return		;funcret
  3277  001596                     __end_of___aomod:
  3278                           	callstack 0
  3279                           
  3280 ;; *************** function ___aodiv *****************
  3281 ;; Defined at:
  3282 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;  dividend        8    0[COMRAM] long long 
  3285 ;;  divisor         8    8[COMRAM] long long 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;  quotient        8   18[COMRAM] long long 
  3288 ;;  sign            1   17[COMRAM] unsigned char 
  3289 ;;  counter         1   16[COMRAM] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  8    0[COMRAM] long long 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3299 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;Total ram usage:       26 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_dtoa
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text23
  3313  0012AA                     __ptext23:
  3314                           	callstack 0
  3315  0012AA                     ___aodiv:
  3316                           	callstack 25
  3317  0012AA  0E00               	movlw	0
  3318  0012AC  6E12               	movwf	___aodiv@sign^0,c
  3319  0012AE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3320  0012B0  EF5E  F009         	goto	u730
  3321  0012B4  EF5C  F009         	goto	u731
  3322  0012B8                     u731:
  3323  0012B8  EF70  F009         	goto	l1733
  3324  0012BC                     u730:
  3325  0012BC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3326  0012BE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3327  0012C0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3328  0012C2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3329  0012C4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3330  0012C6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3331  0012C8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3332  0012CA  6C09               	negf	___aodiv@divisor^0,c
  3333  0012CC  0E00               	movlw	0
  3334  0012CE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3335  0012D0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3336  0012D2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3337  0012D4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3338  0012D6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3339  0012D8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3340  0012DA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3341  0012DC  0E01               	movlw	1
  3342  0012DE  6E12               	movwf	___aodiv@sign^0,c
  3343  0012E0                     l1733:
  3344  0012E0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3345  0012E2  EF77  F009         	goto	u740
  3346  0012E6  EF75  F009         	goto	u741
  3347  0012EA                     u741:
  3348  0012EA  EF89  F009         	goto	l1739
  3349  0012EE                     u740:
  3350  0012EE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3351  0012F0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3352  0012F2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3353  0012F4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3354  0012F6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3355  0012F8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3356  0012FA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3357  0012FC  6C01               	negf	___aodiv@dividend^0,c
  3358  0012FE  0E00               	movlw	0
  3359  001300  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3360  001302  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3361  001304  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3362  001306  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3363  001308  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3364  00130A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3365  00130C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3366  00130E  0E01               	movlw	1
  3367  001310  1A12               	xorwf	___aodiv@sign^0,f,c
  3368  001312                     l1739:
  3369  001312  EE20  F013         	lfsr	2,___aodiv@quotient
  3370  001316  0E07               	movlw	7
  3371  001318                     u751:
  3372  001318  6ADE               	clrf	postinc2,c
  3373  00131A  06E8               	decf	wreg,f,c
  3374  00131C  E2FD               	bc	u751
  3375  00131E  5009               	movf	___aodiv@divisor^0,w,c
  3376  001320  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3377  001322  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3378  001324  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3379  001326  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3380  001328  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3381  00132A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3382  00132C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3383  00132E  B4D8               	btfsc	status,2,c
  3384  001330  EF9C  F009         	goto	u761
  3385  001334  EF9E  F009         	goto	u760
  3386  001338                     u761:
  3387  001338  EFF0  F009         	goto	l1761
  3388  00133C                     u760:
  3389  00133C  0E01               	movlw	1
  3390  00133E  6E11               	movwf	___aodiv@counter^0,c
  3391  001340  EFAC  F009         	goto	l1747
  3392  001344                     l1745:
  3393  001344  90D8               	bcf	status,0,c
  3394  001346  3609               	rlcf	___aodiv@divisor^0,f,c
  3395  001348  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3396  00134A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3397  00134C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3398  00134E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3399  001350  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3400  001352  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3401  001354  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3402  001356  2A11               	incf	___aodiv@counter^0,f,c
  3403  001358                     l1747:
  3404  001358  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3405  00135A  EFB1  F009         	goto	u771
  3406  00135E  EFB3  F009         	goto	u770
  3407  001362                     u771:
  3408  001362  EFA2  F009         	goto	l1745
  3409  001366                     u770:
  3410  001366                     l1749:
  3411  001366  90D8               	bcf	status,0,c
  3412  001368  3613               	rlcf	___aodiv@quotient^0,f,c
  3413  00136A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3414  00136C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3415  00136E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3416  001370  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3417  001372  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3418  001374  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3419  001376  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3420  001378  5009               	movf	___aodiv@divisor^0,w,c
  3421  00137A  5C01               	subwf	___aodiv@dividend^0,w,c
  3422  00137C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3423  00137E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3424  001380  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3425  001382  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3426  001384  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3427  001386  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3428  001388  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3429  00138A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3430  00138C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3431  00138E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3432  001390  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3433  001392  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3434  001394  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3435  001396  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3436  001398  A0D8               	btfss	status,0,c
  3437  00139A  EFD1  F009         	goto	u781
  3438  00139E  EFD3  F009         	goto	u780
  3439  0013A2                     u781:
  3440  0013A2  EFE4  F009         	goto	l1757
  3441  0013A6                     u780:
  3442  0013A6  5009               	movf	___aodiv@divisor^0,w,c
  3443  0013A8  5E01               	subwf	___aodiv@dividend^0,f,c
  3444  0013AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3445  0013AC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3446  0013AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3447  0013B0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3448  0013B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3449  0013B4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3450  0013B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3451  0013B8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3452  0013BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3453  0013BC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3454  0013BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3455  0013C0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3456  0013C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3457  0013C4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3458  0013C6  8013               	bsf	___aodiv@quotient^0,0,c
  3459  0013C8                     l1757:
  3460  0013C8  90D8               	bcf	status,0,c
  3461  0013CA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3462  0013CC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3463  0013CE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3464  0013D0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3465  0013D2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3466  0013D4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3467  0013D6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3468  0013D8  3209               	rrcf	___aodiv@divisor^0,f,c
  3469  0013DA  2E11               	decfsz	___aodiv@counter^0,f,c
  3470  0013DC  EFB3  F009         	goto	l1749
  3471  0013E0                     l1761:
  3472  0013E0  5012               	movf	___aodiv@sign^0,w,c
  3473  0013E2  B4D8               	btfsc	status,2,c
  3474  0013E4  EFF6  F009         	goto	u791
  3475  0013E8  EFF8  F009         	goto	u790
  3476  0013EC                     u791:
  3477  0013EC  EF08  F00A         	goto	l1765
  3478  0013F0                     u790:
  3479  0013F0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3480  0013F2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3481  0013F4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3482  0013F6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3483  0013F8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3484  0013FA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3485  0013FC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3486  0013FE  6C13               	negf	___aodiv@quotient^0,c
  3487  001400  0E00               	movlw	0
  3488  001402  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3489  001404  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3490  001406  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3491  001408  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3492  00140A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3493  00140C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3494  00140E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3495  001410                     l1765:
  3496  001410  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3497  001414  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3498  001418  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3499  00141C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3500  001420  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3501  001424  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3502  001428  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3503  00142C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3504  001430  0012               	return		;funcret
  3505  001432                     __end_of___aodiv:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _sendStringSerial4 *****************
  3509 ;; Defined at:
  3510 ;;		line 36 in file "serial.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  string          2    1[COMRAM] PTR unsigned char 
  3513 ;;		 -> color_display@buf(100), 
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;		None
  3516 ;; Return value:  Size  Location     Type
  3517 ;;                  1    wreg      void 
  3518 ;; Registers used:
  3519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3520 ;; Tracked objects:
  3521 ;;		On entry : 0/0
  3522 ;;		On exit  : 0/0
  3523 ;;		Unchanged: 0/0
  3524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;Total ram usage:        2 bytes
  3530 ;; Hardware stack levels used: 1
  3531 ;; Hardware stack levels required when called: 1
  3532 ;; This function calls:
  3533 ;;		_sendCharSerial4
  3534 ;; This function is called by:
  3535 ;;		_color_display
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           	psect	text24
  3540  001BF8                     __ptext24:
  3541                           	callstack 0
  3542  001BF8                     _sendStringSerial4:
  3543                           	callstack 28
  3544  001BF8                     
  3545                           ;serial.c: 38:     while(*string != 0){
  3546  001BF8  EF07  F00E         	goto	l2039
  3547  001BFC                     l2035:
  3548                           
  3549                           ;serial.c: 39:   sendCharSerial4(*string++);}
  3550  001BFC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3551  001C00  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3552  001C04  50DF               	movf	indf2,w,c
  3553  001C06  EC85  F00E         	call	_sendCharSerial4
  3554  001C0A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3555  001C0C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3556  001C0E                     l2039:
  3557                           
  3558                           ;serial.c: 38:     while(*string != 0){
  3559  001C0E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3560  001C12  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3561  001C16  50DF               	movf	indf2,w,c
  3562  001C18  A4D8               	btfss	status,2,c
  3563  001C1A  EF11  F00E         	goto	u1161
  3564  001C1E  EF13  F00E         	goto	u1160
  3565  001C22                     u1161:
  3566  001C22  EFFE  F00D         	goto	l2035
  3567  001C26                     u1160:
  3568  001C26  0012               	return		;funcret
  3569  001C28                     __end_of_sendStringSerial4:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _sendCharSerial4 *****************
  3573 ;; Defined at:
  3574 ;;		line 29 in file "serial.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  charToSend      1    wreg     unsigned char 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  charToSend      1    0[COMRAM] unsigned char 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;Total ram usage:        1 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; This function calls:
  3595 ;;		Nothing
  3596 ;; This function is called by:
  3597 ;;		_sendStringSerial4
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text25
  3602  001D0A                     __ptext25:
  3603                           	callstack 0
  3604  001D0A                     _sendCharSerial4:
  3605                           	callstack 28
  3606                           
  3607                           ;incstack = 0
  3608                           ;sendCharSerial4@charToSend stored from wreg
  3609  001D0A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3610  001D0C                     l246:
  3611  001D0C  010E               	movlb	14	; () banked
  3612  001D0E  A537               	btfss	55,2,b	;volatile
  3613  001D10  EF8C  F00E         	goto	u1141
  3614  001D14  EF8E  F00E         	goto	u1140
  3615  001D18                     u1141:
  3616  001D18  EF86  F00E         	goto	l246
  3617  001D1C                     u1140:
  3618  001D1C                     
  3619                           ; BSR set to: 14
  3620                           ;serial.c: 31:     TX4REG = charToSend;
  3621  001D1C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3622  001D20                     
  3623                           ; BSR set to: 14
  3624  001D20  0012               	return		;funcret
  3625  001D22                     __end_of_sendCharSerial4:
  3626                           	callstack 0
  3627                           
  3628 ;; *************** function _color_click_init *****************
  3629 ;; Defined at:
  3630 ;;		line 8 in file "color.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;		None
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;		None
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;Total ram usage:        1 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 3
  3651 ;; This function calls:
  3652 ;;		_I2C_2_Master_Init
  3653 ;;		_color_writetoaddr
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text26
  3660  001BC4                     __ptext26:
  3661                           	callstack 0
  3662  001BC4                     _color_click_init:
  3663                           	callstack 27
  3664  001BC4                     
  3665                           ;color.c: 11:     I2C_2_Master_Init();
  3666  001BC4  EC2A  F00E         	call	_I2C_2_Master_Init	;wreg free
  3667  001BC8                     
  3668                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  3669  001BC8  0E01               	movlw	1
  3670  001BCA  6E03               	movwf	color_writetoaddr@value^0,c
  3671  001BCC  0E00               	movlw	0
  3672  001BCE  EC66  F00E         	call	_color_writetoaddr
  3673  001BD2                     
  3674                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3675  001BD2  0E3F               	movlw	63
  3676  001BD4  6E05               	movwf	??_color_click_init^0,c
  3677  001BD6  0E55               	movlw	85
  3678  001BD8                     u1267:
  3679  001BD8  2EE8               	decfsz	wreg,f,c
  3680  001BDA  D7FE               	bra	u1267
  3681  001BDC  2E05               	decfsz	??_color_click_init^0,f,c
  3682  001BDE  D7FC               	bra	u1267
  3683  001BE0  F000               	nop	
  3684  001BE2                     
  3685                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  3686  001BE2  0E03               	movlw	3
  3687  001BE4  6E03               	movwf	color_writetoaddr@value^0,c
  3688  001BE6  0E00               	movlw	0
  3689  001BE8  EC66  F00E         	call	_color_writetoaddr
  3690  001BEC                     
  3691                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  3692  001BEC  0ED5               	movlw	213
  3693  001BEE  6E03               	movwf	color_writetoaddr@value^0,c
  3694  001BF0  0E01               	movlw	1
  3695  001BF2  EC66  F00E         	call	_color_writetoaddr
  3696  001BF6  0012               	return		;funcret
  3697  001BF8                     __end_of_color_click_init:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _color_writetoaddr *****************
  3701 ;; Defined at:
  3702 ;;		line 24 in file "color.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  address         1    wreg     unsigned char 
  3705 ;;  value           1    2[COMRAM] unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  address         1    3[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0, cstack
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3717 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3720 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3721 ;;Total ram usage:        2 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; Hardware stack levels required when called: 2
  3724 ;; This function calls:
  3725 ;;		_I2C_2_Master_Start
  3726 ;;		_I2C_2_Master_Stop
  3727 ;;		_I2C_2_Master_Write
  3728 ;; This function is called by:
  3729 ;;		_color_click_init
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text27
  3734  001CCC                     __ptext27:
  3735                           	callstack 0
  3736  001CCC                     _color_writetoaddr:
  3737                           	callstack 27
  3738                           
  3739                           ;incstack = 0
  3740                           ;color_writetoaddr@address stored from wreg
  3741  001CCC  6E04               	movwf	color_writetoaddr@address^0,c
  3742  001CCE                     
  3743                           ;color.c: 25:     I2C_2_Master_Start();
  3744  001CCE  ECA1  F00E         	call	_I2C_2_Master_Start	;wreg free
  3745                           
  3746                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  3747  001CD2  0E52               	movlw	82
  3748  001CD4  EC91  F00E         	call	_I2C_2_Master_Write
  3749                           
  3750                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  3751  001CD8  5004               	movf	color_writetoaddr@address^0,w,c
  3752  001CDA  0980               	iorlw	128
  3753  001CDC  EC91  F00E         	call	_I2C_2_Master_Write
  3754                           
  3755                           ;color.c: 28:     I2C_2_Master_Write(value);
  3756  001CE0  5003               	movf	color_writetoaddr@value^0,w,c
  3757  001CE2  EC91  F00E         	call	_I2C_2_Master_Write
  3758                           
  3759                           ;color.c: 29:     I2C_2_Master_Stop();
  3760  001CE6  EC9C  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3761  001CEA  0012               	return		;funcret
  3762  001CEC                     __end_of_color_writetoaddr:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _I2C_2_Master_Write *****************
  3766 ;; Defined at:
  3767 ;;		line 45 in file "i2c.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  data_byte       1    wreg     unsigned char 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  data_byte       1    1[COMRAM] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3784 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;Total ram usage:        1 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 1
  3788 ;; This function calls:
  3789 ;;		_I2C_2_Master_Idle
  3790 ;; This function is called by:
  3791 ;;		_color_writetoaddr
  3792 ;;		_color_read_Red
  3793 ;;		_color_read_Blue
  3794 ;;		_color_read_Green
  3795 ;;		_color_read_Clear
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text28
  3800  001D22                     __ptext28:
  3801                           	callstack 0
  3802  001D22                     _I2C_2_Master_Write:
  3803                           	callstack 26
  3804                           
  3805                           ;incstack = 0
  3806                           ;I2C_2_Master_Write@data_byte stored from wreg
  3807  001D22  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3808  001D24                     
  3809                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3810  001D24  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3811  001D28                     
  3812                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3813  001D28  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3814  001D2C  0012               	return		;funcret
  3815  001D2E                     __end_of_I2C_2_Master_Write:
  3816                           	callstack 0
  3817                           
  3818 ;; *************** function _I2C_2_Master_Stop *****************
  3819 ;; Defined at:
  3820 ;;		line 39 in file "i2c.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, status,2, status,0, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : 0/0
  3831 ;;		On exit  : 0/0
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used: 1
  3840 ;; Hardware stack levels required when called: 1
  3841 ;; This function calls:
  3842 ;;		_I2C_2_Master_Idle
  3843 ;; This function is called by:
  3844 ;;		_color_writetoaddr
  3845 ;;		_color_read_Red
  3846 ;;		_color_read_Blue
  3847 ;;		_color_read_Green
  3848 ;;		_color_read_Clear
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text29
  3853  001D38                     __ptext29:
  3854                           	callstack 0
  3855  001D38                     _I2C_2_Master_Stop:
  3856                           	callstack 26
  3857  001D38                     
  3858                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3859  001D38  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3860  001D3C                     
  3861                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3862  001D3C  010E               	movlb	14	; () banked
  3863  001D3E  85DA               	bsf	218,2,b	;volatile
  3864  001D40                     
  3865                           ; BSR set to: 14
  3866  001D40  0012               	return		;funcret
  3867  001D42                     __end_of_I2C_2_Master_Stop:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _I2C_2_Master_Start *****************
  3871 ;; Defined at:
  3872 ;;		line 27 in file "i2c.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;		None
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;Total ram usage:        0 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; Hardware stack levels required when called: 1
  3893 ;; This function calls:
  3894 ;;		_I2C_2_Master_Idle
  3895 ;; This function is called by:
  3896 ;;		_color_writetoaddr
  3897 ;;		_color_read_Red
  3898 ;;		_color_read_Blue
  3899 ;;		_color_read_Green
  3900 ;;		_color_read_Clear
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text30
  3905  001D42                     __ptext30:
  3906                           	callstack 0
  3907  001D42                     _I2C_2_Master_Start:
  3908                           	callstack 26
  3909  001D42                     
  3910                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3911  001D42  EC3F  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3912  001D46                     
  3913                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3914  001D46  010E               	movlb	14	; () banked
  3915  001D48  81DA               	bsf	218,0,b	;volatile
  3916  001D4A                     
  3917                           ; BSR set to: 14
  3918  001D4A  0012               	return		;funcret
  3919  001D4C                     __end_of_I2C_2_Master_Start:
  3920                           	callstack 0
  3921                           
  3922 ;; *************** function _I2C_2_Master_Idle *****************
  3923 ;; Defined at:
  3924 ;;		line 22 in file "i2c.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg, status,2, status,0
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3941 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3942 ;;Total ram usage:        1 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_I2C_2_Master_Start
  3948 ;;		_I2C_2_Master_RepStart
  3949 ;;		_I2C_2_Master_Stop
  3950 ;;		_I2C_2_Master_Write
  3951 ;;		_I2C_2_Master_Read
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text31
  3956  001C7E                     __ptext31:
  3957                           	callstack 0
  3958  001C7E                     _I2C_2_Master_Idle:
  3959                           	callstack 26
  3960  001C7E                     l104:
  3961  001C7E  010E               	movlb	14	; () banked
  3962  001C80  B5D8               	btfsc	216,2,b	;volatile
  3963  001C82  EF45  F00E         	goto	u911
  3964  001C86  EF47  F00E         	goto	u910
  3965  001C8A                     u911:
  3966  001C8A  EF3F  F00E         	goto	l104
  3967  001C8E                     u910:
  3968  001C8E                     
  3969                           ; BSR set to: 14
  3970  001C8E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3971  001C92  0E1F               	movlw	31
  3972  001C94  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3973  001C96  A4D8               	btfss	status,2,c
  3974  001C98  EF50  F00E         	goto	u921
  3975  001C9C  EF52  F00E         	goto	u920
  3976  001CA0                     u921:
  3977  001CA0  EF3F  F00E         	goto	l104
  3978  001CA4                     u920:
  3979  001CA4                     
  3980                           ; BSR set to: 14
  3981  001CA4  0012               	return		;funcret
  3982  001CA6                     __end_of_I2C_2_Master_Idle:
  3983                           	callstack 0
  3984                           
  3985 ;; *************** function _I2C_2_Master_Init *****************
  3986 ;; Defined at:
  3987 ;;		line 4 in file "i2c.c"
  3988 ;; Parameters:    Size  Location     Type
  3989 ;;		None
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;		None
  3992 ;; Return value:  Size  Location     Type
  3993 ;;                  1    wreg      void 
  3994 ;; Registers used:
  3995 ;;		wreg, status,2
  3996 ;; Tracked objects:
  3997 ;;		On entry : 0/0
  3998 ;;		On exit  : 0/0
  3999 ;;		Unchanged: 0/0
  4000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;Total ram usage:        0 bytes
  4006 ;; Hardware stack levels used: 1
  4007 ;; This function calls:
  4008 ;;		Nothing
  4009 ;; This function is called by:
  4010 ;;		_color_click_init
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text32
  4016  001C54                     __ptext32:
  4017                           	callstack 0
  4018  001C54                     _I2C_2_Master_Init:
  4019                           	callstack 29
  4020  001C54                     
  4021                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4022  001C54  010E               	movlb	14	; () banked
  4023  001C56  51D9               	movf	217,w,b	;volatile
  4024  001C58  0BF0               	andlw	-16
  4025  001C5A  0908               	iorlw	8
  4026  001C5C  6FD9               	movwf	217,b	;volatile
  4027  001C5E                     
  4028                           ; BSR set to: 14
  4029                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4030  001C5E  8BD9               	bsf	217,5,b	;volatile
  4031                           
  4032                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4033  001C60  0E9F               	movlw	159
  4034  001C62  6FD6               	movwf	214,b	;volatile
  4035  001C64                     
  4036                           ; BSR set to: 14
  4037                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4038  001C64  8A84               	bsf	132,5,c	;volatile
  4039  001C66                     
  4040                           ; BSR set to: 14
  4041                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4042  001C66  8C84               	bsf	132,6,c	;volatile
  4043  001C68                     
  4044                           ; BSR set to: 14
  4045                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4046  001C68  9BA7               	bcf	167,5,b	;volatile
  4047  001C6A                     
  4048                           ; BSR set to: 14
  4049                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4050  001C6A  9DA7               	bcf	167,6,b	;volatile
  4051                           
  4052                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4053  001C6C  0E1D               	movlw	29
  4054  001C6E  6F1D               	movwf	29,b	;volatile
  4055                           
  4056                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4057  001C70  0E1E               	movlw	30
  4058  001C72  6F1C               	movwf	28,b	;volatile
  4059                           
  4060                           ;i2c.c: 18:   RD5PPS=0x1C;
  4061  001C74  0E1C               	movlw	28
  4062  001C76  6F6F               	movwf	111,b	;volatile
  4063                           
  4064                           ;i2c.c: 19:   RD6PPS=0x1B;
  4065  001C78  0E1B               	movlw	27
  4066  001C7A  6F70               	movwf	112,b	;volatile
  4067  001C7C                     
  4068                           ; BSR set to: 14
  4069  001C7C  0012               	return		;funcret
  4070  001C7E                     __end_of_I2C_2_Master_Init:
  4071                           	callstack 0
  4072                           
  4073                           	psect	rparam
  4074  0000                     
  4075                           	psect	idloc
  4076                           
  4077                           ;Config register IDLOC0 @ 0x200000
  4078                           ;	unspecified, using default values
  4079  200000                     	org	2097152
  4080  200000  0FFF               	dw	4095
  4081                           
  4082                           ;Config register IDLOC1 @ 0x200002
  4083                           ;	unspecified, using default values
  4084  200002                     	org	2097154
  4085  200002  0FFF               	dw	4095
  4086                           
  4087                           ;Config register IDLOC2 @ 0x200004
  4088                           ;	unspecified, using default values
  4089  200004                     	org	2097156
  4090  200004  0FFF               	dw	4095
  4091                           
  4092                           ;Config register IDLOC3 @ 0x200006
  4093                           ;	unspecified, using default values
  4094  200006                     	org	2097158
  4095  200006  0FFF               	dw	4095
  4096                           
  4097                           ;Config register IDLOC4 @ 0x200008
  4098                           ;	unspecified, using default values
  4099  200008                     	org	2097160
  4100  200008  0FFF               	dw	4095
  4101                           
  4102                           ;Config register IDLOC5 @ 0x20000A
  4103                           ;	unspecified, using default values
  4104  20000A                     	org	2097162
  4105  20000A  0FFF               	dw	4095
  4106                           
  4107                           ;Config register IDLOC6 @ 0x20000C
  4108                           ;	unspecified, using default values
  4109  20000C                     	org	2097164
  4110  20000C  0FFF               	dw	4095
  4111                           
  4112                           ;Config register IDLOC7 @ 0x20000E
  4113                           ;	unspecified, using default values
  4114  20000E                     	org	2097166
  4115  20000E  0FFF               	dw	4095
  4116                           
  4117                           	psect	config
  4118                           
  4119                           ;Config register CONFIG1L @ 0x300000
  4120                           ;	External Oscillator mode Selection bits
  4121                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4122                           ;	Power-up default value for COSC bits
  4123                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4124  300000                     	org	3145728
  4125  300000  AA                 	db	170
  4126                           
  4127                           ;Config register CONFIG1H @ 0x300001
  4128                           ;	unspecified, using default values
  4129                           ;	Clock Out Enable bit
  4130                           ;	CLKOUTEN = 0x1, unprogrammed default
  4131                           ;	Clock Switch Enable bit
  4132                           ;	CSWEN = 0x1, unprogrammed default
  4133                           ;	Fail-Safe Clock Monitor Enable bit
  4134                           ;	FCMEN = 0x1, unprogrammed default
  4135  300001                     	org	3145729
  4136  300001  FF                 	db	255
  4137                           
  4138                           ;Config register CONFIG2L @ 0x300002
  4139                           ;	unspecified, using default values
  4140                           ;	Master Clear Enable bit
  4141                           ;	MCLRE = 0x1, unprogrammed default
  4142                           ;	Power-up Timer Enable bit
  4143                           ;	PWRTE = 0x1, unprogrammed default
  4144                           ;	Low-power BOR enable bit
  4145                           ;	LPBOREN = 0x1, unprogrammed default
  4146                           ;	Brown-out Reset Enable bits
  4147                           ;	BOREN = 0x3, unprogrammed default
  4148  300002                     	org	3145730
  4149  300002  FF                 	db	255
  4150                           
  4151                           ;Config register CONFIG2H @ 0x300003
  4152                           ;	unspecified, using default values
  4153                           ;	Brown Out Reset Voltage selection bits
  4154                           ;	BORV = 0x3, unprogrammed default
  4155                           ;	ZCD Disable bit
  4156                           ;	ZCD = 0x1, unprogrammed default
  4157                           ;	PPSLOCK bit One-Way Set Enable bit
  4158                           ;	PPS1WAY = 0x1, unprogrammed default
  4159                           ;	Stack Full/Underflow Reset Enable bit
  4160                           ;	STVREN = 0x1, unprogrammed default
  4161                           ;	Debugger Enable bit
  4162                           ;	DEBUG = 0x1, unprogrammed default
  4163                           ;	Extended Instruction Set Enable bit
  4164                           ;	XINST = 0x1, unprogrammed default
  4165  300003                     	org	3145731
  4166  300003  FF                 	db	255
  4167                           
  4168                           ;Config register CONFIG3L @ 0x300004
  4169                           ;	WDT Period Select bits
  4170                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4171                           ;	WDT operating mode
  4172                           ;	WDTE = OFF, WDT Disabled
  4173  300004                     	org	3145732
  4174  300004  9F                 	db	159
  4175                           
  4176                           ;Config register CONFIG3H @ 0x300005
  4177                           ;	unspecified, using default values
  4178                           ;	WDT Window Select bits
  4179                           ;	WDTCWS = 0x7, unprogrammed default
  4180                           ;	WDT input clock selector
  4181                           ;	WDTCCS = 0x7, unprogrammed default
  4182  300005                     	org	3145733
  4183  300005  FF                 	db	255
  4184                           
  4185                           ;Config register CONFIG4L @ 0x300006
  4186                           ;	unspecified, using default values
  4187                           ;	Write Protection Block 0
  4188                           ;	WRT0 = 0x1, unprogrammed default
  4189                           ;	Write Protection Block 1
  4190                           ;	WRT1 = 0x1, unprogrammed default
  4191                           ;	Write Protection Block 2
  4192                           ;	WRT2 = 0x1, unprogrammed default
  4193                           ;	Write Protection Block 3
  4194                           ;	WRT3 = 0x1, unprogrammed default
  4195                           ;	Write Protection Block 3
  4196                           ;	WRT4 = 0x1, unprogrammed default
  4197                           ;	Write Protection Block 3
  4198                           ;	WRT5 = 0x1, unprogrammed default
  4199                           ;	Write Protection Block 3
  4200                           ;	WRT6 = 0x1, unprogrammed default
  4201                           ;	Write Protection Block 3
  4202                           ;	WRT7 = 0x1, unprogrammed default
  4203  300006                     	org	3145734
  4204  300006  FF                 	db	255
  4205                           
  4206                           ;Config register CONFIG4H @ 0x300007
  4207                           ;	unspecified, using default values
  4208                           ;	Configuration Register Write Protection bit
  4209                           ;	WRTC = 0x1, unprogrammed default
  4210                           ;	Boot Block Write Protection bit
  4211                           ;	WRTB = 0x1, unprogrammed default
  4212                           ;	Data EEPROM Write Protection bit
  4213                           ;	WRTD = 0x1, unprogrammed default
  4214                           ;	Scanner Enable bit
  4215                           ;	SCANE = 0x1, unprogrammed default
  4216                           ;	Low Voltage Programming Enable bit
  4217                           ;	LVP = 0x1, unprogrammed default
  4218  300007                     	org	3145735
  4219  300007  FF                 	db	255
  4220                           
  4221                           ;Config register CONFIG5L @ 0x300008
  4222                           ;	unspecified, using default values
  4223                           ;	UserNVM Program Memory Code Protection bit
  4224                           ;	CP = 0x1, unprogrammed default
  4225                           ;	DataNVM Memory Code Protection bit
  4226                           ;	CPD = 0x1, unprogrammed default
  4227  300008                     	org	3145736
  4228  300008  FF                 	db	255
  4229                           
  4230                           ;Config register CONFIG5H @ 0x300009
  4231                           ;	unspecified, using default values
  4232  300009                     	org	3145737
  4233  300009  FF                 	db	255
  4234                           
  4235                           ;Config register CONFIG6L @ 0x30000A
  4236                           ;	unspecified, using default values
  4237                           ;	Table Read Protection Block 0
  4238                           ;	EBTR0 = 0x1, unprogrammed default
  4239                           ;	Table Read Protection Block 1
  4240                           ;	EBTR1 = 0x1, unprogrammed default
  4241                           ;	Table Read Protection Block 2
  4242                           ;	EBTR2 = 0x1, unprogrammed default
  4243                           ;	Table Read Protection Block 3
  4244                           ;	EBTR3 = 0x1, unprogrammed default
  4245                           ;	Table Read Protection Block 4
  4246                           ;	EBTR4 = 0x1, unprogrammed default
  4247                           ;	Table Read Protection Block 5
  4248                           ;	EBTR5 = 0x1, unprogrammed default
  4249                           ;	Table Read Protection Block 6
  4250                           ;	EBTR6 = 0x1, unprogrammed default
  4251                           ;	Table Read Protection Block 7
  4252                           ;	EBTR7 = 0x1, unprogrammed default
  4253  30000A                     	org	3145738
  4254  30000A  FF                 	db	255
  4255                           
  4256                           ;Config register CONFIG6H @ 0x30000B
  4257                           ;	unspecified, using default values
  4258                           ;	Boot Block Table Read Protection bit
  4259                           ;	EBTRB = 0x1, unprogrammed default
  4260  30000B                     	org	3145739
  4261  30000B  FF                 	db	255
  4262                           tosu	equ	0xFFF
  4263                           tosh	equ	0xFFE
  4264                           tosl	equ	0xFFD
  4265                           stkptr	equ	0xFFC
  4266                           pclatu	equ	0xFFB
  4267                           pclath	equ	0xFFA
  4268                           pcl	equ	0xFF9
  4269                           tblptru	equ	0xFF8
  4270                           tblptrh	equ	0xFF7
  4271                           tblptrl	equ	0xFF6
  4272                           tablat	equ	0xFF5
  4273                           prodh	equ	0xFF4
  4274                           prodl	equ	0xFF3
  4275                           indf0	equ	0xFEF
  4276                           postinc0	equ	0xFEE
  4277                           postdec0	equ	0xFED
  4278                           preinc0	equ	0xFEC
  4279                           plusw0	equ	0xFEB
  4280                           fsr0h	equ	0xFEA
  4281                           fsr0l	equ	0xFE9
  4282                           wreg	equ	0xFE8
  4283                           indf1	equ	0xFE7
  4284                           postinc1	equ	0xFE6
  4285                           postdec1	equ	0xFE5
  4286                           preinc1	equ	0xFE4
  4287                           plusw1	equ	0xFE3
  4288                           fsr1h	equ	0xFE2
  4289                           fsr1l	equ	0xFE1
  4290                           bsr	equ	0xFE0
  4291                           indf2	equ	0xFDF
  4292                           postinc2	equ	0xFDE
  4293                           postdec2	equ	0xFDD
  4294                           preinc2	equ	0xFDC
  4295                           plusw2	equ	0xFDB
  4296                           fsr2h	equ	0xFDA
  4297                           fsr2l	equ	0xFD9
  4298                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    147     159
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1783$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1783$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_display@buf(BANK0[100]), 

    turn180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turn180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    S836DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S836DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 4
		 -> main@rgb(BANK0[4]), 

    detect_color_G@m	PTR struct color_rgb size(2) Largest target is 4
		 -> main@rgb(BANK0[4]), 

    get_color@m	PTR struct color_rgb size(2) Largest target is 4
		 -> main@rgb(BANK0[4]), 


Critical Paths under _main in COMRAM

    _main->_color_display
    _detect_color_G->_get_color
    _get_color->_color_read_Blue
    _get_color->_color_read_Clear
    _get_color->_color_read_Green
    _get_color->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_display
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    8423
                                             93 COMRAM     2     2      0
                                            125 BANK0     22    22      0
                  _I2C_2_Master_Init
                   _color_click_init
                      _color_display
                     _detect_color_G
                    _initDCmotorsPWM
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color_G                                       4     2      2     942
                                             13 COMRAM     4     2      2
                          _get_color
 ---------------------------------------------------------------------------------
 (2) _get_color                                            2     0      2     844
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_display                                      106   104      2    6813
                                             87 COMRAM     6     4      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6456
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_display
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _detect_color_G
     _get_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     93      9F       5       99.4%
BITBIGSFRllhh       8F      0       0      40        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      44        0.0%
BITBIGSFRllllh      2D      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      48        0.0%
BITBIGSFRllllll     26      0       0      52        0.0%
BITBIGSFRhhhlll     18      0       0      35        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRlllllh      F      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      49        0.0%
BITBIGSFRllhlll      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRlllllh      6      0       0      47        0.0%
BITBIGSFRlllllh      5      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      45        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      42        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     16E      53        0.0%
DATA                 0      0     16E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 03 11:19:36 2022

               _color_read_Red 18F8                _color_read_Blue 19E8                             l41 1BF6  
                           l50 1A36                             l44 1CEA                             l53 1996  
                           l47 1946                             l71 1C52                             l56 19E6  
                           l74 1842                             l59 1A84               _color_read_Clear 1998  
             _color_read_Green 1948                            l101 1C7C                            l110 1D4A  
                          l104 1C7E                            l113 1D36                            l122 1B4C  
                          l107 1CA4                            l116 1D40                            l119 1D2C  
                          l237 1D08                            l246 1D0C                            l255 1C26  
                          l159 1B0A                            l249 1D20                            l455 1430  
                          l468 1594                            u700 1618                            u701 1614  
                          u710 1AC8                            u711 1AC4                            u800 1444  
                          u720 1BB6                            u801 1440                            u721 1BB2  
                          u730 12BC                            u810 1476                            u731 12B8  
                          u811 1472                            u740 12EE                            u820 14B4  
                          u900 1B68                            u741 12EA                            u821 14B0  
                          u901 1B64                            u910 1C8E                            u830 14DE  
                          u670 15A8                            u911 1C8A                            u751 1318  
                          u831 14DA                            u671 15A4                            u920 1CA4  
                          u760 133C                            u840 150C                            u680 15BA  
                          u921 1CA0                            u761 1338                            u841 1508  
                          u681 15B6                            u770 1366                            u850 1554  
                          u690 15E2                            u930 0E42                            u771 1362  
                          u851 1550                            u691 15DE                            u931 0E3C  
                          u780 13A6                            u860 1670                            u940 0E44  
                          u781 13A2                            u861 166C                            u790 13F0  
                          u870 1692                            u950 0E5A                            u791 13EC  
                          u871 168E                            u951 0E56                            u880 16E8  
                          u960 0E8A                            u881 16E4                            u961 0E86  
                          u890 16F8                            u970 0EA6                            u891 16F4  
                          u971 0EA2                            u980 0ED4                            u981 0ED0  
                          u990 0EE2                            u991 0EDE                            _abs 1B4E  
                          _pad 1660                            wreg 000FE8                           l1110 165E  
                         l1121 1D4C                           l2001 185A                           l2011 1C66  
                         l1051 1724                           l2003 1880                           l1019 18F6  
                         ?_abs 0013                           l2013 1C68                           l2005 1C54  
                         l2021 18A6                           l1118 1AC8                           l1046 16A6  
                         l2015 1C6A                           l2007 1C5E                           l1127 1BC2  
                         l2023 18B8                           l2009 1C64                           l2017 1CCE  
                         l2041 1BC4                           l2033 1BF8                           l1049 16E8  
                         l1057 0EB2                           l2025 18C0                           l1090 189C  
                         l2043 1BC8                           l2035 1BFC                           l1059 0EBA  
                         l1091 18A4                           l2027 18C8                           l2019 1A38  
                         l2051 1C28                           l1084 12A8                           l2045 1BD2  
                         l2037 1C0A                           l1077 10F4                           l2029 18E4  
                         l2053 1C2E                           l2061 1ACA                           l2047 1BE2  
                         l2039 1C0E                           l1095 1B84                           l2055 1C46  
                         l2063 1ADA                           l2071 1CEC                           l2151 173A  
                         l2049 1BEC                           l2057 17CC                           l2065 1AF2  
                         l2081 1D06                           l2073 1CF6                           l2161 1758  
                         l2153 173E                           l2145 1726                           l1098 1B8C  
                         l2059 1836                           l2067 1B06                           l2075 1CF8  
                         l2171 1774                           l2163 175C                           l2155 1744  
                         l2147 172A                           l1701 15E2                           l2069 1B08  
                         l2077 1D02                           l2181 178C                           l2173 177C  
                         l2165 1764                           l2157 1748                           l2149 172E  
                         l1703 1618                           l1711 1AA4                           l2079 1D04  
                         l2191 17A0                           l2183 178E                           l2175 1780  
                         l2167 1768                           l2159 1750                           l1801 1574  
                         l1713 1AA8                           l1721 1BB6                           l2193 17AC  
                         l2185 1790                           l2177 1788                           l2169 176C  
                         l1731 12DC                           l1707 1A86                           l1715 1B8E  
                         l1811 1692                           l2187 1792                           l2179 178A  
                         l1901 1D24                           l1741 131E                           l1733 12E0  
                         l1725 12AA                           l1709 1A92                           l1717 1B9A  
                         l1821 16F8                           l1813 169E                           l1805 1660  
                         l2189 1794                           l1831 1C7E                           l1903 1D28  
                         l1751 1378                           l1743 133C                           l1735 12EE  
                         l1727 12AE                           l1719 1B9E                           l1823 170C  
                         l1815 16B2                           l1807 1670                           l1911 1D32  
                         l1833 1C8E                           l1905 1D38                           l1753 13A6  
                         l1745 1344                           l1761 13E0                           l1737 130E  
                         l1729 12BC                           l1817 16C6                           l1809 1684  
                         l1841 0E7A                           l1921 1B48                           l1913 1B0E  
                         l1907 1D3C                           l1763 13F0                           l1755 13C6  
                         l1747 1358                           l1739 1312                           l1771 1436  
                         l1827 1B4E                           l1819 16CA                           l1851 0ED4  
                         l1843 0E8A                           l1835 0E12                           l1931 1128  
                         l1923 1B4A                           l1915 1B12                           l1765 1410  
                         l1757 13C8                           l1749 1366                           l1781 1496  
                         l1773 1444                           l1829 1B68                           l1693 1596  
                         l1861 0F00                           l1853 0EE2                           l1845 0E8C  
                         l1837 0E32                           l1941 11CE                           l1933 113A  
                         l1917 1B1A                           l1909 1D2E                           l1759 13DA  
                         l1791 150C                           l1783 14B4                           l1775 1464  
                         l1695 15A8                           l1871 100C                           l1863 0F82  
                         l1855 0EE8                           l1847 0EA6                           l1839 0E5A  
                         l1951 124C                           l1935 113E                           l1927 10F6  
                         l1919 1B22                           l1793 152C                           l1785 14BC  
                         l1777 1468                           l1769 1432                           l1697 15BA  
                         l1881 1080                           l1873 102A                           l1865 0F88  
                         l1857 0EF0                           l1849 0EC2                           l1945 1206  
                         l1937 1162                           l1929 111A                           l1961 1272  
                         l1795 153E                           l1787 14D0                           l1779 1476  
                         l1699 15C4                           l1891 10BC                           l1883 1090  
                         l1875 1044                           l1867 0F8E                           l1859 0EFA  
                         l1963 1296                           l1947 122A                           l1955 1258  
                         l1939 1186                           l1971 193E                           l1789 14DE  
                         l1797 1544                           l1885 1096                           l1893 10CC  
                         l1877 105E                           l1869 0FF2                           l1957 1266  
                         l1949 1238                           l1981 1948                           ?_pad 0011  
                         l1799 1554                           l1887 10A8                           l1879 106E  
                         l1975 19E8                           l1983 198E                           l1897 1D42  
                         l1993 1D0C                           l1889 10B4                           l1977 1A2E  
                         l1969 18F8                           l1899 1D46                           l1995 1D1C  
                         l1987 1998                           l1997 1844                           l1989 19DE  
                         l1999 184C                           STR_1 0E01                           u1000 100C  
                         u1001 1008                           u1010 102A                           u1011 1026  
                         u1020 1044                           u1100 111A                           u1021 1040  
                         u1101 1116                           u1030 105E                           u1110 1162  
                         u1031 105A                           u1111 115E                           u1040 106E  
                         u1120 1186                           u1041 106A                           u1121 1182  
                         u1050 1080                           u1130 122A                           u1051 107C  
                         u1131 1226                           u1140 1D1C                           u1060 1090  
                         u1141 1D18                           u1061 108C                           u1070 10A8  
                         u1150 189C                           u1071 10A4                           u1151 1898  
                         u1160 1C26                           u1080 1B36                           u1161 1C22  
                         u1081 1B2E                           u1247 17B6                   _BAUD4CONbits 000EE9  
                         u1257 1C38                           _LATE 000F7D                           u1098 1B38  
                         u1267 1BD8                           _LATG 000F7F                           _T2PR 000FBC  
                         abs@a 0013                           _dbuf 0150                           _main 1726  
                         _dtoa 0E12                           _prec 00F7                           _nout 00F3  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           start 0000  
               ?_color_display 0058         __end_of_color_read_Red 1948                   ___param_bank 000000  
              detect_color_G@m 000E                          ??_abs 0015                          ??_pad 0017  
              __end_of___aodiv 1432                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 1596                   vfpfcnvrt@fmt 0042        __end_of_sendCharSerial4 1D22  
   __end_of_I2C_2_Master_Start 1D4C     __end_of_I2C_2_Master_Write 1D2E                          _flags 00F9  
                        _fputc 1596                          _fputs 1A86                          pad@fp 0011  
                        _width 00F5                          _putch 1D4C                          dtoa@d 001E  
                        dtoa@i 003E                          dtoa@n 0036                          dtoa@p 0030  
                        dtoa@s 0034                          dtoa@w 0032                          tablat 000FF5  
                        status 000FD8                __end_of_sprintf 18F8               color_display@buf 0079  
      __end_of_color_read_Blue 1A38          _I2C_2_Master_RepStart 1D2E                ?_color_read_Red 0005  
              __initialization 1CA6                   __end_of_main 17CC                   __end_of_dtoa 10F6  
                       ??_main 005E                         ??_dtoa 0026                  __activetblptr 000001  
                       ?_fputc 0001                         ?_fputs 000A                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RD6PPS 000E70  
     __end_of_color_click_init 1BF8                         _RX4PPS 000E15                         _TX4REG 000EE4  
              ??_color_display 005A                   vfprintf@cfmt 0056                      ??___aodiv 0011  
                    ??___aomod 0011                         clear_0 1CAC                         clear_1 1CB8  
                       isa$std 000001                         pad@buf 0013                         dtoa@fp 001C  
                       _strlen 1B8E                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 18A6  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0058                     __accesstop 0060  
      __end_of__initialization 1CBE       __end_of_color_read_Clear 19E8       __end_of_color_read_Green 1998  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0005  
               __pcstackCOMRAM 0001                  __end_of_fputc 1660                  __end_of_fputs 1ACA  
                __end_of_putch 1D4E                        ??_fputc 0005                        ??_fputs 000E  
                      ??_putch 0001                     __pbssBANK0 00F3                     __pbssBANK1 0100  
            _color_writetoaddr 1CCC                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003  
          ??_color_writetoaddr 0004                        ?_strlen 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _PWM6DCH 000FA3                        _PWM7DCH 000FA0  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1CEC             _I2C_2_Master_Start 1D42  
                   _initUSART4 1CEC             _I2C_2_Master_Write 1D22                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A              __end_of_get_color 1A86  
      sendStringSerial4@string 0002                        ___aodiv 12AA                        ___aomod 1432  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0050  
                 __psmallconst 0E00                        __pcinit 1CA6                        __ramtop 0E00  
                      __ptext0 1726                        __ptext1 1CEC                        __ptext2 1ACA  
                      __ptext3 1C28                        __ptext4 1A38                        __ptext5 18F8  
                      __ptext6 1948                        __ptext7 1998                        __ptext8 19E8  
                      __ptext9 1D2E                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 00FE                        _sprintf 18A6                        main@rgb 00DD  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1CBE  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 12AA                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0056                        strlen@a 0003                        strlen@s 0001  
              _initDCmotorsPWM 1ACA                 _detect_color_G 1C28                      _TRISAbits 000F81  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 0004  
                   get_color@m 000C        ??_I2C_2_Master_RepStart 0002              ?_color_read_Clear 0005  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100              ?_color_read_Green 0005  
                  ?_initUSART4 0001      sendCharSerial4@charToSend 0001          __end_of_color_display 1844  
                   main@motorL 00E1                     main@motorR 00EA             ??_color_read_Clear 0007  
               color_display@m 0058             ??_color_read_Green 0007                    vfpfcnvrt@ap 0044  
                  vfpfcnvrt@fp 0040                    vfpfcnvrt@ll 0048         __end_of_detect_color_G 1C54  
               __end_of_strlen 1BC4            color_read_Clear@tmp 000A            start_initialization 1CA6  
                  __end_of_abs 1B8E                    __end_of_pad 1726                  _TxBufWriteCnt 00FC  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 1B0C                    vfprintf@fmt 0052  
                     ??_strlen 0003                ?_detect_color_G 000E                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                      _dtoa$1865 002E                       ?___aodiv 0001  
                     ?___aomod 0001               ___aodiv@quotient 0013                      _get_color 1A38  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 1C7E              _I2C_2_Master_Init 1C54              _I2C_2_Master_Read 1B0C  
            _I2C_2_Master_Stop 1D38                   _RxBufReadCnt 00FD             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060              _sendStringSerial4 1BF8  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 10F6  
                   ?_get_color 000C      __end_of_I2C_2_Master_Idle 1CA6      __end_of_I2C_2_Master_Init 1C7E  
    __end_of_I2C_2_Master_Read 1B4E      __end_of_I2C_2_Master_Stop 1D42    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                   _TxBufReadCnt 00FB      __end_of_sendStringSerial4 1C28  
__end_of_I2C_2_Master_RepStart 1D38             color_read_Blue@tmp 000A                   ??_initUSART4 0001  
                     __Hrparam 0000                     vfprintf@ap 0054                       __Lrparam 0000  
                   vfprintf@fp 0050                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0040  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     _ANSELDbits 000EA7  
                   sprintf@fmt 0062             __end_of_initUSART4 1D0A                       __ptext10 1B0C  
                     __ptext11 17CC                       __ptext20 1D4C                       __ptext12 18A6  
                     __ptext21 1B4E                       __ptext13 1844                       __ptext30 1D42  
                     __ptext22 1432                       __ptext14 10F6                       __ptext31 1C7E  
                     __ptext23 12AA                       __ptext15 0E12                       __ptext32 1C54  
                     __ptext24 1BF8                       __ptext16 1660                       __ptext25 1D0A  
                     __ptext17 1B8E                       __ptext26 1BC4                       __ptext18 1A86  
                     __ptext27 1CCC                       __ptext19 1596                       __ptext28 1D22  
                     __ptext29 1D38                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                     _RC4STAbits 000EE7               ??_detect_color_G 0010  
                     _vfprintf 1844                    ??_get_color 000E               ___aomod@dividend 0001  
                  _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1                      sprintf@ap 006C  
              ___aomod@divisor 0009                    ??_vfpfcnvrt 0046                ___aomod@counter 0011  
             _color_click_init 1BC4                       sprintf@f 006E                       sprintf@s 0060  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 1D0A                   ___aomod@sign 0012  
                _color_display 17CC  
