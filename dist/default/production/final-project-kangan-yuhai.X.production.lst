

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 09 23:15:58 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.35
    73                           ; Generated 05/05/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     
   108                           	psect	idataBANK0
   109  0043AE                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _CALIBRATION_180
   113  0043AE  28                 	db	40
   114                           
   115                           ;initializer for _SENSITIVITY
   116  0043AF  0B                 	db	11
   117                           
   118                           	psect	smallconst
   119  000E00                     __psmallconst:
   120                           	callstack 0
   121  000E00  00                 	db	0
   122  000E01  0000               	dw	0
   123  000E03  4B00               	dw	19200
   124  000E05                     __end_of_toint:
   125                           	callstack 0
   126  0000                     _TRISFbits	set	3974
   127  0000                     _TX4REG	set	3812
   128  0000                     _RC4STAbits	set	3815
   129  0000                     _SP4BRGH	set	3814
   130  0000                     _TRISGbits	set	3975
   131  0000                     _TRISEbits	set	3973
   132  0000                     _SSP2CON2bits	set	3802
   133  0000                     _LATG	set	3967
   134  0000                     _LATE	set	3965
   135  0000                     _RX4PPS	set	3605
   136  0000                     _SSP2CLKPPS	set	3612
   137  0000                     _SSP2DATPPS	set	3613
   138  0000                     _ANSELDbits	set	3751
   139  0000                     _SSP2ADD	set	3798
   140  0000                     _SSP2CON1bits	set	3801
   141  0000                     _LATAbits	set	3961
   142  0000                     _LATFbits	set	3966
   143  0000                     _LATGbits	set	3967
   144  0000                     _TRISAbits	set	3969
   145  0000                     _TRISCbits	set	3971
   146  0000                     _TRISDbits	set	3972
   147  0000                     _LATCbits	set	3963
   148  0000                     _LATEbits	set	3965
   149  0000                     _RC4REG	set	3811
   150  0000                     _SP4BRGL	set	3813
   151  0000                     _TX4STAbits	set	3816
   152  0000                     _BAUD4CONbits	set	3817
   153  0000                     _SSP2CON2	set	3802
   154  0000                     _SSP2STAT	set	3800
   155  0000                     _ANSELFbits	set	3764
   156  0000                     _SSP2BUF	set	3797
   157  0000                     _PIE4bits	set	3629
   158  0000                     _PIR4bits	set	3639
   159  0000                     _RC0PPS	set	3682
   160  0000                     _RC7PPS	set	3689
   161  0000                     _RD5PPS	set	3695
   162  0000                     _RE2PPS	set	3700
   163  0000                     _RD6PPS	set	3696
   164  0000                     _PORTFbits	set	3982
   165  0000                     _T2PR	set	4028
   166  0000                     _T2CONbits	set	4029
   167  0000                     _PWM7DCH	set	4000
   168  0000                     _PWM6DCH	set	4003
   169  0000                     _T2CLKCONbits	set	4031
   170  0000                     _T2HLTbits	set	4030
   171  0000                     _PWM6CONbits	set	4004
   172  0000                     _PWM7CONbits	set	4001
   173  0000                     _ADREFbits	set	3928
   174  0000                     _ADPCH	set	3935
   175  0000                     _ADRESH	set	3940
   176  0000                     _ADCON0bits	set	3936
   177  000E05                     STR_1:
   178  000E05  25                 	db	37
   179  000E06  64                 	db	100	;'d'
   180  000E07  09                 	db	9
   181  000E08  25                 	db	37
   182  000E09  64                 	db	100	;'d'
   183  000E0A  09                 	db	9
   184  000E0B  25                 	db	37
   185  000E0C  64                 	db	100	;'d'
   186  000E0D  09                 	db	9
   187  000E0E  25                 	db	37
   188  000E0F  64                 	db	100	;'d'
   189  000E10  0D                 	db	13
   190  000E11  0A                 	db	10
   191  000E12  00                 	db	0
   192  000E13  4C                 	db	76	;'L'
   193  000E14  69                 	db	105	;'i'
   194  000E15  67                 	db	103	;'g'
   195  000E16  68                 	db	104	;'h'
   196  000E17  74                 	db	116	;'t'
   197  000E18  20                 	db	32
   198  000E19  62                 	db	98	;'b'
   199  000E1A  6C                 	db	108	;'l'
   200  000E1B  75                 	db	117	;'u'
   201  000E1C  65                 	db	101	;'e'
   202  000E1D  00                 	db	0
   203  000E1E  4F                 	db	79	;'O'
   204  000E1F  72                 	db	114	;'r'
   205  000E20  61                 	db	97	;'a'
   206  000E21  6E                 	db	110	;'n'
   207  000E22  67                 	db	103	;'g'
   208  000E23  65                 	db	101	;'e'
   209  000E24  00                 	db	0
   210  000E25  59                 	db	89	;'Y'
   211  000E26  65                 	db	101	;'e'
   212  000E27  6C                 	db	108	;'l'
   213  000E28  6C                 	db	108	;'l'
   214  000E29  6F                 	db	111	;'o'
   215  000E2A  77                 	db	119	;'w'
   216  000E2B  00                 	db	0
   217  000E2C  57                 	db	87	;'W'
   218  000E2D  68                 	db	104	;'h'
   219  000E2E  69                 	db	105	;'i'
   220  000E2F  74                 	db	116	;'t'
   221  000E30  65                 	db	101	;'e'
   222  000E31  00                 	db	0
   223  000E32  42                 	db	66	;'B'
   224  000E33  6C                 	db	108	;'l'
   225  000E34  61                 	db	97	;'a'
   226  000E35  63                 	db	99	;'c'
   227  000E36  6B                 	db	107	;'k'
   228  000E37  00                 	db	0
   229  000E38  47                 	db	71	;'G'
   230  000E39  72                 	db	114	;'r'
   231  000E3A  65                 	db	101	;'e'
   232  000E3B  65                 	db	101	;'e'
   233  000E3C  6E                 	db	110	;'n'
   234  000E3D  00                 	db	0
   235  000E3E  45                 	db	69	;'E'
   236  000E3F  72                 	db	114	;'r'
   237  000E40  72                 	db	114	;'r'
   238  000E41  6F                 	db	111	;'o'
   239  000E42  72                 	db	114	;'r'
   240  000E43  00                 	db	0
   241  000E44  42                 	db	66	;'B'
   242  000E45  6C                 	db	108	;'l'
   243  000E46  75                 	db	117	;'u'
   244  000E47  65                 	db	101	;'e'
   245  000E48  00                 	db	0
   246  000E49  50                 	db	80	;'P'
   247  000E4A  69                 	db	105	;'i'
   248  000E4B  6E                 	db	110	;'n'
   249  000E4C  6B                 	db	107	;'k'
   250  000E4D  00                 	db	0
   251  000E4E  52                 	db	82	;'R'
   252  000E4F  65                 	db	101	;'e'
   253  000E50  64                 	db	100	;'d'
   254  000E51  00                 	db	0
   255  000E52  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260  0040BC                     __pcinit:
   261                           	callstack 0
   262  0040BC                     start_initialization:
   263                           	callstack 0
   264  0040BC                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (2 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269  0040BC  0EAE               	movlw	low __pidataBANK0
   270  0040BE  6EF6               	movwf	tblptrl,c
   271  0040C0  0E43               	movlw	high __pidataBANK0
   272  0040C2  6EF7               	movwf	tblptrh,c
   273  0040C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274  0040C6  6EF8               	movwf	tblptru,c
   275  0040C8  0009               	tblrd		*+	;fetch initializer
   276  0040CA  CFF5 F0F8          	movff	tablat,__pdataBANK0
   277  0040CE  0009               	tblrd		*+	;fetch initializer
   278  0040D0  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   279                           
   280                           ; Clear objects allocated to BANK1 (133 bytes)
   281  0040D4  EE01  F000         	lfsr	0,__pbssBANK1
   282  0040D8  0E85               	movlw	133
   283  0040DA                     clear_0:
   284  0040DA  6AEE               	clrf	postinc0,c
   285  0040DC  06E8               	decf	wreg,f,c
   286  0040DE  E1FD               	bnz	clear_0
   287                           
   288                           ; Clear objects allocated to BANK0 (16 bytes)
   289  0040E0  EE00  F0E8         	lfsr	0,__pbssBANK0
   290  0040E4  0E10               	movlw	16
   291  0040E6                     clear_1:
   292  0040E6  6AEE               	clrf	postinc0,c
   293  0040E8  06E8               	decf	wreg,f,c
   294  0040EA  E1FD               	bnz	clear_1
   295  0040EC                     end_of_initialization:
   296                           	callstack 0
   297  0040EC                     __end_of__initialization:
   298                           	callstack 0
   299  0040EC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   300  0040EE  6EF8               	movwf	tblptru,c
   301  0040F0  0E0E               	movlw	high __Lsmallconst
   302  0040F2  6EF7               	movwf	tblptrh,c
   303  0040F4  0100               	movlb	0
   304  0040F6  EF00  F01E         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307  0000E8                     __pbssBANK0:
   308                           	callstack 0
   309  0000E8                     roundf@F527:
   310                           	callstack 0
   311  0000E8                     	ds	4
   312  0000EC                     _nout:
   313                           	callstack 0
   314  0000EC                     	ds	2
   315  0000EE                     _width:
   316                           	callstack 0
   317  0000EE                     	ds	2
   318  0000F0                     _prec:
   319                           	callstack 0
   320  0000F0                     	ds	2
   321  0000F2                     _flags:
   322                           	callstack 0
   323  0000F2                     	ds	2
   324  0000F4                     _TxBufReadCnt:
   325                           	callstack 0
   326  0000F4                     	ds	1
   327  0000F5                     _TxBufWriteCnt:
   328                           	callstack 0
   329  0000F5                     	ds	1
   330  0000F6                     _RxBufReadCnt:
   331                           	callstack 0
   332  0000F6                     	ds	1
   333  0000F7                     _RxBufWriteCnt:
   334                           	callstack 0
   335  0000F7                     	ds	1
   336                           
   337                           	psect	dataBANK0
   338  0000F8                     __pdataBANK0:
   339                           	callstack 0
   340  0000F8                     _CALIBRATION_180:
   341                           	callstack 0
   342  0000F8                     	ds	1
   343  0000F9                     _SENSITIVITY:
   344                           	callstack 0
   345  0000F9                     	ds	1
   346                           
   347                           	psect	bssBANK1
   348  000100                     __pbssBANK1:
   349                           	callstack 0
   350  000100                     _EUSART4TXbuf:
   351                           	callstack 0
   352  000100                     	ds	60
   353  00013C                     _EUSART4RXbuf:
   354                           	callstack 0
   355  00013C                     	ds	20
   356  000150                     _motorR:
   357                           	callstack 0
   358  000150                     	ds	10
   359  00015A                     _motorL:
   360                           	callstack 0
   361  00015A                     	ds	10
   362  000164                     _color:
   363                           	callstack 0
   364  000164                     	ds	1
   365  000165                     _dbuf:
   366                           	callstack 0
   367  000165                     	ds	32
   368                           
   369                           	psect	cstackBANK1
   370  000185                     __pcstackBANK1:
   371                           	callstack 0
   372  000185                     main@motorL:
   373                           	callstack 0
   374                           
   375                           ; 10 bytes @ 0x0
   376  000185                     	ds	10
   377  00018F                     main@motorR:
   378                           	callstack 0
   379                           
   380                           ; 10 bytes @ 0xA
   381  00018F                     	ds	10
   382  000199                     main@rgb:
   383                           	callstack 0
   384                           
   385                           ; 8 bytes @ 0x14
   386  000199                     	ds	8
   387  0001A1                     main@white:
   388                           	callstack 0
   389                           
   390                           ; 18 bytes @ 0x1C
   391  0001A1                     	ds	18
   392                           
   393                           	psect	cstackBANK0
   394  000060                     __pcstackBANK0:
   395                           	callstack 0
   396  000060                     ??___fltol:
   397  000060                     ?_sprintf:
   398                           	callstack 0
   399  000060                     sprintf@s:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x0
   403  000060                     	ds	2
   404  000062                     sprintf@fmt:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x2
   408  000062                     	ds	2
   409  000064                     ___fltol@sign1:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x4
   413  000064                     	ds	1
   414  000065                     ___fltol@exp1:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x5
   418  000065                     	ds	1
   419  000066                     ?_lroundf:
   420                           	callstack 0
   421  000066                     lroundf@x:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x6
   425  000066                     	ds	4
   426  00006A                     compare@lower:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xA
   430  00006A                     	ds	2
   431  00006C                     compare@value2compare:
   432                           	callstack 0
   433  00006C                     sprintf@ap:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0xC
   437  00006C                     	ds	2
   438  00006E                     compare@upper:
   439                           	callstack 0
   440  00006E                     sprintf@f:
   441                           	callstack 0
   442                           
   443                           ; 11 bytes @ 0xE
   444  00006E                     	ds	2
   445  000070                     detect_color@m:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x10
   449  000070                     	ds	2
   450  000072                     detect_color@w:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x12
   454  000072                     	ds	2
   455  000074                     ??_detect_color:
   456                           
   457                           ; 1 bytes @ 0x14
   458  000074                     	ds	4
   459  000078                     detect_color@BC:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x18
   463  000078                     	ds	1
   464  000079                     color_display@buf:
   465                           	callstack 0
   466  000079                     color_predict@buf:
   467                           	callstack 0
   468                           
   469                           ; 100 bytes @ 0x19
   470  000079                     	ds	1
   471  00007A                     detect_color@RG:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x1A
   475  00007A                     	ds	2
   476  00007C                     detect_color@RB:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x1C
   480  00007C                     	ds	2
   481  00007E                     detect_color@GB:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x1E
   485  00007E                     	ds	2
   486  000080                     detect_color@GR:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x20
   490  000080                     	ds	2
   491  000082                     detect_color@GG:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x22
   495  000082                     	ds	2
   496  000084                     detect_color@RR:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x24
   500  000084                     	ds	2
   501  000086                     detect_color@BB:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x26
   505  000086                     	ds	2
   506  000088                     detect_color@GR_REAL:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x28
   510  000088                     	ds	2
   511  00008A                     detect_color@GC_REAL:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x2A
   515  00008A                     	ds	2
   516  00008C                     detect_color@BR:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x2C
   520  00008C                     	ds	2
   521  00008E                     detect_color@BG:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x2E
   525  00008E                     	ds	2
   526  000090                     detect_color@color:
   527                           	callstack 0
   528                           
   529                           ; 1 bytes @ 0x30
   530  000090                     	ds	1
   531  000091                     _detect_color$2736:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x31
   535  000091                     	ds	76
   536  0000DD                     color_predict@color:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x7D
   540  0000DD                     	ds	1
   541  0000DE                     color_data_collection@i:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x7E
   545  0000DE                     	ds	2
   546  0000E0                     color_data_collection@j:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x80
   550  0000E0                     	ds	2
   551  0000E2                     color_data_collection@k:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x82
   555  0000E2                     	ds	2
   556  0000E4                     color_data_collection@x:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x84
   560  0000E4                     	ds	2
   561  0000E6                     ??_main:
   562                           
   563                           ; 1 bytes @ 0x86
   564  0000E6                     	ds	2
   565                           
   566                           	psect	cstackCOMRAM
   567  000001                     __pcstackCOMRAM:
   568                           	callstack 0
   569  000001                     ??_LED_R:
   570  000001                     ??_LED_C:
   571  000001                     ??_LED_B:
   572  000001                     ??_LED_G:
   573  000001                     ??_I2C_2_Master_Idle:
   574  000001                     ?_strlen:
   575                           	callstack 0
   576  000001                     ?___fladd:
   577                           	callstack 0
   578  000001                     ?___flneg:
   579                           	callstack 0
   580  000001                     ?___xxtofl:
   581                           	callstack 0
   582  000001                     ?___aodiv:
   583                           	callstack 0
   584  000001                     ?___aomod:
   585                           	callstack 0
   586  000001                     sendCharSerial4@charToSend:
   587                           	callstack 0
   588  000001                     initDCmotorsPWM@PWMperiod:
   589                           	callstack 0
   590  000001                     initDCmotors_parameter@motorL:
   591                           	callstack 0
   592  000001                     fputc@c:
   593                           	callstack 0
   594  000001                     strlen@s:
   595                           	callstack 0
   596  000001                     ___flge@ff1:
   597                           	callstack 0
   598  000001                     ___flneg@f1:
   599                           	callstack 0
   600  000001                     ___fladd@b:
   601                           	callstack 0
   602  000001                     ___xxtofl@val:
   603                           	callstack 0
   604  000001                     ___aodiv@dividend:
   605                           	callstack 0
   606  000001                     ___aomod@dividend:
   607                           	callstack 0
   608                           
   609                           ; 8 bytes @ 0x0
   610  000001                     	ds	1
   611  000002                     ??_I2C_2_Master_Read:
   612  000002                     I2C_2_Master_Write@data_byte:
   613                           	callstack 0
   614  000002                     sendStringSerial4@string:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x1
   618  000002                     	ds	1
   619  000003                     color_writetoaddr@value:
   620                           	callstack 0
   621  000003                     I2C_2_Master_Read@ack:
   622                           	callstack 0
   623  000003                     initDCmotors_parameter@motorR:
   624                           	callstack 0
   625  000003                     fputc@fp:
   626                           	callstack 0
   627  000003                     strlen@a:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x2
   631  000003                     	ds	1
   632  000004                     color_writetoaddr@address:
   633                           	callstack 0
   634  000004                     I2C_2_Master_Read@tmp:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x3
   638  000004                     	ds	1
   639  000005                     ??_fputc:
   640  000005                     ??_color_click_init:
   641  000005                     ??___xxtofl:
   642  000005                     ?_color_read_Red:
   643                           	callstack 0
   644  000005                     ?_color_read_Blue:
   645                           	callstack 0
   646  000005                     ?_color_read_Green:
   647                           	callstack 0
   648  000005                     ?_color_read_Clear:
   649                           	callstack 0
   650  000005                     ___flge@ff2:
   651                           	callstack 0
   652  000005                     ___fladd@a:
   653                           	callstack 0
   654                           
   655                           ; 4 bytes @ 0x4
   656  000005                     	ds	2
   657  000007                     ??_color_read_Red:
   658  000007                     ??_color_read_Blue:
   659  000007                     ??_color_read_Green:
   660  000007                     ??_color_read_Clear:
   661                           
   662                           ; 1 bytes @ 0x6
   663  000007                     	ds	2
   664  000009                     ??___fladd:
   665  000009                     ??___flge:
   666  000009                     ___xxtofl@sign:
   667                           	callstack 0
   668  000009                     ___aodiv@divisor:
   669                           	callstack 0
   670  000009                     ___aomod@divisor:
   671                           	callstack 0
   672                           
   673                           ; 8 bytes @ 0x8
   674  000009                     	ds	1
   675  00000A                     ___xxtofl@exp:
   676                           	callstack 0
   677  00000A                     color_read_Red@tmp:
   678                           	callstack 0
   679  00000A                     color_read_Blue@tmp:
   680                           	callstack 0
   681  00000A                     color_read_Green@tmp:
   682                           	callstack 0
   683  00000A                     color_read_Clear@tmp:
   684                           	callstack 0
   685  00000A                     fputs@s:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x9
   689  00000A                     	ds	1
   690  00000B                     ___xxtofl@arg:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0xA
   694  00000B                     	ds	1
   695  00000C                     read_color@m:
   696                           	callstack 0
   697  00000C                     calibrate_white@w:
   698                           	callstack 0
   699  00000C                     fputs@fp:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0xB
   703  00000C                     	ds	1
   704  00000D                     ___fladd@signs:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0xC
   708  00000D                     	ds	1
   709  00000E                     ??_calibrate_white:
   710  00000E                     ___fladd@aexp:
   711                           	callstack 0
   712  00000E                     fputs@c:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0xD
   716  00000E                     	ds	1
   717  00000F                     ?___fldiv:
   718                           	callstack 0
   719  00000F                     ___fladd@bexp:
   720                           	callstack 0
   721  00000F                     fputs@i:
   722                           	callstack 0
   723  00000F                     ___fldiv@b:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0xE
   727  00000F                     	ds	1
   728  000010                     ___fladd@grs:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0xF
   732  000010                     	ds	1
   733  000011                     ?_pad:
   734                           	callstack 0
   735  000011                     ?___flsub:
   736                           	callstack 0
   737  000011                     ___aodiv@counter:
   738                           	callstack 0
   739  000011                     ___aomod@counter:
   740                           	callstack 0
   741  000011                     pad@fp:
   742                           	callstack 0
   743  000011                     ___flsub@b:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x10
   747  000011                     	ds	1
   748  000012                     ___aodiv@sign:
   749                           	callstack 0
   750  000012                     ___aomod@sign:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x11
   754  000012                     	ds	1
   755  000013                     ?_abs:
   756                           	callstack 0
   757  000013                     pad@buf:
   758                           	callstack 0
   759  000013                     abs@a:
   760                           	callstack 0
   761  000013                     ___fldiv@a:
   762                           	callstack 0
   763  000013                     ___aodiv@quotient:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0x12
   767  000013                     	ds	2
   768  000015                     ??_abs:
   769  000015                     pad@p:
   770                           	callstack 0
   771  000015                     ___flsub@a:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x14
   775  000015                     	ds	2
   776  000017                     ??___fldiv:
   777  000017                     ??_pad:
   778                           
   779                           ; 1 bytes @ 0x16
   780  000017                     	ds	1
   781  000018                     pad@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785  000018                     	ds	1
   786  000019                     
   787                           ; 1 bytes @ 0x18
   788  000019                     	ds	1
   789  00001A                     pad@w:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x19
   793  00001A                     	ds	1
   794  00001B                     ___fldiv@rem:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x1A
   798  00001B                     	ds	1
   799  00001C                     ?_dtoa:
   800                           	callstack 0
   801  00001C                     dtoa@fp:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x1B
   805  00001C                     	ds	2
   806  00001E                     dtoa@d:
   807                           	callstack 0
   808                           
   809                           ; 8 bytes @ 0x1D
   810  00001E                     	ds	1
   811  00001F                     ___fldiv@sign:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x1E
   815  00001F                     	ds	1
   816  000020                     ___fldiv@new_exp:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x1F
   820  000020                     	ds	2
   821  000022                     ___fldiv@grs:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x21
   825  000022                     	ds	4
   826  000026                     ??_dtoa:
   827  000026                     ___fldiv@bexp:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x25
   831  000026                     	ds	1
   832  000027                     ___fldiv@aexp:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x26
   836  000027                     	ds	1
   837  000028                     ?___flmul:
   838                           	callstack 0
   839  000028                     ___flmul@b:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x27
   843  000028                     	ds	4
   844  00002C                     ___flmul@a:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x2B
   848  00002C                     	ds	2
   849  00002E                     _dtoa$2375:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x2D
   853  00002E                     	ds	2
   854  000030                     ??___flmul:
   855  000030                     dtoa@p:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x2F
   859  000030                     	ds	2
   860  000032                     dtoa@w:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x31
   864  000032                     	ds	2
   865  000034                     ___flmul@sign:
   866                           	callstack 0
   867  000034                     dtoa@s:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x33
   871  000034                     	ds	1
   872  000035                     ___flmul@grs:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x34
   876  000035                     	ds	1
   877  000036                     dtoa@n:
   878                           	callstack 0
   879                           
   880                           ; 8 bytes @ 0x35
   881  000036                     	ds	3
   882  000039                     ___flmul@aexp:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x38
   886  000039                     	ds	1
   887  00003A                     ___flmul@bexp:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x39
   891  00003A                     	ds	1
   892  00003B                     ___flmul@prod:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x3A
   896  00003B                     	ds	3
   897  00003E                     dtoa@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x3D
   901  00003E                     	ds	1
   902  00003F                     ___flmul@temp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x3E
   906  00003F                     	ds	1
   907  000040                     ?_vfpfcnvrt:
   908                           	callstack 0
   909  000040                     vfpfcnvrt@fp:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x3F
   913  000040                     	ds	1
   914  000041                     ?_roundf:
   915                           	callstack 0
   916  000041                     roundf@x:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x40
   920  000041                     	ds	1
   921  000042                     vfpfcnvrt@fmt:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x41
   925  000042                     	ds	2
   926  000044                     vfpfcnvrt@ap:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x43
   930  000044                     	ds	1
   931  000045                     ??_roundf:
   932                           
   933                           ; 1 bytes @ 0x44
   934  000045                     	ds	1
   935  000046                     ??_vfpfcnvrt:
   936                           
   937                           ; 1 bytes @ 0x45
   938  000046                     	ds	2
   939  000048                     vfpfcnvrt@ll:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x47
   943  000048                     	ds	1
   944  000049                     _roundf$2738:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x48
   948  000049                     	ds	4
   949  00004D                     roundf@e:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x4C
   953  00004D                     	ds	2
   954  00004F                     _roundf$2737:
   955                           	callstack 0
   956                           
   957                           ; 4 bytes @ 0x4E
   958  00004F                     	ds	1
   959  000050                     ?_vfprintf:
   960                           	callstack 0
   961  000050                     vfprintf@fp:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x4F
   965  000050                     	ds	2
   966  000052                     vfprintf@fmt:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x51
   970  000052                     	ds	1
   971  000053                     roundf@u:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x52
   975  000053                     	ds	1
   976  000054                     vfprintf@ap:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x53
   980  000054                     	ds	2
   981  000056                     vfprintf@cfmt:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x55
   985  000056                     	ds	1
   986  000057                     roundf@y:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0x56
   990  000057                     	ds	1
   991  000058                     color_display@m:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x57
   995  000058                     	ds	2
   996  00005A                     color_data_collection@m:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x59
  1000  00005A                     	ds	1
  1001  00005B                     ?___fltol:
  1002                           	callstack 0
  1003  00005B                     ___fltol@f1:
  1004                           	callstack 0
  1005                           
  1006                           ; 4 bytes @ 0x5A
  1007  00005B                     	ds	1
  1008  00005C                     ??_color_data_collection:
  1009                           
  1010                           ; 1 bytes @ 0x5B
  1011  00005C                     	ds	3
  1012  00005F                     compare@result:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x5E
  1016  00005F                     	ds	1
  1017                           
  1018 ;;
  1019 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1020 ;;
  1021 ;; *************** function _main *****************
  1022 ;; Defined at:
  1023 ;;		line 24 in file "main.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;		None
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  white          18   28[BANK1 ] struct white_card
  1028 ;;  motorR         10   10[BANK1 ] struct DC_motor
  1029 ;;  motorL         10    0[BANK1 ] struct DC_motor
  1030 ;;  rgb             8   20[BANK1 ] struct color_rgb
  1031 ;;  complete        1    0        unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;      Locals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1044 ;;      Totals:         0       2      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1045 ;;Total ram usage:       48 bytes
  1046 ;; Hardware stack levels required when called: 10
  1047 ;; This function calls:
  1048 ;;		_I2C_2_Master_Init
  1049 ;;		_calibrate_white
  1050 ;;		_color_click_init
  1051 ;;		_color_data_collection
  1052 ;;		_color_predict
  1053 ;;		_detect_color
  1054 ;;		_initDCmotorsPWM
  1055 ;;		_initDCmotors_parameter
  1056 ;;		_initUSART4
  1057 ;;		_pin_init
  1058 ;; This function is called by:
  1059 ;;		Startup code after reset
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text0
  1064  003C00                     __ptext0:
  1065                           	callstack 0
  1066  003C00                     _main:
  1067                           	callstack 21
  1068  003C00                     
  1069                           ;main.c: 25:     I2C_2_Master_Init();
  1070  003C00  EC20  F021         	call	_I2C_2_Master_Init	;wreg free
  1071  003C04                     
  1072                           ;main.c: 26:     color_click_init();
  1073  003C04  ECEE  F020         	call	_color_click_init	;wreg free
  1074  003C08                     
  1075                           ;main.c: 27:     initDCmotorsPWM(199);
  1076  003C08  0E00               	movlw	0
  1077  003C0A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1078  003C0C  0EC7               	movlw	199
  1079  003C0E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1080  003C10  ECFC  F01F         	call	_initDCmotorsPWM	;wreg free
  1081  003C14                     
  1082                           ;main.c: 29:     initUSART4();
  1083  003C14  EC99  F021         	call	_initUSART4	;wreg free
  1084  003C18                     
  1085                           ;main.c: 31:     struct color_rgb rgb;;main.c: 32:     struct white_card white;;main.c: 
      +                          36:     struct DC_motor motorL, motorR;;main.c: 38:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1086  003C18  0E85               	movlw	low main@motorL
  1087  003C1A  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1088  003C1C  0E01               	movlw	high main@motorL
  1089  003C1E  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1090  003C20  0E8F               	movlw	low main@motorR
  1091  003C22  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1092  003C24  0E01               	movlw	high main@motorR
  1093  003C26  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1094  003C28  ECCF  F01C         	call	_initDCmotors_parameter	;wreg free
  1095  003C2C                     
  1096                           ;main.c: 39:     pin_init();
  1097  003C2C  ECA8  F021         	call	_pin_init	;wreg free
  1098  003C30                     
  1099                           ;main.c: 41:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1100  003C30  0EF4               	movlw	244
  1101  003C32  0100               	movlb	0	; () banked
  1102  003C34  6FE7               	movwf	(??_main+1)& (0+255),b
  1103  003C36  0E82               	movlw	130
  1104  003C38  6FE6               	movwf	??_main& (0+255),b
  1105  003C3A  0E05               	movlw	5
  1106  003C3C                     u4917:
  1107  003C3C  2EE8               	decfsz	wreg,f,c
  1108  003C3E  D7FE               	bra	u4917
  1109  003C40  2FE6               	decfsz	??_main& (0+255),f,b
  1110  003C42  D7FC               	bra	u4917
  1111  003C44  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1112  003C46  D7FA               	bra	u4917
  1113  003C48                     
  1114                           ;main.c: 42:     calibrate_white(&white);
  1115  003C48  0EA1               	movlw	low main@white
  1116  003C4A  6E0C               	movwf	calibrate_white@w^0,c
  1117  003C4C  0E01               	movlw	high main@white
  1118  003C4E  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1119  003C50  ECC5  F01A         	call	_calibrate_white	;wreg free
  1120  003C54                     
  1121                           ;main.c: 43:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1122  003C54  0EF4               	movlw	244
  1123  003C56  0100               	movlb	0	; () banked
  1124  003C58  6FE7               	movwf	(??_main+1)& (0+255),b
  1125  003C5A  0E82               	movlw	130
  1126  003C5C  6FE6               	movwf	??_main& (0+255),b
  1127  003C5E  0E05               	movlw	5
  1128  003C60                     u4927:
  1129  003C60  2EE8               	decfsz	wreg,f,c
  1130  003C62  D7FE               	bra	u4927
  1131  003C64  2FE6               	decfsz	??_main& (0+255),f,b
  1132  003C66  D7FC               	bra	u4927
  1133  003C68  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1134  003C6A  D7FA               	bra	u4927
  1135  003C6C                     l4633:
  1136                           
  1137                           ;main.c: 54:             color = detect_color(&rgb, &white);
  1138  003C6C  0E99               	movlw	low main@rgb
  1139  003C6E  0100               	movlb	0	; () banked
  1140  003C70  6F70               	movwf	detect_color@m& (0+255),b
  1141  003C72  0E01               	movlw	high main@rgb
  1142  003C74  6F71               	movwf	(detect_color@m+1)& (0+255),b
  1143  003C76  0EA1               	movlw	low main@white
  1144  003C78  6F72               	movwf	detect_color@w& (0+255),b
  1145  003C7A  0E01               	movlw	high main@white
  1146  003C7C  6F73               	movwf	(detect_color@w+1)& (0+255),b
  1147  003C7E  EC2A  F007         	call	_detect_color	;wreg free
  1148  003C82  0101               	movlb	1	; () banked
  1149  003C84  6F64               	movwf	_color& (0+255),b
  1150  003C86                     
  1151                           ; BSR set to: 1
  1152                           ;main.c: 55:             color_predict(color);
  1153  003C86  5164               	movf	_color& (0+255),w,b
  1154  003C88  EC60  F01C         	call	_color_predict
  1155  003C8C                     
  1156                           ;main.c: 56:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1157  003C8C  0E11               	movlw	17
  1158  003C8E  0100               	movlb	0	; () banked
  1159  003C90  6FE7               	movwf	(??_main+1)& (0+255),b
  1160  003C92  0E3C               	movlw	60
  1161  003C94  6FE6               	movwf	??_main& (0+255),b
  1162  003C96  0ECB               	movlw	203
  1163  003C98                     u4937:
  1164  003C98  2EE8               	decfsz	wreg,f,c
  1165  003C9A  D7FE               	bra	u4937
  1166  003C9C  2FE6               	decfsz	??_main& (0+255),f,b
  1167  003C9E  D7FC               	bra	u4937
  1168  003CA0  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1169  003CA2  D7FA               	bra	u4937
  1170  003CA4  EF36  F01E         	goto	l4633
  1171  003CA8  EF00  F000         	goto	start
  1172  003CAC                     __end_of_main:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _pin_init *****************
  1176 ;; Defined at:
  1177 ;;		line 58 in file "movement.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		None
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text1
  1205  004350                     __ptext1:
  1206                           	callstack 0
  1207  004350                     _pin_init:
  1208                           	callstack 30
  1209  004350  8486               	bsf	134,2,c	;volatile
  1210                           
  1211                           ;movement.c: 60:     ANSELFbits.ANSELF2=0;
  1212  004352  010E               	movlb	14	; () banked
  1213  004354  95B4               	bcf	180,2,b	;volatile
  1214                           
  1215                           ;movement.c: 61:     TRISFbits.TRISF3=1;
  1216  004356  8686               	bsf	134,3,c	;volatile
  1217                           
  1218                           ;movement.c: 62:     ANSELFbits.ANSELF3=0;
  1219  004358  97B4               	bcf	180,3,b	;volatile
  1220                           
  1221                           ;movement.c: 64:     TRISFbits.TRISF6 = 0;
  1222  00435A  9C86               	bcf	134,6,c	;volatile
  1223                           
  1224                           ;movement.c: 65:     LATFbits.LATF6 = 0;
  1225  00435C  9C7E               	bcf	126,6,c	;volatile
  1226                           
  1227                           ;movement.c: 67:     TRISGbits.TRISG1 = 0;
  1228  00435E  9287               	bcf	135,1,c	;volatile
  1229                           
  1230                           ;movement.c: 68:     TRISFbits.TRISF7 = 0;
  1231  004360  9E86               	bcf	134,7,c	;volatile
  1232                           
  1233                           ;movement.c: 69:     TRISAbits.TRISA4 = 0;
  1234  004362  9881               	bcf	129,4,c	;volatile
  1235                           
  1236                           ;movement.c: 70:     LATGbits.LATG1 = 1;
  1237  004364  827F               	bsf	127,1,c	;volatile
  1238                           
  1239                           ;movement.c: 71:     LATFbits.LATF7 = 1;
  1240  004366  8E7E               	bsf	126,7,c	;volatile
  1241                           
  1242                           ;movement.c: 72:     LATAbits.LATA4 = 1;
  1243  004368  8879               	bsf	121,4,c	;volatile
  1244  00436A                     
  1245                           ; BSR set to: 14
  1246  00436A  0012               	return		;funcret
  1247  00436C                     __end_of_pin_init:
  1248                           	callstack 0
  1249                           
  1250 ;; *************** function _initUSART4 *****************
  1251 ;; Defined at:
  1252 ;;		line 4 in file "serial.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used: 1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text2
  1280  004332                     __ptext2:
  1281                           	callstack 0
  1282  004332                     _initUSART4:
  1283                           	callstack 30
  1284  004332                     
  1285                           ;serial.c: 8:     RC0PPS = 0x12;
  1286  004332  0E12               	movlw	18
  1287  004334  010E               	movlb	14	; () banked
  1288  004336  6F62               	movwf	98,b	;volatile
  1289                           
  1290                           ;serial.c: 9:     RX4PPS = 0x11;
  1291  004338  0E11               	movlw	17
  1292  00433A  6F15               	movwf	21,b	;volatile
  1293  00433C                     
  1294                           ; BSR set to: 14
  1295                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1296  00433C  97E9               	bcf	233,3,b	;volatile
  1297  00433E                     
  1298                           ; BSR set to: 14
  1299                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1300  00433E  95E8               	bcf	232,2,b	;volatile
  1301                           
  1302                           ;serial.c: 13:     SP4BRGL = 51;
  1303  004340  0E33               	movlw	51
  1304  004342  6FE5               	movwf	229,b	;volatile
  1305                           
  1306                           ;serial.c: 15:     SP4BRGH = 0;
  1307  004344  0E00               	movlw	0
  1308  004346  6FE6               	movwf	230,b	;volatile
  1309  004348                     
  1310                           ; BSR set to: 14
  1311                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1312  004348  89E7               	bsf	231,4,b	;volatile
  1313  00434A                     
  1314                           ; BSR set to: 14
  1315                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1316  00434A  8BE8               	bsf	232,5,b	;volatile
  1317  00434C                     
  1318                           ; BSR set to: 14
  1319                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1320  00434C  8FE7               	bsf	231,7,b	;volatile
  1321  00434E                     
  1322                           ; BSR set to: 14
  1323  00434E  0012               	return		;funcret
  1324  004350                     __end_of_initUSART4:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _initDCmotors_parameter *****************
  1328 ;; Defined at:
  1329 ;;		line 42 in file "dc_motor.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1332 ;;		 -> main@motorL(10), 
  1333 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1334 ;;		 -> main@motorR(10), 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;Total ram usage:        4 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text3
  1360  00399E                     __ptext3:
  1361                           	callstack 0
  1362  00399E                     _initDCmotors_parameter:
  1363                           	callstack 30
  1364  00399E                     
  1365                           ;dc_motor.c: 44:     motorL->power = 0;
  1366  00399E  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1367  0039A2  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1368  0039A6  0E00               	movlw	0
  1369  0039A8  6EDF               	movwf	indf2,c
  1370  0039AA                     
  1371                           ;dc_motor.c: 45:     motorL->direction = 1;
  1372  0039AA  EE20 F001          	lfsr	2,1
  1373  0039AE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1374  0039B0  26D9               	addwf	fsr2l,f,c
  1375  0039B2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1376  0039B4  22DA               	addwfc	fsr2h,f,c
  1377  0039B6  0E01               	movlw	1
  1378  0039B8  6EDF               	movwf	indf2,c
  1379  0039BA                     
  1380                           ;dc_motor.c: 46:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1381  0039BA  EE20 F002          	lfsr	2,2
  1382  0039BE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1383  0039C0  26D9               	addwf	fsr2l,f,c
  1384  0039C2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1385  0039C4  22DA               	addwfc	fsr2h,f,c
  1386  0039C6  0EA3               	movlw	163
  1387  0039C8  6EDE               	movwf	postinc2,c
  1388  0039CA  0E0F               	movlw	15
  1389  0039CC  6EDD               	movwf	postdec2,c
  1390  0039CE                     
  1391                           ;dc_motor.c: 47:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1392  0039CE  EE20 F004          	lfsr	2,4
  1393  0039D2  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1394  0039D4  26D9               	addwf	fsr2l,f,c
  1395  0039D6  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1396  0039D8  22DA               	addwfc	fsr2h,f,c
  1397  0039DA  0E7D               	movlw	125
  1398  0039DC  6EDE               	movwf	postinc2,c
  1399  0039DE  0E0F               	movlw	15
  1400  0039E0  6EDD               	movwf	postdec2,c
  1401  0039E2                     
  1402                           ;dc_motor.c: 48:     motorL->dir_pin = 4;
  1403  0039E2  EE20 F006          	lfsr	2,6
  1404  0039E6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1405  0039E8  26D9               	addwf	fsr2l,f,c
  1406  0039EA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1407  0039EC  22DA               	addwfc	fsr2h,f,c
  1408  0039EE  0E04               	movlw	4
  1409  0039F0  6EDF               	movwf	indf2,c
  1410  0039F2                     
  1411                           ;dc_motor.c: 49:     motorL->PWMperiod = 199;
  1412  0039F2  EE20 F007          	lfsr	2,7
  1413  0039F6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1414  0039F8  26D9               	addwf	fsr2l,f,c
  1415  0039FA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1416  0039FC  22DA               	addwfc	fsr2h,f,c
  1417  0039FE  0EC7               	movlw	199
  1418  003A00  6EDE               	movwf	postinc2,c
  1419  003A02  0E00               	movlw	0
  1420  003A04  6EDD               	movwf	postdec2,c
  1421  003A06                     
  1422                           ;dc_motor.c: 52:     motorR->power = 0;
  1423  003A06  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1424  003A0A  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1425  003A0E  0E00               	movlw	0
  1426  003A10  6EDF               	movwf	indf2,c
  1427                           
  1428                           ;dc_motor.c: 53:     motorR->direction = 1;
  1429  003A12  EE20 F001          	lfsr	2,1
  1430  003A16  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1431  003A18  26D9               	addwf	fsr2l,f,c
  1432  003A1A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1433  003A1C  22DA               	addwfc	fsr2h,f,c
  1434  003A1E  0E01               	movlw	1
  1435  003A20  6EDF               	movwf	indf2,c
  1436                           
  1437                           ;dc_motor.c: 54:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1438  003A22  EE20 F002          	lfsr	2,2
  1439  003A26  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1440  003A28  26D9               	addwf	fsr2l,f,c
  1441  003A2A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1442  003A2C  22DA               	addwfc	fsr2h,f,c
  1443  003A2E  0EA0               	movlw	160
  1444  003A30  6EDE               	movwf	postinc2,c
  1445  003A32  0E0F               	movlw	15
  1446  003A34  6EDD               	movwf	postdec2,c
  1447                           
  1448                           ;dc_motor.c: 55:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1449  003A36  EE20 F004          	lfsr	2,4
  1450  003A3A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1451  003A3C  26D9               	addwf	fsr2l,f,c
  1452  003A3E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1453  003A40  22DA               	addwfc	fsr2h,f,c
  1454  003A42  0E7F               	movlw	127
  1455  003A44  6EDE               	movwf	postinc2,c
  1456  003A46  0E0F               	movlw	15
  1457  003A48  6EDD               	movwf	postdec2,c
  1458                           
  1459                           ;dc_motor.c: 56:     motorR->dir_pin = 6;
  1460  003A4A  EE20 F006          	lfsr	2,6
  1461  003A4E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1462  003A50  26D9               	addwf	fsr2l,f,c
  1463  003A52  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1464  003A54  22DA               	addwfc	fsr2h,f,c
  1465  003A56  0E06               	movlw	6
  1466  003A58  6EDF               	movwf	indf2,c
  1467                           
  1468                           ;dc_motor.c: 57:     motorR->PWMperiod = 199;
  1469  003A5A  EE20 F007          	lfsr	2,7
  1470  003A5E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1471  003A60  26D9               	addwf	fsr2l,f,c
  1472  003A62  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1473  003A64  22DA               	addwfc	fsr2h,f,c
  1474  003A66  0EC7               	movlw	199
  1475  003A68  6EDE               	movwf	postinc2,c
  1476  003A6A  0E00               	movlw	0
  1477  003A6C  6EDD               	movwf	postdec2,c
  1478  003A6E  0012               	return		;funcret
  1479  003A70                     __end_of_initDCmotors_parameter:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _initDCmotorsPWM *****************
  1483 ;; Defined at:
  1484 ;;		line 12 in file "dc_motor.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  PWMperiod       2    0[COMRAM] int 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;Total ram usage:        2 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text4
  1512  003FF8                     __ptext4:
  1513                           	callstack 0
  1514  003FF8                     _initDCmotorsPWM:
  1515                           	callstack 30
  1516  003FF8                     
  1517                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  1518  003FF8  9485               	bcf	133,2,c	;volatile
  1519                           
  1520                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  1521  003FFA  9E83               	bcf	131,7,c	;volatile
  1522                           
  1523                           ;dc_motor.c: 17:     TRISGbits.TRISG6=0;
  1524  003FFC  9C87               	bcf	135,6,c	;volatile
  1525                           
  1526                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  1527  003FFE  9885               	bcf	133,4,c	;volatile
  1528                           
  1529                           ;dc_motor.c: 19:     LATEbits.LATE2=0;
  1530  004000  947D               	bcf	125,2,c	;volatile
  1531                           
  1532                           ;dc_motor.c: 20:     LATCbits.LATC7=0;
  1533  004002  9E7B               	bcf	123,7,c	;volatile
  1534                           
  1535                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  1536  004004  9C7F               	bcf	127,6,c	;volatile
  1537                           
  1538                           ;dc_motor.c: 22:     LATEbits.LATE4=0;
  1539  004006  987D               	bcf	125,4,c	;volatile
  1540  004008                     
  1541                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b011;
  1542  004008  50BD               	movf	189,w,c	;volatile
  1543  00400A  0B8F               	andlw	-113
  1544  00400C  0930               	iorlw	48
  1545  00400E  6EBD               	movwf	189,c	;volatile
  1546                           
  1547                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  1548  004010  0EE0               	movlw	-32
  1549  004012  16BE               	andwf	190,f,c	;volatile
  1550                           
  1551                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  1552  004014  50BF               	movf	191,w,c	;volatile
  1553  004016  0BF0               	andlw	-16
  1554  004018  0901               	iorlw	1
  1555  00401A  6EBF               	movwf	191,c	;volatile
  1556                           
  1557                           ;dc_motor.c: 30:     T2PR=200-1;
  1558  00401C  0EC7               	movlw	199
  1559  00401E  6EBC               	movwf	188,c	;volatile
  1560  004020                     
  1561                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  1562  004020  8EBD               	bsf	189,7,c	;volatile
  1563                           
  1564                           ;dc_motor.c: 33:     RE2PPS=0x0A;
  1565  004022  0E0A               	movlw	10
  1566  004024  010E               	movlb	14	; () banked
  1567  004026  6F74               	movwf	116,b	;volatile
  1568                           
  1569                           ;dc_motor.c: 34:     RC7PPS=0x0B;
  1570  004028  0E0B               	movlw	11
  1571  00402A  6F69               	movwf	105,b	;volatile
  1572                           
  1573                           ;dc_motor.c: 36:     PWM6DCH=0;
  1574  00402C  0E00               	movlw	0
  1575  00402E  6EA3               	movwf	163,c	;volatile
  1576                           
  1577                           ;dc_motor.c: 37:     PWM7DCH=0;
  1578  004030  0E00               	movlw	0
  1579  004032  6EA0               	movwf	160,c	;volatile
  1580  004034                     
  1581                           ; BSR set to: 14
  1582                           ;dc_motor.c: 39:     PWM6CONbits.EN = 1;
  1583  004034  8EA4               	bsf	164,7,c	;volatile
  1584  004036                     
  1585                           ; BSR set to: 14
  1586                           ;dc_motor.c: 40:     PWM7CONbits.EN = 1;
  1587  004036  8EA1               	bsf	161,7,c	;volatile
  1588  004038                     
  1589                           ; BSR set to: 14
  1590  004038  0012               	return		;funcret
  1591  00403A                     __end_of_initDCmotorsPWM:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _detect_color *****************
  1595 ;; Defined at:
  1596 ;;		line 226 in file "color.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1599 ;;		 -> main@rgb(8), 
  1600 ;;  w               2   18[BANK0 ] PTR struct white_card
  1601 ;;		 -> main@white(18), 
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  BG              2   46[BANK0 ] unsigned int 
  1604 ;;  BR              2   44[BANK0 ] unsigned int 
  1605 ;;  GC_REAL         2   42[BANK0 ] unsigned int 
  1606 ;;  GR_REAL         2   40[BANK0 ] unsigned int 
  1607 ;;  BB              2   38[BANK0 ] unsigned int 
  1608 ;;  RR              2   36[BANK0 ] unsigned int 
  1609 ;;  GG              2   34[BANK0 ] unsigned int 
  1610 ;;  GR              2   32[BANK0 ] unsigned int 
  1611 ;;  GB              2   30[BANK0 ] unsigned int 
  1612 ;;  RB              2   28[BANK0 ] unsigned int 
  1613 ;;  RG              2   26[BANK0 ] unsigned int 
  1614 ;;  BC              2   24[BANK0 ] unsigned int 
  1615 ;;  color           1   48[BANK0 ] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      unsigned char 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;Total ram usage:       37 bytes
  1630 ;; Hardware stack levels used: 1
  1631 ;; Hardware stack levels required when called: 4
  1632 ;; This function calls:
  1633 ;;		_LED_B
  1634 ;;		_LED_G
  1635 ;;		_LED_R
  1636 ;;		___fldiv
  1637 ;;		___flmul
  1638 ;;		___xxtofl
  1639 ;;		_compare
  1640 ;;		_lroundf
  1641 ;;		_read_color
  1642 ;; This function is called by:
  1643 ;;		_main
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text5
  1648  000E54                     __ptext5:
  1649                           	callstack 0
  1650  000E54                     _detect_color:
  1651                           	callstack 26
  1652  000E54  0E00               	movlw	0
  1653  000E56  0100               	movlb	0	; () banked
  1654  000E58  6F7B               	movwf	(detect_color@RG+1)& (0+255),b
  1655  000E5A  0E00               	movlw	0
  1656  000E5C  6F7A               	movwf	detect_color@RG& (0+255),b
  1657  000E5E  0E00               	movlw	0
  1658  000E60  6F7D               	movwf	(detect_color@RB+1)& (0+255),b
  1659  000E62  0E00               	movlw	0
  1660  000E64  6F7C               	movwf	detect_color@RB& (0+255),b
  1661  000E66  0E00               	movlw	0
  1662  000E68  6F81               	movwf	(detect_color@GR+1)& (0+255),b
  1663  000E6A  0E00               	movlw	0
  1664  000E6C  6F80               	movwf	detect_color@GR& (0+255),b
  1665  000E6E  0E00               	movlw	0
  1666  000E70  6F83               	movwf	(detect_color@GG+1)& (0+255),b
  1667  000E72  0E00               	movlw	0
  1668  000E74  6F82               	movwf	detect_color@GG& (0+255),b
  1669  000E76  0E00               	movlw	0
  1670  000E78  6F7F               	movwf	(detect_color@GB+1)& (0+255),b
  1671  000E7A  0E00               	movlw	0
  1672  000E7C  6F7E               	movwf	detect_color@GB& (0+255),b
  1673  000E7E  0E00               	movlw	0
  1674  000E80  6F8D               	movwf	(detect_color@BR+1)& (0+255),b
  1675  000E82  0E00               	movlw	0
  1676  000E84  6F8C               	movwf	detect_color@BR& (0+255),b
  1677  000E86  0E00               	movlw	0
  1678  000E88  6F8F               	movwf	(detect_color@BG+1)& (0+255),b
  1679  000E8A  0E00               	movlw	0
  1680  000E8C  6F8E               	movwf	detect_color@BG& (0+255),b
  1681  000E8E  0E00               	movlw	0
  1682  000E90  6F87               	movwf	(detect_color@BB+1)& (0+255),b
  1683  000E92  0E00               	movlw	0
  1684  000E94  6F86               	movwf	detect_color@BB& (0+255),b
  1685  000E96  0E00               	movlw	0
  1686  000E98  6F89               	movwf	(detect_color@GR_REAL+1)& (0+255),b
  1687  000E9A  0E00               	movlw	0
  1688  000E9C  6F88               	movwf	detect_color@GR_REAL& (0+255),b
  1689  000E9E  0E00               	movlw	0
  1690  000EA0  6F8B               	movwf	(detect_color@GC_REAL+1)& (0+255),b
  1691  000EA2  0E00               	movlw	0
  1692  000EA4  6F8A               	movwf	detect_color@GC_REAL& (0+255),b
  1693  000EA6  0E00               	movlw	0
  1694  000EA8  6F79               	movwf	(detect_color@BC+1)& (0+255),b
  1695  000EAA  0E00               	movlw	0
  1696  000EAC  6F78               	movwf	detect_color@BC& (0+255),b
  1697                           
  1698                           ;color.c: 231:     unsigned char color = 0;
  1699  000EAE  0E00               	movlw	0
  1700  000EB0  6F90               	movwf	detect_color@color& (0+255),b
  1701  000EB2                     
  1702                           ; BSR set to: 0
  1703                           ;color.c: 233:     LED_R();
  1704  000EB2  EC69  F021         	call	_LED_R	;wreg free
  1705  000EB6                     
  1706                           ;color.c: 234:     read_color(m);
  1707  000EB6  C070  F00C         	movff	detect_color@m,read_color@m
  1708  000EBA  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1709  000EBE  ECBF  F01E         	call	_read_color	;wreg free
  1710  000EC2                     
  1711                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1712  000EC2  C072  FFD9         	movff	detect_color@w,fsr2l
  1713  000EC6  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1714  000ECA  CFDE F074          	movff	postinc2,??_detect_color
  1715  000ECE  CFDD F075          	movff	postdec2,??_detect_color+1
  1716  000ED2  C074  F001         	movff	??_detect_color,___xxtofl@val
  1717  000ED6  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1718  000EDA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1719  000EDC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1720  000EDE  0E00               	movlw	0
  1721  000EE0  ECD0  F016         	call	___xxtofl
  1722  000EE4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1723  000EE8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1724  000EEC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1725  000EF0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1726  000EF4  C070  FFD9         	movff	detect_color@m,fsr2l
  1727  000EF8  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1728  000EFC  CFDE F076          	movff	postinc2,??_detect_color+2
  1729  000F00  CFDD F077          	movff	postdec2,??_detect_color+3
  1730  000F04  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1731  000F08  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1732  000F0C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1733  000F0E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1734  000F10  0E00               	movlw	0
  1735  000F12  ECD0  F016         	call	___xxtofl
  1736  000F16  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1737  000F1A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1738  000F1E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1739  000F22  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1740  000F26  EC91  F013         	call	___fldiv	;wreg free
  1741  000F2A  C00F  F028         	movff	?___fldiv,___flmul@b
  1742  000F2E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1743  000F32  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1744  000F36  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1745  000F3A  0E00               	movlw	0
  1746  000F3C  6E2C               	movwf	___flmul@a^0,c
  1747  000F3E  0E00               	movlw	0
  1748  000F40  6E2D               	movwf	(___flmul@a+1)^0,c
  1749  000F42  0EC8               	movlw	200
  1750  000F44  6E2E               	movwf	(___flmul@a+2)^0,c
  1751  000F46  0E42               	movlw	66
  1752  000F48  6E2F               	movwf	(___flmul@a+3)^0,c
  1753  000F4A  ECA5  F00F         	call	___flmul	;wreg free
  1754  000F4E  C028  F091         	movff	?___flmul,_detect_color$2736
  1755  000F52  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1756  000F56  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1757  000F5A  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1758  000F5E                     
  1759                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1760  000F5E  C091  F066         	movff	_detect_color$2736,lroundf@x
  1761  000F62  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1762  000F66  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1763  000F6A  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1764  000F6E  EC7D  F020         	call	_lroundf	;wreg free
  1765  000F72  C066  F084         	movff	?_lroundf,detect_color@RR
  1766  000F76  C067  F085         	movff	?_lroundf+1,detect_color@RR+1
  1767  000F7A  0100               	movlb	0	; () banked
  1768  000F7C  EE20 F002          	lfsr	2,2
  1769  000F80  5172               	movf	detect_color@w& (0+255),w,b
  1770  000F82  26D9               	addwf	fsr2l,f,c
  1771  000F84  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1772  000F86  22DA               	addwfc	fsr2h,f,c
  1773  000F88  CFDE F074          	movff	postinc2,??_detect_color
  1774  000F8C  CFDD F075          	movff	postdec2,??_detect_color+1
  1775  000F90  C074  F001         	movff	??_detect_color,___xxtofl@val
  1776  000F94  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1777  000F98  6A03               	clrf	(___xxtofl@val+2)^0,c
  1778  000F9A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1779  000F9C  0E00               	movlw	0
  1780  000F9E  ECD0  F016         	call	___xxtofl
  1781  000FA2  C001  F013         	movff	?___xxtofl,___fldiv@a
  1782  000FA6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1783  000FAA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1784  000FAE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1785  000FB2  0100               	movlb	0	; () banked
  1786  000FB4  EE20 F002          	lfsr	2,2
  1787  000FB8  5170               	movf	detect_color@m& (0+255),w,b
  1788  000FBA  26D9               	addwf	fsr2l,f,c
  1789  000FBC  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1790  000FBE  22DA               	addwfc	fsr2h,f,c
  1791  000FC0  CFDE F076          	movff	postinc2,??_detect_color+2
  1792  000FC4  CFDD F077          	movff	postdec2,??_detect_color+3
  1793  000FC8  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1794  000FCC  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1795  000FD0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1796  000FD2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1797  000FD4  0E00               	movlw	0
  1798  000FD6  ECD0  F016         	call	___xxtofl
  1799  000FDA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1800  000FDE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1801  000FE2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1802  000FE6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1803  000FEA  EC91  F013         	call	___fldiv	;wreg free
  1804  000FEE  C00F  F028         	movff	?___fldiv,___flmul@b
  1805  000FF2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1806  000FF6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1807  000FFA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1808  000FFE  0E00               	movlw	0
  1809  001000  6E2C               	movwf	___flmul@a^0,c
  1810  001002  0E00               	movlw	0
  1811  001004  6E2D               	movwf	(___flmul@a+1)^0,c
  1812  001006  0EC8               	movlw	200
  1813  001008  6E2E               	movwf	(___flmul@a+2)^0,c
  1814  00100A  0E42               	movlw	66
  1815  00100C  6E2F               	movwf	(___flmul@a+3)^0,c
  1816  00100E  ECA5  F00F         	call	___flmul	;wreg free
  1817  001012  C028  F091         	movff	?___flmul,_detect_color$2736
  1818  001016  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1819  00101A  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1820  00101E  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1821  001022  C091  F066         	movff	_detect_color$2736,lroundf@x
  1822  001026  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1823  00102A  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1824  00102E  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1825  001032  EC7D  F020         	call	_lroundf	;wreg free
  1826  001036  0100               	movlb	0	; () banked
  1827  001038  EE20 F004          	lfsr	2,4
  1828  00103C  5172               	movf	detect_color@w& (0+255),w,b
  1829  00103E  26D9               	addwf	fsr2l,f,c
  1830  001040  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1831  001042  22DA               	addwfc	fsr2h,f,c
  1832  001044  CFDE F074          	movff	postinc2,??_detect_color
  1833  001048  CFDD F075          	movff	postdec2,??_detect_color+1
  1834  00104C  C074  F001         	movff	??_detect_color,___xxtofl@val
  1835  001050  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1836  001054  6A03               	clrf	(___xxtofl@val+2)^0,c
  1837  001056  6A04               	clrf	(___xxtofl@val+3)^0,c
  1838  001058  0E00               	movlw	0
  1839  00105A  ECD0  F016         	call	___xxtofl
  1840  00105E  C001  F013         	movff	?___xxtofl,___fldiv@a
  1841  001062  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1842  001066  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1843  00106A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1844  00106E  0100               	movlb	0	; () banked
  1845  001070  EE20 F004          	lfsr	2,4
  1846  001074  5170               	movf	detect_color@m& (0+255),w,b
  1847  001076  26D9               	addwf	fsr2l,f,c
  1848  001078  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1849  00107A  22DA               	addwfc	fsr2h,f,c
  1850  00107C  CFDE F076          	movff	postinc2,??_detect_color+2
  1851  001080  CFDD F077          	movff	postdec2,??_detect_color+3
  1852  001084  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1853  001088  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1854  00108C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1855  00108E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1856  001090  0E00               	movlw	0
  1857  001092  ECD0  F016         	call	___xxtofl
  1858  001096  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1859  00109A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1860  00109E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1861  0010A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1862  0010A6  EC91  F013         	call	___fldiv	;wreg free
  1863  0010AA  C00F  F028         	movff	?___fldiv,___flmul@b
  1864  0010AE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1865  0010B2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1866  0010B6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1867  0010BA  0E00               	movlw	0
  1868  0010BC  6E2C               	movwf	___flmul@a^0,c
  1869  0010BE  0E00               	movlw	0
  1870  0010C0  6E2D               	movwf	(___flmul@a+1)^0,c
  1871  0010C2  0EC8               	movlw	200
  1872  0010C4  6E2E               	movwf	(___flmul@a+2)^0,c
  1873  0010C6  0E42               	movlw	66
  1874  0010C8  6E2F               	movwf	(___flmul@a+3)^0,c
  1875  0010CA  ECA5  F00F         	call	___flmul	;wreg free
  1876  0010CE  C028  F091         	movff	?___flmul,_detect_color$2736
  1877  0010D2  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1878  0010D6  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1879  0010DA  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1880  0010DE  C091  F066         	movff	_detect_color$2736,lroundf@x
  1881  0010E2  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1882  0010E6  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1883  0010EA  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1884  0010EE  EC7D  F020         	call	_lroundf	;wreg free
  1885  0010F2                     
  1886                           ;color.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1887  0010F2  0E05               	movlw	5
  1888  0010F4  0100               	movlb	0	; () banked
  1889  0010F6  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1890  0010F8  0E0F               	movlw	15
  1891  0010FA  6F74               	movwf	??_detect_color& (0+255),b
  1892  0010FC  0EF1               	movlw	241
  1893  0010FE                     u4947:
  1894  0010FE  2EE8               	decfsz	wreg,f,c
  1895  001100  D7FE               	bra	u4947
  1896  001102  2F74               	decfsz	??_detect_color& (0+255),f,b
  1897  001104  D7FC               	bra	u4947
  1898  001106  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1899  001108  D7FA               	bra	u4947
  1900  00110A                     
  1901                           ;color.c: 238:     LED_G();
  1902  00110A  EC79  F021         	call	_LED_G	;wreg free
  1903  00110E                     
  1904                           ;color.c: 239:     read_color(m);
  1905  00110E  C070  F00C         	movff	detect_color@m,read_color@m
  1906  001112  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1907  001116  ECBF  F01E         	call	_read_color	;wreg free
  1908  00111A                     
  1909                           ;color.c: 240:     GR_REAL = m->R ; GC_REAL = m->C;
  1910  00111A  C070  FFD9         	movff	detect_color@m,fsr2l
  1911  00111E  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1912  001122  CFDE F088          	movff	postinc2,detect_color@GR_REAL
  1913  001126  CFDD F089          	movff	postdec2,detect_color@GR_REAL+1
  1914  00112A  0100               	movlb	0	; () banked
  1915  00112C  EE20 F006          	lfsr	2,6
  1916  001130  5170               	movf	detect_color@m& (0+255),w,b
  1917  001132  26D9               	addwf	fsr2l,f,c
  1918  001134  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1919  001136  22DA               	addwfc	fsr2h,f,c
  1920  001138  CFDE F08A          	movff	postinc2,detect_color@GC_REAL
  1921  00113C  CFDD F08B          	movff	postdec2,detect_color@GC_REAL+1
  1922  001140                     
  1923                           ; BSR set to: 0
  1924                           ;color.c: 241:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1925  001140  EE20 F006          	lfsr	2,6
  1926  001144  5172               	movf	detect_color@w& (0+255),w,b
  1927  001146  26D9               	addwf	fsr2l,f,c
  1928  001148  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1929  00114A  22DA               	addwfc	fsr2h,f,c
  1930  00114C  CFDE F074          	movff	postinc2,??_detect_color
  1931  001150  CFDD F075          	movff	postdec2,??_detect_color+1
  1932  001154  C074  F001         	movff	??_detect_color,___xxtofl@val
  1933  001158  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1934  00115C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1935  00115E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1936  001160  0E00               	movlw	0
  1937  001162  ECD0  F016         	call	___xxtofl
  1938  001166  C001  F013         	movff	?___xxtofl,___fldiv@a
  1939  00116A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1940  00116E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1941  001172  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1942  001176  C070  FFD9         	movff	detect_color@m,fsr2l
  1943  00117A  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1944  00117E  CFDE F076          	movff	postinc2,??_detect_color+2
  1945  001182  CFDD F077          	movff	postdec2,??_detect_color+3
  1946  001186  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1947  00118A  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1948  00118E  6A03               	clrf	(___xxtofl@val+2)^0,c
  1949  001190  6A04               	clrf	(___xxtofl@val+3)^0,c
  1950  001192  0E00               	movlw	0
  1951  001194  ECD0  F016         	call	___xxtofl
  1952  001198  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1953  00119C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1954  0011A0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1955  0011A4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1956  0011A8  EC91  F013         	call	___fldiv	;wreg free
  1957  0011AC  C00F  F028         	movff	?___fldiv,___flmul@b
  1958  0011B0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1959  0011B4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1960  0011B8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1961  0011BC  0E00               	movlw	0
  1962  0011BE  6E2C               	movwf	___flmul@a^0,c
  1963  0011C0  0E00               	movlw	0
  1964  0011C2  6E2D               	movwf	(___flmul@a+1)^0,c
  1965  0011C4  0EC8               	movlw	200
  1966  0011C6  6E2E               	movwf	(___flmul@a+2)^0,c
  1967  0011C8  0E42               	movlw	66
  1968  0011CA  6E2F               	movwf	(___flmul@a+3)^0,c
  1969  0011CC  ECA5  F00F         	call	___flmul	;wreg free
  1970  0011D0  C028  F091         	movff	?___flmul,_detect_color$2736
  1971  0011D4  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  1972  0011D8  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  1973  0011DC  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  1974  0011E0                     
  1975                           ;color.c: 241:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1976  0011E0  C091  F066         	movff	_detect_color$2736,lroundf@x
  1977  0011E4  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  1978  0011E8  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  1979  0011EC  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  1980  0011F0  EC7D  F020         	call	_lroundf	;wreg free
  1981  0011F4  C066  F080         	movff	?_lroundf,detect_color@GR
  1982  0011F8  C067  F081         	movff	?_lroundf+1,detect_color@GR+1
  1983  0011FC  0100               	movlb	0	; () banked
  1984  0011FE  EE20 F008          	lfsr	2,8
  1985  001202  5172               	movf	detect_color@w& (0+255),w,b
  1986  001204  26D9               	addwf	fsr2l,f,c
  1987  001206  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1988  001208  22DA               	addwfc	fsr2h,f,c
  1989  00120A  CFDE F074          	movff	postinc2,??_detect_color
  1990  00120E  CFDD F075          	movff	postdec2,??_detect_color+1
  1991  001212  C074  F001         	movff	??_detect_color,___xxtofl@val
  1992  001216  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1993  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1994  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1995  00121E  0E00               	movlw	0
  1996  001220  ECD0  F016         	call	___xxtofl
  1997  001224  C001  F013         	movff	?___xxtofl,___fldiv@a
  1998  001228  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1999  00122C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2000  001230  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2001  001234  0100               	movlb	0	; () banked
  2002  001236  EE20 F002          	lfsr	2,2
  2003  00123A  5170               	movf	detect_color@m& (0+255),w,b
  2004  00123C  26D9               	addwf	fsr2l,f,c
  2005  00123E  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2006  001240  22DA               	addwfc	fsr2h,f,c
  2007  001242  CFDE F076          	movff	postinc2,??_detect_color+2
  2008  001246  CFDD F077          	movff	postdec2,??_detect_color+3
  2009  00124A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2010  00124E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2011  001252  6A03               	clrf	(___xxtofl@val+2)^0,c
  2012  001254  6A04               	clrf	(___xxtofl@val+3)^0,c
  2013  001256  0E00               	movlw	0
  2014  001258  ECD0  F016         	call	___xxtofl
  2015  00125C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2016  001260  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2017  001264  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2018  001268  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2019  00126C  EC91  F013         	call	___fldiv	;wreg free
  2020  001270  C00F  F028         	movff	?___fldiv,___flmul@b
  2021  001274  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2022  001278  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2023  00127C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2024  001280  0E00               	movlw	0
  2025  001282  6E2C               	movwf	___flmul@a^0,c
  2026  001284  0E00               	movlw	0
  2027  001286  6E2D               	movwf	(___flmul@a+1)^0,c
  2028  001288  0EC8               	movlw	200
  2029  00128A  6E2E               	movwf	(___flmul@a+2)^0,c
  2030  00128C  0E42               	movlw	66
  2031  00128E  6E2F               	movwf	(___flmul@a+3)^0,c
  2032  001290  ECA5  F00F         	call	___flmul	;wreg free
  2033  001294  C028  F091         	movff	?___flmul,_detect_color$2736
  2034  001298  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2035  00129C  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2036  0012A0  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2037  0012A4  C091  F066         	movff	_detect_color$2736,lroundf@x
  2038  0012A8  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2039  0012AC  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2040  0012B0  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2041  0012B4  EC7D  F020         	call	_lroundf	;wreg free
  2042  0012B8  C066  F082         	movff	?_lroundf,detect_color@GG
  2043  0012BC  C067  F083         	movff	?_lroundf+1,detect_color@GG+1
  2044  0012C0  0100               	movlb	0	; () banked
  2045  0012C2  EE20 F00A          	lfsr	2,10
  2046  0012C6  5172               	movf	detect_color@w& (0+255),w,b
  2047  0012C8  26D9               	addwf	fsr2l,f,c
  2048  0012CA  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2049  0012CC  22DA               	addwfc	fsr2h,f,c
  2050  0012CE  CFDE F074          	movff	postinc2,??_detect_color
  2051  0012D2  CFDD F075          	movff	postdec2,??_detect_color+1
  2052  0012D6  C074  F001         	movff	??_detect_color,___xxtofl@val
  2053  0012DA  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2054  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2055  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2056  0012E2  0E00               	movlw	0
  2057  0012E4  ECD0  F016         	call	___xxtofl
  2058  0012E8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2059  0012EC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2060  0012F0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2061  0012F4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2062  0012F8  0100               	movlb	0	; () banked
  2063  0012FA  EE20 F004          	lfsr	2,4
  2064  0012FE  5170               	movf	detect_color@m& (0+255),w,b
  2065  001300  26D9               	addwf	fsr2l,f,c
  2066  001302  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2067  001304  22DA               	addwfc	fsr2h,f,c
  2068  001306  CFDE F076          	movff	postinc2,??_detect_color+2
  2069  00130A  CFDD F077          	movff	postdec2,??_detect_color+3
  2070  00130E  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2071  001312  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2072  001316  6A03               	clrf	(___xxtofl@val+2)^0,c
  2073  001318  6A04               	clrf	(___xxtofl@val+3)^0,c
  2074  00131A  0E00               	movlw	0
  2075  00131C  ECD0  F016         	call	___xxtofl
  2076  001320  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2077  001324  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2078  001328  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2079  00132C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2080  001330  EC91  F013         	call	___fldiv	;wreg free
  2081  001334  C00F  F028         	movff	?___fldiv,___flmul@b
  2082  001338  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2083  00133C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2084  001340  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2085  001344  0E00               	movlw	0
  2086  001346  6E2C               	movwf	___flmul@a^0,c
  2087  001348  0E00               	movlw	0
  2088  00134A  6E2D               	movwf	(___flmul@a+1)^0,c
  2089  00134C  0EC8               	movlw	200
  2090  00134E  6E2E               	movwf	(___flmul@a+2)^0,c
  2091  001350  0E42               	movlw	66
  2092  001352  6E2F               	movwf	(___flmul@a+3)^0,c
  2093  001354  ECA5  F00F         	call	___flmul	;wreg free
  2094  001358  C028  F091         	movff	?___flmul,_detect_color$2736
  2095  00135C  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2096  001360  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2097  001364  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2098  001368  C091  F066         	movff	_detect_color$2736,lroundf@x
  2099  00136C  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2100  001370  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2101  001374  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2102  001378  EC7D  F020         	call	_lroundf	;wreg free
  2103  00137C                     
  2104                           ;color.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2105  00137C  0E05               	movlw	5
  2106  00137E  0100               	movlb	0	; () banked
  2107  001380  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2108  001382  0E0F               	movlw	15
  2109  001384  6F74               	movwf	??_detect_color& (0+255),b
  2110  001386  0EF1               	movlw	241
  2111  001388                     u4957:
  2112  001388  2EE8               	decfsz	wreg,f,c
  2113  00138A  D7FE               	bra	u4957
  2114  00138C  2F74               	decfsz	??_detect_color& (0+255),f,b
  2115  00138E  D7FC               	bra	u4957
  2116  001390  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2117  001392  D7FA               	bra	u4957
  2118  001394                     
  2119                           ;color.c: 244:     LED_B();
  2120  001394  EC89  F021         	call	_LED_B	;wreg free
  2121  001398                     
  2122                           ;color.c: 245:     read_color(m);
  2123  001398  C070  F00C         	movff	detect_color@m,read_color@m
  2124  00139C  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2125  0013A0  ECBF  F01E         	call	_read_color	;wreg free
  2126  0013A4                     
  2127                           ;color.c: 246:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2128  0013A4  0100               	movlb	0	; () banked
  2129  0013A6  EE20 F00C          	lfsr	2,12
  2130  0013AA  5172               	movf	detect_color@w& (0+255),w,b
  2131  0013AC  26D9               	addwf	fsr2l,f,c
  2132  0013AE  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2133  0013B0  22DA               	addwfc	fsr2h,f,c
  2134  0013B2  CFDE F074          	movff	postinc2,??_detect_color
  2135  0013B6  CFDD F075          	movff	postdec2,??_detect_color+1
  2136  0013BA  C074  F001         	movff	??_detect_color,___xxtofl@val
  2137  0013BE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2138  0013C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2139  0013C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2140  0013C6  0E00               	movlw	0
  2141  0013C8  ECD0  F016         	call	___xxtofl
  2142  0013CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2143  0013D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2144  0013D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2145  0013D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2146  0013DC  C070  FFD9         	movff	detect_color@m,fsr2l
  2147  0013E0  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2148  0013E4  CFDE F076          	movff	postinc2,??_detect_color+2
  2149  0013E8  CFDD F077          	movff	postdec2,??_detect_color+3
  2150  0013EC  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2151  0013F0  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2152  0013F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2153  0013F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2154  0013F8  0E00               	movlw	0
  2155  0013FA  ECD0  F016         	call	___xxtofl
  2156  0013FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2157  001402  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2158  001406  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2159  00140A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2160  00140E  EC91  F013         	call	___fldiv	;wreg free
  2161  001412  C00F  F028         	movff	?___fldiv,___flmul@b
  2162  001416  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2163  00141A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2164  00141E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2165  001422  0E00               	movlw	0
  2166  001424  6E2C               	movwf	___flmul@a^0,c
  2167  001426  0E00               	movlw	0
  2168  001428  6E2D               	movwf	(___flmul@a+1)^0,c
  2169  00142A  0EC8               	movlw	200
  2170  00142C  6E2E               	movwf	(___flmul@a+2)^0,c
  2171  00142E  0E42               	movlw	66
  2172  001430  6E2F               	movwf	(___flmul@a+3)^0,c
  2173  001432  ECA5  F00F         	call	___flmul	;wreg free
  2174  001436  C028  F091         	movff	?___flmul,_detect_color$2736
  2175  00143A  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2176  00143E  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2177  001442  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2178  001446                     
  2179                           ;color.c: 246:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2180  001446  C091  F066         	movff	_detect_color$2736,lroundf@x
  2181  00144A  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2182  00144E  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2183  001452  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2184  001456  EC7D  F020         	call	_lroundf	;wreg free
  2185  00145A  C066  F08C         	movff	?_lroundf,detect_color@BR
  2186  00145E  C067  F08D         	movff	?_lroundf+1,detect_color@BR+1
  2187  001462  0100               	movlb	0	; () banked
  2188  001464  EE20 F00E          	lfsr	2,14
  2189  001468  5172               	movf	detect_color@w& (0+255),w,b
  2190  00146A  26D9               	addwf	fsr2l,f,c
  2191  00146C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2192  00146E  22DA               	addwfc	fsr2h,f,c
  2193  001470  CFDE F074          	movff	postinc2,??_detect_color
  2194  001474  CFDD F075          	movff	postdec2,??_detect_color+1
  2195  001478  C074  F001         	movff	??_detect_color,___xxtofl@val
  2196  00147C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2197  001480  6A03               	clrf	(___xxtofl@val+2)^0,c
  2198  001482  6A04               	clrf	(___xxtofl@val+3)^0,c
  2199  001484  0E00               	movlw	0
  2200  001486  ECD0  F016         	call	___xxtofl
  2201  00148A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2202  00148E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2203  001492  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2204  001496  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2205  00149A  0100               	movlb	0	; () banked
  2206  00149C  EE20 F002          	lfsr	2,2
  2207  0014A0  5170               	movf	detect_color@m& (0+255),w,b
  2208  0014A2  26D9               	addwf	fsr2l,f,c
  2209  0014A4  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2210  0014A6  22DA               	addwfc	fsr2h,f,c
  2211  0014A8  CFDE F076          	movff	postinc2,??_detect_color+2
  2212  0014AC  CFDD F077          	movff	postdec2,??_detect_color+3
  2213  0014B0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2214  0014B4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2215  0014B8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2216  0014BA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2217  0014BC  0E00               	movlw	0
  2218  0014BE  ECD0  F016         	call	___xxtofl
  2219  0014C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2220  0014C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2221  0014CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2222  0014CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2223  0014D2  EC91  F013         	call	___fldiv	;wreg free
  2224  0014D6  C00F  F028         	movff	?___fldiv,___flmul@b
  2225  0014DA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2226  0014DE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2227  0014E2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2228  0014E6  0E00               	movlw	0
  2229  0014E8  6E2C               	movwf	___flmul@a^0,c
  2230  0014EA  0E00               	movlw	0
  2231  0014EC  6E2D               	movwf	(___flmul@a+1)^0,c
  2232  0014EE  0EC8               	movlw	200
  2233  0014F0  6E2E               	movwf	(___flmul@a+2)^0,c
  2234  0014F2  0E42               	movlw	66
  2235  0014F4  6E2F               	movwf	(___flmul@a+3)^0,c
  2236  0014F6  ECA5  F00F         	call	___flmul	;wreg free
  2237  0014FA  C028  F091         	movff	?___flmul,_detect_color$2736
  2238  0014FE  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2239  001502  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2240  001506  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2241  00150A  C091  F066         	movff	_detect_color$2736,lroundf@x
  2242  00150E  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2243  001512  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2244  001516  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2245  00151A  EC7D  F020         	call	_lroundf	;wreg free
  2246  00151E  C066  F08E         	movff	?_lroundf,detect_color@BG
  2247  001522  C067  F08F         	movff	?_lroundf+1,detect_color@BG+1
  2248  001526  0100               	movlb	0	; () banked
  2249  001528  EE20 F010          	lfsr	2,16
  2250  00152C  5172               	movf	detect_color@w& (0+255),w,b
  2251  00152E  26D9               	addwf	fsr2l,f,c
  2252  001530  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2253  001532  22DA               	addwfc	fsr2h,f,c
  2254  001534  CFDE F074          	movff	postinc2,??_detect_color
  2255  001538  CFDD F075          	movff	postdec2,??_detect_color+1
  2256  00153C  C074  F001         	movff	??_detect_color,___xxtofl@val
  2257  001540  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2258  001544  6A03               	clrf	(___xxtofl@val+2)^0,c
  2259  001546  6A04               	clrf	(___xxtofl@val+3)^0,c
  2260  001548  0E00               	movlw	0
  2261  00154A  ECD0  F016         	call	___xxtofl
  2262  00154E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2263  001552  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2264  001556  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2265  00155A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2266  00155E  0100               	movlb	0	; () banked
  2267  001560  EE20 F004          	lfsr	2,4
  2268  001564  5170               	movf	detect_color@m& (0+255),w,b
  2269  001566  26D9               	addwf	fsr2l,f,c
  2270  001568  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2271  00156A  22DA               	addwfc	fsr2h,f,c
  2272  00156C  CFDE F076          	movff	postinc2,??_detect_color+2
  2273  001570  CFDD F077          	movff	postdec2,??_detect_color+3
  2274  001574  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2275  001578  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2276  00157C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2277  00157E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2278  001580  0E00               	movlw	0
  2279  001582  ECD0  F016         	call	___xxtofl
  2280  001586  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2281  00158A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2282  00158E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2283  001592  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2284  001596  EC91  F013         	call	___fldiv	;wreg free
  2285  00159A  C00F  F028         	movff	?___fldiv,___flmul@b
  2286  00159E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2287  0015A2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2288  0015A6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2289  0015AA  0E00               	movlw	0
  2290  0015AC  6E2C               	movwf	___flmul@a^0,c
  2291  0015AE  0E00               	movlw	0
  2292  0015B0  6E2D               	movwf	(___flmul@a+1)^0,c
  2293  0015B2  0EC8               	movlw	200
  2294  0015B4  6E2E               	movwf	(___flmul@a+2)^0,c
  2295  0015B6  0E42               	movlw	66
  2296  0015B8  6E2F               	movwf	(___flmul@a+3)^0,c
  2297  0015BA  ECA5  F00F         	call	___flmul	;wreg free
  2298  0015BE  C028  F091         	movff	?___flmul,_detect_color$2736
  2299  0015C2  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2300  0015C6  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2301  0015CA  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2302  0015CE  C091  F066         	movff	_detect_color$2736,lroundf@x
  2303  0015D2  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2304  0015D6  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2305  0015DA  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2306  0015DE  EC7D  F020         	call	_lroundf	;wreg free
  2307  0015E2  C066  F086         	movff	?_lroundf,detect_color@BB
  2308  0015E6  C067  F087         	movff	?_lroundf+1,detect_color@BB+1
  2309  0015EA                     
  2310                           ;color.c: 247:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2311  0015EA  0E05               	movlw	5
  2312  0015EC  0100               	movlb	0	; () banked
  2313  0015EE  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2314  0015F0  0E0F               	movlw	15
  2315  0015F2  6F74               	movwf	??_detect_color& (0+255),b
  2316  0015F4  0EF1               	movlw	241
  2317  0015F6                     u4967:
  2318  0015F6  2EE8               	decfsz	wreg,f,c
  2319  0015F8  D7FE               	bra	u4967
  2320  0015FA  2F74               	decfsz	??_detect_color& (0+255),f,b
  2321  0015FC  D7FC               	bra	u4967
  2322  0015FE  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2323  001600  D7FA               	bra	u4967
  2324  001602                     
  2325                           ;color.c: 250:     if (compare(0, BR, 55)){
  2326  001602  0E00               	movlw	0
  2327  001604  0100               	movlb	0	; () banked
  2328  001606  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2329  001608  0E00               	movlw	0
  2330  00160A  6F6A               	movwf	compare@lower& (0+255),b
  2331  00160C  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2332  001610  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2333  001614  0E00               	movlw	0
  2334  001616  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2335  001618  0E37               	movlw	55
  2336  00161A  6F6E               	movwf	compare@upper& (0+255),b
  2337  00161C  EC9A  F020         	call	_compare	;wreg free
  2338  001620  0900               	iorlw	0
  2339  001622  B4D8               	btfsc	status,2,c
  2340  001624  EF16  F00B         	goto	u4301
  2341  001628  EF18  F00B         	goto	u4300
  2342  00162C                     u4301:
  2343  00162C  EF89  F00B         	goto	l4345
  2344  001630                     u4300:
  2345  001630                     
  2346                           ;color.c: 251:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2347  001630  C086  F001         	movff	detect_color@BB,___xxtofl@val
  2348  001634  C087  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2349  001638  6A03               	clrf	(___xxtofl@val+2)^0,c
  2350  00163A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2351  00163C  0E00               	movlw	0
  2352  00163E  ECD0  F016         	call	___xxtofl
  2353  001642  C001  F013         	movff	?___xxtofl,___fldiv@a
  2354  001646  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2355  00164A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2356  00164E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2357  001652  0100               	movlb	0	; () banked
  2358  001654  518E               	movf	detect_color@BG& (0+255),w,b
  2359  001656  2582               	addwf	detect_color@GG& (0+255),w,b
  2360  001658  6F74               	movwf	??_detect_color& (0+255),b
  2361  00165A  518F               	movf	(detect_color@BG+1)& (0+255),w,b
  2362  00165C  2183               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2363  00165E  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2364  001660  C074  F001         	movff	??_detect_color,___xxtofl@val
  2365  001664  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2366  001668  6A03               	clrf	(___xxtofl@val+2)^0,c
  2367  00166A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2368  00166C  0E00               	movlw	0
  2369  00166E  ECD0  F016         	call	___xxtofl
  2370  001672  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2371  001676  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2372  00167A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2373  00167E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2374  001682  EC91  F013         	call	___fldiv	;wreg free
  2375  001686  C00F  F028         	movff	?___fldiv,___flmul@b
  2376  00168A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2377  00168E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2378  001692  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2379  001696  0E00               	movlw	0
  2380  001698  6E2C               	movwf	___flmul@a^0,c
  2381  00169A  0E00               	movlw	0
  2382  00169C  6E2D               	movwf	(___flmul@a+1)^0,c
  2383  00169E  0E48               	movlw	72
  2384  0016A0  6E2E               	movwf	(___flmul@a+2)^0,c
  2385  0016A2  0E43               	movlw	67
  2386  0016A4  6E2F               	movwf	(___flmul@a+3)^0,c
  2387  0016A6  ECA5  F00F         	call	___flmul	;wreg free
  2388  0016AA  C028  F091         	movff	?___flmul,_detect_color$2736
  2389  0016AE  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2390  0016B2  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2391  0016B6  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2392                           
  2393                           ;color.c: 251:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2394  0016BA  0E00               	movlw	0
  2395  0016BC  0100               	movlb	0	; () banked
  2396  0016BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2397  0016C0  0E00               	movlw	0
  2398  0016C2  6F6A               	movwf	compare@lower& (0+255),b
  2399  0016C4  C091  F066         	movff	_detect_color$2736,lroundf@x
  2400  0016C8  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2401  0016CC  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2402  0016D0  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2403  0016D4  EC7D  F020         	call	_lroundf	;wreg free
  2404  0016D8  C066  F06C         	movff	?_lroundf,compare@value2compare
  2405  0016DC  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2406  0016E0  0E01               	movlw	1
  2407  0016E2  0100               	movlb	0	; () banked
  2408  0016E4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2409  0016E6  0E87               	movlw	135
  2410  0016E8  6F6E               	movwf	compare@upper& (0+255),b
  2411  0016EA  EC9A  F020         	call	_compare	;wreg free
  2412  0016EE  0900               	iorlw	0
  2413  0016F0  B4D8               	btfsc	status,2,c
  2414  0016F2  EF7D  F00B         	goto	u4311
  2415  0016F6  EF7F  F00B         	goto	u4310
  2416  0016FA                     u4311:
  2417  0016FA  EF84  F00B         	goto	l4343
  2418  0016FE                     u4310:
  2419  0016FE  0E03               	movlw	3
  2420  001700  0100               	movlb	0	; () banked
  2421  001702  6F90               	movwf	detect_color@color& (0+255),b
  2422  001704  EF52  F00C         	goto	l4371
  2423  001708                     l4343:
  2424  001708  0E02               	movlw	2
  2425  00170A  0100               	movlb	0	; () banked
  2426  00170C  6F90               	movwf	detect_color@color& (0+255),b
  2427  00170E  EF52  F00C         	goto	l4371
  2428  001712                     l4345:
  2429                           
  2430                           ;color.c: 255:         if (compare(0, BG, 75)){
  2431  001712  0E00               	movlw	0
  2432  001714  0100               	movlb	0	; () banked
  2433  001716  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2434  001718  0E00               	movlw	0
  2435  00171A  6F6A               	movwf	compare@lower& (0+255),b
  2436  00171C  C08E  F06C         	movff	detect_color@BG,compare@value2compare
  2437  001720  C08F  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2438  001724  0E00               	movlw	0
  2439  001726  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2440  001728  0E4B               	movlw	75
  2441  00172A  6F6E               	movwf	compare@upper& (0+255),b
  2442  00172C  EC9A  F020         	call	_compare	;wreg free
  2443  001730  0900               	iorlw	0
  2444  001732  B4D8               	btfsc	status,2,c
  2445  001734  EF9E  F00B         	goto	u4321
  2446  001738  EFA0  F00B         	goto	u4320
  2447  00173C                     u4321:
  2448  00173C  EF19  F00C         	goto	l4357
  2449  001740                     u4320:
  2450  001740                     
  2451                           ;color.c: 256:             if (compare(0, lroundf((float)RR/BG * 200), 285)){
  2452  001740  C08E  F001         	movff	detect_color@BG,___xxtofl@val
  2453  001744  C08F  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2454  001748  6A03               	clrf	(___xxtofl@val+2)^0,c
  2455  00174A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2456  00174C  0E00               	movlw	0
  2457  00174E  ECD0  F016         	call	___xxtofl
  2458  001752  C001  F013         	movff	?___xxtofl,___fldiv@a
  2459  001756  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2460  00175A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2461  00175E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2462  001762  C084  F001         	movff	detect_color@RR,___xxtofl@val
  2463  001766  C085  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2464  00176A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2465  00176C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2466  00176E  0E00               	movlw	0
  2467  001770  ECD0  F016         	call	___xxtofl
  2468  001774  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2469  001778  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2470  00177C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2471  001780  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2472  001784  EC91  F013         	call	___fldiv	;wreg free
  2473  001788  C00F  F028         	movff	?___fldiv,___flmul@b
  2474  00178C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2475  001790  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2476  001794  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2477  001798  0E00               	movlw	0
  2478  00179A  6E2C               	movwf	___flmul@a^0,c
  2479  00179C  0E00               	movlw	0
  2480  00179E  6E2D               	movwf	(___flmul@a+1)^0,c
  2481  0017A0  0E48               	movlw	72
  2482  0017A2  6E2E               	movwf	(___flmul@a+2)^0,c
  2483  0017A4  0E43               	movlw	67
  2484  0017A6  6E2F               	movwf	(___flmul@a+3)^0,c
  2485  0017A8  ECA5  F00F         	call	___flmul	;wreg free
  2486  0017AC  C028  F091         	movff	?___flmul,_detect_color$2736
  2487  0017B0  C029  F092         	movff	?___flmul+1,_detect_color$2736+1
  2488  0017B4  C02A  F093         	movff	?___flmul+2,_detect_color$2736+2
  2489  0017B8  C02B  F094         	movff	?___flmul+3,_detect_color$2736+3
  2490                           
  2491                           ;color.c: 256:             if (compare(0, lroundf((float)RR/BG * 200), 285)){
  2492  0017BC  0E00               	movlw	0
  2493  0017BE  0100               	movlb	0	; () banked
  2494  0017C0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2495  0017C2  0E00               	movlw	0
  2496  0017C4  6F6A               	movwf	compare@lower& (0+255),b
  2497  0017C6  C091  F066         	movff	_detect_color$2736,lroundf@x
  2498  0017CA  C092  F067         	movff	_detect_color$2736+1,lroundf@x+1
  2499  0017CE  C093  F068         	movff	_detect_color$2736+2,lroundf@x+2
  2500  0017D2  C094  F069         	movff	_detect_color$2736+3,lroundf@x+3
  2501  0017D6  EC7D  F020         	call	_lroundf	;wreg free
  2502  0017DA  C066  F06C         	movff	?_lroundf,compare@value2compare
  2503  0017DE  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2504  0017E2  0E01               	movlw	1
  2505  0017E4  0100               	movlb	0	; () banked
  2506  0017E6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2507  0017E8  0E1D               	movlw	29
  2508  0017EA  6F6E               	movwf	compare@upper& (0+255),b
  2509  0017EC  EC9A  F020         	call	_compare	;wreg free
  2510  0017F0  0900               	iorlw	0
  2511  0017F2  B4D8               	btfsc	status,2,c
  2512  0017F4  EFFE  F00B         	goto	u4331
  2513  0017F8  EF00  F00C         	goto	u4330
  2514  0017FC                     u4331:
  2515  0017FC  EF14  F00C         	goto	l4355
  2516  001800                     u4330:
  2517  001800                     
  2518                           ;color.c: 257:                 if (GR > 90){color = 6;}
  2519  001800  0100               	movlb	0	; () banked
  2520  001802  5181               	movf	(detect_color@GR+1)& (0+255),w,b
  2521  001804  E109               	bnz	u4340
  2522  001806  0E5B               	movlw	91
  2523  001808  5D80               	subwf	detect_color@GR& (0+255),w,b
  2524  00180A  A0D8               	btfss	status,0,c
  2525  00180C  EF0A  F00C         	goto	u4341
  2526  001810  EF0C  F00C         	goto	u4340
  2527  001814                     u4341:
  2528  001814  EF10  F00C         	goto	l4353
  2529  001818                     u4340:
  2530  001818                     
  2531                           ; BSR set to: 0
  2532  001818  0E06               	movlw	6
  2533  00181A  6F90               	movwf	detect_color@color& (0+255),b
  2534  00181C  EF52  F00C         	goto	l4371
  2535  001820                     l4353:
  2536                           
  2537                           ; BSR set to: 0
  2538  001820  0E00               	movlw	0
  2539  001822  6F90               	movwf	detect_color@color& (0+255),b
  2540  001824  EF52  F00C         	goto	l4371
  2541  001828                     l4355:
  2542  001828  0E01               	movlw	1
  2543  00182A  0100               	movlb	0	; () banked
  2544  00182C  6F90               	movwf	detect_color@color& (0+255),b
  2545  00182E  EF52  F00C         	goto	l4371
  2546  001832                     l4357:
  2547                           
  2548                           ;color.c: 263:             if (compare(0, BR, 90)){
  2549  001832  0E00               	movlw	0
  2550  001834  0100               	movlb	0	; () banked
  2551  001836  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2552  001838  0E00               	movlw	0
  2553  00183A  6F6A               	movwf	compare@lower& (0+255),b
  2554  00183C  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2555  001840  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2556  001844  0E00               	movlw	0
  2557  001846  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2558  001848  0E5A               	movlw	90
  2559  00184A  6F6E               	movwf	compare@upper& (0+255),b
  2560  00184C  EC9A  F020         	call	_compare	;wreg free
  2561  001850  0900               	iorlw	0
  2562  001852  B4D8               	btfsc	status,2,c
  2563  001854  EF2E  F00C         	goto	u4351
  2564  001858  EF30  F00C         	goto	u4350
  2565  00185C                     u4351:
  2566  00185C  EF40  F00C         	goto	l4365
  2567  001860                     u4350:
  2568  001860                     
  2569                           ;color.c: 264:                 if (BG > 90){color = 7;}
  2570  001860  0100               	movlb	0	; () banked
  2571  001862  518F               	movf	(detect_color@BG+1)& (0+255),w,b
  2572  001864  E109               	bnz	u4360
  2573  001866  0E5B               	movlw	91
  2574  001868  5D8E               	subwf	detect_color@BG& (0+255),w,b
  2575  00186A  A0D8               	btfss	status,0,c
  2576  00186C  EF3A  F00C         	goto	u4361
  2577  001870  EF3C  F00C         	goto	u4360
  2578  001874                     u4361:
  2579  001874  EF10  F00C         	goto	l4353
  2580  001878                     u4360:
  2581  001878                     
  2582                           ; BSR set to: 0
  2583  001878  0E07               	movlw	7
  2584  00187A  6F90               	movwf	detect_color@color& (0+255),b
  2585  00187C  EF52  F00C         	goto	l4371
  2586  001880                     l4365:
  2587                           
  2588                           ;color.c: 268:                 if (BG < BB){color = 5;}
  2589  001880  0100               	movlb	0	; () banked
  2590  001882  5186               	movf	detect_color@BB& (0+255),w,b
  2591  001884  5D8E               	subwf	detect_color@BG& (0+255),w,b
  2592  001886  5187               	movf	(detect_color@BB+1)& (0+255),w,b
  2593  001888  598F               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2594  00188A  B0D8               	btfsc	status,0,c
  2595  00188C  EF4A  F00C         	goto	u4371
  2596  001890  EF4C  F00C         	goto	u4370
  2597  001894                     u4371:
  2598  001894  EF50  F00C         	goto	l4369
  2599  001898                     u4370:
  2600  001898                     
  2601                           ; BSR set to: 0
  2602  001898  0E05               	movlw	5
  2603  00189A  6F90               	movwf	detect_color@color& (0+255),b
  2604  00189C  EF52  F00C         	goto	l4371
  2605  0018A0                     l4369:
  2606                           
  2607                           ; BSR set to: 0
  2608  0018A0  0E04               	movlw	4
  2609  0018A2  6F90               	movwf	detect_color@color& (0+255),b
  2610  0018A4                     l4371:
  2611                           
  2612                           ; BSR set to: 0
  2613                           ;color.c: 274:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2614  0018A4  0E00               	movlw	0
  2615  0018A6  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2616  0018A8  0E5F               	movlw	95
  2617  0018AA  6F6A               	movwf	compare@lower& (0+255),b
  2618  0018AC  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2619  0018B0  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2620  0018B4  0E00               	movlw	0
  2621  0018B6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2622  0018B8  0E69               	movlw	105
  2623  0018BA  6F6E               	movwf	compare@upper& (0+255),b
  2624  0018BC  EC9A  F020         	call	_compare	;wreg free
  2625  0018C0  0900               	iorlw	0
  2626  0018C2  B4D8               	btfsc	status,2,c
  2627  0018C4  EF66  F00C         	goto	u4381
  2628  0018C8  EF68  F00C         	goto	u4380
  2629  0018CC                     u4381:
  2630  0018CC  EF82  F00C         	goto	l4377
  2631  0018D0                     u4380:
  2632  0018D0  0E00               	movlw	0
  2633  0018D2  0100               	movlb	0	; () banked
  2634  0018D4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2635  0018D6  0E5F               	movlw	95
  2636  0018D8  6F6A               	movwf	compare@lower& (0+255),b
  2637  0018DA  C08E  F06C         	movff	detect_color@BG,compare@value2compare
  2638  0018DE  C08F  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2639  0018E2  0E00               	movlw	0
  2640  0018E4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2641  0018E6  0E69               	movlw	105
  2642  0018E8  6F6E               	movwf	compare@upper& (0+255),b
  2643  0018EA  EC9A  F020         	call	_compare	;wreg free
  2644  0018EE  0900               	iorlw	0
  2645  0018F0  B4D8               	btfsc	status,2,c
  2646  0018F2  EF7D  F00C         	goto	u4391
  2647  0018F6  EF7F  F00C         	goto	u4390
  2648  0018FA                     u4391:
  2649  0018FA  EF82  F00C         	goto	l4377
  2650  0018FE                     u4390:
  2651  0018FE  0E08               	movlw	8
  2652  001900  0100               	movlb	0	; () banked
  2653  001902  6F90               	movwf	detect_color@color& (0+255),b
  2654  001904                     l4377:
  2655                           
  2656                           ;color.c: 275:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2657  001904  0E00               	movlw	0
  2658  001906  0100               	movlb	0	; () banked
  2659  001908  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2660  00190A  0E00               	movlw	0
  2661  00190C  6F6A               	movwf	compare@lower& (0+255),b
  2662  00190E  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2663  001912  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2664  001916  0E00               	movlw	0
  2665  001918  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2666  00191A  0E19               	movlw	25
  2667  00191C  6F6E               	movwf	compare@upper& (0+255),b
  2668  00191E  EC9A  F020         	call	_compare	;wreg free
  2669  001922  0900               	iorlw	0
  2670  001924  B4D8               	btfsc	status,2,c
  2671  001926  EF97  F00C         	goto	u4401
  2672  00192A  EF99  F00C         	goto	u4400
  2673  00192E                     u4401:
  2674  00192E  EFB3  F00C         	goto	l4383
  2675  001932                     u4400:
  2676  001932  0E00               	movlw	0
  2677  001934  0100               	movlb	0	; () banked
  2678  001936  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2679  001938  0E00               	movlw	0
  2680  00193A  6F6A               	movwf	compare@lower& (0+255),b
  2681  00193C  C084  F06C         	movff	detect_color@RR,compare@value2compare
  2682  001940  C085  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2683  001944  0E00               	movlw	0
  2684  001946  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2685  001948  0E5A               	movlw	90
  2686  00194A  6F6E               	movwf	compare@upper& (0+255),b
  2687  00194C  EC9A  F020         	call	_compare	;wreg free
  2688  001950  0900               	iorlw	0
  2689  001952  B4D8               	btfsc	status,2,c
  2690  001954  EFAE  F00C         	goto	u4411
  2691  001958  EFB0  F00C         	goto	u4410
  2692  00195C                     u4411:
  2693  00195C  EFB3  F00C         	goto	l4383
  2694  001960                     u4410:
  2695  001960  0E00               	movlw	0
  2696  001962  0100               	movlb	0	; () banked
  2697  001964  6F90               	movwf	detect_color@color& (0+255),b
  2698  001966                     l4383:
  2699                           
  2700                           ;color.c: 277:     if (color == 2 || color == 3){
  2701  001966  0E02               	movlw	2
  2702  001968  0100               	movlb	0	; () banked
  2703  00196A  1990               	xorwf	detect_color@color& (0+255),w,b
  2704  00196C  B4D8               	btfsc	status,2,c
  2705  00196E  EFBB  F00C         	goto	u4421
  2706  001972  EFBD  F00C         	goto	u4420
  2707  001976                     u4421:
  2708  001976  EFC6  F00C         	goto	l4387
  2709  00197A                     u4420:
  2710  00197A                     
  2711                           ; BSR set to: 0
  2712  00197A  0E03               	movlw	3
  2713  00197C  1990               	xorwf	detect_color@color& (0+255),w,b
  2714  00197E  A4D8               	btfss	status,2,c
  2715  001980  EFC4  F00C         	goto	u4431
  2716  001984  EFC6  F00C         	goto	u4430
  2717  001988                     u4431:
  2718  001988  EFDE  F00C         	goto	l4393
  2719  00198C                     u4430:
  2720  00198C                     l4387:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;color.c: 278:         if (GR_REAL < 50 || GC_REAL <520){color = 0;}
  2724  00198C  5189               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2725  00198E  E109               	bnz	u4440
  2726  001990  0E32               	movlw	50
  2727  001992  5D88               	subwf	detect_color@GR_REAL& (0+255),w,b
  2728  001994  A0D8               	btfss	status,0,c
  2729  001996  EFCF  F00C         	goto	u4441
  2730  00199A  EFD1  F00C         	goto	u4440
  2731  00199E                     u4441:
  2732  00199E  EFDC  F00C         	goto	l4391
  2733  0019A2                     u4440:
  2734  0019A2                     
  2735                           ; BSR set to: 0
  2736  0019A2  0E08               	movlw	8
  2737  0019A4  5D8A               	subwf	detect_color@GC_REAL& (0+255),w,b
  2738  0019A6  0E02               	movlw	2
  2739  0019A8  598B               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2740  0019AA  B0D8               	btfsc	status,0,c
  2741  0019AC  EFDA  F00C         	goto	u4451
  2742  0019B0  EFDC  F00C         	goto	u4450
  2743  0019B4                     u4451:
  2744  0019B4  EFDE  F00C         	goto	l4393
  2745  0019B8                     u4450:
  2746  0019B8                     l4391:
  2747                           
  2748                           ; BSR set to: 0
  2749  0019B8  0E00               	movlw	0
  2750  0019BA  6F90               	movwf	detect_color@color& (0+255),b
  2751  0019BC                     l4393:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;color.c: 280:     if (color == 1 || color == 6){
  2755  0019BC  0590               	decf	detect_color@color& (0+255),w,b
  2756  0019BE  B4D8               	btfsc	status,2,c
  2757  0019C0  EFE4  F00C         	goto	u4461
  2758  0019C4  EFE6  F00C         	goto	u4460
  2759  0019C8                     u4461:
  2760  0019C8  EFEF  F00C         	goto	l4397
  2761  0019CC                     u4460:
  2762  0019CC                     
  2763                           ; BSR set to: 0
  2764  0019CC  0E06               	movlw	6
  2765  0019CE  1990               	xorwf	detect_color@color& (0+255),w,b
  2766  0019D0  A4D8               	btfss	status,2,c
  2767  0019D2  EFED  F00C         	goto	u4471
  2768  0019D6  EFEF  F00C         	goto	u4470
  2769  0019DA                     u4471:
  2770  0019DA  EF07  F00D         	goto	l4403
  2771  0019DE                     u4470:
  2772  0019DE                     l4397:
  2773                           
  2774                           ; BSR set to: 0
  2775                           ;color.c: 281:         if (GR_REAL < 60 || GC_REAL <500){color = 0;}
  2776  0019DE  5189               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2777  0019E0  E109               	bnz	u4480
  2778  0019E2  0E3C               	movlw	60
  2779  0019E4  5D88               	subwf	detect_color@GR_REAL& (0+255),w,b
  2780  0019E6  A0D8               	btfss	status,0,c
  2781  0019E8  EFF8  F00C         	goto	u4481
  2782  0019EC  EFFA  F00C         	goto	u4480
  2783  0019F0                     u4481:
  2784  0019F0  EF05  F00D         	goto	l4401
  2785  0019F4                     u4480:
  2786  0019F4                     
  2787                           ; BSR set to: 0
  2788  0019F4  0EF4               	movlw	244
  2789  0019F6  5D8A               	subwf	detect_color@GC_REAL& (0+255),w,b
  2790  0019F8  0E01               	movlw	1
  2791  0019FA  598B               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2792  0019FC  B0D8               	btfsc	status,0,c
  2793  0019FE  EF03  F00D         	goto	u4491
  2794  001A02  EF05  F00D         	goto	u4490
  2795  001A06                     u4491:
  2796  001A06  EF07  F00D         	goto	l4403
  2797  001A0A                     u4490:
  2798  001A0A                     l4401:
  2799                           
  2800                           ; BSR set to: 0
  2801  001A0A  0E00               	movlw	0
  2802  001A0C  6F90               	movwf	detect_color@color& (0+255),b
  2803  001A0E                     l4403:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;color.c: 283:     if (color == 7 || color == 4 || color == 5 || color == 8){
  2807  001A0E  0E07               	movlw	7
  2808  001A10  1990               	xorwf	detect_color@color& (0+255),w,b
  2809  001A12  B4D8               	btfsc	status,2,c
  2810  001A14  EF0E  F00D         	goto	u4501
  2811  001A18  EF10  F00D         	goto	u4500
  2812  001A1C                     u4501:
  2813  001A1C  EF2B  F00D         	goto	l4411
  2814  001A20                     u4500:
  2815  001A20                     
  2816                           ; BSR set to: 0
  2817  001A20  0E04               	movlw	4
  2818  001A22  1990               	xorwf	detect_color@color& (0+255),w,b
  2819  001A24  B4D8               	btfsc	status,2,c
  2820  001A26  EF17  F00D         	goto	u4511
  2821  001A2A  EF19  F00D         	goto	u4510
  2822  001A2E                     u4511:
  2823  001A2E  EF2B  F00D         	goto	l4411
  2824  001A32                     u4510:
  2825  001A32                     
  2826                           ; BSR set to: 0
  2827  001A32  0E05               	movlw	5
  2828  001A34  1990               	xorwf	detect_color@color& (0+255),w,b
  2829  001A36  B4D8               	btfsc	status,2,c
  2830  001A38  EF20  F00D         	goto	u4521
  2831  001A3C  EF22  F00D         	goto	u4520
  2832  001A40                     u4521:
  2833  001A40  EF2B  F00D         	goto	l4411
  2834  001A44                     u4520:
  2835  001A44                     
  2836                           ; BSR set to: 0
  2837  001A44  0E08               	movlw	8
  2838  001A46  1990               	xorwf	detect_color@color& (0+255),w,b
  2839  001A48  A4D8               	btfss	status,2,c
  2840  001A4A  EF29  F00D         	goto	u4531
  2841  001A4E  EF2B  F00D         	goto	u4530
  2842  001A52                     u4531:
  2843  001A52  EF43  F00D         	goto	l147
  2844  001A56                     u4530:
  2845  001A56                     l4411:
  2846                           
  2847                           ; BSR set to: 0
  2848                           ;color.c: 284:         if (GR_REAL < 70 || GC_REAL <560){color = 0;}
  2849  001A56  5189               	movf	(detect_color@GR_REAL+1)& (0+255),w,b
  2850  001A58  E109               	bnz	u4540
  2851  001A5A  0E46               	movlw	70
  2852  001A5C  5D88               	subwf	detect_color@GR_REAL& (0+255),w,b
  2853  001A5E  A0D8               	btfss	status,0,c
  2854  001A60  EF34  F00D         	goto	u4541
  2855  001A64  EF36  F00D         	goto	u4540
  2856  001A68                     u4541:
  2857  001A68  EF41  F00D         	goto	l4415
  2858  001A6C                     u4540:
  2859  001A6C                     
  2860                           ; BSR set to: 0
  2861  001A6C  0E30               	movlw	48
  2862  001A6E  5D8A               	subwf	detect_color@GC_REAL& (0+255),w,b
  2863  001A70  0E02               	movlw	2
  2864  001A72  598B               	subwfb	(detect_color@GC_REAL+1)& (0+255),w,b
  2865  001A74  B0D8               	btfsc	status,0,c
  2866  001A76  EF3F  F00D         	goto	u4551
  2867  001A7A  EF41  F00D         	goto	u4550
  2868  001A7E                     u4551:
  2869  001A7E  EF43  F00D         	goto	l147
  2870  001A82                     u4550:
  2871  001A82                     l4415:
  2872                           
  2873                           ; BSR set to: 0
  2874  001A82  0E00               	movlw	0
  2875  001A84  6F90               	movwf	detect_color@color& (0+255),b
  2876  001A86                     l147:
  2877                           
  2878                           ; BSR set to: 0
  2879                           ;color.c: 287:     return color;
  2880  001A86  5190               	movf	detect_color@color& (0+255),w,b
  2881  001A88                     
  2882                           ; BSR set to: 0
  2883  001A88  0012               	return		;funcret
  2884  001A8A                     __end_of_detect_color:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _lroundf *****************
  2888 ;; Defined at:
  2889 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  x               4    6[BANK0 ] float 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  4    6[BANK0 ] long 
  2896 ;; Registers used:
  2897 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;Total ram usage:        4 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 3
  2910 ;; This function calls:
  2911 ;;		___fltol
  2912 ;;		_roundf
  2913 ;; This function is called by:
  2914 ;;		_detect_color
  2915 ;;		_check_color_reading
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text6
  2920  0040FA                     __ptext6:
  2921                           	callstack 0
  2922  0040FA                     _lroundf:
  2923                           	callstack 26
  2924  0040FA  C066  F041         	movff	lroundf@x,roundf@x
  2925  0040FE  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2926  004102  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2927  004106  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2928  00410A  ECBA  F011         	call	_roundf	;wreg free
  2929  00410E  C041  F05B         	movff	?_roundf,___fltol@f1
  2930  004112  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2931  004116  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2932  00411A  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2933  00411E  EC5A  F01B         	call	___fltol	;wreg free
  2934  004122  C05B  F066         	movff	?___fltol,?_lroundf
  2935  004126  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2936  00412A  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2937  00412E  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2938  004132  0012               	return		;funcret
  2939  004134                     __end_of_lroundf:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function _roundf *****************
  2943 ;; Defined at:
  2944 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  x               4   64[COMRAM] float 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  y               4   86[COMRAM] float 
  2949 ;;  u               4   82[COMRAM] struct .
  2950 ;;  e               2   76[COMRAM] int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  4   64[COMRAM] float 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;Total ram usage:       26 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 2
  2967 ;; This function calls:
  2968 ;;		___fladd
  2969 ;;		___flge
  2970 ;;		___flmul
  2971 ;;		___flneg
  2972 ;;		___flsub
  2973 ;; This function is called by:
  2974 ;;		_lroundf
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text7
  2979  002374                     __ptext7:
  2980                           	callstack 0
  2981  002374                     _roundf:
  2982                           	callstack 26
  2983  002374  C0E8  F053         	movff	roundf@F527,roundf@u
  2984  002378  C0E9  F054         	movff	roundf@F527+1,roundf@u+1
  2985  00237C  C0EA  F055         	movff	roundf@F527+2,roundf@u+2
  2986  002380  C0EB  F056         	movff	roundf@F527+3,roundf@u+3
  2987  002384  C041  F053         	movff	roundf@x,roundf@u
  2988  002388  C042  F054         	movff	roundf@x+1,roundf@u+1
  2989  00238C  C043  F055         	movff	roundf@x+2,roundf@u+2
  2990  002390  C044  F056         	movff	roundf@x+3,roundf@u+3
  2991  002394  C053  F045         	movff	roundf@u,??_roundf
  2992  002398  C054  F046         	movff	roundf@u+1,??_roundf+1
  2993  00239C  C055  F047         	movff	roundf@u+2,??_roundf+2
  2994  0023A0  C056  F048         	movff	roundf@u+3,??_roundf+3
  2995  0023A4  0E18               	movlw	24
  2996  0023A6  EFDA  F011         	goto	u3660
  2997  0023AA                     u3665:
  2998  0023AA  90D8               	bcf	status,0,c
  2999  0023AC  3248               	rrcf	(??_roundf+3)^0,f,c
  3000  0023AE  3247               	rrcf	(??_roundf+2)^0,f,c
  3001  0023B0  3246               	rrcf	(??_roundf+1)^0,f,c
  3002  0023B2  3245               	rrcf	??_roundf^0,f,c
  3003  0023B4                     u3660:
  3004  0023B4  2EE8               	decfsz	wreg,f,c
  3005  0023B6  EFD5  F011         	goto	u3665
  3006  0023BA  5045               	movf	??_roundf^0,w,c
  3007  0023BC  6E4D               	movwf	roundf@e^0,c
  3008  0023BE  6A4E               	clrf	(roundf@e+1)^0,c
  3009  0023C0  BE4E               	btfsc	(roundf@e+1)^0,7,c
  3010  0023C2  EFEC  F011         	goto	u3671
  3011  0023C6  504E               	movf	(roundf@e+1)^0,w,c
  3012  0023C8  E109               	bnz	u3670
  3013  0023CA  0E96               	movlw	150
  3014  0023CC  5C4D               	subwf	roundf@e^0,w,c
  3015  0023CE  A0D8               	btfss	status,0,c
  3016  0023D0  EFEC  F011         	goto	u3671
  3017  0023D4  EFEE  F011         	goto	u3670
  3018  0023D8                     u3671:
  3019  0023D8  EFF8  F011         	goto	l3817
  3020  0023DC                     u3670:
  3021  0023DC  C041  F041         	movff	roundf@x,?_roundf
  3022  0023E0  C042  F042         	movff	roundf@x+1,?_roundf+1
  3023  0023E4  C043  F043         	movff	roundf@x+2,?_roundf+2
  3024  0023E8  C044  F044         	movff	roundf@x+3,?_roundf+3
  3025  0023EC  EF90  F013         	goto	l1382
  3026  0023F0                     l3817:
  3027  0023F0  C053  F045         	movff	roundf@u,??_roundf
  3028  0023F4  C054  F046         	movff	roundf@u+1,??_roundf+1
  3029  0023F8  C055  F047         	movff	roundf@u+2,??_roundf+2
  3030  0023FC  C056  F048         	movff	roundf@u+3,??_roundf+3
  3031  002400  0E20               	movlw	32
  3032  002402  EF08  F012         	goto	u3680
  3033  002406                     u3685:
  3034  002406  90D8               	bcf	status,0,c
  3035  002408  3248               	rrcf	(??_roundf+3)^0,f,c
  3036  00240A  3247               	rrcf	(??_roundf+2)^0,f,c
  3037  00240C  3246               	rrcf	(??_roundf+1)^0,f,c
  3038  00240E  3245               	rrcf	??_roundf^0,f,c
  3039  002410                     u3680:
  3040  002410  2EE8               	decfsz	wreg,f,c
  3041  002412  EF03  F012         	goto	u3685
  3042  002416  5045               	movf	??_roundf^0,w,c
  3043  002418  1046               	iorwf	(??_roundf+1)^0,w,c
  3044  00241A  1047               	iorwf	(??_roundf+2)^0,w,c
  3045  00241C  1048               	iorwf	(??_roundf+3)^0,w,c
  3046  00241E  B4D8               	btfsc	status,2,c
  3047  002420  EF14  F012         	goto	u3691
  3048  002424  EF16  F012         	goto	u3690
  3049  002428                     u3691:
  3050  002428  EF28  F012         	goto	l3821
  3051  00242C                     u3690:
  3052  00242C  C041  F001         	movff	roundf@x,___flneg@f1
  3053  002430  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  3054  002434  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  3055  002438  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  3056  00243C  ECB7  F020         	call	___flneg	;wreg free
  3057  002440  C001  F041         	movff	?___flneg,roundf@x
  3058  002444  C002  F042         	movff	?___flneg+1,roundf@x+1
  3059  002448  C003  F043         	movff	?___flneg+2,roundf@x+2
  3060  00244C  C004  F044         	movff	?___flneg+3,roundf@x+3
  3061  002450                     l3821:
  3062  002450  BE4E               	btfsc	(roundf@e+1)^0,7,c
  3063  002452  EF36  F012         	goto	u3700
  3064  002456  504E               	movf	(roundf@e+1)^0,w,c
  3065  002458  E107               	bnz	u3701
  3066  00245A  0E7E               	movlw	126
  3067  00245C  5C4D               	subwf	roundf@e^0,w,c
  3068  00245E  B0D8               	btfsc	status,0,c
  3069  002460  EF34  F012         	goto	u3701
  3070  002464  EF36  F012         	goto	u3700
  3071  002468                     u3701:
  3072  002468  EF52  F012         	goto	l3827
  3073  00246C                     u3700:
  3074  00246C  C053  F028         	movff	roundf@u,___flmul@b
  3075  002470  C054  F029         	movff	roundf@u+1,___flmul@b+1
  3076  002474  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  3077  002478  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  3078  00247C  0E00               	movlw	0
  3079  00247E  6E2C               	movwf	___flmul@a^0,c
  3080  002480  0E00               	movlw	0
  3081  002482  6E2D               	movwf	(___flmul@a+1)^0,c
  3082  002484  0E00               	movlw	0
  3083  002486  6E2E               	movwf	(___flmul@a+2)^0,c
  3084  002488  0E00               	movlw	0
  3085  00248A  6E2F               	movwf	(___flmul@a+3)^0,c
  3086  00248C  ECA5  F00F         	call	___flmul	;wreg free
  3087  002490  C028  F041         	movff	?___flmul,?_roundf
  3088  002494  C029  F042         	movff	?___flmul+1,?_roundf+1
  3089  002498  C02A  F043         	movff	?___flmul+2,?_roundf+2
  3090  00249C  C02B  F044         	movff	?___flmul+3,?_roundf+3
  3091  0024A0  EF90  F013         	goto	l1382
  3092  0024A4                     l3827:
  3093  0024A4  0E00               	movlw	0
  3094  0024A6  6E05               	movwf	___fladd@a^0,c
  3095  0024A8  0E00               	movlw	0
  3096  0024AA  6E06               	movwf	(___fladd@a+1)^0,c
  3097  0024AC  0E00               	movlw	0
  3098  0024AE  6E07               	movwf	(___fladd@a+2)^0,c
  3099  0024B0  0E4B               	movlw	75
  3100  0024B2  6E08               	movwf	(___fladd@a+3)^0,c
  3101  0024B4  C041  F001         	movff	roundf@x,___fladd@b
  3102  0024B8  C042  F002         	movff	roundf@x+1,___fladd@b+1
  3103  0024BC  C043  F003         	movff	roundf@x+2,___fladd@b+2
  3104  0024C0  C044  F004         	movff	roundf@x+3,___fladd@b+3
  3105  0024C4  EC45  F00D         	call	___fladd	;wreg free
  3106  0024C8  C001  F04F         	movff	?___fladd,_roundf$2737
  3107  0024CC  C002  F050         	movff	?___fladd+1,_roundf$2737+1
  3108  0024D0  C003  F051         	movff	?___fladd+2,_roundf$2737+2
  3109  0024D4  C004  F052         	movff	?___fladd+3,_roundf$2737+3
  3110  0024D8  0E00               	movlw	0
  3111  0024DA  6E05               	movwf	___fladd@a^0,c
  3112  0024DC  0E00               	movlw	0
  3113  0024DE  6E06               	movwf	(___fladd@a+1)^0,c
  3114  0024E0  0E00               	movlw	0
  3115  0024E2  6E07               	movwf	(___fladd@a+2)^0,c
  3116  0024E4  0ECB               	movlw	203
  3117  0024E6  6E08               	movwf	(___fladd@a+3)^0,c
  3118  0024E8  C04F  F001         	movff	_roundf$2737,___fladd@b
  3119  0024EC  C050  F002         	movff	_roundf$2737+1,___fladd@b+1
  3120  0024F0  C051  F003         	movff	_roundf$2737+2,___fladd@b+2
  3121  0024F4  C052  F004         	movff	_roundf$2737+3,___fladd@b+3
  3122  0024F8  EC45  F00D         	call	___fladd	;wreg free
  3123  0024FC  C001  F049         	movff	?___fladd,_roundf$2738
  3124  002500  C002  F04A         	movff	?___fladd+1,_roundf$2738+1
  3125  002504  C003  F04B         	movff	?___fladd+2,_roundf$2738+2
  3126  002508  C004  F04C         	movff	?___fladd+3,_roundf$2738+3
  3127  00250C  C049  F011         	movff	_roundf$2738,___flsub@b
  3128  002510  C04A  F012         	movff	_roundf$2738+1,___flsub@b+1
  3129  002514  C04B  F013         	movff	_roundf$2738+2,___flsub@b+2
  3130  002518  C04C  F014         	movff	_roundf$2738+3,___flsub@b+3
  3131  00251C  C041  F015         	movff	roundf@x,___flsub@a
  3132  002520  C042  F016         	movff	roundf@x+1,___flsub@a+1
  3133  002524  C043  F017         	movff	roundf@x+2,___flsub@a+2
  3134  002528  C044  F018         	movff	roundf@x+3,___flsub@a+3
  3135  00252C  ECB7  F01F         	call	___flsub	;wreg free
  3136  002530  C011  F057         	movff	?___flsub,roundf@y
  3137  002534  C012  F058         	movff	?___flsub+1,roundf@y+1
  3138  002538  C013  F059         	movff	?___flsub+2,roundf@y+2
  3139  00253C  C014  F05A         	movff	?___flsub+3,roundf@y+3
  3140  002540  0E00               	movlw	0
  3141  002542  6E01               	movwf	___flge@ff1^0,c
  3142  002544  0E00               	movlw	0
  3143  002546  6E02               	movwf	(___flge@ff1+1)^0,c
  3144  002548  0E00               	movlw	0
  3145  00254A  6E03               	movwf	(___flge@ff1+2)^0,c
  3146  00254C  0E3F               	movlw	63
  3147  00254E  6E04               	movwf	(___flge@ff1+3)^0,c
  3148  002550  C057  F005         	movff	roundf@y,___flge@ff2
  3149  002554  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3150  002558  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3151  00255C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3152  002560  ECDE  F01B         	call	___flge	;wreg free
  3153  002564  B0D8               	btfsc	status,0,c
  3154  002566  EFB7  F012         	goto	u3711
  3155  00256A  EFB9  F012         	goto	u3710
  3156  00256E                     u3711:
  3157  00256E  EFEF  F012         	goto	l3831
  3158  002572                     u3710:
  3159  002572  C041  F005         	movff	roundf@x,___fladd@a
  3160  002576  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3161  00257A  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3162  00257E  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3163  002582  C057  F001         	movff	roundf@y,___fladd@b
  3164  002586  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3165  00258A  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3166  00258E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3167  002592  EC45  F00D         	call	___fladd	;wreg free
  3168  002596  C001  F04F         	movff	?___fladd,_roundf$2737
  3169  00259A  C002  F050         	movff	?___fladd+1,_roundf$2737+1
  3170  00259E  C003  F051         	movff	?___fladd+2,_roundf$2737+2
  3171  0025A2  C004  F052         	movff	?___fladd+3,_roundf$2737+3
  3172  0025A6  C04F  F001         	movff	_roundf$2737,___fladd@b
  3173  0025AA  C050  F002         	movff	_roundf$2737+1,___fladd@b+1
  3174  0025AE  C051  F003         	movff	_roundf$2737+2,___fladd@b+2
  3175  0025B2  C052  F004         	movff	_roundf$2737+3,___fladd@b+3
  3176  0025B6  0E00               	movlw	0
  3177  0025B8  6E05               	movwf	___fladd@a^0,c
  3178  0025BA  0E00               	movlw	0
  3179  0025BC  6E06               	movwf	(___fladd@a+1)^0,c
  3180  0025BE  0E80               	movlw	128
  3181  0025C0  6E07               	movwf	(___fladd@a+2)^0,c
  3182  0025C2  0EBF               	movlw	191
  3183  0025C4  6E08               	movwf	(___fladd@a+3)^0,c
  3184  0025C6  EC45  F00D         	call	___fladd	;wreg free
  3185  0025CA  C001  F057         	movff	?___fladd,roundf@y
  3186  0025CE  C002  F058         	movff	?___fladd+1,roundf@y+1
  3187  0025D2  C003  F059         	movff	?___fladd+2,roundf@y+2
  3188  0025D6  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3189  0025DA  EF58  F013         	goto	l3837
  3190  0025DE                     l3831:
  3191  0025DE  0E00               	movlw	0
  3192  0025E0  6E01               	movwf	___flge@ff1^0,c
  3193  0025E2  0E00               	movlw	0
  3194  0025E4  6E02               	movwf	(___flge@ff1+1)^0,c
  3195  0025E6  0E00               	movlw	0
  3196  0025E8  6E03               	movwf	(___flge@ff1+2)^0,c
  3197  0025EA  0EBF               	movlw	191
  3198  0025EC  6E04               	movwf	(___flge@ff1+3)^0,c
  3199  0025EE  C057  F005         	movff	roundf@y,___flge@ff2
  3200  0025F2  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3201  0025F6  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3202  0025FA  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3203  0025FE  ECDE  F01B         	call	___flge	;wreg free
  3204  002602  A0D8               	btfss	status,0,c
  3205  002604  EF06  F013         	goto	u3721
  3206  002608  EF08  F013         	goto	u3720
  3207  00260C                     u3721:
  3208  00260C  EF3E  F013         	goto	l3835
  3209  002610                     u3720:
  3210  002610  C041  F005         	movff	roundf@x,___fladd@a
  3211  002614  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3212  002618  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3213  00261C  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3214  002620  C057  F001         	movff	roundf@y,___fladd@b
  3215  002624  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3216  002628  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3217  00262C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3218  002630  EC45  F00D         	call	___fladd	;wreg free
  3219  002634  C001  F04F         	movff	?___fladd,_roundf$2737
  3220  002638  C002  F050         	movff	?___fladd+1,_roundf$2737+1
  3221  00263C  C003  F051         	movff	?___fladd+2,_roundf$2737+2
  3222  002640  C004  F052         	movff	?___fladd+3,_roundf$2737+3
  3223  002644  C04F  F001         	movff	_roundf$2737,___fladd@b
  3224  002648  C050  F002         	movff	_roundf$2737+1,___fladd@b+1
  3225  00264C  C051  F003         	movff	_roundf$2737+2,___fladd@b+2
  3226  002650  C052  F004         	movff	_roundf$2737+3,___fladd@b+3
  3227  002654  0E00               	movlw	0
  3228  002656  6E05               	movwf	___fladd@a^0,c
  3229  002658  0E00               	movlw	0
  3230  00265A  6E06               	movwf	(___fladd@a+1)^0,c
  3231  00265C  0E80               	movlw	128
  3232  00265E  6E07               	movwf	(___fladd@a+2)^0,c
  3233  002660  0E3F               	movlw	63
  3234  002662  6E08               	movwf	(___fladd@a+3)^0,c
  3235  002664  EC45  F00D         	call	___fladd	;wreg free
  3236  002668  C001  F057         	movff	?___fladd,roundf@y
  3237  00266C  C002  F058         	movff	?___fladd+1,roundf@y+1
  3238  002670  C003  F059         	movff	?___fladd+2,roundf@y+2
  3239  002674  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3240  002678  EF58  F013         	goto	l3837
  3241  00267C                     l3835:
  3242  00267C  C057  F001         	movff	roundf@y,___fladd@b
  3243  002680  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3244  002684  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3245  002688  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3246  00268C  C041  F005         	movff	roundf@x,___fladd@a
  3247  002690  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3248  002694  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3249  002698  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3250  00269C  EC45  F00D         	call	___fladd	;wreg free
  3251  0026A0  C001  F057         	movff	?___fladd,roundf@y
  3252  0026A4  C002  F058         	movff	?___fladd+1,roundf@y+1
  3253  0026A8  C003  F059         	movff	?___fladd+2,roundf@y+2
  3254  0026AC  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3255  0026B0                     l3837:
  3256  0026B0  C053  F045         	movff	roundf@u,??_roundf
  3257  0026B4  C054  F046         	movff	roundf@u+1,??_roundf+1
  3258  0026B8  C055  F047         	movff	roundf@u+2,??_roundf+2
  3259  0026BC  C056  F048         	movff	roundf@u+3,??_roundf+3
  3260  0026C0  0E20               	movlw	32
  3261  0026C2  EF68  F013         	goto	u3730
  3262  0026C6                     u3735:
  3263  0026C6  90D8               	bcf	status,0,c
  3264  0026C8  3248               	rrcf	(??_roundf+3)^0,f,c
  3265  0026CA  3247               	rrcf	(??_roundf+2)^0,f,c
  3266  0026CC  3246               	rrcf	(??_roundf+1)^0,f,c
  3267  0026CE  3245               	rrcf	??_roundf^0,f,c
  3268  0026D0                     u3730:
  3269  0026D0  2EE8               	decfsz	wreg,f,c
  3270  0026D2  EF63  F013         	goto	u3735
  3271  0026D6  5045               	movf	??_roundf^0,w,c
  3272  0026D8  1046               	iorwf	(??_roundf+1)^0,w,c
  3273  0026DA  1047               	iorwf	(??_roundf+2)^0,w,c
  3274  0026DC  1048               	iorwf	(??_roundf+3)^0,w,c
  3275  0026DE  B4D8               	btfsc	status,2,c
  3276  0026E0  EF74  F013         	goto	u3741
  3277  0026E4  EF76  F013         	goto	u3740
  3278  0026E8                     u3741:
  3279  0026E8  EF88  F013         	goto	l3841
  3280  0026EC                     u3740:
  3281  0026EC  C057  F001         	movff	roundf@y,___flneg@f1
  3282  0026F0  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3283  0026F4  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3284  0026F8  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3285  0026FC  ECB7  F020         	call	___flneg	;wreg free
  3286  002700  C001  F057         	movff	?___flneg,roundf@y
  3287  002704  C002  F058         	movff	?___flneg+1,roundf@y+1
  3288  002708  C003  F059         	movff	?___flneg+2,roundf@y+2
  3289  00270C  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3290  002710                     l3841:
  3291  002710  C057  F041         	movff	roundf@y,?_roundf
  3292  002714  C058  F042         	movff	roundf@y+1,?_roundf+1
  3293  002718  C059  F043         	movff	roundf@y+2,?_roundf+2
  3294  00271C  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3295  002720                     l1382:
  3296  002720  0012               	return		;funcret
  3297  002722                     __end_of_roundf:
  3298                           	callstack 0
  3299                           
  3300 ;; *************** function ___flsub *****************
  3301 ;; Defined at:
  3302 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  b               4   16[COMRAM] float 
  3305 ;;  a               4   20[COMRAM] float 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;		None
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  4   16[COMRAM] float 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3317 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;Total ram usage:        8 bytes
  3322 ;; Hardware stack levels used: 1
  3323 ;; Hardware stack levels required when called: 1
  3324 ;; This function calls:
  3325 ;;		___fladd
  3326 ;; This function is called by:
  3327 ;;		_roundf
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           	psect	text8
  3332  003F6E                     __ptext8:
  3333                           	callstack 0
  3334  003F6E                     ___flsub:
  3335                           	callstack 26
  3336  003F6E  0E00               	movlw	0
  3337  003F70  1A15               	xorwf	___flsub@a^0,f,c
  3338  003F72  0E00               	movlw	0
  3339  003F74  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3340  003F76  0E00               	movlw	0
  3341  003F78  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3342  003F7A  0E80               	movlw	128
  3343  003F7C  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3344  003F7E  C011  F001         	movff	___flsub@b,___fladd@b
  3345  003F82  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3346  003F86  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3347  003F8A  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3348  003F8E  C015  F005         	movff	___flsub@a,___fladd@a
  3349  003F92  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3350  003F96  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3351  003F9A  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3352  003F9E  EC45  F00D         	call	___fladd	;wreg free
  3353  003FA2  C001  F011         	movff	?___fladd,?___flsub
  3354  003FA6  C002  F012         	movff	?___fladd+1,?___flsub+1
  3355  003FAA  C003  F013         	movff	?___fladd+2,?___flsub+2
  3356  003FAE  C004  F014         	movff	?___fladd+3,?___flsub+3
  3357  003FB2  0012               	return		;funcret
  3358  003FB4                     __end_of___flsub:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function ___fladd *****************
  3362 ;; Defined at:
  3363 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  b               4    0[COMRAM] float 
  3366 ;;  a               4    4[COMRAM] float 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  grs             1   15[COMRAM] unsigned char 
  3369 ;;  bexp            1   14[COMRAM] unsigned char 
  3370 ;;  aexp            1   13[COMRAM] unsigned char 
  3371 ;;  signs           1   12[COMRAM] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  4    0[COMRAM] unsigned char 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:       16 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		___flsub
  3391 ;;		_roundf
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text9
  3396  001A8A                     __ptext9:
  3397                           	callstack 0
  3398  001A8A                     ___fladd:
  3399                           	callstack 26
  3400  001A8A  5004               	movf	(___fladd@b+3)^0,w,c
  3401  001A8C  0B80               	andlw	128
  3402  001A8E  6E0D               	movwf	___fladd@signs^0,c
  3403  001A90  5004               	movf	(___fladd@b+3)^0,w,c
  3404  001A92  2404               	addwf	(___fladd@b+3)^0,w,c
  3405  001A94  6E0F               	movwf	___fladd@bexp^0,c
  3406  001A96  AE03               	btfss	(___fladd@b+2)^0,7,c
  3407  001A98  EF50  F00D         	goto	u2851
  3408  001A9C  EF52  F00D         	goto	u2850
  3409  001AA0                     u2851:
  3410  001AA0  EF53  F00D         	goto	l3267
  3411  001AA4                     u2850:
  3412  001AA4  800F               	bsf	___fladd@bexp^0,0,c
  3413  001AA6                     l3267:
  3414  001AA6  500F               	movf	___fladd@bexp^0,w,c
  3415  001AA8  B4D8               	btfsc	status,2,c
  3416  001AAA  EF59  F00D         	goto	u2861
  3417  001AAE  EF5B  F00D         	goto	u2860
  3418  001AB2                     u2861:
  3419  001AB2  EF70  F00D         	goto	l3277
  3420  001AB6                     u2860:
  3421  001AB6  280F               	incf	___fladd@bexp^0,w,c
  3422  001AB8  A4D8               	btfss	status,2,c
  3423  001ABA  EF61  F00D         	goto	u2871
  3424  001ABE  EF63  F00D         	goto	u2870
  3425  001AC2                     u2871:
  3426  001AC2  EF6B  F00D         	goto	l3273
  3427  001AC6                     u2870:
  3428  001AC6  0E00               	movlw	0
  3429  001AC8  6E01               	movwf	___fladd@b^0,c
  3430  001ACA  0E00               	movlw	0
  3431  001ACC  6E02               	movwf	(___fladd@b+1)^0,c
  3432  001ACE  0E00               	movlw	0
  3433  001AD0  6E03               	movwf	(___fladd@b+2)^0,c
  3434  001AD2  0E00               	movlw	0
  3435  001AD4  6E04               	movwf	(___fladd@b+3)^0,c
  3436  001AD6                     l3273:
  3437  001AD6  8E03               	bsf	(___fladd@b+2)^0,7,c
  3438  001AD8  0E00               	movlw	0
  3439  001ADA  6E04               	movwf	(___fladd@b+3)^0,c
  3440  001ADC  EF78  F00D         	goto	l3279
  3441  001AE0                     l3277:
  3442  001AE0  0E00               	movlw	0
  3443  001AE2  6E01               	movwf	___fladd@b^0,c
  3444  001AE4  0E00               	movlw	0
  3445  001AE6  6E02               	movwf	(___fladd@b+1)^0,c
  3446  001AE8  0E00               	movlw	0
  3447  001AEA  6E03               	movwf	(___fladd@b+2)^0,c
  3448  001AEC  0E00               	movlw	0
  3449  001AEE  6E04               	movwf	(___fladd@b+3)^0,c
  3450  001AF0                     l3279:
  3451  001AF0  5008               	movf	(___fladd@a+3)^0,w,c
  3452  001AF2  0B80               	andlw	128
  3453  001AF4  6E0E               	movwf	___fladd@aexp^0,c
  3454  001AF6  500D               	movf	___fladd@signs^0,w,c
  3455  001AF8  180E               	xorwf	___fladd@aexp^0,w,c
  3456  001AFA  B4D8               	btfsc	status,2,c
  3457  001AFC  EF82  F00D         	goto	u2881
  3458  001B00  EF84  F00D         	goto	u2880
  3459  001B04                     u2881:
  3460  001B04  EF85  F00D         	goto	l3285
  3461  001B08                     u2880:
  3462  001B08  8C0D               	bsf	___fladd@signs^0,6,c
  3463  001B0A                     l3285:
  3464  001B0A  5008               	movf	(___fladd@a+3)^0,w,c
  3465  001B0C  2408               	addwf	(___fladd@a+3)^0,w,c
  3466  001B0E  6E0E               	movwf	___fladd@aexp^0,c
  3467  001B10  AE07               	btfss	(___fladd@a+2)^0,7,c
  3468  001B12  EF8D  F00D         	goto	u2891
  3469  001B16  EF8F  F00D         	goto	u2890
  3470  001B1A                     u2891:
  3471  001B1A  EF90  F00D         	goto	l3291
  3472  001B1E                     u2890:
  3473  001B1E  800E               	bsf	___fladd@aexp^0,0,c
  3474  001B20                     l3291:
  3475  001B20  500E               	movf	___fladd@aexp^0,w,c
  3476  001B22  B4D8               	btfsc	status,2,c
  3477  001B24  EF96  F00D         	goto	u2901
  3478  001B28  EF98  F00D         	goto	u2900
  3479  001B2C                     u2901:
  3480  001B2C  EFAD  F00D         	goto	l3301
  3481  001B30                     u2900:
  3482  001B30  280E               	incf	___fladd@aexp^0,w,c
  3483  001B32  A4D8               	btfss	status,2,c
  3484  001B34  EF9E  F00D         	goto	u2911
  3485  001B38  EFA0  F00D         	goto	u2910
  3486  001B3C                     u2911:
  3487  001B3C  EFA8  F00D         	goto	l3297
  3488  001B40                     u2910:
  3489  001B40  0E00               	movlw	0
  3490  001B42  6E05               	movwf	___fladd@a^0,c
  3491  001B44  0E00               	movlw	0
  3492  001B46  6E06               	movwf	(___fladd@a+1)^0,c
  3493  001B48  0E00               	movlw	0
  3494  001B4A  6E07               	movwf	(___fladd@a+2)^0,c
  3495  001B4C  0E00               	movlw	0
  3496  001B4E  6E08               	movwf	(___fladd@a+3)^0,c
  3497  001B50                     l3297:
  3498  001B50  8E07               	bsf	(___fladd@a+2)^0,7,c
  3499  001B52  0E00               	movlw	0
  3500  001B54  6E08               	movwf	(___fladd@a+3)^0,c
  3501  001B56  EFB5  F00D         	goto	l3303
  3502  001B5A                     l3301:
  3503  001B5A  0E00               	movlw	0
  3504  001B5C  6E05               	movwf	___fladd@a^0,c
  3505  001B5E  0E00               	movlw	0
  3506  001B60  6E06               	movwf	(___fladd@a+1)^0,c
  3507  001B62  0E00               	movlw	0
  3508  001B64  6E07               	movwf	(___fladd@a+2)^0,c
  3509  001B66  0E00               	movlw	0
  3510  001B68  6E08               	movwf	(___fladd@a+3)^0,c
  3511  001B6A                     l3303:
  3512  001B6A  500F               	movf	___fladd@bexp^0,w,c
  3513  001B6C  5C0E               	subwf	___fladd@aexp^0,w,c
  3514  001B6E  B0D8               	btfsc	status,0,c
  3515  001B70  EFBC  F00D         	goto	u2921
  3516  001B74  EFBE  F00D         	goto	u2920
  3517  001B78                     u2921:
  3518  001B78  EFE5  F00D         	goto	l3339
  3519  001B7C                     u2920:
  3520  001B7C  AC0D               	btfss	___fladd@signs^0,6,c
  3521  001B7E  EFC3  F00D         	goto	u2931
  3522  001B82  EFC5  F00D         	goto	u2930
  3523  001B86                     u2931:
  3524  001B86  EFC7  F00D         	goto	l3309
  3525  001B8A                     u2930:
  3526  001B8A  0E80               	movlw	128
  3527  001B8C  1A0D               	xorwf	___fladd@signs^0,f,c
  3528  001B8E                     l3309:
  3529  001B8E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3530  001B92  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3531  001B96  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3532  001B9A  C001  F010         	movff	___fladd@b,___fladd@grs
  3533  001B9E  C005  F001         	movff	___fladd@a,___fladd@b
  3534  001BA2  C010  F005         	movff	___fladd@grs,___fladd@a
  3535  001BA6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3536  001BAA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3537  001BAE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3538  001BB2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3539  001BB6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3540  001BBA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3541  001BBE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3542  001BC2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3543  001BC6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3544  001BCA                     l3339:
  3545  001BCA  0E00               	movlw	0
  3546  001BCC  6E10               	movwf	___fladd@grs^0,c
  3547  001BCE  500F               	movf	___fladd@bexp^0,w,c
  3548  001BD0  C00E  F009         	movff	___fladd@aexp,??___fladd
  3549  001BD4  6A0A               	clrf	(??___fladd+1)^0,c
  3550  001BD6  5E09               	subwf	??___fladd^0,f,c
  3551  001BD8  0E00               	movlw	0
  3552  001BDA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3553  001BDC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3554  001BDE  EFFA  F00D         	goto	u2941
  3555  001BE2  500A               	movf	(??___fladd+1)^0,w,c
  3556  001BE4  E109               	bnz	u2940
  3557  001BE6  0E1A               	movlw	26
  3558  001BE8  5C09               	subwf	??___fladd^0,w,c
  3559  001BEA  A0D8               	btfss	status,0,c
  3560  001BEC  EFFA  F00D         	goto	u2941
  3561  001BF0  EFFC  F00D         	goto	u2940
  3562  001BF4                     u2941:
  3563  001BF4  EF33  F00E         	goto	l1118
  3564  001BF8                     u2940:
  3565  001BF8  5001               	movf	___fladd@b^0,w,c
  3566  001BFA  1002               	iorwf	(___fladd@b+1)^0,w,c
  3567  001BFC  1003               	iorwf	(___fladd@b+2)^0,w,c
  3568  001BFE  1004               	iorwf	(___fladd@b+3)^0,w,c
  3569  001C00  A4D8               	btfss	status,2,c
  3570  001C02  EF05  F00E         	goto	u2951
  3571  001C06  EF08  F00E         	goto	u2950
  3572  001C0A                     u2951:
  3573  001C0A  0E01               	movlw	1
  3574  001C0C  EF09  F00E         	goto	u2960
  3575  001C10                     u2950:
  3576  001C10  0E00               	movlw	0
  3577  001C12                     u2960:
  3578  001C12  6E10               	movwf	___fladd@grs^0,c
  3579  001C14  0E00               	movlw	0
  3580  001C16  6E01               	movwf	___fladd@b^0,c
  3581  001C18  0E00               	movlw	0
  3582  001C1A  6E02               	movwf	(___fladd@b+1)^0,c
  3583  001C1C  0E00               	movlw	0
  3584  001C1E  6E03               	movwf	(___fladd@b+2)^0,c
  3585  001C20  0E00               	movlw	0
  3586  001C22  6E04               	movwf	(___fladd@b+3)^0,c
  3587  001C24  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3588  001C28  EF3C  F00E         	goto	l1117
  3589  001C2C                     l1119:
  3590  001C2C  A010               	btfss	___fladd@grs^0,0,c
  3591  001C2E  EF1B  F00E         	goto	u2971
  3592  001C32  EF1D  F00E         	goto	u2970
  3593  001C36                     u2971:
  3594  001C36  EF23  F00E         	goto	l3351
  3595  001C3A                     u2970:
  3596  001C3A  90D8               	bcf	status,0,c
  3597  001C3C  3010               	rrcf	___fladd@grs^0,w,c
  3598  001C3E  0901               	iorlw	1
  3599  001C40  6E10               	movwf	___fladd@grs^0,c
  3600  001C42  EF25  F00E         	goto	l3353
  3601  001C46                     l3351:
  3602  001C46  90D8               	bcf	status,0,c
  3603  001C48  3210               	rrcf	___fladd@grs^0,f,c
  3604  001C4A                     l3353:
  3605  001C4A  A001               	btfss	___fladd@b^0,0,c
  3606  001C4C  EF2A  F00E         	goto	u2981
  3607  001C50  EF2C  F00E         	goto	u2980
  3608  001C54                     u2981:
  3609  001C54  EF2D  F00E         	goto	l3357
  3610  001C58                     u2980:
  3611  001C58  8E10               	bsf	___fladd@grs^0,7,c
  3612  001C5A                     l3357:
  3613  001C5A  3404               	rlcf	(___fladd@b+3)^0,w,c
  3614  001C5C  3204               	rrcf	(___fladd@b+3)^0,f,c
  3615  001C5E  3203               	rrcf	(___fladd@b+2)^0,f,c
  3616  001C60  3202               	rrcf	(___fladd@b+1)^0,f,c
  3617  001C62  3201               	rrcf	___fladd@b^0,f,c
  3618  001C64  2A0F               	incf	___fladd@bexp^0,f,c
  3619  001C66                     l1118:
  3620  001C66  500E               	movf	___fladd@aexp^0,w,c
  3621  001C68  5C0F               	subwf	___fladd@bexp^0,w,c
  3622  001C6A  A0D8               	btfss	status,0,c
  3623  001C6C  EF3A  F00E         	goto	u2991
  3624  001C70  EF3C  F00E         	goto	u2990
  3625  001C74                     u2991:
  3626  001C74  EF16  F00E         	goto	l1119
  3627  001C78                     u2990:
  3628  001C78                     l1117:
  3629  001C78  BC0D               	btfsc	___fladd@signs^0,6,c
  3630  001C7A  EF41  F00E         	goto	u3001
  3631  001C7E  EF43  F00E         	goto	u3000
  3632  001C82                     u3001:
  3633  001C82  EF83  F00E         	goto	l3385
  3634  001C86                     u3000:
  3635  001C86  500F               	movf	___fladd@bexp^0,w,c
  3636  001C88  A4D8               	btfss	status,2,c
  3637  001C8A  EF49  F00E         	goto	u3011
  3638  001C8E  EF4B  F00E         	goto	u3010
  3639  001C92                     u3011:
  3640  001C92  EF55  F00E         	goto	l3367
  3641  001C96                     u3010:
  3642  001C96  0E00               	movlw	0
  3643  001C98  6E01               	movwf	?___fladd^0,c
  3644  001C9A  0E00               	movlw	0
  3645  001C9C  6E02               	movwf	(?___fladd+1)^0,c
  3646  001C9E  0E00               	movlw	0
  3647  001CA0  6E03               	movwf	(?___fladd+2)^0,c
  3648  001CA2  0E00               	movlw	0
  3649  001CA4  6E04               	movwf	(?___fladd+3)^0,c
  3650  001CA6  EFA4  F00F         	goto	l1126
  3651  001CAA                     l3367:
  3652  001CAA  5005               	movf	___fladd@a^0,w,c
  3653  001CAC  2601               	addwf	___fladd@b^0,f,c
  3654  001CAE  5006               	movf	(___fladd@a+1)^0,w,c
  3655  001CB0  2202               	addwfc	(___fladd@b+1)^0,f,c
  3656  001CB2  5007               	movf	(___fladd@a+2)^0,w,c
  3657  001CB4  2203               	addwfc	(___fladd@b+2)^0,f,c
  3658  001CB6  5008               	movf	(___fladd@a+3)^0,w,c
  3659  001CB8  2204               	addwfc	(___fladd@b+3)^0,f,c
  3660  001CBA  A004               	btfss	(___fladd@b+3)^0,0,c
  3661  001CBC  EF62  F00E         	goto	u3021
  3662  001CC0  EF64  F00E         	goto	u3020
  3663  001CC4                     u3021:
  3664  001CC4  EF10  F00F         	goto	l3421
  3665  001CC8                     u3020:
  3666  001CC8  A010               	btfss	___fladd@grs^0,0,c
  3667  001CCA  EF69  F00E         	goto	u3031
  3668  001CCE  EF6B  F00E         	goto	u3030
  3669  001CD2                     u3031:
  3670  001CD2  EF71  F00E         	goto	l3375
  3671  001CD6                     u3030:
  3672  001CD6  90D8               	bcf	status,0,c
  3673  001CD8  3010               	rrcf	___fladd@grs^0,w,c
  3674  001CDA  0901               	iorlw	1
  3675  001CDC  6E10               	movwf	___fladd@grs^0,c
  3676  001CDE  EF73  F00E         	goto	l3377
  3677  001CE2                     l3375:
  3678  001CE2  90D8               	bcf	status,0,c
  3679  001CE4  3210               	rrcf	___fladd@grs^0,f,c
  3680  001CE6                     l3377:
  3681  001CE6  A001               	btfss	___fladd@b^0,0,c
  3682  001CE8  EF78  F00E         	goto	u3041
  3683  001CEC  EF7A  F00E         	goto	u3040
  3684  001CF0                     u3041:
  3685  001CF0  EF7B  F00E         	goto	l3381
  3686  001CF4                     u3040:
  3687  001CF4  8E10               	bsf	___fladd@grs^0,7,c
  3688  001CF6                     l3381:
  3689  001CF6  3404               	rlcf	(___fladd@b+3)^0,w,c
  3690  001CF8  3204               	rrcf	(___fladd@b+3)^0,f,c
  3691  001CFA  3203               	rrcf	(___fladd@b+2)^0,f,c
  3692  001CFC  3202               	rrcf	(___fladd@b+1)^0,f,c
  3693  001CFE  3201               	rrcf	___fladd@b^0,f,c
  3694  001D00  2A0F               	incf	___fladd@bexp^0,f,c
  3695  001D02  EF10  F00F         	goto	l3421
  3696  001D06                     l3385:
  3697  001D06  5005               	movf	___fladd@a^0,w,c
  3698  001D08  5C01               	subwf	___fladd@b^0,w,c
  3699  001D0A  5006               	movf	(___fladd@a+1)^0,w,c
  3700  001D0C  5802               	subwfb	(___fladd@b+1)^0,w,c
  3701  001D0E  5007               	movf	(___fladd@a+2)^0,w,c
  3702  001D10  5803               	subwfb	(___fladd@b+2)^0,w,c
  3703  001D12  5004               	movf	(___fladd@b+3)^0,w,c
  3704  001D14  0A80               	xorlw	128
  3705  001D16  6E09               	movwf	??___fladd^0,c
  3706  001D18  5008               	movf	(___fladd@a+3)^0,w,c
  3707  001D1A  0A80               	xorlw	128
  3708  001D1C  5809               	subwfb	??___fladd^0,w,c
  3709  001D1E  B0D8               	btfsc	status,0,c
  3710  001D20  EF94  F00E         	goto	u3051
  3711  001D24  EF96  F00E         	goto	u3050
  3712  001D28                     u3051:
  3713  001D28  EFC1  F00E         	goto	l3395
  3714  001D2C                     u3050:
  3715  001D2C  5001               	movf	___fladd@b^0,w,c
  3716  001D2E  5C05               	subwf	___fladd@a^0,w,c
  3717  001D30  6E09               	movwf	??___fladd^0,c
  3718  001D32  5002               	movf	(___fladd@b+1)^0,w,c
  3719  001D34  5806               	subwfb	(___fladd@a+1)^0,w,c
  3720  001D36  6E0A               	movwf	(??___fladd+1)^0,c
  3721  001D38  5003               	movf	(___fladd@b+2)^0,w,c
  3722  001D3A  5807               	subwfb	(___fladd@a+2)^0,w,c
  3723  001D3C  6E0B               	movwf	(??___fladd+2)^0,c
  3724  001D3E  5004               	movf	(___fladd@b+3)^0,w,c
  3725  001D40  5808               	subwfb	(___fladd@a+3)^0,w,c
  3726  001D42  6E0C               	movwf	(??___fladd+3)^0,c
  3727  001D44  0EFF               	movlw	255
  3728  001D46  2409               	addwf	??___fladd^0,w,c
  3729  001D48  6E01               	movwf	___fladd@b^0,c
  3730  001D4A  0EFF               	movlw	255
  3731  001D4C  200A               	addwfc	(??___fladd+1)^0,w,c
  3732  001D4E  6E02               	movwf	(___fladd@b+1)^0,c
  3733  001D50  0EFF               	movlw	255
  3734  001D52  200B               	addwfc	(??___fladd+2)^0,w,c
  3735  001D54  6E03               	movwf	(___fladd@b+2)^0,c
  3736  001D56  0EFF               	movlw	255
  3737  001D58  200C               	addwfc	(??___fladd+3)^0,w,c
  3738  001D5A  6E04               	movwf	(___fladd@b+3)^0,c
  3739  001D5C  0E80               	movlw	128
  3740  001D5E  1A0D               	xorwf	___fladd@signs^0,f,c
  3741  001D60  6C10               	negf	___fladd@grs^0,c
  3742  001D62  5010               	movf	___fladd@grs^0,w,c
  3743  001D64  A4D8               	btfss	status,2,c
  3744  001D66  EFB7  F00E         	goto	u3061
  3745  001D6A  EFB9  F00E         	goto	u3060
  3746  001D6E                     u3061:
  3747  001D6E  EFC9  F00E         	goto	l1134
  3748  001D72                     u3060:
  3749  001D72  0E01               	movlw	1
  3750  001D74  2601               	addwf	___fladd@b^0,f,c
  3751  001D76  0E00               	movlw	0
  3752  001D78  2202               	addwfc	(___fladd@b+1)^0,f,c
  3753  001D7A  2203               	addwfc	(___fladd@b+2)^0,f,c
  3754  001D7C  2204               	addwfc	(___fladd@b+3)^0,f,c
  3755  001D7E  EFC9  F00E         	goto	l1134
  3756  001D82                     l3395:
  3757  001D82  5005               	movf	___fladd@a^0,w,c
  3758  001D84  5E01               	subwf	___fladd@b^0,f,c
  3759  001D86  5006               	movf	(___fladd@a+1)^0,w,c
  3760  001D88  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3761  001D8A  5007               	movf	(___fladd@a+2)^0,w,c
  3762  001D8C  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3763  001D8E  5008               	movf	(___fladd@a+3)^0,w,c
  3764  001D90  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3765  001D92                     l1134:
  3766  001D92  5001               	movf	___fladd@b^0,w,c
  3767  001D94  1002               	iorwf	(___fladd@b+1)^0,w,c
  3768  001D96  1003               	iorwf	(___fladd@b+2)^0,w,c
  3769  001D98  1004               	iorwf	(___fladd@b+3)^0,w,c
  3770  001D9A  A4D8               	btfss	status,2,c
  3771  001D9C  EFD2  F00E         	goto	u3071
  3772  001DA0  EFD4  F00E         	goto	u3070
  3773  001DA4                     u3071:
  3774  001DA4  EF09  F00F         	goto	l3419
  3775  001DA8                     u3070:
  3776  001DA8  5010               	movf	___fladd@grs^0,w,c
  3777  001DAA  A4D8               	btfss	status,2,c
  3778  001DAC  EFDA  F00E         	goto	u3081
  3779  001DB0  EFDC  F00E         	goto	u3080
  3780  001DB4                     u3081:
  3781  001DB4  EF09  F00F         	goto	l3419
  3782  001DB8                     u3080:
  3783  001DB8  0E00               	movlw	0
  3784  001DBA  6E01               	movwf	?___fladd^0,c
  3785  001DBC  0E00               	movlw	0
  3786  001DBE  6E02               	movwf	(?___fladd+1)^0,c
  3787  001DC0  0E00               	movlw	0
  3788  001DC2  6E03               	movwf	(?___fladd+2)^0,c
  3789  001DC4  0E00               	movlw	0
  3790  001DC6  6E04               	movwf	(?___fladd+3)^0,c
  3791  001DC8  EFA4  F00F         	goto	l1126
  3792  001DCC                     l3403:
  3793  001DCC  90D8               	bcf	status,0,c
  3794  001DCE  3601               	rlcf	___fladd@b^0,f,c
  3795  001DD0  3602               	rlcf	(___fladd@b+1)^0,f,c
  3796  001DD2  3603               	rlcf	(___fladd@b+2)^0,f,c
  3797  001DD4  3604               	rlcf	(___fladd@b+3)^0,f,c
  3798  001DD6  AE10               	btfss	___fladd@grs^0,7,c
  3799  001DD8  EFF0  F00E         	goto	u3091
  3800  001DDC  EFF2  F00E         	goto	u3090
  3801  001DE0                     u3091:
  3802  001DE0  EFF3  F00E         	goto	l3409
  3803  001DE4                     u3090:
  3804  001DE4  8001               	bsf	___fladd@b^0,0,c
  3805  001DE6                     l3409:
  3806  001DE6  A010               	btfss	___fladd@grs^0,0,c
  3807  001DE8  EFF8  F00E         	goto	u3101
  3808  001DEC  EFFA  F00E         	goto	u3100
  3809  001DF0                     u3101:
  3810  001DF0  EFFE  F00E         	goto	l3413
  3811  001DF4                     u3100:
  3812  001DF4  80D8               	bsf	status,0,c
  3813  001DF6  3610               	rlcf	___fladd@grs^0,f,c
  3814  001DF8  EF00  F00F         	goto	l3415
  3815  001DFC                     l3413:
  3816  001DFC  90D8               	bcf	status,0,c
  3817  001DFE  3610               	rlcf	___fladd@grs^0,f,c
  3818  001E00                     l3415:
  3819  001E00  500F               	movf	___fladd@bexp^0,w,c
  3820  001E02  B4D8               	btfsc	status,2,c
  3821  001E04  EF06  F00F         	goto	u3111
  3822  001E08  EF08  F00F         	goto	u3110
  3823  001E0C                     u3111:
  3824  001E0C  EF09  F00F         	goto	l3419
  3825  001E10                     u3110:
  3826  001E10  060F               	decf	___fladd@bexp^0,f,c
  3827  001E12                     l3419:
  3828  001E12  AE03               	btfss	(___fladd@b+2)^0,7,c
  3829  001E14  EF0E  F00F         	goto	u3121
  3830  001E18  EF10  F00F         	goto	u3120
  3831  001E1C                     u3121:
  3832  001E1C  EFE6  F00E         	goto	l3403
  3833  001E20                     u3120:
  3834  001E20                     l3421:
  3835  001E20  0E00               	movlw	0
  3836  001E22  6E0E               	movwf	___fladd@aexp^0,c
  3837  001E24  AE10               	btfss	___fladd@grs^0,7,c
  3838  001E26  EF17  F00F         	goto	u3131
  3839  001E2A  EF19  F00F         	goto	u3130
  3840  001E2E                     u3131:
  3841  001E2E  EF31  F00F         	goto	l1143
  3842  001E32                     u3130:
  3843  001E32  C010  F009         	movff	___fladd@grs,??___fladd
  3844  001E36  0E7F               	movlw	127
  3845  001E38  1609               	andwf	??___fladd^0,f,c
  3846  001E3A  B4D8               	btfsc	status,2,c
  3847  001E3C  EF22  F00F         	goto	u3141
  3848  001E40  EF24  F00F         	goto	u3140
  3849  001E44                     u3141:
  3850  001E44  EF28  F00F         	goto	l1144
  3851  001E48                     u3140:
  3852  001E48                     l3427:
  3853  001E48  0E01               	movlw	1
  3854  001E4A  6E0E               	movwf	___fladd@aexp^0,c
  3855  001E4C  EF31  F00F         	goto	l1143
  3856  001E50                     l1144:
  3857  001E50  A001               	btfss	___fladd@b^0,0,c
  3858  001E52  EF2D  F00F         	goto	u3151
  3859  001E56  EF2F  F00F         	goto	u3150
  3860  001E5A                     u3151:
  3861  001E5A  EF31  F00F         	goto	l1143
  3862  001E5E                     u3150:
  3863  001E5E  EF24  F00F         	goto	l3427
  3864  001E62                     l1143:
  3865  001E62  500E               	movf	___fladd@aexp^0,w,c
  3866  001E64  B4D8               	btfsc	status,2,c
  3867  001E66  EF37  F00F         	goto	u3161
  3868  001E6A  EF39  F00F         	goto	u3160
  3869  001E6E                     u3161:
  3870  001E6E  EF64  F00F         	goto	l3439
  3871  001E72                     u3160:
  3872  001E72  0E01               	movlw	1
  3873  001E74  2601               	addwf	___fladd@b^0,f,c
  3874  001E76  0E00               	movlw	0
  3875  001E78  2202               	addwfc	(___fladd@b+1)^0,f,c
  3876  001E7A  2203               	addwfc	(___fladd@b+2)^0,f,c
  3877  001E7C  2204               	addwfc	(___fladd@b+3)^0,f,c
  3878  001E7E  A004               	btfss	(___fladd@b+3)^0,0,c
  3879  001E80  EF44  F00F         	goto	u3171
  3880  001E84  EF46  F00F         	goto	u3170
  3881  001E88                     u3171:
  3882  001E88  EF64  F00F         	goto	l3439
  3883  001E8C                     u3170:
  3884  001E8C  C001  F009         	movff	___fladd@b,??___fladd
  3885  001E90  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3886  001E94  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3887  001E98  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3888  001E9C  340C               	rlcf	(??___fladd+3)^0,w,c
  3889  001E9E  320C               	rrcf	(??___fladd+3)^0,f,c
  3890  001EA0  320B               	rrcf	(??___fladd+2)^0,f,c
  3891  001EA2  320A               	rrcf	(??___fladd+1)^0,f,c
  3892  001EA4  3209               	rrcf	??___fladd^0,f,c
  3893  001EA6  C009  F001         	movff	??___fladd,___fladd@b
  3894  001EAA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3895  001EAE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3896  001EB2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3897  001EB6  280F               	incf	___fladd@bexp^0,w,c
  3898  001EB8  B4D8               	btfsc	status,2,c
  3899  001EBA  EF61  F00F         	goto	u3181
  3900  001EBE  EF63  F00F         	goto	u3180
  3901  001EC2                     u3181:
  3902  001EC2  EF64  F00F         	goto	l3439
  3903  001EC6                     u3180:
  3904  001EC6  2A0F               	incf	___fladd@bexp^0,f,c
  3905  001EC8                     l3439:
  3906  001EC8  280F               	incf	___fladd@bexp^0,w,c
  3907  001ECA  B4D8               	btfsc	status,2,c
  3908  001ECC  EF6A  F00F         	goto	u3191
  3909  001ED0  EF6C  F00F         	goto	u3190
  3910  001ED4                     u3191:
  3911  001ED4  EF74  F00F         	goto	l3443
  3912  001ED8                     u3190:
  3913  001ED8  500F               	movf	___fladd@bexp^0,w,c
  3914  001EDA  A4D8               	btfss	status,2,c
  3915  001EDC  EF72  F00F         	goto	u3201
  3916  001EE0  EF74  F00F         	goto	u3200
  3917  001EE4                     u3201:
  3918  001EE4  EF86  F00F         	goto	l3447
  3919  001EE8                     u3200:
  3920  001EE8                     l3443:
  3921  001EE8  0E00               	movlw	0
  3922  001EEA  6E01               	movwf	___fladd@b^0,c
  3923  001EEC  0E00               	movlw	0
  3924  001EEE  6E02               	movwf	(___fladd@b+1)^0,c
  3925  001EF0  0E00               	movlw	0
  3926  001EF2  6E03               	movwf	(___fladd@b+2)^0,c
  3927  001EF4  0E00               	movlw	0
  3928  001EF6  6E04               	movwf	(___fladd@b+3)^0,c
  3929  001EF8  500F               	movf	___fladd@bexp^0,w,c
  3930  001EFA  A4D8               	btfss	status,2,c
  3931  001EFC  EF82  F00F         	goto	u3211
  3932  001F00  EF84  F00F         	goto	u3210
  3933  001F04                     u3211:
  3934  001F04  EF86  F00F         	goto	l3447
  3935  001F08                     u3210:
  3936  001F08  0E00               	movlw	0
  3937  001F0A  6E0D               	movwf	___fladd@signs^0,c
  3938  001F0C                     l3447:
  3939  001F0C  A00F               	btfss	___fladd@bexp^0,0,c
  3940  001F0E  EF8B  F00F         	goto	u3221
  3941  001F12  EF8D  F00F         	goto	u3220
  3942  001F16                     u3221:
  3943  001F16  EF90  F00F         	goto	l3451
  3944  001F1A                     u3220:
  3945  001F1A  8E03               	bsf	(___fladd@b+2)^0,7,c
  3946  001F1C  EF91  F00F         	goto	l3453
  3947  001F20                     l3451:
  3948  001F20  9E03               	bcf	(___fladd@b+2)^0,7,c
  3949  001F22                     l3453:
  3950  001F22  90D8               	bcf	status,0,c
  3951  001F24  300F               	rrcf	___fladd@bexp^0,w,c
  3952  001F26  6E04               	movwf	(___fladd@b+3)^0,c
  3953  001F28  AE0D               	btfss	___fladd@signs^0,7,c
  3954  001F2A  EF99  F00F         	goto	u3231
  3955  001F2E  EF9B  F00F         	goto	u3230
  3956  001F32                     u3231:
  3957  001F32  EF9C  F00F         	goto	l3459
  3958  001F36                     u3230:
  3959  001F36  8E04               	bsf	(___fladd@b+3)^0,7,c
  3960  001F38                     l3459:
  3961  001F38  C001  F001         	movff	___fladd@b,?___fladd
  3962  001F3C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3963  001F40  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3964  001F44  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3965  001F48                     l1126:
  3966  001F48  0012               	return		;funcret
  3967  001F4A                     __end_of___fladd:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function ___flneg *****************
  3971 ;; Defined at:
  3972 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  f1              4    0[COMRAM] unsigned char 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  4    0[COMRAM] unsigned char 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3986 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3989 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;Total ram usage:        4 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_roundf
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text10
  4000  00416E                     __ptext10:
  4001                           	callstack 0
  4002  00416E                     ___flneg:
  4003                           	callstack 27
  4004  00416E  5001               	movf	___flneg@f1^0,w,c
  4005  004170  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4006  004172  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4007  004174  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4008  004176  B4D8               	btfsc	status,2,c
  4009  004178  EFC0  F020         	goto	u3551
  4010  00417C  EFC2  F020         	goto	u3550
  4011  004180                     u3551:
  4012  004180  EFCA  F020         	goto	l3701
  4013  004184                     u3550:
  4014  004184  0E00               	movlw	0
  4015  004186  1A01               	xorwf	___flneg@f1^0,f,c
  4016  004188  0E00               	movlw	0
  4017  00418A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4018  00418C  0E00               	movlw	0
  4019  00418E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4020  004190  0E80               	movlw	128
  4021  004192  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4022  004194                     l3701:
  4023  004194  C001  F001         	movff	___flneg@f1,?___flneg
  4024  004198  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4025  00419C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4026  0041A0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4027  0041A4  0012               	return		;funcret
  4028  0041A6                     __end_of___flneg:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function ___flmul *****************
  4032 ;; Defined at:
  4033 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  b               4   39[COMRAM] unsigned char 
  4036 ;;  a               4   43[COMRAM] unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  prod            4   58[COMRAM] struct .
  4039 ;;  grs             4   52[COMRAM] unsigned long 
  4040 ;;  temp            2   62[COMRAM] struct .
  4041 ;;  bexp            1   57[COMRAM] unsigned char 
  4042 ;;  aexp            1   56[COMRAM] unsigned char 
  4043 ;;  sign            1   51[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  4   39[COMRAM] unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, prodl, prodh
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4053 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;Total ram usage:       25 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; This function calls:
  4060 ;;		Nothing
  4061 ;; This function is called by:
  4062 ;;		_detect_color
  4063 ;;		_roundf
  4064 ;;		_check_color_reading
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text11
  4069  001F4A                     __ptext11:
  4070                           	callstack 0
  4071  001F4A                     ___flmul:
  4072                           	callstack 27
  4073  001F4A  502B               	movf	(___flmul@b+3)^0,w,c
  4074  001F4C  0B80               	andlw	128
  4075  001F4E  6E34               	movwf	___flmul@sign^0,c
  4076  001F50  502B               	movf	(___flmul@b+3)^0,w,c
  4077  001F52  242B               	addwf	(___flmul@b+3)^0,w,c
  4078  001F54  6E3A               	movwf	___flmul@bexp^0,c
  4079  001F56  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4080  001F58  EFB0  F00F         	goto	u3311
  4081  001F5C  EFB2  F00F         	goto	u3310
  4082  001F60                     u3311:
  4083  001F60  EFB3  F00F         	goto	l3545
  4084  001F64                     u3310:
  4085  001F64  803A               	bsf	___flmul@bexp^0,0,c
  4086  001F66                     l3545:
  4087  001F66  503A               	movf	___flmul@bexp^0,w,c
  4088  001F68  B4D8               	btfsc	status,2,c
  4089  001F6A  EFB9  F00F         	goto	u3321
  4090  001F6E  EFBB  F00F         	goto	u3320
  4091  001F72                     u3321:
  4092  001F72  EFCE  F00F         	goto	l3553
  4093  001F76                     u3320:
  4094  001F76  283A               	incf	___flmul@bexp^0,w,c
  4095  001F78  A4D8               	btfss	status,2,c
  4096  001F7A  EFC1  F00F         	goto	u3331
  4097  001F7E  EFC3  F00F         	goto	u3330
  4098  001F82                     u3331:
  4099  001F82  EFCB  F00F         	goto	l3551
  4100  001F86                     u3330:
  4101  001F86  0E00               	movlw	0
  4102  001F88  6E28               	movwf	___flmul@b^0,c
  4103  001F8A  0E00               	movlw	0
  4104  001F8C  6E29               	movwf	(___flmul@b+1)^0,c
  4105  001F8E  0E00               	movlw	0
  4106  001F90  6E2A               	movwf	(___flmul@b+2)^0,c
  4107  001F92  0E00               	movlw	0
  4108  001F94  6E2B               	movwf	(___flmul@b+3)^0,c
  4109  001F96                     l3551:
  4110  001F96  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4111  001F98  EFD6  F00F         	goto	l3555
  4112  001F9C                     l3553:
  4113  001F9C  0E00               	movlw	0
  4114  001F9E  6E28               	movwf	___flmul@b^0,c
  4115  001FA0  0E00               	movlw	0
  4116  001FA2  6E29               	movwf	(___flmul@b+1)^0,c
  4117  001FA4  0E00               	movlw	0
  4118  001FA6  6E2A               	movwf	(___flmul@b+2)^0,c
  4119  001FA8  0E00               	movlw	0
  4120  001FAA  6E2B               	movwf	(___flmul@b+3)^0,c
  4121  001FAC                     l3555:
  4122  001FAC  502F               	movf	(___flmul@a+3)^0,w,c
  4123  001FAE  0B80               	andlw	128
  4124  001FB0  1A34               	xorwf	___flmul@sign^0,f,c
  4125  001FB2  502F               	movf	(___flmul@a+3)^0,w,c
  4126  001FB4  242F               	addwf	(___flmul@a+3)^0,w,c
  4127  001FB6  6E39               	movwf	___flmul@aexp^0,c
  4128  001FB8  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4129  001FBA  EFE1  F00F         	goto	u3341
  4130  001FBE  EFE3  F00F         	goto	u3340
  4131  001FC2                     u3341:
  4132  001FC2  EFE4  F00F         	goto	l3563
  4133  001FC6                     u3340:
  4134  001FC6  8039               	bsf	___flmul@aexp^0,0,c
  4135  001FC8                     l3563:
  4136  001FC8  5039               	movf	___flmul@aexp^0,w,c
  4137  001FCA  B4D8               	btfsc	status,2,c
  4138  001FCC  EFEA  F00F         	goto	u3351
  4139  001FD0  EFEC  F00F         	goto	u3350
  4140  001FD4                     u3351:
  4141  001FD4  EFFF  F00F         	goto	l3571
  4142  001FD8                     u3350:
  4143  001FD8  2839               	incf	___flmul@aexp^0,w,c
  4144  001FDA  A4D8               	btfss	status,2,c
  4145  001FDC  EFF2  F00F         	goto	u3361
  4146  001FE0  EFF4  F00F         	goto	u3360
  4147  001FE4                     u3361:
  4148  001FE4  EFFC  F00F         	goto	l3569
  4149  001FE8                     u3360:
  4150  001FE8  0E00               	movlw	0
  4151  001FEA  6E2C               	movwf	___flmul@a^0,c
  4152  001FEC  0E00               	movlw	0
  4153  001FEE  6E2D               	movwf	(___flmul@a+1)^0,c
  4154  001FF0  0E00               	movlw	0
  4155  001FF2  6E2E               	movwf	(___flmul@a+2)^0,c
  4156  001FF4  0E00               	movlw	0
  4157  001FF6  6E2F               	movwf	(___flmul@a+3)^0,c
  4158  001FF8                     l3569:
  4159  001FF8  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4160  001FFA  EF07  F010         	goto	l1203
  4161  001FFE                     l3571:
  4162  001FFE  0E00               	movlw	0
  4163  002000  6E2C               	movwf	___flmul@a^0,c
  4164  002002  0E00               	movlw	0
  4165  002004  6E2D               	movwf	(___flmul@a+1)^0,c
  4166  002006  0E00               	movlw	0
  4167  002008  6E2E               	movwf	(___flmul@a+2)^0,c
  4168  00200A  0E00               	movlw	0
  4169  00200C  6E2F               	movwf	(___flmul@a+3)^0,c
  4170  00200E                     l1203:
  4171  00200E  5039               	movf	___flmul@aexp^0,w,c
  4172  002010  B4D8               	btfsc	status,2,c
  4173  002012  EF0D  F010         	goto	u3371
  4174  002016  EF0F  F010         	goto	u3370
  4175  00201A                     u3371:
  4176  00201A  EF17  F010         	goto	l3575
  4177  00201E                     u3370:
  4178  00201E  503A               	movf	___flmul@bexp^0,w,c
  4179  002020  A4D8               	btfss	status,2,c
  4180  002022  EF15  F010         	goto	u3381
  4181  002026  EF17  F010         	goto	u3380
  4182  00202A                     u3381:
  4183  00202A  EF21  F010         	goto	l3579
  4184  00202E                     u3380:
  4185  00202E                     l3575:
  4186  00202E  0E00               	movlw	0
  4187  002030  6E28               	movwf	?___flmul^0,c
  4188  002032  0E00               	movlw	0
  4189  002034  6E29               	movwf	(?___flmul+1)^0,c
  4190  002036  0E00               	movlw	0
  4191  002038  6E2A               	movwf	(?___flmul+2)^0,c
  4192  00203A  0E00               	movlw	0
  4193  00203C  6E2B               	movwf	(?___flmul+3)^0,c
  4194  00203E  EFB9  F011         	goto	l1207
  4195  002042                     l3579:
  4196  002042  502E               	movf	(___flmul@a+2)^0,w,c
  4197  002044  0228               	mulwf	___flmul@b^0,c
  4198  002046  CFF3 F03F          	movff	prodl,___flmul@temp
  4199  00204A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4200  00204E  503F               	movf	___flmul@temp^0,w,c
  4201  002050  6E35               	movwf	___flmul@grs^0,c
  4202  002052  6A36               	clrf	(___flmul@grs+1)^0,c
  4203  002054  6A37               	clrf	(___flmul@grs+2)^0,c
  4204  002056  6A38               	clrf	(___flmul@grs+3)^0,c
  4205  002058  5040               	movf	(___flmul@temp+1)^0,w,c
  4206  00205A  6E3B               	movwf	___flmul@prod^0,c
  4207  00205C  6A3C               	clrf	(___flmul@prod+1)^0,c
  4208  00205E  6A3D               	clrf	(___flmul@prod+2)^0,c
  4209  002060  6A3E               	clrf	(___flmul@prod+3)^0,c
  4210  002062  502D               	movf	(___flmul@a+1)^0,w,c
  4211  002064  0229               	mulwf	(___flmul@b+1)^0,c
  4212  002066  CFF3 F03F          	movff	prodl,___flmul@temp
  4213  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4214  00206E  503F               	movf	___flmul@temp^0,w,c
  4215  002070  2635               	addwf	___flmul@grs^0,f,c
  4216  002072  0E00               	movlw	0
  4217  002074  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4218  002076  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4219  002078  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4220  00207A  5040               	movf	(___flmul@temp+1)^0,w,c
  4221  00207C  263B               	addwf	___flmul@prod^0,f,c
  4222  00207E  0E00               	movlw	0
  4223  002080  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4224  002082  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4225  002084  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4226  002086  502C               	movf	___flmul@a^0,w,c
  4227  002088  022A               	mulwf	(___flmul@b+2)^0,c
  4228  00208A  CFF3 F03F          	movff	prodl,___flmul@temp
  4229  00208E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4230  002092  503F               	movf	___flmul@temp^0,w,c
  4231  002094  2635               	addwf	___flmul@grs^0,f,c
  4232  002096  0E00               	movlw	0
  4233  002098  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4234  00209A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4235  00209C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4236  00209E  5040               	movf	(___flmul@temp+1)^0,w,c
  4237  0020A0  263B               	addwf	___flmul@prod^0,f,c
  4238  0020A2  0E00               	movlw	0
  4239  0020A4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4240  0020A6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4241  0020A8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4242  0020AA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4243  0020AE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4244  0020B2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4245  0020B6  6A35               	clrf	___flmul@grs^0,c
  4246  0020B8  502C               	movf	___flmul@a^0,w,c
  4247  0020BA  0229               	mulwf	(___flmul@b+1)^0,c
  4248  0020BC  CFF3 F03F          	movff	prodl,___flmul@temp
  4249  0020C0  CFF4 F040          	movff	prodh,___flmul@temp+1
  4250  0020C4  503F               	movf	___flmul@temp^0,w,c
  4251  0020C6  2635               	addwf	___flmul@grs^0,f,c
  4252  0020C8  5040               	movf	(___flmul@temp+1)^0,w,c
  4253  0020CA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4254  0020CC  0E00               	movlw	0
  4255  0020CE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4256  0020D0  0E00               	movlw	0
  4257  0020D2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4258  0020D4  502D               	movf	(___flmul@a+1)^0,w,c
  4259  0020D6  0228               	mulwf	___flmul@b^0,c
  4260  0020D8  CFF3 F03F          	movff	prodl,___flmul@temp
  4261  0020DC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4262  0020E0  503F               	movf	___flmul@temp^0,w,c
  4263  0020E2  2635               	addwf	___flmul@grs^0,f,c
  4264  0020E4  5040               	movf	(___flmul@temp+1)^0,w,c
  4265  0020E6  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4266  0020E8  0E00               	movlw	0
  4267  0020EA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4268  0020EC  0E00               	movlw	0
  4269  0020EE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4270  0020F0  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4271  0020F4  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4272  0020F8  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4273  0020FC  6A35               	clrf	___flmul@grs^0,c
  4274  0020FE  502C               	movf	___flmul@a^0,w,c
  4275  002100  0228               	mulwf	___flmul@b^0,c
  4276  002102  CFF3 F03F          	movff	prodl,___flmul@temp
  4277  002106  CFF4 F040          	movff	prodh,___flmul@temp+1
  4278  00210A  503F               	movf	___flmul@temp^0,w,c
  4279  00210C  2635               	addwf	___flmul@grs^0,f,c
  4280  00210E  5040               	movf	(___flmul@temp+1)^0,w,c
  4281  002110  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4282  002112  0E00               	movlw	0
  4283  002114  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4284  002116  0E00               	movlw	0
  4285  002118  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4286  00211A  502E               	movf	(___flmul@a+2)^0,w,c
  4287  00211C  0229               	mulwf	(___flmul@b+1)^0,c
  4288  00211E  CFF3 F03F          	movff	prodl,___flmul@temp
  4289  002122  CFF4 F040          	movff	prodh,___flmul@temp+1
  4290  002126  503F               	movf	___flmul@temp^0,w,c
  4291  002128  263B               	addwf	___flmul@prod^0,f,c
  4292  00212A  5040               	movf	(___flmul@temp+1)^0,w,c
  4293  00212C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4294  00212E  0E00               	movlw	0
  4295  002130  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4296  002132  0E00               	movlw	0
  4297  002134  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4298  002136  502D               	movf	(___flmul@a+1)^0,w,c
  4299  002138  022A               	mulwf	(___flmul@b+2)^0,c
  4300  00213A  CFF3 F03F          	movff	prodl,___flmul@temp
  4301  00213E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4302  002142  503F               	movf	___flmul@temp^0,w,c
  4303  002144  263B               	addwf	___flmul@prod^0,f,c
  4304  002146  5040               	movf	(___flmul@temp+1)^0,w,c
  4305  002148  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4306  00214A  0E00               	movlw	0
  4307  00214C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4308  00214E  0E00               	movlw	0
  4309  002150  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4310  002152  502E               	movf	(___flmul@a+2)^0,w,c
  4311  002154  022A               	mulwf	(___flmul@b+2)^0,c
  4312  002156  CFF3 F03F          	movff	prodl,___flmul@temp
  4313  00215A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4314  00215E  503F               	movf	___flmul@temp^0,w,c
  4315  002160  6E30               	movwf	??___flmul^0,c
  4316  002162  5040               	movf	(___flmul@temp+1)^0,w,c
  4317  002164  6E31               	movwf	(??___flmul+1)^0,c
  4318  002166  6A32               	clrf	(??___flmul+2)^0,c
  4319  002168  6A33               	clrf	(??___flmul+3)^0,c
  4320  00216A  C032  F033         	movff	??___flmul+2,??___flmul+3
  4321  00216E  C031  F032         	movff	??___flmul+1,??___flmul+2
  4322  002172  C030  F031         	movff	??___flmul,??___flmul+1
  4323  002176  6A30               	clrf	??___flmul^0,c
  4324  002178  5030               	movf	??___flmul^0,w,c
  4325  00217A  263B               	addwf	___flmul@prod^0,f,c
  4326  00217C  5031               	movf	(??___flmul+1)^0,w,c
  4327  00217E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4328  002180  5032               	movf	(??___flmul+2)^0,w,c
  4329  002182  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4330  002184  5033               	movf	(??___flmul+3)^0,w,c
  4331  002186  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4332  002188  C035  F030         	movff	___flmul@grs,??___flmul
  4333  00218C  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4334  002190  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4335  002194  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4336  002198  0E19               	movlw	25
  4337  00219A  EFD4  F010         	goto	u3390
  4338  00219E                     u3395:
  4339  00219E  90D8               	bcf	status,0,c
  4340  0021A0  3233               	rrcf	(??___flmul+3)^0,f,c
  4341  0021A2  3232               	rrcf	(??___flmul+2)^0,f,c
  4342  0021A4  3231               	rrcf	(??___flmul+1)^0,f,c
  4343  0021A6  3230               	rrcf	??___flmul^0,f,c
  4344  0021A8                     u3390:
  4345  0021A8  2EE8               	decfsz	wreg,f,c
  4346  0021AA  EFCF  F010         	goto	u3395
  4347  0021AE  5030               	movf	??___flmul^0,w,c
  4348  0021B0  263B               	addwf	___flmul@prod^0,f,c
  4349  0021B2  5031               	movf	(??___flmul+1)^0,w,c
  4350  0021B4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4351  0021B6  5032               	movf	(??___flmul+2)^0,w,c
  4352  0021B8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4353  0021BA  5033               	movf	(??___flmul+3)^0,w,c
  4354  0021BC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4355  0021BE  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4356  0021C2  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4357  0021C6  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4358  0021CA  6A35               	clrf	___flmul@grs^0,c
  4359  0021CC  5039               	movf	___flmul@aexp^0,w,c
  4360  0021CE  C03A  F030         	movff	___flmul@bexp,??___flmul
  4361  0021D2  6A31               	clrf	(??___flmul+1)^0,c
  4362  0021D4  2630               	addwf	??___flmul^0,f,c
  4363  0021D6  0E00               	movlw	0
  4364  0021D8  2231               	addwfc	(??___flmul+1)^0,f,c
  4365  0021DA  0E82               	movlw	130
  4366  0021DC  2430               	addwf	??___flmul^0,w,c
  4367  0021DE  6E3F               	movwf	___flmul@temp^0,c
  4368  0021E0  0EFF               	movlw	255
  4369  0021E2  2031               	addwfc	(??___flmul+1)^0,w,c
  4370  0021E4  6E40               	movwf	(___flmul@temp+1)^0,c
  4371  0021E6  EF0A  F011         	goto	l3627
  4372  0021EA                     l3621:
  4373  0021EA  90D8               	bcf	status,0,c
  4374  0021EC  363B               	rlcf	___flmul@prod^0,f,c
  4375  0021EE  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4376  0021F0  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4377  0021F2  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4378  0021F4  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4379  0021F6  EFFF  F010         	goto	u3401
  4380  0021FA  EF01  F011         	goto	u3400
  4381  0021FE                     u3401:
  4382  0021FE  EF02  F011         	goto	l1210
  4383  002202                     u3400:
  4384  002202  803B               	bsf	___flmul@prod^0,0,c
  4385  002204                     l1210:
  4386  002204  90D8               	bcf	status,0,c
  4387  002206  3635               	rlcf	___flmul@grs^0,f,c
  4388  002208  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4389  00220A  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4390  00220C  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4391  00220E  063F               	decf	___flmul@temp^0,f,c
  4392  002210  A0D8               	btfss	status,0,c
  4393  002212  0640               	decf	(___flmul@temp+1)^0,f,c
  4394  002214                     l3627:
  4395  002214  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4396  002216  EF0F  F011         	goto	u3411
  4397  00221A  EF11  F011         	goto	u3410
  4398  00221E                     u3411:
  4399  00221E  EFF5  F010         	goto	l3621
  4400  002222                     u3410:
  4401  002222  0E00               	movlw	0
  4402  002224  6E39               	movwf	___flmul@aexp^0,c
  4403  002226  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4404  002228  EF18  F011         	goto	u3421
  4405  00222C  EF1A  F011         	goto	u3420
  4406  002230                     u3421:
  4407  002230  EF3E  F011         	goto	l1212
  4408  002234                     u3420:
  4409  002234  0EFF               	movlw	255
  4410  002236  1435               	andwf	___flmul@grs^0,w,c
  4411  002238  6E30               	movwf	??___flmul^0,c
  4412  00223A  0EFF               	movlw	255
  4413  00223C  1436               	andwf	(___flmul@grs+1)^0,w,c
  4414  00223E  6E31               	movwf	(??___flmul+1)^0,c
  4415  002240  0EFF               	movlw	255
  4416  002242  1437               	andwf	(___flmul@grs+2)^0,w,c
  4417  002244  6E32               	movwf	(??___flmul+2)^0,c
  4418  002246  0E7F               	movlw	127
  4419  002248  1438               	andwf	(___flmul@grs+3)^0,w,c
  4420  00224A  6E33               	movwf	(??___flmul+3)^0,c
  4421  00224C  5030               	movf	??___flmul^0,w,c
  4422  00224E  1031               	iorwf	(??___flmul+1)^0,w,c
  4423  002250  1032               	iorwf	(??___flmul+2)^0,w,c
  4424  002252  1033               	iorwf	(??___flmul+3)^0,w,c
  4425  002254  B4D8               	btfsc	status,2,c
  4426  002256  EF2F  F011         	goto	u3431
  4427  00225A  EF31  F011         	goto	u3430
  4428  00225E                     u3431:
  4429  00225E  EF35  F011         	goto	l1213
  4430  002262                     u3430:
  4431  002262                     l3635:
  4432  002262  0E01               	movlw	1
  4433  002264  6E39               	movwf	___flmul@aexp^0,c
  4434  002266  EF3E  F011         	goto	l1212
  4435  00226A                     l1213:
  4436  00226A  A03B               	btfss	___flmul@prod^0,0,c
  4437  00226C  EF3A  F011         	goto	u3441
  4438  002270  EF3C  F011         	goto	u3440
  4439  002274                     u3441:
  4440  002274  EF3E  F011         	goto	l1212
  4441  002278                     u3440:
  4442  002278  EF31  F011         	goto	l3635
  4443  00227C                     l1212:
  4444  00227C  5039               	movf	___flmul@aexp^0,w,c
  4445  00227E  B4D8               	btfsc	status,2,c
  4446  002280  EF44  F011         	goto	u3451
  4447  002284  EF46  F011         	goto	u3450
  4448  002288                     u3451:
  4449  002288  EF6A  F011         	goto	l3647
  4450  00228C                     u3450:
  4451  00228C  0E01               	movlw	1
  4452  00228E  263B               	addwf	___flmul@prod^0,f,c
  4453  002290  0E00               	movlw	0
  4454  002292  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4455  002294  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4456  002296  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4457  002298  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4458  00229A  EF51  F011         	goto	u3461
  4459  00229E  EF53  F011         	goto	u3460
  4460  0022A2                     u3461:
  4461  0022A2  EF6A  F011         	goto	l3647
  4462  0022A6                     u3460:
  4463  0022A6  C03B  F030         	movff	___flmul@prod,??___flmul
  4464  0022AA  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4465  0022AE  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4466  0022B2  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4467  0022B6  3433               	rlcf	(??___flmul+3)^0,w,c
  4468  0022B8  3233               	rrcf	(??___flmul+3)^0,f,c
  4469  0022BA  3232               	rrcf	(??___flmul+2)^0,f,c
  4470  0022BC  3231               	rrcf	(??___flmul+1)^0,f,c
  4471  0022BE  3230               	rrcf	??___flmul^0,f,c
  4472  0022C0  C030  F03B         	movff	??___flmul,___flmul@prod
  4473  0022C4  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4474  0022C8  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4475  0022CC  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4476  0022D0  4A3F               	infsnz	___flmul@temp^0,f,c
  4477  0022D2  2A40               	incf	(___flmul@temp+1)^0,f,c
  4478  0022D4                     l3647:
  4479  0022D4  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4480  0022D6  EF75  F011         	goto	u3471
  4481  0022DA  5040               	movf	(___flmul@temp+1)^0,w,c
  4482  0022DC  E108               	bnz	u3470
  4483  0022DE  283F               	incf	___flmul@temp^0,w,c
  4484  0022E0  A0D8               	btfss	status,0,c
  4485  0022E2  EF75  F011         	goto	u3471
  4486  0022E6  EF77  F011         	goto	u3470
  4487  0022EA                     u3471:
  4488  0022EA  EF81  F011         	goto	l3651
  4489  0022EE                     u3470:
  4490  0022EE  0E00               	movlw	0
  4491  0022F0  6E3B               	movwf	___flmul@prod^0,c
  4492  0022F2  0E00               	movlw	0
  4493  0022F4  6E3C               	movwf	(___flmul@prod+1)^0,c
  4494  0022F6  0E80               	movlw	128
  4495  0022F8  6E3D               	movwf	(___flmul@prod+2)^0,c
  4496  0022FA  0E7F               	movlw	127
  4497  0022FC  6E3E               	movwf	(___flmul@prod+3)^0,c
  4498  0022FE  EFAF  F011         	goto	l3663
  4499  002302                     l3651:
  4500  002302  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4501  002304  EF8E  F011         	goto	u3480
  4502  002308  5040               	movf	(___flmul@temp+1)^0,w,c
  4503  00230A  E106               	bnz	u3481
  4504  00230C  043F               	decf	___flmul@temp^0,w,c
  4505  00230E  B0D8               	btfsc	status,0,c
  4506  002310  EF8C  F011         	goto	u3481
  4507  002314  EF8E  F011         	goto	u3480
  4508  002318                     u3481:
  4509  002318  EF9A  F011         	goto	l1220
  4510  00231C                     u3480:
  4511  00231C  0E00               	movlw	0
  4512  00231E  6E3B               	movwf	___flmul@prod^0,c
  4513  002320  0E00               	movlw	0
  4514  002322  6E3C               	movwf	(___flmul@prod+1)^0,c
  4515  002324  0E00               	movlw	0
  4516  002326  6E3D               	movwf	(___flmul@prod+2)^0,c
  4517  002328  0E00               	movlw	0
  4518  00232A  6E3E               	movwf	(___flmul@prod+3)^0,c
  4519  00232C  0E00               	movlw	0
  4520  00232E  6E34               	movwf	___flmul@sign^0,c
  4521  002330  EFAF  F011         	goto	l3663
  4522  002334                     l1220:
  4523  002334  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4524  002338  0EFF               	movlw	255
  4525  00233A  163B               	andwf	___flmul@prod^0,f,c
  4526  00233C  0EFF               	movlw	255
  4527  00233E  163C               	andwf	(___flmul@prod+1)^0,f,c
  4528  002340  0E7F               	movlw	127
  4529  002342  163D               	andwf	(___flmul@prod+2)^0,f,c
  4530  002344  0E00               	movlw	0
  4531  002346  163E               	andwf	(___flmul@prod+3)^0,f,c
  4532  002348  A03A               	btfss	___flmul@bexp^0,0,c
  4533  00234A  EFA9  F011         	goto	u3491
  4534  00234E  EFAB  F011         	goto	u3490
  4535  002352                     u3491:
  4536  002352  EFAC  F011         	goto	l3661
  4537  002356                     u3490:
  4538  002356  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4539  002358                     l3661:
  4540  002358  90D8               	bcf	status,0,c
  4541  00235A  303A               	rrcf	___flmul@bexp^0,w,c
  4542  00235C  6E3E               	movwf	(___flmul@prod+3)^0,c
  4543  00235E                     l3663:
  4544  00235E  5034               	movf	___flmul@sign^0,w,c
  4545  002360  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4546  002362  C03B  F028         	movff	___flmul@prod,?___flmul
  4547  002366  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4548  00236A  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4549  00236E  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4550  002372                     l1207:
  4551  002372  0012               	return		;funcret
  4552  002374                     __end_of___flmul:
  4553                           	callstack 0
  4554                           
  4555 ;; *************** function ___flge *****************
  4556 ;; Defined at:
  4557 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  ff1             4    0[COMRAM] unsigned char 
  4560 ;;  ff2             4    4[COMRAM] unsigned char 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;		None               void
  4565 ;; Registers used:
  4566 ;;		wreg, status,2, status,0
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4572 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;Total ram usage:       12 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_roundf
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text12
  4586  0037BC                     __ptext12:
  4587                           	callstack 0
  4588  0037BC                     ___flge:
  4589                           	callstack 27
  4590  0037BC  0E00               	movlw	0
  4591  0037BE  1401               	andwf	___flge@ff1^0,w,c
  4592  0037C0  6E09               	movwf	??___flge^0,c
  4593  0037C2  0E00               	movlw	0
  4594  0037C4  1402               	andwf	(___flge@ff1+1)^0,w,c
  4595  0037C6  6E0A               	movwf	(??___flge+1)^0,c
  4596  0037C8  0E80               	movlw	128
  4597  0037CA  1403               	andwf	(___flge@ff1+2)^0,w,c
  4598  0037CC  6E0B               	movwf	(??___flge+2)^0,c
  4599  0037CE  0E7F               	movlw	127
  4600  0037D0  1404               	andwf	(___flge@ff1+3)^0,w,c
  4601  0037D2  6E0C               	movwf	(??___flge+3)^0,c
  4602  0037D4  5009               	movf	??___flge^0,w,c
  4603  0037D6  100A               	iorwf	(??___flge+1)^0,w,c
  4604  0037D8  100B               	iorwf	(??___flge+2)^0,w,c
  4605  0037DA  100C               	iorwf	(??___flge+3)^0,w,c
  4606  0037DC  A4D8               	btfss	status,2,c
  4607  0037DE  EFF3  F01B         	goto	u3501
  4608  0037E2  EFF5  F01B         	goto	u3500
  4609  0037E6                     u3501:
  4610  0037E6  EFFD  F01B         	goto	l3679
  4611  0037EA                     u3500:
  4612  0037EA  0E00               	movlw	0
  4613  0037EC  6E01               	movwf	___flge@ff1^0,c
  4614  0037EE  0E00               	movlw	0
  4615  0037F0  6E02               	movwf	(___flge@ff1+1)^0,c
  4616  0037F2  0E00               	movlw	0
  4617  0037F4  6E03               	movwf	(___flge@ff1+2)^0,c
  4618  0037F6  0E00               	movlw	0
  4619  0037F8  6E04               	movwf	(___flge@ff1+3)^0,c
  4620  0037FA                     l3679:
  4621  0037FA  0E00               	movlw	0
  4622  0037FC  1405               	andwf	___flge@ff2^0,w,c
  4623  0037FE  6E09               	movwf	??___flge^0,c
  4624  003800  0E00               	movlw	0
  4625  003802  1406               	andwf	(___flge@ff2+1)^0,w,c
  4626  003804  6E0A               	movwf	(??___flge+1)^0,c
  4627  003806  0E80               	movlw	128
  4628  003808  1407               	andwf	(___flge@ff2+2)^0,w,c
  4629  00380A  6E0B               	movwf	(??___flge+2)^0,c
  4630  00380C  0E7F               	movlw	127
  4631  00380E  1408               	andwf	(___flge@ff2+3)^0,w,c
  4632  003810  6E0C               	movwf	(??___flge+3)^0,c
  4633  003812  5009               	movf	??___flge^0,w,c
  4634  003814  100A               	iorwf	(??___flge+1)^0,w,c
  4635  003816  100B               	iorwf	(??___flge+2)^0,w,c
  4636  003818  100C               	iorwf	(??___flge+3)^0,w,c
  4637  00381A  A4D8               	btfss	status,2,c
  4638  00381C  EF12  F01C         	goto	u3511
  4639  003820  EF14  F01C         	goto	u3510
  4640  003824                     u3511:
  4641  003824  EF1C  F01C         	goto	l3683
  4642  003828                     u3510:
  4643  003828  0E00               	movlw	0
  4644  00382A  6E05               	movwf	___flge@ff2^0,c
  4645  00382C  0E00               	movlw	0
  4646  00382E  6E06               	movwf	(___flge@ff2+1)^0,c
  4647  003830  0E00               	movlw	0
  4648  003832  6E07               	movwf	(___flge@ff2+2)^0,c
  4649  003834  0E00               	movlw	0
  4650  003836  6E08               	movwf	(___flge@ff2+3)^0,c
  4651  003838                     l3683:
  4652  003838  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4653  00383A  EF21  F01C         	goto	u3521
  4654  00383E  EF23  F01C         	goto	u3520
  4655  003842                     u3521:
  4656  003842  EF2C  F01C         	goto	l3687
  4657  003846                     u3520:
  4658  003846  6C01               	negf	___flge@ff1^0,c
  4659  003848  1E02               	comf	(___flge@ff1+1)^0,f,c
  4660  00384A  B0D8               	btfsc	status,0,c
  4661  00384C  2A02               	incf	(___flge@ff1+1)^0,f,c
  4662  00384E  1E03               	comf	(___flge@ff1+2)^0,f,c
  4663  003850  B0D8               	btfsc	status,0,c
  4664  003852  2A03               	incf	(___flge@ff1+2)^0,f,c
  4665  003854  0E80               	movlw	128
  4666  003856  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4667  003858                     l3687:
  4668  003858  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4669  00385A  EF31  F01C         	goto	u3531
  4670  00385E  EF33  F01C         	goto	u3530
  4671  003862                     u3531:
  4672  003862  EF3C  F01C         	goto	l854
  4673  003866                     u3530:
  4674  003866  6C05               	negf	___flge@ff2^0,c
  4675  003868  1E06               	comf	(___flge@ff2+1)^0,f,c
  4676  00386A  B0D8               	btfsc	status,0,c
  4677  00386C  2A06               	incf	(___flge@ff2+1)^0,f,c
  4678  00386E  1E07               	comf	(___flge@ff2+2)^0,f,c
  4679  003870  B0D8               	btfsc	status,0,c
  4680  003872  2A07               	incf	(___flge@ff2+2)^0,f,c
  4681  003874  0E80               	movlw	128
  4682  003876  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4683  003878                     l854:
  4684  003878  0E00               	movlw	0
  4685  00387A  1A01               	xorwf	___flge@ff1^0,f,c
  4686  00387C  0E00               	movlw	0
  4687  00387E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4688  003880  0E00               	movlw	0
  4689  003882  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4690  003884  0E80               	movlw	128
  4691  003886  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4692  003888  0E00               	movlw	0
  4693  00388A  1A05               	xorwf	___flge@ff2^0,f,c
  4694  00388C  0E00               	movlw	0
  4695  00388E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4696  003890  0E00               	movlw	0
  4697  003892  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4698  003894  0E80               	movlw	128
  4699  003896  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4700  003898  5005               	movf	___flge@ff2^0,w,c
  4701  00389A  5C01               	subwf	___flge@ff1^0,w,c
  4702  00389C  5006               	movf	(___flge@ff2+1)^0,w,c
  4703  00389E  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4704  0038A0  5007               	movf	(___flge@ff2+2)^0,w,c
  4705  0038A2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4706  0038A4  5008               	movf	(___flge@ff2+3)^0,w,c
  4707  0038A6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4708  0038A8  B0D8               	btfsc	status,0,c
  4709  0038AA  EF59  F01C         	goto	u3541
  4710  0038AE  EF5B  F01C         	goto	u3540
  4711  0038B2                     u3541:
  4712  0038B2  EF5E  F01C         	goto	l3693
  4713  0038B6                     u3540:
  4714  0038B6  90D8               	bcf	status,0,c
  4715  0038B8  EF5F  F01C         	goto	l859
  4716  0038BC                     l3693:
  4717  0038BC  80D8               	bsf	status,0,c
  4718  0038BE                     l859:
  4719  0038BE  0012               	return		;funcret
  4720  0038C0                     __end_of___flge:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function ___fltol *****************
  4724 ;; Defined at:
  4725 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  f1              4   90[COMRAM] unsigned char 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  exp1            1    5[BANK0 ] unsigned char 
  4730 ;;  sign1           1    4[BANK0 ] unsigned char 
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  4   90[COMRAM] long 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4740 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4741 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4742 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4744 ;;Total ram usage:       10 bytes
  4745 ;; Hardware stack levels used: 1
  4746 ;; This function calls:
  4747 ;;		Nothing
  4748 ;; This function is called by:
  4749 ;;		_lroundf
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text13
  4754  0036B4                     __ptext13:
  4755                           	callstack 0
  4756  0036B4                     ___fltol:
  4757                           	callstack 28
  4758  0036B4  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4759  0036B6  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4760  0036B8  0100               	movlb	0	; () banked
  4761  0036BA  6F65               	movwf	___fltol@exp1& (0+255),b
  4762  0036BC  5165               	movf	___fltol@exp1& (0+255),w,b
  4763  0036BE  A4D8               	btfss	status,2,c
  4764  0036C0  EF64  F01B         	goto	u3591
  4765  0036C4  EF66  F01B         	goto	u3590
  4766  0036C8                     u3591:
  4767  0036C8  EF70  F01B         	goto	l3773
  4768  0036CC                     u3590:
  4769  0036CC                     l3769:
  4770                           
  4771                           ; BSR set to: 0
  4772  0036CC  0E00               	movlw	0
  4773  0036CE  6E5B               	movwf	?___fltol^0,c
  4774  0036D0  0E00               	movlw	0
  4775  0036D2  6E5C               	movwf	(?___fltol+1)^0,c
  4776  0036D4  0E00               	movlw	0
  4777  0036D6  6E5D               	movwf	(?___fltol+2)^0,c
  4778  0036D8  0E00               	movlw	0
  4779  0036DA  6E5E               	movwf	(?___fltol+3)^0,c
  4780  0036DC  EFDD  F01B         	goto	l886
  4781  0036E0                     l3773:
  4782                           
  4783                           ; BSR set to: 0
  4784  0036E0  C05B  F060         	movff	___fltol@f1,??___fltol
  4785  0036E4  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4786  0036E8  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4787  0036EC  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4788  0036F0  0E20               	movlw	32
  4789  0036F2  EF80  F01B         	goto	u3600
  4790  0036F6                     u3605:
  4791  0036F6  90D8               	bcf	status,0,c
  4792  0036F8  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4793  0036FA  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4794  0036FC  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4795  0036FE  3360               	rrcf	??___fltol& (0+255),f,b
  4796  003700                     u3600:
  4797  003700  2EE8               	decfsz	wreg,f,c
  4798  003702  EF7B  F01B         	goto	u3605
  4799  003706  5160               	movf	??___fltol& (0+255),w,b
  4800  003708  6F64               	movwf	___fltol@sign1& (0+255),b
  4801  00370A                     
  4802                           ; BSR set to: 0
  4803  00370A  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4804  00370C                     
  4805                           ; BSR set to: 0
  4806  00370C  0EFF               	movlw	255
  4807  00370E  165B               	andwf	___fltol@f1^0,f,c
  4808  003710  0EFF               	movlw	255
  4809  003712  165C               	andwf	(___fltol@f1+1)^0,f,c
  4810  003714  0EFF               	movlw	255
  4811  003716  165D               	andwf	(___fltol@f1+2)^0,f,c
  4812  003718  0E00               	movlw	0
  4813  00371A  165E               	andwf	(___fltol@f1+3)^0,f,c
  4814  00371C                     
  4815                           ; BSR set to: 0
  4816  00371C  0E96               	movlw	150
  4817  00371E  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4818  003720                     
  4819                           ; BSR set to: 0
  4820  003720  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4821  003722  EF97  F01B         	goto	u3610
  4822  003726  EF95  F01B         	goto	u3611
  4823  00372A                     u3611:
  4824  00372A  EFAD  F01B         	goto	l3793
  4825  00372E                     u3610:
  4826  00372E                     
  4827                           ; BSR set to: 0
  4828  00372E  5165               	movf	___fltol@exp1& (0+255),w,b
  4829  003730  0A80               	xorlw	128
  4830  003732  0F97               	addlw	151
  4831  003734  B0D8               	btfsc	status,0,c
  4832  003736  EF9F  F01B         	goto	u3621
  4833  00373A  EFA1  F01B         	goto	u3620
  4834  00373E                     u3621:
  4835  00373E  EFA3  F01B         	goto	l3789
  4836  003742                     u3620:
  4837  003742  EF66  F01B         	goto	l3769
  4838  003746                     l3789:
  4839                           
  4840                           ; BSR set to: 0
  4841  003746  90D8               	bcf	status,0,c
  4842  003748  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4843  00374A  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4844  00374C  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4845  00374E  325B               	rrcf	___fltol@f1^0,f,c
  4846  003750                     
  4847                           ; BSR set to: 0
  4848  003750  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4849  003752  EFA3  F01B         	goto	l3789
  4850  003756  EFC5  F01B         	goto	l3803
  4851  00375A                     l3793:
  4852                           
  4853                           ; BSR set to: 0
  4854  00375A  0E1F               	movlw	31
  4855  00375C  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4856  00375E  EFB3  F01B         	goto	u3631
  4857  003762  EFB5  F01B         	goto	u3630
  4858  003766                     u3631:
  4859  003766  EFBD  F01B         	goto	l3801
  4860  00376A                     u3630:
  4861  00376A  EF66  F01B         	goto	l3769
  4862  00376E                     l3799:
  4863                           
  4864                           ; BSR set to: 0
  4865  00376E  90D8               	bcf	status,0,c
  4866  003770  365B               	rlcf	___fltol@f1^0,f,c
  4867  003772  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4868  003774  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4869  003776  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4870  003778  0765               	decf	___fltol@exp1& (0+255),f,b
  4871  00377A                     l3801:
  4872                           
  4873                           ; BSR set to: 0
  4874  00377A  5165               	movf	___fltol@exp1& (0+255),w,b
  4875  00377C  A4D8               	btfss	status,2,c
  4876  00377E  EFC3  F01B         	goto	u3641
  4877  003782  EFC5  F01B         	goto	u3640
  4878  003786                     u3641:
  4879  003786  EFB7  F01B         	goto	l3799
  4880  00378A                     u3640:
  4881  00378A                     l3803:
  4882                           
  4883                           ; BSR set to: 0
  4884  00378A  5164               	movf	___fltol@sign1& (0+255),w,b
  4885  00378C  B4D8               	btfsc	status,2,c
  4886  00378E  EFCB  F01B         	goto	u3651
  4887  003792  EFCD  F01B         	goto	u3650
  4888  003796                     u3651:
  4889  003796  EFD5  F01B         	goto	l3807
  4890  00379A                     u3650:
  4891  00379A                     
  4892                           ; BSR set to: 0
  4893  00379A  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4894  00379C  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4895  00379E  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4896  0037A0  6C5B               	negf	___fltol@f1^0,c
  4897  0037A2  0E00               	movlw	0
  4898  0037A4  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4899  0037A6  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4900  0037A8  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4901  0037AA                     l3807:
  4902                           
  4903                           ; BSR set to: 0
  4904  0037AA  C05B  F05B         	movff	___fltol@f1,?___fltol
  4905  0037AE  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4906  0037B2  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4907  0037B6  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4908  0037BA                     l886:
  4909                           
  4910                           ; BSR set to: 0
  4911  0037BA  0012               	return		;funcret
  4912  0037BC                     __end_of___fltol:
  4913                           	callstack 0
  4914                           
  4915 ;; *************** function _compare *****************
  4916 ;; Defined at:
  4917 ;;		line 290 in file "color.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;  lower           2   10[BANK0 ] unsigned int 
  4920 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4921 ;;  upper           2   14[BANK0 ] unsigned int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  result          1   94[COMRAM] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      unsigned char 
  4926 ;; Registers used:
  4927 ;;		wreg, status,2, status,0
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4933 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;Total ram usage:        7 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_detect_color
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text14
  4947  004134                     __ptext14:
  4948                           	callstack 0
  4949  004134                     _compare:
  4950                           	callstack 29
  4951  004134                     
  4952                           ;color.c: 290: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 291: {;color.c: 292:     unsigned char result = 0;
  4953  004134  0E00               	movlw	0
  4954  004136  6E5F               	movwf	compare@result^0,c
  4955  004138                     
  4956                           ;color.c: 293:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4957  004138  0100               	movlb	0	; () banked
  4958  00413A  516C               	movf	compare@value2compare& (0+255),w,b
  4959  00413C  5D6A               	subwf	compare@lower& (0+255),w,b
  4960  00413E  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4961  004140  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4962  004142  B0D8               	btfsc	status,0,c
  4963  004144  EFA6  F020         	goto	u3851
  4964  004148  EFA8  F020         	goto	u3850
  4965  00414C                     u3851:
  4966  00414C  EFB5  F020         	goto	l156
  4967  004150                     u3850:
  4968  004150                     
  4969                           ; BSR set to: 0
  4970  004150  516C               	movf	compare@value2compare& (0+255),w,b
  4971  004152  5D6E               	subwf	compare@upper& (0+255),w,b
  4972  004154  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4973  004156  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4974  004158  A0D8               	btfss	status,0,c
  4975  00415A  EFB1  F020         	goto	u3861
  4976  00415E  EFB3  F020         	goto	u3860
  4977  004162                     u3861:
  4978  004162  EFB5  F020         	goto	l156
  4979  004166                     u3860:
  4980  004166                     
  4981                           ; BSR set to: 0
  4982  004166  0E01               	movlw	1
  4983  004168  6E5F               	movwf	compare@result^0,c
  4984  00416A                     l156:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;color.c: 294:     return result;
  4988  00416A  505F               	movf	compare@result^0,w,c
  4989  00416C                     
  4990                           ; BSR set to: 0
  4991  00416C  0012               	return		;funcret
  4992  00416E                     __end_of_compare:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function ___xxtofl *****************
  4996 ;; Defined at:
  4997 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  sign            1    wreg     unsigned char 
  5000 ;;  val             4    0[COMRAM] long 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;  sign            1    8[COMRAM] unsigned char 
  5003 ;;  arg             4   10[COMRAM] unsigned long 
  5004 ;;  exp             1    9[COMRAM] unsigned char 
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  4    0[COMRAM] unsigned char 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5017 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5018 ;;Total ram usage:       14 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_detect_color
  5024 ;;		_check_color_reading
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           	psect	text15
  5029  002DA0                     __ptext15:
  5030                           	callstack 0
  5031  002DA0                     ___xxtofl:
  5032                           	callstack 29
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;incstack = 0
  5036                           ;___xxtofl@sign stored from wreg
  5037  002DA0  6E09               	movwf	___xxtofl@sign^0,c
  5038  002DA2  5009               	movf	___xxtofl@sign^0,w,c
  5039  002DA4  B4D8               	btfsc	status,2,c
  5040  002DA6  EFD7  F016         	goto	u4161
  5041  002DAA  EFD9  F016         	goto	u4160
  5042  002DAE                     u4161:
  5043  002DAE  EFFB  F016         	goto	l1244
  5044  002DB2                     u4160:
  5045  002DB2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5046  002DB4  EFE0  F016         	goto	u4170
  5047  002DB8  EFDE  F016         	goto	u4171
  5048  002DBC                     u4171:
  5049  002DBC  EFFB  F016         	goto	l1244
  5050  002DC0                     u4170:
  5051  002DC0  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5052  002DC4  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5053  002DC8  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5054  002DCC  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5055  002DD0  1E05               	comf	??___xxtofl^0,f,c
  5056  002DD2  1E06               	comf	(??___xxtofl+1)^0,f,c
  5057  002DD4  1E07               	comf	(??___xxtofl+2)^0,f,c
  5058  002DD6  1E08               	comf	(??___xxtofl+3)^0,f,c
  5059  002DD8  2A05               	incf	??___xxtofl^0,f,c
  5060  002DDA  0E00               	movlw	0
  5061  002DDC  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5062  002DDE  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5063  002DE0  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5064  002DE2  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5065  002DE6  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5066  002DEA  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5067  002DEE  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5068  002DF2  EF03  F017         	goto	l4123
  5069  002DF6                     l1244:
  5070  002DF6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5071  002DFA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5072  002DFE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5073  002E02  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5074  002E06                     l4123:
  5075  002E06  5001               	movf	___xxtofl@val^0,w,c
  5076  002E08  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5077  002E0A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5078  002E0C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5079  002E0E  A4D8               	btfss	status,2,c
  5080  002E10  EF0C  F017         	goto	u4181
  5081  002E14  EF0E  F017         	goto	u4180
  5082  002E18                     u4181:
  5083  002E18  EF18  F017         	goto	l4129
  5084  002E1C                     u4180:
  5085  002E1C  0E00               	movlw	0
  5086  002E1E  6E01               	movwf	?___xxtofl^0,c
  5087  002E20  0E00               	movlw	0
  5088  002E22  6E02               	movwf	(?___xxtofl+1)^0,c
  5089  002E24  0E00               	movlw	0
  5090  002E26  6E03               	movwf	(?___xxtofl+2)^0,c
  5091  002E28  0E00               	movlw	0
  5092  002E2A  6E04               	movwf	(?___xxtofl+3)^0,c
  5093  002E2C  EFA9  F017         	goto	l1247
  5094  002E30                     l4129:
  5095  002E30  0E96               	movlw	150
  5096  002E32  6E0A               	movwf	___xxtofl@exp^0,c
  5097  002E34  EF22  F017         	goto	l4133
  5098  002E38                     l4131:
  5099  002E38  2A0A               	incf	___xxtofl@exp^0,f,c
  5100  002E3A  90D8               	bcf	status,0,c
  5101  002E3C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5102  002E3E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5103  002E40  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5104  002E42  320B               	rrcf	___xxtofl@arg^0,f,c
  5105  002E44                     l4133:
  5106  002E44  0E00               	movlw	0
  5107  002E46  140B               	andwf	___xxtofl@arg^0,w,c
  5108  002E48  6E05               	movwf	??___xxtofl^0,c
  5109  002E4A  0E00               	movlw	0
  5110  002E4C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5111  002E4E  6E06               	movwf	(??___xxtofl+1)^0,c
  5112  002E50  0E00               	movlw	0
  5113  002E52  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5114  002E54  6E07               	movwf	(??___xxtofl+2)^0,c
  5115  002E56  0EFE               	movlw	254
  5116  002E58  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5117  002E5A  6E08               	movwf	(??___xxtofl+3)^0,c
  5118  002E5C  5005               	movf	??___xxtofl^0,w,c
  5119  002E5E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5120  002E60  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5121  002E62  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5122  002E64  A4D8               	btfss	status,2,c
  5123  002E66  EF37  F017         	goto	u4191
  5124  002E6A  EF39  F017         	goto	u4190
  5125  002E6E                     u4191:
  5126  002E6E  EF1C  F017         	goto	l4131
  5127  002E72                     u4190:
  5128  002E72  EF47  F017         	goto	l1251
  5129  002E76                     l4135:
  5130  002E76  2A0A               	incf	___xxtofl@exp^0,f,c
  5131  002E78  0E01               	movlw	1
  5132  002E7A  260B               	addwf	___xxtofl@arg^0,f,c
  5133  002E7C  0E00               	movlw	0
  5134  002E7E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5135  002E80  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5136  002E82  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5137  002E84  90D8               	bcf	status,0,c
  5138  002E86  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5139  002E88  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5140  002E8A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5141  002E8C  320B               	rrcf	___xxtofl@arg^0,f,c
  5142  002E8E                     l1251:
  5143  002E8E  0E00               	movlw	0
  5144  002E90  140B               	andwf	___xxtofl@arg^0,w,c
  5145  002E92  6E05               	movwf	??___xxtofl^0,c
  5146  002E94  0E00               	movlw	0
  5147  002E96  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5148  002E98  6E06               	movwf	(??___xxtofl+1)^0,c
  5149  002E9A  0E00               	movlw	0
  5150  002E9C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5151  002E9E  6E07               	movwf	(??___xxtofl+2)^0,c
  5152  002EA0  0EFF               	movlw	255
  5153  002EA2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5154  002EA4  6E08               	movwf	(??___xxtofl+3)^0,c
  5155  002EA6  5005               	movf	??___xxtofl^0,w,c
  5156  002EA8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5157  002EAA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5158  002EAC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5159  002EAE  A4D8               	btfss	status,2,c
  5160  002EB0  EF5C  F017         	goto	u4201
  5161  002EB4  EF5E  F017         	goto	u4200
  5162  002EB8                     u4201:
  5163  002EB8  EF3B  F017         	goto	l4135
  5164  002EBC                     u4200:
  5165  002EBC  EF66  F017         	goto	l4143
  5166  002EC0                     l4141:
  5167  002EC0  060A               	decf	___xxtofl@exp^0,f,c
  5168  002EC2  90D8               	bcf	status,0,c
  5169  002EC4  360B               	rlcf	___xxtofl@arg^0,f,c
  5170  002EC6  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5171  002EC8  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5172  002ECA  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5173  002ECC                     l4143:
  5174  002ECC  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5175  002ECE  EF6B  F017         	goto	u4211
  5176  002ED2  EF6D  F017         	goto	u4210
  5177  002ED6                     u4211:
  5178  002ED6  EF75  F017         	goto	l1258
  5179  002EDA                     u4210:
  5180  002EDA  0E02               	movlw	2
  5181  002EDC  600A               	cpfslt	___xxtofl@exp^0,c
  5182  002EDE  EF73  F017         	goto	u4221
  5183  002EE2  EF75  F017         	goto	u4220
  5184  002EE6                     u4221:
  5185  002EE6  EF60  F017         	goto	l4141
  5186  002EEA                     u4220:
  5187  002EEA                     l1258:
  5188  002EEA  B00A               	btfsc	___xxtofl@exp^0,0,c
  5189  002EEC  EF7A  F017         	goto	u4231
  5190  002EF0  EF7C  F017         	goto	u4230
  5191  002EF4                     u4231:
  5192  002EF4  EF7D  F017         	goto	l4149
  5193  002EF8                     u4230:
  5194  002EF8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5195  002EFA                     l4149:
  5196  002EFA  90D8               	bcf	status,0,c
  5197  002EFC  320A               	rrcf	___xxtofl@exp^0,f,c
  5198  002EFE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5199  002F02  6A06               	clrf	(??___xxtofl+1)^0,c
  5200  002F04  6A07               	clrf	(??___xxtofl+2)^0,c
  5201  002F06  6A08               	clrf	(??___xxtofl+3)^0,c
  5202  002F08  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5203  002F0C  6A07               	clrf	(??___xxtofl+2)^0,c
  5204  002F0E  6A06               	clrf	(??___xxtofl+1)^0,c
  5205  002F10  6A05               	clrf	??___xxtofl^0,c
  5206  002F12  5005               	movf	??___xxtofl^0,w,c
  5207  002F14  120B               	iorwf	___xxtofl@arg^0,f,c
  5208  002F16  5006               	movf	(??___xxtofl+1)^0,w,c
  5209  002F18  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5210  002F1A  5007               	movf	(??___xxtofl+2)^0,w,c
  5211  002F1C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5212  002F1E  5008               	movf	(??___xxtofl+3)^0,w,c
  5213  002F20  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5214  002F22  5009               	movf	___xxtofl@sign^0,w,c
  5215  002F24  B4D8               	btfsc	status,2,c
  5216  002F26  EF97  F017         	goto	u4241
  5217  002F2A  EF99  F017         	goto	u4240
  5218  002F2E                     u4241:
  5219  002F2E  EFA1  F017         	goto	l4159
  5220  002F32                     u4240:
  5221  002F32  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5222  002F34  EFA0  F017         	goto	u4250
  5223  002F38  EF9E  F017         	goto	u4251
  5224  002F3C                     u4251:
  5225  002F3C  EFA1  F017         	goto	l4159
  5226  002F40                     u4250:
  5227  002F40  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5228  002F42                     l4159:
  5229  002F42  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5230  002F46  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5231  002F4A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5232  002F4E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5233  002F52                     l1247:
  5234  002F52  0012               	return		;funcret
  5235  002F54                     __end_of___xxtofl:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function ___fldiv *****************
  5239 ;; Defined at:
  5240 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  b               4   14[COMRAM] unsigned char 
  5243 ;;  a               4   18[COMRAM] unsigned char 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  grs             4   33[COMRAM] unsigned long 
  5246 ;;  rem             4   26[COMRAM] unsigned long 
  5247 ;;  new_exp         2   31[COMRAM] short 
  5248 ;;  aexp            1   38[COMRAM] unsigned char 
  5249 ;;  bexp            1   37[COMRAM] unsigned char 
  5250 ;;  sign            1   30[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  4   14[COMRAM] unsigned char 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5260 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;Total ram usage:       25 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_detect_color
  5270 ;;		_check_color_reading
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text16
  5275  002722                     __ptext16:
  5276                           	callstack 0
  5277  002722                     ___fldiv:
  5278                           	callstack 29
  5279  002722  5012               	movf	(___fldiv@b+3)^0,w,c
  5280  002724  0B80               	andlw	128
  5281  002726  6E1F               	movwf	___fldiv@sign^0,c
  5282  002728  5012               	movf	(___fldiv@b+3)^0,w,c
  5283  00272A  2412               	addwf	(___fldiv@b+3)^0,w,c
  5284  00272C  6E26               	movwf	___fldiv@bexp^0,c
  5285  00272E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5286  002730  EF9C  F013         	goto	u3931
  5287  002734  EF9E  F013         	goto	u3930
  5288  002738                     u3931:
  5289  002738  EF9F  F013         	goto	l3985
  5290  00273C                     u3930:
  5291  00273C  8026               	bsf	___fldiv@bexp^0,0,c
  5292  00273E                     l3985:
  5293  00273E  5026               	movf	___fldiv@bexp^0,w,c
  5294  002740  B4D8               	btfsc	status,2,c
  5295  002742  EFA5  F013         	goto	u3941
  5296  002746  EFA7  F013         	goto	u3940
  5297  00274A                     u3941:
  5298  00274A  EFBC  F013         	goto	l3995
  5299  00274E                     u3940:
  5300  00274E  2826               	incf	___fldiv@bexp^0,w,c
  5301  002750  A4D8               	btfss	status,2,c
  5302  002752  EFAD  F013         	goto	u3951
  5303  002756  EFAF  F013         	goto	u3950
  5304  00275A                     u3951:
  5305  00275A  EFB7  F013         	goto	l3991
  5306  00275E                     u3950:
  5307  00275E  0E00               	movlw	0
  5308  002760  6E0F               	movwf	___fldiv@b^0,c
  5309  002762  0E00               	movlw	0
  5310  002764  6E10               	movwf	(___fldiv@b+1)^0,c
  5311  002766  0E00               	movlw	0
  5312  002768  6E11               	movwf	(___fldiv@b+2)^0,c
  5313  00276A  0E00               	movlw	0
  5314  00276C  6E12               	movwf	(___fldiv@b+3)^0,c
  5315  00276E                     l3991:
  5316  00276E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5317  002770  0E00               	movlw	0
  5318  002772  6E12               	movwf	(___fldiv@b+3)^0,c
  5319  002774  EFC4  F013         	goto	l3997
  5320  002778                     l3995:
  5321  002778  0E00               	movlw	0
  5322  00277A  6E0F               	movwf	___fldiv@b^0,c
  5323  00277C  0E00               	movlw	0
  5324  00277E  6E10               	movwf	(___fldiv@b+1)^0,c
  5325  002780  0E00               	movlw	0
  5326  002782  6E11               	movwf	(___fldiv@b+2)^0,c
  5327  002784  0E00               	movlw	0
  5328  002786  6E12               	movwf	(___fldiv@b+3)^0,c
  5329  002788                     l3997:
  5330  002788  5016               	movf	(___fldiv@a+3)^0,w,c
  5331  00278A  0B80               	andlw	128
  5332  00278C  1A1F               	xorwf	___fldiv@sign^0,f,c
  5333  00278E  5016               	movf	(___fldiv@a+3)^0,w,c
  5334  002790  2416               	addwf	(___fldiv@a+3)^0,w,c
  5335  002792  6E27               	movwf	___fldiv@aexp^0,c
  5336  002794  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5337  002796  EFCF  F013         	goto	u3961
  5338  00279A  EFD1  F013         	goto	u3960
  5339  00279E                     u3961:
  5340  00279E  EFD2  F013         	goto	l4005
  5341  0027A2                     u3960:
  5342  0027A2  8027               	bsf	___fldiv@aexp^0,0,c
  5343  0027A4                     l4005:
  5344  0027A4  5027               	movf	___fldiv@aexp^0,w,c
  5345  0027A6  B4D8               	btfsc	status,2,c
  5346  0027A8  EFD8  F013         	goto	u3971
  5347  0027AC  EFDA  F013         	goto	u3970
  5348  0027B0                     u3971:
  5349  0027B0  EFEF  F013         	goto	l4015
  5350  0027B4                     u3970:
  5351  0027B4  2827               	incf	___fldiv@aexp^0,w,c
  5352  0027B6  A4D8               	btfss	status,2,c
  5353  0027B8  EFE0  F013         	goto	u3981
  5354  0027BC  EFE2  F013         	goto	u3980
  5355  0027C0                     u3981:
  5356  0027C0  EFEA  F013         	goto	l4011
  5357  0027C4                     u3980:
  5358  0027C4  0E00               	movlw	0
  5359  0027C6  6E13               	movwf	___fldiv@a^0,c
  5360  0027C8  0E00               	movlw	0
  5361  0027CA  6E14               	movwf	(___fldiv@a+1)^0,c
  5362  0027CC  0E00               	movlw	0
  5363  0027CE  6E15               	movwf	(___fldiv@a+2)^0,c
  5364  0027D0  0E00               	movlw	0
  5365  0027D2  6E16               	movwf	(___fldiv@a+3)^0,c
  5366  0027D4                     l4011:
  5367  0027D4  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5368  0027D6  0E00               	movlw	0
  5369  0027D8  6E16               	movwf	(___fldiv@a+3)^0,c
  5370  0027DA  EFF7  F013         	goto	l4017
  5371  0027DE                     l4015:
  5372  0027DE  0E00               	movlw	0
  5373  0027E0  6E13               	movwf	___fldiv@a^0,c
  5374  0027E2  0E00               	movlw	0
  5375  0027E4  6E14               	movwf	(___fldiv@a+1)^0,c
  5376  0027E6  0E00               	movlw	0
  5377  0027E8  6E15               	movwf	(___fldiv@a+2)^0,c
  5378  0027EA  0E00               	movlw	0
  5379  0027EC  6E16               	movwf	(___fldiv@a+3)^0,c
  5380  0027EE                     l4017:
  5381  0027EE  5013               	movf	___fldiv@a^0,w,c
  5382  0027F0  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5383  0027F2  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5384  0027F4  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5385  0027F6  A4D8               	btfss	status,2,c
  5386  0027F8  EF00  F014         	goto	u3991
  5387  0027FC  EF02  F014         	goto	u3990
  5388  002800                     u3991:
  5389  002800  EF1A  F014         	goto	l4029
  5390  002804                     u3990:
  5391  002804  0E00               	movlw	0
  5392  002806  6E0F               	movwf	___fldiv@b^0,c
  5393  002808  0E00               	movlw	0
  5394  00280A  6E10               	movwf	(___fldiv@b+1)^0,c
  5395  00280C  0E00               	movlw	0
  5396  00280E  6E11               	movwf	(___fldiv@b+2)^0,c
  5397  002810  0E00               	movlw	0
  5398  002812  6E12               	movwf	(___fldiv@b+3)^0,c
  5399  002814  0E80               	movlw	128
  5400  002816  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5401  002818  0E7F               	movlw	127
  5402  00281A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5403  00281C                     l4023:
  5404  00281C  501F               	movf	___fldiv@sign^0,w,c
  5405  00281E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5406  002820  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5407  002824  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5408  002828  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5409  00282C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5410  002830  EF5D  F015         	goto	l1171
  5411  002834                     l4029:
  5412  002834  5026               	movf	___fldiv@bexp^0,w,c
  5413  002836  A4D8               	btfss	status,2,c
  5414  002838  EF20  F014         	goto	u4001
  5415  00283C  EF22  F014         	goto	u4000
  5416  002840                     u4001:
  5417  002840  EF2C  F014         	goto	l4037
  5418  002844                     u4000:
  5419  002844  0E00               	movlw	0
  5420  002846  6E0F               	movwf	?___fldiv^0,c
  5421  002848  0E00               	movlw	0
  5422  00284A  6E10               	movwf	(?___fldiv+1)^0,c
  5423  00284C  0E00               	movlw	0
  5424  00284E  6E11               	movwf	(?___fldiv+2)^0,c
  5425  002850  0E00               	movlw	0
  5426  002852  6E12               	movwf	(?___fldiv+3)^0,c
  5427  002854  EF5D  F015         	goto	l1171
  5428  002858                     l4037:
  5429  002858  5027               	movf	___fldiv@aexp^0,w,c
  5430  00285A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5431  00285E  6A18               	clrf	(??___fldiv+1)^0,c
  5432  002860  5E17               	subwf	??___fldiv^0,f,c
  5433  002862  0E00               	movlw	0
  5434  002864  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5435  002866  0E7F               	movlw	127
  5436  002868  2417               	addwf	??___fldiv^0,w,c
  5437  00286A  6E20               	movwf	___fldiv@new_exp^0,c
  5438  00286C  0E00               	movlw	0
  5439  00286E  2018               	addwfc	(??___fldiv+1)^0,w,c
  5440  002870  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5441  002872  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5442  002876  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5443  00287A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5444  00287E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5445  002882  0E00               	movlw	0
  5446  002884  6E0F               	movwf	___fldiv@b^0,c
  5447  002886  0E00               	movlw	0
  5448  002888  6E10               	movwf	(___fldiv@b+1)^0,c
  5449  00288A  0E00               	movlw	0
  5450  00288C  6E11               	movwf	(___fldiv@b+2)^0,c
  5451  00288E  0E00               	movlw	0
  5452  002890  6E12               	movwf	(___fldiv@b+3)^0,c
  5453  002892  0E00               	movlw	0
  5454  002894  6E22               	movwf	___fldiv@grs^0,c
  5455  002896  0E00               	movlw	0
  5456  002898  6E23               	movwf	(___fldiv@grs+1)^0,c
  5457  00289A  0E00               	movlw	0
  5458  00289C  6E24               	movwf	(___fldiv@grs+2)^0,c
  5459  00289E  0E00               	movlw	0
  5460  0028A0  6E25               	movwf	(___fldiv@grs+3)^0,c
  5461  0028A2  0E00               	movlw	0
  5462  0028A4  6E27               	movwf	___fldiv@aexp^0,c
  5463  0028A6  EF8D  F014         	goto	l1173
  5464  0028AA                     l4047:
  5465  0028AA  5027               	movf	___fldiv@aexp^0,w,c
  5466  0028AC  B4D8               	btfsc	status,2,c
  5467  0028AE  EF5B  F014         	goto	u4011
  5468  0028B2  EF5D  F014         	goto	u4010
  5469  0028B6                     u4011:
  5470  0028B6  EF74  F014         	goto	l4055
  5471  0028BA                     u4010:
  5472  0028BA  90D8               	bcf	status,0,c
  5473  0028BC  361B               	rlcf	___fldiv@rem^0,f,c
  5474  0028BE  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5475  0028C0  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5476  0028C2  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5477  0028C4  90D8               	bcf	status,0,c
  5478  0028C6  360F               	rlcf	___fldiv@b^0,f,c
  5479  0028C8  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5480  0028CA  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5481  0028CC  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5482  0028CE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5483  0028D0  EF6C  F014         	goto	u4021
  5484  0028D4  EF6E  F014         	goto	u4020
  5485  0028D8                     u4021:
  5486  0028D8  EF6F  F014         	goto	l1176
  5487  0028DC                     u4020:
  5488  0028DC  800F               	bsf	___fldiv@b^0,0,c
  5489  0028DE                     l1176:
  5490  0028DE  90D8               	bcf	status,0,c
  5491  0028E0  3622               	rlcf	___fldiv@grs^0,f,c
  5492  0028E2  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5493  0028E4  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5494  0028E6  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5495  0028E8                     l4055:
  5496  0028E8  5013               	movf	___fldiv@a^0,w,c
  5497  0028EA  5C1B               	subwf	___fldiv@rem^0,w,c
  5498  0028EC  5014               	movf	(___fldiv@a+1)^0,w,c
  5499  0028EE  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5500  0028F0  5015               	movf	(___fldiv@a+2)^0,w,c
  5501  0028F2  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5502  0028F4  5016               	movf	(___fldiv@a+3)^0,w,c
  5503  0028F6  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5504  0028F8  A0D8               	btfss	status,0,c
  5505  0028FA  EF81  F014         	goto	u4031
  5506  0028FE  EF83  F014         	goto	u4030
  5507  002902                     u4031:
  5508  002902  EF8C  F014         	goto	l4061
  5509  002906                     u4030:
  5510  002906  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5511  002908  5013               	movf	___fldiv@a^0,w,c
  5512  00290A  5E1B               	subwf	___fldiv@rem^0,f,c
  5513  00290C  5014               	movf	(___fldiv@a+1)^0,w,c
  5514  00290E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5515  002910  5015               	movf	(___fldiv@a+2)^0,w,c
  5516  002912  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5517  002914  5016               	movf	(___fldiv@a+3)^0,w,c
  5518  002916  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5519  002918                     l4061:
  5520  002918  2A27               	incf	___fldiv@aexp^0,f,c
  5521  00291A                     l1173:
  5522  00291A  0E19               	movlw	25
  5523  00291C  6427               	cpfsgt	___fldiv@aexp^0,c
  5524  00291E  EF93  F014         	goto	u4041
  5525  002922  EF95  F014         	goto	u4040
  5526  002926                     u4041:
  5527  002926  EF55  F014         	goto	l4047
  5528  00292A                     u4040:
  5529  00292A  501B               	movf	___fldiv@rem^0,w,c
  5530  00292C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5531  00292E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5532  002930  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5533  002932  B4D8               	btfsc	status,2,c
  5534  002934  EF9E  F014         	goto	u4051
  5535  002938  EFA0  F014         	goto	u4050
  5536  00293C                     u4051:
  5537  00293C  EFB8  F014         	goto	l4073
  5538  002940                     u4050:
  5539  002940  8022               	bsf	___fldiv@grs^0,0,c
  5540  002942  EFB8  F014         	goto	l4073
  5541  002946                     l4067:
  5542  002946  90D8               	bcf	status,0,c
  5543  002948  360F               	rlcf	___fldiv@b^0,f,c
  5544  00294A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5545  00294C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5546  00294E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5547  002950  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5548  002952  EFAD  F014         	goto	u4061
  5549  002956  EFAF  F014         	goto	u4060
  5550  00295A                     u4061:
  5551  00295A  EFB0  F014         	goto	l1182
  5552  00295E                     u4060:
  5553  00295E  800F               	bsf	___fldiv@b^0,0,c
  5554  002960                     l1182:
  5555  002960  90D8               	bcf	status,0,c
  5556  002962  3622               	rlcf	___fldiv@grs^0,f,c
  5557  002964  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5558  002966  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5559  002968  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5560  00296A  0620               	decf	___fldiv@new_exp^0,f,c
  5561  00296C  A0D8               	btfss	status,0,c
  5562  00296E  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5563  002970                     l4073:
  5564  002970  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5565  002972  EFBD  F014         	goto	u4071
  5566  002976  EFBF  F014         	goto	u4070
  5567  00297A                     u4071:
  5568  00297A  EFA3  F014         	goto	l4067
  5569  00297E                     u4070:
  5570  00297E  0E00               	movlw	0
  5571  002980  6E27               	movwf	___fldiv@aexp^0,c
  5572  002982  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5573  002984  EFC6  F014         	goto	u4081
  5574  002988  EFC8  F014         	goto	u4080
  5575  00298C                     u4081:
  5576  00298C  EFEC  F014         	goto	l1184
  5577  002990                     u4080:
  5578  002990  0EFF               	movlw	255
  5579  002992  1422               	andwf	___fldiv@grs^0,w,c
  5580  002994  6E17               	movwf	??___fldiv^0,c
  5581  002996  0EFF               	movlw	255
  5582  002998  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5583  00299A  6E18               	movwf	(??___fldiv+1)^0,c
  5584  00299C  0EFF               	movlw	255
  5585  00299E  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5586  0029A0  6E19               	movwf	(??___fldiv+2)^0,c
  5587  0029A2  0E7F               	movlw	127
  5588  0029A4  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5589  0029A6  6E1A               	movwf	(??___fldiv+3)^0,c
  5590  0029A8  5017               	movf	??___fldiv^0,w,c
  5591  0029AA  1018               	iorwf	(??___fldiv+1)^0,w,c
  5592  0029AC  1019               	iorwf	(??___fldiv+2)^0,w,c
  5593  0029AE  101A               	iorwf	(??___fldiv+3)^0,w,c
  5594  0029B0  B4D8               	btfsc	status,2,c
  5595  0029B2  EFDD  F014         	goto	u4091
  5596  0029B6  EFDF  F014         	goto	u4090
  5597  0029BA                     u4091:
  5598  0029BA  EFE3  F014         	goto	l1185
  5599  0029BE                     u4090:
  5600  0029BE                     l4081:
  5601  0029BE  0E01               	movlw	1
  5602  0029C0  6E27               	movwf	___fldiv@aexp^0,c
  5603  0029C2  EFEC  F014         	goto	l1184
  5604  0029C6                     l1185:
  5605  0029C6  A00F               	btfss	___fldiv@b^0,0,c
  5606  0029C8  EFE8  F014         	goto	u4101
  5607  0029CC  EFEA  F014         	goto	u4100
  5608  0029D0                     u4101:
  5609  0029D0  EFEC  F014         	goto	l1184
  5610  0029D4                     u4100:
  5611  0029D4  EFDF  F014         	goto	l4081
  5612  0029D8                     l1184:
  5613  0029D8  5027               	movf	___fldiv@aexp^0,w,c
  5614  0029DA  B4D8               	btfsc	status,2,c
  5615  0029DC  EFF2  F014         	goto	u4111
  5616  0029E0  EFF4  F014         	goto	u4110
  5617  0029E4                     u4111:
  5618  0029E4  EF18  F015         	goto	l4093
  5619  0029E8                     u4110:
  5620  0029E8  0E01               	movlw	1
  5621  0029EA  260F               	addwf	___fldiv@b^0,f,c
  5622  0029EC  0E00               	movlw	0
  5623  0029EE  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5624  0029F0  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5625  0029F2  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5626  0029F4  A012               	btfss	(___fldiv@b+3)^0,0,c
  5627  0029F6  EFFF  F014         	goto	u4121
  5628  0029FA  EF01  F015         	goto	u4120
  5629  0029FE                     u4121:
  5630  0029FE  EF18  F015         	goto	l4093
  5631  002A02                     u4120:
  5632  002A02  C00F  F017         	movff	___fldiv@b,??___fldiv
  5633  002A06  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5634  002A0A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5635  002A0E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5636  002A12  341A               	rlcf	(??___fldiv+3)^0,w,c
  5637  002A14  321A               	rrcf	(??___fldiv+3)^0,f,c
  5638  002A16  3219               	rrcf	(??___fldiv+2)^0,f,c
  5639  002A18  3218               	rrcf	(??___fldiv+1)^0,f,c
  5640  002A1A  3217               	rrcf	??___fldiv^0,f,c
  5641  002A1C  C017  F00F         	movff	??___fldiv,___fldiv@b
  5642  002A20  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5643  002A24  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5644  002A28  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5645  002A2C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5646  002A2E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5647  002A30                     l4093:
  5648  002A30  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5649  002A32  EF23  F015         	goto	u4131
  5650  002A36  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5651  002A38  E108               	bnz	u4130
  5652  002A3A  2820               	incf	___fldiv@new_exp^0,w,c
  5653  002A3C  A0D8               	btfss	status,0,c
  5654  002A3E  EF23  F015         	goto	u4131
  5655  002A42  EF25  F015         	goto	u4130
  5656  002A46                     u4131:
  5657  002A46  EF30  F015         	goto	l4097
  5658  002A4A                     u4130:
  5659  002A4A  0E00               	movlw	0
  5660  002A4C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5661  002A4E  6820               	setf	___fldiv@new_exp^0,c
  5662  002A50  0E00               	movlw	0
  5663  002A52  6E0F               	movwf	___fldiv@b^0,c
  5664  002A54  0E00               	movlw	0
  5665  002A56  6E10               	movwf	(___fldiv@b+1)^0,c
  5666  002A58  0E00               	movlw	0
  5667  002A5A  6E11               	movwf	(___fldiv@b+2)^0,c
  5668  002A5C  0E00               	movlw	0
  5669  002A5E  6E12               	movwf	(___fldiv@b+3)^0,c
  5670  002A60                     l4097:
  5671  002A60  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5672  002A62  EF3D  F015         	goto	u4140
  5673  002A66  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5674  002A68  E106               	bnz	u4141
  5675  002A6A  0420               	decf	___fldiv@new_exp^0,w,c
  5676  002A6C  B0D8               	btfsc	status,0,c
  5677  002A6E  EF3B  F015         	goto	u4141
  5678  002A72  EF3D  F015         	goto	u4140
  5679  002A76                     u4141:
  5680  002A76  EF4B  F015         	goto	l4101
  5681  002A7A                     u4140:
  5682  002A7A  0E00               	movlw	0
  5683  002A7C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5684  002A7E  0E00               	movlw	0
  5685  002A80  6E20               	movwf	___fldiv@new_exp^0,c
  5686  002A82  0E00               	movlw	0
  5687  002A84  6E0F               	movwf	___fldiv@b^0,c
  5688  002A86  0E00               	movlw	0
  5689  002A88  6E10               	movwf	(___fldiv@b+1)^0,c
  5690  002A8A  0E00               	movlw	0
  5691  002A8C  6E11               	movwf	(___fldiv@b+2)^0,c
  5692  002A8E  0E00               	movlw	0
  5693  002A90  6E12               	movwf	(___fldiv@b+3)^0,c
  5694  002A92  0E00               	movlw	0
  5695  002A94  6E1F               	movwf	___fldiv@sign^0,c
  5696  002A96                     l4101:
  5697  002A96  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5698  002A9A  A026               	btfss	___fldiv@bexp^0,0,c
  5699  002A9C  EF52  F015         	goto	u4151
  5700  002AA0  EF54  F015         	goto	u4150
  5701  002AA4                     u4151:
  5702  002AA4  EF57  F015         	goto	l4107
  5703  002AA8                     u4150:
  5704  002AA8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5705  002AAA  EF58  F015         	goto	l4109
  5706  002AAE                     l4107:
  5707  002AAE  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5708  002AB0                     l4109:
  5709  002AB0  90D8               	bcf	status,0,c
  5710  002AB2  3026               	rrcf	___fldiv@bexp^0,w,c
  5711  002AB4  6E12               	movwf	(___fldiv@b+3)^0,c
  5712  002AB6  EF0E  F014         	goto	l4023
  5713  002ABA                     l1171:
  5714  002ABA  0012               	return		;funcret
  5715  002ABC                     __end_of___fldiv:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function _color_data_collection *****************
  5719 ;; Defined at:
  5720 ;;		line 137 in file "color.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  m               2   89[COMRAM] PTR struct color_rgb
  5723 ;;		 -> main@rgb(8), 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  x               2  132[BANK0 ] int 
  5726 ;;  k               2  130[BANK0 ] int 
  5727 ;;  j               2  128[BANK0 ] int 
  5728 ;;  i               2  126[BANK0 ] int 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  1    wreg      void 
  5731 ;; Registers used:
  5732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;Total ram usage:       12 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; Hardware stack levels required when called: 9
  5745 ;; This function calls:
  5746 ;;		_LED_B
  5747 ;;		_LED_C
  5748 ;;		_LED_G
  5749 ;;		_LED_R
  5750 ;;		_color_display
  5751 ;;		_color_predict
  5752 ;;		_read_color
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758                           	psect	text17
  5759  003108                     __ptext17:
  5760                           	callstack 0
  5761  003108                     _color_data_collection:
  5762                           	callstack 21
  5763  003108                     
  5764                           ;color.c: 139:     int i = 0; int j = 0; int k = 0; int x = 0;
  5765  003108  0E00               	movlw	0
  5766  00310A  0100               	movlb	0	; () banked
  5767  00310C  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5768  00310E  0E00               	movlw	0
  5769  003110  6FDE               	movwf	color_data_collection@i& (0+255),b
  5770  003112  0E00               	movlw	0
  5771  003114  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5772  003116  0E00               	movlw	0
  5773  003118  6FE2               	movwf	color_data_collection@k& (0+255),b
  5774  00311A  0E00               	movlw	0
  5775  00311C  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5776  00311E  0E00               	movlw	0
  5777  003120  6FE4               	movwf	color_data_collection@x& (0+255),b
  5778                           
  5779                           ;color.c: 140:     for (i = 0; i < 1; ++i){
  5780  003122  0E00               	movlw	0
  5781  003124  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5782  003126  0E00               	movlw	0
  5783  003128  6FDE               	movwf	color_data_collection@i& (0+255),b
  5784  00312A                     l4179:
  5785                           
  5786                           ; BSR set to: 0
  5787                           ;color.c: 141:         LED_C();
  5788  00312A  EC49  F021         	call	_LED_C	;wreg free
  5789  00312E                     
  5790                           ;color.c: 142:         read_color(m);
  5791  00312E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5792  003132  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5793  003136  ECBF  F01E         	call	_read_color	;wreg free
  5794  00313A                     
  5795                           ;color.c: 143:         color_display(m);
  5796  00313A  C05A  F058         	movff	color_data_collection@m,color_display@m
  5797  00313E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5798  003142  EC56  F01E         	call	_color_display	;wreg free
  5799  003146                     
  5800                           ;color.c: 144:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5801  003146  0E29               	movlw	41
  5802  003148  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5803  00314A  0E96               	movlw	150
  5804  00314C  6E5C               	movwf	??_color_data_collection^0,c
  5805  00314E  0E7F               	movlw	127
  5806  003150                     u4977:
  5807  003150  2EE8               	decfsz	wreg,f,c
  5808  003152  D7FE               	bra	u4977
  5809  003154  2E5C               	decfsz	??_color_data_collection^0,f,c
  5810  003156  D7FC               	bra	u4977
  5811  003158  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5812  00315A  D7FA               	bra	u4977
  5813  00315C  F000               	nop	
  5814  00315E                     
  5815                           ;color.c: 145:     }
  5816  00315E  0100               	movlb	0	; () banked
  5817  003160  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  5818  003162  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  5819  003164                     
  5820                           ; BSR set to: 0
  5821  003164  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  5822  003166  EFBD  F018         	goto	u4261
  5823  00316A  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  5824  00316C  E108               	bnz	u4260
  5825  00316E  05DE               	decf	color_data_collection@i& (0+255),w,b
  5826  003170  A0D8               	btfss	status,0,c
  5827  003172  EFBD  F018         	goto	u4261
  5828  003176  EFBF  F018         	goto	u4260
  5829  00317A                     u4261:
  5830  00317A  EF95  F018         	goto	l4179
  5831  00317E                     u4260:
  5832  00317E                     
  5833                           ; BSR set to: 0
  5834                           ;color.c: 147:     for (j = 0; j < 1; ++j){
  5835  00317E  0E00               	movlw	0
  5836  003180  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  5837  003182  0E00               	movlw	0
  5838  003184  6FE0               	movwf	color_data_collection@j& (0+255),b
  5839  003186                     l4197:
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;color.c: 148:         LED_R();
  5843  003186  EC69  F021         	call	_LED_R	;wreg free
  5844  00318A                     
  5845                           ;color.c: 149:         read_color(m);
  5846  00318A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5847  00318E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5848  003192  ECBF  F01E         	call	_read_color	;wreg free
  5849  003196                     
  5850                           ;color.c: 150:         color_display(m);
  5851  003196  C05A  F058         	movff	color_data_collection@m,color_display@m
  5852  00319A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5853  00319E  EC56  F01E         	call	_color_display	;wreg free
  5854  0031A2                     
  5855                           ;color.c: 151:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5856  0031A2  0E29               	movlw	41
  5857  0031A4  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5858  0031A6  0E96               	movlw	150
  5859  0031A8  6E5C               	movwf	??_color_data_collection^0,c
  5860  0031AA  0E7F               	movlw	127
  5861  0031AC                     u4987:
  5862  0031AC  2EE8               	decfsz	wreg,f,c
  5863  0031AE  D7FE               	bra	u4987
  5864  0031B0  2E5C               	decfsz	??_color_data_collection^0,f,c
  5865  0031B2  D7FC               	bra	u4987
  5866  0031B4  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5867  0031B6  D7FA               	bra	u4987
  5868  0031B8  F000               	nop	
  5869  0031BA                     
  5870                           ;color.c: 152:     }
  5871  0031BA  0100               	movlb	0	; () banked
  5872  0031BC  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  5873  0031BE  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  5874  0031C0                     
  5875                           ; BSR set to: 0
  5876  0031C0  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  5877  0031C2  EFEB  F018         	goto	u4271
  5878  0031C6  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  5879  0031C8  E108               	bnz	u4270
  5880  0031CA  05E0               	decf	color_data_collection@j& (0+255),w,b
  5881  0031CC  A0D8               	btfss	status,0,c
  5882  0031CE  EFEB  F018         	goto	u4271
  5883  0031D2  EFED  F018         	goto	u4270
  5884  0031D6                     u4271:
  5885  0031D6  EFC3  F018         	goto	l4197
  5886  0031DA                     u4270:
  5887  0031DA                     
  5888                           ; BSR set to: 0
  5889                           ;color.c: 154:     for (k = 0; k < 1; ++k){
  5890  0031DA  0E00               	movlw	0
  5891  0031DC  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5892  0031DE  0E00               	movlw	0
  5893  0031E0  6FE2               	movwf	color_data_collection@k& (0+255),b
  5894  0031E2                     l4215:
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;color.c: 155:         LED_G();
  5898  0031E2  EC79  F021         	call	_LED_G	;wreg free
  5899  0031E6                     
  5900                           ;color.c: 156:         read_color(m);
  5901  0031E6  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5902  0031EA  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5903  0031EE  ECBF  F01E         	call	_read_color	;wreg free
  5904  0031F2                     
  5905                           ;color.c: 157:         color_display(m);
  5906  0031F2  C05A  F058         	movff	color_data_collection@m,color_display@m
  5907  0031F6  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5908  0031FA  EC56  F01E         	call	_color_display	;wreg free
  5909  0031FE                     
  5910                           ;color.c: 158:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5911  0031FE  0E29               	movlw	41
  5912  003200  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5913  003202  0E96               	movlw	150
  5914  003204  6E5C               	movwf	??_color_data_collection^0,c
  5915  003206  0E7F               	movlw	127
  5916  003208                     u4997:
  5917  003208  2EE8               	decfsz	wreg,f,c
  5918  00320A  D7FE               	bra	u4997
  5919  00320C  2E5C               	decfsz	??_color_data_collection^0,f,c
  5920  00320E  D7FC               	bra	u4997
  5921  003210  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5922  003212  D7FA               	bra	u4997
  5923  003214  F000               	nop	
  5924  003216                     
  5925                           ;color.c: 159:     }
  5926  003216  0100               	movlb	0	; () banked
  5927  003218  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  5928  00321A  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  5929  00321C                     
  5930                           ; BSR set to: 0
  5931  00321C  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  5932  00321E  EF19  F019         	goto	u4281
  5933  003222  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  5934  003224  E108               	bnz	u4280
  5935  003226  05E2               	decf	color_data_collection@k& (0+255),w,b
  5936  003228  A0D8               	btfss	status,0,c
  5937  00322A  EF19  F019         	goto	u4281
  5938  00322E  EF1B  F019         	goto	u4280
  5939  003232                     u4281:
  5940  003232  EFF1  F018         	goto	l4215
  5941  003236                     u4280:
  5942  003236                     
  5943                           ; BSR set to: 0
  5944                           ;color.c: 161:     for (x = 0; x < 1; ++x){
  5945  003236  0E00               	movlw	0
  5946  003238  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5947  00323A  0E00               	movlw	0
  5948  00323C  6FE4               	movwf	color_data_collection@x& (0+255),b
  5949  00323E                     l4233:
  5950                           
  5951                           ; BSR set to: 0
  5952                           ;color.c: 162:         LED_B();
  5953  00323E  EC89  F021         	call	_LED_B	;wreg free
  5954  003242                     
  5955                           ;color.c: 163:         read_color(m);
  5956  003242  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5957  003246  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5958  00324A  ECBF  F01E         	call	_read_color	;wreg free
  5959  00324E                     
  5960                           ;color.c: 164:         color_display(m);
  5961  00324E  C05A  F058         	movff	color_data_collection@m,color_display@m
  5962  003252  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5963  003256  EC56  F01E         	call	_color_display	;wreg free
  5964  00325A                     
  5965                           ;color.c: 165:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5966  00325A  0E29               	movlw	41
  5967  00325C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5968  00325E  0E96               	movlw	150
  5969  003260  6E5C               	movwf	??_color_data_collection^0,c
  5970  003262  0E7F               	movlw	127
  5971  003264                     u5007:
  5972  003264  2EE8               	decfsz	wreg,f,c
  5973  003266  D7FE               	bra	u5007
  5974  003268  2E5C               	decfsz	??_color_data_collection^0,f,c
  5975  00326A  D7FC               	bra	u5007
  5976  00326C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5977  00326E  D7FA               	bra	u5007
  5978  003270  F000               	nop	
  5979  003272                     
  5980                           ;color.c: 166:     }
  5981  003272  0100               	movlb	0	; () banked
  5982  003274  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  5983  003276  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  5984  003278                     
  5985                           ; BSR set to: 0
  5986  003278  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  5987  00327A  EF47  F019         	goto	u4291
  5988  00327E  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  5989  003280  E108               	bnz	u4290
  5990  003282  05E4               	decf	color_data_collection@x& (0+255),w,b
  5991  003284  A0D8               	btfss	status,0,c
  5992  003286  EF47  F019         	goto	u4291
  5993  00328A  EF49  F019         	goto	u4290
  5994  00328E                     u4291:
  5995  00328E  EF1F  F019         	goto	l4233
  5996  003292                     u4290:
  5997  003292                     
  5998                           ; BSR set to: 0
  5999                           ;color.c: 167:     color_predict(00000);
  6000  003292  0E00               	movlw	0
  6001  003294  EC60  F01C         	call	_color_predict
  6002  003298                     
  6003                           ;color.c: 168:     LED_C();
  6004  003298  EC49  F021         	call	_LED_C	;wreg free
  6005  00329C  0012               	return		;funcret
  6006  00329E                     __end_of_color_data_collection:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _read_color *****************
  6010 ;; Defined at:
  6011 ;;		line 92 in file "color.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  m               2   11[COMRAM] PTR struct color_rgb
  6014 ;;		 -> main@rgb(8), 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;Total ram usage:        2 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 3
  6033 ;; This function calls:
  6034 ;;		_color_read_Blue
  6035 ;;		_color_read_Clear
  6036 ;;		_color_read_Green
  6037 ;;		_color_read_Red
  6038 ;; This function is called by:
  6039 ;;		_color_data_collection
  6040 ;;		_detect_color
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text18
  6045  003D7E                     __ptext18:
  6046                           	callstack 0
  6047  003D7E                     _read_color:
  6048                           	callstack 26
  6049  003D7E                     
  6050                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  6051  003D7E  EC3F  F01F         	call	_color_read_Red	;wreg free
  6052  003D82  C00C  FFD9         	movff	read_color@m,fsr2l
  6053  003D86  C00D  FFDA         	movff	read_color@m+1,fsr2h
  6054  003D8A  C005  FFDE         	movff	?_color_read_Red,postinc2
  6055  003D8E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6056                           
  6057                           ;color.c: 95:     m->B = color_read_Blue();
  6058  003D92  EC8F  F01F         	call	_color_read_Blue	;wreg free
  6059  003D96  EE20 F004          	lfsr	2,4
  6060  003D9A  500C               	movf	read_color@m^0,w,c
  6061  003D9C  26D9               	addwf	fsr2l,f,c
  6062  003D9E  500D               	movf	(read_color@m+1)^0,w,c
  6063  003DA0  22DA               	addwfc	fsr2h,f,c
  6064  003DA2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6065  003DA6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6066                           
  6067                           ;color.c: 96:     m->G = color_read_Green();
  6068  003DAA  EC67  F01F         	call	_color_read_Green	;wreg free
  6069  003DAE  EE20 F002          	lfsr	2,2
  6070  003DB2  500C               	movf	read_color@m^0,w,c
  6071  003DB4  26D9               	addwf	fsr2l,f,c
  6072  003DB6  500D               	movf	(read_color@m+1)^0,w,c
  6073  003DB8  22DA               	addwfc	fsr2h,f,c
  6074  003DBA  C005  FFDE         	movff	?_color_read_Green,postinc2
  6075  003DBE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6076                           
  6077                           ;color.c: 97:     m->C = color_read_Clear();
  6078  003DC2  EC17  F01F         	call	_color_read_Clear	;wreg free
  6079  003DC6  EE20 F006          	lfsr	2,6
  6080  003DCA  500C               	movf	read_color@m^0,w,c
  6081  003DCC  26D9               	addwf	fsr2l,f,c
  6082  003DCE  500D               	movf	(read_color@m+1)^0,w,c
  6083  003DD0  22DA               	addwfc	fsr2h,f,c
  6084  003DD2  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6085  003DD6  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6086  003DDA  0012               	return		;funcret
  6087  003DDC                     __end_of_read_color:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function _color_read_Clear *****************
  6091 ;; Defined at:
  6092 ;;		line 78 in file "color.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;  tmp             2    9[COMRAM] unsigned int 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  2    4[COMRAM] unsigned int 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;Total ram usage:        7 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 2
  6113 ;; This function calls:
  6114 ;;		_I2C_2_Master_Read
  6115 ;;		_I2C_2_Master_RepStart
  6116 ;;		_I2C_2_Master_Start
  6117 ;;		_I2C_2_Master_Stop
  6118 ;;		_I2C_2_Master_Write
  6119 ;; This function is called by:
  6120 ;;		_read_color
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           	psect	text19
  6125  003E2E                     __ptext19:
  6126                           	callstack 0
  6127  003E2E                     _color_read_Clear:
  6128                           	callstack 26
  6129  003E2E                     
  6130                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  6131  003E2E  ECCD  F021         	call	_I2C_2_Master_Start	;wreg free
  6132                           
  6133                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  6134  003E32  0E52               	movlw	82
  6135  003E34  ECC2  F021         	call	_I2C_2_Master_Write
  6136                           
  6137                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  6138  003E38  0EB4               	movlw	180
  6139  003E3A  ECC2  F021         	call	_I2C_2_Master_Write
  6140                           
  6141                           ;color.c: 84:  I2C_2_Master_RepStart();
  6142  003E3E  ECD2  F021         	call	_I2C_2_Master_RepStart	;wreg free
  6143                           
  6144                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  6145  003E42  0E53               	movlw	83
  6146  003E44  ECC2  F021         	call	_I2C_2_Master_Write
  6147                           
  6148                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  6149  003E48  0E01               	movlw	1
  6150  003E4A  EC1D  F020         	call	_I2C_2_Master_Read
  6151  003E4E  6E07               	movwf	??_color_read_Clear^0,c
  6152  003E50  5007               	movf	??_color_read_Clear^0,w,c
  6153  003E52  6E0A               	movwf	color_read_Clear@tmp^0,c
  6154  003E54  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6155                           
  6156                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6157  003E56  0E00               	movlw	0
  6158  003E58  EC1D  F020         	call	_I2C_2_Master_Read
  6159  003E5C  6E07               	movwf	??_color_read_Clear^0,c
  6160  003E5E  5007               	movf	??_color_read_Clear^0,w,c
  6161  003E60  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6162  003E62  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6163  003E64  500A               	movf	color_read_Clear@tmp^0,w,c
  6164  003E66  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6165  003E68  6E0A               	movwf	color_read_Clear@tmp^0,c
  6166  003E6A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6167  003E6C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6168  003E6E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6169                           
  6170                           ;color.c: 88:  I2C_2_Master_Stop();
  6171  003E70  ECC8  F021         	call	_I2C_2_Master_Stop	;wreg free
  6172  003E74                     
  6173                           ;color.c: 89:  return tmp;
  6174  003E74  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6175  003E78  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6176  003E7C  0012               	return		;funcret
  6177  003E7E                     __end_of_color_read_Clear:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _color_predict *****************
  6181 ;; Defined at:
  6182 ;;		line 187 in file "color.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  color           1    wreg     unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  color           1  125[BANK0 ] unsigned char 
  6187 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6188 ;;  color_name      1    0        unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  1    wreg      void 
  6191 ;; Registers used:
  6192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;Total ram usage:      101 bytes
  6203 ;; Hardware stack levels used: 1
  6204 ;; Hardware stack levels required when called: 8
  6205 ;; This function calls:
  6206 ;;		_sendStringSerial4
  6207 ;;		_sprintf
  6208 ;; This function is called by:
  6209 ;;		_color_data_collection
  6210 ;;		_main
  6211 ;; This function uses a non-reentrant model
  6212 ;;
  6213                           
  6214                           	psect	text20
  6215  0038C0                     __ptext20:
  6216                           	callstack 0
  6217  0038C0                     _color_predict:
  6218                           	callstack 22
  6219                           
  6220                           ;incstack = 0
  6221                           ;color_predict@color stored from wreg
  6222  0038C0  0100               	movlb	0	; () banked
  6223  0038C2  6FDD               	movwf	color_predict@color& (0+255),b
  6224  0038C4                     
  6225                           ;color.c: 187: void color_predict(unsigned char color);color.c: 188: {;color.c: 189:    
      +                           char buf[100];;color.c: 190:     char color_name;;color.c: 191:     if (color == 0){col
      +                          or_name = "Error";}
  6226  0038C4  0100               	movlb	0	; () banked
  6227  0038C6  51DD               	movf	color_predict@color& (0+255),w,b
  6228  0038C8  A4D8               	btfss	status,2,c
  6229  0038CA  EF69  F01C         	goto	u3751
  6230  0038CE  EF6B  F01C         	goto	u3750
  6231  0038D2                     u3751:
  6232  0038D2  EF6B  F01C         	goto	l3885
  6233  0038D6                     u3750:
  6234  0038D6                     l3885:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;color.c: 192:     if (color == 1){color_name = "Red";}
  6238  0038D6  05DD               	decf	color_predict@color& (0+255),w,b
  6239  0038D8  A4D8               	btfss	status,2,c
  6240  0038DA  EF71  F01C         	goto	u3761
  6241  0038DE  EF73  F01C         	goto	u3760
  6242  0038E2                     u3761:
  6243  0038E2  EF73  F01C         	goto	l3889
  6244  0038E6                     u3760:
  6245  0038E6                     l3889:
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;color.c: 193:     if (color == 2){color_name = "Green";}
  6249  0038E6  0E02               	movlw	2
  6250  0038E8  19DD               	xorwf	color_predict@color& (0+255),w,b
  6251  0038EA  A4D8               	btfss	status,2,c
  6252  0038EC  EF7A  F01C         	goto	u3771
  6253  0038F0  EF7C  F01C         	goto	u3770
  6254  0038F4                     u3771:
  6255  0038F4  EF7C  F01C         	goto	l3893
  6256  0038F8                     u3770:
  6257  0038F8                     l3893:
  6258                           
  6259                           ; BSR set to: 0
  6260                           ;color.c: 194:     if (color == 3){color_name = "Blue";}
  6261  0038F8  0E03               	movlw	3
  6262  0038FA  19DD               	xorwf	color_predict@color& (0+255),w,b
  6263  0038FC  A4D8               	btfss	status,2,c
  6264  0038FE  EF83  F01C         	goto	u3781
  6265  003902  EF85  F01C         	goto	u3780
  6266  003906                     u3781:
  6267  003906  EF85  F01C         	goto	l3897
  6268  00390A                     u3780:
  6269  00390A                     l3897:
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;color.c: 195:     if (color == 4){color_name = "Yellow";}
  6273  00390A  0E04               	movlw	4
  6274  00390C  19DD               	xorwf	color_predict@color& (0+255),w,b
  6275  00390E  A4D8               	btfss	status,2,c
  6276  003910  EF8C  F01C         	goto	u3791
  6277  003914  EF8E  F01C         	goto	u3790
  6278  003918                     u3791:
  6279  003918  EF8E  F01C         	goto	l3901
  6280  00391C                     u3790:
  6281  00391C                     l3901:
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;color.c: 196:     if (color == 5){color_name = "Pink";}
  6285  00391C  0E05               	movlw	5
  6286  00391E  19DD               	xorwf	color_predict@color& (0+255),w,b
  6287  003920  A4D8               	btfss	status,2,c
  6288  003922  EF95  F01C         	goto	u3801
  6289  003926  EF97  F01C         	goto	u3800
  6290  00392A                     u3801:
  6291  00392A  EF97  F01C         	goto	l3905
  6292  00392E                     u3800:
  6293  00392E                     l3905:
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;color.c: 197:     if (color == 6){color_name = "Orange";}
  6297  00392E  0E06               	movlw	6
  6298  003930  19DD               	xorwf	color_predict@color& (0+255),w,b
  6299  003932  A4D8               	btfss	status,2,c
  6300  003934  EF9E  F01C         	goto	u3811
  6301  003938  EFA0  F01C         	goto	u3810
  6302  00393C                     u3811:
  6303  00393C  EFA0  F01C         	goto	l3909
  6304  003940                     u3810:
  6305  003940                     l3909:
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;color.c: 198:     if (color == 7){color_name = "Light blue";}
  6309  003940  0E07               	movlw	7
  6310  003942  19DD               	xorwf	color_predict@color& (0+255),w,b
  6311  003944  A4D8               	btfss	status,2,c
  6312  003946  EFA7  F01C         	goto	u3821
  6313  00394A  EFA9  F01C         	goto	u3820
  6314  00394E                     u3821:
  6315  00394E  EFA9  F01C         	goto	l3913
  6316  003952                     u3820:
  6317  003952                     l3913:
  6318                           
  6319                           ; BSR set to: 0
  6320                           ;color.c: 199:     if (color == 8){color_name = "White";}
  6321  003952  0E08               	movlw	8
  6322  003954  19DD               	xorwf	color_predict@color& (0+255),w,b
  6323  003956  A4D8               	btfss	status,2,c
  6324  003958  EFB0  F01C         	goto	u3831
  6325  00395C  EFB2  F01C         	goto	u3830
  6326  003960                     u3831:
  6327  003960  EFB2  F01C         	goto	l3917
  6328  003964                     u3830:
  6329  003964                     l3917:
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;color.c: 200:     if (color == 9){color_name = "Black";}
  6333  003964  0E09               	movlw	9
  6334  003966  19DD               	xorwf	color_predict@color& (0+255),w,b
  6335  003968  A4D8               	btfss	status,2,c
  6336  00396A  EFB9  F01C         	goto	u3841
  6337  00396E  EFBB  F01C         	goto	u3840
  6338  003972                     u3841:
  6339  003972  EFBB  F01C         	goto	l3921
  6340  003976                     u3840:
  6341  003976                     l3921:
  6342                           
  6343                           ; BSR set to: 0
  6344                           ;color.c: 202:     sprintf(buf,"\t%d\r\n", color);
  6345  003976  0E79               	movlw	low color_predict@buf
  6346  003978  6F60               	movwf	sprintf@s& (0+255),b
  6347  00397A  0E00               	movlw	high color_predict@buf
  6348  00397C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6349  00397E  0E0D               	movlw	low (STR_1+8)
  6350  003980  6F62               	movwf	sprintf@fmt& (0+255),b
  6351  003982  0E0E               	movlw	high (STR_1+8)
  6352  003984  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6353  003986  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  6354  00398A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6355  00398C  ECEE  F01E         	call	_sprintf	;wreg free
  6356  003990                     
  6357                           ;color.c: 203:     sendStringSerial4(buf);
  6358  003990  0E79               	movlw	low color_predict@buf
  6359  003992  6E02               	movwf	sendStringSerial4@string^0,c
  6360  003994  0E00               	movlw	high color_predict@buf
  6361  003996  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6362  003998  EC08  F021         	call	_sendStringSerial4	;wreg free
  6363  00399C  0012               	return		;funcret
  6364  00399E                     __end_of_color_predict:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function _color_display *****************
  6368 ;; Defined at:
  6369 ;;		line 171 in file "color.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  m               2   87[COMRAM] PTR struct color_rgb
  6372 ;;		 -> main@rgb(8), 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  1    wreg      void 
  6377 ;; Registers used:
  6378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6387 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6388 ;;Total ram usage:      102 bytes
  6389 ;; Hardware stack levels used: 1
  6390 ;; Hardware stack levels required when called: 8
  6391 ;; This function calls:
  6392 ;;		_sendStringSerial4
  6393 ;;		_sprintf
  6394 ;; This function is called by:
  6395 ;;		_color_data_collection
  6396 ;; This function uses a non-reentrant model
  6397 ;;
  6398                           
  6399                           	psect	text21
  6400  003CAC                     __ptext21:
  6401                           	callstack 0
  6402  003CAC                     _color_display:
  6403                           	callstack 21
  6404  003CAC                     
  6405                           ;color.c: 171: void color_display(struct color_rgb *m);color.c: 172: {;color.c: 173:    
      +                           char buf[100];;color.c: 174:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  6406  003CAC  0E79               	movlw	low color_display@buf
  6407  003CAE  0100               	movlb	0	; () banked
  6408  003CB0  6F60               	movwf	sprintf@s& (0+255),b
  6409  003CB2  0E00               	movlw	high color_display@buf
  6410  003CB4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6411  003CB6  0E05               	movlw	low STR_1
  6412  003CB8  6F62               	movwf	sprintf@fmt& (0+255),b
  6413  003CBA  0E0E               	movlw	high STR_1
  6414  003CBC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6415  003CBE  C058  FFD9         	movff	color_display@m,fsr2l
  6416  003CC2  C059  FFDA         	movff	color_display@m+1,fsr2h
  6417  003CC6  CFDE F064          	movff	postinc2,?_sprintf+4
  6418  003CCA  CFDD F065          	movff	postdec2,?_sprintf+5
  6419  003CCE  EE20 F002          	lfsr	2,2
  6420  003CD2  5058               	movf	color_display@m^0,w,c
  6421  003CD4  26D9               	addwf	fsr2l,f,c
  6422  003CD6  5059               	movf	(color_display@m+1)^0,w,c
  6423  003CD8  22DA               	addwfc	fsr2h,f,c
  6424  003CDA  CFDE F066          	movff	postinc2,?_sprintf+6
  6425  003CDE  CFDD F067          	movff	postdec2,?_sprintf+7
  6426  003CE2  EE20 F004          	lfsr	2,4
  6427  003CE6  5058               	movf	color_display@m^0,w,c
  6428  003CE8  26D9               	addwf	fsr2l,f,c
  6429  003CEA  5059               	movf	(color_display@m+1)^0,w,c
  6430  003CEC  22DA               	addwfc	fsr2h,f,c
  6431  003CEE  CFDE F068          	movff	postinc2,?_sprintf+8
  6432  003CF2  CFDD F069          	movff	postdec2,?_sprintf+9
  6433  003CF6  EE20 F006          	lfsr	2,6
  6434  003CFA  5058               	movf	color_display@m^0,w,c
  6435  003CFC  26D9               	addwf	fsr2l,f,c
  6436  003CFE  5059               	movf	(color_display@m+1)^0,w,c
  6437  003D00  22DA               	addwfc	fsr2h,f,c
  6438  003D02  CFDE F06A          	movff	postinc2,?_sprintf+10
  6439  003D06  CFDD F06B          	movff	postdec2,?_sprintf+11
  6440  003D0A  ECEE  F01E         	call	_sprintf	;wreg free
  6441  003D0E                     
  6442                           ;color.c: 175:     sendStringSerial4(buf);
  6443  003D0E  0E79               	movlw	low color_display@buf
  6444  003D10  6E02               	movwf	sendStringSerial4@string^0,c
  6445  003D12  0E00               	movlw	high color_display@buf
  6446  003D14  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6447  003D16  EC08  F021         	call	_sendStringSerial4	;wreg free
  6448  003D1A  0012               	return		;funcret
  6449  003D1C                     __end_of_color_display:
  6450                           	callstack 0
  6451                           
  6452 ;; *************** function _sprintf *****************
  6453 ;; Defined at:
  6454 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6457 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  6458 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6459 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  f              11   14[BANK0 ] struct _IO_FILE
  6462 ;;  ap              2   12[BANK0 ] PTR void [1]
  6463 ;;		 -> ?_sprintf(2), 
  6464 ;;  ret             2    0        int 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  2    0[BANK0 ] int 
  6467 ;; Registers used:
  6468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6474 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;Total ram usage:       25 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 7
  6481 ;; This function calls:
  6482 ;;		_vfprintf
  6483 ;; This function is called by:
  6484 ;;		_color_display
  6485 ;;		_color_predict
  6486 ;;		_check_color_reading
  6487 ;;		_voltage_display
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text22
  6492  003DDC                     __ptext22:
  6493                           	callstack 0
  6494  003DDC                     _sprintf:
  6495                           	callstack 22
  6496  003DDC  0E64               	movlw	low (?_sprintf+4)
  6497  003DDE  0100               	movlb	0	; () banked
  6498  003DE0  6F6C               	movwf	sprintf@ap& (0+255),b
  6499  003DE2  0E00               	movlw	high (?_sprintf+4)
  6500  003DE4  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  6501  003DE6  C060  F06E         	movff	sprintf@s,sprintf@f
  6502  003DEA  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  6503  003DEE                     
  6504                           ; BSR set to: 0
  6505  003DEE  0E00               	movlw	0
  6506  003DF0  6F72               	movwf	(sprintf@f+4)& (0+255),b
  6507  003DF2  0E00               	movlw	0
  6508  003DF4  6F71               	movwf	(sprintf@f+3)& (0+255),b
  6509  003DF6                     
  6510                           ; BSR set to: 0
  6511  003DF6  0E00               	movlw	0
  6512  003DF8  6F78               	movwf	(sprintf@f+10)& (0+255),b
  6513  003DFA  0E00               	movlw	0
  6514  003DFC  6F77               	movwf	(sprintf@f+9)& (0+255),b
  6515  003DFE                     
  6516                           ; BSR set to: 0
  6517  003DFE  0E6E               	movlw	low sprintf@f
  6518  003E00  6E50               	movwf	vfprintf@fp^0,c
  6519  003E02  0E00               	movlw	high sprintf@f
  6520  003E04  6E51               	movwf	(vfprintf@fp+1)^0,c
  6521  003E06  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  6522  003E0A  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6523  003E0E  0E6C               	movlw	low sprintf@ap
  6524  003E10  6E54               	movwf	vfprintf@ap^0,c
  6525  003E12  0E00               	movlw	high sprintf@ap
  6526  003E14  6E55               	movwf	(vfprintf@ap+1)^0,c
  6527  003E16  EC8E  F01E         	call	_vfprintf	;wreg free
  6528  003E1A  0100               	movlb	0	; () banked
  6529  003E1C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  6530  003E1E  2560               	addwf	sprintf@s& (0+255),w,b
  6531  003E20  6ED9               	movwf	fsr2l,c
  6532  003E22  5172               	movf	(sprintf@f+4)& (0+255),w,b
  6533  003E24  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  6534  003E26  6EDA               	movwf	fsr2h,c
  6535  003E28  0E00               	movlw	0
  6536  003E2A  6EDF               	movwf	indf2,c
  6537  003E2C                     
  6538                           ; BSR set to: 0
  6539  003E2C  0012               	return		;funcret
  6540  003E2E                     __end_of_sprintf:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _vfprintf *****************
  6544 ;; Defined at:
  6545 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  6548 ;;		 -> sprintf@f(11), 
  6549 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  6550 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6551 ;;  ap              2   83[COMRAM] PTR PTR void 
  6552 ;;		 -> sprintf@ap(2), 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  6555 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2   79[COMRAM] int 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6568 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;Total ram usage:        8 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; Hardware stack levels required when called: 6
  6572 ;; This function calls:
  6573 ;;		_vfpfcnvrt
  6574 ;; This function is called by:
  6575 ;;		_sprintf
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text23
  6580  003D1C                     __ptext23:
  6581                           	callstack 0
  6582  003D1C                     _vfprintf:
  6583                           	callstack 22
  6584  003D1C                     
  6585                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6586  003D1C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  6587  003D20  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6588  003D24                     
  6589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6590  003D24  0E00               	movlw	0
  6591  003D26  0100               	movlb	0	; () banked
  6592  003D28  6FED               	movwf	(_nout+1)& (0+255),b
  6593  003D2A  0E00               	movlw	0
  6594  003D2C  6FEC               	movwf	_nout& (0+255),b
  6595                           
  6596                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6597  003D2E  EFAC  F01E         	goto	l3711
  6598  003D32                     l3709:
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6602  003D32  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6603  003D36  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6604  003D3A  0E56               	movlw	low vfprintf@cfmt
  6605  003D3C  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6606  003D3E  0E00               	movlw	high vfprintf@cfmt
  6607  003D40  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6608  003D42  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6609  003D46  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6610  003D4A  ECAA  F017         	call	_vfpfcnvrt	;wreg free
  6611  003D4E  5040               	movf	?_vfpfcnvrt^0,w,c
  6612  003D50  0100               	movlb	0	; () banked
  6613  003D52  27EC               	addwf	_nout& (0+255),f,b
  6614  003D54  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6615  003D56  23ED               	addwfc	(_nout+1)& (0+255),f,b
  6616  003D58                     l3711:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6620  003D58  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6621  003D5C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6622  003D60                     	if	0	;tblptru may be non-zero
  6623  003D60                     	endif
  6624  003D60                     	if	0	;tblptru may be non-zero
  6625  003D60                     	endif
  6626  003D60  0008               	tblrd		*
  6627  003D62  50F5               	movf	tablat,w,c
  6628  003D64  0900               	iorlw	0
  6629  003D66  A4D8               	btfss	status,2,c
  6630  003D68  EFB8  F01E         	goto	u3561
  6631  003D6C  EFBA  F01E         	goto	u3560
  6632  003D70                     u3561:
  6633  003D70  EF99  F01E         	goto	l3709
  6634  003D74                     u3560:
  6635  003D74                     
  6636                           ; BSR set to: 0
  6637                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6638  003D74  C0EC  F050         	movff	_nout,?_vfprintf
  6639  003D78  C0ED  F051         	movff	_nout+1,?_vfprintf+1
  6640  003D7C                     
  6641                           ; BSR set to: 0
  6642  003D7C  0012               	return		;funcret
  6643  003D7E                     __end_of_vfprintf:
  6644                           	callstack 0
  6645                           
  6646 ;; *************** function _vfpfcnvrt *****************
  6647 ;; Defined at:
  6648 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6649 ;; Parameters:    Size  Location     Type
  6650 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6651 ;;		 -> sprintf@f(11), 
  6652 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6653 ;;		 -> vfprintf@cfmt(2), 
  6654 ;;  ap              2   67[COMRAM] PTR PTR void 
  6655 ;;		 -> sprintf@ap(2), 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  ll              8   71[COMRAM] long long 
  6658 ;;  llu             8    0        unsigned long long 
  6659 ;;  f               4    0        unsigned long long 
  6660 ;;  vp              3    0        PTR void 
  6661 ;;  ct              3    0        unsigned char [3]
  6662 ;;  cp              3    0        PTR unsigned char 
  6663 ;;  i               2    0        int 
  6664 ;;  done            2    0        int 
  6665 ;;  c               1    0        unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  2   63[COMRAM] int 
  6668 ;; Registers used:
  6669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6675 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;Total ram usage:       16 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; Hardware stack levels required when called: 5
  6682 ;; This function calls:
  6683 ;;		_dtoa
  6684 ;;		_fputc
  6685 ;; This function is called by:
  6686 ;;		_vfprintf
  6687 ;; This function uses a non-reentrant model
  6688 ;;
  6689                           
  6690                           	psect	text24
  6691  002F54                     __ptext24:
  6692                           	callstack 0
  6693  002F54                     _vfpfcnvrt:
  6694                           	callstack 22
  6695  002F54                     
  6696                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6697  002F54  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6698  002F58  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6699  002F5C  CFDE FFF6          	movff	postinc2,tblptrl
  6700  002F60  CFDD FFF7          	movff	postdec2,tblptrh
  6701  002F64                     	if	0	;tblptru may be non-zero
  6702  002F64                     	endif
  6703  002F64                     	if	0	;tblptru may be non-zero
  6704  002F64                     	endif
  6705  002F64  0008               	tblrd		*
  6706  002F66  50F5               	movf	tablat,w,c
  6707  002F68  0A25               	xorlw	37
  6708  002F6A  A4D8               	btfss	status,2,c
  6709  002F6C  EFBA  F017         	goto	u3241
  6710  002F70  EFBC  F017         	goto	u3240
  6711  002F74                     u3241:
  6712  002F74  EF68  F018         	goto	l3497
  6713  002F78                     u3240:
  6714  002F78                     
  6715                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6716  002F78  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6717  002F7C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6718  002F80  2ADE               	incf	postinc2,f,c
  6719  002F82  0E00               	movlw	0
  6720  002F84  22DD               	addwfc	postdec2,f,c
  6721  002F86                     
  6722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6723  002F86  0E00               	movlw	0
  6724  002F88  0100               	movlb	0	; () banked
  6725  002F8A  6FEF               	movwf	(_width+1)& (0+255),b
  6726  002F8C  0E00               	movlw	0
  6727  002F8E  6FEE               	movwf	_width& (0+255),b
  6728  002F90  C0EE  F0F2         	movff	_width,_flags
  6729  002F94  C0EF  F0F3         	movff	_width+1,_flags+1
  6730  002F98                     
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6733  002F98  69F0               	setf	_prec& (0+255),b
  6734  002F9A  69F1               	setf	(_prec+1)& (0+255),b
  6735  002F9C                     
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6738  002F9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6739  002FA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6740  002FA4  CFDE FFF6          	movff	postinc2,tblptrl
  6741  002FA8  CFDD FFF7          	movff	postdec2,tblptrh
  6742  002FAC                     	if	0	;tblptru may be non-zero
  6743  002FAC                     	endif
  6744  002FAC                     	if	0	;tblptru may be non-zero
  6745  002FAC                     	endif
  6746  002FAC  0008               	tblrd		*
  6747  002FAE  50F5               	movf	tablat,w,c
  6748  002FB0  0A64               	xorlw	100
  6749  002FB2  B4D8               	btfsc	status,2,c
  6750  002FB4  EFDE  F017         	goto	u3251
  6751  002FB8  EFE0  F017         	goto	u3250
  6752  002FBC                     u3251:
  6753  002FBC  EFF2  F017         	goto	l3475
  6754  002FC0                     u3250:
  6755  002FC0                     
  6756                           ; BSR set to: 0
  6757  002FC0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6758  002FC4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6759  002FC8  CFDE FFF6          	movff	postinc2,tblptrl
  6760  002FCC  CFDD FFF7          	movff	postdec2,tblptrh
  6761  002FD0                     	if	0	;tblptru may be non-zero
  6762  002FD0                     	endif
  6763  002FD0                     	if	0	;tblptru may be non-zero
  6764  002FD0                     	endif
  6765  002FD0  0008               	tblrd		*
  6766  002FD2  50F5               	movf	tablat,w,c
  6767  002FD4  0A69               	xorlw	105
  6768  002FD6  A4D8               	btfss	status,2,c
  6769  002FD8  EFF0  F017         	goto	u3261
  6770  002FDC  EFF2  F017         	goto	u3260
  6771  002FE0                     u3261:
  6772  002FE0  EF32  F018         	goto	l3481
  6773  002FE4                     u3260:
  6774  002FE4                     l3475:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6778  002FE4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6779  002FE8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6780  002FEC  2ADE               	incf	postinc2,f,c
  6781  002FEE  0E00               	movlw	0
  6782  002FF0  22DD               	addwfc	postdec2,f,c
  6783                           
  6784                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6785  002FF2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6786  002FF6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6787  002FFA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6788  002FFE  0E02               	movlw	2
  6789  003000  26DE               	addwf	postinc2,f,c
  6790  003002  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6791  003006  0E00               	movlw	0
  6792  003008  22DD               	addwfc	postdec2,f,c
  6793  00300A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6794  00300E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6795  003012  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6796  003016  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6797  00301A  0E00               	movlw	0
  6798  00301C  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6799  00301E  0EFF               	movlw	-1
  6800  003020  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6801  003022  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6802  003024  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6803  003026  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6804  003028  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6805  00302A  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6806  00302C                     
  6807                           ; BSR set to: 0
  6808                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6809  00302C  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6810  003030  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6811  003034  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6812  003038  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6813  00303C  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6814  003040  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6815  003044  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6816  003048  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6817  00304C  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6818  003050  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6819  003054  EC5E  F015         	call	_dtoa	;wreg free
  6820  003058  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6821  00305C  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6822  003060  EF83  F018         	goto	l1337
  6823  003064                     l3481:
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6827  003064  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6828  003068  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6829  00306C  CFDE FFF6          	movff	postinc2,tblptrl
  6830  003070  CFDD FFF7          	movff	postdec2,tblptrh
  6831  003074                     	if	0	;tblptru may be non-zero
  6832  003074                     	endif
  6833  003074                     	if	0	;tblptru may be non-zero
  6834  003074                     	endif
  6835  003074  0008               	tblrd		*
  6836  003076  50F5               	movf	tablat,w,c
  6837  003078  0A25               	xorlw	37
  6838  00307A  A4D8               	btfss	status,2,c
  6839  00307C  EF42  F018         	goto	u3271
  6840  003080  EF44  F018         	goto	u3270
  6841  003084                     u3271:
  6842  003084  EF5B  F018         	goto	l3491
  6843  003088                     u3270:
  6844  003088                     
  6845                           ; BSR set to: 0
  6846                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6847  003088  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6848  00308C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6849  003090  2ADE               	incf	postinc2,f,c
  6850  003092  0E00               	movlw	0
  6851  003094  22DD               	addwfc	postdec2,f,c
  6852  003096                     
  6853                           ; BSR set to: 0
  6854                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6855  003096  0E00               	movlw	0
  6856  003098  6E02               	movwf	(fputc@c+1)^0,c
  6857  00309A  0E25               	movlw	37
  6858  00309C  6E01               	movwf	fputc@c^0,c
  6859  00309E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6860  0030A2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6861  0030A6  EC38  F01D         	call	_fputc	;wreg free
  6862  0030AA                     l3487:
  6863                           
  6864                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6865  0030AA  0E00               	movlw	0
  6866  0030AC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6867  0030AE  0E01               	movlw	1
  6868  0030B0  6E40               	movwf	?_vfpfcnvrt^0,c
  6869  0030B2  EF83  F018         	goto	l1337
  6870  0030B6                     l3491:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6874  0030B6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6875  0030BA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6876  0030BE  2ADE               	incf	postinc2,f,c
  6877  0030C0  0E00               	movlw	0
  6878  0030C2  22DD               	addwfc	postdec2,f,c
  6879  0030C4                     
  6880                           ; BSR set to: 0
  6881                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6882  0030C4  0E00               	movlw	0
  6883  0030C6  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6884  0030C8  0E00               	movlw	0
  6885  0030CA  6E40               	movwf	?_vfpfcnvrt^0,c
  6886  0030CC  EF83  F018         	goto	l1337
  6887  0030D0                     l3497:
  6888                           
  6889                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6890  0030D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6891  0030D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6892  0030D8  CFDE FFF6          	movff	postinc2,tblptrl
  6893  0030DC  CFDD FFF7          	movff	postdec2,tblptrh
  6894  0030E0                     	if	0	;tblptru may be non-zero
  6895  0030E0                     	endif
  6896  0030E0                     	if	0	;tblptru may be non-zero
  6897  0030E0                     	endif
  6898  0030E0  0008               	tblrd		*
  6899  0030E2  50F5               	movf	tablat,w,c
  6900  0030E4  6E01               	movwf	fputc@c^0,c
  6901  0030E6  6A02               	clrf	(fputc@c+1)^0,c
  6902  0030E8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6903  0030EC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6904  0030F0  EC38  F01D         	call	_fputc	;wreg free
  6905  0030F4                     
  6906                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6907  0030F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6908  0030F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6909  0030FC  2ADE               	incf	postinc2,f,c
  6910  0030FE  0E00               	movlw	0
  6911  003100  22DD               	addwfc	postdec2,f,c
  6912  003102  EF55  F018         	goto	l3487
  6913  003106                     l1337:
  6914  003106  0012               	return		;funcret
  6915  003108                     __end_of_vfpfcnvrt:
  6916                           	callstack 0
  6917                           
  6918 ;; *************** function _dtoa *****************
  6919 ;; Defined at:
  6920 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6923 ;;		 -> sprintf@f(11), 
  6924 ;;  d               8   29[COMRAM] long long 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  n               8   53[COMRAM] long long 
  6927 ;;  i               2   61[COMRAM] int 
  6928 ;;  s               2   51[COMRAM] int 
  6929 ;;  w               2   49[COMRAM] int 
  6930 ;;  p               2   47[COMRAM] int 
  6931 ;; Return value:  Size  Location     Type
  6932 ;;                  2   27[COMRAM] int 
  6933 ;; Registers used:
  6934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6940 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6941 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;Total ram usage:       36 bytes
  6945 ;; Hardware stack levels used: 1
  6946 ;; Hardware stack levels required when called: 4
  6947 ;; This function calls:
  6948 ;;		___aodiv
  6949 ;;		___aomod
  6950 ;;		_abs
  6951 ;;		_pad
  6952 ;; This function is called by:
  6953 ;;		_vfpfcnvrt
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957                           	psect	text25
  6958  002ABC                     __ptext25:
  6959                           	callstack 0
  6960  002ABC                     _dtoa:
  6961                           	callstack 22
  6962  002ABC                     
  6963                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6964  002ABC  C01E  F036         	movff	dtoa@d,dtoa@n
  6965  002AC0  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6966  002AC4  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6967  002AC8  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6968  002ACC  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6969  002AD0  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6970  002AD4  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6971  002AD8  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6972  002ADC                     
  6973                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6974  002ADC  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6975  002ADE  EF73  F015         	goto	u2681
  6976  002AE2  EF76  F015         	goto	u2680
  6977  002AE6                     u2681:
  6978  002AE6  0E01               	movlw	1
  6979  002AE8  EF77  F015         	goto	u2690
  6980  002AEC                     u2680:
  6981  002AEC  0E00               	movlw	0
  6982  002AEE                     u2690:
  6983  002AEE  6E34               	movwf	dtoa@s^0,c
  6984  002AF0  6A35               	clrf	(dtoa@s+1)^0,c
  6985                           
  6986                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6987  002AF2  5034               	movf	dtoa@s^0,w,c
  6988  002AF4  1035               	iorwf	(dtoa@s+1)^0,w,c
  6989  002AF6  B4D8               	btfsc	status,2,c
  6990  002AF8  EF80  F015         	goto	u2701
  6991  002AFC  EF82  F015         	goto	u2700
  6992  002B00                     u2701:
  6993  002B00  EF92  F015         	goto	l3201
  6994  002B04                     u2700:
  6995  002B04                     
  6996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6997  002B04  1E3D               	comf	(dtoa@n+7)^0,f,c
  6998  002B06  1E3C               	comf	(dtoa@n+6)^0,f,c
  6999  002B08  1E3B               	comf	(dtoa@n+5)^0,f,c
  7000  002B0A  1E3A               	comf	(dtoa@n+4)^0,f,c
  7001  002B0C  1E39               	comf	(dtoa@n+3)^0,f,c
  7002  002B0E  1E38               	comf	(dtoa@n+2)^0,f,c
  7003  002B10  1E37               	comf	(dtoa@n+1)^0,f,c
  7004  002B12  6C36               	negf	dtoa@n^0,c
  7005  002B14  0E00               	movlw	0
  7006  002B16  2237               	addwfc	(dtoa@n+1)^0,f,c
  7007  002B18  2238               	addwfc	(dtoa@n+2)^0,f,c
  7008  002B1A  2239               	addwfc	(dtoa@n+3)^0,f,c
  7009  002B1C  223A               	addwfc	(dtoa@n+4)^0,f,c
  7010  002B1E  223B               	addwfc	(dtoa@n+5)^0,f,c
  7011  002B20  223C               	addwfc	(dtoa@n+6)^0,f,c
  7012  002B22  223D               	addwfc	(dtoa@n+7)^0,f,c
  7013  002B24                     l3201:
  7014                           
  7015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7016  002B24  0100               	movlb	0	; () banked
  7017  002B26  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7018  002B28  EF98  F015         	goto	u2711
  7019  002B2C  EF9A  F015         	goto	u2710
  7020  002B30                     u2711:
  7021  002B30  EF9B  F015         	goto	l3205
  7022  002B34                     u2710:
  7023  002B34                     
  7024                           ; BSR set to: 0
  7025                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7026  002B34  93F2               	bcf	_flags& (0+255),1,b
  7027  002B36                     l3205:
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7031  002B36  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7032  002B38  EFA8  F015         	goto	u2720
  7033  002B3C  51F1               	movf	(_prec+1)& (0+255),w,b
  7034  002B3E  E106               	bnz	u2721
  7035  002B40  05F0               	decf	_prec& (0+255),w,b
  7036  002B42  B0D8               	btfsc	status,0,c
  7037  002B44  EFA6  F015         	goto	u2721
  7038  002B48  EFA8  F015         	goto	u2720
  7039  002B4C                     u2721:
  7040  002B4C  EFAE  F015         	goto	l1310
  7041  002B50                     u2720:
  7042  002B50                     
  7043                           ; BSR set to: 0
  7044  002B50  0E00               	movlw	0
  7045  002B52  6E31               	movwf	(dtoa@p+1)^0,c
  7046  002B54  0E01               	movlw	1
  7047  002B56  6E30               	movwf	dtoa@p^0,c
  7048  002B58  EFB2  F015         	goto	l1312
  7049  002B5C                     l1310:
  7050                           
  7051                           ; BSR set to: 0
  7052  002B5C  C0F0  F030         	movff	_prec,dtoa@p
  7053  002B60  C0F1  F031         	movff	_prec+1,dtoa@p+1
  7054  002B64                     l1312:
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7058  002B64  C0EE  F032         	movff	_width,dtoa@w
  7059  002B68  C0EF  F033         	movff	_width+1,dtoa@w+1
  7060  002B6C                     
  7061                           ; BSR set to: 0
  7062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7063  002B6C  5034               	movf	dtoa@s^0,w,c
  7064  002B6E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7065  002B70  A4D8               	btfss	status,2,c
  7066  002B72  EFBD  F015         	goto	u2731
  7067  002B76  EFBF  F015         	goto	u2730
  7068  002B7A                     u2731:
  7069  002B7A  EFC6  F015         	goto	l3213
  7070  002B7E                     u2730:
  7071  002B7E                     
  7072                           ; BSR set to: 0
  7073  002B7E  A5F2               	btfss	_flags& (0+255),2,b
  7074  002B80  EFC4  F015         	goto	u2741
  7075  002B84  EFC6  F015         	goto	u2740
  7076  002B88                     u2741:
  7077  002B88  EFC9  F015         	goto	l3215
  7078  002B8C                     u2740:
  7079  002B8C                     l3213:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7083  002B8C  0632               	decf	dtoa@w^0,f,c
  7084  002B8E  A0D8               	btfss	status,0,c
  7085  002B90  0633               	decf	(dtoa@w+1)^0,f,c
  7086  002B92                     l3215:
  7087                           
  7088                           ; BSR set to: 0
  7089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7090  002B92  0E00               	movlw	0
  7091  002B94  6E3F               	movwf	(dtoa@i+1)^0,c
  7092  002B96  0E1F               	movlw	31
  7093  002B98  6E3E               	movwf	dtoa@i^0,c
  7094  002B9A                     
  7095                           ; BSR set to: 0
  7096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7097  002B9A  0E00               	movlw	0
  7098  002B9C  0101               	movlb	1	; () banked
  7099  002B9E  6F84               	movwf	(_dbuf+31)& (0+255),b
  7100                           
  7101                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7102  002BA0  EF4E  F016         	goto	l3229
  7103  002BA4                     l3219:
  7104                           
  7105                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7106  002BA4  063E               	decf	dtoa@i^0,f,c
  7107  002BA6  A0D8               	btfss	status,0,c
  7108  002BA8  063F               	decf	(dtoa@i+1)^0,f,c
  7109  002BAA                     
  7110                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7111  002BAA  0E65               	movlw	low _dbuf
  7112  002BAC  243E               	addwf	dtoa@i^0,w,c
  7113  002BAE  6ED9               	movwf	fsr2l,c
  7114  002BB0  0E01               	movlw	high _dbuf
  7115  002BB2  203F               	addwfc	(dtoa@i+1)^0,w,c
  7116  002BB4  6EDA               	movwf	fsr2h,c
  7117  002BB6  C036  F001         	movff	dtoa@n,___aomod@dividend
  7118  002BBA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7119  002BBE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7120  002BC2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7121  002BC6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7122  002BCA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7123  002BCE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7124  002BD2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7125  002BD6  0E0A               	movlw	10
  7126  002BD8  6E09               	movwf	___aomod@divisor^0,c
  7127  002BDA  0E00               	movlw	0
  7128  002BDC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7129  002BDE  0E00               	movlw	0
  7130  002BE0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7131  002BE2  0E00               	movlw	0
  7132  002BE4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7133  002BE6  0E00               	movlw	0
  7134  002BE8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7135  002BEA  0E00               	movlw	0
  7136  002BEC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7137  002BEE  0E00               	movlw	0
  7138  002BF0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7139  002BF2  0E00               	movlw	0
  7140  002BF4  6E10               	movwf	(___aomod@divisor+7)^0,c
  7141  002BF6  EC13  F01A         	call	___aomod	;wreg free
  7142  002BFA  C001  F026         	movff	?___aomod,??_dtoa
  7143  002BFE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7144  002C02  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7145  002C06  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7146  002C0A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7147  002C0E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7148  002C12  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7149  002C16  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7150  002C1A  C026  F013         	movff	??_dtoa,abs@a
  7151  002C1E  C028  F014         	movff	??_dtoa+2,abs@a+1
  7152  002C22  EC3E  F020         	call	_abs	;wreg free
  7153  002C26  5013               	movf	?_abs^0,w,c
  7154  002C28  0F30               	addlw	48
  7155  002C2A  6EDF               	movwf	indf2,c
  7156  002C2C                     
  7157                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7158  002C2C  0630               	decf	dtoa@p^0,f,c
  7159  002C2E  A0D8               	btfss	status,0,c
  7160  002C30  0631               	decf	(dtoa@p+1)^0,f,c
  7161  002C32                     
  7162                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7163  002C32  0632               	decf	dtoa@w^0,f,c
  7164  002C34  A0D8               	btfss	status,0,c
  7165  002C36  0633               	decf	(dtoa@w+1)^0,f,c
  7166  002C38                     
  7167                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7168  002C38  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7169  002C3C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7170  002C40  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7171  002C44  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7172  002C48  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7173  002C4C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7174  002C50  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7175  002C54  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7176  002C58  0E0A               	movlw	10
  7177  002C5A  6E09               	movwf	___aodiv@divisor^0,c
  7178  002C5C  0E00               	movlw	0
  7179  002C5E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7180  002C60  0E00               	movlw	0
  7181  002C62  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7182  002C64  0E00               	movlw	0
  7183  002C66  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7184  002C68  0E00               	movlw	0
  7185  002C6A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7186  002C6C  0E00               	movlw	0
  7187  002C6E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7188  002C70  0E00               	movlw	0
  7189  002C72  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7190  002C74  0E00               	movlw	0
  7191  002C76  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7192  002C78  EC4F  F019         	call	___aodiv	;wreg free
  7193  002C7C  C001  F036         	movff	?___aodiv,dtoa@n
  7194  002C80  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7195  002C84  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7196  002C88  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7197  002C8C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7198  002C90  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7199  002C94  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7200  002C98  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7201  002C9C                     l3229:
  7202                           
  7203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7204  002C9C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7205  002C9E  EF59  F016         	goto	u2751
  7206  002CA2  503F               	movf	(dtoa@i+1)^0,w,c
  7207  002CA4  E108               	bnz	u2750
  7208  002CA6  043E               	decf	dtoa@i^0,w,c
  7209  002CA8  A0D8               	btfss	status,0,c
  7210  002CAA  EF59  F016         	goto	u2751
  7211  002CAE  EF5B  F016         	goto	u2750
  7212  002CB2                     u2751:
  7213  002CB2  EF8C  F016         	goto	l3239
  7214  002CB6                     u2750:
  7215  002CB6  5036               	movf	dtoa@n^0,w,c
  7216  002CB8  1037               	iorwf	(dtoa@n+1)^0,w,c
  7217  002CBA  1038               	iorwf	(dtoa@n+2)^0,w,c
  7218  002CBC  1039               	iorwf	(dtoa@n+3)^0,w,c
  7219  002CBE  103A               	iorwf	(dtoa@n+4)^0,w,c
  7220  002CC0  103B               	iorwf	(dtoa@n+5)^0,w,c
  7221  002CC2  103C               	iorwf	(dtoa@n+6)^0,w,c
  7222  002CC4  103D               	iorwf	(dtoa@n+7)^0,w,c
  7223  002CC6  A4D8               	btfss	status,2,c
  7224  002CC8  EF68  F016         	goto	u2761
  7225  002CCC  EF6A  F016         	goto	u2760
  7226  002CD0                     u2761:
  7227  002CD0  EFD2  F015         	goto	l3219
  7228  002CD4                     u2760:
  7229  002CD4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7230  002CD6  EF77  F016         	goto	u2770
  7231  002CDA  5031               	movf	(dtoa@p+1)^0,w,c
  7232  002CDC  E106               	bnz	u2771
  7233  002CDE  0430               	decf	dtoa@p^0,w,c
  7234  002CE0  B0D8               	btfsc	status,0,c
  7235  002CE2  EF75  F016         	goto	u2771
  7236  002CE6  EF77  F016         	goto	u2770
  7237  002CEA                     u2771:
  7238  002CEA  EFD2  F015         	goto	l3219
  7239  002CEE                     u2770:
  7240  002CEE  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7241  002CF0  EF82  F016         	goto	u2781
  7242  002CF4  5033               	movf	(dtoa@w+1)^0,w,c
  7243  002CF6  E108               	bnz	u2780
  7244  002CF8  0432               	decf	dtoa@w^0,w,c
  7245  002CFA  A0D8               	btfss	status,0,c
  7246  002CFC  EF82  F016         	goto	u2781
  7247  002D00  EF84  F016         	goto	u2780
  7248  002D04                     u2781:
  7249  002D04  EF8C  F016         	goto	l3239
  7250  002D08                     u2780:
  7251  002D08  0100               	movlb	0	; () banked
  7252  002D0A  B3F2               	btfsc	_flags& (0+255),1,b
  7253  002D0C  EF8A  F016         	goto	u2791
  7254  002D10  EF8C  F016         	goto	u2790
  7255  002D14                     u2791:
  7256  002D14  EFD2  F015         	goto	l3219
  7257  002D18                     u2790:
  7258  002D18                     l3239:
  7259                           
  7260                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7261  002D18  5034               	movf	dtoa@s^0,w,c
  7262  002D1A  1035               	iorwf	(dtoa@s+1)^0,w,c
  7263  002D1C  A4D8               	btfss	status,2,c
  7264  002D1E  EF93  F016         	goto	u2801
  7265  002D22  EF95  F016         	goto	u2800
  7266  002D26                     u2801:
  7267  002D26  EF9D  F016         	goto	l3243
  7268  002D2A                     u2800:
  7269  002D2A  0100               	movlb	0	; () banked
  7270  002D2C  A5F2               	btfss	_flags& (0+255),2,b
  7271  002D2E  EF9B  F016         	goto	u2811
  7272  002D32  EF9D  F016         	goto	u2810
  7273  002D36                     u2811:
  7274  002D36  EFBB  F016         	goto	l3253
  7275  002D3A                     u2810:
  7276  002D3A                     l3243:
  7277                           
  7278                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7279  002D3A  063E               	decf	dtoa@i^0,f,c
  7280  002D3C  A0D8               	btfss	status,0,c
  7281  002D3E  063F               	decf	(dtoa@i+1)^0,f,c
  7282  002D40                     
  7283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7284  002D40  5034               	movf	dtoa@s^0,w,c
  7285  002D42  1035               	iorwf	(dtoa@s+1)^0,w,c
  7286  002D44  A4D8               	btfss	status,2,c
  7287  002D46  EFA7  F016         	goto	u2821
  7288  002D4A  EFA9  F016         	goto	u2820
  7289  002D4E                     u2821:
  7290  002D4E  EFAF  F016         	goto	l3249
  7291  002D52                     u2820:
  7292  002D52  0E00               	movlw	0
  7293  002D54  6E2F               	movwf	(_dtoa$2375+1)^0,c
  7294  002D56  0E2B               	movlw	43
  7295  002D58  6E2E               	movwf	_dtoa$2375^0,c
  7296  002D5A  EFB3  F016         	goto	l3251
  7297  002D5E                     l3249:
  7298  002D5E  0E00               	movlw	0
  7299  002D60  6E2F               	movwf	(_dtoa$2375+1)^0,c
  7300  002D62  0E2D               	movlw	45
  7301  002D64  6E2E               	movwf	_dtoa$2375^0,c
  7302  002D66                     l3251:
  7303  002D66  0E65               	movlw	low _dbuf
  7304  002D68  243E               	addwf	dtoa@i^0,w,c
  7305  002D6A  6ED9               	movwf	fsr2l,c
  7306  002D6C  0E01               	movlw	high _dbuf
  7307  002D6E  203F               	addwfc	(dtoa@i+1)^0,w,c
  7308  002D70  6EDA               	movwf	fsr2h,c
  7309  002D72  C02E  FFDF         	movff	_dtoa$2375,indf2
  7310  002D76                     l3253:
  7311                           
  7312                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7313  002D76  C01C  F011         	movff	dtoa@fp,pad@fp
  7314  002D7A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7315  002D7E  0E65               	movlw	low _dbuf
  7316  002D80  243E               	addwf	dtoa@i^0,w,c
  7317  002D82  6E13               	movwf	pad@buf^0,c
  7318  002D84  0E01               	movlw	high _dbuf
  7319  002D86  203F               	addwfc	(dtoa@i+1)^0,w,c
  7320  002D88  6E14               	movwf	(pad@buf+1)^0,c
  7321  002D8A  C032  F015         	movff	dtoa@w,pad@p
  7322  002D8E  C033  F016         	movff	dtoa@w+1,pad@p+1
  7323  002D92  EC9D  F01D         	call	_pad	;wreg free
  7324  002D96  C011  F01C         	movff	?_pad,?_dtoa
  7325  002D9A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7326  002D9E  0012               	return		;funcret
  7327  002DA0                     __end_of_dtoa:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function _pad *****************
  7331 ;; Defined at:
  7332 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7335 ;;		 -> sprintf@f(11), 
  7336 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7337 ;;		 -> dbuf(32), 
  7338 ;;  p               2   20[COMRAM] int 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;  w               2   25[COMRAM] int 
  7341 ;;  i               2   23[COMRAM] int 
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  2   16[COMRAM] int 
  7344 ;; Registers used:
  7345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7351 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;Total ram usage:       11 bytes
  7356 ;; Hardware stack levels used: 1
  7357 ;; Hardware stack levels required when called: 3
  7358 ;; This function calls:
  7359 ;;		_fputc
  7360 ;;		_fputs
  7361 ;;		_strlen
  7362 ;; This function is called by:
  7363 ;;		_dtoa
  7364 ;; This function uses a non-reentrant model
  7365 ;;
  7366                           
  7367                           	psect	text26
  7368  003B3A                     __ptext26:
  7369                           	callstack 0
  7370  003B3A                     _pad:
  7371                           	callstack 22
  7372  003B3A                     
  7373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7374  003B3A  0100               	movlb	0	; () banked
  7375  003B3C  A1F2               	btfss	_flags& (0+255),0,b
  7376  003B3E  EFA3  F01D         	goto	u2631
  7377  003B42  EFA5  F01D         	goto	u2630
  7378  003B46                     u2631:
  7379  003B46  EFAF  F01D         	goto	l3173
  7380  003B4A                     u2630:
  7381  003B4A                     
  7382                           ; BSR set to: 0
  7383                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7384  003B4A  C013  F00A         	movff	pad@buf,fputs@s
  7385  003B4E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7386  003B52  C011  F00C         	movff	pad@fp,fputs@fp
  7387  003B56  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7388  003B5A  ECDA  F01F         	call	_fputs	;wreg free
  7389  003B5E                     l3173:
  7390                           
  7391                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7392  003B5E  BE16               	btfsc	(pad@p+1)^0,7,c
  7393  003B60  EFB4  F01D         	goto	u2641
  7394  003B64  EFB6  F01D         	goto	u2640
  7395  003B68                     u2641:
  7396  003B68  EFBC  F01D         	goto	l3177
  7397  003B6C                     u2640:
  7398  003B6C  C015  F01A         	movff	pad@p,pad@w
  7399  003B70  C016  F01B         	movff	pad@p+1,pad@w+1
  7400  003B74  EFC0  F01D         	goto	l1299
  7401  003B78                     l3177:
  7402  003B78  0E00               	movlw	0
  7403  003B7A  6E1B               	movwf	(pad@w+1)^0,c
  7404  003B7C  0E00               	movlw	0
  7405  003B7E  6E1A               	movwf	pad@w^0,c
  7406  003B80                     l1299:
  7407                           
  7408                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7409  003B80  0E00               	movlw	0
  7410  003B82  6E19               	movwf	(pad@i+1)^0,c
  7411  003B84  0E00               	movlw	0
  7412  003B86  6E18               	movwf	pad@i^0,c
  7413                           
  7414                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7415  003B88  EFD2  F01D         	goto	l3183
  7416  003B8C                     l3179:
  7417                           
  7418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7419  003B8C  0E00               	movlw	0
  7420  003B8E  6E02               	movwf	(fputc@c+1)^0,c
  7421  003B90  0E20               	movlw	32
  7422  003B92  6E01               	movwf	fputc@c^0,c
  7423  003B94  C011  F003         	movff	pad@fp,fputc@fp
  7424  003B98  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7425  003B9C  EC38  F01D         	call	_fputc	;wreg free
  7426  003BA0                     
  7427                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7428  003BA0  4A18               	infsnz	pad@i^0,f,c
  7429  003BA2  2A19               	incf	(pad@i+1)^0,f,c
  7430  003BA4                     l3183:
  7431                           
  7432                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7433  003BA4  501A               	movf	pad@w^0,w,c
  7434  003BA6  5C18               	subwf	pad@i^0,w,c
  7435  003BA8  5019               	movf	(pad@i+1)^0,w,c
  7436  003BAA  0A80               	xorlw	128
  7437  003BAC  6E17               	movwf	??_pad^0,c
  7438  003BAE  501B               	movf	(pad@w+1)^0,w,c
  7439  003BB0  0A80               	xorlw	128
  7440  003BB2  5817               	subwfb	??_pad^0,w,c
  7441  003BB4  A0D8               	btfss	status,0,c
  7442  003BB6  EFDF  F01D         	goto	u2651
  7443  003BBA  EFE1  F01D         	goto	u2650
  7444  003BBE                     u2651:
  7445  003BBE  EFC6  F01D         	goto	l3179
  7446  003BC2                     u2650:
  7447  003BC2                     
  7448                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7449  003BC2  0100               	movlb	0	; () banked
  7450  003BC4  B1F2               	btfsc	_flags& (0+255),0,b
  7451  003BC6  EFE7  F01D         	goto	u2661
  7452  003BCA  EFE9  F01D         	goto	u2660
  7453  003BCE                     u2661:
  7454  003BCE  EFF3  F01D         	goto	l3187
  7455  003BD2                     u2660:
  7456  003BD2                     
  7457                           ; BSR set to: 0
  7458                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7459  003BD2  C013  F00A         	movff	pad@buf,fputs@s
  7460  003BD6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7461  003BDA  C011  F00C         	movff	pad@fp,fputs@fp
  7462  003BDE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7463  003BE2  ECDA  F01F         	call	_fputs	;wreg free
  7464  003BE6                     l3187:
  7465                           
  7466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7467  003BE6  C013  F001         	movff	pad@buf,strlen@s
  7468  003BEA  C014  F002         	movff	pad@buf+1,strlen@s+1
  7469  003BEE  ECD3  F020         	call	_strlen	;wreg free
  7470  003BF2  501A               	movf	pad@w^0,w,c
  7471  003BF4  2401               	addwf	?_strlen^0,w,c
  7472  003BF6  6E11               	movwf	?_pad^0,c
  7473  003BF8  501B               	movf	(pad@w+1)^0,w,c
  7474  003BFA  2002               	addwfc	(?_strlen+1)^0,w,c
  7475  003BFC  6E12               	movwf	(?_pad+1)^0,c
  7476  003BFE  0012               	return		;funcret
  7477  003C00                     __end_of_pad:
  7478                           	callstack 0
  7479                           
  7480 ;; *************** function _strlen *****************
  7481 ;; Defined at:
  7482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  7483 ;; Parameters:    Size  Location     Type
  7484 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7485 ;;		 -> dbuf(32), 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7488 ;;		 -> dbuf(32), 
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  2    0[COMRAM] unsigned int 
  7491 ;; Registers used:
  7492 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7498 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;Total ram usage:        4 bytes
  7503 ;; Hardware stack levels used: 1
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_pad
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text27
  7512  0041A6                     __ptext27:
  7513                           	callstack 0
  7514  0041A6                     _strlen:
  7515                           	callstack 24
  7516  0041A6  C001  F003         	movff	strlen@s,strlen@a
  7517  0041AA  C002  F004         	movff	strlen@s+1,strlen@a+1
  7518  0041AE  EFDB  F020         	goto	l3083
  7519  0041B2                     l3081:
  7520  0041B2  4A01               	infsnz	strlen@s^0,f,c
  7521  0041B4  2A02               	incf	(strlen@s+1)^0,f,c
  7522  0041B6                     l3083:
  7523  0041B6  C001  FFD9         	movff	strlen@s,fsr2l
  7524  0041BA  C002  FFDA         	movff	strlen@s+1,fsr2h
  7525  0041BE  50DF               	movf	indf2,w,c
  7526  0041C0  A4D8               	btfss	status,2,c
  7527  0041C2  EFE5  F020         	goto	u2491
  7528  0041C6  EFE7  F020         	goto	u2490
  7529  0041CA                     u2491:
  7530  0041CA  EFD9  F020         	goto	l3081
  7531  0041CE                     u2490:
  7532  0041CE  5003               	movf	strlen@a^0,w,c
  7533  0041D0  5C01               	subwf	strlen@s^0,w,c
  7534  0041D2  6E01               	movwf	?_strlen^0,c
  7535  0041D4  5004               	movf	(strlen@a+1)^0,w,c
  7536  0041D6  5802               	subwfb	(strlen@s+1)^0,w,c
  7537  0041D8  6E02               	movwf	(?_strlen+1)^0,c
  7538  0041DA  0012               	return		;funcret
  7539  0041DC                     __end_of_strlen:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _fputs *****************
  7543 ;; Defined at:
  7544 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7547 ;;		 -> dbuf(32), 
  7548 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7549 ;;		 -> sprintf@f(11), 
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;  i               2   14[COMRAM] int 
  7552 ;;  c               1   13[COMRAM] unsigned char 
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  2    9[COMRAM] int 
  7555 ;; Registers used:
  7556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        7 bytes
  7567 ;; Hardware stack levels used: 1
  7568 ;; Hardware stack levels required when called: 2
  7569 ;; This function calls:
  7570 ;;		_fputc
  7571 ;; This function is called by:
  7572 ;;		_pad
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text28
  7577  003FB4                     __ptext28:
  7578                           	callstack 0
  7579  003FB4                     _fputs:
  7580                           	callstack 22
  7581  003FB4  0E00               	movlw	0
  7582  003FB6  6E10               	movwf	(fputs@i+1)^0,c
  7583  003FB8  0E00               	movlw	0
  7584  003FBA  6E0F               	movwf	fputs@i^0,c
  7585  003FBC  EFEB  F01F         	goto	l3077
  7586  003FC0                     l3073:
  7587  003FC0  C00E  F001         	movff	fputs@c,fputc@c
  7588  003FC4  6A02               	clrf	(fputc@c+1)^0,c
  7589  003FC6  C00C  F003         	movff	fputs@fp,fputc@fp
  7590  003FCA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7591  003FCE  EC38  F01D         	call	_fputc	;wreg free
  7592  003FD2  4A0F               	infsnz	fputs@i^0,f,c
  7593  003FD4  2A10               	incf	(fputs@i+1)^0,f,c
  7594  003FD6                     l3077:
  7595  003FD6  500F               	movf	fputs@i^0,w,c
  7596  003FD8  240A               	addwf	fputs@s^0,w,c
  7597  003FDA  6ED9               	movwf	fsr2l,c
  7598  003FDC  5010               	movf	(fputs@i+1)^0,w,c
  7599  003FDE  200B               	addwfc	(fputs@s+1)^0,w,c
  7600  003FE0  6EDA               	movwf	fsr2h,c
  7601  003FE2  50DF               	movf	indf2,w,c
  7602  003FE4  6E0E               	movwf	fputs@c^0,c
  7603  003FE6  500E               	movf	fputs@c^0,w,c
  7604  003FE8  A4D8               	btfss	status,2,c
  7605  003FEA  EFF9  F01F         	goto	u2481
  7606  003FEE  EFFB  F01F         	goto	u2480
  7607  003FF2                     u2481:
  7608  003FF2  EFE0  F01F         	goto	l3073
  7609  003FF6                     u2480:
  7610  003FF6  0012               	return		;funcret
  7611  003FF8                     __end_of_fputs:
  7612                           	callstack 0
  7613                           
  7614 ;; *************** function _fputc *****************
  7615 ;; Defined at:
  7616 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7617 ;; Parameters:    Size  Location     Type
  7618 ;;  c               2    0[COMRAM] int 
  7619 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7620 ;;		 -> sprintf@f(11), 
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  2    0[COMRAM] int 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:        9 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; Hardware stack levels required when called: 1
  7639 ;; This function calls:
  7640 ;;		_putch
  7641 ;; This function is called by:
  7642 ;;		_pad
  7643 ;;		_vfpfcnvrt
  7644 ;;		_fputs
  7645 ;; This function uses a non-reentrant model
  7646 ;;
  7647                           
  7648                           	psect	text29
  7649  003A70                     __ptext29:
  7650                           	callstack 0
  7651  003A70                     _fputc:
  7652                           	callstack 25
  7653  003A70  5003               	movf	fputc@fp^0,w,c
  7654  003A72  1004               	iorwf	(fputc@fp+1)^0,w,c
  7655  003A74  B4D8               	btfsc	status,2,c
  7656  003A76  EF3F  F01D         	goto	u2441
  7657  003A7A  EF41  F01D         	goto	u2440
  7658  003A7E                     u2441:
  7659  003A7E  EF4A  F01D         	goto	l3061
  7660  003A82                     u2440:
  7661  003A82  5003               	movf	fputc@fp^0,w,c
  7662  003A84  1004               	iorwf	(fputc@fp+1)^0,w,c
  7663  003A86  A4D8               	btfss	status,2,c
  7664  003A88  EF48  F01D         	goto	u2451
  7665  003A8C  EF4A  F01D         	goto	u2450
  7666  003A90                     u2451:
  7667  003A90  EF4F  F01D         	goto	l3063
  7668  003A94                     u2450:
  7669  003A94                     l3061:
  7670  003A94  5001               	movf	fputc@c^0,w,c
  7671  003A96  ECD8  F021         	call	_putch
  7672  003A9A  EF9C  F01D         	goto	l1363
  7673  003A9E                     l3063:
  7674  003A9E  EE20 F009          	lfsr	2,9
  7675  003AA2  5003               	movf	fputc@fp^0,w,c
  7676  003AA4  26D9               	addwf	fsr2l,f,c
  7677  003AA6  5004               	movf	(fputc@fp+1)^0,w,c
  7678  003AA8  22DA               	addwfc	fsr2h,f,c
  7679  003AAA  50DE               	movf	postinc2,w,c
  7680  003AAC  10DE               	iorwf	postinc2,w,c
  7681  003AAE  B4D8               	btfsc	status,2,c
  7682  003AB0  EF5C  F01D         	goto	u2461
  7683  003AB4  EF5E  F01D         	goto	u2460
  7684  003AB8                     u2461:
  7685  003AB8  EF79  F01D         	goto	l3067
  7686  003ABC                     u2460:
  7687  003ABC  EE20 F009          	lfsr	2,9
  7688  003AC0  5003               	movf	fputc@fp^0,w,c
  7689  003AC2  26D9               	addwf	fsr2l,f,c
  7690  003AC4  5004               	movf	(fputc@fp+1)^0,w,c
  7691  003AC6  22DA               	addwfc	fsr2h,f,c
  7692  003AC8  EE10 F003          	lfsr	1,3
  7693  003ACC  5003               	movf	fputc@fp^0,w,c
  7694  003ACE  26E1               	addwf	fsr1l,f,c
  7695  003AD0  5004               	movf	(fputc@fp+1)^0,w,c
  7696  003AD2  22E2               	addwfc	fsr1h,f,c
  7697  003AD4  50DE               	movf	postinc2,w,c
  7698  003AD6  5CE6               	subwf	postinc1,w,c
  7699  003AD8  50E6               	movf	postinc1,w,c
  7700  003ADA  0A80               	xorlw	128
  7701  003ADC  6E09               	movwf	(??_fputc+4)^0,c
  7702  003ADE  50DE               	movf	postinc2,w,c
  7703  003AE0  0A80               	xorlw	128
  7704  003AE2  5809               	subwfb	(??_fputc+4)^0,w,c
  7705  003AE4  B0D8               	btfsc	status,0,c
  7706  003AE6  EF77  F01D         	goto	u2471
  7707  003AEA  EF79  F01D         	goto	u2470
  7708  003AEE                     u2471:
  7709  003AEE  EF9C  F01D         	goto	l1363
  7710  003AF2                     u2470:
  7711  003AF2                     l3067:
  7712  003AF2  EE20 F003          	lfsr	2,3
  7713  003AF6  5003               	movf	fputc@fp^0,w,c
  7714  003AF8  26D9               	addwf	fsr2l,f,c
  7715  003AFA  5004               	movf	(fputc@fp+1)^0,w,c
  7716  003AFC  22DA               	addwfc	fsr2h,f,c
  7717  003AFE  CFDE F005          	movff	postinc2,??_fputc
  7718  003B02  CFDD F006          	movff	postdec2,??_fputc+1
  7719  003B06  C003  FFD9         	movff	fputc@fp,fsr2l
  7720  003B0A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7721  003B0E  CFDE F007          	movff	postinc2,??_fputc+2
  7722  003B12  CFDD F008          	movff	postdec2,??_fputc+3
  7723  003B16  5005               	movf	??_fputc^0,w,c
  7724  003B18  2407               	addwf	(??_fputc+2)^0,w,c
  7725  003B1A  6ED9               	movwf	fsr2l,c
  7726  003B1C  5006               	movf	(??_fputc+1)^0,w,c
  7727  003B1E  2008               	addwfc	(??_fputc+3)^0,w,c
  7728  003B20  6EDA               	movwf	fsr2h,c
  7729  003B22  C001  FFDF         	movff	fputc@c,indf2
  7730  003B26  EE20 F003          	lfsr	2,3
  7731  003B2A  5003               	movf	fputc@fp^0,w,c
  7732  003B2C  26D9               	addwf	fsr2l,f,c
  7733  003B2E  5004               	movf	(fputc@fp+1)^0,w,c
  7734  003B30  22DA               	addwfc	fsr2h,f,c
  7735  003B32  2ADE               	incf	postinc2,f,c
  7736  003B34  0E00               	movlw	0
  7737  003B36  22DD               	addwfc	postdec2,f,c
  7738  003B38                     l1363:
  7739  003B38  0012               	return		;funcret
  7740  003B3A                     __end_of_fputc:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function _putch *****************
  7744 ;; Defined at:
  7745 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;  c               1    wreg     unsigned char 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  c               1    0[COMRAM] unsigned char 
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_fputc
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text30
  7773  0043B0                     __ptext30:
  7774                           	callstack 0
  7775  0043B0                     _putch:
  7776                           	callstack 25
  7777  0043B0  0012               	return		;funcret
  7778  0043B2                     __end_of_putch:
  7779                           	callstack 0
  7780                           
  7781 ;; *************** function _abs *****************
  7782 ;; Defined at:
  7783 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  a               2   18[COMRAM] int 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  2   18[COMRAM] int 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;Total ram usage:        4 bytes
  7802 ;; Hardware stack levels used: 1
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_dtoa
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810                           	psect	text31
  7811  00407C                     __ptext31:
  7812                           	callstack 0
  7813  00407C                     _abs:
  7814                           	callstack 25
  7815  00407C  BE14               	btfsc	(abs@a+1)^0,7,c
  7816  00407E  EF4B  F020         	goto	u2670
  7817  004082  5014               	movf	(abs@a+1)^0,w,c
  7818  004084  E106               	bnz	u2671
  7819  004086  0413               	decf	abs@a^0,w,c
  7820  004088  B0D8               	btfsc	status,0,c
  7821  00408A  EF49  F020         	goto	u2671
  7822  00408E  EF4B  F020         	goto	u2670
  7823  004092                     u2671:
  7824  004092  EF59  F020         	goto	l1348
  7825  004096                     u2670:
  7826  004096  C013  F015         	movff	abs@a,??_abs
  7827  00409A  C014  F016         	movff	abs@a+1,??_abs+1
  7828  00409E  1E15               	comf	??_abs^0,f,c
  7829  0040A0  1E16               	comf	(??_abs+1)^0,f,c
  7830  0040A2  4A15               	infsnz	??_abs^0,f,c
  7831  0040A4  2A16               	incf	(??_abs+1)^0,f,c
  7832  0040A6  C015  F013         	movff	??_abs,?_abs
  7833  0040AA  C016  F014         	movff	??_abs+1,?_abs+1
  7834  0040AE  EF5D  F020         	goto	l1351
  7835  0040B2                     l1348:
  7836  0040B2  C013  F013         	movff	abs@a,?_abs
  7837  0040B6  C014  F014         	movff	abs@a+1,?_abs+1
  7838  0040BA                     l1351:
  7839  0040BA  0012               	return		;funcret
  7840  0040BC                     __end_of_abs:
  7841                           	callstack 0
  7842                           
  7843 ;; *************** function ___aomod *****************
  7844 ;; Defined at:
  7845 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;  dividend        8    0[COMRAM] long long 
  7848 ;;  divisor         8    8[COMRAM] long long 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  sign            1   17[COMRAM] unsigned char 
  7851 ;;  counter         1   16[COMRAM] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  8    0[COMRAM] long long 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, status,0
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7861 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;Total ram usage:       18 bytes
  7866 ;; Hardware stack levels used: 1
  7867 ;; This function calls:
  7868 ;;		Nothing
  7869 ;; This function is called by:
  7870 ;;		_dtoa
  7871 ;; This function uses a non-reentrant model
  7872 ;;
  7873                           
  7874                           	psect	text32
  7875  003426                     __ptext32:
  7876                           	callstack 0
  7877  003426                     ___aomod:
  7878                           	callstack 25
  7879  003426  0E00               	movlw	0
  7880  003428  6E12               	movwf	___aomod@sign^0,c
  7881  00342A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7882  00342C  EF1C  F01A         	goto	u2570
  7883  003430  EF1A  F01A         	goto	u2571
  7884  003434                     u2571:
  7885  003434  EF2E  F01A         	goto	l3141
  7886  003438                     u2570:
  7887  003438  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7888  00343A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7889  00343C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7890  00343E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7891  003440  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7892  003442  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7893  003444  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7894  003446  6C01               	negf	___aomod@dividend^0,c
  7895  003448  0E00               	movlw	0
  7896  00344A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7897  00344C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7898  00344E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7899  003450  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7900  003452  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7901  003454  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7902  003456  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7903  003458  0E01               	movlw	1
  7904  00345A  6E12               	movwf	___aomod@sign^0,c
  7905  00345C                     l3141:
  7906  00345C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7907  00345E  EF35  F01A         	goto	u2580
  7908  003462  EF33  F01A         	goto	u2581
  7909  003466                     u2581:
  7910  003466  EF45  F01A         	goto	l3145
  7911  00346A                     u2580:
  7912  00346A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7913  00346C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7914  00346E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7915  003470  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7916  003472  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7917  003474  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7918  003476  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7919  003478  6C09               	negf	___aomod@divisor^0,c
  7920  00347A  0E00               	movlw	0
  7921  00347C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7922  00347E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7923  003480  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7924  003482  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7925  003484  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7926  003486  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7927  003488  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7928  00348A                     l3145:
  7929  00348A  5009               	movf	___aomod@divisor^0,w,c
  7930  00348C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7931  00348E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7932  003490  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7933  003492  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7934  003494  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7935  003496  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7936  003498  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7937  00349A  B4D8               	btfsc	status,2,c
  7938  00349C  EF52  F01A         	goto	u2591
  7939  0034A0  EF54  F01A         	goto	u2590
  7940  0034A4                     u2591:
  7941  0034A4  EF9C  F01A         	goto	l3161
  7942  0034A8                     u2590:
  7943  0034A8  0E01               	movlw	1
  7944  0034AA  6E11               	movwf	___aomod@counter^0,c
  7945  0034AC  EF62  F01A         	goto	l3151
  7946  0034B0                     l3149:
  7947  0034B0  90D8               	bcf	status,0,c
  7948  0034B2  3609               	rlcf	___aomod@divisor^0,f,c
  7949  0034B4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7950  0034B6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7951  0034B8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7952  0034BA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7953  0034BC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7954  0034BE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7955  0034C0  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7956  0034C2  2A11               	incf	___aomod@counter^0,f,c
  7957  0034C4                     l3151:
  7958  0034C4  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7959  0034C6  EF67  F01A         	goto	u2601
  7960  0034CA  EF69  F01A         	goto	u2600
  7961  0034CE                     u2601:
  7962  0034CE  EF58  F01A         	goto	l3149
  7963  0034D2                     u2600:
  7964  0034D2                     l3153:
  7965  0034D2  5009               	movf	___aomod@divisor^0,w,c
  7966  0034D4  5C01               	subwf	___aomod@dividend^0,w,c
  7967  0034D6  500A               	movf	(___aomod@divisor+1)^0,w,c
  7968  0034D8  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7969  0034DA  500B               	movf	(___aomod@divisor+2)^0,w,c
  7970  0034DC  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7971  0034DE  500C               	movf	(___aomod@divisor+3)^0,w,c
  7972  0034E0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7973  0034E2  500D               	movf	(___aomod@divisor+4)^0,w,c
  7974  0034E4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7975  0034E6  500E               	movf	(___aomod@divisor+5)^0,w,c
  7976  0034E8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7977  0034EA  500F               	movf	(___aomod@divisor+6)^0,w,c
  7978  0034EC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7979  0034EE  5010               	movf	(___aomod@divisor+7)^0,w,c
  7980  0034F0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7981  0034F2  A0D8               	btfss	status,0,c
  7982  0034F4  EF7E  F01A         	goto	u2611
  7983  0034F8  EF80  F01A         	goto	u2610
  7984  0034FC                     u2611:
  7985  0034FC  EF90  F01A         	goto	l3157
  7986  003500                     u2610:
  7987  003500  5009               	movf	___aomod@divisor^0,w,c
  7988  003502  5E01               	subwf	___aomod@dividend^0,f,c
  7989  003504  500A               	movf	(___aomod@divisor+1)^0,w,c
  7990  003506  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7991  003508  500B               	movf	(___aomod@divisor+2)^0,w,c
  7992  00350A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7993  00350C  500C               	movf	(___aomod@divisor+3)^0,w,c
  7994  00350E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7995  003510  500D               	movf	(___aomod@divisor+4)^0,w,c
  7996  003512  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7997  003514  500E               	movf	(___aomod@divisor+5)^0,w,c
  7998  003516  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7999  003518  500F               	movf	(___aomod@divisor+6)^0,w,c
  8000  00351A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8001  00351C  5010               	movf	(___aomod@divisor+7)^0,w,c
  8002  00351E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8003  003520                     l3157:
  8004  003520  90D8               	bcf	status,0,c
  8005  003522  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8006  003524  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8007  003526  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8008  003528  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8009  00352A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8010  00352C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8011  00352E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8012  003530  3209               	rrcf	___aomod@divisor^0,f,c
  8013  003532  2E11               	decfsz	___aomod@counter^0,f,c
  8014  003534  EF69  F01A         	goto	l3153
  8015  003538                     l3161:
  8016  003538  5012               	movf	___aomod@sign^0,w,c
  8017  00353A  B4D8               	btfsc	status,2,c
  8018  00353C  EFA2  F01A         	goto	u2621
  8019  003540  EFA4  F01A         	goto	u2620
  8020  003544                     u2621:
  8021  003544  EFB4  F01A         	goto	l3165
  8022  003548                     u2620:
  8023  003548  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8024  00354A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8025  00354C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8026  00354E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8027  003550  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8028  003552  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8029  003554  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8030  003556  6C01               	negf	___aomod@dividend^0,c
  8031  003558  0E00               	movlw	0
  8032  00355A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8033  00355C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8034  00355E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8035  003560  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8036  003562  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8037  003564  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8038  003566  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8039  003568                     l3165:
  8040  003568  C001  F001         	movff	___aomod@dividend,?___aomod
  8041  00356C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8042  003570  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8043  003574  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8044  003578  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8045  00357C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8046  003580  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8047  003584  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8048  003588  0012               	return		;funcret
  8049  00358A                     __end_of___aomod:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function ___aodiv *****************
  8053 ;; Defined at:
  8054 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  dividend        8    0[COMRAM] long long 
  8057 ;;  divisor         8    8[COMRAM] long long 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;  quotient        8   18[COMRAM] long long 
  8060 ;;  sign            1   17[COMRAM] unsigned char 
  8061 ;;  counter         1   16[COMRAM] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  8    0[COMRAM] long long 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8071 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;Total ram usage:       26 bytes
  8076 ;; Hardware stack levels used: 1
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_dtoa
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text33
  8085  00329E                     __ptext33:
  8086                           	callstack 0
  8087  00329E                     ___aodiv:
  8088                           	callstack 25
  8089  00329E  0E00               	movlw	0
  8090  0032A0  6E12               	movwf	___aodiv@sign^0,c
  8091  0032A2  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8092  0032A4  EF58  F019         	goto	u2500
  8093  0032A8  EF56  F019         	goto	u2501
  8094  0032AC                     u2501:
  8095  0032AC  EF6A  F019         	goto	l3097
  8096  0032B0                     u2500:
  8097  0032B0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8098  0032B2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8099  0032B4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8100  0032B6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8101  0032B8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8102  0032BA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8103  0032BC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8104  0032BE  6C09               	negf	___aodiv@divisor^0,c
  8105  0032C0  0E00               	movlw	0
  8106  0032C2  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8107  0032C4  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8108  0032C6  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8109  0032C8  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8110  0032CA  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8111  0032CC  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8112  0032CE  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8113  0032D0  0E01               	movlw	1
  8114  0032D2  6E12               	movwf	___aodiv@sign^0,c
  8115  0032D4                     l3097:
  8116  0032D4  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8117  0032D6  EF71  F019         	goto	u2510
  8118  0032DA  EF6F  F019         	goto	u2511
  8119  0032DE                     u2511:
  8120  0032DE  EF83  F019         	goto	l3103
  8121  0032E2                     u2510:
  8122  0032E2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8123  0032E4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8124  0032E6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8125  0032E8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8126  0032EA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8127  0032EC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8128  0032EE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8129  0032F0  6C01               	negf	___aodiv@dividend^0,c
  8130  0032F2  0E00               	movlw	0
  8131  0032F4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8132  0032F6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8133  0032F8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8134  0032FA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8135  0032FC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8136  0032FE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8137  003300  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8138  003302  0E01               	movlw	1
  8139  003304  1A12               	xorwf	___aodiv@sign^0,f,c
  8140  003306                     l3103:
  8141  003306  EE20  F013         	lfsr	2,___aodiv@quotient
  8142  00330A  0E07               	movlw	7
  8143  00330C                     u2521:
  8144  00330C  6ADE               	clrf	postinc2,c
  8145  00330E  06E8               	decf	wreg,f,c
  8146  003310  E2FD               	bc	u2521
  8147  003312  5009               	movf	___aodiv@divisor^0,w,c
  8148  003314  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8149  003316  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8150  003318  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8151  00331A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8152  00331C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8153  00331E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8154  003320  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8155  003322  B4D8               	btfsc	status,2,c
  8156  003324  EF96  F019         	goto	u2531
  8157  003328  EF98  F019         	goto	u2530
  8158  00332C                     u2531:
  8159  00332C  EFEA  F019         	goto	l3125
  8160  003330                     u2530:
  8161  003330  0E01               	movlw	1
  8162  003332  6E11               	movwf	___aodiv@counter^0,c
  8163  003334  EFA6  F019         	goto	l3111
  8164  003338                     l3109:
  8165  003338  90D8               	bcf	status,0,c
  8166  00333A  3609               	rlcf	___aodiv@divisor^0,f,c
  8167  00333C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8168  00333E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8169  003340  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8170  003342  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8171  003344  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8172  003346  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8173  003348  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8174  00334A  2A11               	incf	___aodiv@counter^0,f,c
  8175  00334C                     l3111:
  8176  00334C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8177  00334E  EFAB  F019         	goto	u2541
  8178  003352  EFAD  F019         	goto	u2540
  8179  003356                     u2541:
  8180  003356  EF9C  F019         	goto	l3109
  8181  00335A                     u2540:
  8182  00335A                     l3113:
  8183  00335A  90D8               	bcf	status,0,c
  8184  00335C  3613               	rlcf	___aodiv@quotient^0,f,c
  8185  00335E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8186  003360  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8187  003362  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8188  003364  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8189  003366  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8190  003368  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8191  00336A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8192  00336C  5009               	movf	___aodiv@divisor^0,w,c
  8193  00336E  5C01               	subwf	___aodiv@dividend^0,w,c
  8194  003370  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8195  003372  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8196  003374  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8197  003376  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8198  003378  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8199  00337A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8200  00337C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8201  00337E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8202  003380  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8203  003382  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8204  003384  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8205  003386  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8206  003388  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8207  00338A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8208  00338C  A0D8               	btfss	status,0,c
  8209  00338E  EFCB  F019         	goto	u2551
  8210  003392  EFCD  F019         	goto	u2550
  8211  003396                     u2551:
  8212  003396  EFDE  F019         	goto	l3121
  8213  00339A                     u2550:
  8214  00339A  5009               	movf	___aodiv@divisor^0,w,c
  8215  00339C  5E01               	subwf	___aodiv@dividend^0,f,c
  8216  00339E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8217  0033A0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8218  0033A2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8219  0033A4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8220  0033A6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8221  0033A8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8222  0033AA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8223  0033AC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8224  0033AE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8225  0033B0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8226  0033B2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8227  0033B4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8228  0033B6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8229  0033B8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8230  0033BA  8013               	bsf	___aodiv@quotient^0,0,c
  8231  0033BC                     l3121:
  8232  0033BC  90D8               	bcf	status,0,c
  8233  0033BE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8234  0033C0  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8235  0033C2  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8236  0033C4  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8237  0033C6  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8238  0033C8  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8239  0033CA  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8240  0033CC  3209               	rrcf	___aodiv@divisor^0,f,c
  8241  0033CE  2E11               	decfsz	___aodiv@counter^0,f,c
  8242  0033D0  EFAD  F019         	goto	l3113
  8243  0033D4                     l3125:
  8244  0033D4  5012               	movf	___aodiv@sign^0,w,c
  8245  0033D6  B4D8               	btfsc	status,2,c
  8246  0033D8  EFF0  F019         	goto	u2561
  8247  0033DC  EFF2  F019         	goto	u2560
  8248  0033E0                     u2561:
  8249  0033E0  EF02  F01A         	goto	l3129
  8250  0033E4                     u2560:
  8251  0033E4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8252  0033E6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8253  0033E8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8254  0033EA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8255  0033EC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8256  0033EE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8257  0033F0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8258  0033F2  6C13               	negf	___aodiv@quotient^0,c
  8259  0033F4  0E00               	movlw	0
  8260  0033F6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8261  0033F8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8262  0033FA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8263  0033FC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8264  0033FE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8265  003400  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8266  003402  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8267  003404                     l3129:
  8268  003404  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8269  003408  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8270  00340C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8271  003410  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8272  003414  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8273  003418  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8274  00341C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8275  003420  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8276  003424  0012               	return		;funcret
  8277  003426                     __end_of___aodiv:
  8278                           	callstack 0
  8279                           
  8280 ;; *************** function _sendStringSerial4 *****************
  8281 ;; Defined at:
  8282 ;;		line 36 in file "serial.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  string          2    1[COMRAM] PTR unsigned char 
  8285 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      void 
  8290 ;; Registers used:
  8291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8301 ;;Total ram usage:        2 bytes
  8302 ;; Hardware stack levels used: 1
  8303 ;; Hardware stack levels required when called: 1
  8304 ;; This function calls:
  8305 ;;		_sendCharSerial4
  8306 ;; This function is called by:
  8307 ;;		_color_display
  8308 ;;		_color_predict
  8309 ;;		_check_color_reading
  8310 ;;		_voltage_display
  8311 ;; This function uses a non-reentrant model
  8312 ;;
  8313                           
  8314                           	psect	text34
  8315  004210                     __ptext34:
  8316                           	callstack 0
  8317  004210                     _sendStringSerial4:
  8318                           	callstack 28
  8319  004210                     
  8320                           ;serial.c: 38:     while(*string != 0){
  8321  004210  EF13  F021         	goto	l3755
  8322  004214                     l3751:
  8323                           
  8324                           ;serial.c: 39:   sendCharSerial4(*string++);}
  8325  004214  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8326  004218  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8327  00421C  50DF               	movf	indf2,w,c
  8328  00421E  ECB6  F021         	call	_sendCharSerial4
  8329  004222  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8330  004224  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8331  004226                     l3755:
  8332                           
  8333                           ;serial.c: 38:     while(*string != 0){
  8334  004226  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8335  00422A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8336  00422E  50DF               	movf	indf2,w,c
  8337  004230  A4D8               	btfss	status,2,c
  8338  004232  EF1D  F021         	goto	u3571
  8339  004236  EF1F  F021         	goto	u3570
  8340  00423A                     u3571:
  8341  00423A  EF0A  F021         	goto	l3751
  8342  00423E                     u3570:
  8343  00423E  0012               	return		;funcret
  8344  004240                     __end_of_sendStringSerial4:
  8345                           	callstack 0
  8346                           
  8347 ;; *************** function _sendCharSerial4 *****************
  8348 ;; Defined at:
  8349 ;;		line 29 in file "serial.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  charToSend      1    wreg     unsigned char 
  8352 ;; Auto vars:     Size  Location     Type
  8353 ;;  charToSend      1    0[COMRAM] unsigned char 
  8354 ;; Return value:  Size  Location     Type
  8355 ;;                  1    wreg      void 
  8356 ;; Registers used:
  8357 ;;		wreg
  8358 ;; Tracked objects:
  8359 ;;		On entry : 0/0
  8360 ;;		On exit  : 0/0
  8361 ;;		Unchanged: 0/0
  8362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8364 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;Total ram usage:        1 bytes
  8368 ;; Hardware stack levels used: 1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_sendStringSerial4
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           	psect	text35
  8377  00436C                     __ptext35:
  8378                           	callstack 0
  8379  00436C                     _sendCharSerial4:
  8380                           	callstack 28
  8381                           
  8382                           ;incstack = 0
  8383                           ;sendCharSerial4@charToSend stored from wreg
  8384  00436C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8385  00436E                     l415:
  8386  00436E  010E               	movlb	14	; () banked
  8387  004370  A537               	btfss	55,2,b	;volatile
  8388  004372  EFBD  F021         	goto	u3301
  8389  004376  EFBF  F021         	goto	u3300
  8390  00437A                     u3301:
  8391  00437A  EFB7  F021         	goto	l415
  8392  00437E                     u3300:
  8393  00437E                     
  8394                           ; BSR set to: 14
  8395                           ;serial.c: 31:     TX4REG = charToSend;
  8396  00437E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8397  004382                     
  8398                           ; BSR set to: 14
  8399  004382  0012               	return		;funcret
  8400  004384                     __end_of_sendCharSerial4:
  8401                           	callstack 0
  8402                           
  8403 ;; *************** function _LED_C *****************
  8404 ;; Defined at:
  8405 ;;		line 109 in file "color.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;		None
  8408 ;; Auto vars:     Size  Location     Type
  8409 ;;		None
  8410 ;; Return value:  Size  Location     Type
  8411 ;;                  1    wreg      void 
  8412 ;; Registers used:
  8413 ;;		wreg
  8414 ;; Tracked objects:
  8415 ;;		On entry : 0/0
  8416 ;;		On exit  : 0/0
  8417 ;;		Unchanged: 0/0
  8418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;Total ram usage:        2 bytes
  8424 ;; Hardware stack levels used: 1
  8425 ;; This function calls:
  8426 ;;		Nothing
  8427 ;; This function is called by:
  8428 ;;		_color_data_collection
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text36
  8433  004292                     __ptext36:
  8434                           	callstack 0
  8435  004292                     _LED_C:
  8436                           	callstack 29
  8437  004292                     
  8438                           ;color.c: 111:     LATGbits.LATG1 = 1;
  8439  004292  827F               	bsf	127,1,c	;volatile
  8440                           
  8441                           ;color.c: 112:     LATFbits.LATF7 = 1;
  8442  004294  8E7E               	bsf	126,7,c	;volatile
  8443                           
  8444                           ;color.c: 113:     LATAbits.LATA4 = 1;
  8445  004296  8879               	bsf	121,4,c	;volatile
  8446  004298                     
  8447                           ;color.c: 114:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8448  004298  0E11               	movlw	17
  8449  00429A  6E02               	movwf	(??_LED_C+1)^0,c
  8450  00429C  0E3C               	movlw	60
  8451  00429E  6E01               	movwf	??_LED_C^0,c
  8452  0042A0  0ECB               	movlw	203
  8453  0042A2                     u5017:
  8454  0042A2  2EE8               	decfsz	wreg,f,c
  8455  0042A4  D7FE               	bra	u5017
  8456  0042A6  2E01               	decfsz	??_LED_C^0,f,c
  8457  0042A8  D7FC               	bra	u5017
  8458  0042AA  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8459  0042AC  D7FA               	bra	u5017
  8460  0042AE  F000               	nop	
  8461  0042B0  0012               	return		;funcret
  8462  0042B2                     __end_of_LED_C:
  8463                           	callstack 0
  8464                           
  8465 ;; *************** function _color_click_init *****************
  8466 ;; Defined at:
  8467 ;;		line 12 in file "color.c"
  8468 ;; Parameters:    Size  Location     Type
  8469 ;;		None
  8470 ;; Auto vars:     Size  Location     Type
  8471 ;;		None
  8472 ;; Return value:  Size  Location     Type
  8473 ;;                  1    wreg      void 
  8474 ;; Registers used:
  8475 ;;		wreg, status,2, status,0, cstack
  8476 ;; Tracked objects:
  8477 ;;		On entry : 0/0
  8478 ;;		On exit  : 0/0
  8479 ;;		Unchanged: 0/0
  8480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8483 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8484 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8485 ;;Total ram usage:        1 bytes
  8486 ;; Hardware stack levels used: 1
  8487 ;; Hardware stack levels required when called: 3
  8488 ;; This function calls:
  8489 ;;		_I2C_2_Master_Init
  8490 ;;		_color_writetoaddr
  8491 ;; This function is called by:
  8492 ;;		_main
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text37
  8497  0041DC                     __ptext37:
  8498                           	callstack 0
  8499  0041DC                     _color_click_init:
  8500                           	callstack 27
  8501  0041DC                     
  8502                           ;color.c: 15:     I2C_2_Master_Init();
  8503  0041DC  EC20  F021         	call	_I2C_2_Master_Init	;wreg free
  8504  0041E0                     
  8505                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  8506  0041E0  0E01               	movlw	1
  8507  0041E2  6E03               	movwf	color_writetoaddr@value^0,c
  8508  0041E4  0E00               	movlw	0
  8509  0041E6  EC59  F021         	call	_color_writetoaddr
  8510  0041EA                     
  8511                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8512  0041EA  0E3F               	movlw	63
  8513  0041EC  6E05               	movwf	??_color_click_init^0,c
  8514  0041EE  0E55               	movlw	85
  8515  0041F0                     u5027:
  8516  0041F0  2EE8               	decfsz	wreg,f,c
  8517  0041F2  D7FE               	bra	u5027
  8518  0041F4  2E05               	decfsz	??_color_click_init^0,f,c
  8519  0041F6  D7FC               	bra	u5027
  8520  0041F8  F000               	nop	
  8521  0041FA                     
  8522                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  8523  0041FA  0E03               	movlw	3
  8524  0041FC  6E03               	movwf	color_writetoaddr@value^0,c
  8525  0041FE  0E00               	movlw	0
  8526  004200  EC59  F021         	call	_color_writetoaddr
  8527  004204                     
  8528                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  8529  004204  0ED5               	movlw	213
  8530  004206  6E03               	movwf	color_writetoaddr@value^0,c
  8531  004208  0E01               	movlw	1
  8532  00420A  EC59  F021         	call	_color_writetoaddr
  8533  00420E  0012               	return		;funcret
  8534  004210                     __end_of_color_click_init:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _color_writetoaddr *****************
  8538 ;; Defined at:
  8539 ;;		line 28 in file "color.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  address         1    wreg     unsigned char 
  8542 ;;  value           1    2[COMRAM] unsigned char 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;  address         1    3[COMRAM] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      void 
  8547 ;; Registers used:
  8548 ;;		wreg, status,2, status,0, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8554 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;Total ram usage:        2 bytes
  8559 ;; Hardware stack levels used: 1
  8560 ;; Hardware stack levels required when called: 2
  8561 ;; This function calls:
  8562 ;;		_I2C_2_Master_Start
  8563 ;;		_I2C_2_Master_Stop
  8564 ;;		_I2C_2_Master_Write
  8565 ;; This function is called by:
  8566 ;;		_color_click_init
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           	psect	text38
  8571  0042B2                     __ptext38:
  8572                           	callstack 0
  8573  0042B2                     _color_writetoaddr:
  8574                           	callstack 27
  8575                           
  8576                           ;incstack = 0
  8577                           ;color_writetoaddr@address stored from wreg
  8578  0042B2  6E04               	movwf	color_writetoaddr@address^0,c
  8579  0042B4                     
  8580                           ;color.c: 29:     I2C_2_Master_Start();
  8581  0042B4  ECCD  F021         	call	_I2C_2_Master_Start	;wreg free
  8582                           
  8583                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  8584  0042B8  0E52               	movlw	82
  8585  0042BA  ECC2  F021         	call	_I2C_2_Master_Write
  8586                           
  8587                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  8588  0042BE  5004               	movf	color_writetoaddr@address^0,w,c
  8589  0042C0  0980               	iorlw	128
  8590  0042C2  ECC2  F021         	call	_I2C_2_Master_Write
  8591                           
  8592                           ;color.c: 32:     I2C_2_Master_Write(value);
  8593  0042C6  5003               	movf	color_writetoaddr@value^0,w,c
  8594  0042C8  ECC2  F021         	call	_I2C_2_Master_Write
  8595                           
  8596                           ;color.c: 33:     I2C_2_Master_Stop();
  8597  0042CC  ECC8  F021         	call	_I2C_2_Master_Stop	;wreg free
  8598  0042D0  0012               	return		;funcret
  8599  0042D2                     __end_of_color_writetoaddr:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function _I2C_2_Master_Init *****************
  8603 ;; Defined at:
  8604 ;;		line 4 in file "i2c.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;		None
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8622 ;;Total ram usage:        0 bytes
  8623 ;; Hardware stack levels used: 1
  8624 ;; This function calls:
  8625 ;;		Nothing
  8626 ;; This function is called by:
  8627 ;;		_color_click_init
  8628 ;;		_main
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text39
  8633  004240                     __ptext39:
  8634                           	callstack 0
  8635  004240                     _I2C_2_Master_Init:
  8636                           	callstack 29
  8637  004240                     
  8638                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8639  004240  010E               	movlb	14	; () banked
  8640  004242  51D9               	movf	217,w,b	;volatile
  8641  004244  0BF0               	andlw	-16
  8642  004246  0908               	iorlw	8
  8643  004248  6FD9               	movwf	217,b	;volatile
  8644  00424A                     
  8645                           ; BSR set to: 14
  8646                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8647  00424A  8BD9               	bsf	217,5,b	;volatile
  8648                           
  8649                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8650  00424C  0E9F               	movlw	159
  8651  00424E  6FD6               	movwf	214,b	;volatile
  8652  004250                     
  8653                           ; BSR set to: 14
  8654                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8655  004250  8A84               	bsf	132,5,c	;volatile
  8656  004252                     
  8657                           ; BSR set to: 14
  8658                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8659  004252  8C84               	bsf	132,6,c	;volatile
  8660  004254                     
  8661                           ; BSR set to: 14
  8662                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8663  004254  9BA7               	bcf	167,5,b	;volatile
  8664  004256                     
  8665                           ; BSR set to: 14
  8666                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8667  004256  9DA7               	bcf	167,6,b	;volatile
  8668                           
  8669                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8670  004258  0E1D               	movlw	29
  8671  00425A  6F1D               	movwf	29,b	;volatile
  8672                           
  8673                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8674  00425C  0E1E               	movlw	30
  8675  00425E  6F1C               	movwf	28,b	;volatile
  8676                           
  8677                           ;i2c.c: 18:   RD5PPS=0x1C;
  8678  004260  0E1C               	movlw	28
  8679  004262  6F6F               	movwf	111,b	;volatile
  8680                           
  8681                           ;i2c.c: 19:   RD6PPS=0x1B;
  8682  004264  0E1B               	movlw	27
  8683  004266  6F70               	movwf	112,b	;volatile
  8684  004268                     
  8685                           ; BSR set to: 14
  8686  004268  0012               	return		;funcret
  8687  00426A                     __end_of_I2C_2_Master_Init:
  8688                           	callstack 0
  8689                           
  8690 ;; *************** function _calibrate_white *****************
  8691 ;; Defined at:
  8692 ;;		line 207 in file "color.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;  w               2   11[COMRAM] PTR struct white_card
  8695 ;;		 -> main@white(18), 
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;		None
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8707 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8710 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8711 ;;Total ram usage:        4 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 3
  8714 ;; This function calls:
  8715 ;;		_LED_B
  8716 ;;		_LED_G
  8717 ;;		_LED_R
  8718 ;;		_color_read_Blue
  8719 ;;		_color_read_Green
  8720 ;;		_color_read_Red
  8721 ;; This function is called by:
  8722 ;;		_main
  8723 ;; This function uses a non-reentrant model
  8724 ;;
  8725                           
  8726                           	psect	text40
  8727  00358A                     __ptext40:
  8728                           	callstack 0
  8729  00358A                     _calibrate_white:
  8730                           	callstack 27
  8731  00358A                     
  8732                           ;color.c: 207: void calibrate_white(struct white_card *w);color.c: 208: {;color.c: 209: 
      +                              LED_R();
  8733  00358A  EC69  F021         	call	_LED_R	;wreg free
  8734  00358E                     
  8735                           ;color.c: 211:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8736  00358E  EC3F  F01F         	call	_color_read_Red	;wreg free
  8737  003592  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8738  003596  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8739  00359A  C005  FFDE         	movff	?_color_read_Red,postinc2
  8740  00359E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8741  0035A2  EC67  F01F         	call	_color_read_Green	;wreg free
  8742  0035A6  EE20 F002          	lfsr	2,2
  8743  0035AA  500C               	movf	calibrate_white@w^0,w,c
  8744  0035AC  26D9               	addwf	fsr2l,f,c
  8745  0035AE  500D               	movf	(calibrate_white@w+1)^0,w,c
  8746  0035B0  22DA               	addwfc	fsr2h,f,c
  8747  0035B2  C005  FFDE         	movff	?_color_read_Green,postinc2
  8748  0035B6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8749  0035BA  EC8F  F01F         	call	_color_read_Blue	;wreg free
  8750  0035BE  EE20 F004          	lfsr	2,4
  8751  0035C2  500C               	movf	calibrate_white@w^0,w,c
  8752  0035C4  26D9               	addwf	fsr2l,f,c
  8753  0035C6  500D               	movf	(calibrate_white@w+1)^0,w,c
  8754  0035C8  22DA               	addwfc	fsr2h,f,c
  8755  0035CA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8756  0035CE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8757  0035D2                     
  8758                           ;color.c: 212:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8759  0035D2  0E09               	movlw	9
  8760  0035D4  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8761  0035D6  0E1E               	movlw	30
  8762  0035D8  6E0E               	movwf	??_calibrate_white^0,c
  8763  0035DA  0EE4               	movlw	228
  8764  0035DC                     u5037:
  8765  0035DC  2EE8               	decfsz	wreg,f,c
  8766  0035DE  D7FE               	bra	u5037
  8767  0035E0  2E0E               	decfsz	??_calibrate_white^0,f,c
  8768  0035E2  D7FC               	bra	u5037
  8769  0035E4  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8770  0035E6  D7FA               	bra	u5037
  8771  0035E8  D000               	nop2	
  8772  0035EA                     
  8773                           ;color.c: 214:     LED_G();
  8774  0035EA  EC79  F021         	call	_LED_G	;wreg free
  8775  0035EE                     
  8776                           ;color.c: 216:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8777  0035EE  EC3F  F01F         	call	_color_read_Red	;wreg free
  8778  0035F2  EE20 F006          	lfsr	2,6
  8779  0035F6  500C               	movf	calibrate_white@w^0,w,c
  8780  0035F8  26D9               	addwf	fsr2l,f,c
  8781  0035FA  500D               	movf	(calibrate_white@w+1)^0,w,c
  8782  0035FC  22DA               	addwfc	fsr2h,f,c
  8783  0035FE  C005  FFDE         	movff	?_color_read_Red,postinc2
  8784  003602  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8785  003606  EC67  F01F         	call	_color_read_Green	;wreg free
  8786  00360A  EE20 F008          	lfsr	2,8
  8787  00360E  500C               	movf	calibrate_white@w^0,w,c
  8788  003610  26D9               	addwf	fsr2l,f,c
  8789  003612  500D               	movf	(calibrate_white@w+1)^0,w,c
  8790  003614  22DA               	addwfc	fsr2h,f,c
  8791  003616  C005  FFDE         	movff	?_color_read_Green,postinc2
  8792  00361A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8793  00361E  EC8F  F01F         	call	_color_read_Blue	;wreg free
  8794  003622  EE20 F00A          	lfsr	2,10
  8795  003626  500C               	movf	calibrate_white@w^0,w,c
  8796  003628  26D9               	addwf	fsr2l,f,c
  8797  00362A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8798  00362C  22DA               	addwfc	fsr2h,f,c
  8799  00362E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8800  003632  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8801                           
  8802                           ;color.c: 217:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8803  003636  0E09               	movlw	9
  8804  003638  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8805  00363A  0E1E               	movlw	30
  8806  00363C  6E0E               	movwf	??_calibrate_white^0,c
  8807  00363E  0EE4               	movlw	228
  8808  003640                     u5047:
  8809  003640  2EE8               	decfsz	wreg,f,c
  8810  003642  D7FE               	bra	u5047
  8811  003644  2E0E               	decfsz	??_calibrate_white^0,f,c
  8812  003646  D7FC               	bra	u5047
  8813  003648  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8814  00364A  D7FA               	bra	u5047
  8815  00364C  D000               	nop2	
  8816  00364E                     
  8817                           ;color.c: 219:     LED_B();
  8818  00364E  EC89  F021         	call	_LED_B	;wreg free
  8819  003652                     
  8820                           ;color.c: 221:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  8821  003652  EC3F  F01F         	call	_color_read_Red	;wreg free
  8822  003656  EE20 F00C          	lfsr	2,12
  8823  00365A  500C               	movf	calibrate_white@w^0,w,c
  8824  00365C  26D9               	addwf	fsr2l,f,c
  8825  00365E  500D               	movf	(calibrate_white@w+1)^0,w,c
  8826  003660  22DA               	addwfc	fsr2h,f,c
  8827  003662  C005  FFDE         	movff	?_color_read_Red,postinc2
  8828  003666  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8829  00366A  EC67  F01F         	call	_color_read_Green	;wreg free
  8830  00366E  EE20 F00E          	lfsr	2,14
  8831  003672  500C               	movf	calibrate_white@w^0,w,c
  8832  003674  26D9               	addwf	fsr2l,f,c
  8833  003676  500D               	movf	(calibrate_white@w+1)^0,w,c
  8834  003678  22DA               	addwfc	fsr2h,f,c
  8835  00367A  C005  FFDE         	movff	?_color_read_Green,postinc2
  8836  00367E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8837  003682  EC8F  F01F         	call	_color_read_Blue	;wreg free
  8838  003686  EE20 F010          	lfsr	2,16
  8839  00368A  500C               	movf	calibrate_white@w^0,w,c
  8840  00368C  26D9               	addwf	fsr2l,f,c
  8841  00368E  500D               	movf	(calibrate_white@w+1)^0,w,c
  8842  003690  22DA               	addwfc	fsr2h,f,c
  8843  003692  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8844  003696  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8845  00369A                     
  8846                           ;color.c: 222:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8847  00369A  0E09               	movlw	9
  8848  00369C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8849  00369E  0E1E               	movlw	30
  8850  0036A0  6E0E               	movwf	??_calibrate_white^0,c
  8851  0036A2  0EE4               	movlw	228
  8852  0036A4                     u5057:
  8853  0036A4  2EE8               	decfsz	wreg,f,c
  8854  0036A6  D7FE               	bra	u5057
  8855  0036A8  2E0E               	decfsz	??_calibrate_white^0,f,c
  8856  0036AA  D7FC               	bra	u5057
  8857  0036AC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8858  0036AE  D7FA               	bra	u5057
  8859  0036B0  D000               	nop2	
  8860  0036B2  0012               	return		;funcret
  8861  0036B4                     __end_of_calibrate_white:
  8862                           	callstack 0
  8863                           
  8864 ;; *************** function _color_read_Red *****************
  8865 ;; Defined at:
  8866 ;;		line 36 in file "color.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;  tmp             2    9[COMRAM] unsigned int 
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  2    4[COMRAM] unsigned int 
  8873 ;; Registers used:
  8874 ;;		wreg, status,2, status,0, cstack
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8882 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8884 ;;Total ram usage:        7 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 2
  8887 ;; This function calls:
  8888 ;;		_I2C_2_Master_Read
  8889 ;;		_I2C_2_Master_RepStart
  8890 ;;		_I2C_2_Master_Start
  8891 ;;		_I2C_2_Master_Stop
  8892 ;;		_I2C_2_Master_Write
  8893 ;; This function is called by:
  8894 ;;		_read_color
  8895 ;;		_calibrate_white
  8896 ;; This function uses a non-reentrant model
  8897 ;;
  8898                           
  8899                           	psect	text41
  8900  003E7E                     __ptext41:
  8901                           	callstack 0
  8902  003E7E                     _color_read_Red:
  8903                           	callstack 26
  8904  003E7E                     
  8905                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  8906  003E7E  ECCD  F021         	call	_I2C_2_Master_Start	;wreg free
  8907                           
  8908                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  8909  003E82  0E52               	movlw	82
  8910  003E84  ECC2  F021         	call	_I2C_2_Master_Write
  8911                           
  8912                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  8913  003E88  0EB6               	movlw	182
  8914  003E8A  ECC2  F021         	call	_I2C_2_Master_Write
  8915                           
  8916                           ;color.c: 42:  I2C_2_Master_RepStart();
  8917  003E8E  ECD2  F021         	call	_I2C_2_Master_RepStart	;wreg free
  8918                           
  8919                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  8920  003E92  0E53               	movlw	83
  8921  003E94  ECC2  F021         	call	_I2C_2_Master_Write
  8922                           
  8923                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  8924  003E98  0E01               	movlw	1
  8925  003E9A  EC1D  F020         	call	_I2C_2_Master_Read
  8926  003E9E  6E07               	movwf	??_color_read_Red^0,c
  8927  003EA0  5007               	movf	??_color_read_Red^0,w,c
  8928  003EA2  6E0A               	movwf	color_read_Red@tmp^0,c
  8929  003EA4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8930                           
  8931                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8932  003EA6  0E00               	movlw	0
  8933  003EA8  EC1D  F020         	call	_I2C_2_Master_Read
  8934  003EAC  6E07               	movwf	??_color_read_Red^0,c
  8935  003EAE  5007               	movf	??_color_read_Red^0,w,c
  8936  003EB0  6E09               	movwf	(??_color_read_Red+2)^0,c
  8937  003EB2  6A08               	clrf	(??_color_read_Red+1)^0,c
  8938  003EB4  500A               	movf	color_read_Red@tmp^0,w,c
  8939  003EB6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8940  003EB8  6E0A               	movwf	color_read_Red@tmp^0,c
  8941  003EBA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8942  003EBC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8943  003EBE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8944                           
  8945                           ;color.c: 46:  I2C_2_Master_Stop();
  8946  003EC0  ECC8  F021         	call	_I2C_2_Master_Stop	;wreg free
  8947  003EC4                     
  8948                           ;color.c: 47:  return tmp;
  8949  003EC4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8950  003EC8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8951  003ECC  0012               	return		;funcret
  8952  003ECE                     __end_of_color_read_Red:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function _color_read_Green *****************
  8956 ;; Defined at:
  8957 ;;		line 64 in file "color.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;  tmp             2    9[COMRAM] unsigned int 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  2    4[COMRAM] unsigned int 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        7 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 2
  8978 ;; This function calls:
  8979 ;;		_I2C_2_Master_Read
  8980 ;;		_I2C_2_Master_RepStart
  8981 ;;		_I2C_2_Master_Start
  8982 ;;		_I2C_2_Master_Stop
  8983 ;;		_I2C_2_Master_Write
  8984 ;; This function is called by:
  8985 ;;		_read_color
  8986 ;;		_calibrate_white
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text42
  8991  003ECE                     __ptext42:
  8992                           	callstack 0
  8993  003ECE                     _color_read_Green:
  8994                           	callstack 26
  8995  003ECE                     
  8996                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  8997  003ECE  ECCD  F021         	call	_I2C_2_Master_Start	;wreg free
  8998                           
  8999                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  9000  003ED2  0E52               	movlw	82
  9001  003ED4  ECC2  F021         	call	_I2C_2_Master_Write
  9002                           
  9003                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  9004  003ED8  0EB8               	movlw	184
  9005  003EDA  ECC2  F021         	call	_I2C_2_Master_Write
  9006                           
  9007                           ;color.c: 70:  I2C_2_Master_RepStart();
  9008  003EDE  ECD2  F021         	call	_I2C_2_Master_RepStart	;wreg free
  9009                           
  9010                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  9011  003EE2  0E53               	movlw	83
  9012  003EE4  ECC2  F021         	call	_I2C_2_Master_Write
  9013                           
  9014                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  9015  003EE8  0E01               	movlw	1
  9016  003EEA  EC1D  F020         	call	_I2C_2_Master_Read
  9017  003EEE  6E07               	movwf	??_color_read_Green^0,c
  9018  003EF0  5007               	movf	??_color_read_Green^0,w,c
  9019  003EF2  6E0A               	movwf	color_read_Green@tmp^0,c
  9020  003EF4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9021                           
  9022                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9023  003EF6  0E00               	movlw	0
  9024  003EF8  EC1D  F020         	call	_I2C_2_Master_Read
  9025  003EFC  6E07               	movwf	??_color_read_Green^0,c
  9026  003EFE  5007               	movf	??_color_read_Green^0,w,c
  9027  003F00  6E09               	movwf	(??_color_read_Green+2)^0,c
  9028  003F02  6A08               	clrf	(??_color_read_Green+1)^0,c
  9029  003F04  500A               	movf	color_read_Green@tmp^0,w,c
  9030  003F06  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9031  003F08  6E0A               	movwf	color_read_Green@tmp^0,c
  9032  003F0A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9033  003F0C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9034  003F0E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9035                           
  9036                           ;color.c: 74:  I2C_2_Master_Stop();
  9037  003F10  ECC8  F021         	call	_I2C_2_Master_Stop	;wreg free
  9038  003F14                     
  9039                           ;color.c: 75:  return tmp;
  9040  003F14  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9041  003F18  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9042  003F1C  0012               	return		;funcret
  9043  003F1E                     __end_of_color_read_Green:
  9044                           	callstack 0
  9045                           
  9046 ;; *************** function _color_read_Blue *****************
  9047 ;; Defined at:
  9048 ;;		line 50 in file "color.c"
  9049 ;; Parameters:    Size  Location     Type
  9050 ;;		None
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  tmp             2    9[COMRAM] unsigned int 
  9053 ;; Return value:  Size  Location     Type
  9054 ;;                  2    4[COMRAM] unsigned int 
  9055 ;; Registers used:
  9056 ;;		wreg, status,2, status,0, cstack
  9057 ;; Tracked objects:
  9058 ;;		On entry : 0/0
  9059 ;;		On exit  : 0/0
  9060 ;;		Unchanged: 0/0
  9061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9065 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;Total ram usage:        7 bytes
  9067 ;; Hardware stack levels used: 1
  9068 ;; Hardware stack levels required when called: 2
  9069 ;; This function calls:
  9070 ;;		_I2C_2_Master_Read
  9071 ;;		_I2C_2_Master_RepStart
  9072 ;;		_I2C_2_Master_Start
  9073 ;;		_I2C_2_Master_Stop
  9074 ;;		_I2C_2_Master_Write
  9075 ;; This function is called by:
  9076 ;;		_read_color
  9077 ;;		_calibrate_white
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text43
  9082  003F1E                     __ptext43:
  9083                           	callstack 0
  9084  003F1E                     _color_read_Blue:
  9085                           	callstack 26
  9086  003F1E                     
  9087                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  9088  003F1E  ECCD  F021         	call	_I2C_2_Master_Start	;wreg free
  9089                           
  9090                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  9091  003F22  0E52               	movlw	82
  9092  003F24  ECC2  F021         	call	_I2C_2_Master_Write
  9093                           
  9094                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  9095  003F28  0EBA               	movlw	186
  9096  003F2A  ECC2  F021         	call	_I2C_2_Master_Write
  9097                           
  9098                           ;color.c: 56:  I2C_2_Master_RepStart();
  9099  003F2E  ECD2  F021         	call	_I2C_2_Master_RepStart	;wreg free
  9100                           
  9101                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  9102  003F32  0E53               	movlw	83
  9103  003F34  ECC2  F021         	call	_I2C_2_Master_Write
  9104                           
  9105                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  9106  003F38  0E01               	movlw	1
  9107  003F3A  EC1D  F020         	call	_I2C_2_Master_Read
  9108  003F3E  6E07               	movwf	??_color_read_Blue^0,c
  9109  003F40  5007               	movf	??_color_read_Blue^0,w,c
  9110  003F42  6E0A               	movwf	color_read_Blue@tmp^0,c
  9111  003F44  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9112                           
  9113                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9114  003F46  0E00               	movlw	0
  9115  003F48  EC1D  F020         	call	_I2C_2_Master_Read
  9116  003F4C  6E07               	movwf	??_color_read_Blue^0,c
  9117  003F4E  5007               	movf	??_color_read_Blue^0,w,c
  9118  003F50  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9119  003F52  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9120  003F54  500A               	movf	color_read_Blue@tmp^0,w,c
  9121  003F56  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9122  003F58  6E0A               	movwf	color_read_Blue@tmp^0,c
  9123  003F5A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9124  003F5C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9125  003F5E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9126                           
  9127                           ;color.c: 60:  I2C_2_Master_Stop();
  9128  003F60  ECC8  F021         	call	_I2C_2_Master_Stop	;wreg free
  9129  003F64                     
  9130                           ;color.c: 61:  return tmp;
  9131  003F64  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9132  003F68  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9133  003F6C  0012               	return		;funcret
  9134  003F6E                     __end_of_color_read_Blue:
  9135                           	callstack 0
  9136                           
  9137 ;; *************** function _I2C_2_Master_Write *****************
  9138 ;; Defined at:
  9139 ;;		line 45 in file "i2c.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  data_byte       1    wreg     unsigned char 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  data_byte       1    1[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;Total ram usage:        1 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 1
  9160 ;; This function calls:
  9161 ;;		_I2C_2_Master_Idle
  9162 ;; This function is called by:
  9163 ;;		_color_writetoaddr
  9164 ;;		_color_read_Red
  9165 ;;		_color_read_Blue
  9166 ;;		_color_read_Green
  9167 ;;		_color_read_Clear
  9168 ;; This function uses a non-reentrant model
  9169 ;;
  9170                           
  9171                           	psect	text44
  9172  004384                     __ptext44:
  9173                           	callstack 0
  9174  004384                     _I2C_2_Master_Write:
  9175                           	callstack 26
  9176                           
  9177                           ;incstack = 0
  9178                           ;I2C_2_Master_Write@data_byte stored from wreg
  9179  004384  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9180  004386                     
  9181                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9182  004386  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9183  00438A                     
  9184                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9185  00438A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9186  00438E  0012               	return		;funcret
  9187  004390                     __end_of_I2C_2_Master_Write:
  9188                           	callstack 0
  9189                           
  9190 ;; *************** function _I2C_2_Master_Stop *****************
  9191 ;; Defined at:
  9192 ;;		line 39 in file "i2c.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;		None
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      void 
  9199 ;; Registers used:
  9200 ;;		wreg, status,2, status,0, cstack
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9210 ;;Total ram usage:        0 bytes
  9211 ;; Hardware stack levels used: 1
  9212 ;; Hardware stack levels required when called: 1
  9213 ;; This function calls:
  9214 ;;		_I2C_2_Master_Idle
  9215 ;; This function is called by:
  9216 ;;		_color_writetoaddr
  9217 ;;		_color_read_Red
  9218 ;;		_color_read_Blue
  9219 ;;		_color_read_Green
  9220 ;;		_color_read_Clear
  9221 ;; This function uses a non-reentrant model
  9222 ;;
  9223                           
  9224                           	psect	text45
  9225  004390                     __ptext45:
  9226                           	callstack 0
  9227  004390                     _I2C_2_Master_Stop:
  9228                           	callstack 26
  9229  004390                     
  9230                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9231  004390  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9232  004394                     
  9233                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9234  004394  010E               	movlb	14	; () banked
  9235  004396  85DA               	bsf	218,2,b	;volatile
  9236  004398                     
  9237                           ; BSR set to: 14
  9238  004398  0012               	return		;funcret
  9239  00439A                     __end_of_I2C_2_Master_Stop:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function _I2C_2_Master_Start *****************
  9243 ;; Defined at:
  9244 ;;		line 27 in file "i2c.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;		None
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  1    wreg      void 
  9251 ;; Registers used:
  9252 ;;		wreg, status,2, status,0, cstack
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/0
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used: 1
  9264 ;; Hardware stack levels required when called: 1
  9265 ;; This function calls:
  9266 ;;		_I2C_2_Master_Idle
  9267 ;; This function is called by:
  9268 ;;		_color_writetoaddr
  9269 ;;		_color_read_Red
  9270 ;;		_color_read_Blue
  9271 ;;		_color_read_Green
  9272 ;;		_color_read_Clear
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           	psect	text46
  9277  00439A                     __ptext46:
  9278                           	callstack 0
  9279  00439A                     _I2C_2_Master_Start:
  9280                           	callstack 26
  9281  00439A                     
  9282                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9283  00439A  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9284  00439E                     
  9285                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9286  00439E  010E               	movlb	14	; () banked
  9287  0043A0  81DA               	bsf	218,0,b	;volatile
  9288  0043A2                     
  9289                           ; BSR set to: 14
  9290  0043A2  0012               	return		;funcret
  9291  0043A4                     __end_of_I2C_2_Master_Start:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _I2C_2_Master_RepStart *****************
  9295 ;; Defined at:
  9296 ;;		line 33 in file "i2c.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      void 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9314 ;;Total ram usage:        0 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 1
  9317 ;; This function calls:
  9318 ;;		_I2C_2_Master_Idle
  9319 ;; This function is called by:
  9320 ;;		_color_read_Red
  9321 ;;		_color_read_Blue
  9322 ;;		_color_read_Green
  9323 ;;		_color_read_Clear
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text47
  9328  0043A4                     __ptext47:
  9329                           	callstack 0
  9330  0043A4                     _I2C_2_Master_RepStart:
  9331                           	callstack 26
  9332  0043A4                     
  9333                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9334  0043A4  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9335  0043A8                     
  9336                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9337  0043A8  010E               	movlb	14	; () banked
  9338  0043AA  83DA               	bsf	218,1,b	;volatile
  9339  0043AC                     
  9340                           ; BSR set to: 14
  9341  0043AC  0012               	return		;funcret
  9342  0043AE                     __end_of_I2C_2_Master_RepStart:
  9343                           	callstack 0
  9344                           
  9345 ;; *************** function _I2C_2_Master_Read *****************
  9346 ;; Defined at:
  9347 ;;		line 51 in file "i2c.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  ack             1    wreg     unsigned char 
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;  ack             1    2[COMRAM] unsigned char 
  9352 ;;  tmp             1    3[COMRAM] unsigned char 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      unsigned char 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;Total ram usage:        3 bytes
  9367 ;; Hardware stack levels used: 1
  9368 ;; Hardware stack levels required when called: 1
  9369 ;; This function calls:
  9370 ;;		_I2C_2_Master_Idle
  9371 ;; This function is called by:
  9372 ;;		_color_read_Red
  9373 ;;		_color_read_Blue
  9374 ;;		_color_read_Green
  9375 ;;		_color_read_Clear
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text48
  9380  00403A                     __ptext48:
  9381                           	callstack 0
  9382  00403A                     _I2C_2_Master_Read:
  9383                           	callstack 26
  9384                           
  9385                           ; BSR set to: 14
  9386                           ;incstack = 0
  9387                           ;I2C_2_Master_Read@ack stored from wreg
  9388  00403A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9389  00403C                     
  9390                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9391  00403C  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9392  004040                     
  9393                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9394  004040  010E               	movlb	14	; () banked
  9395  004042  87DA               	bsf	218,3,b	;volatile
  9396                           
  9397                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9398  004044  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9399  004048                     
  9400                           ;i2c.c: 57:   tmp = SSP2BUF;
  9401  004048  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9402                           
  9403                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9404  00404C  EC35  F021         	call	_I2C_2_Master_Idle	;wreg free
  9405  004050                     
  9406                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9407  004050  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9408  004052  B4D8               	btfsc	status,2,c
  9409  004054  EF2E  F020         	goto	u3281
  9410  004058  EF32  F020         	goto	u3280
  9411  00405C                     u3281:
  9412  00405C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9413  00405E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9414  004060  EF33  F020         	goto	u3298
  9415  004064                     u3280:
  9416  004064  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9417  004066                     u3298:
  9418  004066  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9419  004068  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9420  00406A  010E               	movlb	14	; () banked
  9421  00406C  51DA               	movf	218,w,b	;volatile
  9422  00406E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9423  004070  0BDF               	andlw	-33
  9424  004072  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9425  004074  6FDA               	movwf	218,b	;volatile
  9426  004076                     
  9427                           ; BSR set to: 14
  9428                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9429  004076  89DA               	bsf	218,4,b	;volatile
  9430  004078                     
  9431                           ; BSR set to: 14
  9432                           ;i2c.c: 61:   return tmp;
  9433  004078  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9434  00407A                     
  9435                           ; BSR set to: 14
  9436  00407A  0012               	return		;funcret
  9437  00407C                     __end_of_I2C_2_Master_Read:
  9438                           	callstack 0
  9439                           
  9440 ;; *************** function _I2C_2_Master_Idle *****************
  9441 ;; Defined at:
  9442 ;;		line 22 in file "i2c.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;		None
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;		None
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;Total ram usage:        1 bytes
  9461 ;; Hardware stack levels used: 1
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_I2C_2_Master_Start
  9466 ;;		_I2C_2_Master_RepStart
  9467 ;;		_I2C_2_Master_Stop
  9468 ;;		_I2C_2_Master_Write
  9469 ;;		_I2C_2_Master_Read
  9470 ;; This function uses a non-reentrant model
  9471 ;;
  9472                           
  9473                           	psect	text49
  9474  00426A                     __ptext49:
  9475                           	callstack 0
  9476  00426A                     _I2C_2_Master_Idle:
  9477                           	callstack 26
  9478  00426A                     l194:
  9479  00426A  010E               	movlb	14	; () banked
  9480  00426C  B5D8               	btfsc	216,2,b	;volatile
  9481  00426E  EF3B  F021         	goto	u2831
  9482  004272  EF3D  F021         	goto	u2830
  9483  004276                     u2831:
  9484  004276  EF35  F021         	goto	l194
  9485  00427A                     u2830:
  9486  00427A                     
  9487                           ; BSR set to: 14
  9488  00427A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9489  00427E  0E1F               	movlw	31
  9490  004280  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9491  004282  A4D8               	btfss	status,2,c
  9492  004284  EF46  F021         	goto	u2841
  9493  004288  EF48  F021         	goto	u2840
  9494  00428C                     u2841:
  9495  00428C  EF35  F021         	goto	l194
  9496  004290                     u2840:
  9497  004290                     
  9498                           ; BSR set to: 14
  9499  004290  0012               	return		;funcret
  9500  004292                     __end_of_I2C_2_Master_Idle:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _LED_R *****************
  9504 ;; Defined at:
  9505 ;;		line 100 in file "color.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;		None
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      void 
  9512 ;; Registers used:
  9513 ;;		wreg
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9523 ;;Total ram usage:        2 bytes
  9524 ;; Hardware stack levels used: 1
  9525 ;; This function calls:
  9526 ;;		Nothing
  9527 ;; This function is called by:
  9528 ;;		_color_data_collection
  9529 ;;		_calibrate_white
  9530 ;;		_detect_color
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text50
  9535  0042D2                     __ptext50:
  9536                           	callstack 0
  9537  0042D2                     _LED_R:
  9538                           	callstack 29
  9539  0042D2                     
  9540                           ;color.c: 102:     LATGbits.LATG1 = 1;
  9541  0042D2  827F               	bsf	127,1,c	;volatile
  9542                           
  9543                           ;color.c: 103:     LATFbits.LATF7 = 0;
  9544  0042D4  9E7E               	bcf	126,7,c	;volatile
  9545                           
  9546                           ;color.c: 104:     LATAbits.LATA4 = 0;
  9547  0042D6  9879               	bcf	121,4,c	;volatile
  9548  0042D8                     
  9549                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9550  0042D8  0E11               	movlw	17
  9551  0042DA  6E02               	movwf	(??_LED_R+1)^0,c
  9552  0042DC  0E3C               	movlw	60
  9553  0042DE  6E01               	movwf	??_LED_R^0,c
  9554  0042E0  0ECB               	movlw	203
  9555  0042E2                     u5067:
  9556  0042E2  2EE8               	decfsz	wreg,f,c
  9557  0042E4  D7FE               	bra	u5067
  9558  0042E6  2E01               	decfsz	??_LED_R^0,f,c
  9559  0042E8  D7FC               	bra	u5067
  9560  0042EA  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9561  0042EC  D7FA               	bra	u5067
  9562  0042EE  F000               	nop	
  9563  0042F0  0012               	return		;funcret
  9564  0042F2                     __end_of_LED_R:
  9565                           	callstack 0
  9566                           
  9567 ;; *************** function _LED_G *****************
  9568 ;; Defined at:
  9569 ;;		line 127 in file "color.c"
  9570 ;; Parameters:    Size  Location     Type
  9571 ;;		None
  9572 ;; Auto vars:     Size  Location     Type
  9573 ;;		None
  9574 ;; Return value:  Size  Location     Type
  9575 ;;                  1    wreg      void 
  9576 ;; Registers used:
  9577 ;;		wreg
  9578 ;; Tracked objects:
  9579 ;;		On entry : 0/0
  9580 ;;		On exit  : 0/0
  9581 ;;		Unchanged: 0/0
  9582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9587 ;;Total ram usage:        2 bytes
  9588 ;; Hardware stack levels used: 1
  9589 ;; This function calls:
  9590 ;;		Nothing
  9591 ;; This function is called by:
  9592 ;;		_color_data_collection
  9593 ;;		_calibrate_white
  9594 ;;		_detect_color
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           	psect	text51
  9599  0042F2                     __ptext51:
  9600                           	callstack 0
  9601  0042F2                     _LED_G:
  9602                           	callstack 29
  9603  0042F2                     
  9604                           ;color.c: 129:     LATGbits.LATG1 = 0;
  9605  0042F2  927F               	bcf	127,1,c	;volatile
  9606                           
  9607                           ;color.c: 130:     LATFbits.LATF7 = 0;
  9608  0042F4  9E7E               	bcf	126,7,c	;volatile
  9609                           
  9610                           ;color.c: 131:     LATAbits.LATA4 = 1;
  9611  0042F6  8879               	bsf	121,4,c	;volatile
  9612  0042F8                     
  9613                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9614  0042F8  0E11               	movlw	17
  9615  0042FA  6E02               	movwf	(??_LED_G+1)^0,c
  9616  0042FC  0E3C               	movlw	60
  9617  0042FE  6E01               	movwf	??_LED_G^0,c
  9618  004300  0ECB               	movlw	203
  9619  004302                     u5077:
  9620  004302  2EE8               	decfsz	wreg,f,c
  9621  004304  D7FE               	bra	u5077
  9622  004306  2E01               	decfsz	??_LED_G^0,f,c
  9623  004308  D7FC               	bra	u5077
  9624  00430A  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9625  00430C  D7FA               	bra	u5077
  9626  00430E  F000               	nop	
  9627  004310  0012               	return		;funcret
  9628  004312                     __end_of_LED_G:
  9629                           	callstack 0
  9630                           
  9631 ;; *************** function _LED_B *****************
  9632 ;; Defined at:
  9633 ;;		line 118 in file "color.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  1    wreg      void 
  9640 ;; Registers used:
  9641 ;;		wreg
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;Total ram usage:        2 bytes
  9652 ;; Hardware stack levels used: 1
  9653 ;; This function calls:
  9654 ;;		Nothing
  9655 ;; This function is called by:
  9656 ;;		_color_data_collection
  9657 ;;		_calibrate_white
  9658 ;;		_detect_color
  9659 ;; This function uses a non-reentrant model
  9660 ;;
  9661                           
  9662                           	psect	text52
  9663  004312                     __ptext52:
  9664                           	callstack 0
  9665  004312                     _LED_B:
  9666                           	callstack 29
  9667  004312                     
  9668                           ;color.c: 120:     LATGbits.LATG1 = 0;
  9669  004312  927F               	bcf	127,1,c	;volatile
  9670                           
  9671                           ;color.c: 121:     LATFbits.LATF7 = 1;
  9672  004314  8E7E               	bsf	126,7,c	;volatile
  9673                           
  9674                           ;color.c: 122:     LATAbits.LATA4 = 0;
  9675  004316  9879               	bcf	121,4,c	;volatile
  9676  004318                     
  9677                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9678  004318  0E11               	movlw	17
  9679  00431A  6E02               	movwf	(??_LED_B+1)^0,c
  9680  00431C  0E3C               	movlw	60
  9681  00431E  6E01               	movwf	??_LED_B^0,c
  9682  004320  0ECB               	movlw	203
  9683  004322                     u5087:
  9684  004322  2EE8               	decfsz	wreg,f,c
  9685  004324  D7FE               	bra	u5087
  9686  004326  2E01               	decfsz	??_LED_B^0,f,c
  9687  004328  D7FC               	bra	u5087
  9688  00432A  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9689  00432C  D7FA               	bra	u5087
  9690  00432E  F000               	nop	
  9691  004330  0012               	return		;funcret
  9692  004332                     __end_of_LED_B:
  9693                           	callstack 0
  9694                           
  9695                           	psect	rparam
  9696  0000                     
  9697                           	psect	idloc
  9698                           
  9699                           ;Config register IDLOC0 @ 0x200000
  9700                           ;	unspecified, using default values
  9701  200000                     	org	2097152
  9702  200000  0FFF               	dw	4095
  9703                           
  9704                           ;Config register IDLOC1 @ 0x200002
  9705                           ;	unspecified, using default values
  9706  200002                     	org	2097154
  9707  200002  0FFF               	dw	4095
  9708                           
  9709                           ;Config register IDLOC2 @ 0x200004
  9710                           ;	unspecified, using default values
  9711  200004                     	org	2097156
  9712  200004  0FFF               	dw	4095
  9713                           
  9714                           ;Config register IDLOC3 @ 0x200006
  9715                           ;	unspecified, using default values
  9716  200006                     	org	2097158
  9717  200006  0FFF               	dw	4095
  9718                           
  9719                           ;Config register IDLOC4 @ 0x200008
  9720                           ;	unspecified, using default values
  9721  200008                     	org	2097160
  9722  200008  0FFF               	dw	4095
  9723                           
  9724                           ;Config register IDLOC5 @ 0x20000A
  9725                           ;	unspecified, using default values
  9726  20000A                     	org	2097162
  9727  20000A  0FFF               	dw	4095
  9728                           
  9729                           ;Config register IDLOC6 @ 0x20000C
  9730                           ;	unspecified, using default values
  9731  20000C                     	org	2097164
  9732  20000C  0FFF               	dw	4095
  9733                           
  9734                           ;Config register IDLOC7 @ 0x20000E
  9735                           ;	unspecified, using default values
  9736  20000E                     	org	2097166
  9737  20000E  0FFF               	dw	4095
  9738                           
  9739                           	psect	config
  9740                           
  9741                           ;Config register CONFIG1L @ 0x300000
  9742                           ;	External Oscillator mode Selection bits
  9743                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9744                           ;	Power-up default value for COSC bits
  9745                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9746  300000                     	org	3145728
  9747  300000  AA                 	db	170
  9748                           
  9749                           ;Config register CONFIG1H @ 0x300001
  9750                           ;	unspecified, using default values
  9751                           ;	Clock Out Enable bit
  9752                           ;	CLKOUTEN = 0x1, unprogrammed default
  9753                           ;	Clock Switch Enable bit
  9754                           ;	CSWEN = 0x1, unprogrammed default
  9755                           ;	Fail-Safe Clock Monitor Enable bit
  9756                           ;	FCMEN = 0x1, unprogrammed default
  9757  300001                     	org	3145729
  9758  300001  FF                 	db	255
  9759                           
  9760                           ;Config register CONFIG2L @ 0x300002
  9761                           ;	unspecified, using default values
  9762                           ;	Master Clear Enable bit
  9763                           ;	MCLRE = 0x1, unprogrammed default
  9764                           ;	Power-up Timer Enable bit
  9765                           ;	PWRTE = 0x1, unprogrammed default
  9766                           ;	Low-power BOR enable bit
  9767                           ;	LPBOREN = 0x1, unprogrammed default
  9768                           ;	Brown-out Reset Enable bits
  9769                           ;	BOREN = 0x3, unprogrammed default
  9770  300002                     	org	3145730
  9771  300002  FF                 	db	255
  9772                           
  9773                           ;Config register CONFIG2H @ 0x300003
  9774                           ;	unspecified, using default values
  9775                           ;	Brown Out Reset Voltage selection bits
  9776                           ;	BORV = 0x3, unprogrammed default
  9777                           ;	ZCD Disable bit
  9778                           ;	ZCD = 0x1, unprogrammed default
  9779                           ;	PPSLOCK bit One-Way Set Enable bit
  9780                           ;	PPS1WAY = 0x1, unprogrammed default
  9781                           ;	Stack Full/Underflow Reset Enable bit
  9782                           ;	STVREN = 0x1, unprogrammed default
  9783                           ;	Debugger Enable bit
  9784                           ;	DEBUG = 0x1, unprogrammed default
  9785                           ;	Extended Instruction Set Enable bit
  9786                           ;	XINST = 0x1, unprogrammed default
  9787  300003                     	org	3145731
  9788  300003  FF                 	db	255
  9789                           
  9790                           ;Config register CONFIG3L @ 0x300004
  9791                           ;	WDT Period Select bits
  9792                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9793                           ;	WDT operating mode
  9794                           ;	WDTE = OFF, WDT Disabled
  9795  300004                     	org	3145732
  9796  300004  9F                 	db	159
  9797                           
  9798                           ;Config register CONFIG3H @ 0x300005
  9799                           ;	unspecified, using default values
  9800                           ;	WDT Window Select bits
  9801                           ;	WDTCWS = 0x7, unprogrammed default
  9802                           ;	WDT input clock selector
  9803                           ;	WDTCCS = 0x7, unprogrammed default
  9804  300005                     	org	3145733
  9805  300005  FF                 	db	255
  9806                           
  9807                           ;Config register CONFIG4L @ 0x300006
  9808                           ;	unspecified, using default values
  9809                           ;	Write Protection Block 0
  9810                           ;	WRT0 = 0x1, unprogrammed default
  9811                           ;	Write Protection Block 1
  9812                           ;	WRT1 = 0x1, unprogrammed default
  9813                           ;	Write Protection Block 2
  9814                           ;	WRT2 = 0x1, unprogrammed default
  9815                           ;	Write Protection Block 3
  9816                           ;	WRT3 = 0x1, unprogrammed default
  9817                           ;	Write Protection Block 3
  9818                           ;	WRT4 = 0x1, unprogrammed default
  9819                           ;	Write Protection Block 3
  9820                           ;	WRT5 = 0x1, unprogrammed default
  9821                           ;	Write Protection Block 3
  9822                           ;	WRT6 = 0x1, unprogrammed default
  9823                           ;	Write Protection Block 3
  9824                           ;	WRT7 = 0x1, unprogrammed default
  9825  300006                     	org	3145734
  9826  300006  FF                 	db	255
  9827                           
  9828                           ;Config register CONFIG4H @ 0x300007
  9829                           ;	unspecified, using default values
  9830                           ;	Configuration Register Write Protection bit
  9831                           ;	WRTC = 0x1, unprogrammed default
  9832                           ;	Boot Block Write Protection bit
  9833                           ;	WRTB = 0x1, unprogrammed default
  9834                           ;	Data EEPROM Write Protection bit
  9835                           ;	WRTD = 0x1, unprogrammed default
  9836                           ;	Scanner Enable bit
  9837                           ;	SCANE = 0x1, unprogrammed default
  9838                           ;	Low Voltage Programming Enable bit
  9839                           ;	LVP = 0x1, unprogrammed default
  9840  300007                     	org	3145735
  9841  300007  FF                 	db	255
  9842                           
  9843                           ;Config register CONFIG5L @ 0x300008
  9844                           ;	unspecified, using default values
  9845                           ;	UserNVM Program Memory Code Protection bit
  9846                           ;	CP = 0x1, unprogrammed default
  9847                           ;	DataNVM Memory Code Protection bit
  9848                           ;	CPD = 0x1, unprogrammed default
  9849  300008                     	org	3145736
  9850  300008  FF                 	db	255
  9851                           
  9852                           ;Config register CONFIG5H @ 0x300009
  9853                           ;	unspecified, using default values
  9854  300009                     	org	3145737
  9855  300009  FF                 	db	255
  9856                           
  9857                           ;Config register CONFIG6L @ 0x30000A
  9858                           ;	unspecified, using default values
  9859                           ;	Table Read Protection Block 0
  9860                           ;	EBTR0 = 0x1, unprogrammed default
  9861                           ;	Table Read Protection Block 1
  9862                           ;	EBTR1 = 0x1, unprogrammed default
  9863                           ;	Table Read Protection Block 2
  9864                           ;	EBTR2 = 0x1, unprogrammed default
  9865                           ;	Table Read Protection Block 3
  9866                           ;	EBTR3 = 0x1, unprogrammed default
  9867                           ;	Table Read Protection Block 4
  9868                           ;	EBTR4 = 0x1, unprogrammed default
  9869                           ;	Table Read Protection Block 5
  9870                           ;	EBTR5 = 0x1, unprogrammed default
  9871                           ;	Table Read Protection Block 6
  9872                           ;	EBTR6 = 0x1, unprogrammed default
  9873                           ;	Table Read Protection Block 7
  9874                           ;	EBTR7 = 0x1, unprogrammed default
  9875  30000A                     	org	3145738
  9876  30000A  FF                 	db	255
  9877                           
  9878                           ;Config register CONFIG6H @ 0x30000B
  9879                           ;	unspecified, using default values
  9880                           ;	Boot Block Table Read Protection bit
  9881                           ;	EBTRB = 0x1, unprogrammed default
  9882  30000B                     	org	3145739
  9883  30000B  FF                 	db	255
  9884                           tosu	equ	0xFFF
  9885                           tosh	equ	0xFFE
  9886                           tosl	equ	0xFFD
  9887                           stkptr	equ	0xFFC
  9888                           pclatu	equ	0xFFB
  9889                           pclath	equ	0xFFA
  9890                           pcl	equ	0xFF9
  9891                           tblptru	equ	0xFF8
  9892                           tblptrh	equ	0xFF7
  9893                           tblptrl	equ	0xFF6
  9894                           tablat	equ	0xFF5
  9895                           prodh	equ	0xFF4
  9896                           prodl	equ	0xFF3
  9897                           indf0	equ	0xFEF
  9898                           postinc0	equ	0xFEE
  9899                           postdec0	equ	0xFED
  9900                           preinc0	equ	0xFEC
  9901                           plusw0	equ	0xFEB
  9902                           fsr0h	equ	0xFEA
  9903                           fsr0l	equ	0xFE9
  9904                           wreg	equ	0xFE8
  9905                           indf1	equ	0xFE7
  9906                           postinc1	equ	0xFE6
  9907                           postdec1	equ	0xFE5
  9908                           preinc1	equ	0xFE4
  9909                           plusw1	equ	0xFE3
  9910                           fsr1h	equ	0xFE2
  9911                           fsr1l	equ	0xFE1
  9912                           bsr	equ	0xFE0
  9913                           indf2	equ	0xFDF
  9914                           postinc2	equ	0xFDE
  9915                           postdec2	equ	0xFDD
  9916                           preinc2	equ	0xFDC
  9917                           plusw2	equ	0xFDB
  9918                           fsr2h	equ	0xFDA
  9919                           fsr2l	equ	0xFD9
  9920                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        2
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    136     154
    BANK1           256     46     179
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2293$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2293$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S224DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S224DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0   50848
                                            134 BANK0      2     2      0
                                              0 BANK1     46    46      0
                  _I2C_2_Master_Init
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        37    33      4   24812
                                             16 BANK0     37    33      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   12618
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   11379
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3082
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    2164
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1660
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2585
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16822
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _read_color                                           2     0      2    1072
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7725
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     613
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
       _color_read_Red
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2E      B3       7       69.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      9A       5       96.2%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AC      58        0.0%
DATA                 0      0     1AC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 09 23:15:58 2022

                _color_read_Red 3E7E                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 3F1E                   _color_predict 38C0  
                            l51 420E                              l60 3F6C                              l54 42D0  
                            l63 3F1C                              l72 42F0                              l81 4310  
                            l57 3ECC                              l66 3E7C                              l75 42B0  
                            l92 329C                              l69 3DDA                              l78 4330  
                            l95 3D1A                _color_read_Clear 3E2E                _color_read_Green 3ECE  
                           l111 399C                             l200 43A2                             l114 36B2  
                           l203 43AC                             l212 407A                             l206 4398  
                           l209 438E                             l153 1A88                             l147 1A86  
                           l156 416A                             l157 416C                             l406 434E  
                           l191 4268                             l415 436E                             l424 423E  
                           l194 426A                             l418 4382                             l283 4038  
                           l197 4290                             l286 3A6E                             l703 3424  
                           l716 3588                             l583 436A                             l854 3878  
                           l863 41A4                             l859 38BE                             l886 37BA  
              ?_calibrate_white 000C                             _abs 407C                             _pad 3B3A  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
                  ___fltol@exp1 0065                            l1210 2204                            l1203 200E  
                          ?_abs 0013                            l1220 2334                            l1212 227C  
                          l1213 226A                            l1117 1C78                            l1302 3BC2  
                          l1310 2B5C                            l1134 1D92                            l1126 1F48  
                          l1118 1C66                            l1207 2372                            l1143 1E62  
                          l1119 1C2C                            l1304 3BFE                            l1312 2B64  
                          l1144 1E50                            l1330 2D9E                            l1171 2ABA  
                          l1251 2E8E                            l1244 2DF6                            l3101 3302  
                          l1173 291A                            l1182 2960                            l3111 334C  
                          l3103 3306                            l1351 40BA                            l1343 3D74  
                          l1247 2F52                            l1159 3FB2                            l1344 3D7C  
                          l1272 3E2C                            l1184 29D8                            l1176 28DE  
                          l3121 33BC                            l3113 335A                            l3105 3312  
                          l3201 2B24                            l1337 3106                            l1185 29C6  
                          l4001 2794                            l1265 4132                            l1258 2EEA  
                          l3123 33CE                            l3115 336C                            l3107 3330  
                          l1363 3B38                            l1371 3FF6                            l3211 2B7E  
                          l3203 2B34                            l4011 27D4                            l4003 27A2  
                          l1348 40B2                            l3117 339A                            l3109 3338  
                          l3125 33D4                            l3141 345C                            l3133 3426  
                          l3061 3A94                            l3221 2BAA                            l3213 2B8C  
                          l3205 2B36                            l4101 2A96                            l4021 2814  
                          l4013 27D6                            l4005 27A4                            l3301 1B5A  
                          l1374 43B0                            l1382 2720                            l3127 33E4  
                          l3119 33BA                            l3151 34C4                            l3143 346A  
                          l3135 342A                            l3063 3A9E                            l3071 3FB4  
                          l3231 2CB6                            l3223 2C2C                            l3215 2B92  
                          l3207 2B50                            l4103 2A9A                            l4031 2844  
                          l4023 281C                            l4007 27B4                            l4015 27DE  
                          l3311 1B92                            l3303 1B6A                            l3129 3404  
                          l3153 34D2                            l3161 3538                            l3145 348A  
                          l3137 3438                            l3065 3ABC                            l3057 3A70  
                          l3073 3FC0                            l3081 41B2                            l3241 2D2A  
                          l3233 2CD4                            l3225 2C32                            l3217 2B9A  
                          l3209 2B6C                            l4201 3196                            l4105 2AA8  
                          l4041 2882                            l4033 2844                            l4025 2820  
                          l4017 27EE                            l4009 27C4                            l4121 2DC0  
                          l3321 1BA6                            l3313 1B96                            l3305 1B7C  
                          l3091 32A2                            l3163 3548                            l3155 3500  
                          l3147 34A8                            l3139 3458                            l3067 3AF2  
                          l3059 3A82                            l3075 3FD2                            l1395 41DA  
                          l3083 41B6                            l1299 3B80                            l3171 3B4A  
                          l3251 2D66                            l3243 2D3A                            l3235 2CEE  
                          l3227 2C38                            l3219 2BA4                            l4203 31A2  
                          l4107 2AAE                            l4051 28CE                            l4043 2892  
                          l4019 2804                            l4131 2E38                            l4123 2E06  
                          l3411 1DF4                            l3403 1DCC                            l3331 1BBA  
                          l3323 1BAA                            l3315 1B9A                            l3307 1B8A  
                          l3093 32B0                            l3165 3568                            l3157 3520  
                          l3149 34B0                            l3077 3FD6                            l3085 41CE  
                          l3181 3BA0                            l3173 3B5E                            l3245 2D40  
                          l3253 2D76                            l3237 2D08                            l3229 2C9C  
                          l4221 31FE                            l4205 31BA                            l4109 2AB0  
                          l4061 2918                            l4053 28DC                            l4045 28A2  
                          l4037 2858                            l4029 2834                            l4141 2EC0  
                          l4133 2E44                            l4125 2E1C                            l4117 2DA2  
                          l3413 1DFC                            l3405 1DD6                            l3421 1E20  
                          l3341 1BCE                            l3333 1BBE                            l3325 1BAE  
                          l3317 1B9E                            l3309 1B8E                            l3261 1A8A  
                          l4301 111A                            l3511 438A                            l3095 32D0  
                          l3159 3532                            l3191 407C                            l3079 41A6  
                          l3183 3BA4                            l3175 3B6C                            l3247 2D52  
                          l3239 2D18                            l4223 3216                            l4215 31E2  
                          l4207 31C0                            l4071 295E                            l4063 292A  
                          l4055 28E8                            l4047 28AA                            l4039 2872  
                          l4151 2EFE                            l4143 2ECC                            l4135 2E76  
                          l4119 2DB2                            l3431 1E72                            l3423 1E24  
                          l3415 1E00                            l3407 1DE4                            l3351 1C46  
                          l3343 1BF8                            l3335 1BC2                            l3327 1BB2  
                          l3319 1BA2                            l3271 1AC6                            l3263 1A96  
                          l4311 12A4                            l4303 112A                            l3257 426A  
                          l3521 403C                            l3505 439A                            l3513 4390  
                          l3097 32D4                            l3089 329E                            l3193 4096  
                          l3185 3BD2                            l3177 3B78                            l3169 3B3A  
                          l3249 2D5E                            l4241 3272                            l4233 323E  
                          l4225 321C                            l4217 31E6                            l4209 31DA  
                          l4081 29BE                            l4065 2940                            l4073 2970  
                          l4057 2906                            l4049 28BA                            l4153 2F22  
                          l4145 2EDA                            l4137 2E78                            l4129 2E30  
                          l3601 20E0                            l3441 1ED8                            l3433 1E7E  
                          l3425 1E32                            l3417 1E10                            l3409 1DE6  
                          l3361 1C86                            l3353 1C4A                            l3345 1C14  
                          l3337 1BC6                            l3329 1BB6                            l3281 1AF6  
                          l3273 1AD6                            l3265 1AA4                            l4401 1A0A  
                          l4321 1398                            l4313 12C0                            l4305 1140  
                          l3259 427A                            l3531 4078                            l3523 4040  
                          l3507 439E                            l3515 4394                            l4251 358E  
                          l4171 4204                            l4163 41DC                            l3099 32E2  
                          l3187 3BE6                            l3179 3B8C                            l3195 2ABC  
                          l4243 3278                            l4235 3242                            l4227 3236  
                          l4219 31F2                            l4091 2A2C                            l4075 297E  
                          l4067 2946                            l4059 2908                            l4155 2F32  
                          l4147 2EF8                            l4139 2E84                            l3611 2142  
                          l3603 20F0                            l3451 1F20                            l3443 1EE8  
                          l3435 1E8C                            l3427 1E48                            l3419 1E12  
                          l3371 1CC8                            l3363 1C96                            l3355 1C58  
                          l3347 1C24                            l3339 1BCA                            l3291 1B20  
                          l3283 1B08                            l3275 1AD8                            l3267 1AA6  
                          l4411 1A56                            l4403 1A0E                            l4331 1526  
                          l4323 13A4                            l4315 1368                            l4307 11E0  
                          l3525 4048                            l3517 43A4                            l3509 4386  
                          l4261 35EE                            l4253 35A2                            l4165 41E0  
                          l3197 2ADC                            l4245 3292                            l4237 324E  
                          l4181 312E                            l4173 3108                            l4085 29E8  
                          l4093 2A30                            l4077 2982                            l4069 2950  
                          l4157 2F40                            l4149 2EFA                            l3621 21EA  
                          l3613 215E                            l3605 210A                            l3541 1F56  
                          l3701 4194                            l3453 1F22                            l3445 1F08  
                          l3437 1EC6                            l3381 1CF6                            l3373 1CD6  
                          l3357 1C5A                            l3349 1C3A                            l3293 1B30  
                          l3285 1B0A                            l3269 1AB6                            l3277 1AE0  
                          l4413 1A6C                            l4405 1A20                            l4341 16FE  
                          l4333 15CE                            l4325 1446                            l4317 137C  
                          l4309 11FC                            l3527 4050                            l3519 43A8  
                          l4271 366A                            l4263 3606                            l4255 35BA  
                          l4167 41EA                            l3535 436E                            l3199 2B04  
                          l3471 2F9C                            l3463 2F54                            l3711 3D58  
                          l4247 3298                            l4239 325A                            l4191 317E  
                          l4183 313A                            l4095 2A4A                            l4087 29F4  
                          l4079 2990                            l4159 2F42                            l3631 2226  
                          l3623 21F4                            l3615 2188                            l3607 211A  
                          l3551 1F96                            l3543 1F64                            l3455 1F28  
                          l3447 1F0C                            l3439 1EC8                            l3391 1D62  
                          l3383 1D00                            l3375 1CE2                            l3367 1CAA  
                          l3359 1C64                            l3295 1B40                            l3287 1B10  
                          l3279 1AF0                            l4415 1A82                            l4407 1A32  
                          l4351 1818                            l4343 1708                            l4335 15EA  
                          l4327 1462                            l4319 1394                            l3529 4076  
                          l3721 3F64                            l3713 3E7E                            l4273 3682  
                          l4265 361E                            l4257 35D2                            l4249 358A  
                          l4169 41FA                            l3537 437E                            l3481 3064  
                          l3473 2FC0                            l3465 2F78                            l3705 3D1C  
                          l4185 3146                            l4097 2A60                            l4089 2A02  
                          l3801 377A                            l3641 2298                            l3633 2234  
                          l3625 2202                            l3617 21BE                            l3609 2136  
                          l3561 1FC6                            l3553 1F9C                            l3545 1F66  
                          l3457 1F36                            l3449 1F1A                            l3393 1D72  
                          l3377 1CE6                            l3369 1CBA                            l3385 1D06  
                          l3297 1B50                            l3289 1B1E                            l4409 1A44  
                          l4361 1878                            l4353 1820                            l4345 1712  
                          l4337 1602                            l4329 150A                            l4281 0EB6  
                          l4521 433E                            l3715 3EC4                            l4275 369A  
                          l4267 364E                            l4259 35EA                            l3483 3088  
                          l3491 30B6                            l3475 2FE4                            l3467 2F86  
                          l3707 3D24                            l3731 3E2E                            l4187 315E  
                          l4179 312A                            l4099 2A7A                            l3803 378A  
                          l3651 2302                            l3643 22A6                            l3635 2262  
                          l3627 2214                            l3619 21CC                            l3571 1FFE  
                          l3563 1FC8                            l3555 1FAC                            l3547 1F76  
                          l3539 1F4A                            l3459 1F38                            l3387 1D2C  
                          l3395 1D82                            l3379 1CF4                            l3299 1B52  
                          l3811 2374                            l4355 1828                            l4347 1740  
                          l4371 18A4                            l4339 1630                            l4291 1036  
                          l4283 0EC2                            l4451 4020                            l4523 4348  
                          l3725 3ECE                            l4269 3652                            l3493 30C4  
                          l3485 3096                            l3477 302C                            l3469 2F98  
                          l3709 3D32                            l3741 3DF6                            l3901 391C  
                          l3733 3E74                            l4197 3186                            l4189 3164  
                          l3805 379A                            l3661 2358                            l3653 231C  
                          l3645 22D0                            l3629 2222                            l3581 204E  
                          l3573 201E                            l3565 1FD8                            l3557 1FB2  
                          l3549 1F86                            l3397 1DA8                            l3389 1D60  
                          l3821 2450                            l3813 2394                            l4381 1960  
                          l4373 18D0                            l4365 1880                            l4349 1800  
                          l4357 1832                            l4293 10DE                            l4285 0F5E  
                          l4277 0E54                            l4453 4034                            l4461 39BA  
                          l4525 434A                            l4517 4332                            l4533 4350  
                          l4621 3C18                            l4613 3C00                            ?_pad 0011  
                          l3719 3F1E                            l3727 3F14                            l3751 4214  
                          l3487 30AA                            l3743 3DFE                            l3911 3952  
                          l3903 392E                            l4199 318A                            l3807 37AA  
                          l3655 2338                            l3663 235E                            l3639 228C  
                          l3647 22D4                            l3591 209E                            l3583 2058  
                          l3575 202E                            l3567 1FE8                            l3559 1FB8  
                          l3399 1DB8                            l3671 3F7E                            l3831 25DE  
                          l3823 246C                            l3815 23DC                            l4391 19B8  
                          l4383 1966                            l4375 18FE                            l4367 1898  
                          l4359 1860                            l4295 10F2                            l4287 0F7A  
                          l4279 0EB2                            l4455 4036                            l4447 3FF8  
                          l4463 39CE                            l4527 434C                            l4519 433C  
                          l4631 3C6C                            l4623 3C2C                            l4615 3C04  
                          l3753 4222                            l3497 30D0                            l3745 3E1A  
                          l3737 3DDC                            l3921 3976                            l3913 3952  
                          l3905 392E                            l3681 3828                            l3665 2362  
                          l3657 2348                            l3649 22EE                            l3593 20AA  
                          l3585 206E                            l3569 1FF8                            l3841 2710  
                          l3833 2610                            l3817 23F0                            l4393 19BC  
                          l4385 197A                            l4377 1904                            l4369 18A0  
                          l4297 110A                            l4289 1022                            l4449 4008  
                          l4465 39E2                            l4457 399E                            l4633 3C6C  
                          l4625 3C30                            l4617 3C08                            l3851 4252  
                          l3755 4226                            l3499 30F4                            l3739 3DEE  
                          l3923 3990                            l3915 3964                            l3907 3940  
                          l3931 4138                            l3691 38B6                            l3683 3838  
                          l3675 37BC                            l3659 2356                            l3595 20B8  
                          l3587 207A                            l3579 2042                            l3835 267C  
                          l3827 24A4                            l3819 242C                            l4395 19CC  
                          l4387 198C                            l4379 1932                            l4299 110E  
                          l4467 39F2                            l4459 39AA                            l4635 3C86  
                          l4627 3C48                            l4619 3C14                            l3861 42D2  
                          l3853 4254                            l3845 4240                            l3749 4210  
                          l3917 3964                            l3909 3940                            l3933 4150  
                          l3781 3720                            l3773 36E0                            l3693 38BC  
                          l3685 3846                            l3677 37EA                            l3597 20C4  
                          l3589 2092                            l3669 3F6E                            l3837 26B0  
                          l3829 2572                            l3925 40FA                            l4397 19DE  
                          l4389 19A2                            l4469 3A06                            l4637 3C8C  
                          l4629 3C54                            l3871 4318                            l3863 42D8  
                          l3855 4256                            l3847 424A                            l3919 3976  
                          l3935 4166                            l3791 3750                            l3783 372E  
                          l3775 370A                            l3767 36B4                            l3687 3858  
                          l3679 37FA                            l3599 20D4                            l3839 26EC  
                          l4399 19F4                            l3873 42F2                            l3849 4250  
                          l3857 42B4                            l3865 4292                            l3881 38C4  
                          l3929 4134                            l3793 375A                            l3777 370C  
                          l3769 36CC                            l3689 3866                            l3697 416E  
                          l3875 42F8                            l3867 4298                            l3891 38F8  
                          l3883 38D6                            l3859 3D7E                            l3779 371C  
                          l3699 4184                            l3869 4312                            l3877 3CAC  
                          l3893 38F8                            l3885 38D6                            l3981 272E  
                          l3789 3746                            l3879 3D0E                            l3895 390A  
                          l3887 38E6                            l3991 276E                            l3983 273C  
                          l3799 376E                            l3897 390A                            l3889 38E6  
                          l3993 2770                            l3985 273E                            l3899 391C  
                          l3987 274E                            l3995 2778                            l3979 2722  
                          l3997 2788                            l3989 275E                            l3999 278E  
           detect_color@GC_REAL 008A                            STR_1 0E05                            STR_3 0E3E  
                          STR_4 0E4E                            STR_5 0E38                            STR_6 0E44  
                          STR_7 0E25                            STR_8 0E49                            STR_9 0E1E  
                          u3000 1C86                            u3001 1C82                            u3010 1C96  
                          u3011 1C92                            u3100 1DF4                            u3020 1CC8  
                          u3101 1DF0                            u3021 1CC4                            u3110 1E10  
                          u3030 1CD6                            u3111 1E0C                            u3031 1CD2  
                          u4000 2844                            u3200 1EE8                            u3120 1E20  
                          u3040 1CF4                    _BAUD4CONbits 000EE9                            u4001 2840  
                          u3201 1EE4                            u3121 1E1C                            u3041 1CF0  
                          _LATE 000F7D                            u4010 28BA                            u3210 1F08  
                          u3130 1E32                            u3050 1D2C                            u4011 28B6  
                          u3211 1F04                            u3131 1E2E                            u3051 1D28  
                          _LATG 000F7F                            u3300 437E                            u2500 32B0  
                          u4100 29D4                            u4020 28DC                            u3220 1F1A  
                          u3140 1E48                            u3060 1D72                            u3301 437A  
                          u2501 32AC                            u4101 29D0                            u4021 28D8  
                          u3221 1F16                            u3141 1E44                            u3061 1D6E  
                          u2510 32E2                            u4110 29E8                            u4030 2906  
                          u3310 1F64                            u3230 1F36                            u3150 1E5E  
                          u3070 1DA8                            u2511 32DE                            u4111 29E4  
                          u4031 2902                            u3311 1F60                            u3231 1F32  
                          u3151 1E5A                            u3071 1DA4                            u2600 34D2  
                          u2440 3A82                            u3240 2F78                            u4120 2A02  
                          u4040 292A                            u4200 2EBC                            u3400 2202  
                          u3320 1F76                            u3160 1E72                            u3080 1DB8  
                          u2521 330C                            u2601 34CE                            u2441 3A7E  
                          u3241 2F74                            u4121 29FE                            u4041 2926  
                          u4201 2EB8                            u3401 21FE                            u3321 1F72  
                          u3161 1E6E                            u3081 1DB4                            u2530 3330  
                          u2610 3500                            u2450 3A94                            u3250 2FC0  
                          u4130 2A4A                            u4050 2940                            u4210 2EDA  
                          u3410 2222                            u3330 1F86                            u3170 1E8C  
                          u3090 1DE4                            _T2PR 000FBC                            u2531 332C  
                          u2611 34FC                            u2451 3A90                            u3251 2FBC  
                          u4131 2A46                            u4051 293C                            u4211 2ED6  
                          u3411 221E                            u3331 1F82                            u3171 1E88  
                          u3091 1DE0                            u2540 335A                            u2620 3548  
                          u2460 3ABC                            u2700 2B04                            u3260 2FE4  
                          u4140 2A7A                            u4060 295E                            u4220 2EEA  
                          u3500 37EA                            u3420 2234                            u3340 1FC6  
                          u3180 1EC6                            u4300 1630                            u2541 3356  
                          u2621 3544                            u2461 3AB8                            u2701 2B00  
                          u3261 2FE0                            u4141 2A76                            u4061 295A  
                          u4221 2EE6                            u3501 37E6                            u3421 2230  
                          u3341 1FC2                            u3181 1EC2                            u4301 162C  
                          u2550 339A                            u2470 3AF2                            u2630 3B4A  
                          u2710 2B34                            u3270 3088                            u4150 2AA8  
                          u4070 297E                            u4230 2EF8                            u3510 3828  
                          u3430 2262                            u3350 1FD8                            u3190 1ED8  
                          u4310 16FE                            u2551 3396                            u2471 3AEE  
                          u2631 3B46                            u2711 2B30                            u3271 3084  
                          u5007 3264                            u4151 2AA4                            u4071 297A  
                          u4231 2EF4                            u3511 3824                            u3431 225E  
                          u3351 1FD4                            u3191 1ED4                            u4311 16FA  
                          u3280 4064                            u2560 33E4                            u2480 3FF6  
                          u2640 3B6C                            u2800 2D2A                            u2720 2B50  
                          u4080 2990                            u4240 2F32                            u4160 2DB2  
                          u3600 3700                            u3520 3846                            u3440 2278  
                          u3360 1FE8                            u4400 1932                            u4320 1740  
                          u3281 405C                            u5017 42A2                            u2561 33E0  
                          u2481 3FF2                            u2641 3B68                            u2801 2D26  
                          u2721 2B4C                            u4081 298C                            u4241 2F2E  
                          u4161 2DAE                            u3521 3842                            u3441 2274  
                          u3361 1FE4                            u4401 192E                            u4321 173C  
                          u2570 3438                            u2490 41CE                            u2650 3BC2  
                          u2810 2D3A                            u2730 2B7E                            u4090 29BE  
                          u4250 2F40                            u4170 2DC0                            u3610 372E  
                          u3530 3866                            u3450 228C                            u3370 201E  
                          u4410 1960                            u4330 1800                            u5027 41F0  
                          u2571 3434                            u2491 41CA                            u2651 3BBE  
                          u2811 2D36                            u2731 2B7A                            u4091 29BA  
                          u4251 2F3C                            u4171 2DBC                            u3611 372A  
                          u3531 3862                            u3451 2288                            u3371 201A  
                          u4411 195C                            u4331 17FC                            u2580 346A  
                          u2660 3BD2                            u2820 2D52                            u2740 2B8C  
                          u4260 317E                            u4180 2E1C                            u3620 3742  
                          u3540 38B6                            u3460 22A6                            u3380 202E  
                          u2900 1B30                            u3700 246C                            u4500 1A20  
                          u4420 197A                            u4340 1818                            u5037 35DC  
                          u2581 3466                            u2661 3BCE                            u2821 2D4E  
                          u2741 2B88                            u4261 317A                            u4181 2E18  
                          u3621 373E                            u3605 36F6                            u3541 38B2  
                          u3461 22A2                            u3381 202A                            u2901 1B2C  
                          u3701 2468                            u4501 1A1C                            u4421 1976  
                          u4341 1814                            u2830 427A                            u2590 34A8  
                          u2670 4096                            u2750 2CB6                            u4270 31DA  
                          u4190 2E72                            u3630 376A                            u3470 22EE  
                          u3390 21A8                            u3550 4184                            u2910 1B40  
                          u3710 2572                            u4510 1A32                            u4430 198C  
                          u4350 1860                            u2831 4276                            u5047 3640  
                          u2591 34A4                            u2671 4092                            u2751 2CB2  
                          u4271 31D6                            u4191 2E6E                            u3631 3766  
                          u3471 22EA                            u3551 4180                            u2911 1B3C  
                          u3711 256E                            u4511 1A2E                            u4431 1988  
                          u4351 185C                            u2840 4290                            u2760 2CD4  
                          u2680 2AEC                            u3560 3D74                            u3800 392E  
                          u4280 3236                            u3640 378A                            u3480 231C  
                          u2920 1B7C                            u3720 2610                            u4520 1A44  
                          u4440 19A2                            u4360 1878                            u2841 428C  
                          u5057 36A4                            u2761 2CD0                            u2681 2AE6  
                          u3561 3D70                            u3801 392A                            u4281 3232  
                          u3641 3786                            u3481 2318                            u2921 1B78  
                          u3721 260C                            u4521 1A40                            u4441 199E  
                          u4361 1874                            u3298 4066                            u3570 423E  
                          u2770 2CEE                            u2690 2AEE                            u3810 3940  
                          u4290 3292                            u3650 379A                            u3490 2356  
                          u2930 1B8A                            u2850 1AA4                            u3730 26D0  
                          u4530 1A56                            u4450 19B8                            u4370 1898  
                          u5067 42E2                            u3571 423A                            u2771 2CEA  
                          u3811 393C                            u4291 328E                            u3651 3796  
                          u3491 2352                            u3395 219E                            u2931 1B86  
                          u2851 1AA0                            u4531 1A52                            u4451 19B4  
                          u4371 1894                            u2780 2D08                            u3820 3952  
                          u2940 1BF8                            u2860 1AB6                            u3740 26EC  
                          u3660 23B4                            u4540 1A6C                            u4460 19CC  
                          u4380 18D0                            u5077 4302                            u2781 2D04  
                          u3821 394E                            u2941 1BF4                            u2861 1AB2  
                          u3741 26E8                            u4541 1A68                            u4461 19C8  
                          u4381 18CC                            u2790 2D18                            u3830 3964  
                          u3750 38D6                            u3590 36CC                            u2950 1C10  
                          u2870 1AC6                            u3670 23DC                            u4550 1A82  
                          u4470 19DE                            u4390 18FE                            u5087 4322  
                          u2791 2D14                            u3831 3960                            u3751 38D2  
                          u3591 36C8                            u2951 1C0A                            u2871 1AC2  
                          u3735 26C6                            u3671 23D8                            u4551 1A7E  
                          u4471 19DA                            u4391 18FA                            u3840 3976  
                          u3760 38E6                            u2960 1C12                            u2880 1B08  
                          u3680 2410                            u4480 19F4                            u3841 3972  
                          u3761 38E2                            u2881 1B04                            u3665 23AA  
                          u4481 19F0                            u3770 38F8                            u3930 273C  
                          u3850 4150                            u2970 1C3A                            u2890 1B1E  
                          u3690 242C                            u4490 1A0A                            u3771 38F4  
                          u3931 2738                            u3851 414C                            u2971 1C36  
                          u2891 1B1A                            u3691 2428                            u4491 1A06  
                          u3780 390A                            u3940 274E                            u3860 4166  
                          u2980 1C58                            u3781 3906                            u3941 274A  
                          u3861 4162                            u2981 1C54                            u3685 2406  
                          u3790 391C                            u3950 275E                            u2990 1C78  
                          u3791 3918                            u3951 275A                            u2991 1C74  
                          u3960 27A2                            u3961 279E                            u3970 27B4  
                          u3971 27B0                            u3980 27C4                            u3981 27C0  
                          u4917 3C3C                            u3990 2804                            u3991 2800  
                          u4927 3C60                            u4937 3C98                            u4947 10FE  
                          u4957 1388                            u4967 15F6                            u4977 3150  
                          u4987 31AC                            u4997 3208                            abs@a 0013  
           detect_color@GR_REAL 0088                            _dbuf 0165                            _main 3C00  
                          _dtoa 2ABC                            _prec 00F0                            _nout 00EC  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            prodh 000FF4  
                          prodl 000FF3                            start 0000                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 3ECE                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 3426                 __end_of___fladd 1F4A  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 358A  
                         _ADPCH 000F5F                 __end_of___fldiv 2ABC                 __end_of___flneg 41A6  
                         STR_10 0E13                           STR_11 0E2C                           STR_12 0E32  
                         STR_13 0E0D                 __end_of___flmul 2374                 __end_of___flsub 3FB4  
               __end_of___fltol 37BC                           _LED_B 4312                           _LED_C 4292  
                         _LED_G 42F2                           _LED_R 42D2                    vfpfcnvrt@fmt 0042  
       __end_of_sendCharSerial4 4384      __end_of_I2C_2_Master_Start 43A4         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 4390                 __end_of_compare 416E                    compare@lower 006A  
                         _flags 00F2                           _color 0164                    compare@upper 006E  
                         _fputc 3A70                           _fputs 3FB4                           pad@fp 0011  
                         _width 00EE                           _putch 43B0                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
                         tablat 000FF5                 __end_of_lroundf 4134                           status 000FD8  
               __end_of_sprintf 3E2E                color_display@buf 0079         __end_of_color_read_Blue 3F6E  
         _I2C_2_Master_RepStart 43A4                 ?_color_read_Red 0005                 __initialization 40BC  
                  __end_of_main 3CAC                    __end_of_dtoa 2DA0            __end_of_detect_color 1A8A  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 00E6  
                        ??_dtoa 0026                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
        _initDCmotors_parameter 399E                          ?_fputc 0001                          ?_fputs 000A  
                        _ADRESH 000F64                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70        __end_of_color_click_init 4210  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 2F54                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 37BC                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                       ??___fldiv 0017                       ??___flneg 0005  
                     ??___flmul 0030                       ??___flsub 0019                       ??___fltol 0060  
                 compare@result 005F                          clear_0 40DA                          clear_1 40E6  
                        _motorL 015A                          _motorR 0150                          isa$std 000001  
                        pad@buf 0013                          _roundf 2374                          dtoa@fp 001C  
                        _strlen 41A6                       ??_compare 005F                __end_of_pin_init 436C  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 3D7E               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                calibrate_white@w 000C  
                    __accesstop 0060         __end_of__initialization 40EC        __end_of_color_read_Clear 3E7E  
                    ___flneg@f1 0001        __end_of_color_read_Green 3F1E          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 4332  
                 __end_of_LED_C 42B2                   __end_of_LED_G 4312                   __end_of_LED_R 42F2  
              ?_color_read_Blue 0005                  __pcstackCOMRAM 0001                    __pidataBANK0 43AE  
                 __end_of_fputc 3B3A               detect_color@color 0090                   __end_of_fputs 3FF8  
                 __end_of_putch 43B2                   __end_of_toint 0E05                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00E8                      __pbssBANK1 0100                color_predict@buf 0079  
             _color_writetoaddr 42B2                    _T2CLKCONbits 000FBF                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                    _detect_color 0E54  
 __end_of_color_data_collection 329E          color_writetoaddr@value 0003                ??_color_read_Red 0007  
     __end_of_color_writetoaddr 42D2                       _ADREFbits 000F58              _I2C_2_Master_Start 439A  
                    _initUSART4 4332              _I2C_2_Master_Write 4384                       ?_pin_init 0001  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000A  
       sendStringSerial4@string 0002                         ___aodiv 329E                         ___fladd 1A8A  
                       ___aomod 3426                         ___fldiv 2722                         ___flneg 416E  
                       ___flmul 1F4A                         ___flsub 3F6E                         ___fltol 36B4  
           ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00                         __pcinit 40BC                         __ramtop 0E00  
                    _read_color 3D7E                         __ptext0 3C00                         __ptext1 4350  
                       __ptext2 4332                         __ptext3 399E                         __ptext4 3FF8  
                       __ptext5 0E54                         __ptext6 40FA                         __ptext7 2374  
                       __ptext8 3F6E                         __ptext9 1A8A                         _compare 4134  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 40FA                   _RxBufWriteCnt 00F7  
                       _sprintf 3DDC                         main@rgb 0199            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 40EC                 _CALIBRATION_180 00F8  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
                    ??_pin_init 0001              ??_color_click_init 0005               __end_of_vfpfcnvrt 3108  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 3FF8  
__end_of_initDCmotors_parameter 3A70                       _PORTFbits 000F8E                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                     ___flmul@grs 0035  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
         __end_of_color_display 3D1C                      main@motorL 0185                      main@motorR 018F  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 0086                  detect_color@BC 0078  
                detect_color@BG 008E                  detect_color@GB 007E                  detect_color@GG 0082  
                detect_color@BR 008C                  detect_color@GR 0080                  detect_color@RB 007C  
                detect_color@RG 007A                  detect_color@RR 0084           __end_of_color_predict 399E  
                __end_of___flge 38C0                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                     ?_read_color 000C                  __end_of_roundf 2722  
                __end_of_strlen 41DC             color_read_Clear@tmp 000A             start_initialization 40BC  
                   __end_of_abs 40BC                     __end_of_pad 3C00                   _TxBufWriteCnt 00F5  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 403A                     vfprintf@fmt 0052  
                      ??___flge 0009                     __pdataBANK0 00F8                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 0185                ___aodiv@dividend 0001  
                     _dtoa$2375 002E                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 426A  
             _I2C_2_Master_Init 4240               _I2C_2_Master_Read 403A               _I2C_2_Master_Stop 4390  
                  _RxBufReadCnt 00F6                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 4210  
         _color_data_collection 3108             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                     _vfpfcnvrt 2F54                      _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 4292  
     __end_of_I2C_2_Master_Init 426A       __end_of_I2C_2_Master_Read 407C       __end_of_I2C_2_Master_Stop 439A  
   I2C_2_Master_Write@data_byte 0002                       main@white 01A1               ??_color_read_Blue 0007  
                 detect_color@m 0070                   detect_color@w 0072                    _TxBufReadCnt 00F4  
               _calibrate_white 358A       __end_of_sendStringSerial4 4240   __end_of_I2C_2_Master_RepStart 43AE  
            color_read_Blue@tmp 000A                      roundf@F527 00E8                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050                    __Lsmallconst 0E00            compare@value2compare 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                        ___xxtofl 2DA0              __end_of_initUSART4 4350  
                      __ptext10 416E                        __ptext11 1F4A                        __ptext20 38C0  
                      __ptext12 37BC                        __ptext21 3CAC                        __ptext13 36B4  
                      __ptext30 43B0                        __ptext22 3DDC                        __ptext14 4134  
                      __ptext31 407C                        __ptext23 3D1C                        __ptext15 2DA0  
                      __ptext40 358A                        __ptext32 3426                        __ptext24 2F54  
                      __ptext16 2722                        __ptext41 3E7E                        __ptext33 329E  
                      __ptext25 2ABC                        __ptext17 3108                        __ptext50 42D2  
                      __ptext42 3ECE                        __ptext34 4210                        __ptext26 3B3A  
                      __ptext18 3D7E                        __ptext51 42F2                        __ptext43 3F1E  
                      __ptext35 436C                        __ptext27 41A6                        __ptext19 3E2E  
                      __ptext52 4312                        __ptext44 4384                        __ptext36 4292  
                      __ptext28 3FB4                        __ptext45 4390                        __ptext37 41DC  
                      __ptext29 3A70                        __ptext46 439A                        __ptext38 42B2  
                      __ptext47 43A4                        __ptext39 4240                        __ptext48 403A  
                      __ptext49 426A                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A              __end_of_read_color 3DDC                        _pin_init 4350  
                      isa$xinst 000000                      _RC4STAbits 000EE7                     _SENSITIVITY 00F9  
                      _vfprintf 3D1C                ___aomod@dividend 0001         __end_of_calibrate_white 36B4  
                 ?_detect_color 0070                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                     sprintf@ap 006C                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 41DC                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$2736 0091                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                ??_detect_color 0074                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 436C                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                    ___aomod@sign 0012                     _roundf$2737 004F  
                   _roundf$2738 0049                   _color_display 3CAC  
