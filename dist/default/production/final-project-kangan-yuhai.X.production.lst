

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 09 15:57:58 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.35
    72                           ; Generated 05/05/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  00408C                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _SENSITIVITY
   112  00408C  07                 	db	7
   113                           
   114                           	psect	smallconst
   115  000E00                     __psmallconst:
   116                           	callstack 0
   117  000E00  00                 	db	0
   118  000E01  0000               	dw	0
   119  000E03  4B00               	dw	19200
   120  000E05                     __end_of_toint:
   121                           	callstack 0
   122  0000                     _TRISFbits	set	3974
   123  0000                     _TX4REG	set	3812
   124  0000                     _RC4STAbits	set	3815
   125  0000                     _SP4BRGH	set	3814
   126  0000                     _TRISGbits	set	3975
   127  0000                     _TRISEbits	set	3973
   128  0000                     _SSP2CON2bits	set	3802
   129  0000                     _LATG	set	3967
   130  0000                     _LATE	set	3965
   131  0000                     _RX4PPS	set	3605
   132  0000                     _SSP2CLKPPS	set	3612
   133  0000                     _SSP2DATPPS	set	3613
   134  0000                     _ANSELDbits	set	3751
   135  0000                     _SSP2ADD	set	3798
   136  0000                     _SSP2CON1bits	set	3801
   137  0000                     _LATAbits	set	3961
   138  0000                     _LATFbits	set	3966
   139  0000                     _LATGbits	set	3967
   140  0000                     _TRISAbits	set	3969
   141  0000                     _TRISCbits	set	3971
   142  0000                     _TRISDbits	set	3972
   143  0000                     _LATCbits	set	3963
   144  0000                     _LATEbits	set	3965
   145  0000                     _RC4REG	set	3811
   146  0000                     _SP4BRGL	set	3813
   147  0000                     _TX4STAbits	set	3816
   148  0000                     _BAUD4CONbits	set	3817
   149  0000                     _SSP2CON2	set	3802
   150  0000                     _SSP2STAT	set	3800
   151  0000                     _ANSELFbits	set	3764
   152  0000                     _SSP2BUF	set	3797
   153  0000                     _PIE4bits	set	3629
   154  0000                     _PIR4bits	set	3639
   155  0000                     _RC0PPS	set	3682
   156  0000                     _RC7PPS	set	3689
   157  0000                     _RD5PPS	set	3695
   158  0000                     _RE2PPS	set	3700
   159  0000                     _RD6PPS	set	3696
   160  0000                     _PORTFbits	set	3982
   161  0000                     _T2PR	set	4028
   162  0000                     _T2CONbits	set	4029
   163  0000                     _PWM7DCH	set	4000
   164  0000                     _PWM6DCH	set	4003
   165  0000                     _T2CLKCONbits	set	4031
   166  0000                     _T2HLTbits	set	4030
   167  0000                     _PWM6CONbits	set	4004
   168  0000                     _PWM7CONbits	set	4001
   169  0000                     _ADREFbits	set	3928
   170  0000                     _ADPCH	set	3935
   171  0000                     _ADRESH	set	3940
   172  0000                     _ADCON0bits	set	3936
   173  000E05                     STR_1:
   174  000E05  25                 	db	37
   175  000E06  64                 	db	100	;'d'
   176  000E07  09                 	db	9
   177  000E08  25                 	db	37
   178  000E09  64                 	db	100	;'d'
   179  000E0A  09                 	db	9
   180  000E0B  25                 	db	37
   181  000E0C  64                 	db	100	;'d'
   182  000E0D  09                 	db	9
   183  000E0E  25                 	db	37
   184  000E0F  64                 	db	100	;'d'
   185  000E10  0D                 	db	13
   186  000E11  0A                 	db	10
   187  000E12  00                 	db	0
   188  000E13  4C                 	db	76	;'L'
   189  000E14  69                 	db	105	;'i'
   190  000E15  67                 	db	103	;'g'
   191  000E16  68                 	db	104	;'h'
   192  000E17  74                 	db	116	;'t'
   193  000E18  20                 	db	32
   194  000E19  62                 	db	98	;'b'
   195  000E1A  6C                 	db	108	;'l'
   196  000E1B  75                 	db	117	;'u'
   197  000E1C  65                 	db	101	;'e'
   198  000E1D  00                 	db	0
   199  000E1E  4F                 	db	79	;'O'
   200  000E1F  72                 	db	114	;'r'
   201  000E20  61                 	db	97	;'a'
   202  000E21  6E                 	db	110	;'n'
   203  000E22  67                 	db	103	;'g'
   204  000E23  65                 	db	101	;'e'
   205  000E24  00                 	db	0
   206  000E25  59                 	db	89	;'Y'
   207  000E26  65                 	db	101	;'e'
   208  000E27  6C                 	db	108	;'l'
   209  000E28  6C                 	db	108	;'l'
   210  000E29  6F                 	db	111	;'o'
   211  000E2A  77                 	db	119	;'w'
   212  000E2B  00                 	db	0
   213  000E2C  57                 	db	87	;'W'
   214  000E2D  68                 	db	104	;'h'
   215  000E2E  69                 	db	105	;'i'
   216  000E2F  74                 	db	116	;'t'
   217  000E30  65                 	db	101	;'e'
   218  000E31  00                 	db	0
   219  000E32  42                 	db	66	;'B'
   220  000E33  6C                 	db	108	;'l'
   221  000E34  61                 	db	97	;'a'
   222  000E35  63                 	db	99	;'c'
   223  000E36  6B                 	db	107	;'k'
   224  000E37  00                 	db	0
   225  000E38  47                 	db	71	;'G'
   226  000E39  72                 	db	114	;'r'
   227  000E3A  65                 	db	101	;'e'
   228  000E3B  65                 	db	101	;'e'
   229  000E3C  6E                 	db	110	;'n'
   230  000E3D  00                 	db	0
   231  000E3E  45                 	db	69	;'E'
   232  000E3F  72                 	db	114	;'r'
   233  000E40  72                 	db	114	;'r'
   234  000E41  6F                 	db	111	;'o'
   235  000E42  72                 	db	114	;'r'
   236  000E43  00                 	db	0
   237  000E44  42                 	db	66	;'B'
   238  000E45  6C                 	db	108	;'l'
   239  000E46  75                 	db	117	;'u'
   240  000E47  65                 	db	101	;'e'
   241  000E48  00                 	db	0
   242  000E49  50                 	db	80	;'P'
   243  000E4A  69                 	db	105	;'i'
   244  000E4B  6E                 	db	110	;'n'
   245  000E4C  6B                 	db	107	;'k'
   246  000E4D  00                 	db	0
   247  000E4E  52                 	db	82	;'R'
   248  000E4F  65                 	db	101	;'e'
   249  000E50  64                 	db	100	;'d'
   250  000E51  00                 	db	0
   251  000E52  00                 	db	0	; dummy byte at the end
   252  0000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256  003E22                     __pcinit:
   257                           	callstack 0
   258  003E22                     start_initialization:
   259                           	callstack 0
   260  003E22                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK0 (1 bytes)
   264                           ; load TBLPTR registers with __pidataBANK0
   265  003E22  0E8C               	movlw	low __pidataBANK0
   266  003E24  6EF6               	movwf	tblptrl,c
   267  003E26  0E40               	movlw	high __pidataBANK0
   268  003E28  6EF7               	movwf	tblptrh,c
   269  003E2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   270  003E2C  6EF8               	movwf	tblptru,c
   271  003E2E  0009               	tblrd		*+	;fetch initializer
   272  003E30  CFF5 F0FA          	movff	tablat,__pdataBANK0
   273                           
   274                           ; Clear objects allocated to BANK1 (123 bytes)
   275  003E34  EE01  F000         	lfsr	0,__pbssBANK1
   276  003E38  0E7B               	movlw	123
   277  003E3A                     clear_0:
   278  003E3A  6AEE               	clrf	postinc0,c
   279  003E3C  06E8               	decf	wreg,f,c
   280  003E3E  E1FD               	bnz	clear_0
   281                           
   282                           ; Clear objects allocated to BANK0 (26 bytes)
   283  003E40  EE00  F0E0         	lfsr	0,__pbssBANK0
   284  003E44  0E1A               	movlw	26
   285  003E46                     clear_1:
   286  003E46  6AEE               	clrf	postinc0,c
   287  003E48  06E8               	decf	wreg,f,c
   288  003E4A  E1FD               	bnz	clear_1
   289  003E4C                     end_of_initialization:
   290                           	callstack 0
   291  003E4C                     __end_of__initialization:
   292                           	callstack 0
   293  003E4C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   294  003E4E  6EF8               	movwf	tblptru,c
   295  003E50  0E0E               	movlw	high __Lsmallconst
   296  003E52  6EF7               	movwf	tblptrh,c
   297  003E54  0100               	movlb	0
   298  003E56  EFA2  F01B         	goto	_main	;jump to C main() function
   299                           
   300                           	psect	bssBANK0
   301  0000E0                     __pbssBANK0:
   302                           	callstack 0
   303  0000E0                     _motorL:
   304                           	callstack 0
   305  0000E0                     	ds	10
   306  0000EA                     roundf@F527:
   307                           	callstack 0
   308  0000EA                     	ds	4
   309  0000EE                     _nout:
   310                           	callstack 0
   311  0000EE                     	ds	2
   312  0000F0                     _width:
   313                           	callstack 0
   314  0000F0                     	ds	2
   315  0000F2                     _prec:
   316                           	callstack 0
   317  0000F2                     	ds	2
   318  0000F4                     _flags:
   319                           	callstack 0
   320  0000F4                     	ds	2
   321  0000F6                     _TxBufReadCnt:
   322                           	callstack 0
   323  0000F6                     	ds	1
   324  0000F7                     _TxBufWriteCnt:
   325                           	callstack 0
   326  0000F7                     	ds	1
   327  0000F8                     _RxBufReadCnt:
   328                           	callstack 0
   329  0000F8                     	ds	1
   330  0000F9                     _RxBufWriteCnt:
   331                           	callstack 0
   332  0000F9                     	ds	1
   333                           
   334                           	psect	dataBANK0
   335  0000FA                     __pdataBANK0:
   336                           	callstack 0
   337  0000FA                     _SENSITIVITY:
   338                           	callstack 0
   339  0000FA                     	ds	1
   340                           
   341                           	psect	bssBANK1
   342  000100                     __pbssBANK1:
   343                           	callstack 0
   344  000100                     _EUSART4TXbuf:
   345                           	callstack 0
   346  000100                     	ds	60
   347  00013C                     _EUSART4RXbuf:
   348                           	callstack 0
   349  00013C                     	ds	20
   350  000150                     _motorR:
   351                           	callstack 0
   352  000150                     	ds	10
   353  00015A                     _color:
   354                           	callstack 0
   355  00015A                     	ds	1
   356  00015B                     _dbuf:
   357                           	callstack 0
   358  00015B                     	ds	32
   359                           
   360                           	psect	cstackBANK1
   361  00017B                     __pcstackBANK1:
   362                           	callstack 0
   363  00017B                     main@motorL:
   364                           	callstack 0
   365                           
   366                           ; 10 bytes @ 0x0
   367  00017B                     	ds	10
   368  000185                     main@motorR:
   369                           	callstack 0
   370                           
   371                           ; 10 bytes @ 0xA
   372  000185                     	ds	10
   373  00018F                     main@white:
   374                           	callstack 0
   375                           
   376                           ; 18 bytes @ 0x14
   377  00018F                     	ds	18
   378  0001A1                     main@rgb:
   379                           	callstack 0
   380                           
   381                           ; 8 bytes @ 0x26
   382  0001A1                     	ds	8
   383                           
   384                           	psect	cstackBANK0
   385  000060                     __pcstackBANK0:
   386                           	callstack 0
   387  000060                     ??___fltol:
   388  000060                     ?_sprintf:
   389                           	callstack 0
   390  000060                     sprintf@s:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x0
   394  000060                     	ds	2
   395  000062                     sprintf@fmt:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x2
   399  000062                     	ds	2
   400  000064                     ___fltol@sign1:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x4
   404  000064                     	ds	1
   405  000065                     ___fltol@exp1:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x5
   409  000065                     	ds	1
   410  000066                     ?_lroundf:
   411                           	callstack 0
   412  000066                     lroundf@x:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x6
   416  000066                     	ds	4
   417  00006A                     compare@lower:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0xA
   421  00006A                     	ds	2
   422  00006C                     compare@value2compare:
   423                           	callstack 0
   424  00006C                     sprintf@ap:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xC
   428  00006C                     	ds	2
   429  00006E                     compare@upper:
   430                           	callstack 0
   431  00006E                     sprintf@f:
   432                           	callstack 0
   433                           
   434                           ; 11 bytes @ 0xE
   435  00006E                     	ds	2
   436  000070                     detect_color@m:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x10
   440  000070                     	ds	2
   441  000072                     detect_color@w:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x12
   445  000072                     	ds	2
   446  000074                     ??_detect_color:
   447                           
   448                           ; 1 bytes @ 0x14
   449  000074                     	ds	4
   450  000078                     detect_color@RG:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x18
   454  000078                     	ds	1
   455  000079                     color_display@buf:
   456                           	callstack 0
   457  000079                     color_predict@buf:
   458                           	callstack 0
   459                           
   460                           ; 100 bytes @ 0x19
   461  000079                     	ds	1
   462  00007A                     detect_color@RB:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1A
   466  00007A                     	ds	2
   467  00007C                     detect_color@GR:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1C
   471  00007C                     	ds	2
   472  00007E                     detect_color@GB:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x1E
   476  00007E                     	ds	2
   477  000080                     detect_color@GG:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x20
   481  000080                     	ds	2
   482  000082                     detect_color@RR:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x22
   486  000082                     	ds	2
   487  000084                     detect_color@BB:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x24
   491  000084                     	ds	2
   492  000086                     detect_color@color:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x26
   496  000086                     	ds	1
   497  000087                     detect_color@BR:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x27
   501  000087                     	ds	2
   502  000089                     detect_color@BG:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x29
   506  000089                     	ds	2
   507  00008B                     _detect_color$2684:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x2B
   511  00008B                     	ds	82
   512  0000DD                     color_predict@color:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x7D
   516  0000DD                     	ds	1
   517  0000DE                     ??_main:
   518                           
   519                           ; 1 bytes @ 0x7E
   520  0000DE                     	ds	2
   521                           
   522                           	psect	cstackCOMRAM
   523  000001                     __pcstackCOMRAM:
   524                           	callstack 0
   525  000001                     ??_LED_R:
   526  000001                     ??_LED_C:
   527  000001                     ??_LED_B:
   528  000001                     ??_LED_G:
   529  000001                     ??_I2C_2_Master_Idle:
   530  000001                     ?_strlen:
   531                           	callstack 0
   532  000001                     ?___fladd:
   533                           	callstack 0
   534  000001                     ?___flneg:
   535                           	callstack 0
   536  000001                     ?___xxtofl:
   537                           	callstack 0
   538  000001                     ?___aodiv:
   539                           	callstack 0
   540  000001                     ?___aomod:
   541                           	callstack 0
   542  000001                     sendCharSerial4@charToSend:
   543                           	callstack 0
   544  000001                     initDCmotorsPWM@PWMperiod:
   545                           	callstack 0
   546  000001                     initDCmotors_parameter@motorL:
   547                           	callstack 0
   548  000001                     fputc@c:
   549                           	callstack 0
   550  000001                     strlen@s:
   551                           	callstack 0
   552  000001                     ___flge@ff1:
   553                           	callstack 0
   554  000001                     ___flneg@f1:
   555                           	callstack 0
   556  000001                     ___fladd@b:
   557                           	callstack 0
   558  000001                     ___xxtofl@val:
   559                           	callstack 0
   560  000001                     ___aodiv@dividend:
   561                           	callstack 0
   562  000001                     ___aomod@dividend:
   563                           	callstack 0
   564                           
   565                           ; 8 bytes @ 0x0
   566  000001                     	ds	1
   567  000002                     ??_I2C_2_Master_Read:
   568  000002                     I2C_2_Master_Write@data_byte:
   569                           	callstack 0
   570  000002                     sendStringSerial4@string:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x1
   574  000002                     	ds	1
   575  000003                     color_writetoaddr@value:
   576                           	callstack 0
   577  000003                     I2C_2_Master_Read@ack:
   578                           	callstack 0
   579  000003                     initDCmotors_parameter@motorR:
   580                           	callstack 0
   581  000003                     fputc@fp:
   582                           	callstack 0
   583  000003                     strlen@a:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  000003                     	ds	1
   588  000004                     color_writetoaddr@address:
   589                           	callstack 0
   590  000004                     I2C_2_Master_Read@tmp:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x3
   594  000004                     	ds	1
   595  000005                     ??_fputc:
   596  000005                     ??_color_click_init:
   597  000005                     ??___xxtofl:
   598  000005                     ?_color_read_Red:
   599                           	callstack 0
   600  000005                     ?_color_read_Blue:
   601                           	callstack 0
   602  000005                     ?_color_read_Green:
   603                           	callstack 0
   604  000005                     ?_color_read_Clear:
   605                           	callstack 0
   606  000005                     ___flge@ff2:
   607                           	callstack 0
   608  000005                     ___fladd@a:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x4
   612  000005                     	ds	2
   613  000007                     ??_color_read_Red:
   614  000007                     ??_color_read_Blue:
   615  000007                     ??_color_read_Green:
   616  000007                     ??_color_read_Clear:
   617                           
   618                           ; 1 bytes @ 0x6
   619  000007                     	ds	2
   620  000009                     ??___fladd:
   621  000009                     ??___flge:
   622  000009                     ___xxtofl@sign:
   623                           	callstack 0
   624  000009                     ___aodiv@divisor:
   625                           	callstack 0
   626  000009                     ___aomod@divisor:
   627                           	callstack 0
   628                           
   629                           ; 8 bytes @ 0x8
   630  000009                     	ds	1
   631  00000A                     ___xxtofl@exp:
   632                           	callstack 0
   633  00000A                     color_read_Red@tmp:
   634                           	callstack 0
   635  00000A                     color_read_Blue@tmp:
   636                           	callstack 0
   637  00000A                     color_read_Green@tmp:
   638                           	callstack 0
   639  00000A                     color_read_Clear@tmp:
   640                           	callstack 0
   641  00000A                     fputs@s:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x9
   645  00000A                     	ds	1
   646  00000B                     ___xxtofl@arg:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0xA
   650  00000B                     	ds	1
   651  00000C                     read_color@m:
   652                           	callstack 0
   653  00000C                     calibrate_white@w:
   654                           	callstack 0
   655  00000C                     fputs@fp:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xB
   659  00000C                     	ds	1
   660  00000D                     ___fladd@signs:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0xC
   664  00000D                     	ds	1
   665  00000E                     ??_calibrate_white:
   666  00000E                     ___fladd@aexp:
   667                           	callstack 0
   668  00000E                     fputs@c:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xD
   672  00000E                     	ds	1
   673  00000F                     ?___fldiv:
   674                           	callstack 0
   675  00000F                     ___fladd@bexp:
   676                           	callstack 0
   677  00000F                     fputs@i:
   678                           	callstack 0
   679  00000F                     ___fldiv@b:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0xE
   683  00000F                     	ds	1
   684  000010                     ___fladd@grs:
   685                           	callstack 0
   686                           
   687                           ; 1 bytes @ 0xF
   688  000010                     	ds	1
   689  000011                     ?_pad:
   690                           	callstack 0
   691  000011                     ?___flsub:
   692                           	callstack 0
   693  000011                     ___aodiv@counter:
   694                           	callstack 0
   695  000011                     ___aomod@counter:
   696                           	callstack 0
   697  000011                     pad@fp:
   698                           	callstack 0
   699  000011                     ___flsub@b:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x10
   703  000011                     	ds	1
   704  000012                     ___aodiv@sign:
   705                           	callstack 0
   706  000012                     ___aomod@sign:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x11
   710  000012                     	ds	1
   711  000013                     ?_abs:
   712                           	callstack 0
   713  000013                     pad@buf:
   714                           	callstack 0
   715  000013                     abs@a:
   716                           	callstack 0
   717  000013                     ___fldiv@a:
   718                           	callstack 0
   719  000013                     ___aodiv@quotient:
   720                           	callstack 0
   721                           
   722                           ; 8 bytes @ 0x12
   723  000013                     	ds	2
   724  000015                     ??_abs:
   725  000015                     pad@p:
   726                           	callstack 0
   727  000015                     ___flsub@a:
   728                           	callstack 0
   729                           
   730                           ; 4 bytes @ 0x14
   731  000015                     	ds	2
   732  000017                     ??___fldiv:
   733  000017                     ??_pad:
   734                           
   735                           ; 1 bytes @ 0x16
   736  000017                     	ds	1
   737  000018                     pad@i:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x17
   741  000018                     	ds	1
   742  000019                     
   743                           ; 1 bytes @ 0x18
   744  000019                     	ds	1
   745  00001A                     pad@w:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x19
   749  00001A                     	ds	1
   750  00001B                     ___fldiv@rem:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x1A
   754  00001B                     	ds	1
   755  00001C                     ?_dtoa:
   756                           	callstack 0
   757  00001C                     dtoa@fp:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x1B
   761  00001C                     	ds	2
   762  00001E                     dtoa@d:
   763                           	callstack 0
   764                           
   765                           ; 8 bytes @ 0x1D
   766  00001E                     	ds	1
   767  00001F                     ___fldiv@sign:
   768                           	callstack 0
   769                           
   770                           ; 1 bytes @ 0x1E
   771  00001F                     	ds	1
   772  000020                     ___fldiv@new_exp:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x1F
   776  000020                     	ds	2
   777  000022                     ___fldiv@grs:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x21
   781  000022                     	ds	4
   782  000026                     ??_dtoa:
   783  000026                     ___fldiv@bexp:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x25
   787  000026                     	ds	1
   788  000027                     ___fldiv@aexp:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x26
   792  000027                     	ds	1
   793  000028                     ?___flmul:
   794                           	callstack 0
   795  000028                     ___flmul@b:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x27
   799  000028                     	ds	4
   800  00002C                     ___flmul@a:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x2B
   804  00002C                     	ds	2
   805  00002E                     _dtoa$2328:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x2D
   809  00002E                     	ds	2
   810  000030                     ??___flmul:
   811  000030                     dtoa@p:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2F
   815  000030                     	ds	2
   816  000032                     dtoa@w:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x31
   820  000032                     	ds	2
   821  000034                     ___flmul@sign:
   822                           	callstack 0
   823  000034                     dtoa@s:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x33
   827  000034                     	ds	1
   828  000035                     ___flmul@grs:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x34
   832  000035                     	ds	1
   833  000036                     dtoa@n:
   834                           	callstack 0
   835                           
   836                           ; 8 bytes @ 0x35
   837  000036                     	ds	3
   838  000039                     ___flmul@aexp:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x38
   842  000039                     	ds	1
   843  00003A                     ___flmul@bexp:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x39
   847  00003A                     	ds	1
   848  00003B                     ___flmul@prod:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x3A
   852  00003B                     	ds	3
   853  00003E                     dtoa@i:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x3D
   857  00003E                     	ds	1
   858  00003F                     ___flmul@temp:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3E
   862  00003F                     	ds	1
   863  000040                     ?_vfpfcnvrt:
   864                           	callstack 0
   865  000040                     vfpfcnvrt@fp:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x3F
   869  000040                     	ds	1
   870  000041                     ?_roundf:
   871                           	callstack 0
   872  000041                     roundf@x:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x40
   876  000041                     	ds	1
   877  000042                     vfpfcnvrt@fmt:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x41
   881  000042                     	ds	2
   882  000044                     vfpfcnvrt@ap:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x43
   886  000044                     	ds	1
   887  000045                     ??_roundf:
   888                           
   889                           ; 1 bytes @ 0x44
   890  000045                     	ds	1
   891  000046                     ??_vfpfcnvrt:
   892                           
   893                           ; 1 bytes @ 0x45
   894  000046                     	ds	2
   895  000048                     vfpfcnvrt@ll:
   896                           	callstack 0
   897                           
   898                           ; 8 bytes @ 0x47
   899  000048                     	ds	1
   900  000049                     _roundf$2686:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x48
   904  000049                     	ds	4
   905  00004D                     roundf@e:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x4C
   909  00004D                     	ds	2
   910  00004F                     _roundf$2685:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x4E
   914  00004F                     	ds	1
   915  000050                     ?_vfprintf:
   916                           	callstack 0
   917  000050                     vfprintf@fp:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x4F
   921  000050                     	ds	2
   922  000052                     vfprintf@fmt:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x51
   926  000052                     	ds	1
   927  000053                     roundf@u:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x52
   931  000053                     	ds	1
   932  000054                     vfprintf@ap:
   933                           	callstack 0
   934                           
   935                           ; 2 bytes @ 0x53
   936  000054                     	ds	2
   937  000056                     vfprintf@cfmt:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0x55
   941  000056                     	ds	1
   942  000057                     roundf@y:
   943                           	callstack 0
   944                           
   945                           ; 4 bytes @ 0x56
   946  000057                     	ds	1
   947  000058                     color_display@m:
   948                           	callstack 0
   949                           
   950                           ; 2 bytes @ 0x57
   951  000058                     	ds	2
   952  00005A                     
   953                           ; 1 bytes @ 0x59
   954  00005A                     	ds	1
   955  00005B                     ?___fltol:
   956                           	callstack 0
   957  00005B                     ___fltol@f1:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x5A
   961  00005B                     	ds	4
   962  00005F                     compare@result:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0x5E
   966  00005F                     	ds	1
   967                           
   968 ;;
   969 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   970 ;;
   971 ;; *************** function _main *****************
   972 ;; Defined at:
   973 ;;		line 30 in file "main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;  white          18   20[BANK1 ] struct white_card
   978 ;;  motorR         10   10[BANK1 ] struct DC_motor
   979 ;;  motorL         10    0[BANK1 ] struct DC_motor
   980 ;;  rgb             8   38[BANK1 ] struct color_rgb
   981 ;;  x               2    0        int 
   982 ;;  k               2    0        int 
   983 ;;  j               2    0        int 
   984 ;;  i               2    0        int 
   985 ;;  complete        1    0        unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   996 ;;      Locals:         0       0      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   998 ;;      Totals:         0       2      46       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;Total ram usage:       48 bytes
  1000 ;; Hardware stack levels required when called: 9
  1001 ;; This function calls:
  1002 ;;		_I2C_2_Master_Init
  1003 ;;		_LED_B
  1004 ;;		_LED_C
  1005 ;;		_LED_G
  1006 ;;		_LED_R
  1007 ;;		_calibrate_white
  1008 ;;		_calibration_init
  1009 ;;		_color_click_init
  1010 ;;		_color_display
  1011 ;;		_color_predict
  1012 ;;		_detect_color
  1013 ;;		_initDCmotorsPWM
  1014 ;;		_initDCmotors_parameter
  1015 ;;		_initUSART4
  1016 ;;		_read_color
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text0
  1023  003744                     __ptext0:
  1024                           	callstack 0
  1025  003744                     _main:
  1026                           	callstack 22
  1027  003744                     
  1028                           ;main.c: 31:     I2C_2_Master_Init();
  1029  003744  EC96  F01F         	call	_I2C_2_Master_Init	;wreg free
  1030  003748                     
  1031                           ;main.c: 32:     color_click_init();
  1032  003748  EC64  F01F         	call	_color_click_init	;wreg free
  1033  00374C                     
  1034                           ;main.c: 33:     initDCmotorsPWM(199);
  1035  00374C  0E00               	movlw	0
  1036  00374E  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1037  003750  0EC7               	movlw	199
  1038  003752  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1039  003754  EC75  F01E         	call	_initDCmotorsPWM	;wreg free
  1040  003758                     
  1041                           ;main.c: 35:     initUSART4();
  1042  003758  EC0F  F020         	call	_initUSART4	;wreg free
  1043  00375C                     
  1044                           ;main.c: 37:     struct color_rgb rgb;;main.c: 38:     struct white_card white;;main.c: 
      +                          42:     struct DC_motor motorL, motorR;;main.c: 44:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1045  00375C  0E7B               	movlw	low main@motorL
  1046  00375E  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1047  003760  0E01               	movlw	high main@motorL
  1048  003762  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1049  003764  0E85               	movlw	low main@motorR
  1050  003766  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1051  003768  0E01               	movlw	high main@motorR
  1052  00376A  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1053  00376C  EC39  F01B         	call	_initDCmotors_parameter	;wreg free
  1054  003770                     
  1055                           ;main.c: 45:     calibration_init();
  1056  003770  EC2A  F020         	call	_calibration_init	;wreg free
  1057  003774                     
  1058                           ;main.c: 47:     TRISFbits.TRISF6 = 0;
  1059  003774  9C86               	bcf	134,6,c	;volatile
  1060  003776                     
  1061                           ;main.c: 48:     LATFbits.LATF6 = 0;
  1062  003776  9C7E               	bcf	126,6,c	;volatile
  1063  003778                     
  1064                           ;main.c: 50:     TRISGbits.TRISG1 = 0;
  1065  003778  9287               	bcf	135,1,c	;volatile
  1066  00377A                     
  1067                           ;main.c: 51:     TRISFbits.TRISF7 = 0;
  1068  00377A  9E86               	bcf	134,7,c	;volatile
  1069  00377C                     
  1070                           ;main.c: 52:     TRISAbits.TRISA4 = 0;
  1071  00377C  9881               	bcf	129,4,c	;volatile
  1072  00377E                     
  1073                           ;main.c: 53:     LATGbits.LATG1 = 1;
  1074  00377E  827F               	bsf	127,1,c	;volatile
  1075  003780                     
  1076                           ;main.c: 54:     LATFbits.LATF7 = 1;
  1077  003780  8E7E               	bsf	126,7,c	;volatile
  1078  003782                     
  1079                           ;main.c: 55:     LATAbits.LATA4 = 1;
  1080  003782  8879               	bsf	121,4,c	;volatile
  1081  003784                     
  1082                           ;main.c: 63:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1083  003784  0EF4               	movlw	244
  1084  003786  0100               	movlb	0	; () banked
  1085  003788  6FDF               	movwf	(??_main+1)& (0+255),b
  1086  00378A  0E82               	movlw	130
  1087  00378C  6FDE               	movwf	??_main& (0+255),b
  1088  00378E  0E05               	movlw	5
  1089  003790                     u4217:
  1090  003790  2EE8               	decfsz	wreg,f,c
  1091  003792  D7FE               	bra	u4217
  1092  003794  2FDE               	decfsz	??_main& (0+255),f,b
  1093  003796  D7FC               	bra	u4217
  1094  003798  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1095  00379A  D7FA               	bra	u4217
  1096  00379C                     
  1097                           ;main.c: 64:     calibrate_white(&white);
  1098  00379C  0E8F               	movlw	low main@white
  1099  00379E  6E0C               	movwf	calibrate_white@w^0,c
  1100  0037A0  0E01               	movlw	high main@white
  1101  0037A2  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1102  0037A4  EC2F  F019         	call	_calibrate_white	;wreg free
  1103  0037A8                     
  1104                           ;main.c: 65:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1105  0037A8  0EF4               	movlw	244
  1106  0037AA  0100               	movlb	0	; () banked
  1107  0037AC  6FDF               	movwf	(??_main+1)& (0+255),b
  1108  0037AE  0E82               	movlw	130
  1109  0037B0  6FDE               	movwf	??_main& (0+255),b
  1110  0037B2  0E05               	movlw	5
  1111  0037B4                     u4227:
  1112  0037B4  2EE8               	decfsz	wreg,f,c
  1113  0037B6  D7FE               	bra	u4227
  1114  0037B8  2FDE               	decfsz	??_main& (0+255),f,b
  1115  0037BA  D7FC               	bra	u4227
  1116  0037BC  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1117  0037BE  D7FA               	bra	u4227
  1118  0037C0                     l4322:
  1119                           
  1120                           ;main.c: 71:             color = detect_color(&rgb, &white);
  1121  0037C0  0EA1               	movlw	low main@rgb
  1122  0037C2  0100               	movlb	0	; () banked
  1123  0037C4  6F70               	movwf	detect_color@m& (0+255),b
  1124  0037C6  0E01               	movlw	high main@rgb
  1125  0037C8  6F71               	movwf	(detect_color@m+1)& (0+255),b
  1126  0037CA  0E8F               	movlw	low main@white
  1127  0037CC  6F72               	movwf	detect_color@w& (0+255),b
  1128  0037CE  0E01               	movlw	high main@white
  1129  0037D0  6F73               	movwf	(detect_color@w+1)& (0+255),b
  1130  0037D2  EC2A  F007         	call	_detect_color	;wreg free
  1131  0037D6  0101               	movlb	1	; () banked
  1132  0037D8  6F5A               	movwf	_color& (0+255),b
  1133  0037DA                     
  1134                           ; BSR set to: 1
  1135                           ;main.c: 73:             read_color(&rgb);
  1136  0037DA  0EA1               	movlw	low main@rgb
  1137  0037DC  6E0C               	movwf	read_color@m^0,c
  1138  0037DE  0E01               	movlw	high main@rgb
  1139  0037E0  6E0D               	movwf	(read_color@m+1)^0,c
  1140  0037E2  EC38  F01D         	call	_read_color	;wreg free
  1141  0037E6                     
  1142                           ;main.c: 75:             color_predict(color);
  1143  0037E6  0101               	movlb	1	; () banked
  1144  0037E8  515A               	movf	_color& (0+255),w,b
  1145  0037EA  ECCA  F01A         	call	_color_predict
  1146  0037EE                     
  1147                           ;main.c: 76:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1148  0037EE  0E11               	movlw	17
  1149  0037F0  0100               	movlb	0	; () banked
  1150  0037F2  6FDF               	movwf	(??_main+1)& (0+255),b
  1151  0037F4  0E3C               	movlw	60
  1152  0037F6  6FDE               	movwf	??_main& (0+255),b
  1153  0037F8  0ECB               	movlw	203
  1154  0037FA                     u4237:
  1155  0037FA  2EE8               	decfsz	wreg,f,c
  1156  0037FC  D7FE               	bra	u4237
  1157  0037FE  2FDE               	decfsz	??_main& (0+255),f,b
  1158  003800  D7FC               	bra	u4237
  1159  003802  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1160  003804  D7FA               	bra	u4237
  1161  003806  EFE0  F01B         	goto	l4322
  1162  00380A  EF00  F000         	goto	start
  1163  00380E                     __end_of_main:
  1164                           	callstack 0
  1165                           
  1166 ;; *************** function _initUSART4 *****************
  1167 ;; Defined at:
  1168 ;;		line 4 in file "serial.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text1
  1196  00401E                     __ptext1:
  1197                           	callstack 0
  1198  00401E                     _initUSART4:
  1199                           	callstack 30
  1200  00401E                     
  1201                           ;serial.c: 8:     RC0PPS = 0x12;
  1202  00401E  0E12               	movlw	18
  1203  004020  010E               	movlb	14	; () banked
  1204  004022  6F62               	movwf	98,b	;volatile
  1205                           
  1206                           ;serial.c: 9:     RX4PPS = 0x11;
  1207  004024  0E11               	movlw	17
  1208  004026  6F15               	movwf	21,b	;volatile
  1209  004028                     
  1210                           ; BSR set to: 14
  1211                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1212  004028  97E9               	bcf	233,3,b	;volatile
  1213  00402A                     
  1214                           ; BSR set to: 14
  1215                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1216  00402A  95E8               	bcf	232,2,b	;volatile
  1217                           
  1218                           ;serial.c: 13:     SP4BRGL = 51;
  1219  00402C  0E33               	movlw	51
  1220  00402E  6FE5               	movwf	229,b	;volatile
  1221                           
  1222                           ;serial.c: 15:     SP4BRGH = 0;
  1223  004030  0E00               	movlw	0
  1224  004032  6FE6               	movwf	230,b	;volatile
  1225  004034                     
  1226                           ; BSR set to: 14
  1227                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1228  004034  89E7               	bsf	231,4,b	;volatile
  1229  004036                     
  1230                           ; BSR set to: 14
  1231                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1232  004036  8BE8               	bsf	232,5,b	;volatile
  1233  004038                     
  1234                           ; BSR set to: 14
  1235                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1236  004038  8FE7               	bsf	231,7,b	;volatile
  1237  00403A                     
  1238                           ; BSR set to: 14
  1239  00403A  0012               	return		;funcret
  1240  00403C                     __end_of_initUSART4:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _initDCmotors_parameter *****************
  1244 ;; Defined at:
  1245 ;;		line 41 in file "dc_motor.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1248 ;;		 -> main@motorL(10), 
  1249 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1250 ;;		 -> main@motorR(10), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;Total ram usage:        4 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text2
  1276  003672                     __ptext2:
  1277                           	callstack 0
  1278  003672                     _initDCmotors_parameter:
  1279                           	callstack 30
  1280  003672                     
  1281                           ;dc_motor.c: 43:     motorL->power = 0;
  1282  003672  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1283  003676  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1284  00367A  0E00               	movlw	0
  1285  00367C  6EDF               	movwf	indf2,c
  1286  00367E                     
  1287                           ;dc_motor.c: 44:     motorL->direction = 1;
  1288  00367E  EE20 F001          	lfsr	2,1
  1289  003682  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1290  003684  26D9               	addwf	fsr2l,f,c
  1291  003686  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1292  003688  22DA               	addwfc	fsr2h,f,c
  1293  00368A  0E01               	movlw	1
  1294  00368C  6EDF               	movwf	indf2,c
  1295  00368E                     
  1296                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1297  00368E  EE20 F002          	lfsr	2,2
  1298  003692  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1299  003694  26D9               	addwf	fsr2l,f,c
  1300  003696  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1301  003698  22DA               	addwfc	fsr2h,f,c
  1302  00369A  0EA3               	movlw	163
  1303  00369C  6EDE               	movwf	postinc2,c
  1304  00369E  0E0F               	movlw	15
  1305  0036A0  6EDD               	movwf	postdec2,c
  1306  0036A2                     
  1307                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1308  0036A2  EE20 F004          	lfsr	2,4
  1309  0036A6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1310  0036A8  26D9               	addwf	fsr2l,f,c
  1311  0036AA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1312  0036AC  22DA               	addwfc	fsr2h,f,c
  1313  0036AE  0E7D               	movlw	125
  1314  0036B0  6EDE               	movwf	postinc2,c
  1315  0036B2  0E0F               	movlw	15
  1316  0036B4  6EDD               	movwf	postdec2,c
  1317  0036B6                     
  1318                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
  1319  0036B6  EE20 F006          	lfsr	2,6
  1320  0036BA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1321  0036BC  26D9               	addwf	fsr2l,f,c
  1322  0036BE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1323  0036C0  22DA               	addwfc	fsr2h,f,c
  1324  0036C2  0E04               	movlw	4
  1325  0036C4  6EDF               	movwf	indf2,c
  1326  0036C6                     
  1327                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
  1328  0036C6  EE20 F007          	lfsr	2,7
  1329  0036CA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1330  0036CC  26D9               	addwf	fsr2l,f,c
  1331  0036CE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1332  0036D0  22DA               	addwfc	fsr2h,f,c
  1333  0036D2  0EC7               	movlw	199
  1334  0036D4  6EDE               	movwf	postinc2,c
  1335  0036D6  0E00               	movlw	0
  1336  0036D8  6EDD               	movwf	postdec2,c
  1337  0036DA                     
  1338                           ;dc_motor.c: 51:     motorR->power = 0;
  1339  0036DA  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1340  0036DE  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1341  0036E2  0E00               	movlw	0
  1342  0036E4  6EDF               	movwf	indf2,c
  1343                           
  1344                           ;dc_motor.c: 52:     motorR->direction = 1;
  1345  0036E6  EE20 F001          	lfsr	2,1
  1346  0036EA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1347  0036EC  26D9               	addwf	fsr2l,f,c
  1348  0036EE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1349  0036F0  22DA               	addwfc	fsr2h,f,c
  1350  0036F2  0E01               	movlw	1
  1351  0036F4  6EDF               	movwf	indf2,c
  1352                           
  1353                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1354  0036F6  EE20 F002          	lfsr	2,2
  1355  0036FA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1356  0036FC  26D9               	addwf	fsr2l,f,c
  1357  0036FE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1358  003700  22DA               	addwfc	fsr2h,f,c
  1359  003702  0EA0               	movlw	160
  1360  003704  6EDE               	movwf	postinc2,c
  1361  003706  0E0F               	movlw	15
  1362  003708  6EDD               	movwf	postdec2,c
  1363                           
  1364                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1365  00370A  EE20 F004          	lfsr	2,4
  1366  00370E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1367  003710  26D9               	addwf	fsr2l,f,c
  1368  003712  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1369  003714  22DA               	addwfc	fsr2h,f,c
  1370  003716  0E7F               	movlw	127
  1371  003718  6EDE               	movwf	postinc2,c
  1372  00371A  0E0F               	movlw	15
  1373  00371C  6EDD               	movwf	postdec2,c
  1374                           
  1375                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
  1376  00371E  EE20 F006          	lfsr	2,6
  1377  003722  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1378  003724  26D9               	addwf	fsr2l,f,c
  1379  003726  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1380  003728  22DA               	addwfc	fsr2h,f,c
  1381  00372A  0E06               	movlw	6
  1382  00372C  6EDF               	movwf	indf2,c
  1383                           
  1384                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
  1385  00372E  EE20 F007          	lfsr	2,7
  1386  003732  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1387  003734  26D9               	addwf	fsr2l,f,c
  1388  003736  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1389  003738  22DA               	addwfc	fsr2h,f,c
  1390  00373A  0EC7               	movlw	199
  1391  00373C  6EDE               	movwf	postinc2,c
  1392  00373E  0E00               	movlw	0
  1393  003740  6EDD               	movwf	postdec2,c
  1394  003742  0012               	return		;funcret
  1395  003744                     __end_of_initDCmotors_parameter:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function _initDCmotorsPWM *****************
  1399 ;; Defined at:
  1400 ;;		line 11 in file "dc_motor.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  PWMperiod       2    0[COMRAM] int 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;Total ram usage:        2 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text3
  1428  003CEA                     __ptext3:
  1429                           	callstack 0
  1430  003CEA                     _initDCmotorsPWM:
  1431                           	callstack 30
  1432  003CEA                     
  1433                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
  1434  003CEA  9485               	bcf	133,2,c	;volatile
  1435                           
  1436                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  1437  003CEC  9E83               	bcf	131,7,c	;volatile
  1438                           
  1439                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1440  003CEE  9C87               	bcf	135,6,c	;volatile
  1441                           
  1442                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  1443  003CF0  9885               	bcf	133,4,c	;volatile
  1444                           
  1445                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1446  003CF2  947D               	bcf	125,2,c	;volatile
  1447                           
  1448                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1449  003CF4  9E7B               	bcf	123,7,c	;volatile
  1450                           
  1451                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
  1452  003CF6  9C7F               	bcf	127,6,c	;volatile
  1453                           
  1454                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  1455  003CF8  987D               	bcf	125,4,c	;volatile
  1456  003CFA                     
  1457                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  1458  003CFA  50BD               	movf	189,w,c	;volatile
  1459  003CFC  0B8F               	andlw	-113
  1460  003CFE  0930               	iorlw	48
  1461  003D00  6EBD               	movwf	189,c	;volatile
  1462                           
  1463                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1464  003D02  0EE0               	movlw	-32
  1465  003D04  16BE               	andwf	190,f,c	;volatile
  1466                           
  1467                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1468  003D06  50BF               	movf	191,w,c	;volatile
  1469  003D08  0BF0               	andlw	-16
  1470  003D0A  0901               	iorlw	1
  1471  003D0C  6EBF               	movwf	191,c	;volatile
  1472                           
  1473                           ;dc_motor.c: 29:     T2PR=200-1;
  1474  003D0E  0EC7               	movlw	199
  1475  003D10  6EBC               	movwf	188,c	;volatile
  1476  003D12                     
  1477                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1478  003D12  8EBD               	bsf	189,7,c	;volatile
  1479                           
  1480                           ;dc_motor.c: 32:     RE2PPS=0x0A;
  1481  003D14  0E0A               	movlw	10
  1482  003D16  010E               	movlb	14	; () banked
  1483  003D18  6F74               	movwf	116,b	;volatile
  1484                           
  1485                           ;dc_motor.c: 33:     RC7PPS=0x0B;
  1486  003D1A  0E0B               	movlw	11
  1487  003D1C  6F69               	movwf	105,b	;volatile
  1488                           
  1489                           ;dc_motor.c: 35:     PWM6DCH=0;
  1490  003D1E  0E00               	movlw	0
  1491  003D20  6EA3               	movwf	163,c	;volatile
  1492                           
  1493                           ;dc_motor.c: 36:     PWM7DCH=0;
  1494  003D22  0E00               	movlw	0
  1495  003D24  6EA0               	movwf	160,c	;volatile
  1496  003D26                     
  1497                           ; BSR set to: 14
  1498                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
  1499  003D26  8EA4               	bsf	164,7,c	;volatile
  1500  003D28                     
  1501                           ; BSR set to: 14
  1502                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
  1503  003D28  8EA1               	bsf	161,7,c	;volatile
  1504  003D2A                     
  1505                           ; BSR set to: 14
  1506  003D2A  0012               	return		;funcret
  1507  003D2C                     __end_of_initDCmotorsPWM:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _detect_color *****************
  1511 ;; Defined at:
  1512 ;;		line 191 in file "color.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1515 ;;		 -> main@rgb(8), 
  1516 ;;  w               2   18[BANK0 ] PTR struct white_card
  1517 ;;		 -> main@white(18), 
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;  BG              2   41[BANK0 ] unsigned int 
  1520 ;;  BR              2   39[BANK0 ] unsigned int 
  1521 ;;  BB              2   36[BANK0 ] unsigned int 
  1522 ;;  RR              2   34[BANK0 ] unsigned int 
  1523 ;;  GG              2   32[BANK0 ] unsigned int 
  1524 ;;  GB              2   30[BANK0 ] unsigned int 
  1525 ;;  GR              2   28[BANK0 ] unsigned int 
  1526 ;;  RB              2   26[BANK0 ] unsigned int 
  1527 ;;  RG              2   24[BANK0 ] unsigned int 
  1528 ;;  color           1   38[BANK0 ] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      unsigned char 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1539 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1541 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1542 ;;Total ram usage:       31 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 4
  1545 ;; This function calls:
  1546 ;;		_LED_B
  1547 ;;		_LED_G
  1548 ;;		_LED_R
  1549 ;;		___fldiv
  1550 ;;		___flmul
  1551 ;;		___xxtofl
  1552 ;;		_compare
  1553 ;;		_lroundf
  1554 ;;		_read_color
  1555 ;; This function is called by:
  1556 ;;		_main
  1557 ;; This function uses a non-reentrant model
  1558 ;;
  1559                           
  1560                           	psect	text4
  1561  000E54                     __ptext4:
  1562                           	callstack 0
  1563  000E54                     _detect_color:
  1564                           	callstack 26
  1565  000E54  0E00               	movlw	0
  1566  000E56  0100               	movlb	0	; () banked
  1567  000E58  6F79               	movwf	(detect_color@RG+1)& (0+255),b
  1568  000E5A  0E00               	movlw	0
  1569  000E5C  6F78               	movwf	detect_color@RG& (0+255),b
  1570  000E5E  0E00               	movlw	0
  1571  000E60  6F7B               	movwf	(detect_color@RB+1)& (0+255),b
  1572  000E62  0E00               	movlw	0
  1573  000E64  6F7A               	movwf	detect_color@RB& (0+255),b
  1574  000E66  0E00               	movlw	0
  1575  000E68  6F7D               	movwf	(detect_color@GR+1)& (0+255),b
  1576  000E6A  0E00               	movlw	0
  1577  000E6C  6F7C               	movwf	detect_color@GR& (0+255),b
  1578  000E6E  0E00               	movlw	0
  1579  000E70  6F81               	movwf	(detect_color@GG+1)& (0+255),b
  1580  000E72  0E00               	movlw	0
  1581  000E74  6F80               	movwf	detect_color@GG& (0+255),b
  1582  000E76  0E00               	movlw	0
  1583  000E78  6F7F               	movwf	(detect_color@GB+1)& (0+255),b
  1584  000E7A  0E00               	movlw	0
  1585  000E7C  6F7E               	movwf	detect_color@GB& (0+255),b
  1586  000E7E  0E00               	movlw	0
  1587  000E80  6F88               	movwf	(detect_color@BR+1)& (0+255),b
  1588  000E82  0E00               	movlw	0
  1589  000E84  6F87               	movwf	detect_color@BR& (0+255),b
  1590  000E86  0E00               	movlw	0
  1591  000E88  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  1592  000E8A  0E00               	movlw	0
  1593  000E8C  6F89               	movwf	detect_color@BG& (0+255),b
  1594  000E8E  0E00               	movlw	0
  1595  000E90  6F85               	movwf	(detect_color@BB+1)& (0+255),b
  1596  000E92  0E00               	movlw	0
  1597  000E94  6F84               	movwf	detect_color@BB& (0+255),b
  1598                           
  1599                           ;color.c: 196:     unsigned char color = 0;
  1600  000E96  0E00               	movlw	0
  1601  000E98  6F86               	movwf	detect_color@color& (0+255),b
  1602  000E9A                     
  1603                           ; BSR set to: 0
  1604                           ;color.c: 198:     LED_R();
  1605  000E9A  ECCF  F01F         	call	_LED_R	;wreg free
  1606  000E9E                     
  1607                           ;color.c: 199:     read_color(m);
  1608  000E9E  C070  F00C         	movff	detect_color@m,read_color@m
  1609  000EA2  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1610  000EA6  EC38  F01D         	call	_read_color	;wreg free
  1611  000EAA                     
  1612                           ;color.c: 200:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1613  000EAA  C072  FFD9         	movff	detect_color@w,fsr2l
  1614  000EAE  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1615  000EB2  CFDE F074          	movff	postinc2,??_detect_color
  1616  000EB6  CFDD F075          	movff	postdec2,??_detect_color+1
  1617  000EBA  C074  F001         	movff	??_detect_color,___xxtofl@val
  1618  000EBE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1619  000EC2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1620  000EC4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1621  000EC6  0E00               	movlw	0
  1622  000EC8  EC05  F016         	call	___xxtofl
  1623  000ECC  C001  F013         	movff	?___xxtofl,___fldiv@a
  1624  000ED0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1625  000ED4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1626  000ED8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1627  000EDC  C070  FFD9         	movff	detect_color@m,fsr2l
  1628  000EE0  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1629  000EE4  CFDE F076          	movff	postinc2,??_detect_color+2
  1630  000EE8  CFDD F077          	movff	postdec2,??_detect_color+3
  1631  000EEC  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1632  000EF0  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1633  000EF4  6A03               	clrf	(___xxtofl@val+2)^0,c
  1634  000EF6  6A04               	clrf	(___xxtofl@val+3)^0,c
  1635  000EF8  0E00               	movlw	0
  1636  000EFA  EC05  F016         	call	___xxtofl
  1637  000EFE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1638  000F02  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1639  000F06  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1640  000F0A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1641  000F0E  ECC6  F012         	call	___fldiv	;wreg free
  1642  000F12  C00F  F028         	movff	?___fldiv,___flmul@b
  1643  000F16  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1644  000F1A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1645  000F1E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1646  000F22  0E00               	movlw	0
  1647  000F24  6E2C               	movwf	___flmul@a^0,c
  1648  000F26  0E00               	movlw	0
  1649  000F28  6E2D               	movwf	(___flmul@a+1)^0,c
  1650  000F2A  0EC8               	movlw	200
  1651  000F2C  6E2E               	movwf	(___flmul@a+2)^0,c
  1652  000F2E  0E42               	movlw	66
  1653  000F30  6E2F               	movwf	(___flmul@a+3)^0,c
  1654  000F32  ECDA  F00E         	call	___flmul	;wreg free
  1655  000F36  C028  F08B         	movff	?___flmul,_detect_color$2684
  1656  000F3A  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  1657  000F3E  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  1658  000F42  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  1659  000F46                     
  1660                           ;color.c: 200:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1661  000F46  C08B  F066         	movff	_detect_color$2684,lroundf@x
  1662  000F4A  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  1663  000F4E  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  1664  000F52  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  1665  000F56  ECD7  F01E         	call	_lroundf	;wreg free
  1666  000F5A  C066  F082         	movff	?_lroundf,detect_color@RR
  1667  000F5E  C067  F083         	movff	?_lroundf+1,detect_color@RR+1
  1668  000F62  0100               	movlb	0	; () banked
  1669  000F64  EE20 F002          	lfsr	2,2
  1670  000F68  5172               	movf	detect_color@w& (0+255),w,b
  1671  000F6A  26D9               	addwf	fsr2l,f,c
  1672  000F6C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1673  000F6E  22DA               	addwfc	fsr2h,f,c
  1674  000F70  CFDE F074          	movff	postinc2,??_detect_color
  1675  000F74  CFDD F075          	movff	postdec2,??_detect_color+1
  1676  000F78  C074  F001         	movff	??_detect_color,___xxtofl@val
  1677  000F7C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1678  000F80  6A03               	clrf	(___xxtofl@val+2)^0,c
  1679  000F82  6A04               	clrf	(___xxtofl@val+3)^0,c
  1680  000F84  0E00               	movlw	0
  1681  000F86  EC05  F016         	call	___xxtofl
  1682  000F8A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1683  000F8E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1684  000F92  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1685  000F96  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1686  000F9A  0100               	movlb	0	; () banked
  1687  000F9C  EE20 F002          	lfsr	2,2
  1688  000FA0  5170               	movf	detect_color@m& (0+255),w,b
  1689  000FA2  26D9               	addwf	fsr2l,f,c
  1690  000FA4  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1691  000FA6  22DA               	addwfc	fsr2h,f,c
  1692  000FA8  CFDE F076          	movff	postinc2,??_detect_color+2
  1693  000FAC  CFDD F077          	movff	postdec2,??_detect_color+3
  1694  000FB0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1695  000FB4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1696  000FB8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1697  000FBA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1698  000FBC  0E00               	movlw	0
  1699  000FBE  EC05  F016         	call	___xxtofl
  1700  000FC2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1701  000FC6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1702  000FCA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1703  000FCE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1704  000FD2  ECC6  F012         	call	___fldiv	;wreg free
  1705  000FD6  C00F  F028         	movff	?___fldiv,___flmul@b
  1706  000FDA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1707  000FDE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1708  000FE2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1709  000FE6  0E00               	movlw	0
  1710  000FE8  6E2C               	movwf	___flmul@a^0,c
  1711  000FEA  0E00               	movlw	0
  1712  000FEC  6E2D               	movwf	(___flmul@a+1)^0,c
  1713  000FEE  0EC8               	movlw	200
  1714  000FF0  6E2E               	movwf	(___flmul@a+2)^0,c
  1715  000FF2  0E42               	movlw	66
  1716  000FF4  6E2F               	movwf	(___flmul@a+3)^0,c
  1717  000FF6  ECDA  F00E         	call	___flmul	;wreg free
  1718  000FFA  C028  F08B         	movff	?___flmul,_detect_color$2684
  1719  000FFE  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  1720  001002  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  1721  001006  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  1722  00100A  C08B  F066         	movff	_detect_color$2684,lroundf@x
  1723  00100E  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  1724  001012  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  1725  001016  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  1726  00101A  ECD7  F01E         	call	_lroundf	;wreg free
  1727  00101E  0100               	movlb	0	; () banked
  1728  001020  EE20 F004          	lfsr	2,4
  1729  001024  5172               	movf	detect_color@w& (0+255),w,b
  1730  001026  26D9               	addwf	fsr2l,f,c
  1731  001028  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1732  00102A  22DA               	addwfc	fsr2h,f,c
  1733  00102C  CFDE F074          	movff	postinc2,??_detect_color
  1734  001030  CFDD F075          	movff	postdec2,??_detect_color+1
  1735  001034  C074  F001         	movff	??_detect_color,___xxtofl@val
  1736  001038  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1737  00103C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1738  00103E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1739  001040  0E00               	movlw	0
  1740  001042  EC05  F016         	call	___xxtofl
  1741  001046  C001  F013         	movff	?___xxtofl,___fldiv@a
  1742  00104A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1743  00104E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1744  001052  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1745  001056  0100               	movlb	0	; () banked
  1746  001058  EE20 F004          	lfsr	2,4
  1747  00105C  5170               	movf	detect_color@m& (0+255),w,b
  1748  00105E  26D9               	addwf	fsr2l,f,c
  1749  001060  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1750  001062  22DA               	addwfc	fsr2h,f,c
  1751  001064  CFDE F076          	movff	postinc2,??_detect_color+2
  1752  001068  CFDD F077          	movff	postdec2,??_detect_color+3
  1753  00106C  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1754  001070  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1755  001074  6A03               	clrf	(___xxtofl@val+2)^0,c
  1756  001076  6A04               	clrf	(___xxtofl@val+3)^0,c
  1757  001078  0E00               	movlw	0
  1758  00107A  EC05  F016         	call	___xxtofl
  1759  00107E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1760  001082  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1761  001086  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1762  00108A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1763  00108E  ECC6  F012         	call	___fldiv	;wreg free
  1764  001092  C00F  F028         	movff	?___fldiv,___flmul@b
  1765  001096  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1766  00109A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1767  00109E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1768  0010A2  0E00               	movlw	0
  1769  0010A4  6E2C               	movwf	___flmul@a^0,c
  1770  0010A6  0E00               	movlw	0
  1771  0010A8  6E2D               	movwf	(___flmul@a+1)^0,c
  1772  0010AA  0EC8               	movlw	200
  1773  0010AC  6E2E               	movwf	(___flmul@a+2)^0,c
  1774  0010AE  0E42               	movlw	66
  1775  0010B0  6E2F               	movwf	(___flmul@a+3)^0,c
  1776  0010B2  ECDA  F00E         	call	___flmul	;wreg free
  1777  0010B6  C028  F08B         	movff	?___flmul,_detect_color$2684
  1778  0010BA  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  1779  0010BE  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  1780  0010C2  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  1781  0010C6  C08B  F066         	movff	_detect_color$2684,lroundf@x
  1782  0010CA  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  1783  0010CE  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  1784  0010D2  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  1785  0010D6  ECD7  F01E         	call	_lroundf	;wreg free
  1786  0010DA                     
  1787                           ;color.c: 201:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1788  0010DA  0E05               	movlw	5
  1789  0010DC  0100               	movlb	0	; () banked
  1790  0010DE  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1791  0010E0  0E0F               	movlw	15
  1792  0010E2  6F74               	movwf	??_detect_color& (0+255),b
  1793  0010E4  0EF1               	movlw	241
  1794  0010E6                     u4247:
  1795  0010E6  2EE8               	decfsz	wreg,f,c
  1796  0010E8  D7FE               	bra	u4247
  1797  0010EA  2F74               	decfsz	??_detect_color& (0+255),f,b
  1798  0010EC  D7FC               	bra	u4247
  1799  0010EE  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1800  0010F0  D7FA               	bra	u4247
  1801  0010F2                     
  1802                           ;color.c: 203:     LED_G();
  1803  0010F2  ECDF  F01F         	call	_LED_G	;wreg free
  1804  0010F6                     
  1805                           ;color.c: 204:     read_color(m);
  1806  0010F6  C070  F00C         	movff	detect_color@m,read_color@m
  1807  0010FA  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1808  0010FE  EC38  F01D         	call	_read_color	;wreg free
  1809  001102                     
  1810                           ;color.c: 205:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1811  001102  0100               	movlb	0	; () banked
  1812  001104  EE20 F006          	lfsr	2,6
  1813  001108  5172               	movf	detect_color@w& (0+255),w,b
  1814  00110A  26D9               	addwf	fsr2l,f,c
  1815  00110C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1816  00110E  22DA               	addwfc	fsr2h,f,c
  1817  001110  CFDE F074          	movff	postinc2,??_detect_color
  1818  001114  CFDD F075          	movff	postdec2,??_detect_color+1
  1819  001118  C074  F001         	movff	??_detect_color,___xxtofl@val
  1820  00111C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1821  001120  6A03               	clrf	(___xxtofl@val+2)^0,c
  1822  001122  6A04               	clrf	(___xxtofl@val+3)^0,c
  1823  001124  0E00               	movlw	0
  1824  001126  EC05  F016         	call	___xxtofl
  1825  00112A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1826  00112E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1827  001132  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1828  001136  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1829  00113A  C070  FFD9         	movff	detect_color@m,fsr2l
  1830  00113E  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1831  001142  CFDE F076          	movff	postinc2,??_detect_color+2
  1832  001146  CFDD F077          	movff	postdec2,??_detect_color+3
  1833  00114A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1834  00114E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1835  001152  6A03               	clrf	(___xxtofl@val+2)^0,c
  1836  001154  6A04               	clrf	(___xxtofl@val+3)^0,c
  1837  001156  0E00               	movlw	0
  1838  001158  EC05  F016         	call	___xxtofl
  1839  00115C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1840  001160  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1841  001164  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1842  001168  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1843  00116C  ECC6  F012         	call	___fldiv	;wreg free
  1844  001170  C00F  F028         	movff	?___fldiv,___flmul@b
  1845  001174  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1846  001178  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1847  00117C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1848  001180  0E00               	movlw	0
  1849  001182  6E2C               	movwf	___flmul@a^0,c
  1850  001184  0E00               	movlw	0
  1851  001186  6E2D               	movwf	(___flmul@a+1)^0,c
  1852  001188  0EC8               	movlw	200
  1853  00118A  6E2E               	movwf	(___flmul@a+2)^0,c
  1854  00118C  0E42               	movlw	66
  1855  00118E  6E2F               	movwf	(___flmul@a+3)^0,c
  1856  001190  ECDA  F00E         	call	___flmul	;wreg free
  1857  001194  C028  F08B         	movff	?___flmul,_detect_color$2684
  1858  001198  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  1859  00119C  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  1860  0011A0  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  1861  0011A4  C08B  F066         	movff	_detect_color$2684,lroundf@x
  1862  0011A8  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  1863  0011AC  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  1864  0011B0  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  1865  0011B4  ECD7  F01E         	call	_lroundf	;wreg free
  1866  0011B8  0100               	movlb	0	; () banked
  1867  0011BA  EE20 F008          	lfsr	2,8
  1868  0011BE  5172               	movf	detect_color@w& (0+255),w,b
  1869  0011C0  26D9               	addwf	fsr2l,f,c
  1870  0011C2  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1871  0011C4  22DA               	addwfc	fsr2h,f,c
  1872  0011C6  CFDE F074          	movff	postinc2,??_detect_color
  1873  0011CA  CFDD F075          	movff	postdec2,??_detect_color+1
  1874  0011CE  C074  F001         	movff	??_detect_color,___xxtofl@val
  1875  0011D2  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1876  0011D6  6A03               	clrf	(___xxtofl@val+2)^0,c
  1877  0011D8  6A04               	clrf	(___xxtofl@val+3)^0,c
  1878  0011DA  0E00               	movlw	0
  1879  0011DC  EC05  F016         	call	___xxtofl
  1880  0011E0  C001  F013         	movff	?___xxtofl,___fldiv@a
  1881  0011E4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1882  0011E8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1883  0011EC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1884  0011F0  0100               	movlb	0	; () banked
  1885  0011F2  EE20 F002          	lfsr	2,2
  1886  0011F6  5170               	movf	detect_color@m& (0+255),w,b
  1887  0011F8  26D9               	addwf	fsr2l,f,c
  1888  0011FA  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1889  0011FC  22DA               	addwfc	fsr2h,f,c
  1890  0011FE  CFDE F076          	movff	postinc2,??_detect_color+2
  1891  001202  CFDD F077          	movff	postdec2,??_detect_color+3
  1892  001206  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1893  00120A  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1894  00120E  6A03               	clrf	(___xxtofl@val+2)^0,c
  1895  001210  6A04               	clrf	(___xxtofl@val+3)^0,c
  1896  001212  0E00               	movlw	0
  1897  001214  EC05  F016         	call	___xxtofl
  1898  001218  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1899  00121C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1900  001220  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1901  001224  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1902  001228  ECC6  F012         	call	___fldiv	;wreg free
  1903  00122C  C00F  F028         	movff	?___fldiv,___flmul@b
  1904  001230  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1905  001234  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1906  001238  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1907  00123C  0E00               	movlw	0
  1908  00123E  6E2C               	movwf	___flmul@a^0,c
  1909  001240  0E00               	movlw	0
  1910  001242  6E2D               	movwf	(___flmul@a+1)^0,c
  1911  001244  0EC8               	movlw	200
  1912  001246  6E2E               	movwf	(___flmul@a+2)^0,c
  1913  001248  0E42               	movlw	66
  1914  00124A  6E2F               	movwf	(___flmul@a+3)^0,c
  1915  00124C  ECDA  F00E         	call	___flmul	;wreg free
  1916  001250  C028  F08B         	movff	?___flmul,_detect_color$2684
  1917  001254  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  1918  001258  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  1919  00125C  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  1920  001260  C08B  F066         	movff	_detect_color$2684,lroundf@x
  1921  001264  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  1922  001268  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  1923  00126C  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  1924  001270  ECD7  F01E         	call	_lroundf	;wreg free
  1925  001274  C066  F080         	movff	?_lroundf,detect_color@GG
  1926  001278  C067  F081         	movff	?_lroundf+1,detect_color@GG+1
  1927  00127C  0100               	movlb	0	; () banked
  1928  00127E  EE20 F00A          	lfsr	2,10
  1929  001282  5172               	movf	detect_color@w& (0+255),w,b
  1930  001284  26D9               	addwf	fsr2l,f,c
  1931  001286  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1932  001288  22DA               	addwfc	fsr2h,f,c
  1933  00128A  CFDE F074          	movff	postinc2,??_detect_color
  1934  00128E  CFDD F075          	movff	postdec2,??_detect_color+1
  1935  001292  C074  F001         	movff	??_detect_color,___xxtofl@val
  1936  001296  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1937  00129A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1938  00129C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1939  00129E  0E00               	movlw	0
  1940  0012A0  EC05  F016         	call	___xxtofl
  1941  0012A4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1942  0012A8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1943  0012AC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1944  0012B0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1945  0012B4  0100               	movlb	0	; () banked
  1946  0012B6  EE20 F004          	lfsr	2,4
  1947  0012BA  5170               	movf	detect_color@m& (0+255),w,b
  1948  0012BC  26D9               	addwf	fsr2l,f,c
  1949  0012BE  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1950  0012C0  22DA               	addwfc	fsr2h,f,c
  1951  0012C2  CFDE F076          	movff	postinc2,??_detect_color+2
  1952  0012C6  CFDD F077          	movff	postdec2,??_detect_color+3
  1953  0012CA  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1954  0012CE  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1955  0012D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1956  0012D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1957  0012D6  0E00               	movlw	0
  1958  0012D8  EC05  F016         	call	___xxtofl
  1959  0012DC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1960  0012E0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1961  0012E4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1962  0012E8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1963  0012EC  ECC6  F012         	call	___fldiv	;wreg free
  1964  0012F0  C00F  F028         	movff	?___fldiv,___flmul@b
  1965  0012F4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1966  0012F8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1967  0012FC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1968  001300  0E00               	movlw	0
  1969  001302  6E2C               	movwf	___flmul@a^0,c
  1970  001304  0E00               	movlw	0
  1971  001306  6E2D               	movwf	(___flmul@a+1)^0,c
  1972  001308  0EC8               	movlw	200
  1973  00130A  6E2E               	movwf	(___flmul@a+2)^0,c
  1974  00130C  0E42               	movlw	66
  1975  00130E  6E2F               	movwf	(___flmul@a+3)^0,c
  1976  001310  ECDA  F00E         	call	___flmul	;wreg free
  1977  001314  C028  F08B         	movff	?___flmul,_detect_color$2684
  1978  001318  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  1979  00131C  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  1980  001320  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  1981  001324  C08B  F066         	movff	_detect_color$2684,lroundf@x
  1982  001328  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  1983  00132C  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  1984  001330  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  1985  001334  ECD7  F01E         	call	_lroundf	;wreg free
  1986  001338                     
  1987                           ;color.c: 206:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1988  001338  0E05               	movlw	5
  1989  00133A  0100               	movlb	0	; () banked
  1990  00133C  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1991  00133E  0E0F               	movlw	15
  1992  001340  6F74               	movwf	??_detect_color& (0+255),b
  1993  001342  0EF1               	movlw	241
  1994  001344                     u4257:
  1995  001344  2EE8               	decfsz	wreg,f,c
  1996  001346  D7FE               	bra	u4257
  1997  001348  2F74               	decfsz	??_detect_color& (0+255),f,b
  1998  00134A  D7FC               	bra	u4257
  1999  00134C  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2000  00134E  D7FA               	bra	u4257
  2001  001350                     
  2002                           ;color.c: 208:     LED_B();
  2003  001350  ECEF  F01F         	call	_LED_B	;wreg free
  2004  001354                     
  2005                           ;color.c: 209:     read_color(m);
  2006  001354  C070  F00C         	movff	detect_color@m,read_color@m
  2007  001358  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2008  00135C  EC38  F01D         	call	_read_color	;wreg free
  2009  001360                     
  2010                           ;color.c: 210:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2011  001360  0100               	movlb	0	; () banked
  2012  001362  EE20 F00C          	lfsr	2,12
  2013  001366  5172               	movf	detect_color@w& (0+255),w,b
  2014  001368  26D9               	addwf	fsr2l,f,c
  2015  00136A  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2016  00136C  22DA               	addwfc	fsr2h,f,c
  2017  00136E  CFDE F074          	movff	postinc2,??_detect_color
  2018  001372  CFDD F075          	movff	postdec2,??_detect_color+1
  2019  001376  C074  F001         	movff	??_detect_color,___xxtofl@val
  2020  00137A  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2021  00137E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2022  001380  6A04               	clrf	(___xxtofl@val+3)^0,c
  2023  001382  0E00               	movlw	0
  2024  001384  EC05  F016         	call	___xxtofl
  2025  001388  C001  F013         	movff	?___xxtofl,___fldiv@a
  2026  00138C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2027  001390  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2028  001394  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2029  001398  C070  FFD9         	movff	detect_color@m,fsr2l
  2030  00139C  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2031  0013A0  CFDE F076          	movff	postinc2,??_detect_color+2
  2032  0013A4  CFDD F077          	movff	postdec2,??_detect_color+3
  2033  0013A8  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2034  0013AC  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2035  0013B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2036  0013B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2037  0013B4  0E00               	movlw	0
  2038  0013B6  EC05  F016         	call	___xxtofl
  2039  0013BA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2040  0013BE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2041  0013C2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2042  0013C6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2043  0013CA  ECC6  F012         	call	___fldiv	;wreg free
  2044  0013CE  C00F  F028         	movff	?___fldiv,___flmul@b
  2045  0013D2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2046  0013D6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2047  0013DA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2048  0013DE  0E00               	movlw	0
  2049  0013E0  6E2C               	movwf	___flmul@a^0,c
  2050  0013E2  0E00               	movlw	0
  2051  0013E4  6E2D               	movwf	(___flmul@a+1)^0,c
  2052  0013E6  0EC8               	movlw	200
  2053  0013E8  6E2E               	movwf	(___flmul@a+2)^0,c
  2054  0013EA  0E42               	movlw	66
  2055  0013EC  6E2F               	movwf	(___flmul@a+3)^0,c
  2056  0013EE  ECDA  F00E         	call	___flmul	;wreg free
  2057  0013F2  C028  F08B         	movff	?___flmul,_detect_color$2684
  2058  0013F6  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  2059  0013FA  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  2060  0013FE  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  2061  001402                     
  2062                           ;color.c: 210:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2063  001402  C08B  F066         	movff	_detect_color$2684,lroundf@x
  2064  001406  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  2065  00140A  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  2066  00140E  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  2067  001412  ECD7  F01E         	call	_lroundf	;wreg free
  2068  001416  C066  F087         	movff	?_lroundf,detect_color@BR
  2069  00141A  C067  F088         	movff	?_lroundf+1,detect_color@BR+1
  2070  00141E  0100               	movlb	0	; () banked
  2071  001420  EE20 F00E          	lfsr	2,14
  2072  001424  5172               	movf	detect_color@w& (0+255),w,b
  2073  001426  26D9               	addwf	fsr2l,f,c
  2074  001428  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2075  00142A  22DA               	addwfc	fsr2h,f,c
  2076  00142C  CFDE F074          	movff	postinc2,??_detect_color
  2077  001430  CFDD F075          	movff	postdec2,??_detect_color+1
  2078  001434  C074  F001         	movff	??_detect_color,___xxtofl@val
  2079  001438  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2080  00143C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2081  00143E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2082  001440  0E00               	movlw	0
  2083  001442  EC05  F016         	call	___xxtofl
  2084  001446  C001  F013         	movff	?___xxtofl,___fldiv@a
  2085  00144A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2086  00144E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2087  001452  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2088  001456  0100               	movlb	0	; () banked
  2089  001458  EE20 F002          	lfsr	2,2
  2090  00145C  5170               	movf	detect_color@m& (0+255),w,b
  2091  00145E  26D9               	addwf	fsr2l,f,c
  2092  001460  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2093  001462  22DA               	addwfc	fsr2h,f,c
  2094  001464  CFDE F076          	movff	postinc2,??_detect_color+2
  2095  001468  CFDD F077          	movff	postdec2,??_detect_color+3
  2096  00146C  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2097  001470  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2098  001474  6A03               	clrf	(___xxtofl@val+2)^0,c
  2099  001476  6A04               	clrf	(___xxtofl@val+3)^0,c
  2100  001478  0E00               	movlw	0
  2101  00147A  EC05  F016         	call	___xxtofl
  2102  00147E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2103  001482  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2104  001486  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2105  00148A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2106  00148E  ECC6  F012         	call	___fldiv	;wreg free
  2107  001492  C00F  F028         	movff	?___fldiv,___flmul@b
  2108  001496  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2109  00149A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2110  00149E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2111  0014A2  0E00               	movlw	0
  2112  0014A4  6E2C               	movwf	___flmul@a^0,c
  2113  0014A6  0E00               	movlw	0
  2114  0014A8  6E2D               	movwf	(___flmul@a+1)^0,c
  2115  0014AA  0EC8               	movlw	200
  2116  0014AC  6E2E               	movwf	(___flmul@a+2)^0,c
  2117  0014AE  0E42               	movlw	66
  2118  0014B0  6E2F               	movwf	(___flmul@a+3)^0,c
  2119  0014B2  ECDA  F00E         	call	___flmul	;wreg free
  2120  0014B6  C028  F08B         	movff	?___flmul,_detect_color$2684
  2121  0014BA  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  2122  0014BE  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  2123  0014C2  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  2124  0014C6  C08B  F066         	movff	_detect_color$2684,lroundf@x
  2125  0014CA  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  2126  0014CE  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  2127  0014D2  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  2128  0014D6  ECD7  F01E         	call	_lroundf	;wreg free
  2129  0014DA  C066  F089         	movff	?_lroundf,detect_color@BG
  2130  0014DE  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2131  0014E2  0100               	movlb	0	; () banked
  2132  0014E4  EE20 F010          	lfsr	2,16
  2133  0014E8  5172               	movf	detect_color@w& (0+255),w,b
  2134  0014EA  26D9               	addwf	fsr2l,f,c
  2135  0014EC  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2136  0014EE  22DA               	addwfc	fsr2h,f,c
  2137  0014F0  CFDE F074          	movff	postinc2,??_detect_color
  2138  0014F4  CFDD F075          	movff	postdec2,??_detect_color+1
  2139  0014F8  C074  F001         	movff	??_detect_color,___xxtofl@val
  2140  0014FC  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2141  001500  6A03               	clrf	(___xxtofl@val+2)^0,c
  2142  001502  6A04               	clrf	(___xxtofl@val+3)^0,c
  2143  001504  0E00               	movlw	0
  2144  001506  EC05  F016         	call	___xxtofl
  2145  00150A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2146  00150E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2147  001512  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2148  001516  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2149  00151A  0100               	movlb	0	; () banked
  2150  00151C  EE20 F004          	lfsr	2,4
  2151  001520  5170               	movf	detect_color@m& (0+255),w,b
  2152  001522  26D9               	addwf	fsr2l,f,c
  2153  001524  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2154  001526  22DA               	addwfc	fsr2h,f,c
  2155  001528  CFDE F076          	movff	postinc2,??_detect_color+2
  2156  00152C  CFDD F077          	movff	postdec2,??_detect_color+3
  2157  001530  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2158  001534  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2159  001538  6A03               	clrf	(___xxtofl@val+2)^0,c
  2160  00153A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2161  00153C  0E00               	movlw	0
  2162  00153E  EC05  F016         	call	___xxtofl
  2163  001542  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2164  001546  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2165  00154A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2166  00154E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2167  001552  ECC6  F012         	call	___fldiv	;wreg free
  2168  001556  C00F  F028         	movff	?___fldiv,___flmul@b
  2169  00155A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2170  00155E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2171  001562  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2172  001566  0E00               	movlw	0
  2173  001568  6E2C               	movwf	___flmul@a^0,c
  2174  00156A  0E00               	movlw	0
  2175  00156C  6E2D               	movwf	(___flmul@a+1)^0,c
  2176  00156E  0EC8               	movlw	200
  2177  001570  6E2E               	movwf	(___flmul@a+2)^0,c
  2178  001572  0E42               	movlw	66
  2179  001574  6E2F               	movwf	(___flmul@a+3)^0,c
  2180  001576  ECDA  F00E         	call	___flmul	;wreg free
  2181  00157A  C028  F08B         	movff	?___flmul,_detect_color$2684
  2182  00157E  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  2183  001582  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  2184  001586  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  2185  00158A  C08B  F066         	movff	_detect_color$2684,lroundf@x
  2186  00158E  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  2187  001592  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  2188  001596  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  2189  00159A  ECD7  F01E         	call	_lroundf	;wreg free
  2190  00159E  C066  F084         	movff	?_lroundf,detect_color@BB
  2191  0015A2  C067  F085         	movff	?_lroundf+1,detect_color@BB+1
  2192  0015A6                     
  2193                           ;color.c: 211:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2194  0015A6  0E05               	movlw	5
  2195  0015A8  0100               	movlb	0	; () banked
  2196  0015AA  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2197  0015AC  0E0F               	movlw	15
  2198  0015AE  6F74               	movwf	??_detect_color& (0+255),b
  2199  0015B0  0EF1               	movlw	241
  2200  0015B2                     u4267:
  2201  0015B2  2EE8               	decfsz	wreg,f,c
  2202  0015B4  D7FE               	bra	u4267
  2203  0015B6  2F74               	decfsz	??_detect_color& (0+255),f,b
  2204  0015B8  D7FC               	bra	u4267
  2205  0015BA  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2206  0015BC  D7FA               	bra	u4267
  2207  0015BE                     
  2208                           ;color.c: 214:     if (compare(0, BR, 55)){
  2209  0015BE  0E00               	movlw	0
  2210  0015C0  0100               	movlb	0	; () banked
  2211  0015C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2212  0015C4  0E00               	movlw	0
  2213  0015C6  6F6A               	movwf	compare@lower& (0+255),b
  2214  0015C8  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2215  0015CC  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2216  0015D0  0E00               	movlw	0
  2217  0015D2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2218  0015D4  0E37               	movlw	55
  2219  0015D6  6F6E               	movwf	compare@upper& (0+255),b
  2220  0015D8  ECF4  F01E         	call	_compare	;wreg free
  2221  0015DC  0900               	iorlw	0
  2222  0015DE  B4D8               	btfsc	status,2,c
  2223  0015E0  EFF4  F00A         	goto	u3871
  2224  0015E4  EFF6  F00A         	goto	u3870
  2225  0015E8                     u3871:
  2226  0015E8  EF67  F00B         	goto	l4072
  2227  0015EC                     u3870:
  2228  0015EC                     
  2229                           ;color.c: 215:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2230  0015EC  C084  F001         	movff	detect_color@BB,___xxtofl@val
  2231  0015F0  C085  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2232  0015F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2233  0015F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2234  0015F8  0E00               	movlw	0
  2235  0015FA  EC05  F016         	call	___xxtofl
  2236  0015FE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2237  001602  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2238  001606  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2239  00160A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2240  00160E  0100               	movlb	0	; () banked
  2241  001610  5189               	movf	detect_color@BG& (0+255),w,b
  2242  001612  2580               	addwf	detect_color@GG& (0+255),w,b
  2243  001614  6F74               	movwf	??_detect_color& (0+255),b
  2244  001616  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  2245  001618  2181               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2246  00161A  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2247  00161C  C074  F001         	movff	??_detect_color,___xxtofl@val
  2248  001620  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2249  001624  6A03               	clrf	(___xxtofl@val+2)^0,c
  2250  001626  6A04               	clrf	(___xxtofl@val+3)^0,c
  2251  001628  0E00               	movlw	0
  2252  00162A  EC05  F016         	call	___xxtofl
  2253  00162E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2254  001632  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2255  001636  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2256  00163A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2257  00163E  ECC6  F012         	call	___fldiv	;wreg free
  2258  001642  C00F  F028         	movff	?___fldiv,___flmul@b
  2259  001646  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2260  00164A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2261  00164E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2262  001652  0E00               	movlw	0
  2263  001654  6E2C               	movwf	___flmul@a^0,c
  2264  001656  0E00               	movlw	0
  2265  001658  6E2D               	movwf	(___flmul@a+1)^0,c
  2266  00165A  0E48               	movlw	72
  2267  00165C  6E2E               	movwf	(___flmul@a+2)^0,c
  2268  00165E  0E43               	movlw	67
  2269  001660  6E2F               	movwf	(___flmul@a+3)^0,c
  2270  001662  ECDA  F00E         	call	___flmul	;wreg free
  2271  001666  C028  F08B         	movff	?___flmul,_detect_color$2684
  2272  00166A  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  2273  00166E  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  2274  001672  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  2275                           
  2276                           ;color.c: 215:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2277  001676  0E00               	movlw	0
  2278  001678  0100               	movlb	0	; () banked
  2279  00167A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2280  00167C  0E00               	movlw	0
  2281  00167E  6F6A               	movwf	compare@lower& (0+255),b
  2282  001680  C08B  F066         	movff	_detect_color$2684,lroundf@x
  2283  001684  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  2284  001688  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  2285  00168C  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  2286  001690  ECD7  F01E         	call	_lroundf	;wreg free
  2287  001694  C066  F06C         	movff	?_lroundf,compare@value2compare
  2288  001698  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2289  00169C  0E01               	movlw	1
  2290  00169E  0100               	movlb	0	; () banked
  2291  0016A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2292  0016A2  0E87               	movlw	135
  2293  0016A4  6F6E               	movwf	compare@upper& (0+255),b
  2294  0016A6  ECF4  F01E         	call	_compare	;wreg free
  2295  0016AA  0900               	iorlw	0
  2296  0016AC  B4D8               	btfsc	status,2,c
  2297  0016AE  EF5B  F00B         	goto	u3881
  2298  0016B2  EF5D  F00B         	goto	u3880
  2299  0016B6                     u3881:
  2300  0016B6  EF62  F00B         	goto	l4070
  2301  0016BA                     u3880:
  2302  0016BA  0E03               	movlw	3
  2303  0016BC  0100               	movlb	0	; () banked
  2304  0016BE  6F86               	movwf	detect_color@color& (0+255),b
  2305  0016C0  EF16  F00C         	goto	l4090
  2306  0016C4                     l4070:
  2307  0016C4  0E02               	movlw	2
  2308  0016C6  0100               	movlb	0	; () banked
  2309  0016C8  6F86               	movwf	detect_color@color& (0+255),b
  2310  0016CA  EF16  F00C         	goto	l4090
  2311  0016CE                     l4072:
  2312                           
  2313                           ;color.c: 219:         if (compare(0, BG, 75)){
  2314  0016CE  0E00               	movlw	0
  2315  0016D0  0100               	movlb	0	; () banked
  2316  0016D2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2317  0016D4  0E00               	movlw	0
  2318  0016D6  6F6A               	movwf	compare@lower& (0+255),b
  2319  0016D8  C089  F06C         	movff	detect_color@BG,compare@value2compare
  2320  0016DC  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2321  0016E0  0E00               	movlw	0
  2322  0016E2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2323  0016E4  0E4B               	movlw	75
  2324  0016E6  6F6E               	movwf	compare@upper& (0+255),b
  2325  0016E8  ECF4  F01E         	call	_compare	;wreg free
  2326  0016EC  0900               	iorlw	0
  2327  0016EE  B4D8               	btfsc	status,2,c
  2328  0016F0  EF7C  F00B         	goto	u3891
  2329  0016F4  EF7E  F00B         	goto	u3890
  2330  0016F8                     u3891:
  2331  0016F8  EFE8  F00B         	goto	l4080
  2332  0016FC                     u3890:
  2333  0016FC                     
  2334                           ;color.c: 220:             if (compare(0, lroundf((float)RR/BG * 200), 313)){color = 6;}
  2335  0016FC  C089  F001         	movff	detect_color@BG,___xxtofl@val
  2336  001700  C08A  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2337  001704  6A03               	clrf	(___xxtofl@val+2)^0,c
  2338  001706  6A04               	clrf	(___xxtofl@val+3)^0,c
  2339  001708  0E00               	movlw	0
  2340  00170A  EC05  F016         	call	___xxtofl
  2341  00170E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2342  001712  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2343  001716  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2344  00171A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2345  00171E  C082  F001         	movff	detect_color@RR,___xxtofl@val
  2346  001722  C083  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2347  001726  6A03               	clrf	(___xxtofl@val+2)^0,c
  2348  001728  6A04               	clrf	(___xxtofl@val+3)^0,c
  2349  00172A  0E00               	movlw	0
  2350  00172C  EC05  F016         	call	___xxtofl
  2351  001730  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2352  001734  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2353  001738  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2354  00173C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2355  001740  ECC6  F012         	call	___fldiv	;wreg free
  2356  001744  C00F  F028         	movff	?___fldiv,___flmul@b
  2357  001748  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2358  00174C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2359  001750  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2360  001754  0E00               	movlw	0
  2361  001756  6E2C               	movwf	___flmul@a^0,c
  2362  001758  0E00               	movlw	0
  2363  00175A  6E2D               	movwf	(___flmul@a+1)^0,c
  2364  00175C  0E48               	movlw	72
  2365  00175E  6E2E               	movwf	(___flmul@a+2)^0,c
  2366  001760  0E43               	movlw	67
  2367  001762  6E2F               	movwf	(___flmul@a+3)^0,c
  2368  001764  ECDA  F00E         	call	___flmul	;wreg free
  2369  001768  C028  F08B         	movff	?___flmul,_detect_color$2684
  2370  00176C  C029  F08C         	movff	?___flmul+1,_detect_color$2684+1
  2371  001770  C02A  F08D         	movff	?___flmul+2,_detect_color$2684+2
  2372  001774  C02B  F08E         	movff	?___flmul+3,_detect_color$2684+3
  2373                           
  2374                           ;color.c: 220:             if (compare(0, lroundf((float)RR/BG * 200), 313)){color = 6;}
  2375  001778  0E00               	movlw	0
  2376  00177A  0100               	movlb	0	; () banked
  2377  00177C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2378  00177E  0E00               	movlw	0
  2379  001780  6F6A               	movwf	compare@lower& (0+255),b
  2380  001782  C08B  F066         	movff	_detect_color$2684,lroundf@x
  2381  001786  C08C  F067         	movff	_detect_color$2684+1,lroundf@x+1
  2382  00178A  C08D  F068         	movff	_detect_color$2684+2,lroundf@x+2
  2383  00178E  C08E  F069         	movff	_detect_color$2684+3,lroundf@x+3
  2384  001792  ECD7  F01E         	call	_lroundf	;wreg free
  2385  001796  C066  F06C         	movff	?_lroundf,compare@value2compare
  2386  00179A  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2387  00179E  0E01               	movlw	1
  2388  0017A0  0100               	movlb	0	; () banked
  2389  0017A2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2390  0017A4  0E39               	movlw	57
  2391  0017A6  6F6E               	movwf	compare@upper& (0+255),b
  2392  0017A8  ECF4  F01E         	call	_compare	;wreg free
  2393  0017AC  0900               	iorlw	0
  2394  0017AE  B4D8               	btfsc	status,2,c
  2395  0017B0  EFDC  F00B         	goto	u3901
  2396  0017B4  EFDE  F00B         	goto	u3900
  2397  0017B8                     u3901:
  2398  0017B8  EFE3  F00B         	goto	l4078
  2399  0017BC                     u3900:
  2400  0017BC  0E06               	movlw	6
  2401  0017BE  0100               	movlb	0	; () banked
  2402  0017C0  6F86               	movwf	detect_color@color& (0+255),b
  2403  0017C2  EF16  F00C         	goto	l4090
  2404  0017C6                     l4078:
  2405  0017C6  0E01               	movlw	1
  2406  0017C8  0100               	movlb	0	; () banked
  2407  0017CA  6F86               	movwf	detect_color@color& (0+255),b
  2408  0017CC  EF16  F00C         	goto	l4090
  2409  0017D0                     l4080:
  2410                           
  2411                           ;color.c: 224:             if (compare(0, BR, 85)){color = 7;}
  2412  0017D0  0E00               	movlw	0
  2413  0017D2  0100               	movlb	0	; () banked
  2414  0017D4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2415  0017D6  0E00               	movlw	0
  2416  0017D8  6F6A               	movwf	compare@lower& (0+255),b
  2417  0017DA  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2418  0017DE  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2419  0017E2  0E00               	movlw	0
  2420  0017E4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2421  0017E6  0E55               	movlw	85
  2422  0017E8  6F6E               	movwf	compare@upper& (0+255),b
  2423  0017EA  ECF4  F01E         	call	_compare	;wreg free
  2424  0017EE  0900               	iorlw	0
  2425  0017F0  B4D8               	btfsc	status,2,c
  2426  0017F2  EFFD  F00B         	goto	u3911
  2427  0017F6  EFFF  F00B         	goto	u3910
  2428  0017FA                     u3911:
  2429  0017FA  EF04  F00C         	goto	l4084
  2430  0017FE                     u3910:
  2431  0017FE  0E07               	movlw	7
  2432  001800  0100               	movlb	0	; () banked
  2433  001802  6F86               	movwf	detect_color@color& (0+255),b
  2434  001804  EF16  F00C         	goto	l4090
  2435  001808                     l4084:
  2436                           
  2437                           ;color.c: 226:                 if (BG < BB){color = 5;}
  2438  001808  0100               	movlb	0	; () banked
  2439  00180A  5184               	movf	detect_color@BB& (0+255),w,b
  2440  00180C  5D89               	subwf	detect_color@BG& (0+255),w,b
  2441  00180E  5185               	movf	(detect_color@BB+1)& (0+255),w,b
  2442  001810  598A               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2443  001812  B0D8               	btfsc	status,0,c
  2444  001814  EF0E  F00C         	goto	u3921
  2445  001818  EF10  F00C         	goto	u3920
  2446  00181C                     u3921:
  2447  00181C  EF14  F00C         	goto	l4088
  2448  001820                     u3920:
  2449  001820                     
  2450                           ; BSR set to: 0
  2451  001820  0E05               	movlw	5
  2452  001822  6F86               	movwf	detect_color@color& (0+255),b
  2453  001824  EF16  F00C         	goto	l4090
  2454  001828                     l4088:
  2455                           
  2456                           ; BSR set to: 0
  2457  001828  0E04               	movlw	4
  2458  00182A  6F86               	movwf	detect_color@color& (0+255),b
  2459  00182C                     l4090:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;color.c: 232:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2463  00182C  0E00               	movlw	0
  2464  00182E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2465  001830  0E5F               	movlw	95
  2466  001832  6F6A               	movwf	compare@lower& (0+255),b
  2467  001834  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2468  001838  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2469  00183C  0E00               	movlw	0
  2470  00183E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2471  001840  0E69               	movlw	105
  2472  001842  6F6E               	movwf	compare@upper& (0+255),b
  2473  001844  ECF4  F01E         	call	_compare	;wreg free
  2474  001848  0900               	iorlw	0
  2475  00184A  B4D8               	btfsc	status,2,c
  2476  00184C  EF2A  F00C         	goto	u3931
  2477  001850  EF2C  F00C         	goto	u3930
  2478  001854                     u3931:
  2479  001854  EF46  F00C         	goto	l4096
  2480  001858                     u3930:
  2481  001858  0E00               	movlw	0
  2482  00185A  0100               	movlb	0	; () banked
  2483  00185C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2484  00185E  0E5F               	movlw	95
  2485  001860  6F6A               	movwf	compare@lower& (0+255),b
  2486  001862  C089  F06C         	movff	detect_color@BG,compare@value2compare
  2487  001866  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2488  00186A  0E00               	movlw	0
  2489  00186C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2490  00186E  0E69               	movlw	105
  2491  001870  6F6E               	movwf	compare@upper& (0+255),b
  2492  001872  ECF4  F01E         	call	_compare	;wreg free
  2493  001876  0900               	iorlw	0
  2494  001878  B4D8               	btfsc	status,2,c
  2495  00187A  EF41  F00C         	goto	u3941
  2496  00187E  EF43  F00C         	goto	u3940
  2497  001882                     u3941:
  2498  001882  EF46  F00C         	goto	l4096
  2499  001886                     u3940:
  2500  001886  0E08               	movlw	8
  2501  001888  0100               	movlb	0	; () banked
  2502  00188A  6F86               	movwf	detect_color@color& (0+255),b
  2503  00188C                     l4096:
  2504                           
  2505                           ;color.c: 233:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 9;}
  2506  00188C  0E00               	movlw	0
  2507  00188E  0100               	movlb	0	; () banked
  2508  001890  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2509  001892  0E00               	movlw	0
  2510  001894  6F6A               	movwf	compare@lower& (0+255),b
  2511  001896  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2512  00189A  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2513  00189E  0E00               	movlw	0
  2514  0018A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2515  0018A2  0E19               	movlw	25
  2516  0018A4  6F6E               	movwf	compare@upper& (0+255),b
  2517  0018A6  ECF4  F01E         	call	_compare	;wreg free
  2518  0018AA  0900               	iorlw	0
  2519  0018AC  B4D8               	btfsc	status,2,c
  2520  0018AE  EF5B  F00C         	goto	u3951
  2521  0018B2  EF5D  F00C         	goto	u3950
  2522  0018B6                     u3951:
  2523  0018B6  EF77  F00C         	goto	l115
  2524  0018BA                     u3950:
  2525  0018BA  0E00               	movlw	0
  2526  0018BC  0100               	movlb	0	; () banked
  2527  0018BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2528  0018C0  0E00               	movlw	0
  2529  0018C2  6F6A               	movwf	compare@lower& (0+255),b
  2530  0018C4  C082  F06C         	movff	detect_color@RR,compare@value2compare
  2531  0018C8  C083  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2532  0018CC  0E00               	movlw	0
  2533  0018CE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2534  0018D0  0E5A               	movlw	90
  2535  0018D2  6F6E               	movwf	compare@upper& (0+255),b
  2536  0018D4  ECF4  F01E         	call	_compare	;wreg free
  2537  0018D8  0900               	iorlw	0
  2538  0018DA  B4D8               	btfsc	status,2,c
  2539  0018DC  EF72  F00C         	goto	u3961
  2540  0018E0  EF74  F00C         	goto	u3960
  2541  0018E4                     u3961:
  2542  0018E4  EF77  F00C         	goto	l115
  2543  0018E8                     u3960:
  2544  0018E8  0E09               	movlw	9
  2545  0018EA  0100               	movlb	0	; () banked
  2546  0018EC  6F86               	movwf	detect_color@color& (0+255),b
  2547  0018EE                     l115:
  2548                           
  2549                           ;color.c: 234:     return color;
  2550  0018EE  0100               	movlb	0	; () banked
  2551  0018F0  5186               	movf	detect_color@color& (0+255),w,b
  2552  0018F2                     
  2553                           ; BSR set to: 0
  2554  0018F2  0012               	return		;funcret
  2555  0018F4                     __end_of_detect_color:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _read_color *****************
  2559 ;; Defined at:
  2560 ;;		line 92 in file "color.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  m               2   11[COMRAM] PTR struct color_rgb
  2563 ;;		 -> main@rgb(8), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 3
  2582 ;; This function calls:
  2583 ;;		_color_read_Blue
  2584 ;;		_color_read_Clear
  2585 ;;		_color_read_Green
  2586 ;;		_color_read_Red
  2587 ;; This function is called by:
  2588 ;;		_detect_color
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text5
  2594  003A70                     __ptext5:
  2595                           	callstack 0
  2596  003A70                     _read_color:
  2597                           	callstack 27
  2598  003A70                     
  2599                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  2600  003A70  ECB8  F01D         	call	_color_read_Red	;wreg free
  2601  003A74  C00C  FFD9         	movff	read_color@m,fsr2l
  2602  003A78  C00D  FFDA         	movff	read_color@m+1,fsr2h
  2603  003A7C  C005  FFDE         	movff	?_color_read_Red,postinc2
  2604  003A80  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2605                           
  2606                           ;color.c: 95:     m->B = color_read_Blue();
  2607  003A84  EC08  F01E         	call	_color_read_Blue	;wreg free
  2608  003A88  EE20 F004          	lfsr	2,4
  2609  003A8C  500C               	movf	read_color@m^0,w,c
  2610  003A8E  26D9               	addwf	fsr2l,f,c
  2611  003A90  500D               	movf	(read_color@m+1)^0,w,c
  2612  003A92  22DA               	addwfc	fsr2h,f,c
  2613  003A94  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2614  003A98  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2615                           
  2616                           ;color.c: 96:     m->G = color_read_Green();
  2617  003A9C  ECE0  F01D         	call	_color_read_Green	;wreg free
  2618  003AA0  EE20 F002          	lfsr	2,2
  2619  003AA4  500C               	movf	read_color@m^0,w,c
  2620  003AA6  26D9               	addwf	fsr2l,f,c
  2621  003AA8  500D               	movf	(read_color@m+1)^0,w,c
  2622  003AAA  22DA               	addwfc	fsr2h,f,c
  2623  003AAC  C005  FFDE         	movff	?_color_read_Green,postinc2
  2624  003AB0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2625                           
  2626                           ;color.c: 97:     m->C = color_read_Clear();
  2627  003AB4  EC90  F01D         	call	_color_read_Clear	;wreg free
  2628  003AB8  EE20 F006          	lfsr	2,6
  2629  003ABC  500C               	movf	read_color@m^0,w,c
  2630  003ABE  26D9               	addwf	fsr2l,f,c
  2631  003AC0  500D               	movf	(read_color@m+1)^0,w,c
  2632  003AC2  22DA               	addwfc	fsr2h,f,c
  2633  003AC4  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2634  003AC8  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2635  003ACC  0012               	return		;funcret
  2636  003ACE                     __end_of_read_color:
  2637                           	callstack 0
  2638                           
  2639 ;; *************** function _color_read_Clear *****************
  2640 ;; Defined at:
  2641 ;;		line 78 in file "color.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  tmp             2    9[COMRAM] unsigned int 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  2    4[COMRAM] unsigned int 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2655 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;Total ram usage:        7 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 2
  2662 ;; This function calls:
  2663 ;;		_I2C_2_Master_Read
  2664 ;;		_I2C_2_Master_RepStart
  2665 ;;		_I2C_2_Master_Start
  2666 ;;		_I2C_2_Master_Stop
  2667 ;;		_I2C_2_Master_Write
  2668 ;; This function is called by:
  2669 ;;		_read_color
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text6
  2674  003B20                     __ptext6:
  2675                           	callstack 0
  2676  003B20                     _color_read_Clear:
  2677                           	callstack 27
  2678  003B20                     
  2679                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  2680  003B20  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  2681                           
  2682                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  2683  003B24  0E52               	movlw	82
  2684  003B26  EC30  F020         	call	_I2C_2_Master_Write
  2685                           
  2686                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  2687  003B2A  0EB4               	movlw	180
  2688  003B2C  EC30  F020         	call	_I2C_2_Master_Write
  2689                           
  2690                           ;color.c: 84:  I2C_2_Master_RepStart();
  2691  003B30  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  2692                           
  2693                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  2694  003B34  0E53               	movlw	83
  2695  003B36  EC30  F020         	call	_I2C_2_Master_Write
  2696                           
  2697                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  2698  003B3A  0E01               	movlw	1
  2699  003B3C  EC96  F01E         	call	_I2C_2_Master_Read
  2700  003B40  6E07               	movwf	??_color_read_Clear^0,c
  2701  003B42  5007               	movf	??_color_read_Clear^0,w,c
  2702  003B44  6E0A               	movwf	color_read_Clear@tmp^0,c
  2703  003B46  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2704                           
  2705                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2706  003B48  0E00               	movlw	0
  2707  003B4A  EC96  F01E         	call	_I2C_2_Master_Read
  2708  003B4E  6E07               	movwf	??_color_read_Clear^0,c
  2709  003B50  5007               	movf	??_color_read_Clear^0,w,c
  2710  003B52  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2711  003B54  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2712  003B56  500A               	movf	color_read_Clear@tmp^0,w,c
  2713  003B58  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2714  003B5A  6E0A               	movwf	color_read_Clear@tmp^0,c
  2715  003B5C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2716  003B5E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2717  003B60  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2718                           
  2719                           ;color.c: 88:  I2C_2_Master_Stop();
  2720  003B62  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  2721  003B66                     
  2722                           ;color.c: 89:  return tmp;
  2723  003B66  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2724  003B6A  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2725  003B6E  0012               	return		;funcret
  2726  003B70                     __end_of_color_read_Clear:
  2727                           	callstack 0
  2728                           
  2729 ;; *************** function _lroundf *****************
  2730 ;; Defined at:
  2731 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  x               4    6[BANK0 ] float 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  4    6[BANK0 ] long 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2745 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2749 ;;Total ram usage:        4 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 3
  2752 ;; This function calls:
  2753 ;;		___fltol
  2754 ;;		_roundf
  2755 ;; This function is called by:
  2756 ;;		_detect_color
  2757 ;;		_check_color_reading
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	text7
  2762  003DAE                     __ptext7:
  2763                           	callstack 0
  2764  003DAE                     _lroundf:
  2765                           	callstack 26
  2766  003DAE  C066  F041         	movff	lroundf@x,roundf@x
  2767  003DB2  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2768  003DB6  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2769  003DBA  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2770  003DBE  ECEF  F010         	call	_roundf	;wreg free
  2771  003DC2  C041  F05B         	movff	?_roundf,___fltol@f1
  2772  003DC6  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2773  003DCA  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2774  003DCE  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2775  003DD2  ECC4  F019         	call	___fltol	;wreg free
  2776  003DD6  C05B  F066         	movff	?___fltol,?_lroundf
  2777  003DDA  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2778  003DDE  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2779  003DE2  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2780  003DE6  0012               	return		;funcret
  2781  003DE8                     __end_of_lroundf:
  2782                           	callstack 0
  2783                           
  2784 ;; *************** function _roundf *****************
  2785 ;; Defined at:
  2786 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  x               4   64[COMRAM] float 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;  y               4   86[COMRAM] float 
  2791 ;;  u               4   82[COMRAM] struct .
  2792 ;;  e               2   76[COMRAM] int 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  4   64[COMRAM] float 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;Total ram usage:       26 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		___fladd
  2811 ;;		___flge
  2812 ;;		___flmul
  2813 ;;		___flneg
  2814 ;;		___flsub
  2815 ;; This function is called by:
  2816 ;;		_lroundf
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text8
  2821  0021DE                     __ptext8:
  2822                           	callstack 0
  2823  0021DE                     _roundf:
  2824                           	callstack 26
  2825  0021DE  C0EA  F053         	movff	roundf@F527,roundf@u
  2826  0021E2  C0EB  F054         	movff	roundf@F527+1,roundf@u+1
  2827  0021E6  C0EC  F055         	movff	roundf@F527+2,roundf@u+2
  2828  0021EA  C0ED  F056         	movff	roundf@F527+3,roundf@u+3
  2829  0021EE  C041  F053         	movff	roundf@x,roundf@u
  2830  0021F2  C042  F054         	movff	roundf@x+1,roundf@u+1
  2831  0021F6  C043  F055         	movff	roundf@x+2,roundf@u+2
  2832  0021FA  C044  F056         	movff	roundf@x+3,roundf@u+3
  2833  0021FE  C053  F045         	movff	roundf@u,??_roundf
  2834  002202  C054  F046         	movff	roundf@u+1,??_roundf+1
  2835  002206  C055  F047         	movff	roundf@u+2,??_roundf+2
  2836  00220A  C056  F048         	movff	roundf@u+3,??_roundf+3
  2837  00220E  0E18               	movlw	24
  2838  002210  EF0F  F011         	goto	u3290
  2839  002214                     u3295:
  2840  002214  90D8               	bcf	status,0,c
  2841  002216  3248               	rrcf	(??_roundf+3)^0,f,c
  2842  002218  3247               	rrcf	(??_roundf+2)^0,f,c
  2843  00221A  3246               	rrcf	(??_roundf+1)^0,f,c
  2844  00221C  3245               	rrcf	??_roundf^0,f,c
  2845  00221E                     u3290:
  2846  00221E  2EE8               	decfsz	wreg,f,c
  2847  002220  EF0A  F011         	goto	u3295
  2848  002224  5045               	movf	??_roundf^0,w,c
  2849  002226  6E4D               	movwf	roundf@e^0,c
  2850  002228  6A4E               	clrf	(roundf@e+1)^0,c
  2851  00222A  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2852  00222C  EF21  F011         	goto	u3301
  2853  002230  504E               	movf	(roundf@e+1)^0,w,c
  2854  002232  E109               	bnz	u3300
  2855  002234  0E96               	movlw	150
  2856  002236  5C4D               	subwf	roundf@e^0,w,c
  2857  002238  A0D8               	btfss	status,0,c
  2858  00223A  EF21  F011         	goto	u3301
  2859  00223E  EF23  F011         	goto	u3300
  2860  002242                     u3301:
  2861  002242  EF2D  F011         	goto	l3620
  2862  002246                     u3300:
  2863  002246  C041  F041         	movff	roundf@x,?_roundf
  2864  00224A  C042  F042         	movff	roundf@x+1,?_roundf+1
  2865  00224E  C043  F043         	movff	roundf@x+2,?_roundf+2
  2866  002252  C044  F044         	movff	roundf@x+3,?_roundf+3
  2867  002256  EFC5  F012         	goto	l1317
  2868  00225A                     l3620:
  2869  00225A  C053  F045         	movff	roundf@u,??_roundf
  2870  00225E  C054  F046         	movff	roundf@u+1,??_roundf+1
  2871  002262  C055  F047         	movff	roundf@u+2,??_roundf+2
  2872  002266  C056  F048         	movff	roundf@u+3,??_roundf+3
  2873  00226A  0E20               	movlw	32
  2874  00226C  EF3D  F011         	goto	u3310
  2875  002270                     u3315:
  2876  002270  90D8               	bcf	status,0,c
  2877  002272  3248               	rrcf	(??_roundf+3)^0,f,c
  2878  002274  3247               	rrcf	(??_roundf+2)^0,f,c
  2879  002276  3246               	rrcf	(??_roundf+1)^0,f,c
  2880  002278  3245               	rrcf	??_roundf^0,f,c
  2881  00227A                     u3310:
  2882  00227A  2EE8               	decfsz	wreg,f,c
  2883  00227C  EF38  F011         	goto	u3315
  2884  002280  5045               	movf	??_roundf^0,w,c
  2885  002282  1046               	iorwf	(??_roundf+1)^0,w,c
  2886  002284  1047               	iorwf	(??_roundf+2)^0,w,c
  2887  002286  1048               	iorwf	(??_roundf+3)^0,w,c
  2888  002288  B4D8               	btfsc	status,2,c
  2889  00228A  EF49  F011         	goto	u3321
  2890  00228E  EF4B  F011         	goto	u3320
  2891  002292                     u3321:
  2892  002292  EF5D  F011         	goto	l3624
  2893  002296                     u3320:
  2894  002296  C041  F001         	movff	roundf@x,___flneg@f1
  2895  00229A  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  2896  00229E  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  2897  0022A2  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  2898  0022A6  EC2D  F01F         	call	___flneg	;wreg free
  2899  0022AA  C001  F041         	movff	?___flneg,roundf@x
  2900  0022AE  C002  F042         	movff	?___flneg+1,roundf@x+1
  2901  0022B2  C003  F043         	movff	?___flneg+2,roundf@x+2
  2902  0022B6  C004  F044         	movff	?___flneg+3,roundf@x+3
  2903  0022BA                     l3624:
  2904  0022BA  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2905  0022BC  EF6B  F011         	goto	u3330
  2906  0022C0  504E               	movf	(roundf@e+1)^0,w,c
  2907  0022C2  E107               	bnz	u3331
  2908  0022C4  0E7E               	movlw	126
  2909  0022C6  5C4D               	subwf	roundf@e^0,w,c
  2910  0022C8  B0D8               	btfsc	status,0,c
  2911  0022CA  EF69  F011         	goto	u3331
  2912  0022CE  EF6B  F011         	goto	u3330
  2913  0022D2                     u3331:
  2914  0022D2  EF87  F011         	goto	l3630
  2915  0022D6                     u3330:
  2916  0022D6  C053  F028         	movff	roundf@u,___flmul@b
  2917  0022DA  C054  F029         	movff	roundf@u+1,___flmul@b+1
  2918  0022DE  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  2919  0022E2  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  2920  0022E6  0E00               	movlw	0
  2921  0022E8  6E2C               	movwf	___flmul@a^0,c
  2922  0022EA  0E00               	movlw	0
  2923  0022EC  6E2D               	movwf	(___flmul@a+1)^0,c
  2924  0022EE  0E00               	movlw	0
  2925  0022F0  6E2E               	movwf	(___flmul@a+2)^0,c
  2926  0022F2  0E00               	movlw	0
  2927  0022F4  6E2F               	movwf	(___flmul@a+3)^0,c
  2928  0022F6  ECDA  F00E         	call	___flmul	;wreg free
  2929  0022FA  C028  F041         	movff	?___flmul,?_roundf
  2930  0022FE  C029  F042         	movff	?___flmul+1,?_roundf+1
  2931  002302  C02A  F043         	movff	?___flmul+2,?_roundf+2
  2932  002306  C02B  F044         	movff	?___flmul+3,?_roundf+3
  2933  00230A  EFC5  F012         	goto	l1317
  2934  00230E                     l3630:
  2935  00230E  0E00               	movlw	0
  2936  002310  6E05               	movwf	___fladd@a^0,c
  2937  002312  0E00               	movlw	0
  2938  002314  6E06               	movwf	(___fladd@a+1)^0,c
  2939  002316  0E00               	movlw	0
  2940  002318  6E07               	movwf	(___fladd@a+2)^0,c
  2941  00231A  0E4B               	movlw	75
  2942  00231C  6E08               	movwf	(___fladd@a+3)^0,c
  2943  00231E  C041  F001         	movff	roundf@x,___fladd@b
  2944  002322  C042  F002         	movff	roundf@x+1,___fladd@b+1
  2945  002326  C043  F003         	movff	roundf@x+2,___fladd@b+2
  2946  00232A  C044  F004         	movff	roundf@x+3,___fladd@b+3
  2947  00232E  EC7A  F00C         	call	___fladd	;wreg free
  2948  002332  C001  F04F         	movff	?___fladd,_roundf$2685
  2949  002336  C002  F050         	movff	?___fladd+1,_roundf$2685+1
  2950  00233A  C003  F051         	movff	?___fladd+2,_roundf$2685+2
  2951  00233E  C004  F052         	movff	?___fladd+3,_roundf$2685+3
  2952  002342  0E00               	movlw	0
  2953  002344  6E05               	movwf	___fladd@a^0,c
  2954  002346  0E00               	movlw	0
  2955  002348  6E06               	movwf	(___fladd@a+1)^0,c
  2956  00234A  0E00               	movlw	0
  2957  00234C  6E07               	movwf	(___fladd@a+2)^0,c
  2958  00234E  0ECB               	movlw	203
  2959  002350  6E08               	movwf	(___fladd@a+3)^0,c
  2960  002352  C04F  F001         	movff	_roundf$2685,___fladd@b
  2961  002356  C050  F002         	movff	_roundf$2685+1,___fladd@b+1
  2962  00235A  C051  F003         	movff	_roundf$2685+2,___fladd@b+2
  2963  00235E  C052  F004         	movff	_roundf$2685+3,___fladd@b+3
  2964  002362  EC7A  F00C         	call	___fladd	;wreg free
  2965  002366  C001  F049         	movff	?___fladd,_roundf$2686
  2966  00236A  C002  F04A         	movff	?___fladd+1,_roundf$2686+1
  2967  00236E  C003  F04B         	movff	?___fladd+2,_roundf$2686+2
  2968  002372  C004  F04C         	movff	?___fladd+3,_roundf$2686+3
  2969  002376  C049  F011         	movff	_roundf$2686,___flsub@b
  2970  00237A  C04A  F012         	movff	_roundf$2686+1,___flsub@b+1
  2971  00237E  C04B  F013         	movff	_roundf$2686+2,___flsub@b+2
  2972  002382  C04C  F014         	movff	_roundf$2686+3,___flsub@b+3
  2973  002386  C041  F015         	movff	roundf@x,___flsub@a
  2974  00238A  C042  F016         	movff	roundf@x+1,___flsub@a+1
  2975  00238E  C043  F017         	movff	roundf@x+2,___flsub@a+2
  2976  002392  C044  F018         	movff	roundf@x+3,___flsub@a+3
  2977  002396  EC30  F01E         	call	___flsub	;wreg free
  2978  00239A  C011  F057         	movff	?___flsub,roundf@y
  2979  00239E  C012  F058         	movff	?___flsub+1,roundf@y+1
  2980  0023A2  C013  F059         	movff	?___flsub+2,roundf@y+2
  2981  0023A6  C014  F05A         	movff	?___flsub+3,roundf@y+3
  2982  0023AA  0E00               	movlw	0
  2983  0023AC  6E01               	movwf	___flge@ff1^0,c
  2984  0023AE  0E00               	movlw	0
  2985  0023B0  6E02               	movwf	(___flge@ff1+1)^0,c
  2986  0023B2  0E00               	movlw	0
  2987  0023B4  6E03               	movwf	(___flge@ff1+2)^0,c
  2988  0023B6  0E3F               	movlw	63
  2989  0023B8  6E04               	movwf	(___flge@ff1+3)^0,c
  2990  0023BA  C057  F005         	movff	roundf@y,___flge@ff2
  2991  0023BE  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  2992  0023C2  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  2993  0023C6  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  2994  0023CA  EC48  F01A         	call	___flge	;wreg free
  2995  0023CE  B0D8               	btfsc	status,0,c
  2996  0023D0  EFEC  F011         	goto	u3341
  2997  0023D4  EFEE  F011         	goto	u3340
  2998  0023D8                     u3341:
  2999  0023D8  EF24  F012         	goto	l3634
  3000  0023DC                     u3340:
  3001  0023DC  C041  F005         	movff	roundf@x,___fladd@a
  3002  0023E0  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3003  0023E4  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3004  0023E8  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3005  0023EC  C057  F001         	movff	roundf@y,___fladd@b
  3006  0023F0  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3007  0023F4  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3008  0023F8  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3009  0023FC  EC7A  F00C         	call	___fladd	;wreg free
  3010  002400  C001  F04F         	movff	?___fladd,_roundf$2685
  3011  002404  C002  F050         	movff	?___fladd+1,_roundf$2685+1
  3012  002408  C003  F051         	movff	?___fladd+2,_roundf$2685+2
  3013  00240C  C004  F052         	movff	?___fladd+3,_roundf$2685+3
  3014  002410  C04F  F001         	movff	_roundf$2685,___fladd@b
  3015  002414  C050  F002         	movff	_roundf$2685+1,___fladd@b+1
  3016  002418  C051  F003         	movff	_roundf$2685+2,___fladd@b+2
  3017  00241C  C052  F004         	movff	_roundf$2685+3,___fladd@b+3
  3018  002420  0E00               	movlw	0
  3019  002422  6E05               	movwf	___fladd@a^0,c
  3020  002424  0E00               	movlw	0
  3021  002426  6E06               	movwf	(___fladd@a+1)^0,c
  3022  002428  0E80               	movlw	128
  3023  00242A  6E07               	movwf	(___fladd@a+2)^0,c
  3024  00242C  0EBF               	movlw	191
  3025  00242E  6E08               	movwf	(___fladd@a+3)^0,c
  3026  002430  EC7A  F00C         	call	___fladd	;wreg free
  3027  002434  C001  F057         	movff	?___fladd,roundf@y
  3028  002438  C002  F058         	movff	?___fladd+1,roundf@y+1
  3029  00243C  C003  F059         	movff	?___fladd+2,roundf@y+2
  3030  002440  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3031  002444  EF8D  F012         	goto	l3640
  3032  002448                     l3634:
  3033  002448  0E00               	movlw	0
  3034  00244A  6E01               	movwf	___flge@ff1^0,c
  3035  00244C  0E00               	movlw	0
  3036  00244E  6E02               	movwf	(___flge@ff1+1)^0,c
  3037  002450  0E00               	movlw	0
  3038  002452  6E03               	movwf	(___flge@ff1+2)^0,c
  3039  002454  0EBF               	movlw	191
  3040  002456  6E04               	movwf	(___flge@ff1+3)^0,c
  3041  002458  C057  F005         	movff	roundf@y,___flge@ff2
  3042  00245C  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3043  002460  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3044  002464  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3045  002468  EC48  F01A         	call	___flge	;wreg free
  3046  00246C  A0D8               	btfss	status,0,c
  3047  00246E  EF3B  F012         	goto	u3351
  3048  002472  EF3D  F012         	goto	u3350
  3049  002476                     u3351:
  3050  002476  EF73  F012         	goto	l3638
  3051  00247A                     u3350:
  3052  00247A  C041  F005         	movff	roundf@x,___fladd@a
  3053  00247E  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3054  002482  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3055  002486  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3056  00248A  C057  F001         	movff	roundf@y,___fladd@b
  3057  00248E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3058  002492  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3059  002496  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3060  00249A  EC7A  F00C         	call	___fladd	;wreg free
  3061  00249E  C001  F04F         	movff	?___fladd,_roundf$2685
  3062  0024A2  C002  F050         	movff	?___fladd+1,_roundf$2685+1
  3063  0024A6  C003  F051         	movff	?___fladd+2,_roundf$2685+2
  3064  0024AA  C004  F052         	movff	?___fladd+3,_roundf$2685+3
  3065  0024AE  C04F  F001         	movff	_roundf$2685,___fladd@b
  3066  0024B2  C050  F002         	movff	_roundf$2685+1,___fladd@b+1
  3067  0024B6  C051  F003         	movff	_roundf$2685+2,___fladd@b+2
  3068  0024BA  C052  F004         	movff	_roundf$2685+3,___fladd@b+3
  3069  0024BE  0E00               	movlw	0
  3070  0024C0  6E05               	movwf	___fladd@a^0,c
  3071  0024C2  0E00               	movlw	0
  3072  0024C4  6E06               	movwf	(___fladd@a+1)^0,c
  3073  0024C6  0E80               	movlw	128
  3074  0024C8  6E07               	movwf	(___fladd@a+2)^0,c
  3075  0024CA  0E3F               	movlw	63
  3076  0024CC  6E08               	movwf	(___fladd@a+3)^0,c
  3077  0024CE  EC7A  F00C         	call	___fladd	;wreg free
  3078  0024D2  C001  F057         	movff	?___fladd,roundf@y
  3079  0024D6  C002  F058         	movff	?___fladd+1,roundf@y+1
  3080  0024DA  C003  F059         	movff	?___fladd+2,roundf@y+2
  3081  0024DE  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3082  0024E2  EF8D  F012         	goto	l3640
  3083  0024E6                     l3638:
  3084  0024E6  C057  F001         	movff	roundf@y,___fladd@b
  3085  0024EA  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3086  0024EE  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3087  0024F2  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3088  0024F6  C041  F005         	movff	roundf@x,___fladd@a
  3089  0024FA  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3090  0024FE  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3091  002502  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3092  002506  EC7A  F00C         	call	___fladd	;wreg free
  3093  00250A  C001  F057         	movff	?___fladd,roundf@y
  3094  00250E  C002  F058         	movff	?___fladd+1,roundf@y+1
  3095  002512  C003  F059         	movff	?___fladd+2,roundf@y+2
  3096  002516  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3097  00251A                     l3640:
  3098  00251A  C053  F045         	movff	roundf@u,??_roundf
  3099  00251E  C054  F046         	movff	roundf@u+1,??_roundf+1
  3100  002522  C055  F047         	movff	roundf@u+2,??_roundf+2
  3101  002526  C056  F048         	movff	roundf@u+3,??_roundf+3
  3102  00252A  0E20               	movlw	32
  3103  00252C  EF9D  F012         	goto	u3360
  3104  002530                     u3365:
  3105  002530  90D8               	bcf	status,0,c
  3106  002532  3248               	rrcf	(??_roundf+3)^0,f,c
  3107  002534  3247               	rrcf	(??_roundf+2)^0,f,c
  3108  002536  3246               	rrcf	(??_roundf+1)^0,f,c
  3109  002538  3245               	rrcf	??_roundf^0,f,c
  3110  00253A                     u3360:
  3111  00253A  2EE8               	decfsz	wreg,f,c
  3112  00253C  EF98  F012         	goto	u3365
  3113  002540  5045               	movf	??_roundf^0,w,c
  3114  002542  1046               	iorwf	(??_roundf+1)^0,w,c
  3115  002544  1047               	iorwf	(??_roundf+2)^0,w,c
  3116  002546  1048               	iorwf	(??_roundf+3)^0,w,c
  3117  002548  B4D8               	btfsc	status,2,c
  3118  00254A  EFA9  F012         	goto	u3371
  3119  00254E  EFAB  F012         	goto	u3370
  3120  002552                     u3371:
  3121  002552  EFBD  F012         	goto	l3644
  3122  002556                     u3370:
  3123  002556  C057  F001         	movff	roundf@y,___flneg@f1
  3124  00255A  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3125  00255E  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3126  002562  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3127  002566  EC2D  F01F         	call	___flneg	;wreg free
  3128  00256A  C001  F057         	movff	?___flneg,roundf@y
  3129  00256E  C002  F058         	movff	?___flneg+1,roundf@y+1
  3130  002572  C003  F059         	movff	?___flneg+2,roundf@y+2
  3131  002576  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3132  00257A                     l3644:
  3133  00257A  C057  F041         	movff	roundf@y,?_roundf
  3134  00257E  C058  F042         	movff	roundf@y+1,?_roundf+1
  3135  002582  C059  F043         	movff	roundf@y+2,?_roundf+2
  3136  002586  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3137  00258A                     l1317:
  3138  00258A  0012               	return		;funcret
  3139  00258C                     __end_of_roundf:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function ___flsub *****************
  3143 ;; Defined at:
  3144 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  b               4   16[COMRAM] float 
  3147 ;;  a               4   20[COMRAM] float 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  4   16[COMRAM] float 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3159 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;Total ram usage:        8 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 1
  3166 ;; This function calls:
  3167 ;;		___fladd
  3168 ;; This function is called by:
  3169 ;;		_roundf
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text9
  3174  003C60                     __ptext9:
  3175                           	callstack 0
  3176  003C60                     ___flsub:
  3177                           	callstack 26
  3178  003C60  0E00               	movlw	0
  3179  003C62  1A15               	xorwf	___flsub@a^0,f,c
  3180  003C64  0E00               	movlw	0
  3181  003C66  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3182  003C68  0E00               	movlw	0
  3183  003C6A  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3184  003C6C  0E80               	movlw	128
  3185  003C6E  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3186  003C70  C011  F001         	movff	___flsub@b,___fladd@b
  3187  003C74  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3188  003C78  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3189  003C7C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3190  003C80  C015  F005         	movff	___flsub@a,___fladd@a
  3191  003C84  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3192  003C88  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3193  003C8C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3194  003C90  EC7A  F00C         	call	___fladd	;wreg free
  3195  003C94  C001  F011         	movff	?___fladd,?___flsub
  3196  003C98  C002  F012         	movff	?___fladd+1,?___flsub+1
  3197  003C9C  C003  F013         	movff	?___fladd+2,?___flsub+2
  3198  003CA0  C004  F014         	movff	?___fladd+3,?___flsub+3
  3199  003CA4  0012               	return		;funcret
  3200  003CA6                     __end_of___flsub:
  3201                           	callstack 0
  3202                           
  3203 ;; *************** function ___fladd *****************
  3204 ;; Defined at:
  3205 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  b               4    0[COMRAM] float 
  3208 ;;  a               4    4[COMRAM] float 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  grs             1   15[COMRAM] unsigned char 
  3211 ;;  bexp            1   14[COMRAM] unsigned char 
  3212 ;;  aexp            1   13[COMRAM] unsigned char 
  3213 ;;  signs           1   12[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  4    0[COMRAM] unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3227 ;;Total ram usage:       16 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		___flsub
  3233 ;;		_roundf
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text10
  3238  0018F4                     __ptext10:
  3239                           	callstack 0
  3240  0018F4                     ___fladd:
  3241                           	callstack 26
  3242  0018F4  5004               	movf	(___fladd@b+3)^0,w,c
  3243  0018F6  0B80               	andlw	128
  3244  0018F8  6E0D               	movwf	___fladd@signs^0,c
  3245  0018FA  5004               	movf	(___fladd@b+3)^0,w,c
  3246  0018FC  2404               	addwf	(___fladd@b+3)^0,w,c
  3247  0018FE  6E0F               	movwf	___fladd@bexp^0,c
  3248  001900  AE03               	btfss	(___fladd@b+2)^0,7,c
  3249  001902  EF85  F00C         	goto	u2351
  3250  001906  EF87  F00C         	goto	u2350
  3251  00190A                     u2351:
  3252  00190A  EF88  F00C         	goto	l3036
  3253  00190E                     u2350:
  3254  00190E  800F               	bsf	___fladd@bexp^0,0,c
  3255  001910                     l3036:
  3256  001910  500F               	movf	___fladd@bexp^0,w,c
  3257  001912  B4D8               	btfsc	status,2,c
  3258  001914  EF8E  F00C         	goto	u2361
  3259  001918  EF90  F00C         	goto	u2360
  3260  00191C                     u2361:
  3261  00191C  EFA5  F00C         	goto	l3046
  3262  001920                     u2360:
  3263  001920  280F               	incf	___fladd@bexp^0,w,c
  3264  001922  A4D8               	btfss	status,2,c
  3265  001924  EF96  F00C         	goto	u2371
  3266  001928  EF98  F00C         	goto	u2370
  3267  00192C                     u2371:
  3268  00192C  EFA0  F00C         	goto	l3042
  3269  001930                     u2370:
  3270  001930  0E00               	movlw	0
  3271  001932  6E01               	movwf	___fladd@b^0,c
  3272  001934  0E00               	movlw	0
  3273  001936  6E02               	movwf	(___fladd@b+1)^0,c
  3274  001938  0E00               	movlw	0
  3275  00193A  6E03               	movwf	(___fladd@b+2)^0,c
  3276  00193C  0E00               	movlw	0
  3277  00193E  6E04               	movwf	(___fladd@b+3)^0,c
  3278  001940                     l3042:
  3279  001940  8E03               	bsf	(___fladd@b+2)^0,7,c
  3280  001942  0E00               	movlw	0
  3281  001944  6E04               	movwf	(___fladd@b+3)^0,c
  3282  001946  EFAD  F00C         	goto	l3048
  3283  00194A                     l3046:
  3284  00194A  0E00               	movlw	0
  3285  00194C  6E01               	movwf	___fladd@b^0,c
  3286  00194E  0E00               	movlw	0
  3287  001950  6E02               	movwf	(___fladd@b+1)^0,c
  3288  001952  0E00               	movlw	0
  3289  001954  6E03               	movwf	(___fladd@b+2)^0,c
  3290  001956  0E00               	movlw	0
  3291  001958  6E04               	movwf	(___fladd@b+3)^0,c
  3292  00195A                     l3048:
  3293  00195A  5008               	movf	(___fladd@a+3)^0,w,c
  3294  00195C  0B80               	andlw	128
  3295  00195E  6E0E               	movwf	___fladd@aexp^0,c
  3296  001960  500D               	movf	___fladd@signs^0,w,c
  3297  001962  180E               	xorwf	___fladd@aexp^0,w,c
  3298  001964  B4D8               	btfsc	status,2,c
  3299  001966  EFB7  F00C         	goto	u2381
  3300  00196A  EFB9  F00C         	goto	u2380
  3301  00196E                     u2381:
  3302  00196E  EFBA  F00C         	goto	l3054
  3303  001972                     u2380:
  3304  001972  8C0D               	bsf	___fladd@signs^0,6,c
  3305  001974                     l3054:
  3306  001974  5008               	movf	(___fladd@a+3)^0,w,c
  3307  001976  2408               	addwf	(___fladd@a+3)^0,w,c
  3308  001978  6E0E               	movwf	___fladd@aexp^0,c
  3309  00197A  AE07               	btfss	(___fladd@a+2)^0,7,c
  3310  00197C  EFC2  F00C         	goto	u2391
  3311  001980  EFC4  F00C         	goto	u2390
  3312  001984                     u2391:
  3313  001984  EFC5  F00C         	goto	l3060
  3314  001988                     u2390:
  3315  001988  800E               	bsf	___fladd@aexp^0,0,c
  3316  00198A                     l3060:
  3317  00198A  500E               	movf	___fladd@aexp^0,w,c
  3318  00198C  B4D8               	btfsc	status,2,c
  3319  00198E  EFCB  F00C         	goto	u2401
  3320  001992  EFCD  F00C         	goto	u2400
  3321  001996                     u2401:
  3322  001996  EFE2  F00C         	goto	l3070
  3323  00199A                     u2400:
  3324  00199A  280E               	incf	___fladd@aexp^0,w,c
  3325  00199C  A4D8               	btfss	status,2,c
  3326  00199E  EFD3  F00C         	goto	u2411
  3327  0019A2  EFD5  F00C         	goto	u2410
  3328  0019A6                     u2411:
  3329  0019A6  EFDD  F00C         	goto	l3066
  3330  0019AA                     u2410:
  3331  0019AA  0E00               	movlw	0
  3332  0019AC  6E05               	movwf	___fladd@a^0,c
  3333  0019AE  0E00               	movlw	0
  3334  0019B0  6E06               	movwf	(___fladd@a+1)^0,c
  3335  0019B2  0E00               	movlw	0
  3336  0019B4  6E07               	movwf	(___fladd@a+2)^0,c
  3337  0019B6  0E00               	movlw	0
  3338  0019B8  6E08               	movwf	(___fladd@a+3)^0,c
  3339  0019BA                     l3066:
  3340  0019BA  8E07               	bsf	(___fladd@a+2)^0,7,c
  3341  0019BC  0E00               	movlw	0
  3342  0019BE  6E08               	movwf	(___fladd@a+3)^0,c
  3343  0019C0  EFEA  F00C         	goto	l3072
  3344  0019C4                     l3070:
  3345  0019C4  0E00               	movlw	0
  3346  0019C6  6E05               	movwf	___fladd@a^0,c
  3347  0019C8  0E00               	movlw	0
  3348  0019CA  6E06               	movwf	(___fladd@a+1)^0,c
  3349  0019CC  0E00               	movlw	0
  3350  0019CE  6E07               	movwf	(___fladd@a+2)^0,c
  3351  0019D0  0E00               	movlw	0
  3352  0019D2  6E08               	movwf	(___fladd@a+3)^0,c
  3353  0019D4                     l3072:
  3354  0019D4  500F               	movf	___fladd@bexp^0,w,c
  3355  0019D6  5C0E               	subwf	___fladd@aexp^0,w,c
  3356  0019D8  B0D8               	btfsc	status,0,c
  3357  0019DA  EFF1  F00C         	goto	u2421
  3358  0019DE  EFF3  F00C         	goto	u2420
  3359  0019E2                     u2421:
  3360  0019E2  EF1A  F00D         	goto	l3108
  3361  0019E6                     u2420:
  3362  0019E6  AC0D               	btfss	___fladd@signs^0,6,c
  3363  0019E8  EFF8  F00C         	goto	u2431
  3364  0019EC  EFFA  F00C         	goto	u2430
  3365  0019F0                     u2431:
  3366  0019F0  EFFC  F00C         	goto	l3078
  3367  0019F4                     u2430:
  3368  0019F4  0E80               	movlw	128
  3369  0019F6  1A0D               	xorwf	___fladd@signs^0,f,c
  3370  0019F8                     l3078:
  3371  0019F8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3372  0019FC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3373  001A00  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3374  001A04  C001  F010         	movff	___fladd@b,___fladd@grs
  3375  001A08  C005  F001         	movff	___fladd@a,___fladd@b
  3376  001A0C  C010  F005         	movff	___fladd@grs,___fladd@a
  3377  001A10  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3378  001A14  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3379  001A18  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3380  001A1C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3381  001A20  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3382  001A24  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3383  001A28  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3384  001A2C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3385  001A30  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3386  001A34                     l3108:
  3387  001A34  0E00               	movlw	0
  3388  001A36  6E10               	movwf	___fladd@grs^0,c
  3389  001A38  500F               	movf	___fladd@bexp^0,w,c
  3390  001A3A  C00E  F009         	movff	___fladd@aexp,??___fladd
  3391  001A3E  6A0A               	clrf	(??___fladd+1)^0,c
  3392  001A40  5E09               	subwf	??___fladd^0,f,c
  3393  001A42  0E00               	movlw	0
  3394  001A44  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3395  001A46  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3396  001A48  EF2F  F00D         	goto	u2441
  3397  001A4C  500A               	movf	(??___fladd+1)^0,w,c
  3398  001A4E  E109               	bnz	u2440
  3399  001A50  0E1A               	movlw	26
  3400  001A52  5C09               	subwf	??___fladd^0,w,c
  3401  001A54  A0D8               	btfss	status,0,c
  3402  001A56  EF2F  F00D         	goto	u2441
  3403  001A5A  EF31  F00D         	goto	u2440
  3404  001A5E                     u2441:
  3405  001A5E  EF68  F00D         	goto	l1053
  3406  001A62                     u2440:
  3407  001A62  5001               	movf	___fladd@b^0,w,c
  3408  001A64  1002               	iorwf	(___fladd@b+1)^0,w,c
  3409  001A66  1003               	iorwf	(___fladd@b+2)^0,w,c
  3410  001A68  1004               	iorwf	(___fladd@b+3)^0,w,c
  3411  001A6A  A4D8               	btfss	status,2,c
  3412  001A6C  EF3A  F00D         	goto	u2451
  3413  001A70  EF3D  F00D         	goto	u2450
  3414  001A74                     u2451:
  3415  001A74  0E01               	movlw	1
  3416  001A76  EF3E  F00D         	goto	u2460
  3417  001A7A                     u2450:
  3418  001A7A  0E00               	movlw	0
  3419  001A7C                     u2460:
  3420  001A7C  6E10               	movwf	___fladd@grs^0,c
  3421  001A7E  0E00               	movlw	0
  3422  001A80  6E01               	movwf	___fladd@b^0,c
  3423  001A82  0E00               	movlw	0
  3424  001A84  6E02               	movwf	(___fladd@b+1)^0,c
  3425  001A86  0E00               	movlw	0
  3426  001A88  6E03               	movwf	(___fladd@b+2)^0,c
  3427  001A8A  0E00               	movlw	0
  3428  001A8C  6E04               	movwf	(___fladd@b+3)^0,c
  3429  001A8E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3430  001A92  EF71  F00D         	goto	l1052
  3431  001A96                     l1054:
  3432  001A96  A010               	btfss	___fladd@grs^0,0,c
  3433  001A98  EF50  F00D         	goto	u2471
  3434  001A9C  EF52  F00D         	goto	u2470
  3435  001AA0                     u2471:
  3436  001AA0  EF58  F00D         	goto	l3120
  3437  001AA4                     u2470:
  3438  001AA4  90D8               	bcf	status,0,c
  3439  001AA6  3010               	rrcf	___fladd@grs^0,w,c
  3440  001AA8  0901               	iorlw	1
  3441  001AAA  6E10               	movwf	___fladd@grs^0,c
  3442  001AAC  EF5A  F00D         	goto	l3122
  3443  001AB0                     l3120:
  3444  001AB0  90D8               	bcf	status,0,c
  3445  001AB2  3210               	rrcf	___fladd@grs^0,f,c
  3446  001AB4                     l3122:
  3447  001AB4  A001               	btfss	___fladd@b^0,0,c
  3448  001AB6  EF5F  F00D         	goto	u2481
  3449  001ABA  EF61  F00D         	goto	u2480
  3450  001ABE                     u2481:
  3451  001ABE  EF62  F00D         	goto	l3126
  3452  001AC2                     u2480:
  3453  001AC2  8E10               	bsf	___fladd@grs^0,7,c
  3454  001AC4                     l3126:
  3455  001AC4  3404               	rlcf	(___fladd@b+3)^0,w,c
  3456  001AC6  3204               	rrcf	(___fladd@b+3)^0,f,c
  3457  001AC8  3203               	rrcf	(___fladd@b+2)^0,f,c
  3458  001ACA  3202               	rrcf	(___fladd@b+1)^0,f,c
  3459  001ACC  3201               	rrcf	___fladd@b^0,f,c
  3460  001ACE  2A0F               	incf	___fladd@bexp^0,f,c
  3461  001AD0                     l1053:
  3462  001AD0  500E               	movf	___fladd@aexp^0,w,c
  3463  001AD2  5C0F               	subwf	___fladd@bexp^0,w,c
  3464  001AD4  A0D8               	btfss	status,0,c
  3465  001AD6  EF6F  F00D         	goto	u2491
  3466  001ADA  EF71  F00D         	goto	u2490
  3467  001ADE                     u2491:
  3468  001ADE  EF4B  F00D         	goto	l1054
  3469  001AE2                     u2490:
  3470  001AE2                     l1052:
  3471  001AE2  BC0D               	btfsc	___fladd@signs^0,6,c
  3472  001AE4  EF76  F00D         	goto	u2501
  3473  001AE8  EF78  F00D         	goto	u2500
  3474  001AEC                     u2501:
  3475  001AEC  EFB8  F00D         	goto	l3154
  3476  001AF0                     u2500:
  3477  001AF0  500F               	movf	___fladd@bexp^0,w,c
  3478  001AF2  A4D8               	btfss	status,2,c
  3479  001AF4  EF7E  F00D         	goto	u2511
  3480  001AF8  EF80  F00D         	goto	u2510
  3481  001AFC                     u2511:
  3482  001AFC  EF8A  F00D         	goto	l3136
  3483  001B00                     u2510:
  3484  001B00  0E00               	movlw	0
  3485  001B02  6E01               	movwf	?___fladd^0,c
  3486  001B04  0E00               	movlw	0
  3487  001B06  6E02               	movwf	(?___fladd+1)^0,c
  3488  001B08  0E00               	movlw	0
  3489  001B0A  6E03               	movwf	(?___fladd+2)^0,c
  3490  001B0C  0E00               	movlw	0
  3491  001B0E  6E04               	movwf	(?___fladd+3)^0,c
  3492  001B10  EFD9  F00E         	goto	l1061
  3493  001B14                     l3136:
  3494  001B14  5005               	movf	___fladd@a^0,w,c
  3495  001B16  2601               	addwf	___fladd@b^0,f,c
  3496  001B18  5006               	movf	(___fladd@a+1)^0,w,c
  3497  001B1A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3498  001B1C  5007               	movf	(___fladd@a+2)^0,w,c
  3499  001B1E  2203               	addwfc	(___fladd@b+2)^0,f,c
  3500  001B20  5008               	movf	(___fladd@a+3)^0,w,c
  3501  001B22  2204               	addwfc	(___fladd@b+3)^0,f,c
  3502  001B24  A004               	btfss	(___fladd@b+3)^0,0,c
  3503  001B26  EF97  F00D         	goto	u2521
  3504  001B2A  EF99  F00D         	goto	u2520
  3505  001B2E                     u2521:
  3506  001B2E  EF45  F00E         	goto	l3190
  3507  001B32                     u2520:
  3508  001B32  A010               	btfss	___fladd@grs^0,0,c
  3509  001B34  EF9E  F00D         	goto	u2531
  3510  001B38  EFA0  F00D         	goto	u2530
  3511  001B3C                     u2531:
  3512  001B3C  EFA6  F00D         	goto	l3144
  3513  001B40                     u2530:
  3514  001B40  90D8               	bcf	status,0,c
  3515  001B42  3010               	rrcf	___fladd@grs^0,w,c
  3516  001B44  0901               	iorlw	1
  3517  001B46  6E10               	movwf	___fladd@grs^0,c
  3518  001B48  EFA8  F00D         	goto	l3146
  3519  001B4C                     l3144:
  3520  001B4C  90D8               	bcf	status,0,c
  3521  001B4E  3210               	rrcf	___fladd@grs^0,f,c
  3522  001B50                     l3146:
  3523  001B50  A001               	btfss	___fladd@b^0,0,c
  3524  001B52  EFAD  F00D         	goto	u2541
  3525  001B56  EFAF  F00D         	goto	u2540
  3526  001B5A                     u2541:
  3527  001B5A  EFB0  F00D         	goto	l3150
  3528  001B5E                     u2540:
  3529  001B5E  8E10               	bsf	___fladd@grs^0,7,c
  3530  001B60                     l3150:
  3531  001B60  3404               	rlcf	(___fladd@b+3)^0,w,c
  3532  001B62  3204               	rrcf	(___fladd@b+3)^0,f,c
  3533  001B64  3203               	rrcf	(___fladd@b+2)^0,f,c
  3534  001B66  3202               	rrcf	(___fladd@b+1)^0,f,c
  3535  001B68  3201               	rrcf	___fladd@b^0,f,c
  3536  001B6A  2A0F               	incf	___fladd@bexp^0,f,c
  3537  001B6C  EF45  F00E         	goto	l3190
  3538  001B70                     l3154:
  3539  001B70  5005               	movf	___fladd@a^0,w,c
  3540  001B72  5C01               	subwf	___fladd@b^0,w,c
  3541  001B74  5006               	movf	(___fladd@a+1)^0,w,c
  3542  001B76  5802               	subwfb	(___fladd@b+1)^0,w,c
  3543  001B78  5007               	movf	(___fladd@a+2)^0,w,c
  3544  001B7A  5803               	subwfb	(___fladd@b+2)^0,w,c
  3545  001B7C  5004               	movf	(___fladd@b+3)^0,w,c
  3546  001B7E  0A80               	xorlw	128
  3547  001B80  6E09               	movwf	??___fladd^0,c
  3548  001B82  5008               	movf	(___fladd@a+3)^0,w,c
  3549  001B84  0A80               	xorlw	128
  3550  001B86  5809               	subwfb	??___fladd^0,w,c
  3551  001B88  B0D8               	btfsc	status,0,c
  3552  001B8A  EFC9  F00D         	goto	u2551
  3553  001B8E  EFCB  F00D         	goto	u2550
  3554  001B92                     u2551:
  3555  001B92  EFF6  F00D         	goto	l3164
  3556  001B96                     u2550:
  3557  001B96  5001               	movf	___fladd@b^0,w,c
  3558  001B98  5C05               	subwf	___fladd@a^0,w,c
  3559  001B9A  6E09               	movwf	??___fladd^0,c
  3560  001B9C  5002               	movf	(___fladd@b+1)^0,w,c
  3561  001B9E  5806               	subwfb	(___fladd@a+1)^0,w,c
  3562  001BA0  6E0A               	movwf	(??___fladd+1)^0,c
  3563  001BA2  5003               	movf	(___fladd@b+2)^0,w,c
  3564  001BA4  5807               	subwfb	(___fladd@a+2)^0,w,c
  3565  001BA6  6E0B               	movwf	(??___fladd+2)^0,c
  3566  001BA8  5004               	movf	(___fladd@b+3)^0,w,c
  3567  001BAA  5808               	subwfb	(___fladd@a+3)^0,w,c
  3568  001BAC  6E0C               	movwf	(??___fladd+3)^0,c
  3569  001BAE  0EFF               	movlw	255
  3570  001BB0  2409               	addwf	??___fladd^0,w,c
  3571  001BB2  6E01               	movwf	___fladd@b^0,c
  3572  001BB4  0EFF               	movlw	255
  3573  001BB6  200A               	addwfc	(??___fladd+1)^0,w,c
  3574  001BB8  6E02               	movwf	(___fladd@b+1)^0,c
  3575  001BBA  0EFF               	movlw	255
  3576  001BBC  200B               	addwfc	(??___fladd+2)^0,w,c
  3577  001BBE  6E03               	movwf	(___fladd@b+2)^0,c
  3578  001BC0  0EFF               	movlw	255
  3579  001BC2  200C               	addwfc	(??___fladd+3)^0,w,c
  3580  001BC4  6E04               	movwf	(___fladd@b+3)^0,c
  3581  001BC6  0E80               	movlw	128
  3582  001BC8  1A0D               	xorwf	___fladd@signs^0,f,c
  3583  001BCA  6C10               	negf	___fladd@grs^0,c
  3584  001BCC  5010               	movf	___fladd@grs^0,w,c
  3585  001BCE  A4D8               	btfss	status,2,c
  3586  001BD0  EFEC  F00D         	goto	u2561
  3587  001BD4  EFEE  F00D         	goto	u2560
  3588  001BD8                     u2561:
  3589  001BD8  EFFE  F00D         	goto	l1069
  3590  001BDC                     u2560:
  3591  001BDC  0E01               	movlw	1
  3592  001BDE  2601               	addwf	___fladd@b^0,f,c
  3593  001BE0  0E00               	movlw	0
  3594  001BE2  2202               	addwfc	(___fladd@b+1)^0,f,c
  3595  001BE4  2203               	addwfc	(___fladd@b+2)^0,f,c
  3596  001BE6  2204               	addwfc	(___fladd@b+3)^0,f,c
  3597  001BE8  EFFE  F00D         	goto	l1069
  3598  001BEC                     l3164:
  3599  001BEC  5005               	movf	___fladd@a^0,w,c
  3600  001BEE  5E01               	subwf	___fladd@b^0,f,c
  3601  001BF0  5006               	movf	(___fladd@a+1)^0,w,c
  3602  001BF2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3603  001BF4  5007               	movf	(___fladd@a+2)^0,w,c
  3604  001BF6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3605  001BF8  5008               	movf	(___fladd@a+3)^0,w,c
  3606  001BFA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3607  001BFC                     l1069:
  3608  001BFC  5001               	movf	___fladd@b^0,w,c
  3609  001BFE  1002               	iorwf	(___fladd@b+1)^0,w,c
  3610  001C00  1003               	iorwf	(___fladd@b+2)^0,w,c
  3611  001C02  1004               	iorwf	(___fladd@b+3)^0,w,c
  3612  001C04  A4D8               	btfss	status,2,c
  3613  001C06  EF07  F00E         	goto	u2571
  3614  001C0A  EF09  F00E         	goto	u2570
  3615  001C0E                     u2571:
  3616  001C0E  EF3E  F00E         	goto	l3188
  3617  001C12                     u2570:
  3618  001C12  5010               	movf	___fladd@grs^0,w,c
  3619  001C14  A4D8               	btfss	status,2,c
  3620  001C16  EF0F  F00E         	goto	u2581
  3621  001C1A  EF11  F00E         	goto	u2580
  3622  001C1E                     u2581:
  3623  001C1E  EF3E  F00E         	goto	l3188
  3624  001C22                     u2580:
  3625  001C22  0E00               	movlw	0
  3626  001C24  6E01               	movwf	?___fladd^0,c
  3627  001C26  0E00               	movlw	0
  3628  001C28  6E02               	movwf	(?___fladd+1)^0,c
  3629  001C2A  0E00               	movlw	0
  3630  001C2C  6E03               	movwf	(?___fladd+2)^0,c
  3631  001C2E  0E00               	movlw	0
  3632  001C30  6E04               	movwf	(?___fladd+3)^0,c
  3633  001C32  EFD9  F00E         	goto	l1061
  3634  001C36                     l3172:
  3635  001C36  90D8               	bcf	status,0,c
  3636  001C38  3601               	rlcf	___fladd@b^0,f,c
  3637  001C3A  3602               	rlcf	(___fladd@b+1)^0,f,c
  3638  001C3C  3603               	rlcf	(___fladd@b+2)^0,f,c
  3639  001C3E  3604               	rlcf	(___fladd@b+3)^0,f,c
  3640  001C40  AE10               	btfss	___fladd@grs^0,7,c
  3641  001C42  EF25  F00E         	goto	u2591
  3642  001C46  EF27  F00E         	goto	u2590
  3643  001C4A                     u2591:
  3644  001C4A  EF28  F00E         	goto	l3178
  3645  001C4E                     u2590:
  3646  001C4E  8001               	bsf	___fladd@b^0,0,c
  3647  001C50                     l3178:
  3648  001C50  A010               	btfss	___fladd@grs^0,0,c
  3649  001C52  EF2D  F00E         	goto	u2601
  3650  001C56  EF2F  F00E         	goto	u2600
  3651  001C5A                     u2601:
  3652  001C5A  EF33  F00E         	goto	l3182
  3653  001C5E                     u2600:
  3654  001C5E  80D8               	bsf	status,0,c
  3655  001C60  3610               	rlcf	___fladd@grs^0,f,c
  3656  001C62  EF35  F00E         	goto	l3184
  3657  001C66                     l3182:
  3658  001C66  90D8               	bcf	status,0,c
  3659  001C68  3610               	rlcf	___fladd@grs^0,f,c
  3660  001C6A                     l3184:
  3661  001C6A  500F               	movf	___fladd@bexp^0,w,c
  3662  001C6C  B4D8               	btfsc	status,2,c
  3663  001C6E  EF3B  F00E         	goto	u2611
  3664  001C72  EF3D  F00E         	goto	u2610
  3665  001C76                     u2611:
  3666  001C76  EF3E  F00E         	goto	l3188
  3667  001C7A                     u2610:
  3668  001C7A  060F               	decf	___fladd@bexp^0,f,c
  3669  001C7C                     l3188:
  3670  001C7C  AE03               	btfss	(___fladd@b+2)^0,7,c
  3671  001C7E  EF43  F00E         	goto	u2621
  3672  001C82  EF45  F00E         	goto	u2620
  3673  001C86                     u2621:
  3674  001C86  EF1B  F00E         	goto	l3172
  3675  001C8A                     u2620:
  3676  001C8A                     l3190:
  3677  001C8A  0E00               	movlw	0
  3678  001C8C  6E0E               	movwf	___fladd@aexp^0,c
  3679  001C8E  AE10               	btfss	___fladd@grs^0,7,c
  3680  001C90  EF4C  F00E         	goto	u2631
  3681  001C94  EF4E  F00E         	goto	u2630
  3682  001C98                     u2631:
  3683  001C98  EF66  F00E         	goto	l1078
  3684  001C9C                     u2630:
  3685  001C9C  C010  F009         	movff	___fladd@grs,??___fladd
  3686  001CA0  0E7F               	movlw	127
  3687  001CA2  1609               	andwf	??___fladd^0,f,c
  3688  001CA4  B4D8               	btfsc	status,2,c
  3689  001CA6  EF57  F00E         	goto	u2641
  3690  001CAA  EF59  F00E         	goto	u2640
  3691  001CAE                     u2641:
  3692  001CAE  EF5D  F00E         	goto	l1079
  3693  001CB2                     u2640:
  3694  001CB2                     l3196:
  3695  001CB2  0E01               	movlw	1
  3696  001CB4  6E0E               	movwf	___fladd@aexp^0,c
  3697  001CB6  EF66  F00E         	goto	l1078
  3698  001CBA                     l1079:
  3699  001CBA  A001               	btfss	___fladd@b^0,0,c
  3700  001CBC  EF62  F00E         	goto	u2651
  3701  001CC0  EF64  F00E         	goto	u2650
  3702  001CC4                     u2651:
  3703  001CC4  EF66  F00E         	goto	l1078
  3704  001CC8                     u2650:
  3705  001CC8  EF59  F00E         	goto	l3196
  3706  001CCC                     l1078:
  3707  001CCC  500E               	movf	___fladd@aexp^0,w,c
  3708  001CCE  B4D8               	btfsc	status,2,c
  3709  001CD0  EF6C  F00E         	goto	u2661
  3710  001CD4  EF6E  F00E         	goto	u2660
  3711  001CD8                     u2661:
  3712  001CD8  EF99  F00E         	goto	l3208
  3713  001CDC                     u2660:
  3714  001CDC  0E01               	movlw	1
  3715  001CDE  2601               	addwf	___fladd@b^0,f,c
  3716  001CE0  0E00               	movlw	0
  3717  001CE2  2202               	addwfc	(___fladd@b+1)^0,f,c
  3718  001CE4  2203               	addwfc	(___fladd@b+2)^0,f,c
  3719  001CE6  2204               	addwfc	(___fladd@b+3)^0,f,c
  3720  001CE8  A004               	btfss	(___fladd@b+3)^0,0,c
  3721  001CEA  EF79  F00E         	goto	u2671
  3722  001CEE  EF7B  F00E         	goto	u2670
  3723  001CF2                     u2671:
  3724  001CF2  EF99  F00E         	goto	l3208
  3725  001CF6                     u2670:
  3726  001CF6  C001  F009         	movff	___fladd@b,??___fladd
  3727  001CFA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3728  001CFE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3729  001D02  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3730  001D06  340C               	rlcf	(??___fladd+3)^0,w,c
  3731  001D08  320C               	rrcf	(??___fladd+3)^0,f,c
  3732  001D0A  320B               	rrcf	(??___fladd+2)^0,f,c
  3733  001D0C  320A               	rrcf	(??___fladd+1)^0,f,c
  3734  001D0E  3209               	rrcf	??___fladd^0,f,c
  3735  001D10  C009  F001         	movff	??___fladd,___fladd@b
  3736  001D14  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3737  001D18  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3738  001D1C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3739  001D20  280F               	incf	___fladd@bexp^0,w,c
  3740  001D22  B4D8               	btfsc	status,2,c
  3741  001D24  EF96  F00E         	goto	u2681
  3742  001D28  EF98  F00E         	goto	u2680
  3743  001D2C                     u2681:
  3744  001D2C  EF99  F00E         	goto	l3208
  3745  001D30                     u2680:
  3746  001D30  2A0F               	incf	___fladd@bexp^0,f,c
  3747  001D32                     l3208:
  3748  001D32  280F               	incf	___fladd@bexp^0,w,c
  3749  001D34  B4D8               	btfsc	status,2,c
  3750  001D36  EF9F  F00E         	goto	u2691
  3751  001D3A  EFA1  F00E         	goto	u2690
  3752  001D3E                     u2691:
  3753  001D3E  EFA9  F00E         	goto	l3212
  3754  001D42                     u2690:
  3755  001D42  500F               	movf	___fladd@bexp^0,w,c
  3756  001D44  A4D8               	btfss	status,2,c
  3757  001D46  EFA7  F00E         	goto	u2701
  3758  001D4A  EFA9  F00E         	goto	u2700
  3759  001D4E                     u2701:
  3760  001D4E  EFBB  F00E         	goto	l3216
  3761  001D52                     u2700:
  3762  001D52                     l3212:
  3763  001D52  0E00               	movlw	0
  3764  001D54  6E01               	movwf	___fladd@b^0,c
  3765  001D56  0E00               	movlw	0
  3766  001D58  6E02               	movwf	(___fladd@b+1)^0,c
  3767  001D5A  0E00               	movlw	0
  3768  001D5C  6E03               	movwf	(___fladd@b+2)^0,c
  3769  001D5E  0E00               	movlw	0
  3770  001D60  6E04               	movwf	(___fladd@b+3)^0,c
  3771  001D62  500F               	movf	___fladd@bexp^0,w,c
  3772  001D64  A4D8               	btfss	status,2,c
  3773  001D66  EFB7  F00E         	goto	u2711
  3774  001D6A  EFB9  F00E         	goto	u2710
  3775  001D6E                     u2711:
  3776  001D6E  EFBB  F00E         	goto	l3216
  3777  001D72                     u2710:
  3778  001D72  0E00               	movlw	0
  3779  001D74  6E0D               	movwf	___fladd@signs^0,c
  3780  001D76                     l3216:
  3781  001D76  A00F               	btfss	___fladd@bexp^0,0,c
  3782  001D78  EFC0  F00E         	goto	u2721
  3783  001D7C  EFC2  F00E         	goto	u2720
  3784  001D80                     u2721:
  3785  001D80  EFC5  F00E         	goto	l3220
  3786  001D84                     u2720:
  3787  001D84  8E03               	bsf	(___fladd@b+2)^0,7,c
  3788  001D86  EFC6  F00E         	goto	l3222
  3789  001D8A                     l3220:
  3790  001D8A  9E03               	bcf	(___fladd@b+2)^0,7,c
  3791  001D8C                     l3222:
  3792  001D8C  90D8               	bcf	status,0,c
  3793  001D8E  300F               	rrcf	___fladd@bexp^0,w,c
  3794  001D90  6E04               	movwf	(___fladd@b+3)^0,c
  3795  001D92  AE0D               	btfss	___fladd@signs^0,7,c
  3796  001D94  EFCE  F00E         	goto	u2731
  3797  001D98  EFD0  F00E         	goto	u2730
  3798  001D9C                     u2731:
  3799  001D9C  EFD1  F00E         	goto	l3228
  3800  001DA0                     u2730:
  3801  001DA0  8E04               	bsf	(___fladd@b+3)^0,7,c
  3802  001DA2                     l3228:
  3803  001DA2  C001  F001         	movff	___fladd@b,?___fladd
  3804  001DA6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3805  001DAA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3806  001DAE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3807  001DB2                     l1061:
  3808  001DB2  0012               	return		;funcret
  3809  001DB4                     __end_of___fladd:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function ___flneg *****************
  3813 ;; Defined at:
  3814 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  f1              4    0[COMRAM] unsigned char 
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  4    0[COMRAM] unsigned char 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2, status,0
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3832 ;;Total ram usage:        4 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; This function calls:
  3835 ;;		Nothing
  3836 ;; This function is called by:
  3837 ;;		_roundf
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text11
  3842  003E5A                     __ptext11:
  3843                           	callstack 0
  3844  003E5A                     ___flneg:
  3845                           	callstack 27
  3846  003E5A  5001               	movf	___flneg@f1^0,w,c
  3847  003E5C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3848  003E5E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3849  003E60  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3850  003E62  B4D8               	btfsc	status,2,c
  3851  003E64  EF36  F01F         	goto	u3151
  3852  003E68  EF38  F01F         	goto	u3150
  3853  003E6C                     u3151:
  3854  003E6C  EF40  F01F         	goto	l3486
  3855  003E70                     u3150:
  3856  003E70  0E00               	movlw	0
  3857  003E72  1A01               	xorwf	___flneg@f1^0,f,c
  3858  003E74  0E00               	movlw	0
  3859  003E76  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3860  003E78  0E00               	movlw	0
  3861  003E7A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  3862  003E7C  0E80               	movlw	128
  3863  003E7E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  3864  003E80                     l3486:
  3865  003E80  C001  F001         	movff	___flneg@f1,?___flneg
  3866  003E84  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  3867  003E88  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  3868  003E8C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  3869  003E90  0012               	return		;funcret
  3870  003E92                     __end_of___flneg:
  3871                           	callstack 0
  3872                           
  3873 ;; *************** function ___flmul *****************
  3874 ;; Defined at:
  3875 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;  b               4   39[COMRAM] unsigned char 
  3878 ;;  a               4   43[COMRAM] unsigned char 
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;  prod            4   58[COMRAM] struct .
  3881 ;;  grs             4   52[COMRAM] unsigned long 
  3882 ;;  temp            2   62[COMRAM] struct .
  3883 ;;  bexp            1   57[COMRAM] unsigned char 
  3884 ;;  aexp            1   56[COMRAM] unsigned char 
  3885 ;;  sign            1   51[COMRAM] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  4   39[COMRAM] unsigned char 
  3888 ;; Registers used:
  3889 ;;		wreg, status,2, status,0, prodl, prodh
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3895 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3896 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;Total ram usage:       25 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; This function calls:
  3902 ;;		Nothing
  3903 ;; This function is called by:
  3904 ;;		_detect_color
  3905 ;;		_roundf
  3906 ;;		_check_color_reading
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text12
  3911  001DB4                     __ptext12:
  3912                           	callstack 0
  3913  001DB4                     ___flmul:
  3914                           	callstack 27
  3915  001DB4  502B               	movf	(___flmul@b+3)^0,w,c
  3916  001DB6  0B80               	andlw	128
  3917  001DB8  6E34               	movwf	___flmul@sign^0,c
  3918  001DBA  502B               	movf	(___flmul@b+3)^0,w,c
  3919  001DBC  242B               	addwf	(___flmul@b+3)^0,w,c
  3920  001DBE  6E3A               	movwf	___flmul@bexp^0,c
  3921  001DC0  AE2A               	btfss	(___flmul@b+2)^0,7,c
  3922  001DC2  EFE5  F00E         	goto	u2911
  3923  001DC6  EFE7  F00E         	goto	u2910
  3924  001DCA                     u2911:
  3925  001DCA  EFE8  F00E         	goto	l3330
  3926  001DCE                     u2910:
  3927  001DCE  803A               	bsf	___flmul@bexp^0,0,c
  3928  001DD0                     l3330:
  3929  001DD0  503A               	movf	___flmul@bexp^0,w,c
  3930  001DD2  B4D8               	btfsc	status,2,c
  3931  001DD4  EFEE  F00E         	goto	u2921
  3932  001DD8  EFF0  F00E         	goto	u2920
  3933  001DDC                     u2921:
  3934  001DDC  EF03  F00F         	goto	l3338
  3935  001DE0                     u2920:
  3936  001DE0  283A               	incf	___flmul@bexp^0,w,c
  3937  001DE2  A4D8               	btfss	status,2,c
  3938  001DE4  EFF6  F00E         	goto	u2931
  3939  001DE8  EFF8  F00E         	goto	u2930
  3940  001DEC                     u2931:
  3941  001DEC  EF00  F00F         	goto	l3336
  3942  001DF0                     u2930:
  3943  001DF0  0E00               	movlw	0
  3944  001DF2  6E28               	movwf	___flmul@b^0,c
  3945  001DF4  0E00               	movlw	0
  3946  001DF6  6E29               	movwf	(___flmul@b+1)^0,c
  3947  001DF8  0E00               	movlw	0
  3948  001DFA  6E2A               	movwf	(___flmul@b+2)^0,c
  3949  001DFC  0E00               	movlw	0
  3950  001DFE  6E2B               	movwf	(___flmul@b+3)^0,c
  3951  001E00                     l3336:
  3952  001E00  8E2A               	bsf	(___flmul@b+2)^0,7,c
  3953  001E02  EF0B  F00F         	goto	l3340
  3954  001E06                     l3338:
  3955  001E06  0E00               	movlw	0
  3956  001E08  6E28               	movwf	___flmul@b^0,c
  3957  001E0A  0E00               	movlw	0
  3958  001E0C  6E29               	movwf	(___flmul@b+1)^0,c
  3959  001E0E  0E00               	movlw	0
  3960  001E10  6E2A               	movwf	(___flmul@b+2)^0,c
  3961  001E12  0E00               	movlw	0
  3962  001E14  6E2B               	movwf	(___flmul@b+3)^0,c
  3963  001E16                     l3340:
  3964  001E16  502F               	movf	(___flmul@a+3)^0,w,c
  3965  001E18  0B80               	andlw	128
  3966  001E1A  1A34               	xorwf	___flmul@sign^0,f,c
  3967  001E1C  502F               	movf	(___flmul@a+3)^0,w,c
  3968  001E1E  242F               	addwf	(___flmul@a+3)^0,w,c
  3969  001E20  6E39               	movwf	___flmul@aexp^0,c
  3970  001E22  AE2E               	btfss	(___flmul@a+2)^0,7,c
  3971  001E24  EF16  F00F         	goto	u2941
  3972  001E28  EF18  F00F         	goto	u2940
  3973  001E2C                     u2941:
  3974  001E2C  EF19  F00F         	goto	l3348
  3975  001E30                     u2940:
  3976  001E30  8039               	bsf	___flmul@aexp^0,0,c
  3977  001E32                     l3348:
  3978  001E32  5039               	movf	___flmul@aexp^0,w,c
  3979  001E34  B4D8               	btfsc	status,2,c
  3980  001E36  EF1F  F00F         	goto	u2951
  3981  001E3A  EF21  F00F         	goto	u2950
  3982  001E3E                     u2951:
  3983  001E3E  EF34  F00F         	goto	l3356
  3984  001E42                     u2950:
  3985  001E42  2839               	incf	___flmul@aexp^0,w,c
  3986  001E44  A4D8               	btfss	status,2,c
  3987  001E46  EF27  F00F         	goto	u2961
  3988  001E4A  EF29  F00F         	goto	u2960
  3989  001E4E                     u2961:
  3990  001E4E  EF31  F00F         	goto	l3354
  3991  001E52                     u2960:
  3992  001E52  0E00               	movlw	0
  3993  001E54  6E2C               	movwf	___flmul@a^0,c
  3994  001E56  0E00               	movlw	0
  3995  001E58  6E2D               	movwf	(___flmul@a+1)^0,c
  3996  001E5A  0E00               	movlw	0
  3997  001E5C  6E2E               	movwf	(___flmul@a+2)^0,c
  3998  001E5E  0E00               	movlw	0
  3999  001E60  6E2F               	movwf	(___flmul@a+3)^0,c
  4000  001E62                     l3354:
  4001  001E62  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4002  001E64  EF3C  F00F         	goto	l1138
  4003  001E68                     l3356:
  4004  001E68  0E00               	movlw	0
  4005  001E6A  6E2C               	movwf	___flmul@a^0,c
  4006  001E6C  0E00               	movlw	0
  4007  001E6E  6E2D               	movwf	(___flmul@a+1)^0,c
  4008  001E70  0E00               	movlw	0
  4009  001E72  6E2E               	movwf	(___flmul@a+2)^0,c
  4010  001E74  0E00               	movlw	0
  4011  001E76  6E2F               	movwf	(___flmul@a+3)^0,c
  4012  001E78                     l1138:
  4013  001E78  5039               	movf	___flmul@aexp^0,w,c
  4014  001E7A  B4D8               	btfsc	status,2,c
  4015  001E7C  EF42  F00F         	goto	u2971
  4016  001E80  EF44  F00F         	goto	u2970
  4017  001E84                     u2971:
  4018  001E84  EF4C  F00F         	goto	l3360
  4019  001E88                     u2970:
  4020  001E88  503A               	movf	___flmul@bexp^0,w,c
  4021  001E8A  A4D8               	btfss	status,2,c
  4022  001E8C  EF4A  F00F         	goto	u2981
  4023  001E90  EF4C  F00F         	goto	u2980
  4024  001E94                     u2981:
  4025  001E94  EF56  F00F         	goto	l3364
  4026  001E98                     u2980:
  4027  001E98                     l3360:
  4028  001E98  0E00               	movlw	0
  4029  001E9A  6E28               	movwf	?___flmul^0,c
  4030  001E9C  0E00               	movlw	0
  4031  001E9E  6E29               	movwf	(?___flmul+1)^0,c
  4032  001EA0  0E00               	movlw	0
  4033  001EA2  6E2A               	movwf	(?___flmul+2)^0,c
  4034  001EA4  0E00               	movlw	0
  4035  001EA6  6E2B               	movwf	(?___flmul+3)^0,c
  4036  001EA8  EFEE  F010         	goto	l1142
  4037  001EAC                     l3364:
  4038  001EAC  502E               	movf	(___flmul@a+2)^0,w,c
  4039  001EAE  0228               	mulwf	___flmul@b^0,c
  4040  001EB0  CFF3 F03F          	movff	prodl,___flmul@temp
  4041  001EB4  CFF4 F040          	movff	prodh,___flmul@temp+1
  4042  001EB8  503F               	movf	___flmul@temp^0,w,c
  4043  001EBA  6E35               	movwf	___flmul@grs^0,c
  4044  001EBC  6A36               	clrf	(___flmul@grs+1)^0,c
  4045  001EBE  6A37               	clrf	(___flmul@grs+2)^0,c
  4046  001EC0  6A38               	clrf	(___flmul@grs+3)^0,c
  4047  001EC2  5040               	movf	(___flmul@temp+1)^0,w,c
  4048  001EC4  6E3B               	movwf	___flmul@prod^0,c
  4049  001EC6  6A3C               	clrf	(___flmul@prod+1)^0,c
  4050  001EC8  6A3D               	clrf	(___flmul@prod+2)^0,c
  4051  001ECA  6A3E               	clrf	(___flmul@prod+3)^0,c
  4052  001ECC  502D               	movf	(___flmul@a+1)^0,w,c
  4053  001ECE  0229               	mulwf	(___flmul@b+1)^0,c
  4054  001ED0  CFF3 F03F          	movff	prodl,___flmul@temp
  4055  001ED4  CFF4 F040          	movff	prodh,___flmul@temp+1
  4056  001ED8  503F               	movf	___flmul@temp^0,w,c
  4057  001EDA  2635               	addwf	___flmul@grs^0,f,c
  4058  001EDC  0E00               	movlw	0
  4059  001EDE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4060  001EE0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4061  001EE2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4062  001EE4  5040               	movf	(___flmul@temp+1)^0,w,c
  4063  001EE6  263B               	addwf	___flmul@prod^0,f,c
  4064  001EE8  0E00               	movlw	0
  4065  001EEA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4066  001EEC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4067  001EEE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4068  001EF0  502C               	movf	___flmul@a^0,w,c
  4069  001EF2  022A               	mulwf	(___flmul@b+2)^0,c
  4070  001EF4  CFF3 F03F          	movff	prodl,___flmul@temp
  4071  001EF8  CFF4 F040          	movff	prodh,___flmul@temp+1
  4072  001EFC  503F               	movf	___flmul@temp^0,w,c
  4073  001EFE  2635               	addwf	___flmul@grs^0,f,c
  4074  001F00  0E00               	movlw	0
  4075  001F02  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4076  001F04  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4077  001F06  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4078  001F08  5040               	movf	(___flmul@temp+1)^0,w,c
  4079  001F0A  263B               	addwf	___flmul@prod^0,f,c
  4080  001F0C  0E00               	movlw	0
  4081  001F0E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4082  001F10  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4083  001F12  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4084  001F14  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4085  001F18  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4086  001F1C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4087  001F20  6A35               	clrf	___flmul@grs^0,c
  4088  001F22  502C               	movf	___flmul@a^0,w,c
  4089  001F24  0229               	mulwf	(___flmul@b+1)^0,c
  4090  001F26  CFF3 F03F          	movff	prodl,___flmul@temp
  4091  001F2A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4092  001F2E  503F               	movf	___flmul@temp^0,w,c
  4093  001F30  2635               	addwf	___flmul@grs^0,f,c
  4094  001F32  5040               	movf	(___flmul@temp+1)^0,w,c
  4095  001F34  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4096  001F36  0E00               	movlw	0
  4097  001F38  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4098  001F3A  0E00               	movlw	0
  4099  001F3C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4100  001F3E  502D               	movf	(___flmul@a+1)^0,w,c
  4101  001F40  0228               	mulwf	___flmul@b^0,c
  4102  001F42  CFF3 F03F          	movff	prodl,___flmul@temp
  4103  001F46  CFF4 F040          	movff	prodh,___flmul@temp+1
  4104  001F4A  503F               	movf	___flmul@temp^0,w,c
  4105  001F4C  2635               	addwf	___flmul@grs^0,f,c
  4106  001F4E  5040               	movf	(___flmul@temp+1)^0,w,c
  4107  001F50  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4108  001F52  0E00               	movlw	0
  4109  001F54  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4110  001F56  0E00               	movlw	0
  4111  001F58  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4112  001F5A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4113  001F5E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4114  001F62  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4115  001F66  6A35               	clrf	___flmul@grs^0,c
  4116  001F68  502C               	movf	___flmul@a^0,w,c
  4117  001F6A  0228               	mulwf	___flmul@b^0,c
  4118  001F6C  CFF3 F03F          	movff	prodl,___flmul@temp
  4119  001F70  CFF4 F040          	movff	prodh,___flmul@temp+1
  4120  001F74  503F               	movf	___flmul@temp^0,w,c
  4121  001F76  2635               	addwf	___flmul@grs^0,f,c
  4122  001F78  5040               	movf	(___flmul@temp+1)^0,w,c
  4123  001F7A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4124  001F7C  0E00               	movlw	0
  4125  001F7E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4126  001F80  0E00               	movlw	0
  4127  001F82  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4128  001F84  502E               	movf	(___flmul@a+2)^0,w,c
  4129  001F86  0229               	mulwf	(___flmul@b+1)^0,c
  4130  001F88  CFF3 F03F          	movff	prodl,___flmul@temp
  4131  001F8C  CFF4 F040          	movff	prodh,___flmul@temp+1
  4132  001F90  503F               	movf	___flmul@temp^0,w,c
  4133  001F92  263B               	addwf	___flmul@prod^0,f,c
  4134  001F94  5040               	movf	(___flmul@temp+1)^0,w,c
  4135  001F96  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4136  001F98  0E00               	movlw	0
  4137  001F9A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4138  001F9C  0E00               	movlw	0
  4139  001F9E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4140  001FA0  502D               	movf	(___flmul@a+1)^0,w,c
  4141  001FA2  022A               	mulwf	(___flmul@b+2)^0,c
  4142  001FA4  CFF3 F03F          	movff	prodl,___flmul@temp
  4143  001FA8  CFF4 F040          	movff	prodh,___flmul@temp+1
  4144  001FAC  503F               	movf	___flmul@temp^0,w,c
  4145  001FAE  263B               	addwf	___flmul@prod^0,f,c
  4146  001FB0  5040               	movf	(___flmul@temp+1)^0,w,c
  4147  001FB2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4148  001FB4  0E00               	movlw	0
  4149  001FB6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4150  001FB8  0E00               	movlw	0
  4151  001FBA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4152  001FBC  502E               	movf	(___flmul@a+2)^0,w,c
  4153  001FBE  022A               	mulwf	(___flmul@b+2)^0,c
  4154  001FC0  CFF3 F03F          	movff	prodl,___flmul@temp
  4155  001FC4  CFF4 F040          	movff	prodh,___flmul@temp+1
  4156  001FC8  503F               	movf	___flmul@temp^0,w,c
  4157  001FCA  6E30               	movwf	??___flmul^0,c
  4158  001FCC  5040               	movf	(___flmul@temp+1)^0,w,c
  4159  001FCE  6E31               	movwf	(??___flmul+1)^0,c
  4160  001FD0  6A32               	clrf	(??___flmul+2)^0,c
  4161  001FD2  6A33               	clrf	(??___flmul+3)^0,c
  4162  001FD4  C032  F033         	movff	??___flmul+2,??___flmul+3
  4163  001FD8  C031  F032         	movff	??___flmul+1,??___flmul+2
  4164  001FDC  C030  F031         	movff	??___flmul,??___flmul+1
  4165  001FE0  6A30               	clrf	??___flmul^0,c
  4166  001FE2  5030               	movf	??___flmul^0,w,c
  4167  001FE4  263B               	addwf	___flmul@prod^0,f,c
  4168  001FE6  5031               	movf	(??___flmul+1)^0,w,c
  4169  001FE8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4170  001FEA  5032               	movf	(??___flmul+2)^0,w,c
  4171  001FEC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4172  001FEE  5033               	movf	(??___flmul+3)^0,w,c
  4173  001FF0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4174  001FF2  C035  F030         	movff	___flmul@grs,??___flmul
  4175  001FF6  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4176  001FFA  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4177  001FFE  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4178  002002  0E19               	movlw	25
  4179  002004  EF09  F010         	goto	u2990
  4180  002008                     u2995:
  4181  002008  90D8               	bcf	status,0,c
  4182  00200A  3233               	rrcf	(??___flmul+3)^0,f,c
  4183  00200C  3232               	rrcf	(??___flmul+2)^0,f,c
  4184  00200E  3231               	rrcf	(??___flmul+1)^0,f,c
  4185  002010  3230               	rrcf	??___flmul^0,f,c
  4186  002012                     u2990:
  4187  002012  2EE8               	decfsz	wreg,f,c
  4188  002014  EF04  F010         	goto	u2995
  4189  002018  5030               	movf	??___flmul^0,w,c
  4190  00201A  263B               	addwf	___flmul@prod^0,f,c
  4191  00201C  5031               	movf	(??___flmul+1)^0,w,c
  4192  00201E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4193  002020  5032               	movf	(??___flmul+2)^0,w,c
  4194  002022  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4195  002024  5033               	movf	(??___flmul+3)^0,w,c
  4196  002026  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4197  002028  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4198  00202C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4199  002030  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4200  002034  6A35               	clrf	___flmul@grs^0,c
  4201  002036  5039               	movf	___flmul@aexp^0,w,c
  4202  002038  C03A  F030         	movff	___flmul@bexp,??___flmul
  4203  00203C  6A31               	clrf	(??___flmul+1)^0,c
  4204  00203E  2630               	addwf	??___flmul^0,f,c
  4205  002040  0E00               	movlw	0
  4206  002042  2231               	addwfc	(??___flmul+1)^0,f,c
  4207  002044  0E82               	movlw	130
  4208  002046  2430               	addwf	??___flmul^0,w,c
  4209  002048  6E3F               	movwf	___flmul@temp^0,c
  4210  00204A  0EFF               	movlw	255
  4211  00204C  2031               	addwfc	(??___flmul+1)^0,w,c
  4212  00204E  6E40               	movwf	(___flmul@temp+1)^0,c
  4213  002050  EF3F  F010         	goto	l3412
  4214  002054                     l3406:
  4215  002054  90D8               	bcf	status,0,c
  4216  002056  363B               	rlcf	___flmul@prod^0,f,c
  4217  002058  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4218  00205A  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4219  00205C  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4220  00205E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4221  002060  EF34  F010         	goto	u3001
  4222  002064  EF36  F010         	goto	u3000
  4223  002068                     u3001:
  4224  002068  EF37  F010         	goto	l1145
  4225  00206C                     u3000:
  4226  00206C  803B               	bsf	___flmul@prod^0,0,c
  4227  00206E                     l1145:
  4228  00206E  90D8               	bcf	status,0,c
  4229  002070  3635               	rlcf	___flmul@grs^0,f,c
  4230  002072  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4231  002074  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4232  002076  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4233  002078  063F               	decf	___flmul@temp^0,f,c
  4234  00207A  A0D8               	btfss	status,0,c
  4235  00207C  0640               	decf	(___flmul@temp+1)^0,f,c
  4236  00207E                     l3412:
  4237  00207E  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4238  002080  EF44  F010         	goto	u3011
  4239  002084  EF46  F010         	goto	u3010
  4240  002088                     u3011:
  4241  002088  EF2A  F010         	goto	l3406
  4242  00208C                     u3010:
  4243  00208C  0E00               	movlw	0
  4244  00208E  6E39               	movwf	___flmul@aexp^0,c
  4245  002090  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4246  002092  EF4D  F010         	goto	u3021
  4247  002096  EF4F  F010         	goto	u3020
  4248  00209A                     u3021:
  4249  00209A  EF73  F010         	goto	l1147
  4250  00209E                     u3020:
  4251  00209E  0EFF               	movlw	255
  4252  0020A0  1435               	andwf	___flmul@grs^0,w,c
  4253  0020A2  6E30               	movwf	??___flmul^0,c
  4254  0020A4  0EFF               	movlw	255
  4255  0020A6  1436               	andwf	(___flmul@grs+1)^0,w,c
  4256  0020A8  6E31               	movwf	(??___flmul+1)^0,c
  4257  0020AA  0EFF               	movlw	255
  4258  0020AC  1437               	andwf	(___flmul@grs+2)^0,w,c
  4259  0020AE  6E32               	movwf	(??___flmul+2)^0,c
  4260  0020B0  0E7F               	movlw	127
  4261  0020B2  1438               	andwf	(___flmul@grs+3)^0,w,c
  4262  0020B4  6E33               	movwf	(??___flmul+3)^0,c
  4263  0020B6  5030               	movf	??___flmul^0,w,c
  4264  0020B8  1031               	iorwf	(??___flmul+1)^0,w,c
  4265  0020BA  1032               	iorwf	(??___flmul+2)^0,w,c
  4266  0020BC  1033               	iorwf	(??___flmul+3)^0,w,c
  4267  0020BE  B4D8               	btfsc	status,2,c
  4268  0020C0  EF64  F010         	goto	u3031
  4269  0020C4  EF66  F010         	goto	u3030
  4270  0020C8                     u3031:
  4271  0020C8  EF6A  F010         	goto	l1148
  4272  0020CC                     u3030:
  4273  0020CC                     l3420:
  4274  0020CC  0E01               	movlw	1
  4275  0020CE  6E39               	movwf	___flmul@aexp^0,c
  4276  0020D0  EF73  F010         	goto	l1147
  4277  0020D4                     l1148:
  4278  0020D4  A03B               	btfss	___flmul@prod^0,0,c
  4279  0020D6  EF6F  F010         	goto	u3041
  4280  0020DA  EF71  F010         	goto	u3040
  4281  0020DE                     u3041:
  4282  0020DE  EF73  F010         	goto	l1147
  4283  0020E2                     u3040:
  4284  0020E2  EF66  F010         	goto	l3420
  4285  0020E6                     l1147:
  4286  0020E6  5039               	movf	___flmul@aexp^0,w,c
  4287  0020E8  B4D8               	btfsc	status,2,c
  4288  0020EA  EF79  F010         	goto	u3051
  4289  0020EE  EF7B  F010         	goto	u3050
  4290  0020F2                     u3051:
  4291  0020F2  EF9F  F010         	goto	l3432
  4292  0020F6                     u3050:
  4293  0020F6  0E01               	movlw	1
  4294  0020F8  263B               	addwf	___flmul@prod^0,f,c
  4295  0020FA  0E00               	movlw	0
  4296  0020FC  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4297  0020FE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4298  002100  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4299  002102  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4300  002104  EF86  F010         	goto	u3061
  4301  002108  EF88  F010         	goto	u3060
  4302  00210C                     u3061:
  4303  00210C  EF9F  F010         	goto	l3432
  4304  002110                     u3060:
  4305  002110  C03B  F030         	movff	___flmul@prod,??___flmul
  4306  002114  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4307  002118  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4308  00211C  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4309  002120  3433               	rlcf	(??___flmul+3)^0,w,c
  4310  002122  3233               	rrcf	(??___flmul+3)^0,f,c
  4311  002124  3232               	rrcf	(??___flmul+2)^0,f,c
  4312  002126  3231               	rrcf	(??___flmul+1)^0,f,c
  4313  002128  3230               	rrcf	??___flmul^0,f,c
  4314  00212A  C030  F03B         	movff	??___flmul,___flmul@prod
  4315  00212E  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4316  002132  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4317  002136  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4318  00213A  4A3F               	infsnz	___flmul@temp^0,f,c
  4319  00213C  2A40               	incf	(___flmul@temp+1)^0,f,c
  4320  00213E                     l3432:
  4321  00213E  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4322  002140  EFAA  F010         	goto	u3071
  4323  002144  5040               	movf	(___flmul@temp+1)^0,w,c
  4324  002146  E108               	bnz	u3070
  4325  002148  283F               	incf	___flmul@temp^0,w,c
  4326  00214A  A0D8               	btfss	status,0,c
  4327  00214C  EFAA  F010         	goto	u3071
  4328  002150  EFAC  F010         	goto	u3070
  4329  002154                     u3071:
  4330  002154  EFB6  F010         	goto	l3436
  4331  002158                     u3070:
  4332  002158  0E00               	movlw	0
  4333  00215A  6E3B               	movwf	___flmul@prod^0,c
  4334  00215C  0E00               	movlw	0
  4335  00215E  6E3C               	movwf	(___flmul@prod+1)^0,c
  4336  002160  0E80               	movlw	128
  4337  002162  6E3D               	movwf	(___flmul@prod+2)^0,c
  4338  002164  0E7F               	movlw	127
  4339  002166  6E3E               	movwf	(___flmul@prod+3)^0,c
  4340  002168  EFE4  F010         	goto	l3448
  4341  00216C                     l3436:
  4342  00216C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4343  00216E  EFC3  F010         	goto	u3080
  4344  002172  5040               	movf	(___flmul@temp+1)^0,w,c
  4345  002174  E106               	bnz	u3081
  4346  002176  043F               	decf	___flmul@temp^0,w,c
  4347  002178  B0D8               	btfsc	status,0,c
  4348  00217A  EFC1  F010         	goto	u3081
  4349  00217E  EFC3  F010         	goto	u3080
  4350  002182                     u3081:
  4351  002182  EFCF  F010         	goto	l1155
  4352  002186                     u3080:
  4353  002186  0E00               	movlw	0
  4354  002188  6E3B               	movwf	___flmul@prod^0,c
  4355  00218A  0E00               	movlw	0
  4356  00218C  6E3C               	movwf	(___flmul@prod+1)^0,c
  4357  00218E  0E00               	movlw	0
  4358  002190  6E3D               	movwf	(___flmul@prod+2)^0,c
  4359  002192  0E00               	movlw	0
  4360  002194  6E3E               	movwf	(___flmul@prod+3)^0,c
  4361  002196  0E00               	movlw	0
  4362  002198  6E34               	movwf	___flmul@sign^0,c
  4363  00219A  EFE4  F010         	goto	l3448
  4364  00219E                     l1155:
  4365  00219E  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4366  0021A2  0EFF               	movlw	255
  4367  0021A4  163B               	andwf	___flmul@prod^0,f,c
  4368  0021A6  0EFF               	movlw	255
  4369  0021A8  163C               	andwf	(___flmul@prod+1)^0,f,c
  4370  0021AA  0E7F               	movlw	127
  4371  0021AC  163D               	andwf	(___flmul@prod+2)^0,f,c
  4372  0021AE  0E00               	movlw	0
  4373  0021B0  163E               	andwf	(___flmul@prod+3)^0,f,c
  4374  0021B2  A03A               	btfss	___flmul@bexp^0,0,c
  4375  0021B4  EFDE  F010         	goto	u3091
  4376  0021B8  EFE0  F010         	goto	u3090
  4377  0021BC                     u3091:
  4378  0021BC  EFE1  F010         	goto	l3446
  4379  0021C0                     u3090:
  4380  0021C0  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4381  0021C2                     l3446:
  4382  0021C2  90D8               	bcf	status,0,c
  4383  0021C4  303A               	rrcf	___flmul@bexp^0,w,c
  4384  0021C6  6E3E               	movwf	(___flmul@prod+3)^0,c
  4385  0021C8                     l3448:
  4386  0021C8  5034               	movf	___flmul@sign^0,w,c
  4387  0021CA  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4388  0021CC  C03B  F028         	movff	___flmul@prod,?___flmul
  4389  0021D0  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4390  0021D4  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4391  0021D8  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4392  0021DC                     l1142:
  4393  0021DC  0012               	return		;funcret
  4394  0021DE                     __end_of___flmul:
  4395                           	callstack 0
  4396                           
  4397 ;; *************** function ___flge *****************
  4398 ;; Defined at:
  4399 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;  ff1             4    0[COMRAM] unsigned char 
  4402 ;;  ff2             4    4[COMRAM] unsigned char 
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;		None               void
  4407 ;; Registers used:
  4408 ;;		wreg, status,2, status,0
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4414 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;Total ram usage:       12 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; This function calls:
  4421 ;;		Nothing
  4422 ;; This function is called by:
  4423 ;;		_roundf
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text13
  4428  003490                     __ptext13:
  4429                           	callstack 0
  4430  003490                     ___flge:
  4431                           	callstack 27
  4432  003490  0E00               	movlw	0
  4433  003492  1401               	andwf	___flge@ff1^0,w,c
  4434  003494  6E09               	movwf	??___flge^0,c
  4435  003496  0E00               	movlw	0
  4436  003498  1402               	andwf	(___flge@ff1+1)^0,w,c
  4437  00349A  6E0A               	movwf	(??___flge+1)^0,c
  4438  00349C  0E80               	movlw	128
  4439  00349E  1403               	andwf	(___flge@ff1+2)^0,w,c
  4440  0034A0  6E0B               	movwf	(??___flge+2)^0,c
  4441  0034A2  0E7F               	movlw	127
  4442  0034A4  1404               	andwf	(___flge@ff1+3)^0,w,c
  4443  0034A6  6E0C               	movwf	(??___flge+3)^0,c
  4444  0034A8  5009               	movf	??___flge^0,w,c
  4445  0034AA  100A               	iorwf	(??___flge+1)^0,w,c
  4446  0034AC  100B               	iorwf	(??___flge+2)^0,w,c
  4447  0034AE  100C               	iorwf	(??___flge+3)^0,w,c
  4448  0034B0  A4D8               	btfss	status,2,c
  4449  0034B2  EF5D  F01A         	goto	u3101
  4450  0034B6  EF5F  F01A         	goto	u3100
  4451  0034BA                     u3101:
  4452  0034BA  EF67  F01A         	goto	l3464
  4453  0034BE                     u3100:
  4454  0034BE  0E00               	movlw	0
  4455  0034C0  6E01               	movwf	___flge@ff1^0,c
  4456  0034C2  0E00               	movlw	0
  4457  0034C4  6E02               	movwf	(___flge@ff1+1)^0,c
  4458  0034C6  0E00               	movlw	0
  4459  0034C8  6E03               	movwf	(___flge@ff1+2)^0,c
  4460  0034CA  0E00               	movlw	0
  4461  0034CC  6E04               	movwf	(___flge@ff1+3)^0,c
  4462  0034CE                     l3464:
  4463  0034CE  0E00               	movlw	0
  4464  0034D0  1405               	andwf	___flge@ff2^0,w,c
  4465  0034D2  6E09               	movwf	??___flge^0,c
  4466  0034D4  0E00               	movlw	0
  4467  0034D6  1406               	andwf	(___flge@ff2+1)^0,w,c
  4468  0034D8  6E0A               	movwf	(??___flge+1)^0,c
  4469  0034DA  0E80               	movlw	128
  4470  0034DC  1407               	andwf	(___flge@ff2+2)^0,w,c
  4471  0034DE  6E0B               	movwf	(??___flge+2)^0,c
  4472  0034E0  0E7F               	movlw	127
  4473  0034E2  1408               	andwf	(___flge@ff2+3)^0,w,c
  4474  0034E4  6E0C               	movwf	(??___flge+3)^0,c
  4475  0034E6  5009               	movf	??___flge^0,w,c
  4476  0034E8  100A               	iorwf	(??___flge+1)^0,w,c
  4477  0034EA  100B               	iorwf	(??___flge+2)^0,w,c
  4478  0034EC  100C               	iorwf	(??___flge+3)^0,w,c
  4479  0034EE  A4D8               	btfss	status,2,c
  4480  0034F0  EF7C  F01A         	goto	u3111
  4481  0034F4  EF7E  F01A         	goto	u3110
  4482  0034F8                     u3111:
  4483  0034F8  EF86  F01A         	goto	l3468
  4484  0034FC                     u3110:
  4485  0034FC  0E00               	movlw	0
  4486  0034FE  6E05               	movwf	___flge@ff2^0,c
  4487  003500  0E00               	movlw	0
  4488  003502  6E06               	movwf	(___flge@ff2+1)^0,c
  4489  003504  0E00               	movlw	0
  4490  003506  6E07               	movwf	(___flge@ff2+2)^0,c
  4491  003508  0E00               	movlw	0
  4492  00350A  6E08               	movwf	(___flge@ff2+3)^0,c
  4493  00350C                     l3468:
  4494  00350C  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4495  00350E  EF8B  F01A         	goto	u3121
  4496  003512  EF8D  F01A         	goto	u3120
  4497  003516                     u3121:
  4498  003516  EF96  F01A         	goto	l3472
  4499  00351A                     u3120:
  4500  00351A  6C01               	negf	___flge@ff1^0,c
  4501  00351C  1E02               	comf	(___flge@ff1+1)^0,f,c
  4502  00351E  B0D8               	btfsc	status,0,c
  4503  003520  2A02               	incf	(___flge@ff1+1)^0,f,c
  4504  003522  1E03               	comf	(___flge@ff1+2)^0,f,c
  4505  003524  B0D8               	btfsc	status,0,c
  4506  003526  2A03               	incf	(___flge@ff1+2)^0,f,c
  4507  003528  0E80               	movlw	128
  4508  00352A  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4509  00352C                     l3472:
  4510  00352C  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4511  00352E  EF9B  F01A         	goto	u3131
  4512  003532  EF9D  F01A         	goto	u3130
  4513  003536                     u3131:
  4514  003536  EFA6  F01A         	goto	l789
  4515  00353A                     u3130:
  4516  00353A  6C05               	negf	___flge@ff2^0,c
  4517  00353C  1E06               	comf	(___flge@ff2+1)^0,f,c
  4518  00353E  B0D8               	btfsc	status,0,c
  4519  003540  2A06               	incf	(___flge@ff2+1)^0,f,c
  4520  003542  1E07               	comf	(___flge@ff2+2)^0,f,c
  4521  003544  B0D8               	btfsc	status,0,c
  4522  003546  2A07               	incf	(___flge@ff2+2)^0,f,c
  4523  003548  0E80               	movlw	128
  4524  00354A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4525  00354C                     l789:
  4526  00354C  0E00               	movlw	0
  4527  00354E  1A01               	xorwf	___flge@ff1^0,f,c
  4528  003550  0E00               	movlw	0
  4529  003552  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4530  003554  0E00               	movlw	0
  4531  003556  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4532  003558  0E80               	movlw	128
  4533  00355A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4534  00355C  0E00               	movlw	0
  4535  00355E  1A05               	xorwf	___flge@ff2^0,f,c
  4536  003560  0E00               	movlw	0
  4537  003562  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4538  003564  0E00               	movlw	0
  4539  003566  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4540  003568  0E80               	movlw	128
  4541  00356A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4542  00356C  5005               	movf	___flge@ff2^0,w,c
  4543  00356E  5C01               	subwf	___flge@ff1^0,w,c
  4544  003570  5006               	movf	(___flge@ff2+1)^0,w,c
  4545  003572  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4546  003574  5007               	movf	(___flge@ff2+2)^0,w,c
  4547  003576  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4548  003578  5008               	movf	(___flge@ff2+3)^0,w,c
  4549  00357A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4550  00357C  B0D8               	btfsc	status,0,c
  4551  00357E  EFC3  F01A         	goto	u3141
  4552  003582  EFC5  F01A         	goto	u3140
  4553  003586                     u3141:
  4554  003586  EFC8  F01A         	goto	l3478
  4555  00358A                     u3140:
  4556  00358A  90D8               	bcf	status,0,c
  4557  00358C  EFC9  F01A         	goto	l794
  4558  003590                     l3478:
  4559  003590  80D8               	bsf	status,0,c
  4560  003592                     l794:
  4561  003592  0012               	return		;funcret
  4562  003594                     __end_of___flge:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function ___fltol *****************
  4566 ;; Defined at:
  4567 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  f1              4   90[COMRAM] unsigned char 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  exp1            1    5[BANK0 ] unsigned char 
  4572 ;;  sign1           1    4[BANK0 ] unsigned char 
  4573 ;; Return value:  Size  Location     Type
  4574 ;;                  4   90[COMRAM] long 
  4575 ;; Registers used:
  4576 ;;		wreg, status,2, status,0
  4577 ;; Tracked objects:
  4578 ;;		On entry : 0/0
  4579 ;;		On exit  : 0/0
  4580 ;;		Unchanged: 0/0
  4581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4583 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;Total ram usage:       10 bytes
  4587 ;; Hardware stack levels used: 1
  4588 ;; This function calls:
  4589 ;;		Nothing
  4590 ;; This function is called by:
  4591 ;;		_lroundf
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           	psect	text14
  4596  003388                     __ptext14:
  4597                           	callstack 0
  4598  003388                     ___fltol:
  4599                           	callstack 28
  4600  003388  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4601  00338A  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4602  00338C  0100               	movlb	0	; () banked
  4603  00338E  6F65               	movwf	___fltol@exp1& (0+255),b
  4604  003390  5165               	movf	___fltol@exp1& (0+255),w,b
  4605  003392  A4D8               	btfss	status,2,c
  4606  003394  EFCE  F019         	goto	u3221
  4607  003398  EFD0  F019         	goto	u3220
  4608  00339C                     u3221:
  4609  00339C  EFDA  F019         	goto	l3576
  4610  0033A0                     u3220:
  4611  0033A0                     l3572:
  4612                           
  4613                           ; BSR set to: 0
  4614  0033A0  0E00               	movlw	0
  4615  0033A2  6E5B               	movwf	?___fltol^0,c
  4616  0033A4  0E00               	movlw	0
  4617  0033A6  6E5C               	movwf	(?___fltol+1)^0,c
  4618  0033A8  0E00               	movlw	0
  4619  0033AA  6E5D               	movwf	(?___fltol+2)^0,c
  4620  0033AC  0E00               	movlw	0
  4621  0033AE  6E5E               	movwf	(?___fltol+3)^0,c
  4622  0033B0  EF47  F01A         	goto	l821
  4623  0033B4                     l3576:
  4624                           
  4625                           ; BSR set to: 0
  4626  0033B4  C05B  F060         	movff	___fltol@f1,??___fltol
  4627  0033B8  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4628  0033BC  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4629  0033C0  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4630  0033C4  0E20               	movlw	32
  4631  0033C6  EFEA  F019         	goto	u3230
  4632  0033CA                     u3235:
  4633  0033CA  90D8               	bcf	status,0,c
  4634  0033CC  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4635  0033CE  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4636  0033D0  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4637  0033D2  3360               	rrcf	??___fltol& (0+255),f,b
  4638  0033D4                     u3230:
  4639  0033D4  2EE8               	decfsz	wreg,f,c
  4640  0033D6  EFE5  F019         	goto	u3235
  4641  0033DA  5160               	movf	??___fltol& (0+255),w,b
  4642  0033DC  6F64               	movwf	___fltol@sign1& (0+255),b
  4643  0033DE                     
  4644                           ; BSR set to: 0
  4645  0033DE  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4646  0033E0                     
  4647                           ; BSR set to: 0
  4648  0033E0  0EFF               	movlw	255
  4649  0033E2  165B               	andwf	___fltol@f1^0,f,c
  4650  0033E4  0EFF               	movlw	255
  4651  0033E6  165C               	andwf	(___fltol@f1+1)^0,f,c
  4652  0033E8  0EFF               	movlw	255
  4653  0033EA  165D               	andwf	(___fltol@f1+2)^0,f,c
  4654  0033EC  0E00               	movlw	0
  4655  0033EE  165E               	andwf	(___fltol@f1+3)^0,f,c
  4656  0033F0                     
  4657                           ; BSR set to: 0
  4658  0033F0  0E96               	movlw	150
  4659  0033F2  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4660  0033F4                     
  4661                           ; BSR set to: 0
  4662  0033F4  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4663  0033F6  EF01  F01A         	goto	u3240
  4664  0033FA  EFFF  F019         	goto	u3241
  4665  0033FE                     u3241:
  4666  0033FE  EF17  F01A         	goto	l3596
  4667  003402                     u3240:
  4668  003402                     
  4669                           ; BSR set to: 0
  4670  003402  5165               	movf	___fltol@exp1& (0+255),w,b
  4671  003404  0A80               	xorlw	128
  4672  003406  0F97               	addlw	151
  4673  003408  B0D8               	btfsc	status,0,c
  4674  00340A  EF09  F01A         	goto	u3251
  4675  00340E  EF0B  F01A         	goto	u3250
  4676  003412                     u3251:
  4677  003412  EF0D  F01A         	goto	l3592
  4678  003416                     u3250:
  4679  003416  EFD0  F019         	goto	l3572
  4680  00341A                     l3592:
  4681                           
  4682                           ; BSR set to: 0
  4683  00341A  90D8               	bcf	status,0,c
  4684  00341C  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4685  00341E  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4686  003420  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4687  003422  325B               	rrcf	___fltol@f1^0,f,c
  4688  003424                     
  4689                           ; BSR set to: 0
  4690  003424  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4691  003426  EF0D  F01A         	goto	l3592
  4692  00342A  EF2F  F01A         	goto	l3606
  4693  00342E                     l3596:
  4694                           
  4695                           ; BSR set to: 0
  4696  00342E  0E1F               	movlw	31
  4697  003430  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4698  003432  EF1D  F01A         	goto	u3261
  4699  003436  EF1F  F01A         	goto	u3260
  4700  00343A                     u3261:
  4701  00343A  EF27  F01A         	goto	l3604
  4702  00343E                     u3260:
  4703  00343E  EFD0  F019         	goto	l3572
  4704  003442                     l3602:
  4705                           
  4706                           ; BSR set to: 0
  4707  003442  90D8               	bcf	status,0,c
  4708  003444  365B               	rlcf	___fltol@f1^0,f,c
  4709  003446  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4710  003448  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4711  00344A  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4712  00344C  0765               	decf	___fltol@exp1& (0+255),f,b
  4713  00344E                     l3604:
  4714                           
  4715                           ; BSR set to: 0
  4716  00344E  5165               	movf	___fltol@exp1& (0+255),w,b
  4717  003450  A4D8               	btfss	status,2,c
  4718  003452  EF2D  F01A         	goto	u3271
  4719  003456  EF2F  F01A         	goto	u3270
  4720  00345A                     u3271:
  4721  00345A  EF21  F01A         	goto	l3602
  4722  00345E                     u3270:
  4723  00345E                     l3606:
  4724                           
  4725                           ; BSR set to: 0
  4726  00345E  5164               	movf	___fltol@sign1& (0+255),w,b
  4727  003460  B4D8               	btfsc	status,2,c
  4728  003462  EF35  F01A         	goto	u3281
  4729  003466  EF37  F01A         	goto	u3280
  4730  00346A                     u3281:
  4731  00346A  EF3F  F01A         	goto	l3610
  4732  00346E                     u3280:
  4733  00346E                     
  4734                           ; BSR set to: 0
  4735  00346E  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4736  003470  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4737  003472  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4738  003474  6C5B               	negf	___fltol@f1^0,c
  4739  003476  0E00               	movlw	0
  4740  003478  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4741  00347A  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4742  00347C  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4743  00347E                     l3610:
  4744                           
  4745                           ; BSR set to: 0
  4746  00347E  C05B  F05B         	movff	___fltol@f1,?___fltol
  4747  003482  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4748  003486  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4749  00348A  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4750  00348E                     l821:
  4751                           
  4752                           ; BSR set to: 0
  4753  00348E  0012               	return		;funcret
  4754  003490                     __end_of___fltol:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _compare *****************
  4758 ;; Defined at:
  4759 ;;		line 237 in file "color.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  lower           2   10[BANK0 ] unsigned int 
  4762 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4763 ;;  upper           2   14[BANK0 ] unsigned int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  result          1   94[COMRAM] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;Total ram usage:        7 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_detect_color
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text15
  4789  003DE8                     __ptext15:
  4790                           	callstack 0
  4791  003DE8                     _compare:
  4792                           	callstack 29
  4793  003DE8                     
  4794                           ;color.c: 237: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 238: {;color.c: 239:     unsigned char result = 0;
  4795  003DE8  0E00               	movlw	0
  4796  003DEA  6E5F               	movwf	compare@result^0,c
  4797  003DEC                     
  4798                           ;color.c: 240:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4799  003DEC  0100               	movlb	0	; () banked
  4800  003DEE  516C               	movf	compare@value2compare& (0+255),w,b
  4801  003DF0  5D6A               	subwf	compare@lower& (0+255),w,b
  4802  003DF2  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4803  003DF4  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4804  003DF6  B0D8               	btfsc	status,0,c
  4805  003DF8  EF00  F01F         	goto	u3401
  4806  003DFC  EF02  F01F         	goto	u3400
  4807  003E00                     u3401:
  4808  003E00  EF0F  F01F         	goto	l119
  4809  003E04                     u3400:
  4810  003E04                     
  4811                           ; BSR set to: 0
  4812  003E04  516C               	movf	compare@value2compare& (0+255),w,b
  4813  003E06  5D6E               	subwf	compare@upper& (0+255),w,b
  4814  003E08  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4815  003E0A  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4816  003E0C  A0D8               	btfss	status,0,c
  4817  003E0E  EF0B  F01F         	goto	u3411
  4818  003E12  EF0D  F01F         	goto	u3410
  4819  003E16                     u3411:
  4820  003E16  EF0F  F01F         	goto	l119
  4821  003E1A                     u3410:
  4822  003E1A                     
  4823                           ; BSR set to: 0
  4824  003E1A  0E01               	movlw	1
  4825  003E1C  6E5F               	movwf	compare@result^0,c
  4826  003E1E                     l119:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;color.c: 241:     return result;
  4830  003E1E  505F               	movf	compare@result^0,w,c
  4831  003E20                     
  4832                           ; BSR set to: 0
  4833  003E20  0012               	return		;funcret
  4834  003E22                     __end_of_compare:
  4835                           	callstack 0
  4836                           
  4837 ;; *************** function ___xxtofl *****************
  4838 ;; Defined at:
  4839 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  sign            1    wreg     unsigned char 
  4842 ;;  val             4    0[COMRAM] long 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  sign            1    8[COMRAM] unsigned char 
  4845 ;;  arg             4   10[COMRAM] unsigned long 
  4846 ;;  exp             1    9[COMRAM] unsigned char 
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  4    0[COMRAM] unsigned char 
  4849 ;; Registers used:
  4850 ;;		wreg, status,2, status,0
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;Total ram usage:       14 bytes
  4861 ;; Hardware stack levels used: 1
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_detect_color
  4866 ;;		_check_color_reading
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text16
  4871  002C0A                     __ptext16:
  4872                           	callstack 0
  4873  002C0A                     ___xxtofl:
  4874                           	callstack 29
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;incstack = 0
  4878                           ;___xxtofl@sign stored from wreg
  4879  002C0A  6E09               	movwf	___xxtofl@sign^0,c
  4880  002C0C  5009               	movf	___xxtofl@sign^0,w,c
  4881  002C0E  B4D8               	btfsc	status,2,c
  4882  002C10  EF0C  F016         	goto	u3671
  4883  002C14  EF0E  F016         	goto	u3670
  4884  002C18                     u3671:
  4885  002C18  EF30  F016         	goto	l1179
  4886  002C1C                     u3670:
  4887  002C1C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4888  002C1E  EF15  F016         	goto	u3680
  4889  002C22  EF13  F016         	goto	u3681
  4890  002C26                     u3681:
  4891  002C26  EF30  F016         	goto	l1179
  4892  002C2A                     u3680:
  4893  002C2A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4894  002C2E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4895  002C32  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4896  002C36  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4897  002C3A  1E05               	comf	??___xxtofl^0,f,c
  4898  002C3C  1E06               	comf	(??___xxtofl+1)^0,f,c
  4899  002C3E  1E07               	comf	(??___xxtofl+2)^0,f,c
  4900  002C40  1E08               	comf	(??___xxtofl+3)^0,f,c
  4901  002C42  2A05               	incf	??___xxtofl^0,f,c
  4902  002C44  0E00               	movlw	0
  4903  002C46  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4904  002C48  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4905  002C4A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4906  002C4C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4907  002C50  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4908  002C54  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4909  002C58  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4910  002C5C  EF38  F016         	goto	l3878
  4911  002C60                     l1179:
  4912  002C60  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4913  002C64  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4914  002C68  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4915  002C6C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4916  002C70                     l3878:
  4917  002C70  5001               	movf	___xxtofl@val^0,w,c
  4918  002C72  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4919  002C74  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4920  002C76  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4921  002C78  A4D8               	btfss	status,2,c
  4922  002C7A  EF41  F016         	goto	u3691
  4923  002C7E  EF43  F016         	goto	u3690
  4924  002C82                     u3691:
  4925  002C82  EF4D  F016         	goto	l3884
  4926  002C86                     u3690:
  4927  002C86  0E00               	movlw	0
  4928  002C88  6E01               	movwf	?___xxtofl^0,c
  4929  002C8A  0E00               	movlw	0
  4930  002C8C  6E02               	movwf	(?___xxtofl+1)^0,c
  4931  002C8E  0E00               	movlw	0
  4932  002C90  6E03               	movwf	(?___xxtofl+2)^0,c
  4933  002C92  0E00               	movlw	0
  4934  002C94  6E04               	movwf	(?___xxtofl+3)^0,c
  4935  002C96  EFDE  F016         	goto	l1182
  4936  002C9A                     l3884:
  4937  002C9A  0E96               	movlw	150
  4938  002C9C  6E0A               	movwf	___xxtofl@exp^0,c
  4939  002C9E  EF57  F016         	goto	l3888
  4940  002CA2                     l3886:
  4941  002CA2  2A0A               	incf	___xxtofl@exp^0,f,c
  4942  002CA4  90D8               	bcf	status,0,c
  4943  002CA6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4944  002CA8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4945  002CAA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4946  002CAC  320B               	rrcf	___xxtofl@arg^0,f,c
  4947  002CAE                     l3888:
  4948  002CAE  0E00               	movlw	0
  4949  002CB0  140B               	andwf	___xxtofl@arg^0,w,c
  4950  002CB2  6E05               	movwf	??___xxtofl^0,c
  4951  002CB4  0E00               	movlw	0
  4952  002CB6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4953  002CB8  6E06               	movwf	(??___xxtofl+1)^0,c
  4954  002CBA  0E00               	movlw	0
  4955  002CBC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4956  002CBE  6E07               	movwf	(??___xxtofl+2)^0,c
  4957  002CC0  0EFE               	movlw	254
  4958  002CC2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4959  002CC4  6E08               	movwf	(??___xxtofl+3)^0,c
  4960  002CC6  5005               	movf	??___xxtofl^0,w,c
  4961  002CC8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4962  002CCA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4963  002CCC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4964  002CCE  A4D8               	btfss	status,2,c
  4965  002CD0  EF6C  F016         	goto	u3701
  4966  002CD4  EF6E  F016         	goto	u3700
  4967  002CD8                     u3701:
  4968  002CD8  EF51  F016         	goto	l3886
  4969  002CDC                     u3700:
  4970  002CDC  EF7C  F016         	goto	l1186
  4971  002CE0                     l3890:
  4972  002CE0  2A0A               	incf	___xxtofl@exp^0,f,c
  4973  002CE2  0E01               	movlw	1
  4974  002CE4  260B               	addwf	___xxtofl@arg^0,f,c
  4975  002CE6  0E00               	movlw	0
  4976  002CE8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4977  002CEA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4978  002CEC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4979  002CEE  90D8               	bcf	status,0,c
  4980  002CF0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4981  002CF2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4982  002CF4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4983  002CF6  320B               	rrcf	___xxtofl@arg^0,f,c
  4984  002CF8                     l1186:
  4985  002CF8  0E00               	movlw	0
  4986  002CFA  140B               	andwf	___xxtofl@arg^0,w,c
  4987  002CFC  6E05               	movwf	??___xxtofl^0,c
  4988  002CFE  0E00               	movlw	0
  4989  002D00  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4990  002D02  6E06               	movwf	(??___xxtofl+1)^0,c
  4991  002D04  0E00               	movlw	0
  4992  002D06  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4993  002D08  6E07               	movwf	(??___xxtofl+2)^0,c
  4994  002D0A  0EFF               	movlw	255
  4995  002D0C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4996  002D0E  6E08               	movwf	(??___xxtofl+3)^0,c
  4997  002D10  5005               	movf	??___xxtofl^0,w,c
  4998  002D12  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4999  002D14  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5000  002D16  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5001  002D18  A4D8               	btfss	status,2,c
  5002  002D1A  EF91  F016         	goto	u3711
  5003  002D1E  EF93  F016         	goto	u3710
  5004  002D22                     u3711:
  5005  002D22  EF70  F016         	goto	l3890
  5006  002D26                     u3710:
  5007  002D26  EF9B  F016         	goto	l3898
  5008  002D2A                     l3896:
  5009  002D2A  060A               	decf	___xxtofl@exp^0,f,c
  5010  002D2C  90D8               	bcf	status,0,c
  5011  002D2E  360B               	rlcf	___xxtofl@arg^0,f,c
  5012  002D30  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5013  002D32  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5014  002D34  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5015  002D36                     l3898:
  5016  002D36  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5017  002D38  EFA0  F016         	goto	u3721
  5018  002D3C  EFA2  F016         	goto	u3720
  5019  002D40                     u3721:
  5020  002D40  EFAA  F016         	goto	l1193
  5021  002D44                     u3720:
  5022  002D44  0E02               	movlw	2
  5023  002D46  600A               	cpfslt	___xxtofl@exp^0,c
  5024  002D48  EFA8  F016         	goto	u3731
  5025  002D4C  EFAA  F016         	goto	u3730
  5026  002D50                     u3731:
  5027  002D50  EF95  F016         	goto	l3896
  5028  002D54                     u3730:
  5029  002D54                     l1193:
  5030  002D54  B00A               	btfsc	___xxtofl@exp^0,0,c
  5031  002D56  EFAF  F016         	goto	u3741
  5032  002D5A  EFB1  F016         	goto	u3740
  5033  002D5E                     u3741:
  5034  002D5E  EFB2  F016         	goto	l3904
  5035  002D62                     u3740:
  5036  002D62  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5037  002D64                     l3904:
  5038  002D64  90D8               	bcf	status,0,c
  5039  002D66  320A               	rrcf	___xxtofl@exp^0,f,c
  5040  002D68  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5041  002D6C  6A06               	clrf	(??___xxtofl+1)^0,c
  5042  002D6E  6A07               	clrf	(??___xxtofl+2)^0,c
  5043  002D70  6A08               	clrf	(??___xxtofl+3)^0,c
  5044  002D72  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5045  002D76  6A07               	clrf	(??___xxtofl+2)^0,c
  5046  002D78  6A06               	clrf	(??___xxtofl+1)^0,c
  5047  002D7A  6A05               	clrf	??___xxtofl^0,c
  5048  002D7C  5005               	movf	??___xxtofl^0,w,c
  5049  002D7E  120B               	iorwf	___xxtofl@arg^0,f,c
  5050  002D80  5006               	movf	(??___xxtofl+1)^0,w,c
  5051  002D82  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5052  002D84  5007               	movf	(??___xxtofl+2)^0,w,c
  5053  002D86  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5054  002D88  5008               	movf	(??___xxtofl+3)^0,w,c
  5055  002D8A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5056  002D8C  5009               	movf	___xxtofl@sign^0,w,c
  5057  002D8E  B4D8               	btfsc	status,2,c
  5058  002D90  EFCC  F016         	goto	u3751
  5059  002D94  EFCE  F016         	goto	u3750
  5060  002D98                     u3751:
  5061  002D98  EFD6  F016         	goto	l3914
  5062  002D9C                     u3750:
  5063  002D9C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5064  002D9E  EFD5  F016         	goto	u3760
  5065  002DA2  EFD3  F016         	goto	u3761
  5066  002DA6                     u3761:
  5067  002DA6  EFD6  F016         	goto	l3914
  5068  002DAA                     u3760:
  5069  002DAA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5070  002DAC                     l3914:
  5071  002DAC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5072  002DB0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5073  002DB4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5074  002DB8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5075  002DBC                     l1182:
  5076  002DBC  0012               	return		;funcret
  5077  002DBE                     __end_of___xxtofl:
  5078                           	callstack 0
  5079                           
  5080 ;; *************** function ___fldiv *****************
  5081 ;; Defined at:
  5082 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;  b               4   14[COMRAM] unsigned char 
  5085 ;;  a               4   18[COMRAM] unsigned char 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  grs             4   33[COMRAM] unsigned long 
  5088 ;;  rem             4   26[COMRAM] unsigned long 
  5089 ;;  new_exp         2   31[COMRAM] short 
  5090 ;;  aexp            1   38[COMRAM] unsigned char 
  5091 ;;  bexp            1   37[COMRAM] unsigned char 
  5092 ;;  sign            1   30[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  4   14[COMRAM] unsigned char 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5103 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5104 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5105 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5106 ;;Total ram usage:       25 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_detect_color
  5112 ;;		_check_color_reading
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text17
  5117  00258C                     __ptext17:
  5118                           	callstack 0
  5119  00258C                     ___fldiv:
  5120                           	callstack 29
  5121  00258C  5012               	movf	(___fldiv@b+3)^0,w,c
  5122  00258E  0B80               	andlw	128
  5123  002590  6E1F               	movwf	___fldiv@sign^0,c
  5124  002592  5012               	movf	(___fldiv@b+3)^0,w,c
  5125  002594  2412               	addwf	(___fldiv@b+3)^0,w,c
  5126  002596  6E26               	movwf	___fldiv@bexp^0,c
  5127  002598  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5128  00259A  EFD1  F012         	goto	u3441
  5129  00259E  EFD3  F012         	goto	u3440
  5130  0025A2                     u3441:
  5131  0025A2  EFD4  F012         	goto	l3740
  5132  0025A6                     u3440:
  5133  0025A6  8026               	bsf	___fldiv@bexp^0,0,c
  5134  0025A8                     l3740:
  5135  0025A8  5026               	movf	___fldiv@bexp^0,w,c
  5136  0025AA  B4D8               	btfsc	status,2,c
  5137  0025AC  EFDA  F012         	goto	u3451
  5138  0025B0  EFDC  F012         	goto	u3450
  5139  0025B4                     u3451:
  5140  0025B4  EFF1  F012         	goto	l3750
  5141  0025B8                     u3450:
  5142  0025B8  2826               	incf	___fldiv@bexp^0,w,c
  5143  0025BA  A4D8               	btfss	status,2,c
  5144  0025BC  EFE2  F012         	goto	u3461
  5145  0025C0  EFE4  F012         	goto	u3460
  5146  0025C4                     u3461:
  5147  0025C4  EFEC  F012         	goto	l3746
  5148  0025C8                     u3460:
  5149  0025C8  0E00               	movlw	0
  5150  0025CA  6E0F               	movwf	___fldiv@b^0,c
  5151  0025CC  0E00               	movlw	0
  5152  0025CE  6E10               	movwf	(___fldiv@b+1)^0,c
  5153  0025D0  0E00               	movlw	0
  5154  0025D2  6E11               	movwf	(___fldiv@b+2)^0,c
  5155  0025D4  0E00               	movlw	0
  5156  0025D6  6E12               	movwf	(___fldiv@b+3)^0,c
  5157  0025D8                     l3746:
  5158  0025D8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5159  0025DA  0E00               	movlw	0
  5160  0025DC  6E12               	movwf	(___fldiv@b+3)^0,c
  5161  0025DE  EFF9  F012         	goto	l3752
  5162  0025E2                     l3750:
  5163  0025E2  0E00               	movlw	0
  5164  0025E4  6E0F               	movwf	___fldiv@b^0,c
  5165  0025E6  0E00               	movlw	0
  5166  0025E8  6E10               	movwf	(___fldiv@b+1)^0,c
  5167  0025EA  0E00               	movlw	0
  5168  0025EC  6E11               	movwf	(___fldiv@b+2)^0,c
  5169  0025EE  0E00               	movlw	0
  5170  0025F0  6E12               	movwf	(___fldiv@b+3)^0,c
  5171  0025F2                     l3752:
  5172  0025F2  5016               	movf	(___fldiv@a+3)^0,w,c
  5173  0025F4  0B80               	andlw	128
  5174  0025F6  1A1F               	xorwf	___fldiv@sign^0,f,c
  5175  0025F8  5016               	movf	(___fldiv@a+3)^0,w,c
  5176  0025FA  2416               	addwf	(___fldiv@a+3)^0,w,c
  5177  0025FC  6E27               	movwf	___fldiv@aexp^0,c
  5178  0025FE  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5179  002600  EF04  F013         	goto	u3471
  5180  002604  EF06  F013         	goto	u3470
  5181  002608                     u3471:
  5182  002608  EF07  F013         	goto	l3760
  5183  00260C                     u3470:
  5184  00260C  8027               	bsf	___fldiv@aexp^0,0,c
  5185  00260E                     l3760:
  5186  00260E  5027               	movf	___fldiv@aexp^0,w,c
  5187  002610  B4D8               	btfsc	status,2,c
  5188  002612  EF0D  F013         	goto	u3481
  5189  002616  EF0F  F013         	goto	u3480
  5190  00261A                     u3481:
  5191  00261A  EF24  F013         	goto	l3770
  5192  00261E                     u3480:
  5193  00261E  2827               	incf	___fldiv@aexp^0,w,c
  5194  002620  A4D8               	btfss	status,2,c
  5195  002622  EF15  F013         	goto	u3491
  5196  002626  EF17  F013         	goto	u3490
  5197  00262A                     u3491:
  5198  00262A  EF1F  F013         	goto	l3766
  5199  00262E                     u3490:
  5200  00262E  0E00               	movlw	0
  5201  002630  6E13               	movwf	___fldiv@a^0,c
  5202  002632  0E00               	movlw	0
  5203  002634  6E14               	movwf	(___fldiv@a+1)^0,c
  5204  002636  0E00               	movlw	0
  5205  002638  6E15               	movwf	(___fldiv@a+2)^0,c
  5206  00263A  0E00               	movlw	0
  5207  00263C  6E16               	movwf	(___fldiv@a+3)^0,c
  5208  00263E                     l3766:
  5209  00263E  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5210  002640  0E00               	movlw	0
  5211  002642  6E16               	movwf	(___fldiv@a+3)^0,c
  5212  002644  EF2C  F013         	goto	l3772
  5213  002648                     l3770:
  5214  002648  0E00               	movlw	0
  5215  00264A  6E13               	movwf	___fldiv@a^0,c
  5216  00264C  0E00               	movlw	0
  5217  00264E  6E14               	movwf	(___fldiv@a+1)^0,c
  5218  002650  0E00               	movlw	0
  5219  002652  6E15               	movwf	(___fldiv@a+2)^0,c
  5220  002654  0E00               	movlw	0
  5221  002656  6E16               	movwf	(___fldiv@a+3)^0,c
  5222  002658                     l3772:
  5223  002658  5013               	movf	___fldiv@a^0,w,c
  5224  00265A  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5225  00265C  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5226  00265E  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5227  002660  A4D8               	btfss	status,2,c
  5228  002662  EF35  F013         	goto	u3501
  5229  002666  EF37  F013         	goto	u3500
  5230  00266A                     u3501:
  5231  00266A  EF4F  F013         	goto	l3784
  5232  00266E                     u3500:
  5233  00266E  0E00               	movlw	0
  5234  002670  6E0F               	movwf	___fldiv@b^0,c
  5235  002672  0E00               	movlw	0
  5236  002674  6E10               	movwf	(___fldiv@b+1)^0,c
  5237  002676  0E00               	movlw	0
  5238  002678  6E11               	movwf	(___fldiv@b+2)^0,c
  5239  00267A  0E00               	movlw	0
  5240  00267C  6E12               	movwf	(___fldiv@b+3)^0,c
  5241  00267E  0E80               	movlw	128
  5242  002680  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5243  002682  0E7F               	movlw	127
  5244  002684  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5245  002686                     l3778:
  5246  002686  501F               	movf	___fldiv@sign^0,w,c
  5247  002688  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5248  00268A  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5249  00268E  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5250  002692  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5251  002696  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5252  00269A  EF92  F014         	goto	l1106
  5253  00269E                     l3784:
  5254  00269E  5026               	movf	___fldiv@bexp^0,w,c
  5255  0026A0  A4D8               	btfss	status,2,c
  5256  0026A2  EF55  F013         	goto	u3511
  5257  0026A6  EF57  F013         	goto	u3510
  5258  0026AA                     u3511:
  5259  0026AA  EF61  F013         	goto	l3792
  5260  0026AE                     u3510:
  5261  0026AE  0E00               	movlw	0
  5262  0026B0  6E0F               	movwf	?___fldiv^0,c
  5263  0026B2  0E00               	movlw	0
  5264  0026B4  6E10               	movwf	(?___fldiv+1)^0,c
  5265  0026B6  0E00               	movlw	0
  5266  0026B8  6E11               	movwf	(?___fldiv+2)^0,c
  5267  0026BA  0E00               	movlw	0
  5268  0026BC  6E12               	movwf	(?___fldiv+3)^0,c
  5269  0026BE  EF92  F014         	goto	l1106
  5270  0026C2                     l3792:
  5271  0026C2  5027               	movf	___fldiv@aexp^0,w,c
  5272  0026C4  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5273  0026C8  6A18               	clrf	(??___fldiv+1)^0,c
  5274  0026CA  5E17               	subwf	??___fldiv^0,f,c
  5275  0026CC  0E00               	movlw	0
  5276  0026CE  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5277  0026D0  0E7F               	movlw	127
  5278  0026D2  2417               	addwf	??___fldiv^0,w,c
  5279  0026D4  6E20               	movwf	___fldiv@new_exp^0,c
  5280  0026D6  0E00               	movlw	0
  5281  0026D8  2018               	addwfc	(??___fldiv+1)^0,w,c
  5282  0026DA  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5283  0026DC  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5284  0026E0  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5285  0026E4  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5286  0026E8  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5287  0026EC  0E00               	movlw	0
  5288  0026EE  6E0F               	movwf	___fldiv@b^0,c
  5289  0026F0  0E00               	movlw	0
  5290  0026F2  6E10               	movwf	(___fldiv@b+1)^0,c
  5291  0026F4  0E00               	movlw	0
  5292  0026F6  6E11               	movwf	(___fldiv@b+2)^0,c
  5293  0026F8  0E00               	movlw	0
  5294  0026FA  6E12               	movwf	(___fldiv@b+3)^0,c
  5295  0026FC  0E00               	movlw	0
  5296  0026FE  6E22               	movwf	___fldiv@grs^0,c
  5297  002700  0E00               	movlw	0
  5298  002702  6E23               	movwf	(___fldiv@grs+1)^0,c
  5299  002704  0E00               	movlw	0
  5300  002706  6E24               	movwf	(___fldiv@grs+2)^0,c
  5301  002708  0E00               	movlw	0
  5302  00270A  6E25               	movwf	(___fldiv@grs+3)^0,c
  5303  00270C  0E00               	movlw	0
  5304  00270E  6E27               	movwf	___fldiv@aexp^0,c
  5305  002710  EFC2  F013         	goto	l1108
  5306  002714                     l3802:
  5307  002714  5027               	movf	___fldiv@aexp^0,w,c
  5308  002716  B4D8               	btfsc	status,2,c
  5309  002718  EF90  F013         	goto	u3521
  5310  00271C  EF92  F013         	goto	u3520
  5311  002720                     u3521:
  5312  002720  EFA9  F013         	goto	l3810
  5313  002724                     u3520:
  5314  002724  90D8               	bcf	status,0,c
  5315  002726  361B               	rlcf	___fldiv@rem^0,f,c
  5316  002728  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5317  00272A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5318  00272C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5319  00272E  90D8               	bcf	status,0,c
  5320  002730  360F               	rlcf	___fldiv@b^0,f,c
  5321  002732  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5322  002734  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5323  002736  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5324  002738  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5325  00273A  EFA1  F013         	goto	u3531
  5326  00273E  EFA3  F013         	goto	u3530
  5327  002742                     u3531:
  5328  002742  EFA4  F013         	goto	l1111
  5329  002746                     u3530:
  5330  002746  800F               	bsf	___fldiv@b^0,0,c
  5331  002748                     l1111:
  5332  002748  90D8               	bcf	status,0,c
  5333  00274A  3622               	rlcf	___fldiv@grs^0,f,c
  5334  00274C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5335  00274E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5336  002750  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5337  002752                     l3810:
  5338  002752  5013               	movf	___fldiv@a^0,w,c
  5339  002754  5C1B               	subwf	___fldiv@rem^0,w,c
  5340  002756  5014               	movf	(___fldiv@a+1)^0,w,c
  5341  002758  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5342  00275A  5015               	movf	(___fldiv@a+2)^0,w,c
  5343  00275C  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5344  00275E  5016               	movf	(___fldiv@a+3)^0,w,c
  5345  002760  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5346  002762  A0D8               	btfss	status,0,c
  5347  002764  EFB6  F013         	goto	u3541
  5348  002768  EFB8  F013         	goto	u3540
  5349  00276C                     u3541:
  5350  00276C  EFC1  F013         	goto	l3816
  5351  002770                     u3540:
  5352  002770  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5353  002772  5013               	movf	___fldiv@a^0,w,c
  5354  002774  5E1B               	subwf	___fldiv@rem^0,f,c
  5355  002776  5014               	movf	(___fldiv@a+1)^0,w,c
  5356  002778  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5357  00277A  5015               	movf	(___fldiv@a+2)^0,w,c
  5358  00277C  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5359  00277E  5016               	movf	(___fldiv@a+3)^0,w,c
  5360  002780  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5361  002782                     l3816:
  5362  002782  2A27               	incf	___fldiv@aexp^0,f,c
  5363  002784                     l1108:
  5364  002784  0E19               	movlw	25
  5365  002786  6427               	cpfsgt	___fldiv@aexp^0,c
  5366  002788  EFC8  F013         	goto	u3551
  5367  00278C  EFCA  F013         	goto	u3550
  5368  002790                     u3551:
  5369  002790  EF8A  F013         	goto	l3802
  5370  002794                     u3550:
  5371  002794  501B               	movf	___fldiv@rem^0,w,c
  5372  002796  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5373  002798  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5374  00279A  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5375  00279C  B4D8               	btfsc	status,2,c
  5376  00279E  EFD3  F013         	goto	u3561
  5377  0027A2  EFD5  F013         	goto	u3560
  5378  0027A6                     u3561:
  5379  0027A6  EFED  F013         	goto	l3828
  5380  0027AA                     u3560:
  5381  0027AA  8022               	bsf	___fldiv@grs^0,0,c
  5382  0027AC  EFED  F013         	goto	l3828
  5383  0027B0                     l3822:
  5384  0027B0  90D8               	bcf	status,0,c
  5385  0027B2  360F               	rlcf	___fldiv@b^0,f,c
  5386  0027B4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5387  0027B6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5388  0027B8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5389  0027BA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5390  0027BC  EFE2  F013         	goto	u3571
  5391  0027C0  EFE4  F013         	goto	u3570
  5392  0027C4                     u3571:
  5393  0027C4  EFE5  F013         	goto	l1117
  5394  0027C8                     u3570:
  5395  0027C8  800F               	bsf	___fldiv@b^0,0,c
  5396  0027CA                     l1117:
  5397  0027CA  90D8               	bcf	status,0,c
  5398  0027CC  3622               	rlcf	___fldiv@grs^0,f,c
  5399  0027CE  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5400  0027D0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5401  0027D2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5402  0027D4  0620               	decf	___fldiv@new_exp^0,f,c
  5403  0027D6  A0D8               	btfss	status,0,c
  5404  0027D8  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5405  0027DA                     l3828:
  5406  0027DA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5407  0027DC  EFF2  F013         	goto	u3581
  5408  0027E0  EFF4  F013         	goto	u3580
  5409  0027E4                     u3581:
  5410  0027E4  EFD8  F013         	goto	l3822
  5411  0027E8                     u3580:
  5412  0027E8  0E00               	movlw	0
  5413  0027EA  6E27               	movwf	___fldiv@aexp^0,c
  5414  0027EC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5415  0027EE  EFFB  F013         	goto	u3591
  5416  0027F2  EFFD  F013         	goto	u3590
  5417  0027F6                     u3591:
  5418  0027F6  EF21  F014         	goto	l1119
  5419  0027FA                     u3590:
  5420  0027FA  0EFF               	movlw	255
  5421  0027FC  1422               	andwf	___fldiv@grs^0,w,c
  5422  0027FE  6E17               	movwf	??___fldiv^0,c
  5423  002800  0EFF               	movlw	255
  5424  002802  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5425  002804  6E18               	movwf	(??___fldiv+1)^0,c
  5426  002806  0EFF               	movlw	255
  5427  002808  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5428  00280A  6E19               	movwf	(??___fldiv+2)^0,c
  5429  00280C  0E7F               	movlw	127
  5430  00280E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5431  002810  6E1A               	movwf	(??___fldiv+3)^0,c
  5432  002812  5017               	movf	??___fldiv^0,w,c
  5433  002814  1018               	iorwf	(??___fldiv+1)^0,w,c
  5434  002816  1019               	iorwf	(??___fldiv+2)^0,w,c
  5435  002818  101A               	iorwf	(??___fldiv+3)^0,w,c
  5436  00281A  B4D8               	btfsc	status,2,c
  5437  00281C  EF12  F014         	goto	u3601
  5438  002820  EF14  F014         	goto	u3600
  5439  002824                     u3601:
  5440  002824  EF18  F014         	goto	l1120
  5441  002828                     u3600:
  5442  002828                     l3836:
  5443  002828  0E01               	movlw	1
  5444  00282A  6E27               	movwf	___fldiv@aexp^0,c
  5445  00282C  EF21  F014         	goto	l1119
  5446  002830                     l1120:
  5447  002830  A00F               	btfss	___fldiv@b^0,0,c
  5448  002832  EF1D  F014         	goto	u3611
  5449  002836  EF1F  F014         	goto	u3610
  5450  00283A                     u3611:
  5451  00283A  EF21  F014         	goto	l1119
  5452  00283E                     u3610:
  5453  00283E  EF14  F014         	goto	l3836
  5454  002842                     l1119:
  5455  002842  5027               	movf	___fldiv@aexp^0,w,c
  5456  002844  B4D8               	btfsc	status,2,c
  5457  002846  EF27  F014         	goto	u3621
  5458  00284A  EF29  F014         	goto	u3620
  5459  00284E                     u3621:
  5460  00284E  EF4D  F014         	goto	l3848
  5461  002852                     u3620:
  5462  002852  0E01               	movlw	1
  5463  002854  260F               	addwf	___fldiv@b^0,f,c
  5464  002856  0E00               	movlw	0
  5465  002858  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5466  00285A  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5467  00285C  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5468  00285E  A012               	btfss	(___fldiv@b+3)^0,0,c
  5469  002860  EF34  F014         	goto	u3631
  5470  002864  EF36  F014         	goto	u3630
  5471  002868                     u3631:
  5472  002868  EF4D  F014         	goto	l3848
  5473  00286C                     u3630:
  5474  00286C  C00F  F017         	movff	___fldiv@b,??___fldiv
  5475  002870  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5476  002874  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5477  002878  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5478  00287C  341A               	rlcf	(??___fldiv+3)^0,w,c
  5479  00287E  321A               	rrcf	(??___fldiv+3)^0,f,c
  5480  002880  3219               	rrcf	(??___fldiv+2)^0,f,c
  5481  002882  3218               	rrcf	(??___fldiv+1)^0,f,c
  5482  002884  3217               	rrcf	??___fldiv^0,f,c
  5483  002886  C017  F00F         	movff	??___fldiv,___fldiv@b
  5484  00288A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5485  00288E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5486  002892  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5487  002896  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5488  002898  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5489  00289A                     l3848:
  5490  00289A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5491  00289C  EF58  F014         	goto	u3641
  5492  0028A0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5493  0028A2  E108               	bnz	u3640
  5494  0028A4  2820               	incf	___fldiv@new_exp^0,w,c
  5495  0028A6  A0D8               	btfss	status,0,c
  5496  0028A8  EF58  F014         	goto	u3641
  5497  0028AC  EF5A  F014         	goto	u3640
  5498  0028B0                     u3641:
  5499  0028B0  EF65  F014         	goto	l3852
  5500  0028B4                     u3640:
  5501  0028B4  0E00               	movlw	0
  5502  0028B6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5503  0028B8  6820               	setf	___fldiv@new_exp^0,c
  5504  0028BA  0E00               	movlw	0
  5505  0028BC  6E0F               	movwf	___fldiv@b^0,c
  5506  0028BE  0E00               	movlw	0
  5507  0028C0  6E10               	movwf	(___fldiv@b+1)^0,c
  5508  0028C2  0E00               	movlw	0
  5509  0028C4  6E11               	movwf	(___fldiv@b+2)^0,c
  5510  0028C6  0E00               	movlw	0
  5511  0028C8  6E12               	movwf	(___fldiv@b+3)^0,c
  5512  0028CA                     l3852:
  5513  0028CA  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5514  0028CC  EF72  F014         	goto	u3650
  5515  0028D0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5516  0028D2  E106               	bnz	u3651
  5517  0028D4  0420               	decf	___fldiv@new_exp^0,w,c
  5518  0028D6  B0D8               	btfsc	status,0,c
  5519  0028D8  EF70  F014         	goto	u3651
  5520  0028DC  EF72  F014         	goto	u3650
  5521  0028E0                     u3651:
  5522  0028E0  EF80  F014         	goto	l3856
  5523  0028E4                     u3650:
  5524  0028E4  0E00               	movlw	0
  5525  0028E6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5526  0028E8  0E00               	movlw	0
  5527  0028EA  6E20               	movwf	___fldiv@new_exp^0,c
  5528  0028EC  0E00               	movlw	0
  5529  0028EE  6E0F               	movwf	___fldiv@b^0,c
  5530  0028F0  0E00               	movlw	0
  5531  0028F2  6E10               	movwf	(___fldiv@b+1)^0,c
  5532  0028F4  0E00               	movlw	0
  5533  0028F6  6E11               	movwf	(___fldiv@b+2)^0,c
  5534  0028F8  0E00               	movlw	0
  5535  0028FA  6E12               	movwf	(___fldiv@b+3)^0,c
  5536  0028FC  0E00               	movlw	0
  5537  0028FE  6E1F               	movwf	___fldiv@sign^0,c
  5538  002900                     l3856:
  5539  002900  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5540  002904  A026               	btfss	___fldiv@bexp^0,0,c
  5541  002906  EF87  F014         	goto	u3661
  5542  00290A  EF89  F014         	goto	u3660
  5543  00290E                     u3661:
  5544  00290E  EF8C  F014         	goto	l3862
  5545  002912                     u3660:
  5546  002912  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5547  002914  EF8D  F014         	goto	l3864
  5548  002918                     l3862:
  5549  002918  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5550  00291A                     l3864:
  5551  00291A  90D8               	bcf	status,0,c
  5552  00291C  3026               	rrcf	___fldiv@bexp^0,w,c
  5553  00291E  6E12               	movwf	(___fldiv@b+3)^0,c
  5554  002920  EF43  F013         	goto	l3778
  5555  002924                     l1106:
  5556  002924  0012               	return		;funcret
  5557  002926                     __end_of___fldiv:
  5558                           	callstack 0
  5559                           
  5560 ;; *************** function _color_predict *****************
  5561 ;; Defined at:
  5562 ;;		line 152 in file "color.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  color           1    wreg     unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  color           1  125[BANK0 ] unsigned char 
  5567 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5568 ;;  color_name      1    0        unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  1    wreg      void 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;Total ram usage:      101 bytes
  5583 ;; Hardware stack levels used: 1
  5584 ;; Hardware stack levels required when called: 8
  5585 ;; This function calls:
  5586 ;;		_sendStringSerial4
  5587 ;;		_sprintf
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text18
  5594  003594                     __ptext18:
  5595                           	callstack 0
  5596  003594                     _color_predict:
  5597                           	callstack 22
  5598                           
  5599                           ;incstack = 0
  5600                           ;color_predict@color stored from wreg
  5601  003594  0100               	movlb	0	; () banked
  5602  003596  6FDD               	movwf	color_predict@color& (0+255),b
  5603  003598                     
  5604                           ;color.c: 152: void color_predict(unsigned char color);color.c: 153: {;color.c: 154:    
      +                           char buf[100];;color.c: 155:     char color_name;;color.c: 156:     if (color == 0){col
      +                          or_name = "Error";}
  5605  003598  0100               	movlb	0	; () banked
  5606  00359A  51DD               	movf	color_predict@color& (0+255),w,b
  5607  00359C  A4D8               	btfss	status,2,c
  5608  00359E  EFD3  F01A         	goto	u3771
  5609  0035A2  EFD5  F01A         	goto	u3770
  5610  0035A6                     u3771:
  5611  0035A6  EFD5  F01A         	goto	l3940
  5612  0035AA                     u3770:
  5613  0035AA                     l3940:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;color.c: 157:     if (color == 1){color_name = "Red";}
  5617  0035AA  05DD               	decf	color_predict@color& (0+255),w,b
  5618  0035AC  A4D8               	btfss	status,2,c
  5619  0035AE  EFDB  F01A         	goto	u3781
  5620  0035B2  EFDD  F01A         	goto	u3780
  5621  0035B6                     u3781:
  5622  0035B6  EFDD  F01A         	goto	l3944
  5623  0035BA                     u3780:
  5624  0035BA                     l3944:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;color.c: 158:     if (color == 2){color_name = "Green";}
  5628  0035BA  0E02               	movlw	2
  5629  0035BC  19DD               	xorwf	color_predict@color& (0+255),w,b
  5630  0035BE  A4D8               	btfss	status,2,c
  5631  0035C0  EFE4  F01A         	goto	u3791
  5632  0035C4  EFE6  F01A         	goto	u3790
  5633  0035C8                     u3791:
  5634  0035C8  EFE6  F01A         	goto	l3948
  5635  0035CC                     u3790:
  5636  0035CC                     l3948:
  5637                           
  5638                           ; BSR set to: 0
  5639                           ;color.c: 159:     if (color == 3){color_name = "Blue";}
  5640  0035CC  0E03               	movlw	3
  5641  0035CE  19DD               	xorwf	color_predict@color& (0+255),w,b
  5642  0035D0  A4D8               	btfss	status,2,c
  5643  0035D2  EFED  F01A         	goto	u3801
  5644  0035D6  EFEF  F01A         	goto	u3800
  5645  0035DA                     u3801:
  5646  0035DA  EFEF  F01A         	goto	l3952
  5647  0035DE                     u3800:
  5648  0035DE                     l3952:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;color.c: 160:     if (color == 4){color_name = "Yellow";}
  5652  0035DE  0E04               	movlw	4
  5653  0035E0  19DD               	xorwf	color_predict@color& (0+255),w,b
  5654  0035E2  A4D8               	btfss	status,2,c
  5655  0035E4  EFF6  F01A         	goto	u3811
  5656  0035E8  EFF8  F01A         	goto	u3810
  5657  0035EC                     u3811:
  5658  0035EC  EFF8  F01A         	goto	l3956
  5659  0035F0                     u3810:
  5660  0035F0                     l3956:
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;color.c: 161:     if (color == 5){color_name = "Pink";}
  5664  0035F0  0E05               	movlw	5
  5665  0035F2  19DD               	xorwf	color_predict@color& (0+255),w,b
  5666  0035F4  A4D8               	btfss	status,2,c
  5667  0035F6  EFFF  F01A         	goto	u3821
  5668  0035FA  EF01  F01B         	goto	u3820
  5669  0035FE                     u3821:
  5670  0035FE  EF01  F01B         	goto	l3960
  5671  003602                     u3820:
  5672  003602                     l3960:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;color.c: 162:     if (color == 6){color_name = "Orange";}
  5676  003602  0E06               	movlw	6
  5677  003604  19DD               	xorwf	color_predict@color& (0+255),w,b
  5678  003606  A4D8               	btfss	status,2,c
  5679  003608  EF08  F01B         	goto	u3831
  5680  00360C  EF0A  F01B         	goto	u3830
  5681  003610                     u3831:
  5682  003610  EF0A  F01B         	goto	l3964
  5683  003614                     u3830:
  5684  003614                     l3964:
  5685                           
  5686                           ; BSR set to: 0
  5687                           ;color.c: 163:     if (color == 7){color_name = "Light blue";}
  5688  003614  0E07               	movlw	7
  5689  003616  19DD               	xorwf	color_predict@color& (0+255),w,b
  5690  003618  A4D8               	btfss	status,2,c
  5691  00361A  EF11  F01B         	goto	u3841
  5692  00361E  EF13  F01B         	goto	u3840
  5693  003622                     u3841:
  5694  003622  EF13  F01B         	goto	l3968
  5695  003626                     u3840:
  5696  003626                     l3968:
  5697                           
  5698                           ; BSR set to: 0
  5699                           ;color.c: 164:     if (color == 8){color_name = "White";}
  5700  003626  0E08               	movlw	8
  5701  003628  19DD               	xorwf	color_predict@color& (0+255),w,b
  5702  00362A  A4D8               	btfss	status,2,c
  5703  00362C  EF1A  F01B         	goto	u3851
  5704  003630  EF1C  F01B         	goto	u3850
  5705  003634                     u3851:
  5706  003634  EF1C  F01B         	goto	l3972
  5707  003638                     u3850:
  5708  003638                     l3972:
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;color.c: 165:     if (color == 9){color_name = "Black";}
  5712  003638  0E09               	movlw	9
  5713  00363A  19DD               	xorwf	color_predict@color& (0+255),w,b
  5714  00363C  A4D8               	btfss	status,2,c
  5715  00363E  EF23  F01B         	goto	u3861
  5716  003642  EF25  F01B         	goto	u3860
  5717  003646                     u3861:
  5718  003646  EF25  F01B         	goto	l3976
  5719  00364A                     u3860:
  5720  00364A                     l3976:
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;color.c: 167:     sprintf(buf,"\t%d\r\n", color);
  5724  00364A  0E79               	movlw	low color_predict@buf
  5725  00364C  6F60               	movwf	sprintf@s& (0+255),b
  5726  00364E  0E00               	movlw	high color_predict@buf
  5727  003650  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5728  003652  0E0D               	movlw	low (STR_1+8)
  5729  003654  6F62               	movwf	sprintf@fmt& (0+255),b
  5730  003656  0E0E               	movlw	high (STR_1+8)
  5731  003658  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5732  00365A  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5733  00365E  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5734  003660  EC67  F01D         	call	_sprintf	;wreg free
  5735  003664                     
  5736                           ;color.c: 168:     sendStringSerial4(buf);
  5737  003664  0E79               	movlw	low color_predict@buf
  5738  003666  6E02               	movwf	sendStringSerial4@string^0,c
  5739  003668  0E00               	movlw	high color_predict@buf
  5740  00366A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5741  00366C  EC7E  F01F         	call	_sendStringSerial4	;wreg free
  5742  003670  0012               	return		;funcret
  5743  003672                     __end_of_color_predict:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function _color_display *****************
  5747 ;; Defined at:
  5748 ;;		line 136 in file "color.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5751 ;;		 -> main@rgb(8), 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      void 
  5756 ;; Registers used:
  5757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5764 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;Total ram usage:      102 bytes
  5768 ;; Hardware stack levels used: 1
  5769 ;; Hardware stack levels required when called: 8
  5770 ;; This function calls:
  5771 ;;		_sendStringSerial4
  5772 ;;		_sprintf
  5773 ;; This function is called by:
  5774 ;;		_main
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text19
  5779  00399E                     __ptext19:
  5780                           	callstack 0
  5781  00399E                     _color_display:
  5782                           	callstack 22
  5783  00399E                     
  5784                           ;color.c: 136: void color_display(struct color_rgb *m);color.c: 137: {;color.c: 138:    
      +                           char buf[100];;color.c: 139:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  5785  00399E  0E79               	movlw	low color_display@buf
  5786  0039A0  0100               	movlb	0	; () banked
  5787  0039A2  6F60               	movwf	sprintf@s& (0+255),b
  5788  0039A4  0E00               	movlw	high color_display@buf
  5789  0039A6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5790  0039A8  0E05               	movlw	low STR_1
  5791  0039AA  6F62               	movwf	sprintf@fmt& (0+255),b
  5792  0039AC  0E0E               	movlw	high STR_1
  5793  0039AE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5794  0039B0  C058  FFD9         	movff	color_display@m,fsr2l
  5795  0039B4  C059  FFDA         	movff	color_display@m+1,fsr2h
  5796  0039B8  CFDE F064          	movff	postinc2,?_sprintf+4
  5797  0039BC  CFDD F065          	movff	postdec2,?_sprintf+5
  5798  0039C0  EE20 F002          	lfsr	2,2
  5799  0039C4  5058               	movf	color_display@m^0,w,c
  5800  0039C6  26D9               	addwf	fsr2l,f,c
  5801  0039C8  5059               	movf	(color_display@m+1)^0,w,c
  5802  0039CA  22DA               	addwfc	fsr2h,f,c
  5803  0039CC  CFDE F066          	movff	postinc2,?_sprintf+6
  5804  0039D0  CFDD F067          	movff	postdec2,?_sprintf+7
  5805  0039D4  EE20 F004          	lfsr	2,4
  5806  0039D8  5058               	movf	color_display@m^0,w,c
  5807  0039DA  26D9               	addwf	fsr2l,f,c
  5808  0039DC  5059               	movf	(color_display@m+1)^0,w,c
  5809  0039DE  22DA               	addwfc	fsr2h,f,c
  5810  0039E0  CFDE F068          	movff	postinc2,?_sprintf+8
  5811  0039E4  CFDD F069          	movff	postdec2,?_sprintf+9
  5812  0039E8  EE20 F006          	lfsr	2,6
  5813  0039EC  5058               	movf	color_display@m^0,w,c
  5814  0039EE  26D9               	addwf	fsr2l,f,c
  5815  0039F0  5059               	movf	(color_display@m+1)^0,w,c
  5816  0039F2  22DA               	addwfc	fsr2h,f,c
  5817  0039F4  CFDE F06A          	movff	postinc2,?_sprintf+10
  5818  0039F8  CFDD F06B          	movff	postdec2,?_sprintf+11
  5819  0039FC  EC67  F01D         	call	_sprintf	;wreg free
  5820  003A00                     
  5821                           ;color.c: 140:     sendStringSerial4(buf);
  5822  003A00  0E79               	movlw	low color_display@buf
  5823  003A02  6E02               	movwf	sendStringSerial4@string^0,c
  5824  003A04  0E00               	movlw	high color_display@buf
  5825  003A06  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5826  003A08  EC7E  F01F         	call	_sendStringSerial4	;wreg free
  5827  003A0C  0012               	return		;funcret
  5828  003A0E                     __end_of_color_display:
  5829                           	callstack 0
  5830                           
  5831 ;; *************** function _sprintf *****************
  5832 ;; Defined at:
  5833 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5836 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  5837 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5838 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5841 ;;  ap              2   12[BANK0 ] PTR void [1]
  5842 ;;		 -> ?_sprintf(2), 
  5843 ;;  ret             2    0        int 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  2    0[BANK0 ] int 
  5846 ;; Registers used:
  5847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5853 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;Total ram usage:       25 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 7
  5860 ;; This function calls:
  5861 ;;		_vfprintf
  5862 ;; This function is called by:
  5863 ;;		_color_display
  5864 ;;		_color_predict
  5865 ;;		_check_color_reading
  5866 ;;		_voltage_display
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           	psect	text20
  5871  003ACE                     __ptext20:
  5872                           	callstack 0
  5873  003ACE                     _sprintf:
  5874                           	callstack 22
  5875  003ACE  0E64               	movlw	low (?_sprintf+4)
  5876  003AD0  0100               	movlb	0	; () banked
  5877  003AD2  6F6C               	movwf	sprintf@ap& (0+255),b
  5878  003AD4  0E00               	movlw	high (?_sprintf+4)
  5879  003AD6  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5880  003AD8  C060  F06E         	movff	sprintf@s,sprintf@f
  5881  003ADC  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5882  003AE0                     
  5883                           ; BSR set to: 0
  5884  003AE0  0E00               	movlw	0
  5885  003AE2  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5886  003AE4  0E00               	movlw	0
  5887  003AE6  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5888  003AE8                     
  5889                           ; BSR set to: 0
  5890  003AE8  0E00               	movlw	0
  5891  003AEA  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5892  003AEC  0E00               	movlw	0
  5893  003AEE  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5894  003AF0                     
  5895                           ; BSR set to: 0
  5896  003AF0  0E6E               	movlw	low sprintf@f
  5897  003AF2  6E50               	movwf	vfprintf@fp^0,c
  5898  003AF4  0E00               	movlw	high sprintf@f
  5899  003AF6  6E51               	movwf	(vfprintf@fp+1)^0,c
  5900  003AF8  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5901  003AFC  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5902  003B00  0E6C               	movlw	low sprintf@ap
  5903  003B02  6E54               	movwf	vfprintf@ap^0,c
  5904  003B04  0E00               	movlw	high sprintf@ap
  5905  003B06  6E55               	movwf	(vfprintf@ap+1)^0,c
  5906  003B08  EC07  F01D         	call	_vfprintf	;wreg free
  5907  003B0C  0100               	movlb	0	; () banked
  5908  003B0E  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5909  003B10  2560               	addwf	sprintf@s& (0+255),w,b
  5910  003B12  6ED9               	movwf	fsr2l,c
  5911  003B14  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5912  003B16  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5913  003B18  6EDA               	movwf	fsr2h,c
  5914  003B1A  0E00               	movlw	0
  5915  003B1C  6EDF               	movwf	indf2,c
  5916  003B1E                     
  5917                           ; BSR set to: 0
  5918  003B1E  0012               	return		;funcret
  5919  003B20                     __end_of_sprintf:
  5920                           	callstack 0
  5921                           
  5922 ;; *************** function _vfprintf *****************
  5923 ;; Defined at:
  5924 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5925 ;; Parameters:    Size  Location     Type
  5926 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5927 ;;		 -> sprintf@f(11), 
  5928 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5929 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  5930 ;;  ap              2   83[COMRAM] PTR PTR void 
  5931 ;;		 -> sprintf@ap(2), 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5934 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  2   79[COMRAM] int 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5944 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;Total ram usage:        8 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 6
  5951 ;; This function calls:
  5952 ;;		_vfpfcnvrt
  5953 ;; This function is called by:
  5954 ;;		_sprintf
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text21
  5959  003A0E                     __ptext21:
  5960                           	callstack 0
  5961  003A0E                     _vfprintf:
  5962                           	callstack 22
  5963  003A0E                     
  5964                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5965  003A0E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5966  003A12  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5967  003A16                     
  5968                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5969  003A16  0E00               	movlw	0
  5970  003A18  0100               	movlb	0	; () banked
  5971  003A1A  6FEF               	movwf	(_nout+1)& (0+255),b
  5972  003A1C  0E00               	movlw	0
  5973  003A1E  6FEE               	movwf	_nout& (0+255),b
  5974                           
  5975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5976  003A20  EF25  F01D         	goto	l3654
  5977  003A24                     l3652:
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5981  003A24  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5982  003A28  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5983  003A2C  0E56               	movlw	low vfprintf@cfmt
  5984  003A2E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5985  003A30  0E00               	movlw	high vfprintf@cfmt
  5986  003A32  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5987  003A34  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5988  003A38  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5989  003A3C  ECDF  F016         	call	_vfpfcnvrt	;wreg free
  5990  003A40  5040               	movf	?_vfpfcnvrt^0,w,c
  5991  003A42  0100               	movlb	0	; () banked
  5992  003A44  27EE               	addwf	_nout& (0+255),f,b
  5993  003A46  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5994  003A48  23EF               	addwfc	(_nout+1)& (0+255),f,b
  5995  003A4A                     l3654:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5999  003A4A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6000  003A4E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6001  003A52                     	if	0	;tblptru may be non-zero
  6002  003A52                     	endif
  6003  003A52                     	if	0	;tblptru may be non-zero
  6004  003A52                     	endif
  6005  003A52  0008               	tblrd		*
  6006  003A54  50F5               	movf	tablat,w,c
  6007  003A56  0900               	iorlw	0
  6008  003A58  A4D8               	btfss	status,2,c
  6009  003A5A  EF31  F01D         	goto	u3381
  6010  003A5E  EF33  F01D         	goto	u3380
  6011  003A62                     u3381:
  6012  003A62  EF12  F01D         	goto	l3652
  6013  003A66                     u3380:
  6014  003A66                     
  6015                           ; BSR set to: 0
  6016                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6017  003A66  C0EE  F050         	movff	_nout,?_vfprintf
  6018  003A6A  C0EF  F051         	movff	_nout+1,?_vfprintf+1
  6019  003A6E                     
  6020                           ; BSR set to: 0
  6021  003A6E  0012               	return		;funcret
  6022  003A70                     __end_of_vfprintf:
  6023                           	callstack 0
  6024                           
  6025 ;; *************** function _vfpfcnvrt *****************
  6026 ;; Defined at:
  6027 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6028 ;; Parameters:    Size  Location     Type
  6029 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6030 ;;		 -> sprintf@f(11), 
  6031 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6032 ;;		 -> vfprintf@cfmt(2), 
  6033 ;;  ap              2   67[COMRAM] PTR PTR void 
  6034 ;;		 -> sprintf@ap(2), 
  6035 ;; Auto vars:     Size  Location     Type
  6036 ;;  ll              8   71[COMRAM] long long 
  6037 ;;  llu             8    0        unsigned long long 
  6038 ;;  f               4    0        unsigned long long 
  6039 ;;  vp              3    0        PTR void 
  6040 ;;  ct              3    0        unsigned char [3]
  6041 ;;  cp              3    0        PTR unsigned char 
  6042 ;;  i               2    0        int 
  6043 ;;  done            2    0        int 
  6044 ;;  c               1    0        unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  2   63[COMRAM] int 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6054 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;Total ram usage:       16 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 5
  6061 ;; This function calls:
  6062 ;;		_dtoa
  6063 ;;		_fputc
  6064 ;; This function is called by:
  6065 ;;		_vfprintf
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text22
  6070  002DBE                     __ptext22:
  6071                           	callstack 0
  6072  002DBE                     _vfpfcnvrt:
  6073                           	callstack 22
  6074  002DBE                     
  6075                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6076  002DBE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6077  002DC2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6078  002DC6  CFDE FFF6          	movff	postinc2,tblptrl
  6079  002DCA  CFDD FFF7          	movff	postdec2,tblptrh
  6080  002DCE                     	if	0	;tblptru may be non-zero
  6081  002DCE                     	endif
  6082  002DCE                     	if	0	;tblptru may be non-zero
  6083  002DCE                     	endif
  6084  002DCE  0008               	tblrd		*
  6085  002DD0  50F5               	movf	tablat,w,c
  6086  002DD2  0A25               	xorlw	37
  6087  002DD4  A4D8               	btfss	status,2,c
  6088  002DD6  EFEF  F016         	goto	u3161
  6089  002DDA  EFF1  F016         	goto	u3160
  6090  002DDE                     u3161:
  6091  002DDE  EF9D  F017         	goto	l3524
  6092  002DE2                     u3160:
  6093  002DE2                     
  6094                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6095  002DE2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6096  002DE6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6097  002DEA  2ADE               	incf	postinc2,f,c
  6098  002DEC  0E00               	movlw	0
  6099  002DEE  22DD               	addwfc	postdec2,f,c
  6100  002DF0                     
  6101                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6102  002DF0  0E00               	movlw	0
  6103  002DF2  0100               	movlb	0	; () banked
  6104  002DF4  6FF1               	movwf	(_width+1)& (0+255),b
  6105  002DF6  0E00               	movlw	0
  6106  002DF8  6FF0               	movwf	_width& (0+255),b
  6107  002DFA  C0F0  F0F4         	movff	_width,_flags
  6108  002DFE  C0F1  F0F5         	movff	_width+1,_flags+1
  6109  002E02                     
  6110                           ; BSR set to: 0
  6111                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6112  002E02  69F2               	setf	_prec& (0+255),b
  6113  002E04  69F3               	setf	(_prec+1)& (0+255),b
  6114  002E06                     
  6115                           ; BSR set to: 0
  6116                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6117  002E06  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6118  002E0A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6119  002E0E  CFDE FFF6          	movff	postinc2,tblptrl
  6120  002E12  CFDD FFF7          	movff	postdec2,tblptrh
  6121  002E16                     	if	0	;tblptru may be non-zero
  6122  002E16                     	endif
  6123  002E16                     	if	0	;tblptru may be non-zero
  6124  002E16                     	endif
  6125  002E16  0008               	tblrd		*
  6126  002E18  50F5               	movf	tablat,w,c
  6127  002E1A  0A64               	xorlw	100
  6128  002E1C  B4D8               	btfsc	status,2,c
  6129  002E1E  EF13  F017         	goto	u3171
  6130  002E22  EF15  F017         	goto	u3170
  6131  002E26                     u3171:
  6132  002E26  EF27  F017         	goto	l3502
  6133  002E2A                     u3170:
  6134  002E2A                     
  6135                           ; BSR set to: 0
  6136  002E2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6137  002E2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6138  002E32  CFDE FFF6          	movff	postinc2,tblptrl
  6139  002E36  CFDD FFF7          	movff	postdec2,tblptrh
  6140  002E3A                     	if	0	;tblptru may be non-zero
  6141  002E3A                     	endif
  6142  002E3A                     	if	0	;tblptru may be non-zero
  6143  002E3A                     	endif
  6144  002E3A  0008               	tblrd		*
  6145  002E3C  50F5               	movf	tablat,w,c
  6146  002E3E  0A69               	xorlw	105
  6147  002E40  A4D8               	btfss	status,2,c
  6148  002E42  EF25  F017         	goto	u3181
  6149  002E46  EF27  F017         	goto	u3180
  6150  002E4A                     u3181:
  6151  002E4A  EF67  F017         	goto	l3508
  6152  002E4E                     u3180:
  6153  002E4E                     l3502:
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6157  002E4E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6158  002E52  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6159  002E56  2ADE               	incf	postinc2,f,c
  6160  002E58  0E00               	movlw	0
  6161  002E5A  22DD               	addwfc	postdec2,f,c
  6162                           
  6163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6164  002E5C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6165  002E60  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6166  002E64  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6167  002E68  0E02               	movlw	2
  6168  002E6A  26DE               	addwf	postinc2,f,c
  6169  002E6C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6170  002E70  0E00               	movlw	0
  6171  002E72  22DD               	addwfc	postdec2,f,c
  6172  002E74  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6173  002E78  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6174  002E7C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6175  002E80  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6176  002E84  0E00               	movlw	0
  6177  002E86  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6178  002E88  0EFF               	movlw	-1
  6179  002E8A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6180  002E8C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6181  002E8E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6182  002E90  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6183  002E92  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6184  002E94  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6185  002E96                     
  6186                           ; BSR set to: 0
  6187                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6188  002E96  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6189  002E9A  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6190  002E9E  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6191  002EA2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6192  002EA6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6193  002EAA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6194  002EAE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6195  002EB2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6196  002EB6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6197  002EBA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6198  002EBE  EC93  F014         	call	_dtoa	;wreg free
  6199  002EC2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6200  002EC6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6201  002ECA  EFB8  F017         	goto	l1272
  6202  002ECE                     l3508:
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6206  002ECE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6207  002ED2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6208  002ED6  CFDE FFF6          	movff	postinc2,tblptrl
  6209  002EDA  CFDD FFF7          	movff	postdec2,tblptrh
  6210  002EDE                     	if	0	;tblptru may be non-zero
  6211  002EDE                     	endif
  6212  002EDE                     	if	0	;tblptru may be non-zero
  6213  002EDE                     	endif
  6214  002EDE  0008               	tblrd		*
  6215  002EE0  50F5               	movf	tablat,w,c
  6216  002EE2  0A25               	xorlw	37
  6217  002EE4  A4D8               	btfss	status,2,c
  6218  002EE6  EF77  F017         	goto	u3191
  6219  002EEA  EF79  F017         	goto	u3190
  6220  002EEE                     u3191:
  6221  002EEE  EF90  F017         	goto	l3518
  6222  002EF2                     u3190:
  6223  002EF2                     
  6224                           ; BSR set to: 0
  6225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6226  002EF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6227  002EF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6228  002EFA  2ADE               	incf	postinc2,f,c
  6229  002EFC  0E00               	movlw	0
  6230  002EFE  22DD               	addwfc	postdec2,f,c
  6231  002F00                     
  6232                           ; BSR set to: 0
  6233                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6234  002F00  0E00               	movlw	0
  6235  002F02  6E02               	movwf	(fputc@c+1)^0,c
  6236  002F04  0E25               	movlw	37
  6237  002F06  6E01               	movwf	fputc@c^0,c
  6238  002F08  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6239  002F0C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6240  002F10  EC07  F01C         	call	_fputc	;wreg free
  6241  002F14                     l3514:
  6242                           
  6243                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6244  002F14  0E00               	movlw	0
  6245  002F16  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6246  002F18  0E01               	movlw	1
  6247  002F1A  6E40               	movwf	?_vfpfcnvrt^0,c
  6248  002F1C  EFB8  F017         	goto	l1272
  6249  002F20                     l3518:
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6253  002F20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6254  002F24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6255  002F28  2ADE               	incf	postinc2,f,c
  6256  002F2A  0E00               	movlw	0
  6257  002F2C  22DD               	addwfc	postdec2,f,c
  6258  002F2E                     
  6259                           ; BSR set to: 0
  6260                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6261  002F2E  0E00               	movlw	0
  6262  002F30  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6263  002F32  0E00               	movlw	0
  6264  002F34  6E40               	movwf	?_vfpfcnvrt^0,c
  6265  002F36  EFB8  F017         	goto	l1272
  6266  002F3A                     l3524:
  6267                           
  6268                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6269  002F3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6270  002F3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6271  002F42  CFDE FFF6          	movff	postinc2,tblptrl
  6272  002F46  CFDD FFF7          	movff	postdec2,tblptrh
  6273  002F4A                     	if	0	;tblptru may be non-zero
  6274  002F4A                     	endif
  6275  002F4A                     	if	0	;tblptru may be non-zero
  6276  002F4A                     	endif
  6277  002F4A  0008               	tblrd		*
  6278  002F4C  50F5               	movf	tablat,w,c
  6279  002F4E  6E01               	movwf	fputc@c^0,c
  6280  002F50  6A02               	clrf	(fputc@c+1)^0,c
  6281  002F52  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6282  002F56  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6283  002F5A  EC07  F01C         	call	_fputc	;wreg free
  6284  002F5E                     
  6285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6286  002F5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6287  002F62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6288  002F66  2ADE               	incf	postinc2,f,c
  6289  002F68  0E00               	movlw	0
  6290  002F6A  22DD               	addwfc	postdec2,f,c
  6291  002F6C  EF8A  F017         	goto	l3514
  6292  002F70                     l1272:
  6293  002F70  0012               	return		;funcret
  6294  002F72                     __end_of_vfpfcnvrt:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function _dtoa *****************
  6298 ;; Defined at:
  6299 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6302 ;;		 -> sprintf@f(11), 
  6303 ;;  d               8   29[COMRAM] long long 
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;  n               8   53[COMRAM] long long 
  6306 ;;  i               2   61[COMRAM] int 
  6307 ;;  s               2   51[COMRAM] int 
  6308 ;;  w               2   49[COMRAM] int 
  6309 ;;  p               2   47[COMRAM] int 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  2   27[COMRAM] int 
  6312 ;; Registers used:
  6313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6319 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;Total ram usage:       36 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; Hardware stack levels required when called: 4
  6326 ;; This function calls:
  6327 ;;		___aodiv
  6328 ;;		___aomod
  6329 ;;		_abs
  6330 ;;		_pad
  6331 ;; This function is called by:
  6332 ;;		_vfpfcnvrt
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text23
  6337  002926                     __ptext23:
  6338                           	callstack 0
  6339  002926                     _dtoa:
  6340                           	callstack 22
  6341  002926                     
  6342                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6343  002926  C01E  F036         	movff	dtoa@d,dtoa@n
  6344  00292A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6345  00292E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6346  002932  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6347  002936  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6348  00293A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6349  00293E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6350  002942  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6351  002946                     
  6352                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6353  002946  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6354  002948  EFA8  F014         	goto	u2741
  6355  00294C  EFAB  F014         	goto	u2740
  6356  002950                     u2741:
  6357  002950  0E01               	movlw	1
  6358  002952  EFAC  F014         	goto	u2750
  6359  002956                     u2740:
  6360  002956  0E00               	movlw	0
  6361  002958                     u2750:
  6362  002958  6E34               	movwf	dtoa@s^0,c
  6363  00295A  6A35               	clrf	(dtoa@s+1)^0,c
  6364                           
  6365                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6366  00295C  5034               	movf	dtoa@s^0,w,c
  6367  00295E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6368  002960  B4D8               	btfsc	status,2,c
  6369  002962  EFB5  F014         	goto	u2761
  6370  002966  EFB7  F014         	goto	u2760
  6371  00296A                     u2761:
  6372  00296A  EFC7  F014         	goto	l3238
  6373  00296E                     u2760:
  6374  00296E                     
  6375                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6376  00296E  1E3D               	comf	(dtoa@n+7)^0,f,c
  6377  002970  1E3C               	comf	(dtoa@n+6)^0,f,c
  6378  002972  1E3B               	comf	(dtoa@n+5)^0,f,c
  6379  002974  1E3A               	comf	(dtoa@n+4)^0,f,c
  6380  002976  1E39               	comf	(dtoa@n+3)^0,f,c
  6381  002978  1E38               	comf	(dtoa@n+2)^0,f,c
  6382  00297A  1E37               	comf	(dtoa@n+1)^0,f,c
  6383  00297C  6C36               	negf	dtoa@n^0,c
  6384  00297E  0E00               	movlw	0
  6385  002980  2237               	addwfc	(dtoa@n+1)^0,f,c
  6386  002982  2238               	addwfc	(dtoa@n+2)^0,f,c
  6387  002984  2239               	addwfc	(dtoa@n+3)^0,f,c
  6388  002986  223A               	addwfc	(dtoa@n+4)^0,f,c
  6389  002988  223B               	addwfc	(dtoa@n+5)^0,f,c
  6390  00298A  223C               	addwfc	(dtoa@n+6)^0,f,c
  6391  00298C  223D               	addwfc	(dtoa@n+7)^0,f,c
  6392  00298E                     l3238:
  6393                           
  6394                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6395  00298E  0100               	movlb	0	; () banked
  6396  002990  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6397  002992  EFCD  F014         	goto	u2771
  6398  002996  EFCF  F014         	goto	u2770
  6399  00299A                     u2771:
  6400  00299A  EFD0  F014         	goto	l3242
  6401  00299E                     u2770:
  6402  00299E                     
  6403                           ; BSR set to: 0
  6404                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6405  00299E  93F4               	bcf	_flags& (0+255),1,b
  6406  0029A0                     l3242:
  6407                           
  6408                           ; BSR set to: 0
  6409                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6410  0029A0  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6411  0029A2  EFDD  F014         	goto	u2780
  6412  0029A6  51F3               	movf	(_prec+1)& (0+255),w,b
  6413  0029A8  E106               	bnz	u2781
  6414  0029AA  05F2               	decf	_prec& (0+255),w,b
  6415  0029AC  B0D8               	btfsc	status,0,c
  6416  0029AE  EFDB  F014         	goto	u2781
  6417  0029B2  EFDD  F014         	goto	u2780
  6418  0029B6                     u2781:
  6419  0029B6  EFE3  F014         	goto	l1245
  6420  0029BA                     u2780:
  6421  0029BA                     
  6422                           ; BSR set to: 0
  6423  0029BA  0E00               	movlw	0
  6424  0029BC  6E31               	movwf	(dtoa@p+1)^0,c
  6425  0029BE  0E01               	movlw	1
  6426  0029C0  6E30               	movwf	dtoa@p^0,c
  6427  0029C2  EFE7  F014         	goto	l1247
  6428  0029C6                     l1245:
  6429                           
  6430                           ; BSR set to: 0
  6431  0029C6  C0F2  F030         	movff	_prec,dtoa@p
  6432  0029CA  C0F3  F031         	movff	_prec+1,dtoa@p+1
  6433  0029CE                     l1247:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6437  0029CE  C0F0  F032         	movff	_width,dtoa@w
  6438  0029D2  C0F1  F033         	movff	_width+1,dtoa@w+1
  6439  0029D6                     
  6440                           ; BSR set to: 0
  6441                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6442  0029D6  5034               	movf	dtoa@s^0,w,c
  6443  0029D8  1035               	iorwf	(dtoa@s+1)^0,w,c
  6444  0029DA  A4D8               	btfss	status,2,c
  6445  0029DC  EFF2  F014         	goto	u2791
  6446  0029E0  EFF4  F014         	goto	u2790
  6447  0029E4                     u2791:
  6448  0029E4  EFFB  F014         	goto	l3250
  6449  0029E8                     u2790:
  6450  0029E8                     
  6451                           ; BSR set to: 0
  6452  0029E8  A5F4               	btfss	_flags& (0+255),2,b
  6453  0029EA  EFF9  F014         	goto	u2801
  6454  0029EE  EFFB  F014         	goto	u2800
  6455  0029F2                     u2801:
  6456  0029F2  EFFE  F014         	goto	l3252
  6457  0029F6                     u2800:
  6458  0029F6                     l3250:
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  6462  0029F6  0632               	decf	dtoa@w^0,f,c
  6463  0029F8  A0D8               	btfss	status,0,c
  6464  0029FA  0633               	decf	(dtoa@w+1)^0,f,c
  6465  0029FC                     l3252:
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6469  0029FC  0E00               	movlw	0
  6470  0029FE  6E3F               	movwf	(dtoa@i+1)^0,c
  6471  002A00  0E1F               	movlw	31
  6472  002A02  6E3E               	movwf	dtoa@i^0,c
  6473  002A04                     
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6476  002A04  0E00               	movlw	0
  6477  002A06  0101               	movlb	1	; () banked
  6478  002A08  6F7A               	movwf	(_dbuf+31)& (0+255),b
  6479                           
  6480                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6481  002A0A  EF83  F015         	goto	l3266
  6482  002A0E                     l3256:
  6483                           
  6484                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  6485  002A0E  063E               	decf	dtoa@i^0,f,c
  6486  002A10  A0D8               	btfss	status,0,c
  6487  002A12  063F               	decf	(dtoa@i+1)^0,f,c
  6488  002A14                     
  6489                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6490  002A14  0E5B               	movlw	low _dbuf
  6491  002A16  243E               	addwf	dtoa@i^0,w,c
  6492  002A18  6ED9               	movwf	fsr2l,c
  6493  002A1A  0E01               	movlw	high _dbuf
  6494  002A1C  203F               	addwfc	(dtoa@i+1)^0,w,c
  6495  002A1E  6EDA               	movwf	fsr2h,c
  6496  002A20  C036  F001         	movff	dtoa@n,___aomod@dividend
  6497  002A24  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6498  002A28  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6499  002A2C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6500  002A30  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6501  002A34  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6502  002A38  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6503  002A3C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6504  002A40  0E0A               	movlw	10
  6505  002A42  6E09               	movwf	___aomod@divisor^0,c
  6506  002A44  0E00               	movlw	0
  6507  002A46  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6508  002A48  0E00               	movlw	0
  6509  002A4A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6510  002A4C  0E00               	movlw	0
  6511  002A4E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6512  002A50  0E00               	movlw	0
  6513  002A52  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6514  002A54  0E00               	movlw	0
  6515  002A56  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6516  002A58  0E00               	movlw	0
  6517  002A5A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6518  002A5C  0E00               	movlw	0
  6519  002A5E  6E10               	movwf	(___aomod@divisor+7)^0,c
  6520  002A60  EC7D  F018         	call	___aomod	;wreg free
  6521  002A64  C001  F026         	movff	?___aomod,??_dtoa
  6522  002A68  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6523  002A6C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6524  002A70  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6525  002A74  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6526  002A78  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6527  002A7C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6528  002A80  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6529  002A84  C026  F013         	movff	??_dtoa,abs@a
  6530  002A88  C028  F014         	movff	??_dtoa+2,abs@a+1
  6531  002A8C  ECB7  F01E         	call	_abs	;wreg free
  6532  002A90  5013               	movf	?_abs^0,w,c
  6533  002A92  0F30               	addlw	48
  6534  002A94  6EDF               	movwf	indf2,c
  6535  002A96                     
  6536                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  6537  002A96  0630               	decf	dtoa@p^0,f,c
  6538  002A98  A0D8               	btfss	status,0,c
  6539  002A9A  0631               	decf	(dtoa@p+1)^0,f,c
  6540  002A9C                     
  6541                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  6542  002A9C  0632               	decf	dtoa@w^0,f,c
  6543  002A9E  A0D8               	btfss	status,0,c
  6544  002AA0  0633               	decf	(dtoa@w+1)^0,f,c
  6545  002AA2                     
  6546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6547  002AA2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6548  002AA6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6549  002AAA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6550  002AAE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6551  002AB2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6552  002AB6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6553  002ABA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6554  002ABE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6555  002AC2  0E0A               	movlw	10
  6556  002AC4  6E09               	movwf	___aodiv@divisor^0,c
  6557  002AC6  0E00               	movlw	0
  6558  002AC8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6559  002ACA  0E00               	movlw	0
  6560  002ACC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6561  002ACE  0E00               	movlw	0
  6562  002AD0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6563  002AD2  0E00               	movlw	0
  6564  002AD4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6565  002AD6  0E00               	movlw	0
  6566  002AD8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6567  002ADA  0E00               	movlw	0
  6568  002ADC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6569  002ADE  0E00               	movlw	0
  6570  002AE0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6571  002AE2  ECB9  F017         	call	___aodiv	;wreg free
  6572  002AE6  C001  F036         	movff	?___aodiv,dtoa@n
  6573  002AEA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6574  002AEE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6575  002AF2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6576  002AF6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6577  002AFA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6578  002AFE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6579  002B02  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6580  002B06                     l3266:
  6581                           
  6582                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6583  002B06  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6584  002B08  EF8E  F015         	goto	u2811
  6585  002B0C  503F               	movf	(dtoa@i+1)^0,w,c
  6586  002B0E  E108               	bnz	u2810
  6587  002B10  043E               	decf	dtoa@i^0,w,c
  6588  002B12  A0D8               	btfss	status,0,c
  6589  002B14  EF8E  F015         	goto	u2811
  6590  002B18  EF90  F015         	goto	u2810
  6591  002B1C                     u2811:
  6592  002B1C  EFC1  F015         	goto	l3276
  6593  002B20                     u2810:
  6594  002B20  5036               	movf	dtoa@n^0,w,c
  6595  002B22  1037               	iorwf	(dtoa@n+1)^0,w,c
  6596  002B24  1038               	iorwf	(dtoa@n+2)^0,w,c
  6597  002B26  1039               	iorwf	(dtoa@n+3)^0,w,c
  6598  002B28  103A               	iorwf	(dtoa@n+4)^0,w,c
  6599  002B2A  103B               	iorwf	(dtoa@n+5)^0,w,c
  6600  002B2C  103C               	iorwf	(dtoa@n+6)^0,w,c
  6601  002B2E  103D               	iorwf	(dtoa@n+7)^0,w,c
  6602  002B30  A4D8               	btfss	status,2,c
  6603  002B32  EF9D  F015         	goto	u2821
  6604  002B36  EF9F  F015         	goto	u2820
  6605  002B3A                     u2821:
  6606  002B3A  EF07  F015         	goto	l3256
  6607  002B3E                     u2820:
  6608  002B3E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6609  002B40  EFAC  F015         	goto	u2830
  6610  002B44  5031               	movf	(dtoa@p+1)^0,w,c
  6611  002B46  E106               	bnz	u2831
  6612  002B48  0430               	decf	dtoa@p^0,w,c
  6613  002B4A  B0D8               	btfsc	status,0,c
  6614  002B4C  EFAA  F015         	goto	u2831
  6615  002B50  EFAC  F015         	goto	u2830
  6616  002B54                     u2831:
  6617  002B54  EF07  F015         	goto	l3256
  6618  002B58                     u2830:
  6619  002B58  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6620  002B5A  EFB7  F015         	goto	u2841
  6621  002B5E  5033               	movf	(dtoa@w+1)^0,w,c
  6622  002B60  E108               	bnz	u2840
  6623  002B62  0432               	decf	dtoa@w^0,w,c
  6624  002B64  A0D8               	btfss	status,0,c
  6625  002B66  EFB7  F015         	goto	u2841
  6626  002B6A  EFB9  F015         	goto	u2840
  6627  002B6E                     u2841:
  6628  002B6E  EFC1  F015         	goto	l3276
  6629  002B72                     u2840:
  6630  002B72  0100               	movlb	0	; () banked
  6631  002B74  B3F4               	btfsc	_flags& (0+255),1,b
  6632  002B76  EFBF  F015         	goto	u2851
  6633  002B7A  EFC1  F015         	goto	u2850
  6634  002B7E                     u2851:
  6635  002B7E  EF07  F015         	goto	l3256
  6636  002B82                     u2850:
  6637  002B82                     l3276:
  6638                           
  6639                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6640  002B82  5034               	movf	dtoa@s^0,w,c
  6641  002B84  1035               	iorwf	(dtoa@s+1)^0,w,c
  6642  002B86  A4D8               	btfss	status,2,c
  6643  002B88  EFC8  F015         	goto	u2861
  6644  002B8C  EFCA  F015         	goto	u2860
  6645  002B90                     u2861:
  6646  002B90  EFD2  F015         	goto	l3280
  6647  002B94                     u2860:
  6648  002B94  0100               	movlb	0	; () banked
  6649  002B96  A5F4               	btfss	_flags& (0+255),2,b
  6650  002B98  EFD0  F015         	goto	u2871
  6651  002B9C  EFD2  F015         	goto	u2870
  6652  002BA0                     u2871:
  6653  002BA0  EFF0  F015         	goto	l3290
  6654  002BA4                     u2870:
  6655  002BA4                     l3280:
  6656                           
  6657                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  6658  002BA4  063E               	decf	dtoa@i^0,f,c
  6659  002BA6  A0D8               	btfss	status,0,c
  6660  002BA8  063F               	decf	(dtoa@i+1)^0,f,c
  6661  002BAA                     
  6662                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6663  002BAA  5034               	movf	dtoa@s^0,w,c
  6664  002BAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  6665  002BAE  A4D8               	btfss	status,2,c
  6666  002BB0  EFDC  F015         	goto	u2881
  6667  002BB4  EFDE  F015         	goto	u2880
  6668  002BB8                     u2881:
  6669  002BB8  EFE4  F015         	goto	l3286
  6670  002BBC                     u2880:
  6671  002BBC  0E00               	movlw	0
  6672  002BBE  6E2F               	movwf	(_dtoa$2328+1)^0,c
  6673  002BC0  0E2B               	movlw	43
  6674  002BC2  6E2E               	movwf	_dtoa$2328^0,c
  6675  002BC4  EFE8  F015         	goto	l3288
  6676  002BC8                     l3286:
  6677  002BC8  0E00               	movlw	0
  6678  002BCA  6E2F               	movwf	(_dtoa$2328+1)^0,c
  6679  002BCC  0E2D               	movlw	45
  6680  002BCE  6E2E               	movwf	_dtoa$2328^0,c
  6681  002BD0                     l3288:
  6682  002BD0  0E5B               	movlw	low _dbuf
  6683  002BD2  243E               	addwf	dtoa@i^0,w,c
  6684  002BD4  6ED9               	movwf	fsr2l,c
  6685  002BD6  0E01               	movlw	high _dbuf
  6686  002BD8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6687  002BDA  6EDA               	movwf	fsr2h,c
  6688  002BDC  C02E  FFDF         	movff	_dtoa$2328,indf2
  6689  002BE0                     l3290:
  6690                           
  6691                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6692  002BE0  C01C  F011         	movff	dtoa@fp,pad@fp
  6693  002BE4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6694  002BE8  0E5B               	movlw	low _dbuf
  6695  002BEA  243E               	addwf	dtoa@i^0,w,c
  6696  002BEC  6E13               	movwf	pad@buf^0,c
  6697  002BEE  0E01               	movlw	high _dbuf
  6698  002BF0  203F               	addwfc	(dtoa@i+1)^0,w,c
  6699  002BF2  6E14               	movwf	(pad@buf+1)^0,c
  6700  002BF4  C032  F015         	movff	dtoa@w,pad@p
  6701  002BF8  C033  F016         	movff	dtoa@w+1,pad@p+1
  6702  002BFC  EC6C  F01C         	call	_pad	;wreg free
  6703  002C00  C011  F01C         	movff	?_pad,?_dtoa
  6704  002C04  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6705  002C08  0012               	return		;funcret
  6706  002C0A                     __end_of_dtoa:
  6707                           	callstack 0
  6708                           
  6709 ;; *************** function _pad *****************
  6710 ;; Defined at:
  6711 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6714 ;;		 -> sprintf@f(11), 
  6715 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6716 ;;		 -> dbuf(32), 
  6717 ;;  p               2   20[COMRAM] int 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  w               2   25[COMRAM] int 
  6720 ;;  i               2   23[COMRAM] int 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  2   16[COMRAM] int 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6730 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;Total ram usage:       11 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 3
  6737 ;; This function calls:
  6738 ;;		_fputc
  6739 ;;		_fputs
  6740 ;;		_strlen
  6741 ;; This function is called by:
  6742 ;;		_dtoa
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text24
  6747  0038D8                     __ptext24:
  6748                           	callstack 0
  6749  0038D8                     _pad:
  6750                           	callstack 22
  6751  0038D8                     
  6752                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6753  0038D8  0100               	movlb	0	; () banked
  6754  0038DA  A1F4               	btfss	_flags& (0+255),0,b
  6755  0038DC  EF72  F01C         	goto	u2281
  6756  0038E0  EF74  F01C         	goto	u2280
  6757  0038E4                     u2281:
  6758  0038E4  EF7E  F01C         	goto	l3004
  6759  0038E8                     u2280:
  6760  0038E8                     
  6761                           ; BSR set to: 0
  6762                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6763  0038E8  C013  F00A         	movff	pad@buf,fputs@s
  6764  0038EC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6765  0038F0  C011  F00C         	movff	pad@fp,fputs@fp
  6766  0038F4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6767  0038F8  EC53  F01E         	call	_fputs	;wreg free
  6768  0038FC                     l3004:
  6769                           
  6770                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6771  0038FC  BE16               	btfsc	(pad@p+1)^0,7,c
  6772  0038FE  EF83  F01C         	goto	u2291
  6773  003902  EF85  F01C         	goto	u2290
  6774  003906                     u2291:
  6775  003906  EF8B  F01C         	goto	l3008
  6776  00390A                     u2290:
  6777  00390A  C015  F01A         	movff	pad@p,pad@w
  6778  00390E  C016  F01B         	movff	pad@p+1,pad@w+1
  6779  003912  EF8F  F01C         	goto	l1234
  6780  003916                     l3008:
  6781  003916  0E00               	movlw	0
  6782  003918  6E1B               	movwf	(pad@w+1)^0,c
  6783  00391A  0E00               	movlw	0
  6784  00391C  6E1A               	movwf	pad@w^0,c
  6785  00391E                     l1234:
  6786                           
  6787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6788  00391E  0E00               	movlw	0
  6789  003920  6E19               	movwf	(pad@i+1)^0,c
  6790  003922  0E00               	movlw	0
  6791  003924  6E18               	movwf	pad@i^0,c
  6792                           
  6793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6794  003926  EFA1  F01C         	goto	l3014
  6795  00392A                     l3010:
  6796                           
  6797                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6798  00392A  0E00               	movlw	0
  6799  00392C  6E02               	movwf	(fputc@c+1)^0,c
  6800  00392E  0E20               	movlw	32
  6801  003930  6E01               	movwf	fputc@c^0,c
  6802  003932  C011  F003         	movff	pad@fp,fputc@fp
  6803  003936  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6804  00393A  EC07  F01C         	call	_fputc	;wreg free
  6805  00393E                     
  6806                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6807  00393E  4A18               	infsnz	pad@i^0,f,c
  6808  003940  2A19               	incf	(pad@i+1)^0,f,c
  6809  003942                     l3014:
  6810                           
  6811                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6812  003942  501A               	movf	pad@w^0,w,c
  6813  003944  5C18               	subwf	pad@i^0,w,c
  6814  003946  5019               	movf	(pad@i+1)^0,w,c
  6815  003948  0A80               	xorlw	128
  6816  00394A  6E17               	movwf	??_pad^0,c
  6817  00394C  501B               	movf	(pad@w+1)^0,w,c
  6818  00394E  0A80               	xorlw	128
  6819  003950  5817               	subwfb	??_pad^0,w,c
  6820  003952  A0D8               	btfss	status,0,c
  6821  003954  EFAE  F01C         	goto	u2301
  6822  003958  EFB0  F01C         	goto	u2300
  6823  00395C                     u2301:
  6824  00395C  EF95  F01C         	goto	l3010
  6825  003960                     u2300:
  6826  003960                     
  6827                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6828  003960  0100               	movlb	0	; () banked
  6829  003962  B1F4               	btfsc	_flags& (0+255),0,b
  6830  003964  EFB6  F01C         	goto	u2311
  6831  003968  EFB8  F01C         	goto	u2310
  6832  00396C                     u2311:
  6833  00396C  EFC2  F01C         	goto	l3018
  6834  003970                     u2310:
  6835  003970                     
  6836                           ; BSR set to: 0
  6837                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6838  003970  C013  F00A         	movff	pad@buf,fputs@s
  6839  003974  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6840  003978  C011  F00C         	movff	pad@fp,fputs@fp
  6841  00397C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6842  003980  EC53  F01E         	call	_fputs	;wreg free
  6843  003984                     l3018:
  6844                           
  6845                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6846  003984  C013  F001         	movff	pad@buf,strlen@s
  6847  003988  C014  F002         	movff	pad@buf+1,strlen@s+1
  6848  00398C  EC49  F01F         	call	_strlen	;wreg free
  6849  003990  501A               	movf	pad@w^0,w,c
  6850  003992  2401               	addwf	?_strlen^0,w,c
  6851  003994  6E11               	movwf	?_pad^0,c
  6852  003996  501B               	movf	(pad@w+1)^0,w,c
  6853  003998  2002               	addwfc	(?_strlen+1)^0,w,c
  6854  00399A  6E12               	movwf	(?_pad+1)^0,c
  6855  00399C  0012               	return		;funcret
  6856  00399E                     __end_of_pad:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function _strlen *****************
  6860 ;; Defined at:
  6861 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6864 ;;		 -> dbuf(32), 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6867 ;;		 -> dbuf(32), 
  6868 ;; Return value:  Size  Location     Type
  6869 ;;                  2    0[COMRAM] unsigned int 
  6870 ;; Registers used:
  6871 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6872 ;; Tracked objects:
  6873 ;;		On entry : 0/0
  6874 ;;		On exit  : 0/0
  6875 ;;		Unchanged: 0/0
  6876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6877 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;Total ram usage:        4 bytes
  6882 ;; Hardware stack levels used: 1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_pad
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text25
  6891  003E92                     __ptext25:
  6892                           	callstack 0
  6893  003E92                     _strlen:
  6894                           	callstack 24
  6895  003E92  C001  F003         	movff	strlen@s,strlen@a
  6896  003E96  C002  F004         	movff	strlen@s+1,strlen@a+1
  6897  003E9A  EF51  F01F         	goto	l2914
  6898  003E9E                     l2912:
  6899  003E9E  4A01               	infsnz	strlen@s^0,f,c
  6900  003EA0  2A02               	incf	(strlen@s+1)^0,f,c
  6901  003EA2                     l2914:
  6902  003EA2  C001  FFD9         	movff	strlen@s,fsr2l
  6903  003EA6  C002  FFDA         	movff	strlen@s+1,fsr2h
  6904  003EAA  50DF               	movf	indf2,w,c
  6905  003EAC  A4D8               	btfss	status,2,c
  6906  003EAE  EF5B  F01F         	goto	u2141
  6907  003EB2  EF5D  F01F         	goto	u2140
  6908  003EB6                     u2141:
  6909  003EB6  EF4F  F01F         	goto	l2912
  6910  003EBA                     u2140:
  6911  003EBA  5003               	movf	strlen@a^0,w,c
  6912  003EBC  5C01               	subwf	strlen@s^0,w,c
  6913  003EBE  6E01               	movwf	?_strlen^0,c
  6914  003EC0  5004               	movf	(strlen@a+1)^0,w,c
  6915  003EC2  5802               	subwfb	(strlen@s+1)^0,w,c
  6916  003EC4  6E02               	movwf	(?_strlen+1)^0,c
  6917  003EC6  0012               	return		;funcret
  6918  003EC8                     __end_of_strlen:
  6919                           	callstack 0
  6920                           
  6921 ;; *************** function _fputs *****************
  6922 ;; Defined at:
  6923 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6924 ;; Parameters:    Size  Location     Type
  6925 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6926 ;;		 -> dbuf(32), 
  6927 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6928 ;;		 -> sprintf@f(11), 
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;  i               2   14[COMRAM] int 
  6931 ;;  c               1   13[COMRAM] unsigned char 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  2    9[COMRAM] int 
  6934 ;; Registers used:
  6935 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6942 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6944 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6945 ;;Total ram usage:        7 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; Hardware stack levels required when called: 2
  6948 ;; This function calls:
  6949 ;;		_fputc
  6950 ;; This function is called by:
  6951 ;;		_pad
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text26
  6956  003CA6                     __ptext26:
  6957                           	callstack 0
  6958  003CA6                     _fputs:
  6959                           	callstack 22
  6960  003CA6  0E00               	movlw	0
  6961  003CA8  6E10               	movwf	(fputs@i+1)^0,c
  6962  003CAA  0E00               	movlw	0
  6963  003CAC  6E0F               	movwf	fputs@i^0,c
  6964  003CAE  EF64  F01E         	goto	l2908
  6965  003CB2                     l2904:
  6966  003CB2  C00E  F001         	movff	fputs@c,fputc@c
  6967  003CB6  6A02               	clrf	(fputc@c+1)^0,c
  6968  003CB8  C00C  F003         	movff	fputs@fp,fputc@fp
  6969  003CBC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6970  003CC0  EC07  F01C         	call	_fputc	;wreg free
  6971  003CC4  4A0F               	infsnz	fputs@i^0,f,c
  6972  003CC6  2A10               	incf	(fputs@i+1)^0,f,c
  6973  003CC8                     l2908:
  6974  003CC8  500F               	movf	fputs@i^0,w,c
  6975  003CCA  240A               	addwf	fputs@s^0,w,c
  6976  003CCC  6ED9               	movwf	fsr2l,c
  6977  003CCE  5010               	movf	(fputs@i+1)^0,w,c
  6978  003CD0  200B               	addwfc	(fputs@s+1)^0,w,c
  6979  003CD2  6EDA               	movwf	fsr2h,c
  6980  003CD4  50DF               	movf	indf2,w,c
  6981  003CD6  6E0E               	movwf	fputs@c^0,c
  6982  003CD8  500E               	movf	fputs@c^0,w,c
  6983  003CDA  A4D8               	btfss	status,2,c
  6984  003CDC  EF72  F01E         	goto	u2131
  6985  003CE0  EF74  F01E         	goto	u2130
  6986  003CE4                     u2131:
  6987  003CE4  EF59  F01E         	goto	l2904
  6988  003CE8                     u2130:
  6989  003CE8  0012               	return		;funcret
  6990  003CEA                     __end_of_fputs:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _fputc *****************
  6994 ;; Defined at:
  6995 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  c               2    0[COMRAM] int 
  6998 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6999 ;;		 -> sprintf@f(11), 
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;		None
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  2    0[COMRAM] int 
  7004 ;; Registers used:
  7005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7013 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7014 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;Total ram usage:        9 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 1
  7018 ;; This function calls:
  7019 ;;		_putch
  7020 ;; This function is called by:
  7021 ;;		_pad
  7022 ;;		_vfpfcnvrt
  7023 ;;		_fputs
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text27
  7028  00380E                     __ptext27:
  7029                           	callstack 0
  7030  00380E                     _fputc:
  7031                           	callstack 25
  7032  00380E  5003               	movf	fputc@fp^0,w,c
  7033  003810  1004               	iorwf	(fputc@fp+1)^0,w,c
  7034  003812  B4D8               	btfsc	status,2,c
  7035  003814  EF0E  F01C         	goto	u2091
  7036  003818  EF10  F01C         	goto	u2090
  7037  00381C                     u2091:
  7038  00381C  EF19  F01C         	goto	l2892
  7039  003820                     u2090:
  7040  003820  5003               	movf	fputc@fp^0,w,c
  7041  003822  1004               	iorwf	(fputc@fp+1)^0,w,c
  7042  003824  A4D8               	btfss	status,2,c
  7043  003826  EF17  F01C         	goto	u2101
  7044  00382A  EF19  F01C         	goto	u2100
  7045  00382E                     u2101:
  7046  00382E  EF1E  F01C         	goto	l2894
  7047  003832                     u2100:
  7048  003832                     l2892:
  7049  003832  5001               	movf	fputc@c^0,w,c
  7050  003834  EC45  F020         	call	_putch
  7051  003838  EF6B  F01C         	goto	l1298
  7052  00383C                     l2894:
  7053  00383C  EE20 F009          	lfsr	2,9
  7054  003840  5003               	movf	fputc@fp^0,w,c
  7055  003842  26D9               	addwf	fsr2l,f,c
  7056  003844  5004               	movf	(fputc@fp+1)^0,w,c
  7057  003846  22DA               	addwfc	fsr2h,f,c
  7058  003848  50DE               	movf	postinc2,w,c
  7059  00384A  10DE               	iorwf	postinc2,w,c
  7060  00384C  B4D8               	btfsc	status,2,c
  7061  00384E  EF2B  F01C         	goto	u2111
  7062  003852  EF2D  F01C         	goto	u2110
  7063  003856                     u2111:
  7064  003856  EF48  F01C         	goto	l2898
  7065  00385A                     u2110:
  7066  00385A  EE20 F009          	lfsr	2,9
  7067  00385E  5003               	movf	fputc@fp^0,w,c
  7068  003860  26D9               	addwf	fsr2l,f,c
  7069  003862  5004               	movf	(fputc@fp+1)^0,w,c
  7070  003864  22DA               	addwfc	fsr2h,f,c
  7071  003866  EE10 F003          	lfsr	1,3
  7072  00386A  5003               	movf	fputc@fp^0,w,c
  7073  00386C  26E1               	addwf	fsr1l,f,c
  7074  00386E  5004               	movf	(fputc@fp+1)^0,w,c
  7075  003870  22E2               	addwfc	fsr1h,f,c
  7076  003872  50DE               	movf	postinc2,w,c
  7077  003874  5CE6               	subwf	postinc1,w,c
  7078  003876  50E6               	movf	postinc1,w,c
  7079  003878  0A80               	xorlw	128
  7080  00387A  6E09               	movwf	(??_fputc+4)^0,c
  7081  00387C  50DE               	movf	postinc2,w,c
  7082  00387E  0A80               	xorlw	128
  7083  003880  5809               	subwfb	(??_fputc+4)^0,w,c
  7084  003882  B0D8               	btfsc	status,0,c
  7085  003884  EF46  F01C         	goto	u2121
  7086  003888  EF48  F01C         	goto	u2120
  7087  00388C                     u2121:
  7088  00388C  EF6B  F01C         	goto	l1298
  7089  003890                     u2120:
  7090  003890                     l2898:
  7091  003890  EE20 F003          	lfsr	2,3
  7092  003894  5003               	movf	fputc@fp^0,w,c
  7093  003896  26D9               	addwf	fsr2l,f,c
  7094  003898  5004               	movf	(fputc@fp+1)^0,w,c
  7095  00389A  22DA               	addwfc	fsr2h,f,c
  7096  00389C  CFDE F005          	movff	postinc2,??_fputc
  7097  0038A0  CFDD F006          	movff	postdec2,??_fputc+1
  7098  0038A4  C003  FFD9         	movff	fputc@fp,fsr2l
  7099  0038A8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7100  0038AC  CFDE F007          	movff	postinc2,??_fputc+2
  7101  0038B0  CFDD F008          	movff	postdec2,??_fputc+3
  7102  0038B4  5005               	movf	??_fputc^0,w,c
  7103  0038B6  2407               	addwf	(??_fputc+2)^0,w,c
  7104  0038B8  6ED9               	movwf	fsr2l,c
  7105  0038BA  5006               	movf	(??_fputc+1)^0,w,c
  7106  0038BC  2008               	addwfc	(??_fputc+3)^0,w,c
  7107  0038BE  6EDA               	movwf	fsr2h,c
  7108  0038C0  C001  FFDF         	movff	fputc@c,indf2
  7109  0038C4  EE20 F003          	lfsr	2,3
  7110  0038C8  5003               	movf	fputc@fp^0,w,c
  7111  0038CA  26D9               	addwf	fsr2l,f,c
  7112  0038CC  5004               	movf	(fputc@fp+1)^0,w,c
  7113  0038CE  22DA               	addwfc	fsr2h,f,c
  7114  0038D0  2ADE               	incf	postinc2,f,c
  7115  0038D2  0E00               	movlw	0
  7116  0038D4  22DD               	addwfc	postdec2,f,c
  7117  0038D6                     l1298:
  7118  0038D6  0012               	return		;funcret
  7119  0038D8                     __end_of_fputc:
  7120                           	callstack 0
  7121                           
  7122 ;; *************** function _putch *****************
  7123 ;; Defined at:
  7124 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;  c               1    wreg     unsigned char 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  c               1    0[COMRAM] unsigned char 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used: 1
  7144 ;; This function calls:
  7145 ;;		Nothing
  7146 ;; This function is called by:
  7147 ;;		_fputc
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           	psect	text28
  7152  00408A                     __ptext28:
  7153                           	callstack 0
  7154  00408A                     _putch:
  7155                           	callstack 25
  7156  00408A  0012               	return		;funcret
  7157  00408C                     __end_of_putch:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function _abs *****************
  7161 ;; Defined at:
  7162 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  a               2   18[COMRAM] int 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;		None
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  2   18[COMRAM] int 
  7169 ;; Registers used:
  7170 ;;		wreg, status,2, status,0
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7180 ;;Total ram usage:        4 bytes
  7181 ;; Hardware stack levels used: 1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_dtoa
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text29
  7190  003D6E                     __ptext29:
  7191                           	callstack 0
  7192  003D6E                     _abs:
  7193                           	callstack 25
  7194  003D6E  BE14               	btfsc	(abs@a+1)^0,7,c
  7195  003D70  EFC4  F01E         	goto	u2320
  7196  003D74  5014               	movf	(abs@a+1)^0,w,c
  7197  003D76  E106               	bnz	u2321
  7198  003D78  0413               	decf	abs@a^0,w,c
  7199  003D7A  B0D8               	btfsc	status,0,c
  7200  003D7C  EFC2  F01E         	goto	u2321
  7201  003D80  EFC4  F01E         	goto	u2320
  7202  003D84                     u2321:
  7203  003D84  EFD2  F01E         	goto	l1283
  7204  003D88                     u2320:
  7205  003D88  C013  F015         	movff	abs@a,??_abs
  7206  003D8C  C014  F016         	movff	abs@a+1,??_abs+1
  7207  003D90  1E15               	comf	??_abs^0,f,c
  7208  003D92  1E16               	comf	(??_abs+1)^0,f,c
  7209  003D94  4A15               	infsnz	??_abs^0,f,c
  7210  003D96  2A16               	incf	(??_abs+1)^0,f,c
  7211  003D98  C015  F013         	movff	??_abs,?_abs
  7212  003D9C  C016  F014         	movff	??_abs+1,?_abs+1
  7213  003DA0  EFD6  F01E         	goto	l1286
  7214  003DA4                     l1283:
  7215  003DA4  C013  F013         	movff	abs@a,?_abs
  7216  003DA8  C014  F014         	movff	abs@a+1,?_abs+1
  7217  003DAC                     l1286:
  7218  003DAC  0012               	return		;funcret
  7219  003DAE                     __end_of_abs:
  7220                           	callstack 0
  7221                           
  7222 ;; *************** function ___aomod *****************
  7223 ;; Defined at:
  7224 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;  dividend        8    0[COMRAM] long long 
  7227 ;;  divisor         8    8[COMRAM] long long 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  sign            1   17[COMRAM] unsigned char 
  7230 ;;  counter         1   16[COMRAM] unsigned char 
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  8    0[COMRAM] long long 
  7233 ;; Registers used:
  7234 ;;		wreg, status,2, status,0
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7240 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7243 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7244 ;;Total ram usage:       18 bytes
  7245 ;; Hardware stack levels used: 1
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_dtoa
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text30
  7254  0030FA                     __ptext30:
  7255                           	callstack 0
  7256  0030FA                     ___aomod:
  7257                           	callstack 25
  7258  0030FA  0E00               	movlw	0
  7259  0030FC  6E12               	movwf	___aomod@sign^0,c
  7260  0030FE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7261  003100  EF86  F018         	goto	u2220
  7262  003104  EF84  F018         	goto	u2221
  7263  003108                     u2221:
  7264  003108  EF98  F018         	goto	l2972
  7265  00310C                     u2220:
  7266  00310C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7267  00310E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7268  003110  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7269  003112  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7270  003114  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7271  003116  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7272  003118  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7273  00311A  6C01               	negf	___aomod@dividend^0,c
  7274  00311C  0E00               	movlw	0
  7275  00311E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7276  003120  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7277  003122  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7278  003124  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7279  003126  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7280  003128  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7281  00312A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7282  00312C  0E01               	movlw	1
  7283  00312E  6E12               	movwf	___aomod@sign^0,c
  7284  003130                     l2972:
  7285  003130  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7286  003132  EF9F  F018         	goto	u2230
  7287  003136  EF9D  F018         	goto	u2231
  7288  00313A                     u2231:
  7289  00313A  EFAF  F018         	goto	l2976
  7290  00313E                     u2230:
  7291  00313E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7292  003140  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7293  003142  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7294  003144  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7295  003146  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7296  003148  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7297  00314A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7298  00314C  6C09               	negf	___aomod@divisor^0,c
  7299  00314E  0E00               	movlw	0
  7300  003150  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7301  003152  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7302  003154  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7303  003156  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7304  003158  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7305  00315A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7306  00315C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7307  00315E                     l2976:
  7308  00315E  5009               	movf	___aomod@divisor^0,w,c
  7309  003160  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7310  003162  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7311  003164  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7312  003166  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7313  003168  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7314  00316A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7315  00316C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7316  00316E  B4D8               	btfsc	status,2,c
  7317  003170  EFBC  F018         	goto	u2241
  7318  003174  EFBE  F018         	goto	u2240
  7319  003178                     u2241:
  7320  003178  EF06  F019         	goto	l2992
  7321  00317C                     u2240:
  7322  00317C  0E01               	movlw	1
  7323  00317E  6E11               	movwf	___aomod@counter^0,c
  7324  003180  EFCC  F018         	goto	l2982
  7325  003184                     l2980:
  7326  003184  90D8               	bcf	status,0,c
  7327  003186  3609               	rlcf	___aomod@divisor^0,f,c
  7328  003188  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7329  00318A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7330  00318C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7331  00318E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7332  003190  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7333  003192  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7334  003194  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7335  003196  2A11               	incf	___aomod@counter^0,f,c
  7336  003198                     l2982:
  7337  003198  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7338  00319A  EFD1  F018         	goto	u2251
  7339  00319E  EFD3  F018         	goto	u2250
  7340  0031A2                     u2251:
  7341  0031A2  EFC2  F018         	goto	l2980
  7342  0031A6                     u2250:
  7343  0031A6                     l2984:
  7344  0031A6  5009               	movf	___aomod@divisor^0,w,c
  7345  0031A8  5C01               	subwf	___aomod@dividend^0,w,c
  7346  0031AA  500A               	movf	(___aomod@divisor+1)^0,w,c
  7347  0031AC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7348  0031AE  500B               	movf	(___aomod@divisor+2)^0,w,c
  7349  0031B0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7350  0031B2  500C               	movf	(___aomod@divisor+3)^0,w,c
  7351  0031B4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7352  0031B6  500D               	movf	(___aomod@divisor+4)^0,w,c
  7353  0031B8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7354  0031BA  500E               	movf	(___aomod@divisor+5)^0,w,c
  7355  0031BC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7356  0031BE  500F               	movf	(___aomod@divisor+6)^0,w,c
  7357  0031C0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7358  0031C2  5010               	movf	(___aomod@divisor+7)^0,w,c
  7359  0031C4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7360  0031C6  A0D8               	btfss	status,0,c
  7361  0031C8  EFE8  F018         	goto	u2261
  7362  0031CC  EFEA  F018         	goto	u2260
  7363  0031D0                     u2261:
  7364  0031D0  EFFA  F018         	goto	l2988
  7365  0031D4                     u2260:
  7366  0031D4  5009               	movf	___aomod@divisor^0,w,c
  7367  0031D6  5E01               	subwf	___aomod@dividend^0,f,c
  7368  0031D8  500A               	movf	(___aomod@divisor+1)^0,w,c
  7369  0031DA  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7370  0031DC  500B               	movf	(___aomod@divisor+2)^0,w,c
  7371  0031DE  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7372  0031E0  500C               	movf	(___aomod@divisor+3)^0,w,c
  7373  0031E2  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7374  0031E4  500D               	movf	(___aomod@divisor+4)^0,w,c
  7375  0031E6  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7376  0031E8  500E               	movf	(___aomod@divisor+5)^0,w,c
  7377  0031EA  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7378  0031EC  500F               	movf	(___aomod@divisor+6)^0,w,c
  7379  0031EE  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7380  0031F0  5010               	movf	(___aomod@divisor+7)^0,w,c
  7381  0031F2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7382  0031F4                     l2988:
  7383  0031F4  90D8               	bcf	status,0,c
  7384  0031F6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7385  0031F8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7386  0031FA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7387  0031FC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7388  0031FE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7389  003200  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7390  003202  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7391  003204  3209               	rrcf	___aomod@divisor^0,f,c
  7392  003206  2E11               	decfsz	___aomod@counter^0,f,c
  7393  003208  EFD3  F018         	goto	l2984
  7394  00320C                     l2992:
  7395  00320C  5012               	movf	___aomod@sign^0,w,c
  7396  00320E  B4D8               	btfsc	status,2,c
  7397  003210  EF0C  F019         	goto	u2271
  7398  003214  EF0E  F019         	goto	u2270
  7399  003218                     u2271:
  7400  003218  EF1E  F019         	goto	l2996
  7401  00321C                     u2270:
  7402  00321C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7403  00321E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7404  003220  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7405  003222  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7406  003224  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7407  003226  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7408  003228  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7409  00322A  6C01               	negf	___aomod@dividend^0,c
  7410  00322C  0E00               	movlw	0
  7411  00322E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7412  003230  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7413  003232  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7414  003234  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7415  003236  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7416  003238  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7417  00323A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7418  00323C                     l2996:
  7419  00323C  C001  F001         	movff	___aomod@dividend,?___aomod
  7420  003240  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7421  003244  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7422  003248  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7423  00324C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7424  003250  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7425  003254  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7426  003258  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7427  00325C  0012               	return		;funcret
  7428  00325E                     __end_of___aomod:
  7429                           	callstack 0
  7430                           
  7431 ;; *************** function ___aodiv *****************
  7432 ;; Defined at:
  7433 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  dividend        8    0[COMRAM] long long 
  7436 ;;  divisor         8    8[COMRAM] long long 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  quotient        8   18[COMRAM] long long 
  7439 ;;  sign            1   17[COMRAM] unsigned char 
  7440 ;;  counter         1   16[COMRAM] unsigned char 
  7441 ;; Return value:  Size  Location     Type
  7442 ;;                  8    0[COMRAM] long long 
  7443 ;; Registers used:
  7444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7445 ;; Tracked objects:
  7446 ;;		On entry : 0/0
  7447 ;;		On exit  : 0/0
  7448 ;;		Unchanged: 0/0
  7449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7450 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7451 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;Total ram usage:       26 bytes
  7455 ;; Hardware stack levels used: 1
  7456 ;; This function calls:
  7457 ;;		Nothing
  7458 ;; This function is called by:
  7459 ;;		_dtoa
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text31
  7464  002F72                     __ptext31:
  7465                           	callstack 0
  7466  002F72                     ___aodiv:
  7467                           	callstack 25
  7468  002F72  0E00               	movlw	0
  7469  002F74  6E12               	movwf	___aodiv@sign^0,c
  7470  002F76  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7471  002F78  EFC2  F017         	goto	u2150
  7472  002F7C  EFC0  F017         	goto	u2151
  7473  002F80                     u2151:
  7474  002F80  EFD4  F017         	goto	l2928
  7475  002F84                     u2150:
  7476  002F84  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7477  002F86  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7478  002F88  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7479  002F8A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7480  002F8C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7481  002F8E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7482  002F90  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7483  002F92  6C09               	negf	___aodiv@divisor^0,c
  7484  002F94  0E00               	movlw	0
  7485  002F96  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7486  002F98  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7487  002F9A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7488  002F9C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7489  002F9E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7490  002FA0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7491  002FA2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7492  002FA4  0E01               	movlw	1
  7493  002FA6  6E12               	movwf	___aodiv@sign^0,c
  7494  002FA8                     l2928:
  7495  002FA8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7496  002FAA  EFDB  F017         	goto	u2160
  7497  002FAE  EFD9  F017         	goto	u2161
  7498  002FB2                     u2161:
  7499  002FB2  EFED  F017         	goto	l2934
  7500  002FB6                     u2160:
  7501  002FB6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7502  002FB8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7503  002FBA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7504  002FBC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7505  002FBE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7506  002FC0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7507  002FC2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7508  002FC4  6C01               	negf	___aodiv@dividend^0,c
  7509  002FC6  0E00               	movlw	0
  7510  002FC8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7511  002FCA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7512  002FCC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7513  002FCE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7514  002FD0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7515  002FD2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7516  002FD4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7517  002FD6  0E01               	movlw	1
  7518  002FD8  1A12               	xorwf	___aodiv@sign^0,f,c
  7519  002FDA                     l2934:
  7520  002FDA  EE20  F013         	lfsr	2,___aodiv@quotient
  7521  002FDE  0E07               	movlw	7
  7522  002FE0                     u2171:
  7523  002FE0  6ADE               	clrf	postinc2,c
  7524  002FE2  06E8               	decf	wreg,f,c
  7525  002FE4  E2FD               	bc	u2171
  7526  002FE6  5009               	movf	___aodiv@divisor^0,w,c
  7527  002FE8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7528  002FEA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7529  002FEC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7530  002FEE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7531  002FF0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7532  002FF2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7533  002FF4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7534  002FF6  B4D8               	btfsc	status,2,c
  7535  002FF8  EF00  F018         	goto	u2181
  7536  002FFC  EF02  F018         	goto	u2180
  7537  003000                     u2181:
  7538  003000  EF54  F018         	goto	l2956
  7539  003004                     u2180:
  7540  003004  0E01               	movlw	1
  7541  003006  6E11               	movwf	___aodiv@counter^0,c
  7542  003008  EF10  F018         	goto	l2942
  7543  00300C                     l2940:
  7544  00300C  90D8               	bcf	status,0,c
  7545  00300E  3609               	rlcf	___aodiv@divisor^0,f,c
  7546  003010  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7547  003012  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7548  003014  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7549  003016  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7550  003018  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7551  00301A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7552  00301C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7553  00301E  2A11               	incf	___aodiv@counter^0,f,c
  7554  003020                     l2942:
  7555  003020  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7556  003022  EF15  F018         	goto	u2191
  7557  003026  EF17  F018         	goto	u2190
  7558  00302A                     u2191:
  7559  00302A  EF06  F018         	goto	l2940
  7560  00302E                     u2190:
  7561  00302E                     l2944:
  7562  00302E  90D8               	bcf	status,0,c
  7563  003030  3613               	rlcf	___aodiv@quotient^0,f,c
  7564  003032  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7565  003034  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7566  003036  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7567  003038  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7568  00303A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7569  00303C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7570  00303E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7571  003040  5009               	movf	___aodiv@divisor^0,w,c
  7572  003042  5C01               	subwf	___aodiv@dividend^0,w,c
  7573  003044  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7574  003046  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7575  003048  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7576  00304A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7577  00304C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7578  00304E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7579  003050  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7580  003052  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7581  003054  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7582  003056  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7583  003058  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7584  00305A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7585  00305C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7586  00305E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7587  003060  A0D8               	btfss	status,0,c
  7588  003062  EF35  F018         	goto	u2201
  7589  003066  EF37  F018         	goto	u2200
  7590  00306A                     u2201:
  7591  00306A  EF48  F018         	goto	l2952
  7592  00306E                     u2200:
  7593  00306E  5009               	movf	___aodiv@divisor^0,w,c
  7594  003070  5E01               	subwf	___aodiv@dividend^0,f,c
  7595  003072  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7596  003074  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7597  003076  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7598  003078  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7599  00307A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7600  00307C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7601  00307E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7602  003080  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7603  003082  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7604  003084  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7605  003086  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7606  003088  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7607  00308A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7608  00308C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7609  00308E  8013               	bsf	___aodiv@quotient^0,0,c
  7610  003090                     l2952:
  7611  003090  90D8               	bcf	status,0,c
  7612  003092  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7613  003094  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7614  003096  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7615  003098  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7616  00309A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7617  00309C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7618  00309E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7619  0030A0  3209               	rrcf	___aodiv@divisor^0,f,c
  7620  0030A2  2E11               	decfsz	___aodiv@counter^0,f,c
  7621  0030A4  EF17  F018         	goto	l2944
  7622  0030A8                     l2956:
  7623  0030A8  5012               	movf	___aodiv@sign^0,w,c
  7624  0030AA  B4D8               	btfsc	status,2,c
  7625  0030AC  EF5A  F018         	goto	u2211
  7626  0030B0  EF5C  F018         	goto	u2210
  7627  0030B4                     u2211:
  7628  0030B4  EF6C  F018         	goto	l2960
  7629  0030B8                     u2210:
  7630  0030B8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7631  0030BA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7632  0030BC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7633  0030BE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7634  0030C0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7635  0030C2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7636  0030C4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7637  0030C6  6C13               	negf	___aodiv@quotient^0,c
  7638  0030C8  0E00               	movlw	0
  7639  0030CA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7640  0030CC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7641  0030CE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7642  0030D0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7643  0030D2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7644  0030D4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7645  0030D6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7646  0030D8                     l2960:
  7647  0030D8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7648  0030DC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7649  0030E0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7650  0030E4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7651  0030E8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7652  0030EC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7653  0030F0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7654  0030F4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7655  0030F8  0012               	return		;funcret
  7656  0030FA                     __end_of___aodiv:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _sendStringSerial4 *****************
  7660 ;; Defined at:
  7661 ;;		line 36 in file "serial.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  string          2    1[COMRAM] PTR unsigned char 
  7664 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;Total ram usage:        2 bytes
  7681 ;; Hardware stack levels used: 1
  7682 ;; Hardware stack levels required when called: 1
  7683 ;; This function calls:
  7684 ;;		_sendCharSerial4
  7685 ;; This function is called by:
  7686 ;;		_color_display
  7687 ;;		_color_predict
  7688 ;;		_check_color_reading
  7689 ;;		_voltage_display
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text32
  7694  003EFC                     __ptext32:
  7695                           	callstack 0
  7696  003EFC                     _sendStringSerial4:
  7697                           	callstack 28
  7698  003EFC                     
  7699                           ;serial.c: 38:     while(*string != 0){
  7700  003EFC  EF89  F01F         	goto	l3702
  7701  003F00                     l3698:
  7702                           
  7703                           ;serial.c: 39:   sendCharSerial4(*string++);}
  7704  003F00  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7705  003F04  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7706  003F08  50DF               	movf	indf2,w,c
  7707  003F0A  EC1E  F020         	call	_sendCharSerial4
  7708  003F0E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7709  003F10  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7710  003F12                     l3702:
  7711                           
  7712                           ;serial.c: 38:     while(*string != 0){
  7713  003F12  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7714  003F16  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7715  003F1A  50DF               	movf	indf2,w,c
  7716  003F1C  A4D8               	btfss	status,2,c
  7717  003F1E  EF93  F01F         	goto	u3391
  7718  003F22  EF95  F01F         	goto	u3390
  7719  003F26                     u3391:
  7720  003F26  EF80  F01F         	goto	l3698
  7721  003F2A                     u3390:
  7722  003F2A  0012               	return		;funcret
  7723  003F2C                     __end_of_sendStringSerial4:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _sendCharSerial4 *****************
  7727 ;; Defined at:
  7728 ;;		line 29 in file "serial.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  charToSend      1    wreg     unsigned char 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  charToSend      1    0[COMRAM] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;Total ram usage:        1 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_sendStringSerial4
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text33
  7756  00403C                     __ptext33:
  7757                           	callstack 0
  7758  00403C                     _sendCharSerial4:
  7759                           	callstack 28
  7760                           
  7761                           ;incstack = 0
  7762                           ;sendCharSerial4@charToSend stored from wreg
  7763  00403C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7764  00403E                     l352:
  7765  00403E  010E               	movlb	14	; () banked
  7766  004040  A537               	btfss	55,2,b	;volatile
  7767  004042  EF25  F020         	goto	u3211
  7768  004046  EF27  F020         	goto	u3210
  7769  00404A                     u3211:
  7770  00404A  EF1F  F020         	goto	l352
  7771  00404E                     u3210:
  7772  00404E                     
  7773                           ; BSR set to: 14
  7774                           ;serial.c: 31:     TX4REG = charToSend;
  7775  00404E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7776  004052                     
  7777                           ; BSR set to: 14
  7778  004052  0012               	return		;funcret
  7779  004054                     __end_of_sendCharSerial4:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function _color_click_init *****************
  7783 ;; Defined at:
  7784 ;;		line 12 in file "color.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;		None
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  1    wreg      void 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7802 ;;Total ram usage:        1 bytes
  7803 ;; Hardware stack levels used: 1
  7804 ;; Hardware stack levels required when called: 3
  7805 ;; This function calls:
  7806 ;;		_I2C_2_Master_Init
  7807 ;;		_color_writetoaddr
  7808 ;; This function is called by:
  7809 ;;		_main
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text34
  7814  003EC8                     __ptext34:
  7815                           	callstack 0
  7816  003EC8                     _color_click_init:
  7817                           	callstack 27
  7818  003EC8                     
  7819                           ;color.c: 15:     I2C_2_Master_Init();
  7820  003EC8  EC96  F01F         	call	_I2C_2_Master_Init	;wreg free
  7821  003ECC                     
  7822                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  7823  003ECC  0E01               	movlw	1
  7824  003ECE  6E03               	movwf	color_writetoaddr@value^0,c
  7825  003ED0  0E00               	movlw	0
  7826  003ED2  ECBF  F01F         	call	_color_writetoaddr
  7827  003ED6                     
  7828                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7829  003ED6  0E3F               	movlw	63
  7830  003ED8  6E05               	movwf	??_color_click_init^0,c
  7831  003EDA  0E55               	movlw	85
  7832  003EDC                     u4277:
  7833  003EDC  2EE8               	decfsz	wreg,f,c
  7834  003EDE  D7FE               	bra	u4277
  7835  003EE0  2E05               	decfsz	??_color_click_init^0,f,c
  7836  003EE2  D7FC               	bra	u4277
  7837  003EE4  F000               	nop	
  7838  003EE6                     
  7839                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  7840  003EE6  0E03               	movlw	3
  7841  003EE8  6E03               	movwf	color_writetoaddr@value^0,c
  7842  003EEA  0E00               	movlw	0
  7843  003EEC  ECBF  F01F         	call	_color_writetoaddr
  7844  003EF0                     
  7845                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  7846  003EF0  0ED5               	movlw	213
  7847  003EF2  6E03               	movwf	color_writetoaddr@value^0,c
  7848  003EF4  0E01               	movlw	1
  7849  003EF6  ECBF  F01F         	call	_color_writetoaddr
  7850  003EFA  0012               	return		;funcret
  7851  003EFC                     __end_of_color_click_init:
  7852                           	callstack 0
  7853                           
  7854 ;; *************** function _color_writetoaddr *****************
  7855 ;; Defined at:
  7856 ;;		line 28 in file "color.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  address         1    wreg     unsigned char 
  7859 ;;  value           1    2[COMRAM] unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  address         1    3[COMRAM] unsigned char 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  1    wreg      void 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0, cstack
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7871 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;Total ram usage:        2 bytes
  7876 ;; Hardware stack levels used: 1
  7877 ;; Hardware stack levels required when called: 2
  7878 ;; This function calls:
  7879 ;;		_I2C_2_Master_Start
  7880 ;;		_I2C_2_Master_Stop
  7881 ;;		_I2C_2_Master_Write
  7882 ;; This function is called by:
  7883 ;;		_color_click_init
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text35
  7888  003F7E                     __ptext35:
  7889                           	callstack 0
  7890  003F7E                     _color_writetoaddr:
  7891                           	callstack 27
  7892                           
  7893                           ;incstack = 0
  7894                           ;color_writetoaddr@address stored from wreg
  7895  003F7E  6E04               	movwf	color_writetoaddr@address^0,c
  7896  003F80                     
  7897                           ;color.c: 29:     I2C_2_Master_Start();
  7898  003F80  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  7899                           
  7900                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7901  003F84  0E52               	movlw	82
  7902  003F86  EC30  F020         	call	_I2C_2_Master_Write
  7903                           
  7904                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  7905  003F8A  5004               	movf	color_writetoaddr@address^0,w,c
  7906  003F8C  0980               	iorlw	128
  7907  003F8E  EC30  F020         	call	_I2C_2_Master_Write
  7908                           
  7909                           ;color.c: 32:     I2C_2_Master_Write(value);
  7910  003F92  5003               	movf	color_writetoaddr@value^0,w,c
  7911  003F94  EC30  F020         	call	_I2C_2_Master_Write
  7912                           
  7913                           ;color.c: 33:     I2C_2_Master_Stop();
  7914  003F98  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  7915  003F9C  0012               	return		;funcret
  7916  003F9E                     __end_of_color_writetoaddr:
  7917                           	callstack 0
  7918                           
  7919 ;; *************** function _I2C_2_Master_Init *****************
  7920 ;; Defined at:
  7921 ;;		line 4 in file "i2c.c"
  7922 ;; Parameters:    Size  Location     Type
  7923 ;;		None
  7924 ;; Auto vars:     Size  Location     Type
  7925 ;;		None
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  1    wreg      void 
  7928 ;; Registers used:
  7929 ;;		wreg, status,2
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7939 ;;Total ram usage:        0 bytes
  7940 ;; Hardware stack levels used: 1
  7941 ;; This function calls:
  7942 ;;		Nothing
  7943 ;; This function is called by:
  7944 ;;		_color_click_init
  7945 ;;		_main
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           	psect	text36
  7950  003F2C                     __ptext36:
  7951                           	callstack 0
  7952  003F2C                     _I2C_2_Master_Init:
  7953                           	callstack 29
  7954  003F2C                     
  7955                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7956  003F2C  010E               	movlb	14	; () banked
  7957  003F2E  51D9               	movf	217,w,b	;volatile
  7958  003F30  0BF0               	andlw	-16
  7959  003F32  0908               	iorlw	8
  7960  003F34  6FD9               	movwf	217,b	;volatile
  7961  003F36                     
  7962                           ; BSR set to: 14
  7963                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7964  003F36  8BD9               	bsf	217,5,b	;volatile
  7965                           
  7966                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7967  003F38  0E9F               	movlw	159
  7968  003F3A  6FD6               	movwf	214,b	;volatile
  7969  003F3C                     
  7970                           ; BSR set to: 14
  7971                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7972  003F3C  8A84               	bsf	132,5,c	;volatile
  7973  003F3E                     
  7974                           ; BSR set to: 14
  7975                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7976  003F3E  8C84               	bsf	132,6,c	;volatile
  7977  003F40                     
  7978                           ; BSR set to: 14
  7979                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7980  003F40  9BA7               	bcf	167,5,b	;volatile
  7981  003F42                     
  7982                           ; BSR set to: 14
  7983                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7984  003F42  9DA7               	bcf	167,6,b	;volatile
  7985                           
  7986                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7987  003F44  0E1D               	movlw	29
  7988  003F46  6F1D               	movwf	29,b	;volatile
  7989                           
  7990                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7991  003F48  0E1E               	movlw	30
  7992  003F4A  6F1C               	movwf	28,b	;volatile
  7993                           
  7994                           ;i2c.c: 18:   RD5PPS=0x1C;
  7995  003F4C  0E1C               	movlw	28
  7996  003F4E  6F6F               	movwf	111,b	;volatile
  7997                           
  7998                           ;i2c.c: 19:   RD6PPS=0x1B;
  7999  003F50  0E1B               	movlw	27
  8000  003F52  6F70               	movwf	112,b	;volatile
  8001  003F54                     
  8002                           ; BSR set to: 14
  8003  003F54  0012               	return		;funcret
  8004  003F56                     __end_of_I2C_2_Master_Init:
  8005                           	callstack 0
  8006                           
  8007 ;; *************** function _calibration_init *****************
  8008 ;; Defined at:
  8009 ;;		line 20 in file "movement.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;		None
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      void 
  8016 ;; Registers used:
  8017 ;;		None
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8027 ;;Total ram usage:        0 bytes
  8028 ;; Hardware stack levels used: 1
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_main
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           	psect	text37
  8037  004054                     __ptext37:
  8038                           	callstack 0
  8039  004054                     _calibration_init:
  8040                           	callstack 30
  8041  004054  8486               	bsf	134,2,c	;volatile
  8042                           
  8043                           ;movement.c: 22:     ANSELFbits.ANSELF2=0;
  8044  004056  010E               	movlb	14	; () banked
  8045  004058  95B4               	bcf	180,2,b	;volatile
  8046                           
  8047                           ;movement.c: 23:     TRISFbits.TRISF3=1;
  8048  00405A  8686               	bsf	134,3,c	;volatile
  8049                           
  8050                           ;movement.c: 24:     ANSELFbits.ANSELF3=0;
  8051  00405C  97B4               	bcf	180,3,b	;volatile
  8052  00405E                     
  8053                           ; BSR set to: 14
  8054  00405E  0012               	return		;funcret
  8055  004060                     __end_of_calibration_init:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function _calibrate_white *****************
  8059 ;; Defined at:
  8060 ;;		line 172 in file "color.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;  w               2   11[COMRAM] PTR struct white_card
  8063 ;;		 -> main@white(18), 
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;		None
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      void 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;Total ram usage:        4 bytes
  8080 ;; Hardware stack levels used: 1
  8081 ;; Hardware stack levels required when called: 3
  8082 ;; This function calls:
  8083 ;;		_LED_B
  8084 ;;		_LED_G
  8085 ;;		_LED_R
  8086 ;;		_color_read_Blue
  8087 ;;		_color_read_Green
  8088 ;;		_color_read_Red
  8089 ;; This function is called by:
  8090 ;;		_main
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text38
  8095  00325E                     __ptext38:
  8096                           	callstack 0
  8097  00325E                     _calibrate_white:
  8098                           	callstack 27
  8099  00325E                     
  8100                           ;color.c: 172: void calibrate_white(struct white_card *w);color.c: 173: {;color.c: 174: 
      +                              LED_R();
  8101  00325E  ECCF  F01F         	call	_LED_R	;wreg free
  8102  003262                     
  8103                           ;color.c: 176:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8104  003262  ECB8  F01D         	call	_color_read_Red	;wreg free
  8105  003266  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8106  00326A  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8107  00326E  C005  FFDE         	movff	?_color_read_Red,postinc2
  8108  003272  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8109  003276  ECE0  F01D         	call	_color_read_Green	;wreg free
  8110  00327A  EE20 F002          	lfsr	2,2
  8111  00327E  500C               	movf	calibrate_white@w^0,w,c
  8112  003280  26D9               	addwf	fsr2l,f,c
  8113  003282  500D               	movf	(calibrate_white@w+1)^0,w,c
  8114  003284  22DA               	addwfc	fsr2h,f,c
  8115  003286  C005  FFDE         	movff	?_color_read_Green,postinc2
  8116  00328A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8117  00328E  EC08  F01E         	call	_color_read_Blue	;wreg free
  8118  003292  EE20 F004          	lfsr	2,4
  8119  003296  500C               	movf	calibrate_white@w^0,w,c
  8120  003298  26D9               	addwf	fsr2l,f,c
  8121  00329A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8122  00329C  22DA               	addwfc	fsr2h,f,c
  8123  00329E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8124  0032A2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8125  0032A6                     
  8126                           ;color.c: 177:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8127  0032A6  0E09               	movlw	9
  8128  0032A8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8129  0032AA  0E1E               	movlw	30
  8130  0032AC  6E0E               	movwf	??_calibrate_white^0,c
  8131  0032AE  0EE4               	movlw	228
  8132  0032B0                     u4287:
  8133  0032B0  2EE8               	decfsz	wreg,f,c
  8134  0032B2  D7FE               	bra	u4287
  8135  0032B4  2E0E               	decfsz	??_calibrate_white^0,f,c
  8136  0032B6  D7FC               	bra	u4287
  8137  0032B8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8138  0032BA  D7FA               	bra	u4287
  8139  0032BC  D000               	nop2	
  8140  0032BE                     
  8141                           ;color.c: 179:     LED_G();
  8142  0032BE  ECDF  F01F         	call	_LED_G	;wreg free
  8143  0032C2                     
  8144                           ;color.c: 181:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8145  0032C2  ECB8  F01D         	call	_color_read_Red	;wreg free
  8146  0032C6  EE20 F006          	lfsr	2,6
  8147  0032CA  500C               	movf	calibrate_white@w^0,w,c
  8148  0032CC  26D9               	addwf	fsr2l,f,c
  8149  0032CE  500D               	movf	(calibrate_white@w+1)^0,w,c
  8150  0032D0  22DA               	addwfc	fsr2h,f,c
  8151  0032D2  C005  FFDE         	movff	?_color_read_Red,postinc2
  8152  0032D6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8153  0032DA  ECE0  F01D         	call	_color_read_Green	;wreg free
  8154  0032DE  EE20 F008          	lfsr	2,8
  8155  0032E2  500C               	movf	calibrate_white@w^0,w,c
  8156  0032E4  26D9               	addwf	fsr2l,f,c
  8157  0032E6  500D               	movf	(calibrate_white@w+1)^0,w,c
  8158  0032E8  22DA               	addwfc	fsr2h,f,c
  8159  0032EA  C005  FFDE         	movff	?_color_read_Green,postinc2
  8160  0032EE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8161  0032F2  EC08  F01E         	call	_color_read_Blue	;wreg free
  8162  0032F6  EE20 F00A          	lfsr	2,10
  8163  0032FA  500C               	movf	calibrate_white@w^0,w,c
  8164  0032FC  26D9               	addwf	fsr2l,f,c
  8165  0032FE  500D               	movf	(calibrate_white@w+1)^0,w,c
  8166  003300  22DA               	addwfc	fsr2h,f,c
  8167  003302  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8168  003306  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8169                           
  8170                           ;color.c: 182:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8171  00330A  0E09               	movlw	9
  8172  00330C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8173  00330E  0E1E               	movlw	30
  8174  003310  6E0E               	movwf	??_calibrate_white^0,c
  8175  003312  0EE4               	movlw	228
  8176  003314                     u4297:
  8177  003314  2EE8               	decfsz	wreg,f,c
  8178  003316  D7FE               	bra	u4297
  8179  003318  2E0E               	decfsz	??_calibrate_white^0,f,c
  8180  00331A  D7FC               	bra	u4297
  8181  00331C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8182  00331E  D7FA               	bra	u4297
  8183  003320  D000               	nop2	
  8184  003322                     
  8185                           ;color.c: 184:     LED_B();
  8186  003322  ECEF  F01F         	call	_LED_B	;wreg free
  8187  003326                     
  8188                           ;color.c: 186:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  8189  003326  ECB8  F01D         	call	_color_read_Red	;wreg free
  8190  00332A  EE20 F00C          	lfsr	2,12
  8191  00332E  500C               	movf	calibrate_white@w^0,w,c
  8192  003330  26D9               	addwf	fsr2l,f,c
  8193  003332  500D               	movf	(calibrate_white@w+1)^0,w,c
  8194  003334  22DA               	addwfc	fsr2h,f,c
  8195  003336  C005  FFDE         	movff	?_color_read_Red,postinc2
  8196  00333A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8197  00333E  ECE0  F01D         	call	_color_read_Green	;wreg free
  8198  003342  EE20 F00E          	lfsr	2,14
  8199  003346  500C               	movf	calibrate_white@w^0,w,c
  8200  003348  26D9               	addwf	fsr2l,f,c
  8201  00334A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8202  00334C  22DA               	addwfc	fsr2h,f,c
  8203  00334E  C005  FFDE         	movff	?_color_read_Green,postinc2
  8204  003352  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8205  003356  EC08  F01E         	call	_color_read_Blue	;wreg free
  8206  00335A  EE20 F010          	lfsr	2,16
  8207  00335E  500C               	movf	calibrate_white@w^0,w,c
  8208  003360  26D9               	addwf	fsr2l,f,c
  8209  003362  500D               	movf	(calibrate_white@w+1)^0,w,c
  8210  003364  22DA               	addwfc	fsr2h,f,c
  8211  003366  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8212  00336A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8213  00336E                     
  8214                           ;color.c: 187:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8215  00336E  0E09               	movlw	9
  8216  003370  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8217  003372  0E1E               	movlw	30
  8218  003374  6E0E               	movwf	??_calibrate_white^0,c
  8219  003376  0EE4               	movlw	228
  8220  003378                     u4307:
  8221  003378  2EE8               	decfsz	wreg,f,c
  8222  00337A  D7FE               	bra	u4307
  8223  00337C  2E0E               	decfsz	??_calibrate_white^0,f,c
  8224  00337E  D7FC               	bra	u4307
  8225  003380  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8226  003382  D7FA               	bra	u4307
  8227  003384  D000               	nop2	
  8228  003386  0012               	return		;funcret
  8229  003388                     __end_of_calibrate_white:
  8230                           	callstack 0
  8231                           
  8232 ;; *************** function _color_read_Red *****************
  8233 ;; Defined at:
  8234 ;;		line 36 in file "color.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;		None
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;  tmp             2    9[COMRAM] unsigned int 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  2    4[COMRAM] unsigned int 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;Total ram usage:        7 bytes
  8253 ;; Hardware stack levels used: 1
  8254 ;; Hardware stack levels required when called: 2
  8255 ;; This function calls:
  8256 ;;		_I2C_2_Master_Read
  8257 ;;		_I2C_2_Master_RepStart
  8258 ;;		_I2C_2_Master_Start
  8259 ;;		_I2C_2_Master_Stop
  8260 ;;		_I2C_2_Master_Write
  8261 ;; This function is called by:
  8262 ;;		_read_color
  8263 ;;		_calibrate_white
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text39
  8268  003B70                     __ptext39:
  8269                           	callstack 0
  8270  003B70                     _color_read_Red:
  8271                           	callstack 27
  8272  003B70                     
  8273                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  8274  003B70  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  8275                           
  8276                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  8277  003B74  0E52               	movlw	82
  8278  003B76  EC30  F020         	call	_I2C_2_Master_Write
  8279                           
  8280                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  8281  003B7A  0EB6               	movlw	182
  8282  003B7C  EC30  F020         	call	_I2C_2_Master_Write
  8283                           
  8284                           ;color.c: 42:  I2C_2_Master_RepStart();
  8285  003B80  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  8286                           
  8287                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  8288  003B84  0E53               	movlw	83
  8289  003B86  EC30  F020         	call	_I2C_2_Master_Write
  8290                           
  8291                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  8292  003B8A  0E01               	movlw	1
  8293  003B8C  EC96  F01E         	call	_I2C_2_Master_Read
  8294  003B90  6E07               	movwf	??_color_read_Red^0,c
  8295  003B92  5007               	movf	??_color_read_Red^0,w,c
  8296  003B94  6E0A               	movwf	color_read_Red@tmp^0,c
  8297  003B96  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8298                           
  8299                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8300  003B98  0E00               	movlw	0
  8301  003B9A  EC96  F01E         	call	_I2C_2_Master_Read
  8302  003B9E  6E07               	movwf	??_color_read_Red^0,c
  8303  003BA0  5007               	movf	??_color_read_Red^0,w,c
  8304  003BA2  6E09               	movwf	(??_color_read_Red+2)^0,c
  8305  003BA4  6A08               	clrf	(??_color_read_Red+1)^0,c
  8306  003BA6  500A               	movf	color_read_Red@tmp^0,w,c
  8307  003BA8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8308  003BAA  6E0A               	movwf	color_read_Red@tmp^0,c
  8309  003BAC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8310  003BAE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8311  003BB0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8312                           
  8313                           ;color.c: 46:  I2C_2_Master_Stop();
  8314  003BB2  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  8315  003BB6                     
  8316                           ;color.c: 47:  return tmp;
  8317  003BB6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8318  003BBA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8319  003BBE  0012               	return		;funcret
  8320  003BC0                     __end_of_color_read_Red:
  8321                           	callstack 0
  8322                           
  8323 ;; *************** function _color_read_Green *****************
  8324 ;; Defined at:
  8325 ;;		line 64 in file "color.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;		None
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  tmp             2    9[COMRAM] unsigned int 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  2    4[COMRAM] unsigned int 
  8332 ;; Registers used:
  8333 ;;		wreg, status,2, status,0, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;Total ram usage:        7 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 2
  8346 ;; This function calls:
  8347 ;;		_I2C_2_Master_Read
  8348 ;;		_I2C_2_Master_RepStart
  8349 ;;		_I2C_2_Master_Start
  8350 ;;		_I2C_2_Master_Stop
  8351 ;;		_I2C_2_Master_Write
  8352 ;; This function is called by:
  8353 ;;		_read_color
  8354 ;;		_calibrate_white
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text40
  8359  003BC0                     __ptext40:
  8360                           	callstack 0
  8361  003BC0                     _color_read_Green:
  8362                           	callstack 27
  8363  003BC0                     
  8364                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  8365  003BC0  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  8366                           
  8367                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  8368  003BC4  0E52               	movlw	82
  8369  003BC6  EC30  F020         	call	_I2C_2_Master_Write
  8370                           
  8371                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  8372  003BCA  0EB8               	movlw	184
  8373  003BCC  EC30  F020         	call	_I2C_2_Master_Write
  8374                           
  8375                           ;color.c: 70:  I2C_2_Master_RepStart();
  8376  003BD0  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  8377                           
  8378                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  8379  003BD4  0E53               	movlw	83
  8380  003BD6  EC30  F020         	call	_I2C_2_Master_Write
  8381                           
  8382                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  8383  003BDA  0E01               	movlw	1
  8384  003BDC  EC96  F01E         	call	_I2C_2_Master_Read
  8385  003BE0  6E07               	movwf	??_color_read_Green^0,c
  8386  003BE2  5007               	movf	??_color_read_Green^0,w,c
  8387  003BE4  6E0A               	movwf	color_read_Green@tmp^0,c
  8388  003BE6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8389                           
  8390                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8391  003BE8  0E00               	movlw	0
  8392  003BEA  EC96  F01E         	call	_I2C_2_Master_Read
  8393  003BEE  6E07               	movwf	??_color_read_Green^0,c
  8394  003BF0  5007               	movf	??_color_read_Green^0,w,c
  8395  003BF2  6E09               	movwf	(??_color_read_Green+2)^0,c
  8396  003BF4  6A08               	clrf	(??_color_read_Green+1)^0,c
  8397  003BF6  500A               	movf	color_read_Green@tmp^0,w,c
  8398  003BF8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  8399  003BFA  6E0A               	movwf	color_read_Green@tmp^0,c
  8400  003BFC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  8401  003BFE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  8402  003C00  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  8403                           
  8404                           ;color.c: 74:  I2C_2_Master_Stop();
  8405  003C02  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  8406  003C06                     
  8407                           ;color.c: 75:  return tmp;
  8408  003C06  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  8409  003C0A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8410  003C0E  0012               	return		;funcret
  8411  003C10                     __end_of_color_read_Green:
  8412                           	callstack 0
  8413                           
  8414 ;; *************** function _color_read_Blue *****************
  8415 ;; Defined at:
  8416 ;;		line 50 in file "color.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  tmp             2    9[COMRAM] unsigned int 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  2    4[COMRAM] unsigned int 
  8423 ;; Registers used:
  8424 ;;		wreg, status,2, status,0, cstack
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8430 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;Total ram usage:        7 bytes
  8435 ;; Hardware stack levels used: 1
  8436 ;; Hardware stack levels required when called: 2
  8437 ;; This function calls:
  8438 ;;		_I2C_2_Master_Read
  8439 ;;		_I2C_2_Master_RepStart
  8440 ;;		_I2C_2_Master_Start
  8441 ;;		_I2C_2_Master_Stop
  8442 ;;		_I2C_2_Master_Write
  8443 ;; This function is called by:
  8444 ;;		_read_color
  8445 ;;		_calibrate_white
  8446 ;; This function uses a non-reentrant model
  8447 ;;
  8448                           
  8449                           	psect	text41
  8450  003C10                     __ptext41:
  8451                           	callstack 0
  8452  003C10                     _color_read_Blue:
  8453                           	callstack 27
  8454  003C10                     
  8455                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  8456  003C10  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  8457                           
  8458                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  8459  003C14  0E52               	movlw	82
  8460  003C16  EC30  F020         	call	_I2C_2_Master_Write
  8461                           
  8462                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  8463  003C1A  0EBA               	movlw	186
  8464  003C1C  EC30  F020         	call	_I2C_2_Master_Write
  8465                           
  8466                           ;color.c: 56:  I2C_2_Master_RepStart();
  8467  003C20  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  8468                           
  8469                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  8470  003C24  0E53               	movlw	83
  8471  003C26  EC30  F020         	call	_I2C_2_Master_Write
  8472                           
  8473                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  8474  003C2A  0E01               	movlw	1
  8475  003C2C  EC96  F01E         	call	_I2C_2_Master_Read
  8476  003C30  6E07               	movwf	??_color_read_Blue^0,c
  8477  003C32  5007               	movf	??_color_read_Blue^0,w,c
  8478  003C34  6E0A               	movwf	color_read_Blue@tmp^0,c
  8479  003C36  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  8480                           
  8481                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8482  003C38  0E00               	movlw	0
  8483  003C3A  EC96  F01E         	call	_I2C_2_Master_Read
  8484  003C3E  6E07               	movwf	??_color_read_Blue^0,c
  8485  003C40  5007               	movf	??_color_read_Blue^0,w,c
  8486  003C42  6E09               	movwf	(??_color_read_Blue+2)^0,c
  8487  003C44  6A08               	clrf	(??_color_read_Blue+1)^0,c
  8488  003C46  500A               	movf	color_read_Blue@tmp^0,w,c
  8489  003C48  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  8490  003C4A  6E0A               	movwf	color_read_Blue@tmp^0,c
  8491  003C4C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  8492  003C4E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  8493  003C50  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  8494                           
  8495                           ;color.c: 60:  I2C_2_Master_Stop();
  8496  003C52  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  8497  003C56                     
  8498                           ;color.c: 61:  return tmp;
  8499  003C56  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  8500  003C5A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  8501  003C5E  0012               	return		;funcret
  8502  003C60                     __end_of_color_read_Blue:
  8503                           	callstack 0
  8504                           
  8505 ;; *************** function _I2C_2_Master_Write *****************
  8506 ;; Defined at:
  8507 ;;		line 45 in file "i2c.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;  data_byte       1    wreg     unsigned char 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  data_byte       1    1[COMRAM] unsigned char 
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  1    wreg      void 
  8514 ;; Registers used:
  8515 ;;		wreg, status,2, status,0, cstack
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;Total ram usage:        1 bytes
  8526 ;; Hardware stack levels used: 1
  8527 ;; Hardware stack levels required when called: 1
  8528 ;; This function calls:
  8529 ;;		_I2C_2_Master_Idle
  8530 ;; This function is called by:
  8531 ;;		_color_writetoaddr
  8532 ;;		_color_read_Red
  8533 ;;		_color_read_Blue
  8534 ;;		_color_read_Green
  8535 ;;		_color_read_Clear
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           	psect	text42
  8540  004060                     __ptext42:
  8541                           	callstack 0
  8542  004060                     _I2C_2_Master_Write:
  8543                           	callstack 27
  8544                           
  8545                           ;incstack = 0
  8546                           ;I2C_2_Master_Write@data_byte stored from wreg
  8547  004060  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8548  004062                     
  8549                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8550  004062  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8551  004066                     
  8552                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8553  004066  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8554  00406A  0012               	return		;funcret
  8555  00406C                     __end_of_I2C_2_Master_Write:
  8556                           	callstack 0
  8557                           
  8558 ;; *************** function _I2C_2_Master_Stop *****************
  8559 ;; Defined at:
  8560 ;;		line 39 in file "i2c.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;		None
  8563 ;; Auto vars:     Size  Location     Type
  8564 ;;		None
  8565 ;; Return value:  Size  Location     Type
  8566 ;;                  1    wreg      void 
  8567 ;; Registers used:
  8568 ;;		wreg, status,2, status,0, cstack
  8569 ;; Tracked objects:
  8570 ;;		On entry : 0/0
  8571 ;;		On exit  : 0/0
  8572 ;;		Unchanged: 0/0
  8573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;Total ram usage:        0 bytes
  8579 ;; Hardware stack levels used: 1
  8580 ;; Hardware stack levels required when called: 1
  8581 ;; This function calls:
  8582 ;;		_I2C_2_Master_Idle
  8583 ;; This function is called by:
  8584 ;;		_color_writetoaddr
  8585 ;;		_color_read_Red
  8586 ;;		_color_read_Blue
  8587 ;;		_color_read_Green
  8588 ;;		_color_read_Clear
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text43
  8593  00406C                     __ptext43:
  8594                           	callstack 0
  8595  00406C                     _I2C_2_Master_Stop:
  8596                           	callstack 27
  8597  00406C                     
  8598                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8599  00406C  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8600  004070                     
  8601                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8602  004070  010E               	movlb	14	; () banked
  8603  004072  85DA               	bsf	218,2,b	;volatile
  8604  004074                     
  8605                           ; BSR set to: 14
  8606  004074  0012               	return		;funcret
  8607  004076                     __end_of_I2C_2_Master_Stop:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _I2C_2_Master_Start *****************
  8611 ;; Defined at:
  8612 ;;		line 27 in file "i2c.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;		None
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;		None
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0, cstack
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        0 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 1
  8633 ;; This function calls:
  8634 ;;		_I2C_2_Master_Idle
  8635 ;; This function is called by:
  8636 ;;		_color_writetoaddr
  8637 ;;		_color_read_Red
  8638 ;;		_color_read_Blue
  8639 ;;		_color_read_Green
  8640 ;;		_color_read_Clear
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text44
  8645  004076                     __ptext44:
  8646                           	callstack 0
  8647  004076                     _I2C_2_Master_Start:
  8648                           	callstack 27
  8649  004076                     
  8650                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8651  004076  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8652  00407A                     
  8653                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8654  00407A  010E               	movlb	14	; () banked
  8655  00407C  81DA               	bsf	218,0,b	;volatile
  8656  00407E                     
  8657                           ; BSR set to: 14
  8658  00407E  0012               	return		;funcret
  8659  004080                     __end_of_I2C_2_Master_Start:
  8660                           	callstack 0
  8661                           
  8662 ;; *************** function _I2C_2_Master_RepStart *****************
  8663 ;; Defined at:
  8664 ;;		line 33 in file "i2c.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2, status,0, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;Total ram usage:        0 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; Hardware stack levels required when called: 1
  8685 ;; This function calls:
  8686 ;;		_I2C_2_Master_Idle
  8687 ;; This function is called by:
  8688 ;;		_color_read_Red
  8689 ;;		_color_read_Blue
  8690 ;;		_color_read_Green
  8691 ;;		_color_read_Clear
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text45
  8696  004080                     __ptext45:
  8697                           	callstack 0
  8698  004080                     _I2C_2_Master_RepStart:
  8699                           	callstack 27
  8700  004080                     
  8701                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8702  004080  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8703  004084                     
  8704                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8705  004084  010E               	movlb	14	; () banked
  8706  004086  83DA               	bsf	218,1,b	;volatile
  8707  004088                     
  8708                           ; BSR set to: 14
  8709  004088  0012               	return		;funcret
  8710  00408A                     __end_of_I2C_2_Master_RepStart:
  8711                           	callstack 0
  8712                           
  8713 ;; *************** function _I2C_2_Master_Read *****************
  8714 ;; Defined at:
  8715 ;;		line 51 in file "i2c.c"
  8716 ;; Parameters:    Size  Location     Type
  8717 ;;  ack             1    wreg     unsigned char 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  ack             1    2[COMRAM] unsigned char 
  8720 ;;  tmp             1    3[COMRAM] unsigned char 
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      unsigned char 
  8723 ;; Registers used:
  8724 ;;		wreg, status,2, status,0, cstack
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;Total ram usage:        3 bytes
  8735 ;; Hardware stack levels used: 1
  8736 ;; Hardware stack levels required when called: 1
  8737 ;; This function calls:
  8738 ;;		_I2C_2_Master_Idle
  8739 ;; This function is called by:
  8740 ;;		_color_read_Red
  8741 ;;		_color_read_Blue
  8742 ;;		_color_read_Green
  8743 ;;		_color_read_Clear
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text46
  8748  003D2C                     __ptext46:
  8749                           	callstack 0
  8750  003D2C                     _I2C_2_Master_Read:
  8751                           	callstack 27
  8752                           
  8753                           ; BSR set to: 14
  8754                           ;incstack = 0
  8755                           ;I2C_2_Master_Read@ack stored from wreg
  8756  003D2C  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  8757  003D2E                     
  8758                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8759  003D2E  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8760  003D32                     
  8761                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8762  003D32  010E               	movlb	14	; () banked
  8763  003D34  87DA               	bsf	218,3,b	;volatile
  8764                           
  8765                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8766  003D36  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8767  003D3A                     
  8768                           ;i2c.c: 57:   tmp = SSP2BUF;
  8769  003D3A  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8770                           
  8771                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8772  003D3E  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8773  003D42                     
  8774                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8775  003D42  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  8776  003D44  B4D8               	btfsc	status,2,c
  8777  003D46  EFA7  F01E         	goto	u2891
  8778  003D4A  EFAB  F01E         	goto	u2890
  8779  003D4E                     u2891:
  8780  003D4E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8781  003D50  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  8782  003D52  EFAC  F01E         	goto	u2908
  8783  003D56                     u2890:
  8784  003D56  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8785  003D58                     u2908:
  8786  003D58  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  8787  003D5A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  8788  003D5C  010E               	movlb	14	; () banked
  8789  003D5E  51DA               	movf	218,w,b	;volatile
  8790  003D60  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8791  003D62  0BDF               	andlw	-33
  8792  003D64  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8793  003D66  6FDA               	movwf	218,b	;volatile
  8794  003D68                     
  8795                           ; BSR set to: 14
  8796                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8797  003D68  89DA               	bsf	218,4,b	;volatile
  8798  003D6A                     
  8799                           ; BSR set to: 14
  8800                           ;i2c.c: 61:   return tmp;
  8801  003D6A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8802  003D6C                     
  8803                           ; BSR set to: 14
  8804  003D6C  0012               	return		;funcret
  8805  003D6E                     __end_of_I2C_2_Master_Read:
  8806                           	callstack 0
  8807                           
  8808 ;; *************** function _I2C_2_Master_Idle *****************
  8809 ;; Defined at:
  8810 ;;		line 22 in file "i2c.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;		None
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;		None
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8827 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8828 ;;Total ram usage:        1 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; This function calls:
  8831 ;;		Nothing
  8832 ;; This function is called by:
  8833 ;;		_I2C_2_Master_Start
  8834 ;;		_I2C_2_Master_RepStart
  8835 ;;		_I2C_2_Master_Stop
  8836 ;;		_I2C_2_Master_Write
  8837 ;;		_I2C_2_Master_Read
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           	psect	text47
  8842  003F56                     __ptext47:
  8843                           	callstack 0
  8844  003F56                     _I2C_2_Master_Idle:
  8845                           	callstack 27
  8846  003F56                     l157:
  8847  003F56  010E               	movlb	14	; () banked
  8848  003F58  B5D8               	btfsc	216,2,b	;volatile
  8849  003F5A  EFB1  F01F         	goto	u2331
  8850  003F5E  EFB3  F01F         	goto	u2330
  8851  003F62                     u2331:
  8852  003F62  EFAB  F01F         	goto	l157
  8853  003F66                     u2330:
  8854  003F66                     
  8855                           ; BSR set to: 14
  8856  003F66  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8857  003F6A  0E1F               	movlw	31
  8858  003F6C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8859  003F6E  A4D8               	btfss	status,2,c
  8860  003F70  EFBC  F01F         	goto	u2341
  8861  003F74  EFBE  F01F         	goto	u2340
  8862  003F78                     u2341:
  8863  003F78  EFAB  F01F         	goto	l157
  8864  003F7C                     u2340:
  8865  003F7C                     
  8866                           ; BSR set to: 14
  8867  003F7C  0012               	return		;funcret
  8868  003F7E                     __end_of_I2C_2_Master_Idle:
  8869                           	callstack 0
  8870                           
  8871 ;; *************** function _LED_R *****************
  8872 ;; Defined at:
  8873 ;;		line 100 in file "color.c"
  8874 ;; Parameters:    Size  Location     Type
  8875 ;;		None
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;		None
  8878 ;; Return value:  Size  Location     Type
  8879 ;;                  1    wreg      void 
  8880 ;; Registers used:
  8881 ;;		wreg
  8882 ;; Tracked objects:
  8883 ;;		On entry : 0/0
  8884 ;;		On exit  : 0/0
  8885 ;;		Unchanged: 0/0
  8886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;Total ram usage:        2 bytes
  8892 ;; Hardware stack levels used: 1
  8893 ;; This function calls:
  8894 ;;		Nothing
  8895 ;; This function is called by:
  8896 ;;		_calibrate_white
  8897 ;;		_detect_color
  8898 ;;		_main
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text48
  8903  003F9E                     __ptext48:
  8904                           	callstack 0
  8905  003F9E                     _LED_R:
  8906                           	callstack 29
  8907  003F9E                     
  8908                           ;color.c: 102:     LATGbits.LATG1 = 1;
  8909  003F9E  827F               	bsf	127,1,c	;volatile
  8910                           
  8911                           ;color.c: 103:     LATFbits.LATF7 = 0;
  8912  003FA0  9E7E               	bcf	126,7,c	;volatile
  8913                           
  8914                           ;color.c: 104:     LATAbits.LATA4 = 0;
  8915  003FA2  9879               	bcf	121,4,c	;volatile
  8916  003FA4                     
  8917                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8918  003FA4  0E11               	movlw	17
  8919  003FA6  6E02               	movwf	(??_LED_R+1)^0,c
  8920  003FA8  0E3C               	movlw	60
  8921  003FAA  6E01               	movwf	??_LED_R^0,c
  8922  003FAC  0ECB               	movlw	203
  8923  003FAE                     u4317:
  8924  003FAE  2EE8               	decfsz	wreg,f,c
  8925  003FB0  D7FE               	bra	u4317
  8926  003FB2  2E01               	decfsz	??_LED_R^0,f,c
  8927  003FB4  D7FC               	bra	u4317
  8928  003FB6  2E02               	decfsz	(??_LED_R+1)^0,f,c
  8929  003FB8  D7FA               	bra	u4317
  8930  003FBA  F000               	nop	
  8931  003FBC  0012               	return		;funcret
  8932  003FBE                     __end_of_LED_R:
  8933                           	callstack 0
  8934                           
  8935 ;; *************** function _LED_G *****************
  8936 ;; Defined at:
  8937 ;;		line 127 in file "color.c"
  8938 ;; Parameters:    Size  Location     Type
  8939 ;;		None
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;		None
  8942 ;; Return value:  Size  Location     Type
  8943 ;;                  1    wreg      void 
  8944 ;; Registers used:
  8945 ;;		wreg
  8946 ;; Tracked objects:
  8947 ;;		On entry : 0/0
  8948 ;;		On exit  : 0/0
  8949 ;;		Unchanged: 0/0
  8950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8955 ;;Total ram usage:        2 bytes
  8956 ;; Hardware stack levels used: 1
  8957 ;; This function calls:
  8958 ;;		Nothing
  8959 ;; This function is called by:
  8960 ;;		_calibrate_white
  8961 ;;		_detect_color
  8962 ;;		_main
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text49
  8967  003FBE                     __ptext49:
  8968                           	callstack 0
  8969  003FBE                     _LED_G:
  8970                           	callstack 29
  8971  003FBE                     
  8972                           ;color.c: 129:     LATGbits.LATG1 = 0;
  8973  003FBE  927F               	bcf	127,1,c	;volatile
  8974                           
  8975                           ;color.c: 130:     LATFbits.LATF7 = 0;
  8976  003FC0  9E7E               	bcf	126,7,c	;volatile
  8977                           
  8978                           ;color.c: 131:     LATAbits.LATA4 = 1;
  8979  003FC2  8879               	bsf	121,4,c	;volatile
  8980  003FC4                     
  8981                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8982  003FC4  0E11               	movlw	17
  8983  003FC6  6E02               	movwf	(??_LED_G+1)^0,c
  8984  003FC8  0E3C               	movlw	60
  8985  003FCA  6E01               	movwf	??_LED_G^0,c
  8986  003FCC  0ECB               	movlw	203
  8987  003FCE                     u4327:
  8988  003FCE  2EE8               	decfsz	wreg,f,c
  8989  003FD0  D7FE               	bra	u4327
  8990  003FD2  2E01               	decfsz	??_LED_G^0,f,c
  8991  003FD4  D7FC               	bra	u4327
  8992  003FD6  2E02               	decfsz	(??_LED_G+1)^0,f,c
  8993  003FD8  D7FA               	bra	u4327
  8994  003FDA  F000               	nop	
  8995  003FDC  0012               	return		;funcret
  8996  003FDE                     __end_of_LED_G:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function _LED_B *****************
  9000 ;; Defined at:
  9001 ;;		line 118 in file "color.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		wreg
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;Total ram usage:        2 bytes
  9020 ;; Hardware stack levels used: 1
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_calibrate_white
  9025 ;;		_detect_color
  9026 ;;		_main
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           	psect	text50
  9031  003FDE                     __ptext50:
  9032                           	callstack 0
  9033  003FDE                     _LED_B:
  9034                           	callstack 29
  9035  003FDE                     
  9036                           ;color.c: 120:     LATGbits.LATG1 = 0;
  9037  003FDE  927F               	bcf	127,1,c	;volatile
  9038                           
  9039                           ;color.c: 121:     LATFbits.LATF7 = 1;
  9040  003FE0  8E7E               	bsf	126,7,c	;volatile
  9041                           
  9042                           ;color.c: 122:     LATAbits.LATA4 = 0;
  9043  003FE2  9879               	bcf	121,4,c	;volatile
  9044  003FE4                     
  9045                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9046  003FE4  0E11               	movlw	17
  9047  003FE6  6E02               	movwf	(??_LED_B+1)^0,c
  9048  003FE8  0E3C               	movlw	60
  9049  003FEA  6E01               	movwf	??_LED_B^0,c
  9050  003FEC  0ECB               	movlw	203
  9051  003FEE                     u4337:
  9052  003FEE  2EE8               	decfsz	wreg,f,c
  9053  003FF0  D7FE               	bra	u4337
  9054  003FF2  2E01               	decfsz	??_LED_B^0,f,c
  9055  003FF4  D7FC               	bra	u4337
  9056  003FF6  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9057  003FF8  D7FA               	bra	u4337
  9058  003FFA  F000               	nop	
  9059  003FFC  0012               	return		;funcret
  9060  003FFE                     __end_of_LED_B:
  9061                           	callstack 0
  9062                           
  9063 ;; *************** function _LED_C *****************
  9064 ;; Defined at:
  9065 ;;		line 109 in file "color.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;Total ram usage:        2 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_main
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           	psect	text51
  9093  003FFE                     __ptext51:
  9094                           	callstack 0
  9095  003FFE                     _LED_C:
  9096                           	callstack 30
  9097  003FFE                     
  9098                           ;color.c: 111:     LATGbits.LATG1 = 1;
  9099  003FFE  827F               	bsf	127,1,c	;volatile
  9100                           
  9101                           ;color.c: 112:     LATFbits.LATF7 = 1;
  9102  004000  8E7E               	bsf	126,7,c	;volatile
  9103                           
  9104                           ;color.c: 113:     LATAbits.LATA4 = 1;
  9105  004002  8879               	bsf	121,4,c	;volatile
  9106  004004                     
  9107                           ;color.c: 114:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9108  004004  0E11               	movlw	17
  9109  004006  6E02               	movwf	(??_LED_C+1)^0,c
  9110  004008  0E3C               	movlw	60
  9111  00400A  6E01               	movwf	??_LED_C^0,c
  9112  00400C  0ECB               	movlw	203
  9113  00400E                     u4347:
  9114  00400E  2EE8               	decfsz	wreg,f,c
  9115  004010  D7FE               	bra	u4347
  9116  004012  2E01               	decfsz	??_LED_C^0,f,c
  9117  004014  D7FC               	bra	u4347
  9118  004016  2E02               	decfsz	(??_LED_C+1)^0,f,c
  9119  004018  D7FA               	bra	u4347
  9120  00401A  F000               	nop	
  9121  00401C  0012               	return		;funcret
  9122  00401E                     __end_of_LED_C:
  9123                           	callstack 0
  9124                           
  9125                           	psect	rparam
  9126  0000                     
  9127                           	psect	idloc
  9128                           
  9129                           ;Config register IDLOC0 @ 0x200000
  9130                           ;	unspecified, using default values
  9131  200000                     	org	2097152
  9132  200000  0FFF               	dw	4095
  9133                           
  9134                           ;Config register IDLOC1 @ 0x200002
  9135                           ;	unspecified, using default values
  9136  200002                     	org	2097154
  9137  200002  0FFF               	dw	4095
  9138                           
  9139                           ;Config register IDLOC2 @ 0x200004
  9140                           ;	unspecified, using default values
  9141  200004                     	org	2097156
  9142  200004  0FFF               	dw	4095
  9143                           
  9144                           ;Config register IDLOC3 @ 0x200006
  9145                           ;	unspecified, using default values
  9146  200006                     	org	2097158
  9147  200006  0FFF               	dw	4095
  9148                           
  9149                           ;Config register IDLOC4 @ 0x200008
  9150                           ;	unspecified, using default values
  9151  200008                     	org	2097160
  9152  200008  0FFF               	dw	4095
  9153                           
  9154                           ;Config register IDLOC5 @ 0x20000A
  9155                           ;	unspecified, using default values
  9156  20000A                     	org	2097162
  9157  20000A  0FFF               	dw	4095
  9158                           
  9159                           ;Config register IDLOC6 @ 0x20000C
  9160                           ;	unspecified, using default values
  9161  20000C                     	org	2097164
  9162  20000C  0FFF               	dw	4095
  9163                           
  9164                           ;Config register IDLOC7 @ 0x20000E
  9165                           ;	unspecified, using default values
  9166  20000E                     	org	2097166
  9167  20000E  0FFF               	dw	4095
  9168                           
  9169                           	psect	config
  9170                           
  9171                           ;Config register CONFIG1L @ 0x300000
  9172                           ;	External Oscillator mode Selection bits
  9173                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9174                           ;	Power-up default value for COSC bits
  9175                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9176  300000                     	org	3145728
  9177  300000  AA                 	db	170
  9178                           
  9179                           ;Config register CONFIG1H @ 0x300001
  9180                           ;	unspecified, using default values
  9181                           ;	Clock Out Enable bit
  9182                           ;	CLKOUTEN = 0x1, unprogrammed default
  9183                           ;	Clock Switch Enable bit
  9184                           ;	CSWEN = 0x1, unprogrammed default
  9185                           ;	Fail-Safe Clock Monitor Enable bit
  9186                           ;	FCMEN = 0x1, unprogrammed default
  9187  300001                     	org	3145729
  9188  300001  FF                 	db	255
  9189                           
  9190                           ;Config register CONFIG2L @ 0x300002
  9191                           ;	unspecified, using default values
  9192                           ;	Master Clear Enable bit
  9193                           ;	MCLRE = 0x1, unprogrammed default
  9194                           ;	Power-up Timer Enable bit
  9195                           ;	PWRTE = 0x1, unprogrammed default
  9196                           ;	Low-power BOR enable bit
  9197                           ;	LPBOREN = 0x1, unprogrammed default
  9198                           ;	Brown-out Reset Enable bits
  9199                           ;	BOREN = 0x3, unprogrammed default
  9200  300002                     	org	3145730
  9201  300002  FF                 	db	255
  9202                           
  9203                           ;Config register CONFIG2H @ 0x300003
  9204                           ;	unspecified, using default values
  9205                           ;	Brown Out Reset Voltage selection bits
  9206                           ;	BORV = 0x3, unprogrammed default
  9207                           ;	ZCD Disable bit
  9208                           ;	ZCD = 0x1, unprogrammed default
  9209                           ;	PPSLOCK bit One-Way Set Enable bit
  9210                           ;	PPS1WAY = 0x1, unprogrammed default
  9211                           ;	Stack Full/Underflow Reset Enable bit
  9212                           ;	STVREN = 0x1, unprogrammed default
  9213                           ;	Debugger Enable bit
  9214                           ;	DEBUG = 0x1, unprogrammed default
  9215                           ;	Extended Instruction Set Enable bit
  9216                           ;	XINST = 0x1, unprogrammed default
  9217  300003                     	org	3145731
  9218  300003  FF                 	db	255
  9219                           
  9220                           ;Config register CONFIG3L @ 0x300004
  9221                           ;	WDT Period Select bits
  9222                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9223                           ;	WDT operating mode
  9224                           ;	WDTE = OFF, WDT Disabled
  9225  300004                     	org	3145732
  9226  300004  9F                 	db	159
  9227                           
  9228                           ;Config register CONFIG3H @ 0x300005
  9229                           ;	unspecified, using default values
  9230                           ;	WDT Window Select bits
  9231                           ;	WDTCWS = 0x7, unprogrammed default
  9232                           ;	WDT input clock selector
  9233                           ;	WDTCCS = 0x7, unprogrammed default
  9234  300005                     	org	3145733
  9235  300005  FF                 	db	255
  9236                           
  9237                           ;Config register CONFIG4L @ 0x300006
  9238                           ;	unspecified, using default values
  9239                           ;	Write Protection Block 0
  9240                           ;	WRT0 = 0x1, unprogrammed default
  9241                           ;	Write Protection Block 1
  9242                           ;	WRT1 = 0x1, unprogrammed default
  9243                           ;	Write Protection Block 2
  9244                           ;	WRT2 = 0x1, unprogrammed default
  9245                           ;	Write Protection Block 3
  9246                           ;	WRT3 = 0x1, unprogrammed default
  9247                           ;	Write Protection Block 3
  9248                           ;	WRT4 = 0x1, unprogrammed default
  9249                           ;	Write Protection Block 3
  9250                           ;	WRT5 = 0x1, unprogrammed default
  9251                           ;	Write Protection Block 3
  9252                           ;	WRT6 = 0x1, unprogrammed default
  9253                           ;	Write Protection Block 3
  9254                           ;	WRT7 = 0x1, unprogrammed default
  9255  300006                     	org	3145734
  9256  300006  FF                 	db	255
  9257                           
  9258                           ;Config register CONFIG4H @ 0x300007
  9259                           ;	unspecified, using default values
  9260                           ;	Configuration Register Write Protection bit
  9261                           ;	WRTC = 0x1, unprogrammed default
  9262                           ;	Boot Block Write Protection bit
  9263                           ;	WRTB = 0x1, unprogrammed default
  9264                           ;	Data EEPROM Write Protection bit
  9265                           ;	WRTD = 0x1, unprogrammed default
  9266                           ;	Scanner Enable bit
  9267                           ;	SCANE = 0x1, unprogrammed default
  9268                           ;	Low Voltage Programming Enable bit
  9269                           ;	LVP = 0x1, unprogrammed default
  9270  300007                     	org	3145735
  9271  300007  FF                 	db	255
  9272                           
  9273                           ;Config register CONFIG5L @ 0x300008
  9274                           ;	unspecified, using default values
  9275                           ;	UserNVM Program Memory Code Protection bit
  9276                           ;	CP = 0x1, unprogrammed default
  9277                           ;	DataNVM Memory Code Protection bit
  9278                           ;	CPD = 0x1, unprogrammed default
  9279  300008                     	org	3145736
  9280  300008  FF                 	db	255
  9281                           
  9282                           ;Config register CONFIG5H @ 0x300009
  9283                           ;	unspecified, using default values
  9284  300009                     	org	3145737
  9285  300009  FF                 	db	255
  9286                           
  9287                           ;Config register CONFIG6L @ 0x30000A
  9288                           ;	unspecified, using default values
  9289                           ;	Table Read Protection Block 0
  9290                           ;	EBTR0 = 0x1, unprogrammed default
  9291                           ;	Table Read Protection Block 1
  9292                           ;	EBTR1 = 0x1, unprogrammed default
  9293                           ;	Table Read Protection Block 2
  9294                           ;	EBTR2 = 0x1, unprogrammed default
  9295                           ;	Table Read Protection Block 3
  9296                           ;	EBTR3 = 0x1, unprogrammed default
  9297                           ;	Table Read Protection Block 4
  9298                           ;	EBTR4 = 0x1, unprogrammed default
  9299                           ;	Table Read Protection Block 5
  9300                           ;	EBTR5 = 0x1, unprogrammed default
  9301                           ;	Table Read Protection Block 6
  9302                           ;	EBTR6 = 0x1, unprogrammed default
  9303                           ;	Table Read Protection Block 7
  9304                           ;	EBTR7 = 0x1, unprogrammed default
  9305  30000A                     	org	3145738
  9306  30000A  FF                 	db	255
  9307                           
  9308                           ;Config register CONFIG6H @ 0x30000B
  9309                           ;	unspecified, using default values
  9310                           ;	Boot Block Table Read Protection bit
  9311                           ;	EBTRB = 0x1, unprogrammed default
  9312  30000B                     	org	3145739
  9313  30000B  FF                 	db	255
  9314                           tosu	equ	0xFFF
  9315                           tosh	equ	0xFFE
  9316                           tosl	equ	0xFFD
  9317                           stkptr	equ	0xFFC
  9318                           pclatu	equ	0xFFB
  9319                           pclath	equ	0xFFA
  9320                           pcl	equ	0xFF9
  9321                           tblptru	equ	0xFF8
  9322                           tblptrh	equ	0xFF7
  9323                           tblptrl	equ	0xFF6
  9324                           tablat	equ	0xFF5
  9325                           prodh	equ	0xFF4
  9326                           prodl	equ	0xFF3
  9327                           indf0	equ	0xFEF
  9328                           postinc0	equ	0xFEE
  9329                           postdec0	equ	0xFED
  9330                           preinc0	equ	0xFEC
  9331                           plusw0	equ	0xFEB
  9332                           fsr0h	equ	0xFEA
  9333                           fsr0l	equ	0xFE9
  9334                           wreg	equ	0xFE8
  9335                           indf1	equ	0xFE7
  9336                           postinc1	equ	0xFE6
  9337                           postdec1	equ	0xFE5
  9338                           preinc1	equ	0xFE4
  9339                           plusw1	equ	0xFE3
  9340                           fsr1h	equ	0xFE2
  9341                           fsr1l	equ	0xFE1
  9342                           bsr	equ	0xFE0
  9343                           indf2	equ	0xFDF
  9344                           postinc2	equ	0xFDE
  9345                           postdec2	equ	0xFDD
  9346                           preinc2	equ	0xFDC
  9347                           plusw2	equ	0xFDB
  9348                           fsr2h	equ	0xFDA
  9349                           fsr2l	equ	0xFD9
  9350                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        1
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    128     155
    BANK1           256     46     169
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2246$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2246$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S214DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S214DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_predict
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                57    57      0   42931
                                            126 BANK0      2     2      0
                                              0 BANK1     46    46      0
                  _I2C_2_Master_Init
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                    _calibrate_white
                   _calibration_init
                   _color_click_init
                      _color_display
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        31    27      4   24482
                                             16 BANK0     31    27      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   12618
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   11379
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3082
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    2164
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1660
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2585
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7725
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     613
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LED_B
   _LED_C
   _LED_G
   _LED_R
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibration_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_display
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _color_predict
     _sendStringSerial4
     _sprintf
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
       _color_read_Red
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _read_color

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2E      A9       7       66.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      9B       5       96.9%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A3      58        0.0%
DATA                 0      0     1A3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 09 15:57:58 2022

                _color_read_Red 3B70                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 3C10                   _color_predict 3594  
                            l50 3F9C                              l53 3BBE                              l62 3B6E  
                            l71 401C                              l47 3EFA                              l56 3C5E  
                            l80 3A0C                              l65 3ACC                              l74 3FFC  
                            l59 3C0E                              l68 3FBC                              l77 3FDC  
                            l96 3670                              l99 3386                _color_read_Clear 3B20  
              _color_read_Green 3BC0                             l120 3E20                             l115 18EE  
                           l116 18F2                             l119 3E1E                             l160 3F7C  
                           l154 3F54                             l163 407E                             l172 406A  
                           l244 3D2A                             l157 3F56                             l166 4088  
                           l175 3D6C                             l247 3742                             l343 403A  
                           l352 403E                             l169 4074                             l361 3F2A  
                           l355 4052                             l518 405E                             l651 325C  
                           l821 348E                             l638 30F8                             l794 3592  
                           l789 354C                             l798 3E90                ?_calibrate_white 000C  
                           _abs 3D6E                             _pad 38D8                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                    ___fltol@exp1 0065  
                          l1111 2748                            l1120 2830                            l1200 3DE6  
                          l1106 2924                            ?_abs 0013                            l1108 2784  
                          l1052 1AE2                            l1117 27CA                            l1061 1DB2  
                          l1053 1AD0                            l1142 21DC                            l1054 1A96  
                          l1207 3B1E                            l1119 2842                            l3000 38D8  
                          l1145 206E                            l1306 3CE8                            l1330 3EC6  
                          l3010 392A                            l1234 391E                            l3002 38E8  
                          l1138 1E78                            l1155 219E                            l1147 20E6  
                          l3012 393E                            l3004 38FC                            l1148 20D4  
                          l3100 1A24                            l1309 408A                            l1237 3960  
                          l1245 29C6                            l1069 1BFC                            l1317 258A  
                          l3022 3D6E                            l3014 3942                            l3006 390A  
                          l1182 2DBC                            l1078 1CCC                            l3110 1A38  
                          l3102 1A28                            l3030 18F4                            l1094 3CA4  
                          l1239 399C                            l1247 29CE                            l1079 1CBA  
                          l4000 3326                            l3024 3D88                            l3016 3970  
                          l3008 3916                            l1272 2F70                            l3200 1CDC  
                          l3120 1AB0                            l3112 1A62                            l3104 1A2C  
                          l3040 1930                            l3032 1900                            l1265 2C08  
                          l1193 2D54                            l3026 3F56                            l4002 333E  
                          l3018 3984                            l1186 2CF8                            l3210 1D42  
                          l3202 1CE8                            l3130 1AF0                            l3122 1AB4  
                          l3114 1A7E                            l3106 1A30                            l3050 1960  
                          l3042 1940                            l3034 190E                            l4010 0E9A  
                          l1283 3DA4                            l1179 2C60                            l3028 3F66  
                          l3300 4066                            l4004 3356                            l3220 1D8A  
                          l3212 1D52                            l3204 1CF6                            l3140 1B32  
                          l3132 1B00                            l3124 1AC2                            l3116 1A8E  
                          l3108 1A34                            l3060 198A                            l3052 1972  
                          l3044 1942                            l3036 1910                            l4100 18E8  
                          l4020 100A                            l4012 0E9E                            l3310 3D2E  
                          l3302 406C                            l4006 336E                            l1286 3DAC  
                          l1278 3A66                            l3222 1D8C                            l3214 1D72  
                          l3206 1D30                            l3150 1B60                            l3142 1B40  
                          l3126 1AC4                            l3118 1AA4                            l3062 199A  
                          l3070 19C4                            l3054 1974                            l3038 1920  
                          l3046 194A                            l4030 10F6                            l4022 101E  
                          l4014 0EAA                            l1279 3A6E                            l3320 3D6A  
                          l3312 3D32                            l3304 4070                            l3240 299E  
                          l3232 2926                            l3400 1FF2                            l3224 1D92  
                          l3216 1D76                            l3208 1D32                            l3160 1BCC  
                          l3152 1B6A                            l3144 1B4C                            l3136 1B14  
                          l3128 1ACE                            l3080 19FC                            l3072 19D4  
                          l3064 19AA                            l3056 197A                            l3048 195A  
                          l4040 127C                            l4032 1102                            l4024 10C6  
                          l4016 0F46                            l4008 0E54                            l3314 3D3A  
                          l3306 4080                            l1298 38D6                            l3250 29F6  
                          l3242 29A0                            l3234 2946                            l3410 206C  
                          l3402 2028                            l3330 1DD0                            l3226 1DA0  
                          l3218 1D84                            l3162 1BDC                            l3146 1B50  
                          l3138 1B24                            l3154 1B70                            l3090 1A10  
                          l3082 1A00                            l3074 19E6                            l3066 19BA  
                          l3058 1988                            l4050 1360                            l4042 1324  
                          l4034 11A4                            l4026 10DA                            l4018 0F62  
                          l4130 3D28                            l4122 3CEA                            l3316 3D42  
                          l3308 4084                            l3260 2A96                            l3252 29FC  
                          l3244 29BA                            l3236 296E                            l3500 2E2A  
                          l3420 20CC                            l3412 207E                            l3404 2036  
                          l3340 1E16                            l3332 1DE0                            l3324 1DB4  
                          l3228 1DA2                            l3180 1C5E                            l3172 1C36  
                          l3156 1B96                            l3164 1BEC                            l3148 1B5E  
                          l3092 1A14                            l3084 1A04                            l3076 19F4  
                          l3068 19BC                            l4060 158A                            l4052 1402  
                          l4044 1338                            l4036 11B8                            l4028 10F2  
                          l4124 3CFA                            l4140 36B6                            l4132 3672  
                          l4300 377E                            l3318 3D68                            l3270 2B3E  
                          l3262 2A9C                            l3254 2A04                            l3246 29D6  
                          l3238 298E                            l3510 2EF2                            l3502 2E4E  
                          l3430 213A                            l3414 208C                            l3406 2054  
                          l3350 1E42                            l3342 1E1C                            l3334 1DF0  
                          l3326 1DC0                            l3182 1C66                            l3174 1C40  
                          l3166 1C12                            l3158 1BCA                            l3190 1C8A  
                          l3094 1A18                            l3086 1A08                            l3078 19F8  
                          l4070 16C4                            l4062 15A6                            l4054 141E  
                          l4046 1350                            l4038 1260                            l4126 3D12  
                          l4142 36C6                            l4134 367E                            l4310 3784  
                          l4302 3780                            l3280 2BA4                            l3272 2B58  
                          l3264 2AA2                            l3256 2A0E                            l3248 29E8  
                          l3520 2F2E                            l3512 2F00                            l3504 2E96  
                          l3440 21A2                            l3424 20F6                            l3432 213E  
                          l3416 2090                            l3408 205E                            l3360 1E98  
                          l3352 1E52                            l3344 1E22                            l3336 1E00  
                          l3328 1DCE                            l3192 1C8E                            l3184 1C6A  
                          l3176 1C4E                            l3168 1C22                            l3096 1A1C  
                          l3088 1A0C                            l4080 17D0                            l4072 16CE  
                          l4064 15BE                            l4056 14C6                            l4048 1354  
                          l4128 3D26                            l4144 36DA                            l4136 368E  
                          l4320 37A8                            l4312 3784                            l4304 3782  
                          l3282 2BAA                            l3290 2BE0                            l3274 2B72  
                          l3258 2A14                            l3266 2B06                            l3514 2F14  
                          l3610 347E                            l3602 3442                            l3450 21CC  
                          l3442 21B2                            l3434 2158                            l3426 2102  
                          l3418 209E                            l3370 1ED8                            l3354 1E62  
                          l3346 1E30                            l3338 1E06                            l3194 1C9C  
                          l3186 1C7A                            l3178 1C50                            l3098 1A20  
                          l4082 17FE                            l4074 16FC                            l4090 182C  
                          l4066 15EC                            l4058 14E2                            l4138 36A2  
                          l4170 4034                            l4322 37C0                            l4314 3784  
                          l4306 3784                            l3540 3C56                            l3532 3B70  
                          l4180 4054                            l3700 3F0E                            l3284 2BBC  
                          l3268 2B20                            l3276 2B82                            l3508 2ECE  
                          l3524 2F3A                            l3604 344E                            l3460 3490  
                          l3444 21C0                            l3436 216C                            l3428 2110  
                          l3380 1F22                            l3372 1EE4                            l3364 1EAC  
                          l3356 1E68                            l3348 1E32                            l3196 1CB2  
                          l3188 1C7C                            l3620 225A                            l4092 1858  
                          l4084 1808                            l4076 17BC                            l4068 16BA  
                          l4172 4036                            l4164 401E                            l4324 37DA  
                          l4316 3784                            l4308 3784                            l3294 4076  
                          l3534 3BB6                            l3702 3F12                            l2902 3CA6  
                          l2910 3E92                            l3286 2BC8                            l3278 2B94  
                          l3526 2F5E                            l3518 2F20                            l3710 3DEC  
                          l3606 345E                            l3470 351A                            l3462 34BE  
                          l3446 21C2                            l3438 2186                            l3390 1F74  
                          l3382 1F2E                            l3374 1EFC                            l3366 1EB8  
                          l3358 1E88                            l3454 3C60                            l3630 230E  
                          l3622 2296                            l3614 21DE                            l3550 3B20  
                          l4094 1886                            l4086 1820                            l4078 17C6  
                          l4174 4038                            l4166 4028                            l4326 37E6  
                          l4318 379C                            l3296 407A                            l3544 3BC0  
                          l2920 2F72                            l2904 3CB2                            l2912 3E9E  
                          l3288 2BD0                            l3800 270C                            l3712 3E04  
                          l3608 346E                            l3472 352C                            l3464 34CE  
                          l3448 21C8                            l3392 1F84                            l3384 1F3E  
                          l3376 1F08                            l3368 1EC2                            l3456 3C70  
                          l3640 251A                            l3632 23DC                            l3624 22BA  
                          l3616 21FE                            l3704 3DAE                            l3552 3B66  
                          l4096 188C                            l4088 1828                            l4168 402A  
                          l4328 37EE                            l4280 3748                            l3298 4062  
                          l3538 3C10                            l3546 3C06                            l2930 2FB6  
                          l2922 2F76                            l2906 3CC4                            l2914 3EA2  
                          l3490 2DBE                            l3650 3A16                            l3810 2752  
                          l3802 2714                            l3714 3E1A                            l3570 3388  
                          l3474 353A                            l3466 34FC                            l3394 1FA0  
                          l3386 1F4A                            l3378 1F14                            l3482 3E5A  
                          l3642 2556                            l3634 2448                            l3626 22D6  
                          l3618 2246                            l4098 18BA                            l4290 3774  
                          l4282 374C                            l3660 3F3C                            l2940 300C  
                          l2932 2FD6                            l2924 2F84                            l2908 3CC8  
                          l2916 3EBA                            l3492 2DE2                            l3652 3A24  
                          l3820 27AA                            l3812 2770                            l3804 2724  
                          l3740 25A8                            l3900 2D44                            l3708 3DE8  
                          l3580 33E0                            l3572 33A0                            l3476 358A  
                          l3468 350C                            l3396 1FAC                            l3388 1F5A  
                          l3484 3E70                            l3644 257A                            l3636 247A  
                          l4292 3776                            l4284 3758                            l3662 3F3E  
                          l3566 403E                            l2950 308E                            l2942 3020  
                          l2934 2FDA                            l2926 2FA4                            l3494 2DF0  
                          l3654 3A4A                            l3830 27E8                            l3822 27B0  
                          l3814 2772                            l3806 2738                            l3742 25B8  
                          l3750 25E2                            l3734 258C                            l3910 2D9C  
                          l3902 2D62                            l3582 33F0                            l3478 3590  
                          l3398 1FC8                            l3486 3E80                            l3638 24E6  
                          l3670 3A70                            l4294 3778                            l4286 375C  
                          l4278 3744                            ?_pad 0011                            l3680 3FBE  
                          l3672 3F9E                            l3664 3F40                            l3656 3F2C  
                          l3920 3ECC                            l3568 404E                            l2960 30D8  
                          l2952 3090                            l2944 302E                            l2936 2FE6  
                          l2928 2FA8                            l3496 2E02                            l3648 3A0E  
                          l3840 2852                            l3832 27EC                            l3824 27BA  
                          l3816 2782                            l3808 2746                            l3760 260E  
                          l3752 25F2                            l3744 25C8                            l3736 2598  
                          l3912 2DAA                            l3904 2D64                            l3592 341A  
                          l3584 33F4                            l3576 33B4                            l4296 377A  
                          l4288 3770                            l3930 4004                            l3682 3FC4  
                          l3674 3FA4                            l3666 3F42                            l3658 3F36  
                          l3922 3ED6                            l2954 30A2                            l2946 3040  
                          l2938 3004                            l2970 312C                            l2890 3820  
                          l3498 2E06                            l3690 3AF0                            l3850 28B4  
                          l3842 285E                            l3834 27FA                            l3826 27C8  
                          l3818 2794                            l3762 261E                            l3770 2648  
                          l3754 25F8                            l3746 25D8                            l3738 25A6  
                          l3914 2DAC                            l3906 2D68                            l3594 3424  
                          l3586 3402                            l3578 33DE                            l4298 377C  
                          l3676 3FDE                            l3668 3F80                            l3924 3EE6  
                          l2948 306E                            l2956 30A8                            l2980 3184  
                          l2972 3130                            l2964 30FA                            l2892 3832  
                          l3692 3B0C                            l3684 3ACE                            l3932 399E  
                          l3940 35AA                            l3860 2912                            l3852 28CA  
                          l3844 286C                            l3836 2828                            l3828 27DA  
                          l3780 268A                            l3772 2658                            l3764 262E  
                          l3756 25FE                            l3748 25DA                            l3908 2D8C  
                          l3596 342E                            l3678 3FE4                            l3926 3EF0  
                          l3918 3EC8                            l2958 30B8                            l2990 3206  
                          l2982 3198                            l2974 313E                            l2966 30FE  
                          l2894 383C                            l3686 3AE0                            l3934 3A00  
                          l3950 35DE                            l3942 35BA                            l3862 2918  
                          l3854 28E4                            l3846 2896                            l3774 266E  
                          l3766 263E                            l3758 260C                            l3928 3FFE  
                          l3696 3EFC                            l2984 31A6                            l2992 320C  
                          l2976 315E                            l2968 310C                            l2896 385A  
                          l2888 380E                            l3688 3AE8                            l3960 3602  
                          l3952 35DE                            l3944 35BA                            l3936 3598  
                          l3864 291A                            l3856 2900                            l3848 289A  
                          l3792 26C2                            l3776 267E                            l3784 269E  
                          l3768 2640                            l3880 2C86                            l3872 2C0C  
                          l3698 3F00                            l2994 321C                            l2986 31D4  
                          l2978 317C                            l2898 3890                            l3970 3638  
                          l3962 3614                            l3954 35F0                            l3946 35CC  
                          l3938 35AA                            l3858 2904                            l3794 26DC  
                          l3786 26AE                            l3778 2686                            l3890 2CE0  
                          l3874 2C1C                            l3980 325E                            l2996 323C  
                          l2988 31F4                            l3972 3638                            l3964 3614  
                          l3956 35F0                            l3948 35CC                            l3796 26EC  
                          l3788 26AE                            l3892 2CE2                            l3884 2C9A  
                          l3876 2C2A                            l3990 32BE                            l3982 3262  
                          l3974 364A                            l3966 3626                            l3958 3602  
                          l3798 26FC                            l3894 2CEE                            l3886 2CA2  
                          l3878 2C70                            l3992 32C2                            l3984 3276  
                          l3976 364A                            l3968 3626                            l3896 2D2A  
                          l3888 2CAE                            l3994 32DA                            l3986 328E  
                          l3978 3664                            l3898 2D36                            l3996 32F2  
                          l3988 32A6                            l3998 3322                            STR_1 0E05  
                          STR_3 0E3E                            STR_4 0E4E                            STR_5 0E38  
                          STR_6 0E44                            STR_7 0E25                            STR_8 0E49  
                          STR_9 0E1E                            u2100 3832                            u2101 382E  
                          u2110 385A                            u2111 3856                            u2200 306E  
                          u2120 3890                            u3000 206C                            u2201 306A  
                          u2121 388C                            u3001 2068                            u2210 30B8  
                          u2130 3CE8                            u3010 208C                            u2211 30B4  
                          u2131 3CE4                            u3011 2088                            u2220 310C  
                          u2140 3EBA                            u2300 3960                            u3100 34BE  
                          u3020 209E                            u2221 3108                            u2141 3EB6  
                          u2301 395C                            u3101 34BA                            u3021 209A  
                          u2150 2F84                            u2230 313E                            u2310 3970  
                          u3110 34FC                            u3030 20CC                            u2151 2F80  
                          u2231 313A                            u2311 396C                            u3111 34F8  
                          u3031 20C8                            u2160 2FB6                            u2240 317C  
                          u2320 3D88                            u3120 351A                            u3040 20E2  
                          u2400 199A                    _BAUD4CONbits 000EE9                            u2161 2FB2  
                          u2241 3178                            u2321 3D84                            u3121 3516  
                          u3041 20DE                            u2401 1996                            _LATE 000F7D  
                          u2330 3F66                            u3210 404E                            u2250 31A6  
                          u2090 3820                            u3130 353A                            u3050 20F6  
                          u2410 19AA                            u2331 3F62                            u3211 404A  
                          u2171 2FE0                            u2251 31A2                            u2091 381C  
                          u3131 3536                            u3051 20F2                            u2411 19A6  
                          _LATG 000F7F                            u2340 3F7C                            u2180 3004  
                          u2260 31D4                            u3220 33A0                            u3140 358A  
                          u3060 2110                            u2500 1AF0                            u2420 19E6  
                          u3300 2246                            u2341 3F78                            u2181 3000  
                          u2261 31D0                            u3221 339C                            u3141 3586  
                          u3061 210C                            u2501 1AEC                            u2421 19E2  
                          u3301 2242                            u2190 302E                            u2270 321C  
                          u3230 33D4                            u3070 2158                            u3150 3E70  
                          u2510 1B00                            u2430 19F4                            u2350 190E  
                          u3310 227A                            u2191 302A                            u2271 3218  
                          u3071 2154                            u3151 3E6C                            u2511 1AFC  
                          u2431 19F0                            u2351 190A                            u2280 38E8  
                          u3160 2DE2                            u3400 3E04                            u3240 3402  
                          u3080 2186                            u2600 1C5E                            u2520 1B32  
                          u2440 1A62                            u2360 1920                            u3320 2296  
                          u2281 38E4                            u3161 2DDE                            u3401 3E00  
                          u3241 33FE                            u3081 2182                            u2601 1C5A  
                          u2521 1B2E                            u2441 1A5E                            u2361 191C  
                          u3321 2292                            u2290 390A                            u3170 2E2A  
                          u3410 3E1A                            u3250 3416                            u3090 21C0  
                          u2610 1C7A                            u2530 1B40                            u2450 1A7A  
                          u2370 1930                            u3330 22D6                            _T2PR 000FBC  
                          u2291 3906                            u3171 2E26                            u3411 3E16  
                          u3251 3412                            u3235 33CA                            u3091 21BC  
                          u2611 1C76                            u2531 1B3C                            u2451 1A74  
                          u2371 192C                            u3331 22D2                            u3315 2270  
                          u3180 2E4E                            u3500 266E                            u3260 343E  
                          u2700 1D52                            u2620 1C8A                            u2540 1B5E  
                          u2460 1A7C                            u2380 1972                            u3340 23DC  
                          u3181 2E4A                            u3501 266A                            u3261 343A  
                          u2701 1D4E                            u2621 1C86                            u2541 1B5A  
                          u2381 196E                            u3341 23D8                            u3190 2EF2  
                          u3510 26AE                            u3270 345E                            u2710 1D72  
                          u2630 1C9C                            u2550 1B96                            u2470 1AA4  
                          u2390 1988                            u3350 247A                            u3191 2EEE  
                          u3511 26AA                            u3271 345A                            u2711 1D6E  
                          u2631 1C98                            u2551 1B92                            u2471 1AA0  
                          u2391 1984                            u3351 2476                            u2800 29F6  
                          u3600 2828                            u3520 2724                            u3440 25A6  
                          u3280 346E                            u2720 1D84                            u2640 1CB2  
                          u2560 1BDC                            u2480 1AC2                            u3360 253A  
                          u2801 29F2                            u3601 2824                            u3521 2720  
                          u3441 25A2                            u3281 346A                            u2721 1D80  
                          u2641 1CAE                            u2561 1BD8                            u2481 1ABE  
                          u4217 3790                            u2810 2B20                            u3610 283E  
                          u3530 2746                            u3450 25B8                            u2730 1DA0  
                          u2650 1CC8                            u2570 1C12                            u2490 1AE2  
                          u3370 2556                            u3290 221E                            u4307 3378  
                          u2811 2B1C                            u3611 283A                            u3531 2742  
                          u3451 25B4                            u2731 1D9C                            u2651 1CC4  
                          u2571 1C0E                            u2491 1ADE                            u3371 2552  
                          u4227 37B4                            u2820 2B3E                            u2740 2956  
                          u3380 3A66                            u3620 2852                            u3540 2770  
                          u3460 25C8                            u3700 2CDC                            u2660 1CDC  
                          u2580 1C22                            u4317 3FAE                            u2821 2B3A  
                          u2741 2950                            u3381 3A62                            u3621 284E  
                          u3541 276C                            u3461 25C4                            u3701 2CD8  
                          u2661 1CD8                            u2581 1C1E                            u3365 2530  
                          u4237 37FA                            u3390 3F2A                            u2830 2B58  
                          u2750 2958                            u3630 286C                            u3550 2794  
                          u3470 260C                            u3710 2D26                            u2910 1DCE  
                          u2670 1CF6                            u2590 1C4E                            u4327 3FCE  
                          u3391 3F26                            u2831 2B54                            u3631 2868  
                          u3551 2790                            u3471 2608                            u3711 2D22  
                          u2911 1DCA                            u2671 1CF2                            u2591 1C4A  
                          u3295 2214                            u4247 10E6                            u2840 2B72  
                          u2760 296E                            u3800 35DE                            u3640 28B4  
                          u3560 27AA                            u3480 261E                            u3720 2D44  
                          u2920 1DE0                            u2680 1D30                            u4337 3FEE  
                          u2841 2B6E                            u2761 296A                            u3801 35DA  
                          u3641 28B0                            u3561 27A6                            u3481 261A  
                          u3721 2D40                            u2921 1DDC                            u2681 1D2C  
                          u4257 1344                            u2850 2B82                            u2770 299E  
                          u3810 35F0                            u3650 28E4                            u3570 27C8  
                          u3490 262E                            u3730 2D54                            u2930 1DF0  
                          u2690 1D42                            u4347 400E                            u2851 2B7E  
                          u2771 299A                            u3811 35EC                            u3651 28E0  
                          u3571 27C4                            u3491 262A                            u3731 2D50  
                          u2931 1DEC                            u2691 1D3E                            u4267 15B2  
                          u2908 3D58                            u2860 2B94                            u2780 29BA  
                          u3820 3602                            u3660 2912                            u3580 27E8  
                          u3740 2D62                            u2940 1E30                            u3900 17BC  
                          u4277 3EDC                            u2861 2B90                            u2781 29B6  
                          u3821 35FE                            u3661 290E                            u3581 27E4  
                          u3741 2D5E                            u2941 1E2C                            u3901 17B8  
                          u2870 2BA4                            u2790 29E8                            u3830 3614  
                          u3590 27FA                            u3750 2D9C                            u3670 2C1C  
                          u2950 1E42                            u3910 17FE                            u4287 32B0  
                          u2871 2BA0                            u2791 29E4                            u3831 3610  
                          u3591 27F6                            u3751 2D98                            u3671 2C18  
                          u2951 1E3E                            u3911 17FA                            u2880 2BBC  
                          u3840 3626                            u3760 2DAA                            u3680 2C2A  
                          u2960 1E52                            u3920 1820                            u4297 3314  
                          u2881 2BB8                            u3841 3622                            u3761 2DA6  
                          u3681 2C26                            u2961 1E4E                            u3921 181C  
                          u2890 3D56                            u3850 3638                            u3770 35AA  
                          u3690 2C86                            u2970 1E88                            u3930 1858  
                          u2891 3D4E                            u3851 3634                            u3771 35A6  
                          u3691 2C82                            u2971 1E84                            u3931 1854  
                          u3860 364A                            u3780 35BA                            u2980 1E98  
                          u3940 1886                            u3861 3646                            u3781 35B6  
                          u2981 1E94                            u3941 1882                            u3790 35CC  
                          u2990 2012                            u3950 18BA                            u3870 15EC  
                          u3791 35C8                            u3951 18B6                            u3871 15E8  
                          u3960 18E8                            u3880 16BA                            u3961 18E4  
                          u3881 16B6                            u3890 16FC                            u2995 2008  
                          u3891 16F8                            abs@a 0013                            _dbuf 015B  
                          _main 3744                            _dtoa 2926                            _prec 00F2  
                          _nout 00EE                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                ?_color_display 0058                 ___fldiv@new_exp 0020          __end_of_color_read_Red 3BC0  
             ?_calibration_init 0001                    ___param_bank 000000                  ?_color_predict 0001  
            ??_calibration_init 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 30FA                 __end_of___fladd 1DB4  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 325E  
                         _ADPCH 000F5F                 __end_of___fldiv 2926                 __end_of___flneg 3E92  
                         STR_10 0E13                           STR_11 0E2C                           STR_12 0E32  
                         STR_13 0E0D                 __end_of___flmul 21DE                 __end_of___flsub 3CA6  
               __end_of___fltol 3490                           _LED_B 3FDE                           _LED_C 3FFE  
                         _LED_G 3FBE                           _LED_R 3F9E                    vfpfcnvrt@fmt 0042  
       __end_of_sendCharSerial4 4054      __end_of_I2C_2_Master_Start 4080      __end_of_I2C_2_Master_Write 406C  
               __end_of_compare 3E22                    compare@lower 006A                           _flags 00F4  
                         _color 015A                    compare@upper 006E                           _fputc 380E  
                         _fputs 3CA6                           pad@fp 0011                           _width 00F0  
                         _putch 408A                           _toint 0E01                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                           tablat 000FF5  
               __end_of_lroundf 3DE8                           status 000FD8                 __end_of_sprintf 3B20  
              color_display@buf 0079         __end_of_color_read_Blue 3C60           _I2C_2_Master_RepStart 4080  
               ?_color_read_Red 0005                 __initialization 3E22                    __end_of_main 380E  
                  __end_of_dtoa 2C0A            __end_of_detect_color 18F4                          ??_main 00DE  
                        ??_dtoa 0026                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
        _initDCmotors_parameter 3672                          ?_fputc 0001                          ?_fputs 000A  
                        _ADRESH 000F64                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70        __end_of_color_click_init 3EFC  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 2DBE                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 3490                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                       ??___fldiv 0017                       ??___flneg 0005  
                     ??___flmul 0030                       ??___flsub 0019                       ??___fltol 0060  
                 compare@result 005F                          clear_0 3E3A                          clear_1 3E46  
                        _motorL 00E0                          _motorR 0150                          isa$std 000001  
                        pad@buf 0013                          _roundf 21DE                          dtoa@fp 001C  
                        _strlen 3E92                       ??_compare 005F                          fputc@c 0001  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 005F  
                   read_color@m 000C                          putch@c 0001                __end_of_vfprintf 3A70  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                      __accesstop 0060  
       __end_of__initialization 3E4C        __end_of_color_read_Clear 3B70                      ___flneg@f1 0001  
      __end_of_color_read_Green 3C10          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 3FFE                   __end_of_LED_C 401E  
                 __end_of_LED_G 3FDE                   __end_of_LED_R 3FBE                ?_color_read_Blue 0005  
                __pcstackCOMRAM 0001                    __pidataBANK0 408C                   __end_of_fputc 38D8  
             detect_color@color 0086                   __end_of_fputs 3CEA                   __end_of_putch 408C  
                 __end_of_toint 0E05                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00E0  
                    __pbssBANK1 0100                color_predict@buf 0079               _color_writetoaddr 3F7E  
                  _T2CLKCONbits 000FBF                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5                    _detect_color 0E54          color_writetoaddr@value 0003  
              ??_color_read_Red 0007       __end_of_color_writetoaddr 3F9E                       _ADREFbits 000F58  
            _I2C_2_Master_Start 4076                      _initUSART4 401E              _I2C_2_Master_Write 4060  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000A  
       sendStringSerial4@string 0002                         ___aodiv 2F72                         ___fladd 18F4  
                       ___aomod 30FA                         ___fldiv 258C                         ___flneg 3E5A  
                       ___flmul 1DB4                         ___flsub 3C60                         ___fltol 3388  
           ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00                         __pcinit 3E22                         __ramtop 0E00  
                    _read_color 3A70                         __ptext0 3744                         __ptext1 401E  
                       __ptext2 3672                         __ptext3 3CEA                         __ptext4 0E54  
                       __ptext5 3A70                         __ptext6 3B20                         __ptext7 3DAE  
                       __ptext8 21DE                         __ptext9 3C60                         _compare 3DE8  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 3DAE                   _RxBufWriteCnt 00F9  
                       _sprintf 3ACE                         main@rgb 01A1            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 3E4C                         fputc@fp 0003  
                       fputs@fp 000C               ?_color_click_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 2F72                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 3CEA  __end_of_initDCmotors_parameter 3744                       _PORTFbits 000F8E  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
                   ___flmul@grs 0035               ?_color_read_Clear 0005                    _EUSART4RXbuf 013C  
                  _EUSART4TXbuf 0100               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001           __end_of_color_display 3A0E                      main@motorL 017B  
                    main@motorR 0185               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 0084  
                detect_color@BG 0089                  detect_color@GB 007E                  detect_color@GG 0080  
                detect_color@BR 0087                  detect_color@GR 007C                  detect_color@RB 007A  
                detect_color@RG 0078                  detect_color@RR 0082           __end_of_color_predict 3672  
                __end_of___flge 3594                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                     ?_read_color 000C                  __end_of_roundf 258C  
                __end_of_strlen 3EC8             color_read_Clear@tmp 000A             start_initialization 3E22  
              _calibration_init 4054                     __end_of_abs 3DAE                     __end_of_pad 399E  
                 _TxBufWriteCnt 00F7             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 3D2C  
                   vfprintf@fmt 0052                        ??___flge 0009                     __pdataBANK0 00FA  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 017B  
              ___aodiv@dividend 0001                       _dtoa$2328 002E                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 006A                     __smallconst 0E00  
             _I2C_2_Master_Idle 3F56               _I2C_2_Master_Init 3F2C               _I2C_2_Master_Read 3D2C  
             _I2C_2_Master_Stop 406C                    _RxBufReadCnt 00F8                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 3EFC             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                     _vfpfcnvrt 2DBE                      _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 3F7E  
     __end_of_I2C_2_Master_Init 3F56       __end_of_I2C_2_Master_Read 3D6E       __end_of_I2C_2_Master_Stop 4076  
   I2C_2_Master_Write@data_byte 0002                       main@white 018F               ??_color_read_Blue 0007  
                 detect_color@m 0070                   detect_color@w 0072                    _TxBufReadCnt 00F6  
               _calibrate_white 325E       __end_of_sendStringSerial4 3F2C   __end_of_I2C_2_Master_RepStart 408A  
            color_read_Blue@tmp 000A                      roundf@F527 00EA                    ??_initUSART4 0001  
                      __Hrparam 0000        __end_of_calibration_init 4060                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050                    __Lsmallconst 0E00  
          compare@value2compare 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062                        ___xxtofl 2C0A  
            __end_of_initUSART4 403C                        __ptext10 18F4                        __ptext11 3E5A  
                      __ptext20 3ACE                        __ptext12 1DB4                        __ptext21 3A0E  
                      __ptext13 3490                        __ptext30 30FA                        __ptext22 2DBE  
                      __ptext14 3388                        __ptext31 2F72                        __ptext23 2926  
                      __ptext15 3DE8                        __ptext40 3BC0                        __ptext32 3EFC  
                      __ptext24 38D8                        __ptext16 2C0A                        __ptext41 3C10  
                      __ptext33 403C                        __ptext25 3E92                        __ptext17 258C  
                      __ptext50 3FDE                        __ptext42 4060                        __ptext34 3EC8  
                      __ptext26 3CA6                        __ptext18 3594                        __ptext51 3FFE  
                      __ptext43 406C                        __ptext35 3F7E                        __ptext27 380E  
                      __ptext19 399E                        __ptext44 4076                        __ptext36 3F2C  
                      __ptext28 408A                        __ptext45 4080                        __ptext37 4054  
                      __ptext29 3D6E                        __ptext46 3D2C                        __ptext38 325E  
                      __ptext47 3F56                        __ptext39 3B70                        __ptext48 3F9E  
                      __ptext49 3FBE                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
            __end_of_read_color 3ACE                        isa$xinst 000000                      _RC4STAbits 000EE7  
                   _SENSITIVITY 00FA                        _vfprintf 3A0E                ___aomod@dividend 0001  
       __end_of_calibrate_white 3388                   ?_detect_color 0070                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                       sprintf@ap 006C                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 3EC8                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$2684 008B                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                  ??_detect_color 0074                   ___fladd@signs 000D  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 403C  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                    ___aomod@sign 0012  
                   _roundf$2685 004F                     _roundf$2686 0049                   _color_display 399E  
