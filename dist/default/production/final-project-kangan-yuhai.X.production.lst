

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 12:47:41 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 05/05/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK1
   132  00595C                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for _CALIBRATION_180
   136  00595C  14                 	db	20
   137                           
   138                           ;initializer for _SENSITIVITY
   139  00595D  0A                 	db	10
   140                           
   141                           	psect	smallconst
   142  000E00                     __psmallconst:
   143                           	callstack 0
   144  000E00  00                 	db	0
   145  000E01  0000               	dw	0
   146  000E03  4B00               	dw	19200
   147  000E05                     __end_of_toint:
   148                           	callstack 0
   149  0000                     _TX4REG	set	3812
   150  0000                     _RC4STAbits	set	3815
   151  0000                     _SP4BRGH	set	3814
   152  0000                     _LATEbits	set	3965
   153  0000                     _TRISGbits	set	3975
   154  0000                     _TRISEbits	set	3973
   155  0000                     _LATGbits	set	3967
   156  0000                     _LATFbits	set	3966
   157  0000                     _TRISFbits	set	3974
   158  0000                     _SSP2CON2bits	set	3802
   159  0000                     _LATG	set	3967
   160  0000                     _LATE	set	3965
   161  0000                     _RX4PPS	set	3605
   162  0000                     _SSP2CLKPPS	set	3612
   163  0000                     _SSP2DATPPS	set	3613
   164  0000                     _ANSELDbits	set	3751
   165  0000                     _SSP2ADD	set	3798
   166  0000                     _SSP2CON1bits	set	3801
   167  0000                     _LATAbits	set	3961
   168  0000                     _LATDbits	set	3964
   169  0000                     _LATHbits	set	3968
   170  0000                     _TRISDbits	set	3972
   171  0000                     _TRISHbits	set	3976
   172  0000                     _PORTFbits	set	3982
   173  0000                     _T2PR	set	4028
   174  0000                     _T2CONbits	set	4029
   175  0000                     _PWM7DCH	set	4000
   176  0000                     _PWM6DCH	set	4003
   177  0000                     _TRISAbits	set	3969
   178  0000                     _TRISCbits	set	3971
   179  0000                     _LATCbits	set	3963
   180  0000                     _RC4REG	set	3811
   181  0000                     _SP4BRGL	set	3813
   182  0000                     _TX4STAbits	set	3816
   183  0000                     _BAUD4CONbits	set	3817
   184  0000                     _SSP2CON2	set	3802
   185  0000                     _SSP2STAT	set	3800
   186  0000                     _ANSELFbits	set	3764
   187  0000                     _SSP2BUF	set	3797
   188  0000                     _PIE0bits	set	3625
   189  0000                     _PIE4bits	set	3629
   190  0000                     _PIR4bits	set	3639
   191  0000                     _RC0PPS	set	3682
   192  0000                     _RC7PPS	set	3689
   193  0000                     _RD5PPS	set	3695
   194  0000                     _RE2PPS	set	3700
   195  0000                     _RD6PPS	set	3696
   196  0000                     _TMR0L	set	4051
   197  0000                     _TMR0H	set	4052
   198  0000                     _T0CON0bits	set	4053
   199  0000                     _T2CLKCONbits	set	4031
   200  0000                     _T2HLTbits	set	4030
   201  0000                     _PWM6CONbits	set	4004
   202  0000                     _PWM7CONbits	set	4001
   203  0000                     _PIR0bits	set	3635
   204  0000                     _T0CON1bits	set	4054
   205  0000                     _INTCONbits	set	4082
   206  000E05                     STR_1:
   207                           
   208                           ; BSR set to: 14
   209  000E05  25                 	db	37
   210  000E06  64                 	db	100	;'d'
   211  000E07  09                 	db	9
   212  000E08  25                 	db	37
   213  000E09  64                 	db	100	;'d'
   214  000E0A  09                 	db	9
   215  000E0B  25                 	db	37
   216  000E0C  64                 	db	100	;'d'
   217  000E0D  09                 	db	9
   218  000E0E  25                 	db	37
   219  000E0F  64                 	db	100	;'d'
   220  000E10  0D                 	db	13
   221  000E11  0A                 	db	10
   222  000E12  00                 	db	0
   223  000E13  00                 	db	0	; dummy byte at the end
   224  0000                     
   225                           ; #config settings
   226                           
   227                           	psect	cinit
   228  005466                     __pcinit:
   229                           	callstack 0
   230  005466                     start_initialization:
   231                           	callstack 0
   232  005466                     __initialization:
   233                           	callstack 0
   234                           
   235                           ; Initialize objects allocated to BANK1 (2 bytes)
   236                           ; load TBLPTR registers with __pidataBANK1
   237  005466  0E5C               	movlw	low __pidataBANK1
   238  005468  6EF6               	movwf	tblptrl,c
   239  00546A  0E59               	movlw	high __pidataBANK1
   240  00546C  6EF7               	movwf	tblptrh,c
   241  00546E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   242  005470  6EF8               	movwf	tblptru,c
   243  005472  0009               	tblrd		*+	;fetch initializer
   244  005474  CFF5 F1CE          	movff	tablat,__pdataBANK1
   245  005478  0009               	tblrd		*+	;fetch initializer
   246  00547A  CFF5 F1CF          	movff	tablat,__pdataBANK1+1
   247                           
   248                           ; Clear objects allocated to BANK2 (60 bytes)
   249  00547E  EE02  F000         	lfsr	0,__pbssBANK2
   250  005482  0E3C               	movlw	60
   251  005484                     clear_0:
   252  005484  6AEE               	clrf	postinc0,c
   253  005486  06E8               	decf	wreg,f,c
   254  005488  E1FD               	bnz	clear_0
   255                           
   256                           ; Clear objects allocated to BANK1 (136 bytes)
   257  00548A  EE01  F000         	lfsr	0,__pbssBANK1
   258  00548E  0E88               	movlw	136
   259  005490                     clear_1:
   260  005490  6AEE               	clrf	postinc0,c
   261  005492  06E8               	decf	wreg,f,c
   262  005494  E1FD               	bnz	clear_1
   263  005496                     end_of_initialization:
   264                           	callstack 0
   265  005496                     __end_of__initialization:
   266                           	callstack 0
   267  005496  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   268  005498  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   269  00549A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   270  00549C  6EF8               	movwf	tblptru,c
   271  00549E  0E0E               	movlw	high __Lsmallconst
   272  0054A0  6EF7               	movwf	tblptrh,c
   273  0054A2  0100               	movlb	0
   274  0054A4  EF8F  F028         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssBANK1
   277  000100                     __pbssBANK1:
   278                           	callstack 0
   279  000100                     _memory:
   280                           	callstack 0
   281  000100                     	ds	40
   282  000128                     _EUSART4RXbuf:
   283                           	callstack 0
   284  000128                     	ds	20
   285  00013C                     _motorR:
   286                           	callstack 0
   287  00013C                     	ds	10
   288  000146                     _motorL:
   289                           	callstack 0
   290  000146                     	ds	10
   291  000150                     roundf@F527:
   292                           	callstack 0
   293  000150                     	ds	4
   294  000154                     _nout:
   295                           	callstack 0
   296  000154                     	ds	2
   297  000156                     _width:
   298                           	callstack 0
   299  000156                     	ds	2
   300  000158                     _prec:
   301                           	callstack 0
   302  000158                     	ds	2
   303  00015A                     _flags:
   304                           	callstack 0
   305  00015A                     	ds	2
   306  00015C                     _stop_move:
   307                           	callstack 0
   308  00015C                     	ds	2
   309  00015E                     _start_move:
   310                           	callstack 0
   311  00015E                     	ds	2
   312  000160                     _second:
   313                           	callstack 0
   314  000160                     	ds	2
   315  000162                     _color:
   316                           	callstack 0
   317  000162                     	ds	1
   318  000163                     _array_index:
   319                           	callstack 0
   320  000163                     	ds	1
   321  000164                     _TxBufReadCnt:
   322                           	callstack 0
   323  000164                     	ds	1
   324  000165                     _TxBufWriteCnt:
   325                           	callstack 0
   326  000165                     	ds	1
   327  000166                     _RxBufReadCnt:
   328                           	callstack 0
   329  000166                     	ds	1
   330  000167                     _RxBufWriteCnt:
   331                           	callstack 0
   332  000167                     	ds	1
   333  000168                     _dbuf:
   334                           	callstack 0
   335  000168                     	ds	32
   336                           
   337                           	psect	dataBANK1
   338  0001CE                     __pdataBANK1:
   339                           	callstack 0
   340  0001CE                     _CALIBRATION_180:
   341                           	callstack 0
   342  0001CE                     	ds	1
   343  0001CF                     _SENSITIVITY:
   344                           	callstack 0
   345  0001CF                     	ds	1
   346                           
   347                           	psect	bssBANK2
   348  000200                     __pbssBANK2:
   349                           	callstack 0
   350  000200                     _EUSART4TXbuf:
   351                           	callstack 0
   352  000200                     	ds	60
   353                           
   354                           	psect	cstackBANK1
   355  000188                     __pcstackBANK1:
   356                           	callstack 0
   357  000188                     verify_color@m:
   358                           	callstack 0
   359  000188                     test_function@m:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x0
   363  000188                     	ds	2
   364  00018A                     verify_color@w:
   365                           	callstack 0
   366  00018A                     test_function@w:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0x2
   370  00018A                     	ds	2
   371  00018C                     verify_color@color2:
   372                           	callstack 0
   373  00018C                     test_function@mL:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x4
   377  00018C                     	ds	2
   378  00018E                     verify_color@color:
   379                           	callstack 0
   380  00018E                     test_function@mR:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x6
   384  00018E                     	ds	2
   385  000190                     test_function@amb_light:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x8
   389  000190                     	ds	2
   390  000192                     test_function@complete:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0xA
   394  000192                     	ds	1
   395  000193                     test_function@color:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xB
   399  000193                     	ds	1
   400  000194                     test_function@stop_signal:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xC
   404  000194                     	ds	1
   405  000195                     test_function@test_code:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xD
   409  000195                     	ds	1
   410  000196                     main@rgb:
   411                           	callstack 0
   412                           
   413                           ; 8 bytes @ 0xE
   414  000196                     	ds	8
   415  00019E                     main@white:
   416                           	callstack 0
   417                           
   418                           ; 28 bytes @ 0x16
   419  00019E                     	ds	28
   420  0001BA                     main@motorL:
   421                           	callstack 0
   422                           
   423                           ; 10 bytes @ 0x32
   424  0001BA                     	ds	10
   425  0001C4                     main@motorR:
   426                           	callstack 0
   427                           
   428                           ; 10 bytes @ 0x3C
   429  0001C4                     	ds	10
   430                           
   431                           	psect	cstackBANK0
   432  000060                     __pcstackBANK0:
   433                           	callstack 0
   434  000060                     ??___fltol:
   435  000060                     ?_sprintf:
   436                           	callstack 0
   437  000060                     sprintf@s:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x0
   441  000060                     	ds	2
   442  000062                     sprintf@fmt:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  000062                     	ds	2
   447  000064                     ___fltol@sign1:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x4
   451  000064                     	ds	1
   452  000065                     ___fltol@exp1:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x5
   456  000065                     	ds	1
   457  000066                     ?_lroundf:
   458                           	callstack 0
   459  000066                     lroundf@x:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x6
   463  000066                     	ds	4
   464  00006A                     ?_amb_light_measure:
   465                           	callstack 0
   466  00006A                     compare@lower:
   467                           	callstack 0
   468  00006A                     amb_light_measure@amb:
   469                           	callstack 0
   470  00006A                     distance_measure@mL:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474  00006A                     	ds	2
   475  00006C                     ??_amb_light_measure:
   476  00006C                     compare@value2compare:
   477                           	callstack 0
   478  00006C                     distance_measure@mR:
   479                           	callstack 0
   480  00006C                     sprintf@ap:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC
   484  00006C                     	ds	2
   485  00006E                     compare@upper:
   486                           	callstack 0
   487  00006E                     amb_light_measure@upper_bound:
   488                           	callstack 0
   489  00006E                     distance_measure@amb_light:
   490                           	callstack 0
   491  00006E                     sprintf@f:
   492                           	callstack 0
   493                           
   494                           ; 11 bytes @ 0xE
   495  00006E                     	ds	2
   496  000070                     ??_distance_measure:
   497  000070                     compare@result:
   498                           	callstack 0
   499  000070                     amb_light_measure@CC_amb_ave:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x10
   503  000070                     	ds	2
   504  000072                     amb_light_measure@CC_amb_1:
   505                           	callstack 0
   506  000072                     distance_measure@CG_amb:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x12
   510  000072                     	ds	2
   511  000074                     amb_light_measure@CC_amb_2:
   512                           	callstack 0
   513  000074                     _distance_measure$3235:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x14
   517  000074                     	ds	2
   518  000076                     amb_light_measure@CC_amb_3:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x16
   522  000076                     	ds	2
   523  000078                     distance_measure@CC_amb:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x18
   527  000078                     	ds	1
   528  000079                     detect_color@m:
   529                           	callstack 0
   530  000079                     color_display@buf:
   531                           	callstack 0
   532  000079                     color_predict@buf:
   533                           	callstack 0
   534                           
   535                           ; 100 bytes @ 0x19
   536  000079                     	ds	1
   537  00007A                     distance_measure@threshold:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x1A
   541  00007A                     	ds	1
   542  00007B                     detect_color@w:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1B
   546  00007B                     	ds	1
   547  00007C                     distance_measure@stop:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x1C
   551  00007C                     	ds	1
   552  00007D                     ??_detect_color:
   553                           
   554                           ; 1 bytes @ 0x1D
   555  00007D                     	ds	4
   556  000081                     detect_color@buf:
   557                           	callstack 0
   558                           
   559                           ; 100 bytes @ 0x21
   560  000081                     	ds	92
   561  0000DD                     color_predict@color:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x7D
   565  0000DD                     	ds	1
   566  0000DE                     color_data_collection@i:
   567                           	callstack 0
   568  0000DE                     goback@i:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x7E
   572  0000DE                     	ds	2
   573  0000E0                     color_data_collection@j:
   574                           	callstack 0
   575  0000E0                     action@mL:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x80
   579  0000E0                     	ds	2
   580  0000E2                     color_data_collection@k:
   581                           	callstack 0
   582  0000E2                     action@mR:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x82
   586  0000E2                     	ds	2
   587  0000E4                     color_data_collection@x:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x84
   591  0000E4                     	ds	1
   592  0000E5                     detect_color@BC:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x85
   596  0000E5                     	ds	2
   597  0000E7                     detect_color@RG:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x87
   601  0000E7                     	ds	2
   602  0000E9                     detect_color@RB:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x89
   606  0000E9                     	ds	2
   607  0000EB                     detect_color@GB:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x8B
   611  0000EB                     	ds	2
   612  0000ED                     detect_color@GR:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x8D
   616  0000ED                     	ds	2
   617  0000EF                     detect_color@GG:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x8F
   621  0000EF                     	ds	2
   622  0000F1                     detect_color@RR:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x91
   626  0000F1                     	ds	2
   627  0000F3                     detect_color@color:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x93
   631  0000F3                     	ds	1
   632  0000F4                     detect_color@BB:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x94
   636  0000F4                     	ds	2
   637  0000F6                     detect_color@BG:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x96
   641  0000F6                     	ds	2
   642  0000F8                     detect_color@BR:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x98
   646  0000F8                     	ds	2
   647  0000FA                     _detect_color$3234:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0x9A
   651  0000FA                     	ds	4
   652  0000FE                     ??_test_function:
   653  0000FE                     ??_verify_color:
   654                           
   655                           ; 1 bytes @ 0x9E
   656  0000FE                     	ds	2
   657                           
   658                           	psect	cstackCOMRAM
   659  000001                     __pcstackCOMRAM:
   660                           	callstack 0
   661  000001                     ??_LED_OFF:
   662  000001                     ??_LED_R:
   663  000001                     ??_LED_C:
   664  000001                     ??_LED_B:
   665  000001                     ??_LED_G:
   666  000001                     ??_I2C_2_Master_Idle:
   667  000001                     ?_strlen:
   668                           	callstack 0
   669  000001                     ?___wmul:
   670                           	callstack 0
   671  000001                     ?___fladd:
   672                           	callstack 0
   673  000001                     ?___flneg:
   674                           	callstack 0
   675  000001                     ?___xxtofl:
   676                           	callstack 0
   677  000001                     ?___aodiv:
   678                           	callstack 0
   679  000001                     ?___aomod:
   680                           	callstack 0
   681  000001                     toggle_light@toggletime:
   682                           	callstack 0
   683  000001                     sendCharSerial4@charToSend:
   684                           	callstack 0
   685  000001                     initDCmotorsPWM@PWMperiod:
   686                           	callstack 0
   687  000001                     initDCmotors_parameter@motorL:
   688                           	callstack 0
   689  000001                     ___wmul@multiplier:
   690                           	callstack 0
   691  000001                     fputc@c:
   692                           	callstack 0
   693  000001                     strlen@s:
   694                           	callstack 0
   695  000001                     ___flge@ff1:
   696                           	callstack 0
   697  000001                     ___flneg@f1:
   698                           	callstack 0
   699  000001                     ___fladd@b:
   700                           	callstack 0
   701  000001                     ___xxtofl@val:
   702                           	callstack 0
   703  000001                     ___aodiv@dividend:
   704                           	callstack 0
   705  000001                     ___aomod@dividend:
   706                           	callstack 0
   707                           
   708                           ; 8 bytes @ 0x0
   709  000001                     	ds	1
   710  000002                     ??_I2C_2_Master_Read:
   711  000002                     ??_toggle_light:
   712  000002                     I2C_2_Master_Write@data_byte:
   713                           	callstack 0
   714  000002                     sendStringSerial4@string:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x1
   718  000002                     	ds	1
   719  000003                     color_writetoaddr@value:
   720                           	callstack 0
   721  000003                     I2C_2_Master_Read@ack:
   722                           	callstack 0
   723  000003                     initDCmotors_parameter@motorR:
   724                           	callstack 0
   725  000003                     ___wmul@multiplicand:
   726                           	callstack 0
   727  000003                     fputc@fp:
   728                           	callstack 0
   729  000003                     strlen@a:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x2
   733  000003                     	ds	1
   734  000004                     toggle_light@i:
   735                           	callstack 0
   736  000004                     color_writetoaddr@address:
   737                           	callstack 0
   738  000004                     I2C_2_Master_Read@tmp:
   739                           	callstack 0
   740                           
   741                           ; 1 bytes @ 0x3
   742  000004                     	ds	1
   743  000005                     ??_fputc:
   744  000005                     ??_color_click_init:
   745  000005                     ??___xxtofl:
   746  000005                     ?_color_read_Red:
   747                           	callstack 0
   748  000005                     ?_color_read_Blue:
   749                           	callstack 0
   750  000005                     ?_color_read_Green:
   751                           	callstack 0
   752  000005                     ?_color_read_Clear:
   753                           	callstack 0
   754  000005                     toggle_light@lightnumber:
   755                           	callstack 0
   756  000005                     ___wmul@product:
   757                           	callstack 0
   758  000005                     ___flge@ff2:
   759                           	callstack 0
   760  000005                     ___fladd@a:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x4
   764  000005                     	ds	2
   765  000007                     ??_color_read_Red:
   766  000007                     ??_color_read_Blue:
   767  000007                     ??_color_read_Green:
   768  000007                     ??_color_read_Clear:
   769  000007                     ?___awdiv:
   770                           	callstack 0
   771  000007                     ___awdiv@dividend:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x6
   775  000007                     	ds	2
   776  000009                     ??___fladd:
   777  000009                     ??___flge:
   778  000009                     ___xxtofl@sign:
   779                           	callstack 0
   780  000009                     ___awdiv@divisor:
   781                           	callstack 0
   782  000009                     ___aodiv@divisor:
   783                           	callstack 0
   784  000009                     ___aomod@divisor:
   785                           	callstack 0
   786                           
   787                           ; 8 bytes @ 0x8
   788  000009                     	ds	1
   789  00000A                     ___xxtofl@exp:
   790                           	callstack 0
   791  00000A                     color_read_Red@tmp:
   792                           	callstack 0
   793  00000A                     color_read_Blue@tmp:
   794                           	callstack 0
   795  00000A                     color_read_Green@tmp:
   796                           	callstack 0
   797  00000A                     color_read_Clear@tmp:
   798                           	callstack 0
   799  00000A                     fputs@s:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x9
   803  00000A                     	ds	1
   804  00000B                     ___awdiv@counter:
   805                           	callstack 0
   806  00000B                     ___xxtofl@arg:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0xA
   810  00000B                     	ds	1
   811  00000C                     ___awdiv@sign:
   812                           	callstack 0
   813  00000C                     read_color@m:
   814                           	callstack 0
   815  00000C                     calibrate_white@w:
   816                           	callstack 0
   817  00000C                     fputs@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0xB
   821  00000C                     	ds	1
   822  00000D                     ___fladd@signs:
   823                           	callstack 0
   824  00000D                     ___awdiv@quotient:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0xC
   828  00000D                     	ds	1
   829  00000E                     ??_calibrate_white:
   830  00000E                     ___fladd@aexp:
   831                           	callstack 0
   832  00000E                     fputs@c:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0xD
   836  00000E                     	ds	1
   837  00000F                     ?___fldiv:
   838                           	callstack 0
   839  00000F                     ___fladd@bexp:
   840                           	callstack 0
   841  00000F                     setMotorPWM@m:
   842                           	callstack 0
   843  00000F                     fputs@i:
   844                           	callstack 0
   845  00000F                     ___fldiv@b:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0xE
   849  00000F                     	ds	1
   850  000010                     ___fladd@grs:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0xF
   854  000010                     	ds	1
   855  000011                     ??_setMotorPWM:
   856  000011                     ?_pad:
   857                           	callstack 0
   858  000011                     ?___flsub:
   859                           	callstack 0
   860  000011                     ___aodiv@counter:
   861                           	callstack 0
   862  000011                     ___aomod@counter:
   863                           	callstack 0
   864  000011                     pad@fp:
   865                           	callstack 0
   866  000011                     ___flsub@b:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x10
   870  000011                     	ds	1
   871  000012                     ___aodiv@sign:
   872                           	callstack 0
   873  000012                     ___aomod@sign:
   874                           	callstack 0
   875                           
   876                           ; 1 bytes @ 0x11
   877  000012                     	ds	1
   878  000013                     ?_abs:
   879                           	callstack 0
   880  000013                     pad@buf:
   881                           	callstack 0
   882  000013                     abs@a:
   883                           	callstack 0
   884  000013                     ___fldiv@a:
   885                           	callstack 0
   886  000013                     ___aodiv@quotient:
   887                           	callstack 0
   888                           
   889                           ; 8 bytes @ 0x12
   890  000013                     	ds	2
   891  000015                     ??_abs:
   892  000015                     pad@p:
   893                           	callstack 0
   894  000015                     ___flsub@a:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x14
   898  000015                     	ds	2
   899  000017                     ??___fldiv:
   900  000017                     ??_pad:
   901                           
   902                           ; 1 bytes @ 0x16
   903  000017                     	ds	1
   904  000018                     setMotorPWM@PWMduty:
   905                           	callstack 0
   906  000018                     pad@i:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x17
   910  000018                     	ds	1
   911  000019                     
   912                           ; 1 bytes @ 0x18
   913  000019                     	ds	1
   914  00001A                     stop@mL:
   915                           	callstack 0
   916  00001A                     fullSpeedAhead@mL:
   917                           	callstack 0
   918  00001A                     pad@w:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x19
   922  00001A                     	ds	1
   923  00001B                     ___fldiv@rem:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x1A
   927  00001B                     	ds	1
   928  00001C                     ?_dtoa:
   929                           	callstack 0
   930  00001C                     stop@mR:
   931                           	callstack 0
   932  00001C                     fullSpeedAhead@mR:
   933                           	callstack 0
   934  00001C                     dtoa@fp:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x1B
   938  00001C                     	ds	2
   939  00001E                     ??_stop:
   940  00001E                     ??_fullSpeedAhead:
   941  00001E                     dtoa@d:
   942                           	callstack 0
   943                           
   944                           ; 8 bytes @ 0x1D
   945  00001E                     	ds	1
   946  00001F                     ___fldiv@sign:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x1E
   950  00001F                     	ds	1
   951  000020                     turnLeft@mL:
   952                           	callstack 0
   953  000020                     turnRight@mL:
   954                           	callstack 0
   955  000020                     fullSpeedBack@mL:
   956                           	callstack 0
   957  000020                     ___fldiv@new_exp:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x1F
   961  000020                     	ds	2
   962  000022                     turnLeft@mR:
   963                           	callstack 0
   964  000022                     turnRight@mR:
   965                           	callstack 0
   966  000022                     fullSpeedBack@mR:
   967                           	callstack 0
   968  000022                     ___fldiv@grs:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x21
   972  000022                     	ds	2
   973  000024                     ??_fullSpeedBack:
   974  000024                     turnLeft@angle_left:
   975                           	callstack 0
   976  000024                     turnRight@angle_right:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x23
   980  000024                     	ds	1
   981  000025                     ??_turnLeft:
   982  000025                     ??_turnRight:
   983                           
   984                           ; 1 bytes @ 0x24
   985  000025                     	ds	1
   986  000026                     ??_dtoa:
   987  000026                     ___fldiv@bexp:
   988                           	callstack 0
   989  000026                     turnLeft@delay_180:
   990                           	callstack 0
   991  000026                     turnRight@delay_180:
   992                           	callstack 0
   993  000026                     short_reverse@mL:
   994                           	callstack 0
   995  000026                     reverse_square@mL:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x25
   999  000026                     	ds	1
  1000  000027                     ___fldiv@aexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x26
  1004  000027                     	ds	1
  1005  000028                     ?___flmul:
  1006                           	callstack 0
  1007  000028                     turnLeft@i:
  1008                           	callstack 0
  1009  000028                     turnRight@i:
  1010                           	callstack 0
  1011  000028                     short_reverse@mR:
  1012                           	callstack 0
  1013  000028                     reverse_square@mR:
  1014                           	callstack 0
  1015  000028                     ___flmul@b:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x27
  1019  000028                     	ds	2
  1020  00002A                     ??_short_reverse:
  1021  00002A                     ??_reverse_square:
  1022  00002A                     turnLeft@i_1333:
  1023                           	callstack 0
  1024  00002A                     turnRight@i_1356:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x29
  1028  00002A                     	ds	2
  1029  00002C                     turnLeft@delay:
  1030                           	callstack 0
  1031  00002C                     turnRight@delay:
  1032                           	callstack 0
  1033  00002C                     ___flmul@a:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x2B
  1037  00002C                     	ds	2
  1038  00002E                     _dtoa$2869:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x2D
  1042  00002E                     	ds	2
  1043  000030                     ??___flmul:
  1044  000030                     dtoa@p:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x2F
  1048  000030                     	ds	2
  1049  000032                     dtoa@w:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x31
  1053  000032                     	ds	2
  1054  000034                     ___flmul@sign:
  1055                           	callstack 0
  1056  000034                     dtoa@s:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x33
  1060  000034                     	ds	1
  1061  000035                     ___flmul@grs:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x34
  1065  000035                     	ds	1
  1066  000036                     dtoa@n:
  1067                           	callstack 0
  1068                           
  1069                           ; 8 bytes @ 0x35
  1070  000036                     	ds	3
  1071  000039                     ___flmul@aexp:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x38
  1075  000039                     	ds	1
  1076  00003A                     ___flmul@bexp:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0x39
  1080  00003A                     	ds	1
  1081  00003B                     ___flmul@prod:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0x3A
  1085  00003B                     	ds	3
  1086  00003E                     dtoa@i:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x3D
  1090  00003E                     	ds	1
  1091  00003F                     ___flmul@temp:
  1092                           	callstack 0
  1093                           
  1094                           ; 2 bytes @ 0x3E
  1095  00003F                     	ds	1
  1096  000040                     ?_vfpfcnvrt:
  1097                           	callstack 0
  1098  000040                     vfpfcnvrt@fp:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x3F
  1102  000040                     	ds	1
  1103  000041                     ?_roundf:
  1104                           	callstack 0
  1105  000041                     roundf@x:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x40
  1109  000041                     	ds	1
  1110  000042                     vfpfcnvrt@fmt:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x41
  1114  000042                     	ds	2
  1115  000044                     vfpfcnvrt@ap:
  1116                           	callstack 0
  1117                           
  1118                           ; 2 bytes @ 0x43
  1119  000044                     	ds	1
  1120  000045                     ??_roundf:
  1121                           
  1122                           ; 1 bytes @ 0x44
  1123  000045                     	ds	1
  1124  000046                     ??_vfpfcnvrt:
  1125                           
  1126                           ; 1 bytes @ 0x45
  1127  000046                     	ds	2
  1128  000048                     vfpfcnvrt@ll:
  1129                           	callstack 0
  1130                           
  1131                           ; 8 bytes @ 0x47
  1132  000048                     	ds	1
  1133  000049                     _roundf$3237:
  1134                           	callstack 0
  1135                           
  1136                           ; 4 bytes @ 0x48
  1137  000049                     	ds	4
  1138  00004D                     roundf@e:
  1139                           	callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x4C
  1142  00004D                     	ds	2
  1143  00004F                     _roundf$3236:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x4E
  1147  00004F                     	ds	1
  1148  000050                     ?_vfprintf:
  1149                           	callstack 0
  1150  000050                     vfprintf@fp:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x4F
  1154  000050                     	ds	2
  1155  000052                     vfprintf@fmt:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x51
  1159  000052                     	ds	1
  1160  000053                     roundf@u:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x52
  1164  000053                     	ds	1
  1165  000054                     vfprintf@ap:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x53
  1169  000054                     	ds	2
  1170  000056                     vfprintf@cfmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x55
  1174  000056                     	ds	1
  1175  000057                     roundf@y:
  1176                           	callstack 0
  1177                           
  1178                           ; 4 bytes @ 0x56
  1179  000057                     	ds	1
  1180  000058                     color_display@m:
  1181                           	callstack 0
  1182  000058                     goback@mL:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x57
  1186  000058                     	ds	2
  1187  00005A                     color_data_collection@m:
  1188                           	callstack 0
  1189  00005A                     goback@mR:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x59
  1193  00005A                     	ds	1
  1194  00005B                     ?___fltol:
  1195                           	callstack 0
  1196  00005B                     ___fltol@f1:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x5A
  1200  00005B                     	ds	1
  1201  00005C                     ??_goback:
  1202  00005C                     ??_color_data_collection:
  1203                           
  1204                           ; 1 bytes @ 0x5B
  1205  00005C                     	ds	2
  1206  00005E                     action@color:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x5D
  1210  00005E                     	ds	1
  1211  00005F                     
  1212                           ; 1 bytes @ 0x5E
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 29 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  white          28   22[BANK1 ] struct white_card
  1223 ;;  motorR         10   60[BANK1 ] struct DC_motor
  1224 ;;  motorL         10   50[BANK1 ] struct DC_motor
  1225 ;;  rgb             8   14[BANK1 ] struct color_rgb
  1226 ;;  amb             8    0        struct color_rgb
  1227 ;;  amb_light       2    0        unsigned int 
  1228 ;;  stop_signal     1    0        unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;Total ram usage:       56 bytes
  1243 ;; Hardware stack levels required when called: 12
  1244 ;; This function calls:
  1245 ;;		_I2C_2_Master_Init
  1246 ;;		_Interrupts_init
  1247 ;;		_Timer0_init
  1248 ;;		_action
  1249 ;;		_amb_light_measure
  1250 ;;		_buggylight_init
  1251 ;;		_calibrate_white
  1252 ;;		_color_click_init
  1253 ;;		_color_predict
  1254 ;;		_detect_color
  1255 ;;		_distance_measure
  1256 ;;		_fullSpeedAhead
  1257 ;;		_initDCmotorsPWM
  1258 ;;		_initDCmotors_parameter
  1259 ;;		_initUSART4
  1260 ;;		_pin_init
  1261 ;;		_stop
  1262 ;;		_test_function
  1263 ;;		_verify_color
  1264 ;; This function is called by:
  1265 ;;		Startup code after reset
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text0
  1270  00511E                     __ptext0:
  1271                           	callstack 0
  1272  00511E                     _main:
  1273                           	callstack 19
  1274  00511E                     
  1275                           ;main.c: 32:     I2C_2_Master_Init();
  1276  00511E  ECB2  F02B         	call	_I2C_2_Master_Init	;wreg free
  1277  005122                     
  1278                           ;main.c: 33:     color_click_init();
  1279  005122  EC69  F02B         	call	_color_click_init	;wreg free
  1280  005126                     
  1281                           ;main.c: 34:     initDCmotorsPWM(199);
  1282  005126  0E00               	movlw	0
  1283  005128  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1284  00512A  0EC7               	movlw	199
  1285  00512C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1286  00512E  EC75  F02A         	call	_initDCmotorsPWM	;wreg free
  1287  005132                     
  1288                           ;main.c: 35:     buggylight_init();
  1289  005132  EC88  F02C         	call	_buggylight_init	;wreg free
  1290  005136                     
  1291                           ;main.c: 36:     initUSART4();
  1292  005136  EC5E  F02C         	call	_initUSART4	;wreg free
  1293  00513A                     
  1294                           ;main.c: 37:     Timer0_init();
  1295  00513A  EC6D  F02C         	call	_Timer0_init	;wreg free
  1296  00513E                     
  1297                           ;main.c: 38:     Interrupts_init();
  1298  00513E  EC99  F02C         	call	_Interrupts_init	;wreg free
  1299  005142                     
  1300                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1301  005142  EC3E  F02C         	call	_pin_init	;wreg free
  1302  005146                     
  1303                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1304  005146  0EBA               	movlw	low main@motorL
  1305  005148  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1306  00514A  0E01               	movlw	high main@motorL
  1307  00514C  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1308  00514E  0EC4               	movlw	low main@motorR
  1309  005150  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1310  005152  0E01               	movlw	high main@motorR
  1311  005154  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1312  005156  EC14  F025         	call	_initDCmotors_parameter	;wreg free
  1313  00515A                     l5472:
  1314                           
  1315                           ;main.c: 61:             test_function(2, &rgb, &white, &motorL, &motorR);
  1316  00515A  0E96               	movlw	low main@rgb
  1317  00515C  0101               	movlb	1	; () banked
  1318  00515E  6F88               	movwf	test_function@m& (0+255),b
  1319  005160  0E01               	movlw	high main@rgb
  1320  005162  6F89               	movwf	(test_function@m+1)& (0+255),b
  1321  005164  0E9E               	movlw	low main@white
  1322  005166  6F8A               	movwf	test_function@w& (0+255),b
  1323  005168  0E01               	movlw	high main@white
  1324  00516A  6F8B               	movwf	(test_function@w+1)& (0+255),b
  1325  00516C  0EBA               	movlw	low main@motorL
  1326  00516E  6F8C               	movwf	test_function@mL& (0+255),b
  1327  005170  0E01               	movlw	high main@motorL
  1328  005172  6F8D               	movwf	(test_function@mL+1)& (0+255),b
  1329  005174  0EC4               	movlw	low main@motorR
  1330  005176  6F8E               	movwf	test_function@mR& (0+255),b
  1331  005178  0E01               	movlw	high main@motorR
  1332  00517A  6F8F               	movwf	(test_function@mR+1)& (0+255),b
  1333  00517C  0E02               	movlw	2
  1334  00517E  EC13  F020         	call	_test_function
  1335  005182  EFAD  F028         	goto	l5472
  1336  005186  EF14  F000         	goto	start
  1337  00518A                     __end_of_main:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function _verify_color *****************
  1341 ;; Defined at:
  1342 ;;		line 363 in file "color.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  color           1    wreg     unsigned char 
  1345 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1346 ;;		 -> main@rgb(8), 
  1347 ;;  w               2    2[BANK1 ] PTR struct white_card
  1348 ;;		 -> main@white(28), 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  color           1    6[BANK1 ] unsigned char 
  1351 ;;  color2          2    4[BANK1 ] unsigned int 
  1352 ;;  color3          2    0        unsigned int 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      unsigned char 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1362 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;Total ram usage:        9 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 10
  1369 ;; This function calls:
  1370 ;;		_detect_color
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text1
  1377  005024                     __ptext1:
  1378                           	callstack 0
  1379  005024                     _verify_color:
  1380                           	callstack 20
  1381                           
  1382                           ;incstack = 0
  1383                           ;verify_color@color stored from wreg
  1384  005024  0101               	movlb	1	; () banked
  1385  005026  6F8E               	movwf	verify_color@color& (0+255),b
  1386  005028                     
  1387                           ;color.c: 363: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 364: {;color.c: 365:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1388  005028  0E05               	movlw	5
  1389  00502A  0100               	movlb	0	; () banked
  1390  00502C  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1391  00502E  0E0F               	movlw	15
  1392  005030  6FFE               	movwf	??_verify_color& (0+255),b
  1393  005032  0EF1               	movlw	241
  1394  005034                     u5527:
  1395  005034  2EE8               	decfsz	wreg,f,c
  1396  005036  D7FE               	bra	u5527
  1397  005038  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1398  00503A  D7FC               	bra	u5527
  1399  00503C  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1400  00503E  D7FA               	bra	u5527
  1401  005040                     
  1402                           ;color.c: 366:     unsigned int color2, color3;;color.c: 367:     color2 = detect_color(
      +                          m,w);
  1403  005040  C188  F079         	movff	verify_color@m,detect_color@m
  1404  005044  C189  F07A         	movff	verify_color@m+1,detect_color@m+1
  1405  005048  C18A  F07B         	movff	verify_color@w,detect_color@w
  1406  00504C  C18B  F07C         	movff	verify_color@w+1,detect_color@w+1
  1407  005050  EC0A  F007         	call	_detect_color	;wreg free
  1408  005054  0100               	movlb	0	; () banked
  1409  005056  6FFE               	movwf	??_verify_color& (0+255),b
  1410  005058  51FE               	movf	??_verify_color& (0+255),w,b
  1411  00505A  0101               	movlb	1	; () banked
  1412  00505C  6F8C               	movwf	verify_color@color2& (0+255),b
  1413  00505E  6B8D               	clrf	(verify_color@color2+1)& (0+255),b
  1414  005060                     
  1415                           ; BSR set to: 1
  1416                           ;color.c: 368:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1417  005060  0E05               	movlw	5
  1418  005062  0100               	movlb	0	; () banked
  1419  005064  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1420  005066  0E0F               	movlw	15
  1421  005068  6FFE               	movwf	??_verify_color& (0+255),b
  1422  00506A  0EF1               	movlw	241
  1423  00506C                     u5537:
  1424  00506C  2EE8               	decfsz	wreg,f,c
  1425  00506E  D7FE               	bra	u5537
  1426  005070  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1427  005072  D7FC               	bra	u5537
  1428  005074  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1429  005076  D7FA               	bra	u5537
  1430  005078                     
  1431                           ;color.c: 370:     if (color == color2){return color;}
  1432  005078  0101               	movlb	1	; () banked
  1433  00507A  518E               	movf	verify_color@color& (0+255),w,b
  1434  00507C  0100               	movlb	0	; () banked
  1435  00507E  6FFE               	movwf	??_verify_color& (0+255),b
  1436  005080  6BFF               	clrf	(??_verify_color+1)& (0+255),b
  1437  005082  0101               	movlb	1	; () banked
  1438  005084  518C               	movf	verify_color@color2& (0+255),w,b
  1439  005086  0100               	movlb	0	; () banked
  1440  005088  19FE               	xorwf	??_verify_color& (0+255),w,b
  1441  00508A  E109               	bnz	u5201
  1442  00508C  0101               	movlb	1	; () banked
  1443  00508E  518D               	movf	(verify_color@color2+1)& (0+255),w,b
  1444  005090  0100               	movlb	0	; () banked
  1445  005092  19FF               	xorwf	(??_verify_color+1)& (0+255),w,b
  1446  005094  A4D8               	btfss	status,2,c
  1447  005096  EF4F  F028         	goto	u5201
  1448  00509A  EF51  F028         	goto	u5200
  1449  00509E                     u5201:
  1450  00509E  EF55  F028         	goto	l5226
  1451  0050A2                     u5200:
  1452  0050A2                     
  1453                           ; BSR set to: 0
  1454  0050A2  0101               	movlb	1	; () banked
  1455  0050A4  518E               	movf	verify_color@color& (0+255),w,b
  1456  0050A6  EF56  F028         	goto	l164
  1457  0050AA                     l5226:
  1458                           
  1459                           ; BSR set to: 0
  1460                           ;color.c: 373:         return color;}
  1461  0050AA  0E00               	movlw	0
  1462  0050AC                     l164:
  1463  0050AC  0012               	return		;funcret
  1464  0050AE                     __end_of_verify_color:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _test_function *****************
  1468 ;; Defined at:
  1469 ;;		line 16 in file "test_and_calibration.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  test_code       1    wreg     unsigned char 
  1472 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1473 ;;		 -> main@rgb(8), 
  1474 ;;  w               2    2[BANK1 ] PTR struct white_card
  1475 ;;		 -> main@white(28), 
  1476 ;;  mL              2    4[BANK1 ] PTR struct DC_motor
  1477 ;;		 -> main@motorL(10), 
  1478 ;;  mR              2    6[BANK1 ] PTR struct DC_motor
  1479 ;;		 -> main@motorR(10), 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  test_code       1   13[BANK1 ] unsigned char 
  1482 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1483 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  1484 ;;  color           1   11[BANK1 ] unsigned char 
  1485 ;;  complete        1   10[BANK1 ] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:       16 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 11
  1502 ;; This function calls:
  1503 ;;		_LED_C
  1504 ;;		_amb_light_measure
  1505 ;;		_calibrate_white
  1506 ;;		_color_data_collection
  1507 ;;		_color_display
  1508 ;;		_color_predict
  1509 ;;		_detect_color
  1510 ;;		_distance_measure
  1511 ;;		_fullSpeedAhead
  1512 ;;		_read_color
  1513 ;;		_stop
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text2
  1520  004026                     __ptext2:
  1521                           	callstack 0
  1522  004026                     _test_function:
  1523                           	callstack 19
  1524                           
  1525                           ;incstack = 0
  1526                           ;test_function@test_code stored from wreg
  1527  004026  0101               	movlb	1	; () banked
  1528  004028  6F95               	movwf	test_function@test_code& (0+255),b
  1529  00402A                     
  1530                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1531  00402A  0E00               	movlw	0
  1532  00402C  0101               	movlb	1	; () banked
  1533  00402E  6F92               	movwf	test_function@complete& (0+255),b
  1534                           
  1535                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1536  004030  0E00               	movlw	0
  1537  004032  6F94               	movwf	test_function@stop_signal& (0+255),b
  1538                           
  1539                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1540  004034  0E00               	movlw	0
  1541  004036  6F91               	movwf	(test_function@amb_light+1)& (0+255),b
  1542  004038  0E00               	movlw	0
  1543  00403A  6F90               	movwf	test_function@amb_light& (0+255),b
  1544  00403C                     
  1545                           ; BSR set to: 1
  1546                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1547  00403C  0E02               	movlw	2
  1548  00403E  1995               	xorwf	test_function@test_code& (0+255),w,b
  1549  004040  A4D8               	btfss	status,2,c
  1550  004042  EF25  F020         	goto	u5231
  1551  004046  EF27  F020         	goto	u5230
  1552  00404A                     u5231:
  1553  00404A  EF2D  F020         	goto	l5286
  1554  00404E                     u5230:
  1555  00404E                     
  1556                           ; BSR set to: 1
  1557  00404E  C18A  F00C         	movff	test_function@w,calibrate_white@w
  1558  004052  C18B  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1559  004056  EC95  F01B         	call	_calibrate_white	;wreg free
  1560  00405A                     l5286:
  1561                           
  1562                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1563  00405A  0E04               	movlw	4
  1564  00405C  0101               	movlb	1	; () banked
  1565  00405E  1995               	xorwf	test_function@test_code& (0+255),w,b
  1566  004060  A4D8               	btfss	status,2,c
  1567  004062  EF35  F020         	goto	u5241
  1568  004066  EF37  F020         	goto	u5240
  1569  00406A                     u5241:
  1570  00406A  EF41  F020         	goto	l5290
  1571  00406E                     u5240:
  1572  00406E                     
  1573                           ; BSR set to: 1
  1574  00406E  C188  F06A         	movff	test_function@m,amb_light_measure@amb
  1575  004072  C189  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1576  004076  EC7A  F023         	call	_amb_light_measure	;wreg free
  1577  00407A  C06A  F190         	movff	?_amb_light_measure,test_function@amb_light
  1578  00407E  C06B  F191         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1579  004082                     l5290:
  1580                           
  1581                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1582  004082  0101               	movlb	1	; () banked
  1583  004084  0595               	decf	test_function@test_code& (0+255),w,b
  1584  004086  A4D8               	btfss	status,2,c
  1585  004088  EF48  F020         	goto	u5251
  1586  00408C  EF4A  F020         	goto	u5250
  1587  004090                     u5251:
  1588  004090  EF58  F020         	goto	l5298
  1589  004094                     u5250:
  1590  004094                     
  1591                           ; BSR set to: 1
  1592                           ;test_and_calibration.c: 29:             LED_C();
  1593  004094  EC2E  F02C         	call	_LED_C	;wreg free
  1594  004098                     
  1595                           ;test_and_calibration.c: 30:             read_color(m);
  1596  004098  C188  F00C         	movff	test_function@m,read_color@m
  1597  00409C  C189  F00D         	movff	test_function@m+1,read_color@m+1
  1598  0040A0  ECF6  F028         	call	_read_color	;wreg free
  1599  0040A4                     
  1600                           ;test_and_calibration.c: 31:             color_display(m);
  1601  0040A4  C188  F058         	movff	test_function@m,color_display@m
  1602  0040A8  C189  F059         	movff	test_function@m+1,color_display@m+1
  1603  0040AC  EC57  F028         	call	_color_display	;wreg free
  1604  0040B0                     l5298:
  1605                           
  1606                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1607  0040B0  0E02               	movlw	2
  1608  0040B2  0101               	movlb	1	; () banked
  1609  0040B4  1995               	xorwf	test_function@test_code& (0+255),w,b
  1610  0040B6  A4D8               	btfss	status,2,c
  1611  0040B8  EF60  F020         	goto	u5261
  1612  0040BC  EF62  F020         	goto	u5260
  1613  0040C0                     u5261:
  1614  0040C0  EF71  F020         	goto	l5304
  1615  0040C4                     u5260:
  1616  0040C4                     
  1617                           ; BSR set to: 1
  1618                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1619  0040C4  C188  F079         	movff	test_function@m,detect_color@m
  1620  0040C8  C189  F07A         	movff	test_function@m+1,detect_color@m+1
  1621  0040CC  C18A  F07B         	movff	test_function@w,detect_color@w
  1622  0040D0  C18B  F07C         	movff	test_function@w+1,detect_color@w+1
  1623  0040D4  EC0A  F007         	call	_detect_color	;wreg free
  1624  0040D8  0101               	movlb	1	; () banked
  1625  0040DA  6F93               	movwf	test_function@color& (0+255),b
  1626  0040DC                     
  1627                           ; BSR set to: 1
  1628                           ;test_and_calibration.c: 37:             color_predict(color);
  1629  0040DC  5193               	movf	test_function@color& (0+255),w,b
  1630  0040DE  EC9B  F02B         	call	_color_predict
  1631  0040E2                     l5304:
  1632                           
  1633                           ;test_and_calibration.c: 40:         if (test_code == 3){
  1634  0040E2  0E03               	movlw	3
  1635  0040E4  0101               	movlb	1	; () banked
  1636  0040E6  1995               	xorwf	test_function@test_code& (0+255),w,b
  1637  0040E8  A4D8               	btfss	status,2,c
  1638  0040EA  EF79  F020         	goto	u5271
  1639  0040EE  EF7B  F020         	goto	u5270
  1640  0040F2                     u5271:
  1641  0040F2  EF8E  F020         	goto	l5314
  1642  0040F6                     u5270:
  1643  0040F6  EF86  F020         	goto	l5312
  1644  0040FA                     l5308:
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  1648  0040FA  C188  F05A         	movff	test_function@m,color_data_collection@m
  1649  0040FE  C189  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1650  004102  EC84  F01D         	call	_color_data_collection	;wreg free
  1651  004106                     
  1652                           ;test_and_calibration.c: 43:                 complete = 1;
  1653  004106  0E01               	movlw	1
  1654  004108  0101               	movlb	1	; () banked
  1655  00410A  6F92               	movwf	test_function@complete& (0+255),b
  1656  00410C                     l5312:
  1657                           
  1658                           ; BSR set to: 1
  1659                           ;test_and_calibration.c: 41:             while (complete == 0){
  1660  00410C  5192               	movf	test_function@complete& (0+255),w,b
  1661  00410E  B4D8               	btfsc	status,2,c
  1662  004110  EF8C  F020         	goto	u5281
  1663  004114  EF8E  F020         	goto	u5280
  1664  004118                     u5281:
  1665  004118  EF7D  F020         	goto	l5308
  1666  00411C                     u5280:
  1667  00411C                     l5314:
  1668                           
  1669                           ; BSR set to: 1
  1670                           ;test_and_calibration.c: 47:         if (test_code == 4){
  1671  00411C  0E04               	movlw	4
  1672  00411E  1995               	xorwf	test_function@test_code& (0+255),w,b
  1673  004120  A4D8               	btfss	status,2,c
  1674  004122  EF95  F020         	goto	u5291
  1675  004126  EF97  F020         	goto	u5290
  1676  00412A                     u5291:
  1677  00412A  EF41  F020         	goto	l5290
  1678  00412E                     u5290:
  1679  00412E  EFB3  F020         	goto	l5322
  1680  004132                     l5318:
  1681                           
  1682                           ; BSR set to: 1
  1683                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  1684  004132  C18C  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1685  004136  C18D  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1686  00413A  C18E  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1687  00413E  C18F  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1688  004142  ECC8  F027         	call	_fullSpeedAhead	;wreg free
  1689  004146                     
  1690                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1691  004146  C18C  F06A         	movff	test_function@mL,distance_measure@mL
  1692  00414A  C18D  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1693  00414E  C18E  F06C         	movff	test_function@mR,distance_measure@mR
  1694  004152  C18F  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1695  004156  C190  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1696  00415A  C191  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1697  00415E  ECE2  F025         	call	_distance_measure	;wreg free
  1698  004162  0101               	movlb	1	; () banked
  1699  004164  6F94               	movwf	test_function@stop_signal& (0+255),b
  1700  004166                     l5322:
  1701                           
  1702                           ; BSR set to: 1
  1703                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  1704  004166  5194               	movf	test_function@stop_signal& (0+255),w,b
  1705  004168  B4D8               	btfsc	status,2,c
  1706  00416A  EFB9  F020         	goto	u5301
  1707  00416E  EFBB  F020         	goto	u5300
  1708  004172                     u5301:
  1709  004172  EF99  F020         	goto	l5318
  1710  004176                     u5300:
  1711  004176                     
  1712                           ; BSR set to: 1
  1713                           ;test_and_calibration.c: 52:             stop(mL, mR);
  1714  004176  C18C  F01A         	movff	test_function@mL,stop@mL
  1715  00417A  C18D  F01B         	movff	test_function@mL+1,stop@mL+1
  1716  00417E  C18E  F01C         	movff	test_function@mR,stop@mR
  1717  004182  C18F  F01D         	movff	test_function@mR+1,stop@mR+1
  1718  004186  EC6A  F027         	call	_stop	;wreg free
  1719  00418A                     
  1720                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1721  00418A  0E52               	movlw	82
  1722  00418C  0100               	movlb	0	; () banked
  1723  00418E  6FFF               	movwf	(??_test_function+1)& (0+255),b
  1724  004190  0E2B               	movlw	43
  1725  004192  6FFE               	movwf	??_test_function& (0+255),b
  1726  004194  0E00               	movlw	0
  1727  004196                     u5547:
  1728  004196  2EE8               	decfsz	wreg,f,c
  1729  004198  D7FE               	bra	u5547
  1730  00419A  2FFE               	decfsz	??_test_function& (0+255),f,b
  1731  00419C  D7FC               	bra	u5547
  1732  00419E  2FFF               	decfsz	(??_test_function+1)& (0+255),f,b
  1733  0041A0  D7FA               	bra	u5547
  1734  0041A2  F000               	nop	
  1735  0041A4                     
  1736                           ;test_and_calibration.c: 54:             stop_signal = 0;
  1737  0041A4  0E00               	movlw	0
  1738  0041A6  0101               	movlb	1	; () banked
  1739  0041A8  6F94               	movwf	test_function@stop_signal& (0+255),b
  1740  0041AA  EF41  F020         	goto	l5290
  1741  0041AE  0012               	return		;funcret
  1742  0041B0                     __end_of_test_function:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _distance_measure *****************
  1746 ;; Defined at:
  1747 ;;		line 399 in file "color.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  1750 ;;		 -> main@motorL(10), 
  1751 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  1752 ;;		 -> main@motorR(10), 
  1753 ;;  amb_light       2   14[BANK0 ] unsigned int 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  threshold       2   26[BANK0 ] unsigned int 
  1756 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  1757 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  1758 ;;  stop            1   28[BANK0 ] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      unsigned char 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1768 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;Total ram usage:       19 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 5
  1775 ;; This function calls:
  1776 ;;		_LED_C
  1777 ;;		___flmul
  1778 ;;		___xxtofl
  1779 ;;		_color_read_Clear
  1780 ;;		_color_read_Green
  1781 ;;		_lroundf
  1782 ;; This function is called by:
  1783 ;;		_main
  1784 ;;		_test_function
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text3
  1789  004BC4                     __ptext3:
  1790                           	callstack 0
  1791  004BC4                     _distance_measure:
  1792                           	callstack 24
  1793  004BC4  0E00               	movlw	0
  1794  004BC6  0100               	movlb	0	; () banked
  1795  004BC8  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  1796  004BCA  0E00               	movlw	0
  1797  004BCC  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  1798                           
  1799                           ;color.c: 402:     unsigned char stop = 0;
  1800  004BCE  0E00               	movlw	0
  1801  004BD0  6F7C               	movwf	distance_measure@stop& (0+255),b
  1802                           
  1803                           ;color.c: 403:     unsigned int threshold = 0;
  1804  004BD2  0E00               	movlw	0
  1805  004BD4  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  1806  004BD6  0E00               	movlw	0
  1807  004BD8  6F7A               	movwf	distance_measure@threshold& (0+255),b
  1808  004BDA                     
  1809                           ; BSR set to: 0
  1810                           ;color.c: 404:     LED_C();
  1811  004BDA  EC2E  F02C         	call	_LED_C	;wreg free
  1812  004BDE                     
  1813                           ;color.c: 405:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1814  004BDE  0E09               	movlw	9
  1815  004BE0  0100               	movlb	0	; () banked
  1816  004BE2  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  1817  004BE4  0E1E               	movlw	30
  1818  004BE6  6F70               	movwf	??_distance_measure& (0+255),b
  1819  004BE8  0EE4               	movlw	228
  1820  004BEA                     u5557:
  1821  004BEA  2EE8               	decfsz	wreg,f,c
  1822  004BEC  D7FE               	bra	u5557
  1823  004BEE  2F70               	decfsz	??_distance_measure& (0+255),f,b
  1824  004BF0  D7FC               	bra	u5557
  1825  004BF2  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  1826  004BF4  D7FA               	bra	u5557
  1827  004BF6  F000               	nop	
  1828  004BF8                     
  1829                           ;color.c: 406:     CC_amb = color_read_Clear();
  1830  004BF8  ECC6  F029         	call	_color_read_Clear	;wreg free
  1831  004BFC  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  1832  004C00  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  1833  004C04  EC76  F029         	call	_color_read_Green	;wreg free
  1834  004C08                     
  1835                           ;color.c: 408:     threshold = lroundf((float)amb_light * 1.05);
  1836  004C08  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  1837  004C0C  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  1838  004C10  6A03               	clrf	(___xxtofl@val+2)^0,c
  1839  004C12  6A04               	clrf	(___xxtofl@val+3)^0,c
  1840  004C14  0E00               	movlw	0
  1841  004C16  EC5F  F01E         	call	___xxtofl
  1842  004C1A  C001  F028         	movff	?___xxtofl,___flmul@b
  1843  004C1E  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  1844  004C22  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  1845  004C26  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  1846  004C2A  0E66               	movlw	102
  1847  004C2C  6E2C               	movwf	___flmul@a^0,c
  1848  004C2E  0E66               	movlw	102
  1849  004C30  6E2D               	movwf	(___flmul@a+1)^0,c
  1850  004C32  0E86               	movlw	134
  1851  004C34  6E2E               	movwf	(___flmul@a+2)^0,c
  1852  004C36  0E3F               	movlw	63
  1853  004C38  6E2F               	movwf	(___flmul@a+3)^0,c
  1854  004C3A  EC48  F010         	call	___flmul	;wreg free
  1855  004C3E  C028  F074         	movff	?___flmul,_distance_measure$3235
  1856  004C42  C029  F075         	movff	?___flmul+1,_distance_measure$3235+1
  1857  004C46  C02A  F076         	movff	?___flmul+2,_distance_measure$3235+2
  1858  004C4A  C02B  F077         	movff	?___flmul+3,_distance_measure$3235+3
  1859  004C4E                     
  1860                           ;color.c: 408:     threshold = lroundf((float)amb_light * 1.05);
  1861  004C4E  C074  F066         	movff	_distance_measure$3235,lroundf@x
  1862  004C52  C075  F067         	movff	_distance_measure$3235+1,lroundf@x+1
  1863  004C56  C076  F068         	movff	_distance_measure$3235+2,lroundf@x+2
  1864  004C5A  C077  F069         	movff	_distance_measure$3235+3,lroundf@x+3
  1865  004C5E  EC15  F02B         	call	_lroundf	;wreg free
  1866  004C62  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  1867  004C66  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  1868  004C6A                     
  1869                           ;color.c: 411:     if (CC_amb >= threshold){stop = 1;}
  1870  004C6A  0100               	movlb	0	; () banked
  1871  004C6C  517A               	movf	distance_measure@threshold& (0+255),w,b
  1872  004C6E  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  1873  004C70  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  1874  004C72  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  1875  004C74  A0D8               	btfss	status,0,c
  1876  004C76  EF3F  F026         	goto	u5101
  1877  004C7A  EF41  F026         	goto	u5100
  1878  004C7E                     u5101:
  1879  004C7E  EF43  F026         	goto	l171
  1880  004C82                     u5100:
  1881  004C82                     
  1882                           ; BSR set to: 0
  1883  004C82  0E01               	movlw	1
  1884  004C84  6F7C               	movwf	distance_measure@stop& (0+255),b
  1885  004C86                     l171:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;color.c: 412:     return stop;
  1889  004C86  517C               	movf	distance_measure@stop& (0+255),w,b
  1890  004C88                     
  1891                           ; BSR set to: 0
  1892  004C88  0012               	return		;funcret
  1893  004C8A                     __end_of_distance_measure:
  1894                           	callstack 0
  1895                           
  1896 ;; *************** function _detect_color *****************
  1897 ;; Defined at:
  1898 ;;		line 287 in file "color.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  1901 ;;		 -> main@rgb(8), 
  1902 ;;  w               2   27[BANK0 ] PTR struct white_card
  1903 ;;		 -> main@white(28), 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  buf           100   33[BANK0 ] unsigned char [100]
  1906 ;;  BR              2  152[BANK0 ] unsigned int 
  1907 ;;  BG              2  150[BANK0 ] unsigned int 
  1908 ;;  BB              2  148[BANK0 ] unsigned int 
  1909 ;;  RR              2  145[BANK0 ] unsigned int 
  1910 ;;  GG              2  143[BANK0 ] unsigned int 
  1911 ;;  GR              2  141[BANK0 ] unsigned int 
  1912 ;;  GB              2  139[BANK0 ] unsigned int 
  1913 ;;  RB              2  137[BANK0 ] unsigned int 
  1914 ;;  RG              2  135[BANK0 ] unsigned int 
  1915 ;;  BC              2  133[BANK0 ] unsigned int 
  1916 ;;  color           1  147[BANK0 ] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      unsigned char 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1926 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Locals:         0     125       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Totals:         0     133       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;Total ram usage:      133 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 9
  1933 ;; This function calls:
  1934 ;;		_LED_B
  1935 ;;		_LED_G
  1936 ;;		_LED_R
  1937 ;;		___fldiv
  1938 ;;		___flmul
  1939 ;;		___wmul
  1940 ;;		___xxtofl
  1941 ;;		_compare
  1942 ;;		_lroundf
  1943 ;;		_read_color
  1944 ;;		_sendStringSerial4
  1945 ;;		_sprintf
  1946 ;;		_toggle_light
  1947 ;; This function is called by:
  1948 ;;		_verify_color
  1949 ;;		_main
  1950 ;;		_test_function
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text4
  1955  000E14                     __ptext4:
  1956                           	callstack 0
  1957  000E14                     _detect_color:
  1958                           	callstack 20
  1959  000E14  0E00               	movlw	0
  1960  000E16  0100               	movlb	0	; () banked
  1961  000E18  6FE8               	movwf	(detect_color@RG+1)& (0+255),b
  1962  000E1A  0E00               	movlw	0
  1963  000E1C  6FE7               	movwf	detect_color@RG& (0+255),b
  1964  000E1E  0E00               	movlw	0
  1965  000E20  6FEA               	movwf	(detect_color@RB+1)& (0+255),b
  1966  000E22  0E00               	movlw	0
  1967  000E24  6FE9               	movwf	detect_color@RB& (0+255),b
  1968  000E26  0E00               	movlw	0
  1969  000E28  6FEE               	movwf	(detect_color@GR+1)& (0+255),b
  1970  000E2A  0E00               	movlw	0
  1971  000E2C  6FED               	movwf	detect_color@GR& (0+255),b
  1972  000E2E  0E00               	movlw	0
  1973  000E30  6FF0               	movwf	(detect_color@GG+1)& (0+255),b
  1974  000E32  0E00               	movlw	0
  1975  000E34  6FEF               	movwf	detect_color@GG& (0+255),b
  1976  000E36  0E00               	movlw	0
  1977  000E38  6FEC               	movwf	(detect_color@GB+1)& (0+255),b
  1978  000E3A  0E00               	movlw	0
  1979  000E3C  6FEB               	movwf	detect_color@GB& (0+255),b
  1980  000E3E  0E00               	movlw	0
  1981  000E40  6FF9               	movwf	(detect_color@BR+1)& (0+255),b
  1982  000E42  0E00               	movlw	0
  1983  000E44  6FF8               	movwf	detect_color@BR& (0+255),b
  1984  000E46  0E00               	movlw	0
  1985  000E48  6FF7               	movwf	(detect_color@BG+1)& (0+255),b
  1986  000E4A  0E00               	movlw	0
  1987  000E4C  6FF6               	movwf	detect_color@BG& (0+255),b
  1988  000E4E  0E00               	movlw	0
  1989  000E50  6FF5               	movwf	(detect_color@BB+1)& (0+255),b
  1990  000E52  0E00               	movlw	0
  1991  000E54  6FF4               	movwf	detect_color@BB& (0+255),b
  1992  000E56  0E00               	movlw	0
  1993  000E58  6FE6               	movwf	(detect_color@BC+1)& (0+255),b
  1994  000E5A  0E00               	movlw	0
  1995  000E5C  6FE5               	movwf	detect_color@BC& (0+255),b
  1996                           
  1997                           ;color.c: 294:     unsigned char color = 0;
  1998  000E5E  0E00               	movlw	0
  1999  000E60  6FF3               	movwf	detect_color@color& (0+255),b
  2000  000E62                     
  2001                           ; BSR set to: 0
  2002                           ;color.c: 296:     LED_R();
  2003  000E62  ECEE  F02B         	call	_LED_R	;wreg free
  2004  000E66                     
  2005                           ;color.c: 297:     read_color(m);
  2006  000E66  C079  F00C         	movff	detect_color@m,read_color@m
  2007  000E6A  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  2008  000E6E  ECF6  F028         	call	_read_color	;wreg free
  2009  000E72                     
  2010                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2011  000E72  C07B  FFD9         	movff	detect_color@w,fsr2l
  2012  000E76  C07C  FFDA         	movff	detect_color@w+1,fsr2h
  2013  000E7A  CFDE F07D          	movff	postinc2,??_detect_color
  2014  000E7E  CFDD F07E          	movff	postdec2,??_detect_color+1
  2015  000E82  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2016  000E86  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2017  000E8A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2018  000E8C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2019  000E8E  0E00               	movlw	0
  2020  000E90  EC5F  F01E         	call	___xxtofl
  2021  000E94  C001  F013         	movff	?___xxtofl,___fldiv@a
  2022  000E98  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2023  000E9C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2024  000EA0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2025  000EA4  C079  FFD9         	movff	detect_color@m,fsr2l
  2026  000EA8  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  2027  000EAC  CFDE F07F          	movff	postinc2,??_detect_color+2
  2028  000EB0  CFDD F080          	movff	postdec2,??_detect_color+3
  2029  000EB4  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2030  000EB8  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2031  000EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2032  000EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2033  000EC0  0E00               	movlw	0
  2034  000EC2  EC5F  F01E         	call	___xxtofl
  2035  000EC6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2036  000ECA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2037  000ECE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2038  000ED2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2039  000ED6  EC34  F014         	call	___fldiv	;wreg free
  2040  000EDA  C00F  F028         	movff	?___fldiv,___flmul@b
  2041  000EDE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2042  000EE2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2043  000EE6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2044  000EEA  0E00               	movlw	0
  2045  000EEC  6E2C               	movwf	___flmul@a^0,c
  2046  000EEE  0E00               	movlw	0
  2047  000EF0  6E2D               	movwf	(___flmul@a+1)^0,c
  2048  000EF2  0EC8               	movlw	200
  2049  000EF4  6E2E               	movwf	(___flmul@a+2)^0,c
  2050  000EF6  0E42               	movlw	66
  2051  000EF8  6E2F               	movwf	(___flmul@a+3)^0,c
  2052  000EFA  EC48  F010         	call	___flmul	;wreg free
  2053  000EFE  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2054  000F02  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2055  000F06  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2056  000F0A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2057  000F0E                     
  2058                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2059  000F0E  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2060  000F12  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2061  000F16  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2062  000F1A  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2063  000F1E  EC15  F02B         	call	_lroundf	;wreg free
  2064  000F22  C066  F0F1         	movff	?_lroundf,detect_color@RR
  2065  000F26  C067  F0F2         	movff	?_lroundf+1,detect_color@RR+1
  2066  000F2A  0100               	movlb	0	; () banked
  2067  000F2C  EE20 F002          	lfsr	2,2
  2068  000F30  517B               	movf	detect_color@w& (0+255),w,b
  2069  000F32  26D9               	addwf	fsr2l,f,c
  2070  000F34  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2071  000F36  22DA               	addwfc	fsr2h,f,c
  2072  000F38  CFDE F07D          	movff	postinc2,??_detect_color
  2073  000F3C  CFDD F07E          	movff	postdec2,??_detect_color+1
  2074  000F40  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2075  000F44  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2076  000F48  6A03               	clrf	(___xxtofl@val+2)^0,c
  2077  000F4A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2078  000F4C  0E00               	movlw	0
  2079  000F4E  EC5F  F01E         	call	___xxtofl
  2080  000F52  C001  F013         	movff	?___xxtofl,___fldiv@a
  2081  000F56  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2082  000F5A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2083  000F5E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2084  000F62  0100               	movlb	0	; () banked
  2085  000F64  EE20 F002          	lfsr	2,2
  2086  000F68  5179               	movf	detect_color@m& (0+255),w,b
  2087  000F6A  26D9               	addwf	fsr2l,f,c
  2088  000F6C  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2089  000F6E  22DA               	addwfc	fsr2h,f,c
  2090  000F70  CFDE F07F          	movff	postinc2,??_detect_color+2
  2091  000F74  CFDD F080          	movff	postdec2,??_detect_color+3
  2092  000F78  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2093  000F7C  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2094  000F80  6A03               	clrf	(___xxtofl@val+2)^0,c
  2095  000F82  6A04               	clrf	(___xxtofl@val+3)^0,c
  2096  000F84  0E00               	movlw	0
  2097  000F86  EC5F  F01E         	call	___xxtofl
  2098  000F8A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2099  000F8E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2100  000F92  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2101  000F96  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2102  000F9A  EC34  F014         	call	___fldiv	;wreg free
  2103  000F9E  C00F  F028         	movff	?___fldiv,___flmul@b
  2104  000FA2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2105  000FA6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2106  000FAA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2107  000FAE  0E00               	movlw	0
  2108  000FB0  6E2C               	movwf	___flmul@a^0,c
  2109  000FB2  0E00               	movlw	0
  2110  000FB4  6E2D               	movwf	(___flmul@a+1)^0,c
  2111  000FB6  0EC8               	movlw	200
  2112  000FB8  6E2E               	movwf	(___flmul@a+2)^0,c
  2113  000FBA  0E42               	movlw	66
  2114  000FBC  6E2F               	movwf	(___flmul@a+3)^0,c
  2115  000FBE  EC48  F010         	call	___flmul	;wreg free
  2116  000FC2  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2117  000FC6  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2118  000FCA  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2119  000FCE  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2120  000FD2  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2121  000FD6  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2122  000FDA  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2123  000FDE  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2124  000FE2  EC15  F02B         	call	_lroundf	;wreg free
  2125  000FE6  C066  F0E7         	movff	?_lroundf,detect_color@RG
  2126  000FEA  C067  F0E8         	movff	?_lroundf+1,detect_color@RG+1
  2127  000FEE  0100               	movlb	0	; () banked
  2128  000FF0  EE20 F004          	lfsr	2,4
  2129  000FF4  517B               	movf	detect_color@w& (0+255),w,b
  2130  000FF6  26D9               	addwf	fsr2l,f,c
  2131  000FF8  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2132  000FFA  22DA               	addwfc	fsr2h,f,c
  2133  000FFC  CFDE F07D          	movff	postinc2,??_detect_color
  2134  001000  CFDD F07E          	movff	postdec2,??_detect_color+1
  2135  001004  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2136  001008  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2137  00100C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2138  00100E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2139  001010  0E00               	movlw	0
  2140  001012  EC5F  F01E         	call	___xxtofl
  2141  001016  C001  F013         	movff	?___xxtofl,___fldiv@a
  2142  00101A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2143  00101E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2144  001022  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2145  001026  0100               	movlb	0	; () banked
  2146  001028  EE20 F004          	lfsr	2,4
  2147  00102C  5179               	movf	detect_color@m& (0+255),w,b
  2148  00102E  26D9               	addwf	fsr2l,f,c
  2149  001030  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2150  001032  22DA               	addwfc	fsr2h,f,c
  2151  001034  CFDE F07F          	movff	postinc2,??_detect_color+2
  2152  001038  CFDD F080          	movff	postdec2,??_detect_color+3
  2153  00103C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2154  001040  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2155  001044  6A03               	clrf	(___xxtofl@val+2)^0,c
  2156  001046  6A04               	clrf	(___xxtofl@val+3)^0,c
  2157  001048  0E00               	movlw	0
  2158  00104A  EC5F  F01E         	call	___xxtofl
  2159  00104E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2160  001052  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2161  001056  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2162  00105A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2163  00105E  EC34  F014         	call	___fldiv	;wreg free
  2164  001062  C00F  F028         	movff	?___fldiv,___flmul@b
  2165  001066  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2166  00106A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2167  00106E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2168  001072  0E00               	movlw	0
  2169  001074  6E2C               	movwf	___flmul@a^0,c
  2170  001076  0E00               	movlw	0
  2171  001078  6E2D               	movwf	(___flmul@a+1)^0,c
  2172  00107A  0EC8               	movlw	200
  2173  00107C  6E2E               	movwf	(___flmul@a+2)^0,c
  2174  00107E  0E42               	movlw	66
  2175  001080  6E2F               	movwf	(___flmul@a+3)^0,c
  2176  001082  EC48  F010         	call	___flmul	;wreg free
  2177  001086  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2178  00108A  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2179  00108E  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2180  001092  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2181  001096  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2182  00109A  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2183  00109E  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2184  0010A2  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2185  0010A6  EC15  F02B         	call	_lroundf	;wreg free
  2186  0010AA  C066  F0E9         	movff	?_lroundf,detect_color@RB
  2187  0010AE  C067  F0EA         	movff	?_lroundf+1,detect_color@RB+1
  2188  0010B2                     
  2189                           ;color.c: 300:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2190  0010B2  0E05               	movlw	5
  2191  0010B4  0100               	movlb	0	; () banked
  2192  0010B6  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2193  0010B8  0E0F               	movlw	15
  2194  0010BA  6F7D               	movwf	??_detect_color& (0+255),b
  2195  0010BC  0EF1               	movlw	241
  2196  0010BE                     u5567:
  2197  0010BE  2EE8               	decfsz	wreg,f,c
  2198  0010C0  D7FE               	bra	u5567
  2199  0010C2  2F7D               	decfsz	??_detect_color& (0+255),f,b
  2200  0010C4  D7FC               	bra	u5567
  2201  0010C6  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  2202  0010C8  D7FA               	bra	u5567
  2203  0010CA                     
  2204                           ;color.c: 301:     char buf[100];;color.c: 303:     sprintf(buf,"%d\t%d\t%d\r\n", RR, RG
      +                          , RB);
  2205  0010CA  0E81               	movlw	low detect_color@buf
  2206  0010CC  0100               	movlb	0	; () banked
  2207  0010CE  6F60               	movwf	sprintf@s& (0+255),b
  2208  0010D0  0E00               	movlw	high detect_color@buf
  2209  0010D2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2210  0010D4  0E08               	movlw	low (STR_1+3)
  2211  0010D6  6F62               	movwf	sprintf@fmt& (0+255),b
  2212  0010D8  0E0E               	movlw	high (STR_1+3)
  2213  0010DA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2214  0010DC  C0F1  F064         	movff	detect_color@RR,?_sprintf+4
  2215  0010E0  C0F2  F065         	movff	detect_color@RR+1,?_sprintf+5
  2216  0010E4  C0E7  F066         	movff	detect_color@RG,?_sprintf+6
  2217  0010E8  C0E8  F067         	movff	detect_color@RG+1,?_sprintf+7
  2218  0010EC  C0E9  F068         	movff	detect_color@RB,?_sprintf+8
  2219  0010F0  C0EA  F069         	movff	detect_color@RB+1,?_sprintf+9
  2220  0010F4  EC25  F029         	call	_sprintf	;wreg free
  2221  0010F8                     
  2222                           ;color.c: 304:     sendStringSerial4(buf);
  2223  0010F8  0E81               	movlw	low detect_color@buf
  2224  0010FA  6E02               	movwf	sendStringSerial4@string^0,c
  2225  0010FC  0E00               	movlw	high detect_color@buf
  2226  0010FE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2227  001100  EC83  F02B         	call	_sendStringSerial4	;wreg free
  2228  001104                     
  2229                           ;color.c: 306:     LED_G();
  2230  001104  EC0E  F02C         	call	_LED_G	;wreg free
  2231  001108                     
  2232                           ;color.c: 307:     read_color(m);
  2233  001108  C079  F00C         	movff	detect_color@m,read_color@m
  2234  00110C  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  2235  001110  ECF6  F028         	call	_read_color	;wreg free
  2236  001114                     
  2237                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2238  001114  0100               	movlb	0	; () banked
  2239  001116  EE20 F006          	lfsr	2,6
  2240  00111A  517B               	movf	detect_color@w& (0+255),w,b
  2241  00111C  26D9               	addwf	fsr2l,f,c
  2242  00111E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2243  001120  22DA               	addwfc	fsr2h,f,c
  2244  001122  CFDE F07D          	movff	postinc2,??_detect_color
  2245  001126  CFDD F07E          	movff	postdec2,??_detect_color+1
  2246  00112A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2247  00112E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2248  001132  6A03               	clrf	(___xxtofl@val+2)^0,c
  2249  001134  6A04               	clrf	(___xxtofl@val+3)^0,c
  2250  001136  0E00               	movlw	0
  2251  001138  EC5F  F01E         	call	___xxtofl
  2252  00113C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2253  001140  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2254  001144  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2255  001148  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2256  00114C  C079  FFD9         	movff	detect_color@m,fsr2l
  2257  001150  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  2258  001154  CFDE F07F          	movff	postinc2,??_detect_color+2
  2259  001158  CFDD F080          	movff	postdec2,??_detect_color+3
  2260  00115C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2261  001160  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2262  001164  6A03               	clrf	(___xxtofl@val+2)^0,c
  2263  001166  6A04               	clrf	(___xxtofl@val+3)^0,c
  2264  001168  0E00               	movlw	0
  2265  00116A  EC5F  F01E         	call	___xxtofl
  2266  00116E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2267  001172  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2268  001176  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2269  00117A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2270  00117E  EC34  F014         	call	___fldiv	;wreg free
  2271  001182  C00F  F028         	movff	?___fldiv,___flmul@b
  2272  001186  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2273  00118A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2274  00118E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2275  001192  0E00               	movlw	0
  2276  001194  6E2C               	movwf	___flmul@a^0,c
  2277  001196  0E00               	movlw	0
  2278  001198  6E2D               	movwf	(___flmul@a+1)^0,c
  2279  00119A  0EC8               	movlw	200
  2280  00119C  6E2E               	movwf	(___flmul@a+2)^0,c
  2281  00119E  0E42               	movlw	66
  2282  0011A0  6E2F               	movwf	(___flmul@a+3)^0,c
  2283  0011A2  EC48  F010         	call	___flmul	;wreg free
  2284  0011A6  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2285  0011AA  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2286  0011AE  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2287  0011B2  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2288  0011B6                     
  2289                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2290  0011B6  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2291  0011BA  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2292  0011BE  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2293  0011C2  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2294  0011C6  EC15  F02B         	call	_lroundf	;wreg free
  2295  0011CA  C066  F0ED         	movff	?_lroundf,detect_color@GR
  2296  0011CE  C067  F0EE         	movff	?_lroundf+1,detect_color@GR+1
  2297  0011D2  0100               	movlb	0	; () banked
  2298  0011D4  EE20 F008          	lfsr	2,8
  2299  0011D8  517B               	movf	detect_color@w& (0+255),w,b
  2300  0011DA  26D9               	addwf	fsr2l,f,c
  2301  0011DC  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2302  0011DE  22DA               	addwfc	fsr2h,f,c
  2303  0011E0  CFDE F07D          	movff	postinc2,??_detect_color
  2304  0011E4  CFDD F07E          	movff	postdec2,??_detect_color+1
  2305  0011E8  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2306  0011EC  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2307  0011F0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2308  0011F2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2309  0011F4  0E00               	movlw	0
  2310  0011F6  EC5F  F01E         	call	___xxtofl
  2311  0011FA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2312  0011FE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2313  001202  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2314  001206  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2315  00120A  0100               	movlb	0	; () banked
  2316  00120C  EE20 F002          	lfsr	2,2
  2317  001210  5179               	movf	detect_color@m& (0+255),w,b
  2318  001212  26D9               	addwf	fsr2l,f,c
  2319  001214  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2320  001216  22DA               	addwfc	fsr2h,f,c
  2321  001218  CFDE F07F          	movff	postinc2,??_detect_color+2
  2322  00121C  CFDD F080          	movff	postdec2,??_detect_color+3
  2323  001220  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2324  001224  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2325  001228  6A03               	clrf	(___xxtofl@val+2)^0,c
  2326  00122A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2327  00122C  0E00               	movlw	0
  2328  00122E  EC5F  F01E         	call	___xxtofl
  2329  001232  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2330  001236  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2331  00123A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2332  00123E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2333  001242  EC34  F014         	call	___fldiv	;wreg free
  2334  001246  C00F  F028         	movff	?___fldiv,___flmul@b
  2335  00124A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2336  00124E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2337  001252  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2338  001256  0E00               	movlw	0
  2339  001258  6E2C               	movwf	___flmul@a^0,c
  2340  00125A  0E00               	movlw	0
  2341  00125C  6E2D               	movwf	(___flmul@a+1)^0,c
  2342  00125E  0EC8               	movlw	200
  2343  001260  6E2E               	movwf	(___flmul@a+2)^0,c
  2344  001262  0E42               	movlw	66
  2345  001264  6E2F               	movwf	(___flmul@a+3)^0,c
  2346  001266  EC48  F010         	call	___flmul	;wreg free
  2347  00126A  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2348  00126E  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2349  001272  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2350  001276  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2351  00127A  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2352  00127E  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2353  001282  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2354  001286  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2355  00128A  EC15  F02B         	call	_lroundf	;wreg free
  2356  00128E  C066  F0EF         	movff	?_lroundf,detect_color@GG
  2357  001292  C067  F0F0         	movff	?_lroundf+1,detect_color@GG+1
  2358  001296  0100               	movlb	0	; () banked
  2359  001298  EE20 F00A          	lfsr	2,10
  2360  00129C  517B               	movf	detect_color@w& (0+255),w,b
  2361  00129E  26D9               	addwf	fsr2l,f,c
  2362  0012A0  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2363  0012A2  22DA               	addwfc	fsr2h,f,c
  2364  0012A4  CFDE F07D          	movff	postinc2,??_detect_color
  2365  0012A8  CFDD F07E          	movff	postdec2,??_detect_color+1
  2366  0012AC  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2367  0012B0  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2368  0012B4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2369  0012B6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2370  0012B8  0E00               	movlw	0
  2371  0012BA  EC5F  F01E         	call	___xxtofl
  2372  0012BE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2373  0012C2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2374  0012C6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2375  0012CA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2376  0012CE  0100               	movlb	0	; () banked
  2377  0012D0  EE20 F004          	lfsr	2,4
  2378  0012D4  5179               	movf	detect_color@m& (0+255),w,b
  2379  0012D6  26D9               	addwf	fsr2l,f,c
  2380  0012D8  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2381  0012DA  22DA               	addwfc	fsr2h,f,c
  2382  0012DC  CFDE F07F          	movff	postinc2,??_detect_color+2
  2383  0012E0  CFDD F080          	movff	postdec2,??_detect_color+3
  2384  0012E4  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2385  0012E8  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2386  0012EC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2387  0012EE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2388  0012F0  0E00               	movlw	0
  2389  0012F2  EC5F  F01E         	call	___xxtofl
  2390  0012F6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2391  0012FA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2392  0012FE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2393  001302  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2394  001306  EC34  F014         	call	___fldiv	;wreg free
  2395  00130A  C00F  F028         	movff	?___fldiv,___flmul@b
  2396  00130E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2397  001312  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2398  001316  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2399  00131A  0E00               	movlw	0
  2400  00131C  6E2C               	movwf	___flmul@a^0,c
  2401  00131E  0E00               	movlw	0
  2402  001320  6E2D               	movwf	(___flmul@a+1)^0,c
  2403  001322  0EC8               	movlw	200
  2404  001324  6E2E               	movwf	(___flmul@a+2)^0,c
  2405  001326  0E42               	movlw	66
  2406  001328  6E2F               	movwf	(___flmul@a+3)^0,c
  2407  00132A  EC48  F010         	call	___flmul	;wreg free
  2408  00132E  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2409  001332  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2410  001336  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2411  00133A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2412  00133E  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2413  001342  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2414  001346  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2415  00134A  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2416  00134E  EC15  F02B         	call	_lroundf	;wreg free
  2417  001352  C066  F0EB         	movff	?_lroundf,detect_color@GB
  2418  001356  C067  F0EC         	movff	?_lroundf+1,detect_color@GB+1
  2419  00135A                     
  2420                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2421  00135A  0E05               	movlw	5
  2422  00135C  0100               	movlb	0	; () banked
  2423  00135E  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2424  001360  0E0F               	movlw	15
  2425  001362  6F7D               	movwf	??_detect_color& (0+255),b
  2426  001364  0EF1               	movlw	241
  2427  001366                     u5577:
  2428  001366  2EE8               	decfsz	wreg,f,c
  2429  001368  D7FE               	bra	u5577
  2430  00136A  2F7D               	decfsz	??_detect_color& (0+255),f,b
  2431  00136C  D7FC               	bra	u5577
  2432  00136E  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  2433  001370  D7FA               	bra	u5577
  2434  001372                     
  2435                           ;color.c: 313:     sprintf(buf,"%d\t%d\t%d\r\n", GR, GG, GB);
  2436  001372  0E81               	movlw	low detect_color@buf
  2437  001374  0100               	movlb	0	; () banked
  2438  001376  6F60               	movwf	sprintf@s& (0+255),b
  2439  001378  0E00               	movlw	high detect_color@buf
  2440  00137A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2441  00137C  0E08               	movlw	low (STR_1+3)
  2442  00137E  6F62               	movwf	sprintf@fmt& (0+255),b
  2443  001380  0E0E               	movlw	high (STR_1+3)
  2444  001382  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2445  001384  C0ED  F064         	movff	detect_color@GR,?_sprintf+4
  2446  001388  C0EE  F065         	movff	detect_color@GR+1,?_sprintf+5
  2447  00138C  C0EF  F066         	movff	detect_color@GG,?_sprintf+6
  2448  001390  C0F0  F067         	movff	detect_color@GG+1,?_sprintf+7
  2449  001394  C0EB  F068         	movff	detect_color@GB,?_sprintf+8
  2450  001398  C0EC  F069         	movff	detect_color@GB+1,?_sprintf+9
  2451  00139C  EC25  F029         	call	_sprintf	;wreg free
  2452  0013A0                     
  2453                           ;color.c: 314:     sendStringSerial4(buf);
  2454  0013A0  0E81               	movlw	low detect_color@buf
  2455  0013A2  6E02               	movwf	sendStringSerial4@string^0,c
  2456  0013A4  0E00               	movlw	high detect_color@buf
  2457  0013A6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2458  0013A8  EC83  F02B         	call	_sendStringSerial4	;wreg free
  2459  0013AC                     
  2460                           ;color.c: 316:     LED_B();
  2461  0013AC  EC1E  F02C         	call	_LED_B	;wreg free
  2462  0013B0                     
  2463                           ;color.c: 317:     read_color(m);
  2464  0013B0  C079  F00C         	movff	detect_color@m,read_color@m
  2465  0013B4  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  2466  0013B8  ECF6  F028         	call	_read_color	;wreg free
  2467  0013BC                     
  2468                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2469  0013BC  0100               	movlb	0	; () banked
  2470  0013BE  EE20 F00C          	lfsr	2,12
  2471  0013C2  517B               	movf	detect_color@w& (0+255),w,b
  2472  0013C4  26D9               	addwf	fsr2l,f,c
  2473  0013C6  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2474  0013C8  22DA               	addwfc	fsr2h,f,c
  2475  0013CA  CFDE F07D          	movff	postinc2,??_detect_color
  2476  0013CE  CFDD F07E          	movff	postdec2,??_detect_color+1
  2477  0013D2  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2478  0013D6  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2479  0013DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2480  0013DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2481  0013DE  0E00               	movlw	0
  2482  0013E0  EC5F  F01E         	call	___xxtofl
  2483  0013E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  2484  0013E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2485  0013EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2486  0013F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2487  0013F4  C079  FFD9         	movff	detect_color@m,fsr2l
  2488  0013F8  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  2489  0013FC  CFDE F07F          	movff	postinc2,??_detect_color+2
  2490  001400  CFDD F080          	movff	postdec2,??_detect_color+3
  2491  001404  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2492  001408  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2493  00140C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2494  00140E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2495  001410  0E00               	movlw	0
  2496  001412  EC5F  F01E         	call	___xxtofl
  2497  001416  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2498  00141A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2499  00141E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2500  001422  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2501  001426  EC34  F014         	call	___fldiv	;wreg free
  2502  00142A  C00F  F028         	movff	?___fldiv,___flmul@b
  2503  00142E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2504  001432  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2505  001436  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2506  00143A  0E00               	movlw	0
  2507  00143C  6E2C               	movwf	___flmul@a^0,c
  2508  00143E  0E00               	movlw	0
  2509  001440  6E2D               	movwf	(___flmul@a+1)^0,c
  2510  001442  0EC8               	movlw	200
  2511  001444  6E2E               	movwf	(___flmul@a+2)^0,c
  2512  001446  0E42               	movlw	66
  2513  001448  6E2F               	movwf	(___flmul@a+3)^0,c
  2514  00144A  EC48  F010         	call	___flmul	;wreg free
  2515  00144E  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2516  001452  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2517  001456  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2518  00145A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2519  00145E                     
  2520                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2521  00145E  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2522  001462  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2523  001466  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2524  00146A  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2525  00146E  EC15  F02B         	call	_lroundf	;wreg free
  2526  001472  C066  F0F8         	movff	?_lroundf,detect_color@BR
  2527  001476  C067  F0F9         	movff	?_lroundf+1,detect_color@BR+1
  2528  00147A  0100               	movlb	0	; () banked
  2529  00147C  EE20 F00E          	lfsr	2,14
  2530  001480  517B               	movf	detect_color@w& (0+255),w,b
  2531  001482  26D9               	addwf	fsr2l,f,c
  2532  001484  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2533  001486  22DA               	addwfc	fsr2h,f,c
  2534  001488  CFDE F07D          	movff	postinc2,??_detect_color
  2535  00148C  CFDD F07E          	movff	postdec2,??_detect_color+1
  2536  001490  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2537  001494  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2538  001498  6A03               	clrf	(___xxtofl@val+2)^0,c
  2539  00149A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2540  00149C  0E00               	movlw	0
  2541  00149E  EC5F  F01E         	call	___xxtofl
  2542  0014A2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2543  0014A6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2544  0014AA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2545  0014AE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2546  0014B2  0100               	movlb	0	; () banked
  2547  0014B4  EE20 F002          	lfsr	2,2
  2548  0014B8  5179               	movf	detect_color@m& (0+255),w,b
  2549  0014BA  26D9               	addwf	fsr2l,f,c
  2550  0014BC  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2551  0014BE  22DA               	addwfc	fsr2h,f,c
  2552  0014C0  CFDE F07F          	movff	postinc2,??_detect_color+2
  2553  0014C4  CFDD F080          	movff	postdec2,??_detect_color+3
  2554  0014C8  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2555  0014CC  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2556  0014D0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2557  0014D2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2558  0014D4  0E00               	movlw	0
  2559  0014D6  EC5F  F01E         	call	___xxtofl
  2560  0014DA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2561  0014DE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2562  0014E2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2563  0014E6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2564  0014EA  EC34  F014         	call	___fldiv	;wreg free
  2565  0014EE  C00F  F028         	movff	?___fldiv,___flmul@b
  2566  0014F2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2567  0014F6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2568  0014FA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2569  0014FE  0E00               	movlw	0
  2570  001500  6E2C               	movwf	___flmul@a^0,c
  2571  001502  0E00               	movlw	0
  2572  001504  6E2D               	movwf	(___flmul@a+1)^0,c
  2573  001506  0EC8               	movlw	200
  2574  001508  6E2E               	movwf	(___flmul@a+2)^0,c
  2575  00150A  0E42               	movlw	66
  2576  00150C  6E2F               	movwf	(___flmul@a+3)^0,c
  2577  00150E  EC48  F010         	call	___flmul	;wreg free
  2578  001512  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2579  001516  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2580  00151A  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2581  00151E  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2582  001522  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2583  001526  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2584  00152A  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2585  00152E  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2586  001532  EC15  F02B         	call	_lroundf	;wreg free
  2587  001536  C066  F0F6         	movff	?_lroundf,detect_color@BG
  2588  00153A  C067  F0F7         	movff	?_lroundf+1,detect_color@BG+1
  2589  00153E  0100               	movlb	0	; () banked
  2590  001540  EE20 F010          	lfsr	2,16
  2591  001544  517B               	movf	detect_color@w& (0+255),w,b
  2592  001546  26D9               	addwf	fsr2l,f,c
  2593  001548  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2594  00154A  22DA               	addwfc	fsr2h,f,c
  2595  00154C  CFDE F07D          	movff	postinc2,??_detect_color
  2596  001550  CFDD F07E          	movff	postdec2,??_detect_color+1
  2597  001554  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2598  001558  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2599  00155C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2600  00155E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2601  001560  0E00               	movlw	0
  2602  001562  EC5F  F01E         	call	___xxtofl
  2603  001566  C001  F013         	movff	?___xxtofl,___fldiv@a
  2604  00156A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2605  00156E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2606  001572  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2607  001576  0100               	movlb	0	; () banked
  2608  001578  EE20 F004          	lfsr	2,4
  2609  00157C  5179               	movf	detect_color@m& (0+255),w,b
  2610  00157E  26D9               	addwf	fsr2l,f,c
  2611  001580  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2612  001582  22DA               	addwfc	fsr2h,f,c
  2613  001584  CFDE F07F          	movff	postinc2,??_detect_color+2
  2614  001588  CFDD F080          	movff	postdec2,??_detect_color+3
  2615  00158C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2616  001590  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2617  001594  6A03               	clrf	(___xxtofl@val+2)^0,c
  2618  001596  6A04               	clrf	(___xxtofl@val+3)^0,c
  2619  001598  0E00               	movlw	0
  2620  00159A  EC5F  F01E         	call	___xxtofl
  2621  00159E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2622  0015A2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2623  0015A6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2624  0015AA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2625  0015AE  EC34  F014         	call	___fldiv	;wreg free
  2626  0015B2  C00F  F028         	movff	?___fldiv,___flmul@b
  2627  0015B6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2628  0015BA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2629  0015BE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2630  0015C2  0E00               	movlw	0
  2631  0015C4  6E2C               	movwf	___flmul@a^0,c
  2632  0015C6  0E00               	movlw	0
  2633  0015C8  6E2D               	movwf	(___flmul@a+1)^0,c
  2634  0015CA  0EC8               	movlw	200
  2635  0015CC  6E2E               	movwf	(___flmul@a+2)^0,c
  2636  0015CE  0E42               	movlw	66
  2637  0015D0  6E2F               	movwf	(___flmul@a+3)^0,c
  2638  0015D2  EC48  F010         	call	___flmul	;wreg free
  2639  0015D6  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2640  0015DA  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2641  0015DE  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2642  0015E2  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2643  0015E6  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2644  0015EA  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2645  0015EE  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2646  0015F2  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2647  0015F6  EC15  F02B         	call	_lroundf	;wreg free
  2648  0015FA  C066  F0F4         	movff	?_lroundf,detect_color@BB
  2649  0015FE  C067  F0F5         	movff	?_lroundf+1,detect_color@BB+1
  2650  001602                     
  2651                           ;color.c: 319:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2652  001602  0100               	movlb	0	; () banked
  2653  001604  EE20 F01A          	lfsr	2,26
  2654  001608  517B               	movf	detect_color@w& (0+255),w,b
  2655  00160A  26D9               	addwf	fsr2l,f,c
  2656  00160C  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2657  00160E  22DA               	addwfc	fsr2h,f,c
  2658  001610  CFDE F07D          	movff	postinc2,??_detect_color
  2659  001614  CFDD F07E          	movff	postdec2,??_detect_color+1
  2660  001618  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2661  00161C  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2662  001620  6A03               	clrf	(___xxtofl@val+2)^0,c
  2663  001622  6A04               	clrf	(___xxtofl@val+3)^0,c
  2664  001624  0E00               	movlw	0
  2665  001626  EC5F  F01E         	call	___xxtofl
  2666  00162A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2667  00162E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2668  001632  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2669  001636  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2670  00163A  0100               	movlb	0	; () banked
  2671  00163C  EE20 F006          	lfsr	2,6
  2672  001640  5179               	movf	detect_color@m& (0+255),w,b
  2673  001642  26D9               	addwf	fsr2l,f,c
  2674  001644  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2675  001646  22DA               	addwfc	fsr2h,f,c
  2676  001648  CFDE F07F          	movff	postinc2,??_detect_color+2
  2677  00164C  CFDD F080          	movff	postdec2,??_detect_color+3
  2678  001650  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2679  001654  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2680  001658  6A03               	clrf	(___xxtofl@val+2)^0,c
  2681  00165A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2682  00165C  0E00               	movlw	0
  2683  00165E  EC5F  F01E         	call	___xxtofl
  2684  001662  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2685  001666  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2686  00166A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2687  00166E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2688  001672  EC34  F014         	call	___fldiv	;wreg free
  2689  001676  C00F  F028         	movff	?___fldiv,___flmul@b
  2690  00167A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2691  00167E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2692  001682  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2693  001686  0E00               	movlw	0
  2694  001688  6E2C               	movwf	___flmul@a^0,c
  2695  00168A  0E00               	movlw	0
  2696  00168C  6E2D               	movwf	(___flmul@a+1)^0,c
  2697  00168E  0EC8               	movlw	200
  2698  001690  6E2E               	movwf	(___flmul@a+2)^0,c
  2699  001692  0E42               	movlw	66
  2700  001694  6E2F               	movwf	(___flmul@a+3)^0,c
  2701  001696  EC48  F010         	call	___flmul	;wreg free
  2702  00169A  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2703  00169E  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2704  0016A2  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2705  0016A6  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2706  0016AA  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2707  0016AE  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2708  0016B2  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2709  0016B6  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2710  0016BA  EC15  F02B         	call	_lroundf	;wreg free
  2711  0016BE                     
  2712                           ;color.c: 320:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2713  0016BE  0E05               	movlw	5
  2714  0016C0  0100               	movlb	0	; () banked
  2715  0016C2  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2716  0016C4  0E0F               	movlw	15
  2717  0016C6  6F7D               	movwf	??_detect_color& (0+255),b
  2718  0016C8  0EF1               	movlw	241
  2719  0016CA                     u5587:
  2720  0016CA  2EE8               	decfsz	wreg,f,c
  2721  0016CC  D7FE               	bra	u5587
  2722  0016CE  2F7D               	decfsz	??_detect_color& (0+255),f,b
  2723  0016D0  D7FC               	bra	u5587
  2724  0016D2  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  2725  0016D4  D7FA               	bra	u5587
  2726  0016D6                     
  2727                           ;color.c: 322:     sprintf(buf,"%d\t%d\t%d\r\n", BR, BG, BB);
  2728  0016D6  0E81               	movlw	low detect_color@buf
  2729  0016D8  0100               	movlb	0	; () banked
  2730  0016DA  6F60               	movwf	sprintf@s& (0+255),b
  2731  0016DC  0E00               	movlw	high detect_color@buf
  2732  0016DE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2733  0016E0  0E08               	movlw	low (STR_1+3)
  2734  0016E2  6F62               	movwf	sprintf@fmt& (0+255),b
  2735  0016E4  0E0E               	movlw	high (STR_1+3)
  2736  0016E6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2737  0016E8  C0F8  F064         	movff	detect_color@BR,?_sprintf+4
  2738  0016EC  C0F9  F065         	movff	detect_color@BR+1,?_sprintf+5
  2739  0016F0  C0F6  F066         	movff	detect_color@BG,?_sprintf+6
  2740  0016F4  C0F7  F067         	movff	detect_color@BG+1,?_sprintf+7
  2741  0016F8  C0F4  F068         	movff	detect_color@BB,?_sprintf+8
  2742  0016FC  C0F5  F069         	movff	detect_color@BB+1,?_sprintf+9
  2743  001700  EC25  F029         	call	_sprintf	;wreg free
  2744  001704                     
  2745                           ;color.c: 323:     sendStringSerial4(buf);
  2746  001704  0E81               	movlw	low detect_color@buf
  2747  001706  6E02               	movwf	sendStringSerial4@string^0,c
  2748  001708  0E00               	movlw	high detect_color@buf
  2749  00170A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2750  00170C  EC83  F02B         	call	_sendStringSerial4	;wreg free
  2751  001710                     
  2752                           ;color.c: 326:     if (compare(0, BR, 70)){
  2753  001710  0E00               	movlw	0
  2754  001712  0100               	movlb	0	; () banked
  2755  001714  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2756  001716  0E00               	movlw	0
  2757  001718  6F6A               	movwf	compare@lower& (0+255),b
  2758  00171A  C0F8  F06C         	movff	detect_color@BR,compare@value2compare
  2759  00171E  C0F9  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2760  001722  0E00               	movlw	0
  2761  001724  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2762  001726  0E46               	movlw	70
  2763  001728  6F6E               	movwf	compare@upper& (0+255),b
  2764  00172A  ECF8  F02A         	call	_compare	;wreg free
  2765  00172E  0900               	iorlw	0
  2766  001730  B4D8               	btfsc	status,2,c
  2767  001732  EF9D  F00B         	goto	u4981
  2768  001736  EF9F  F00B         	goto	u4980
  2769  00173A                     u4981:
  2770  00173A  EF10  F00C         	goto	l5022
  2771  00173E                     u4980:
  2772  00173E                     
  2773                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2774  00173E  C0F4  F001         	movff	detect_color@BB,___xxtofl@val
  2775  001742  C0F5  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2776  001746  6A03               	clrf	(___xxtofl@val+2)^0,c
  2777  001748  6A04               	clrf	(___xxtofl@val+3)^0,c
  2778  00174A  0E00               	movlw	0
  2779  00174C  EC5F  F01E         	call	___xxtofl
  2780  001750  C001  F013         	movff	?___xxtofl,___fldiv@a
  2781  001754  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2782  001758  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2783  00175C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2784  001760  0100               	movlb	0	; () banked
  2785  001762  51F6               	movf	detect_color@BG& (0+255),w,b
  2786  001764  25EF               	addwf	detect_color@GG& (0+255),w,b
  2787  001766  6F7D               	movwf	??_detect_color& (0+255),b
  2788  001768  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  2789  00176A  21F0               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2790  00176C  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2791  00176E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2792  001772  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2793  001776  6A03               	clrf	(___xxtofl@val+2)^0,c
  2794  001778  6A04               	clrf	(___xxtofl@val+3)^0,c
  2795  00177A  0E00               	movlw	0
  2796  00177C  EC5F  F01E         	call	___xxtofl
  2797  001780  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2798  001784  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2799  001788  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2800  00178C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2801  001790  EC34  F014         	call	___fldiv	;wreg free
  2802  001794  C00F  F028         	movff	?___fldiv,___flmul@b
  2803  001798  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2804  00179C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2805  0017A0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2806  0017A4  0E00               	movlw	0
  2807  0017A6  6E2C               	movwf	___flmul@a^0,c
  2808  0017A8  0E00               	movlw	0
  2809  0017AA  6E2D               	movwf	(___flmul@a+1)^0,c
  2810  0017AC  0E48               	movlw	72
  2811  0017AE  6E2E               	movwf	(___flmul@a+2)^0,c
  2812  0017B0  0E43               	movlw	67
  2813  0017B2  6E2F               	movwf	(___flmul@a+3)^0,c
  2814  0017B4  EC48  F010         	call	___flmul	;wreg free
  2815  0017B8  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2816  0017BC  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2817  0017C0  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2818  0017C4  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2819                           
  2820                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2821  0017C8  0E00               	movlw	0
  2822  0017CA  0100               	movlb	0	; () banked
  2823  0017CC  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2824  0017CE  0E00               	movlw	0
  2825  0017D0  6F6A               	movwf	compare@lower& (0+255),b
  2826  0017D2  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2827  0017D6  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2828  0017DA  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2829  0017DE  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2830  0017E2  EC15  F02B         	call	_lroundf	;wreg free
  2831  0017E6  C066  F06C         	movff	?_lroundf,compare@value2compare
  2832  0017EA  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2833  0017EE  0E01               	movlw	1
  2834  0017F0  0100               	movlb	0	; () banked
  2835  0017F2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2836  0017F4  0E9B               	movlw	155
  2837  0017F6  6F6E               	movwf	compare@upper& (0+255),b
  2838  0017F8  ECF8  F02A         	call	_compare	;wreg free
  2839  0017FC  0900               	iorlw	0
  2840  0017FE  B4D8               	btfsc	status,2,c
  2841  001800  EF04  F00C         	goto	u4991
  2842  001804  EF06  F00C         	goto	u4990
  2843  001808                     u4991:
  2844  001808  EF0B  F00C         	goto	l5020
  2845  00180C                     u4990:
  2846  00180C  0E03               	movlw	3
  2847  00180E  0100               	movlb	0	; () banked
  2848  001810  6FF3               	movwf	detect_color@color& (0+255),b
  2849  001812  EF61  F00D         	goto	l5046
  2850  001816                     l5020:
  2851  001816  0E02               	movlw	2
  2852  001818  0100               	movlb	0	; () banked
  2853  00181A  6FF3               	movwf	detect_color@color& (0+255),b
  2854  00181C  EF61  F00D         	goto	l5046
  2855  001820                     l5022:
  2856                           
  2857                           ;color.c: 331:         if (compare(0, BG, 75)){
  2858  001820  0E00               	movlw	0
  2859  001822  0100               	movlb	0	; () banked
  2860  001824  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2861  001826  0E00               	movlw	0
  2862  001828  6F6A               	movwf	compare@lower& (0+255),b
  2863  00182A  C0F6  F06C         	movff	detect_color@BG,compare@value2compare
  2864  00182E  C0F7  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2865  001832  0E00               	movlw	0
  2866  001834  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2867  001836  0E4B               	movlw	75
  2868  001838  6F6E               	movwf	compare@upper& (0+255),b
  2869  00183A  ECF8  F02A         	call	_compare	;wreg free
  2870  00183E  0900               	iorlw	0
  2871  001840  B4D8               	btfsc	status,2,c
  2872  001842  EF25  F00C         	goto	u5001
  2873  001846  EF27  F00C         	goto	u5000
  2874  00184A                     u5001:
  2875  00184A  EF91  F00C         	goto	l5030
  2876  00184E                     u5000:
  2877  00184E                     
  2878                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  2879  00184E  C0F1  F001         	movff	detect_color@RR,___xxtofl@val
  2880  001852  C0F2  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2881  001856  6A03               	clrf	(___xxtofl@val+2)^0,c
  2882  001858  6A04               	clrf	(___xxtofl@val+3)^0,c
  2883  00185A  0E00               	movlw	0
  2884  00185C  EC5F  F01E         	call	___xxtofl
  2885  001860  C001  F013         	movff	?___xxtofl,___fldiv@a
  2886  001864  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2887  001868  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2888  00186C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2889  001870  C0ED  F001         	movff	detect_color@GR,___xxtofl@val
  2890  001874  C0EE  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  2891  001878  6A03               	clrf	(___xxtofl@val+2)^0,c
  2892  00187A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2893  00187C  0E00               	movlw	0
  2894  00187E  EC5F  F01E         	call	___xxtofl
  2895  001882  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2896  001886  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2897  00188A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2898  00188E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2899  001892  EC34  F014         	call	___fldiv	;wreg free
  2900  001896  C00F  F028         	movff	?___fldiv,___flmul@b
  2901  00189A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2902  00189E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2903  0018A2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2904  0018A6  0E00               	movlw	0
  2905  0018A8  6E2C               	movwf	___flmul@a^0,c
  2906  0018AA  0E00               	movlw	0
  2907  0018AC  6E2D               	movwf	(___flmul@a+1)^0,c
  2908  0018AE  0EFA               	movlw	250
  2909  0018B0  6E2E               	movwf	(___flmul@a+2)^0,c
  2910  0018B2  0E43               	movlw	67
  2911  0018B4  6E2F               	movwf	(___flmul@a+3)^0,c
  2912  0018B6  EC48  F010         	call	___flmul	;wreg free
  2913  0018BA  C028  F0FA         	movff	?___flmul,_detect_color$3234
  2914  0018BE  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  2915  0018C2  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  2916  0018C6  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  2917                           
  2918                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  2919  0018CA  0E01               	movlw	1
  2920  0018CC  0100               	movlb	0	; () banked
  2921  0018CE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2922  0018D0  0EE0               	movlw	224
  2923  0018D2  6F6A               	movwf	compare@lower& (0+255),b
  2924  0018D4  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  2925  0018D8  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  2926  0018DC  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  2927  0018E0  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  2928  0018E4  EC15  F02B         	call	_lroundf	;wreg free
  2929  0018E8  C066  F06C         	movff	?_lroundf,compare@value2compare
  2930  0018EC  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2931  0018F0  0E02               	movlw	2
  2932  0018F2  0100               	movlb	0	; () banked
  2933  0018F4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2934  0018F6  0E08               	movlw	8
  2935  0018F8  6F6E               	movwf	compare@upper& (0+255),b
  2936  0018FA  ECF8  F02A         	call	_compare	;wreg free
  2937  0018FE  0900               	iorlw	0
  2938  001900  B4D8               	btfsc	status,2,c
  2939  001902  EF85  F00C         	goto	u5011
  2940  001906  EF87  F00C         	goto	u5010
  2941  00190A                     u5011:
  2942  00190A  EF8C  F00C         	goto	l5028
  2943  00190E                     u5010:
  2944  00190E  0E06               	movlw	6
  2945  001910  0100               	movlb	0	; () banked
  2946  001912  6FF3               	movwf	detect_color@color& (0+255),b
  2947  001914  EF61  F00D         	goto	l5046
  2948  001918                     l5028:
  2949  001918  0E01               	movlw	1
  2950  00191A  0100               	movlb	0	; () banked
  2951  00191C  6FF3               	movwf	detect_color@color& (0+255),b
  2952  00191E  EF61  F00D         	goto	l5046
  2953  001922                     l5030:
  2954                           
  2955                           ;color.c: 338:             if (BG > BR) {color = 7;}
  2956  001922  0100               	movlb	0	; () banked
  2957  001924  51F6               	movf	detect_color@BG& (0+255),w,b
  2958  001926  5DF8               	subwf	detect_color@BR& (0+255),w,b
  2959  001928  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  2960  00192A  59F9               	subwfb	(detect_color@BR+1)& (0+255),w,b
  2961  00192C  B0D8               	btfsc	status,0,c
  2962  00192E  EF9B  F00C         	goto	u5021
  2963  001932  EF9D  F00C         	goto	u5020
  2964  001936                     u5021:
  2965  001936  EFA1  F00C         	goto	l5034
  2966  00193A                     u5020:
  2967  00193A                     
  2968                           ; BSR set to: 0
  2969  00193A  0E07               	movlw	7
  2970  00193C  6FF3               	movwf	detect_color@color& (0+255),b
  2971  00193E  EF61  F00D         	goto	l5046
  2972  001942                     l5034:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;color.c: 340:                 if (compare(490, lroundf((float)BG / BB * 500), 520)){col
      +                          or = 5;}
  2976  001942  C0F4  F001         	movff	detect_color@BB,___xxtofl@val
  2977  001946  C0F5  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2978  00194A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2979  00194C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2980  00194E  0E00               	movlw	0
  2981  001950  EC5F  F01E         	call	___xxtofl
  2982  001954  C001  F013         	movff	?___xxtofl,___fldiv@a
  2983  001958  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2984  00195C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2985  001960  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2986  001964  C0F6  F001         	movff	detect_color@BG,___xxtofl@val
  2987  001968  C0F7  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2988  00196C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2989  00196E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2990  001970  0E00               	movlw	0
  2991  001972  EC5F  F01E         	call	___xxtofl
  2992  001976  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2993  00197A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2994  00197E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2995  001982  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2996  001986  EC34  F014         	call	___fldiv	;wreg free
  2997  00198A  C00F  F028         	movff	?___fldiv,___flmul@b
  2998  00198E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2999  001992  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3000  001996  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3001  00199A  0E00               	movlw	0
  3002  00199C  6E2C               	movwf	___flmul@a^0,c
  3003  00199E  0E00               	movlw	0
  3004  0019A0  6E2D               	movwf	(___flmul@a+1)^0,c
  3005  0019A2  0EFA               	movlw	250
  3006  0019A4  6E2E               	movwf	(___flmul@a+2)^0,c
  3007  0019A6  0E43               	movlw	67
  3008  0019A8  6E2F               	movwf	(___flmul@a+3)^0,c
  3009  0019AA  EC48  F010         	call	___flmul	;wreg free
  3010  0019AE  C028  F0FA         	movff	?___flmul,_detect_color$3234
  3011  0019B2  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  3012  0019B6  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  3013  0019BA  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  3014                           
  3015                           ;color.c: 340:                 if (compare(490, lroundf((float)BG / BB * 500), 520)){col
      +                          or = 5;}
  3016  0019BE  0E01               	movlw	1
  3017  0019C0  0100               	movlb	0	; () banked
  3018  0019C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3019  0019C4  0EEA               	movlw	234
  3020  0019C6  6F6A               	movwf	compare@lower& (0+255),b
  3021  0019C8  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  3022  0019CC  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  3023  0019D0  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  3024  0019D4  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  3025  0019D8  EC15  F02B         	call	_lroundf	;wreg free
  3026  0019DC  C066  F06C         	movff	?_lroundf,compare@value2compare
  3027  0019E0  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3028  0019E4  0E02               	movlw	2
  3029  0019E6  0100               	movlb	0	; () banked
  3030  0019E8  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3031  0019EA  0E08               	movlw	8
  3032  0019EC  6F6E               	movwf	compare@upper& (0+255),b
  3033  0019EE  ECF8  F02A         	call	_compare	;wreg free
  3034  0019F2  0900               	iorlw	0
  3035  0019F4  B4D8               	btfsc	status,2,c
  3036  0019F6  EFFF  F00C         	goto	u5031
  3037  0019FA  EF01  F00D         	goto	u5030
  3038  0019FE                     u5031:
  3039  0019FE  EF01  F00D         	goto	l5038
  3040  001A02                     u5030:
  3041  001A02                     l5038:
  3042                           
  3043                           ;color.c: 341:                 if (lroundf((float)BG / BB * 500) > 520) {color = 4;}
  3044  001A02  C0F4  F001         	movff	detect_color@BB,___xxtofl@val
  3045  001A06  C0F5  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3046  001A0A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3047  001A0C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3048  001A0E  0E00               	movlw	0
  3049  001A10  EC5F  F01E         	call	___xxtofl
  3050  001A14  C001  F013         	movff	?___xxtofl,___fldiv@a
  3051  001A18  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3052  001A1C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3053  001A20  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3054  001A24  C0F6  F001         	movff	detect_color@BG,___xxtofl@val
  3055  001A28  C0F7  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  3056  001A2C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3057  001A2E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3058  001A30  0E00               	movlw	0
  3059  001A32  EC5F  F01E         	call	___xxtofl
  3060  001A36  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3061  001A3A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3062  001A3E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3063  001A42  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3064  001A46  EC34  F014         	call	___fldiv	;wreg free
  3065  001A4A  C00F  F028         	movff	?___fldiv,___flmul@b
  3066  001A4E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3067  001A52  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3068  001A56  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3069  001A5A  0E00               	movlw	0
  3070  001A5C  6E2C               	movwf	___flmul@a^0,c
  3071  001A5E  0E00               	movlw	0
  3072  001A60  6E2D               	movwf	(___flmul@a+1)^0,c
  3073  001A62  0EFA               	movlw	250
  3074  001A64  6E2E               	movwf	(___flmul@a+2)^0,c
  3075  001A66  0E43               	movlw	67
  3076  001A68  6E2F               	movwf	(___flmul@a+3)^0,c
  3077  001A6A  EC48  F010         	call	___flmul	;wreg free
  3078  001A6E  C028  F0FA         	movff	?___flmul,_detect_color$3234
  3079  001A72  C029  F0FB         	movff	?___flmul+1,_detect_color$3234+1
  3080  001A76  C02A  F0FC         	movff	?___flmul+2,_detect_color$3234+2
  3081  001A7A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3234+3
  3082  001A7E                     
  3083                           ;color.c: 341:                 if (lroundf((float)BG / BB * 500) > 520) {color = 4;}
  3084  001A7E  C0FA  F066         	movff	_detect_color$3234,lroundf@x
  3085  001A82  C0FB  F067         	movff	_detect_color$3234+1,lroundf@x+1
  3086  001A86  C0FC  F068         	movff	_detect_color$3234+2,lroundf@x+2
  3087  001A8A  C0FD  F069         	movff	_detect_color$3234+3,lroundf@x+3
  3088  001A8E  EC15  F02B         	call	_lroundf	;wreg free
  3089  001A92  0100               	movlb	0	; () banked
  3090  001A94  BF69               	btfsc	(?_lroundf+3)& (0+255),7,b
  3091  001A96  EF59  F00D         	goto	u5041
  3092  001A9A  5169               	movf	(?_lroundf+3)& (0+255),w,b
  3093  001A9C  1168               	iorwf	(?_lroundf+2)& (0+255),w,b
  3094  001A9E  E10B               	bnz	u5040
  3095  001AA0  0E09               	movlw	9
  3096  001AA2  5D66               	subwf	?_lroundf& (0+255),w,b
  3097  001AA4  0E02               	movlw	2
  3098  001AA6  5967               	subwfb	(?_lroundf+1)& (0+255),w,b
  3099  001AA8  A0D8               	btfss	status,0,c
  3100  001AAA  EF59  F00D         	goto	u5041
  3101  001AAE  EF5B  F00D         	goto	u5040
  3102  001AB2                     u5041:
  3103  001AB2  EF5F  F00D         	goto	l5044
  3104  001AB6                     u5040:
  3105  001AB6                     
  3106                           ; BSR set to: 0
  3107  001AB6  0E04               	movlw	4
  3108  001AB8  6FF3               	movwf	detect_color@color& (0+255),b
  3109  001ABA  EF61  F00D         	goto	l5046
  3110  001ABE                     l5044:
  3111                           
  3112                           ; BSR set to: 0
  3113  001ABE  0E00               	movlw	0
  3114  001AC0  6FF3               	movwf	detect_color@color& (0+255),b
  3115  001AC2                     l5046:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;color.c: 347:     if (compare(90, BR, BR * 30) && compare(90, BB, BR * 30)){color = 8;}
  3119  001AC2  0E00               	movlw	0
  3120  001AC4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3121  001AC6  0E5A               	movlw	90
  3122  001AC8  6F6A               	movwf	compare@lower& (0+255),b
  3123  001ACA  C0F8  F06C         	movff	detect_color@BR,compare@value2compare
  3124  001ACE  C0F9  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3125  001AD2  C0F8  F001         	movff	detect_color@BR,___wmul@multiplier
  3126  001AD6  C0F9  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3127  001ADA  0E00               	movlw	0
  3128  001ADC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3129  001ADE  0E1E               	movlw	30
  3130  001AE0  6E03               	movwf	___wmul@multiplicand^0,c
  3131  001AE2  ECDB  F02B         	call	___wmul	;wreg free
  3132  001AE6  C001  F06E         	movff	?___wmul,compare@upper
  3133  001AEA  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3134  001AEE  ECF8  F02A         	call	_compare	;wreg free
  3135  001AF2  0900               	iorlw	0
  3136  001AF4  B4D8               	btfsc	status,2,c
  3137  001AF6  EF7F  F00D         	goto	u5051
  3138  001AFA  EF81  F00D         	goto	u5050
  3139  001AFE                     u5051:
  3140  001AFE  EFA5  F00D         	goto	l5052
  3141  001B02                     u5050:
  3142  001B02  0E00               	movlw	0
  3143  001B04  0100               	movlb	0	; () banked
  3144  001B06  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3145  001B08  0E5A               	movlw	90
  3146  001B0A  6F6A               	movwf	compare@lower& (0+255),b
  3147  001B0C  C0F4  F06C         	movff	detect_color@BB,compare@value2compare
  3148  001B10  C0F5  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  3149  001B14  C0F8  F001         	movff	detect_color@BR,___wmul@multiplier
  3150  001B18  C0F9  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3151  001B1C  0E00               	movlw	0
  3152  001B1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3153  001B20  0E1E               	movlw	30
  3154  001B22  6E03               	movwf	___wmul@multiplicand^0,c
  3155  001B24  ECDB  F02B         	call	___wmul	;wreg free
  3156  001B28  C001  F06E         	movff	?___wmul,compare@upper
  3157  001B2C  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3158  001B30  ECF8  F02A         	call	_compare	;wreg free
  3159  001B34  0900               	iorlw	0
  3160  001B36  B4D8               	btfsc	status,2,c
  3161  001B38  EFA0  F00D         	goto	u5061
  3162  001B3C  EFA2  F00D         	goto	u5060
  3163  001B40                     u5061:
  3164  001B40  EFA5  F00D         	goto	l5052
  3165  001B44                     u5060:
  3166  001B44  0E08               	movlw	8
  3167  001B46  0100               	movlb	0	; () banked
  3168  001B48  6FF3               	movwf	detect_color@color& (0+255),b
  3169  001B4A                     l5052:
  3170                           
  3171                           ;color.c: 348:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3172  001B4A  0E00               	movlw	0
  3173  001B4C  0100               	movlb	0	; () banked
  3174  001B4E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3175  001B50  0E00               	movlw	0
  3176  001B52  6F6A               	movwf	compare@lower& (0+255),b
  3177  001B54  C0F8  F06C         	movff	detect_color@BR,compare@value2compare
  3178  001B58  C0F9  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3179  001B5C  0E00               	movlw	0
  3180  001B5E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3181  001B60  0E19               	movlw	25
  3182  001B62  6F6E               	movwf	compare@upper& (0+255),b
  3183  001B64  ECF8  F02A         	call	_compare	;wreg free
  3184  001B68  0900               	iorlw	0
  3185  001B6A  B4D8               	btfsc	status,2,c
  3186  001B6C  EFBA  F00D         	goto	u5071
  3187  001B70  EFBC  F00D         	goto	u5070
  3188  001B74                     u5071:
  3189  001B74  EFD6  F00D         	goto	l5058
  3190  001B78                     u5070:
  3191  001B78  0E00               	movlw	0
  3192  001B7A  0100               	movlb	0	; () banked
  3193  001B7C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3194  001B7E  0E00               	movlw	0
  3195  001B80  6F6A               	movwf	compare@lower& (0+255),b
  3196  001B82  C0F1  F06C         	movff	detect_color@RR,compare@value2compare
  3197  001B86  C0F2  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3198  001B8A  0E00               	movlw	0
  3199  001B8C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3200  001B8E  0E5A               	movlw	90
  3201  001B90  6F6E               	movwf	compare@upper& (0+255),b
  3202  001B92  ECF8  F02A         	call	_compare	;wreg free
  3203  001B96  0900               	iorlw	0
  3204  001B98  B4D8               	btfsc	status,2,c
  3205  001B9A  EFD1  F00D         	goto	u5081
  3206  001B9E  EFD3  F00D         	goto	u5080
  3207  001BA2                     u5081:
  3208  001BA2  EFD6  F00D         	goto	l5058
  3209  001BA6                     u5080:
  3210  001BA6  0E00               	movlw	0
  3211  001BA8  0100               	movlb	0	; () banked
  3212  001BAA  6FF3               	movwf	detect_color@color& (0+255),b
  3213  001BAC                     l5058:
  3214                           
  3215                           ;color.c: 350:     if (color == 8) {toggle_light(2,1);}
  3216  001BAC  0E08               	movlw	8
  3217  001BAE  0100               	movlb	0	; () banked
  3218  001BB0  19F3               	xorwf	detect_color@color& (0+255),w,b
  3219  001BB2  A4D8               	btfss	status,2,c
  3220  001BB4  EFDE  F00D         	goto	u5091
  3221  001BB8  EFE0  F00D         	goto	u5090
  3222  001BBC                     u5091:
  3223  001BBC  EFE5  F00D         	goto	l5062
  3224  001BC0                     u5090:
  3225  001BC0                     
  3226                           ; BSR set to: 0
  3227  001BC0  0E01               	movlw	1
  3228  001BC2  6E01               	movwf	toggle_light@toggletime^0,c
  3229  001BC4  0E02               	movlw	2
  3230  001BC6  EC3F  F01A         	call	_toggle_light
  3231  001BCA                     l5062:
  3232                           
  3233                           ;color.c: 352:     return color;
  3234  001BCA  0100               	movlb	0	; () banked
  3235  001BCC  51F3               	movf	detect_color@color& (0+255),w,b
  3236  001BCE                     
  3237                           ; BSR set to: 0
  3238  001BCE  0012               	return		;funcret
  3239  001BD0                     __end_of_detect_color:
  3240                           	callstack 0
  3241                           
  3242 ;; *************** function _compare *****************
  3243 ;; Defined at:
  3244 ;;		line 355 in file "color.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;  lower           2   10[BANK0 ] unsigned int 
  3247 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3248 ;;  upper           2   14[BANK0 ] unsigned int 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  result          1   16[BANK0 ] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      unsigned char 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3260 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;Total ram usage:        7 bytes
  3265 ;; Hardware stack levels used: 1
  3266 ;; Hardware stack levels required when called: 1
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_detect_color
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text5
  3275  0055F0                     __ptext5:
  3276                           	callstack 0
  3277  0055F0                     _compare:
  3278                           	callstack 27
  3279  0055F0                     
  3280                           ;color.c: 355: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 356: {;color.c: 357:     unsigned char result = 0;
  3281  0055F0  0E00               	movlw	0
  3282  0055F2  0100               	movlb	0	; () banked
  3283  0055F4  6F70               	movwf	compare@result& (0+255),b
  3284  0055F6                     
  3285                           ; BSR set to: 0
  3286                           ;color.c: 358:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3287  0055F6  516C               	movf	compare@value2compare& (0+255),w,b
  3288  0055F8  5D6A               	subwf	compare@lower& (0+255),w,b
  3289  0055FA  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3290  0055FC  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3291  0055FE  B0D8               	btfsc	status,0,c
  3292  005600  EF04  F02B         	goto	u4491
  3293  005604  EF06  F02B         	goto	u4490
  3294  005608                     u4491:
  3295  005608  EF13  F02B         	goto	l159
  3296  00560C                     u4490:
  3297  00560C                     
  3298                           ; BSR set to: 0
  3299  00560C  516C               	movf	compare@value2compare& (0+255),w,b
  3300  00560E  5D6E               	subwf	compare@upper& (0+255),w,b
  3301  005610  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3302  005612  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3303  005614  A0D8               	btfss	status,0,c
  3304  005616  EF0F  F02B         	goto	u4501
  3305  00561A  EF11  F02B         	goto	u4500
  3306  00561E                     u4501:
  3307  00561E  EF13  F02B         	goto	l159
  3308  005622                     u4500:
  3309  005622                     
  3310                           ; BSR set to: 0
  3311  005622  0E01               	movlw	1
  3312  005624  6F70               	movwf	compare@result& (0+255),b
  3313  005626                     l159:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;color.c: 359:     return result;
  3317  005626  5170               	movf	compare@result& (0+255),w,b
  3318  005628                     
  3319                           ; BSR set to: 0
  3320  005628  0012               	return		;funcret
  3321  00562A                     __end_of_compare:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _color_data_collection *****************
  3325 ;; Defined at:
  3326 ;;		line 200 in file "color.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3329 ;;		 -> main@rgb(8), 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;  x               2  132[BANK0 ] int 
  3332 ;;  k               2  130[BANK0 ] int 
  3333 ;;  j               2  128[BANK0 ] int 
  3334 ;;  i               2  126[BANK0 ] int 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;Total ram usage:       12 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 10
  3351 ;; This function calls:
  3352 ;;		_LED_B
  3353 ;;		_LED_C
  3354 ;;		_LED_G
  3355 ;;		_LED_R
  3356 ;;		_color_display
  3357 ;;		_color_predict
  3358 ;;		_read_color
  3359 ;; This function is called by:
  3360 ;;		_test_function
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text6
  3365  003B08                     __ptext6:
  3366                           	callstack 0
  3367  003B08                     _color_data_collection:
  3368                           	callstack 19
  3369  003B08                     
  3370                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3371  003B08  0E00               	movlw	0
  3372  003B0A  0100               	movlb	0	; () banked
  3373  003B0C  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3374  003B0E  0E00               	movlw	0
  3375  003B10  6FDE               	movwf	color_data_collection@i& (0+255),b
  3376  003B12  0E00               	movlw	0
  3377  003B14  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3378  003B16  0E00               	movlw	0
  3379  003B18  6FE2               	movwf	color_data_collection@k& (0+255),b
  3380  003B1A  0E00               	movlw	0
  3381  003B1C  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3382  003B1E  0E00               	movlw	0
  3383  003B20  6FE4               	movwf	color_data_collection@x& (0+255),b
  3384                           
  3385                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3386  003B22  0E00               	movlw	0
  3387  003B24  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3388  003B26  0E00               	movlw	0
  3389  003B28  6FDE               	movwf	color_data_collection@i& (0+255),b
  3390  003B2A                     l4812:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;color.c: 204:         LED_C();
  3394  003B2A  EC2E  F02C         	call	_LED_C	;wreg free
  3395  003B2E                     
  3396                           ;color.c: 205:         read_color(m);
  3397  003B2E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3398  003B32  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3399  003B36  ECF6  F028         	call	_read_color	;wreg free
  3400  003B3A                     
  3401                           ;color.c: 206:         color_display(m);
  3402  003B3A  C05A  F058         	movff	color_data_collection@m,color_display@m
  3403  003B3E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3404  003B42  EC57  F028         	call	_color_display	;wreg free
  3405  003B46                     
  3406                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3407  003B46  0E09               	movlw	9
  3408  003B48  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3409  003B4A  0E1E               	movlw	30
  3410  003B4C  6E5C               	movwf	??_color_data_collection^0,c
  3411  003B4E  0EE4               	movlw	228
  3412  003B50                     u5597:
  3413  003B50  2EE8               	decfsz	wreg,f,c
  3414  003B52  D7FE               	bra	u5597
  3415  003B54  2E5C               	decfsz	??_color_data_collection^0,f,c
  3416  003B56  D7FC               	bra	u5597
  3417  003B58  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3418  003B5A  D7FA               	bra	u5597
  3419  003B5C  D000               	nop2	
  3420  003B5E                     
  3421                           ;color.c: 208:     }
  3422  003B5E  0100               	movlb	0	; () banked
  3423  003B60  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3424  003B62  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3425  003B64                     
  3426                           ; BSR set to: 0
  3427  003B64  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3428  003B66  EFBE  F01D         	goto	u4941
  3429  003B6A  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3430  003B6C  E109               	bnz	u4940
  3431  003B6E  0E05               	movlw	5
  3432  003B70  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3433  003B72  A0D8               	btfss	status,0,c
  3434  003B74  EFBE  F01D         	goto	u4941
  3435  003B78  EFC0  F01D         	goto	u4940
  3436  003B7C                     u4941:
  3437  003B7C  EF95  F01D         	goto	l4812
  3438  003B80                     u4940:
  3439  003B80                     
  3440                           ; BSR set to: 0
  3441                           ;color.c: 209:     color_predict(00000);
  3442  003B80  0E00               	movlw	0
  3443  003B82  EC9B  F02B         	call	_color_predict
  3444  003B86                     
  3445                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3446  003B86  0E00               	movlw	0
  3447  003B88  0100               	movlb	0	; () banked
  3448  003B8A  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3449  003B8C  0E00               	movlw	0
  3450  003B8E  6FE0               	movwf	color_data_collection@j& (0+255),b
  3451  003B90                     l4832:
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;color.c: 211:         LED_R();
  3455  003B90  ECEE  F02B         	call	_LED_R	;wreg free
  3456  003B94                     
  3457                           ;color.c: 212:         read_color(m);
  3458  003B94  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3459  003B98  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3460  003B9C  ECF6  F028         	call	_read_color	;wreg free
  3461  003BA0                     
  3462                           ;color.c: 213:         color_display(m);
  3463  003BA0  C05A  F058         	movff	color_data_collection@m,color_display@m
  3464  003BA4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3465  003BA8  EC57  F028         	call	_color_display	;wreg free
  3466  003BAC                     
  3467                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3468  003BAC  0E09               	movlw	9
  3469  003BAE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3470  003BB0  0E1E               	movlw	30
  3471  003BB2  6E5C               	movwf	??_color_data_collection^0,c
  3472  003BB4  0EE4               	movlw	228
  3473  003BB6                     u5607:
  3474  003BB6  2EE8               	decfsz	wreg,f,c
  3475  003BB8  D7FE               	bra	u5607
  3476  003BBA  2E5C               	decfsz	??_color_data_collection^0,f,c
  3477  003BBC  D7FC               	bra	u5607
  3478  003BBE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3479  003BC0  D7FA               	bra	u5607
  3480  003BC2  D000               	nop2	
  3481  003BC4                     
  3482                           ;color.c: 215:     }
  3483  003BC4  0100               	movlb	0	; () banked
  3484  003BC6  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3485  003BC8  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3486  003BCA                     
  3487                           ; BSR set to: 0
  3488  003BCA  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3489  003BCC  EFF1  F01D         	goto	u4951
  3490  003BD0  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3491  003BD2  E109               	bnz	u4950
  3492  003BD4  0E05               	movlw	5
  3493  003BD6  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3494  003BD8  A0D8               	btfss	status,0,c
  3495  003BDA  EFF1  F01D         	goto	u4951
  3496  003BDE  EFF3  F01D         	goto	u4950
  3497  003BE2                     u4951:
  3498  003BE2  EFC8  F01D         	goto	l4832
  3499  003BE6                     u4950:
  3500  003BE6                     
  3501                           ; BSR set to: 0
  3502                           ;color.c: 216:     color_predict(00000);
  3503  003BE6  0E00               	movlw	0
  3504  003BE8  EC9B  F02B         	call	_color_predict
  3505  003BEC                     
  3506                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3507  003BEC  0E00               	movlw	0
  3508  003BEE  0100               	movlb	0	; () banked
  3509  003BF0  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3510  003BF2  0E00               	movlw	0
  3511  003BF4  6FE2               	movwf	color_data_collection@k& (0+255),b
  3512  003BF6                     l4852:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;color.c: 218:         LED_G();
  3516  003BF6  EC0E  F02C         	call	_LED_G	;wreg free
  3517  003BFA                     
  3518                           ;color.c: 219:         read_color(m);
  3519  003BFA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3520  003BFE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3521  003C02  ECF6  F028         	call	_read_color	;wreg free
  3522  003C06                     
  3523                           ;color.c: 220:         color_display(m);
  3524  003C06  C05A  F058         	movff	color_data_collection@m,color_display@m
  3525  003C0A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3526  003C0E  EC57  F028         	call	_color_display	;wreg free
  3527  003C12                     
  3528                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3529  003C12  0E09               	movlw	9
  3530  003C14  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3531  003C16  0E1E               	movlw	30
  3532  003C18  6E5C               	movwf	??_color_data_collection^0,c
  3533  003C1A  0EE4               	movlw	228
  3534  003C1C                     u5617:
  3535  003C1C  2EE8               	decfsz	wreg,f,c
  3536  003C1E  D7FE               	bra	u5617
  3537  003C20  2E5C               	decfsz	??_color_data_collection^0,f,c
  3538  003C22  D7FC               	bra	u5617
  3539  003C24  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3540  003C26  D7FA               	bra	u5617
  3541  003C28  D000               	nop2	
  3542  003C2A                     
  3543                           ;color.c: 222:     }
  3544  003C2A  0100               	movlb	0	; () banked
  3545  003C2C  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3546  003C2E  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3547  003C30                     
  3548                           ; BSR set to: 0
  3549  003C30  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3550  003C32  EF24  F01E         	goto	u4961
  3551  003C36  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3552  003C38  E109               	bnz	u4960
  3553  003C3A  0E05               	movlw	5
  3554  003C3C  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3555  003C3E  A0D8               	btfss	status,0,c
  3556  003C40  EF24  F01E         	goto	u4961
  3557  003C44  EF26  F01E         	goto	u4960
  3558  003C48                     u4961:
  3559  003C48  EFFB  F01D         	goto	l4852
  3560  003C4C                     u4960:
  3561  003C4C                     
  3562                           ; BSR set to: 0
  3563                           ;color.c: 223:     color_predict(00000);
  3564  003C4C  0E00               	movlw	0
  3565  003C4E  EC9B  F02B         	call	_color_predict
  3566  003C52                     
  3567                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3568  003C52  0E00               	movlw	0
  3569  003C54  0100               	movlb	0	; () banked
  3570  003C56  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3571  003C58  0E00               	movlw	0
  3572  003C5A  6FE4               	movwf	color_data_collection@x& (0+255),b
  3573  003C5C                     l4872:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;color.c: 225:         LED_B();
  3577  003C5C  EC1E  F02C         	call	_LED_B	;wreg free
  3578  003C60                     
  3579                           ;color.c: 226:         read_color(m);
  3580  003C60  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3581  003C64  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3582  003C68  ECF6  F028         	call	_read_color	;wreg free
  3583  003C6C                     
  3584                           ;color.c: 227:         color_display(m);
  3585  003C6C  C05A  F058         	movff	color_data_collection@m,color_display@m
  3586  003C70  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3587  003C74  EC57  F028         	call	_color_display	;wreg free
  3588  003C78                     
  3589                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3590  003C78  0E09               	movlw	9
  3591  003C7A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3592  003C7C  0E1E               	movlw	30
  3593  003C7E  6E5C               	movwf	??_color_data_collection^0,c
  3594  003C80  0EE4               	movlw	228
  3595  003C82                     u5627:
  3596  003C82  2EE8               	decfsz	wreg,f,c
  3597  003C84  D7FE               	bra	u5627
  3598  003C86  2E5C               	decfsz	??_color_data_collection^0,f,c
  3599  003C88  D7FC               	bra	u5627
  3600  003C8A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3601  003C8C  D7FA               	bra	u5627
  3602  003C8E  D000               	nop2	
  3603  003C90                     
  3604                           ;color.c: 229:     }
  3605  003C90  0100               	movlb	0	; () banked
  3606  003C92  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3607  003C94  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3608  003C96                     
  3609                           ; BSR set to: 0
  3610  003C96  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3611  003C98  EF57  F01E         	goto	u4971
  3612  003C9C  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3613  003C9E  E109               	bnz	u4970
  3614  003CA0  0E05               	movlw	5
  3615  003CA2  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3616  003CA4  A0D8               	btfss	status,0,c
  3617  003CA6  EF57  F01E         	goto	u4971
  3618  003CAA  EF59  F01E         	goto	u4970
  3619  003CAE                     u4971:
  3620  003CAE  EF2E  F01E         	goto	l4872
  3621  003CB2                     u4970:
  3622  003CB2                     
  3623                           ; BSR set to: 0
  3624                           ;color.c: 230:     color_predict(1);
  3625  003CB2  0E01               	movlw	1
  3626  003CB4  EC9B  F02B         	call	_color_predict
  3627  003CB8                     
  3628                           ;color.c: 231:     LED_C();
  3629  003CB8  EC2E  F02C         	call	_LED_C	;wreg free
  3630  003CBC  0012               	return		;funcret
  3631  003CBE                     __end_of_color_data_collection:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _read_color *****************
  3635 ;; Defined at:
  3636 ;;		line 147 in file "color.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3639 ;;		 -> main@rgb(8), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;		None
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;Total ram usage:        2 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 4
  3658 ;; This function calls:
  3659 ;;		_color_read_Blue
  3660 ;;		_color_read_Clear
  3661 ;;		_color_read_Green
  3662 ;;		_color_read_Red
  3663 ;; This function is called by:
  3664 ;;		_color_data_collection
  3665 ;;		_detect_color
  3666 ;;		_test_function
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text7
  3671  0051EC                     __ptext7:
  3672                           	callstack 0
  3673  0051EC                     _read_color:
  3674                           	callstack 24
  3675  0051EC                     
  3676                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3677  0051EC  EC4E  F029         	call	_color_read_Red	;wreg free
  3678  0051F0  C00C  FFD9         	movff	read_color@m,fsr2l
  3679  0051F4  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3680  0051F8  C005  FFDE         	movff	?_color_read_Red,postinc2
  3681  0051FC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3682                           
  3683                           ;color.c: 150:     m->B = color_read_Blue();
  3684  005200  EC9E  F029         	call	_color_read_Blue	;wreg free
  3685  005204  EE20 F004          	lfsr	2,4
  3686  005208  500C               	movf	read_color@m^0,w,c
  3687  00520A  26D9               	addwf	fsr2l,f,c
  3688  00520C  500D               	movf	(read_color@m+1)^0,w,c
  3689  00520E  22DA               	addwfc	fsr2h,f,c
  3690  005210  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3691  005214  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3692                           
  3693                           ;color.c: 151:     m->G = color_read_Green();
  3694  005218  EC76  F029         	call	_color_read_Green	;wreg free
  3695  00521C  EE20 F002          	lfsr	2,2
  3696  005220  500C               	movf	read_color@m^0,w,c
  3697  005222  26D9               	addwf	fsr2l,f,c
  3698  005224  500D               	movf	(read_color@m+1)^0,w,c
  3699  005226  22DA               	addwfc	fsr2h,f,c
  3700  005228  C005  FFDE         	movff	?_color_read_Green,postinc2
  3701  00522C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3702                           
  3703                           ;color.c: 152:     m->C = color_read_Clear();
  3704  005230  ECC6  F029         	call	_color_read_Clear	;wreg free
  3705  005234  EE20 F006          	lfsr	2,6
  3706  005238  500C               	movf	read_color@m^0,w,c
  3707  00523A  26D9               	addwf	fsr2l,f,c
  3708  00523C  500D               	movf	(read_color@m+1)^0,w,c
  3709  00523E  22DA               	addwfc	fsr2h,f,c
  3710  005240  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3711  005244  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3712  005248  0012               	return		;funcret
  3713  00524A                     __end_of_read_color:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function _color_display *****************
  3717 ;; Defined at:
  3718 ;;		line 234 in file "color.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3721 ;;		 -> main@rgb(8), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3734 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3736 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;Total ram usage:      102 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 9
  3740 ;; This function calls:
  3741 ;;		_sendStringSerial4
  3742 ;;		_sprintf
  3743 ;; This function is called by:
  3744 ;;		_color_data_collection
  3745 ;;		_test_function
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text8
  3750  0050AE                     __ptext8:
  3751                           	callstack 0
  3752  0050AE                     _color_display:
  3753                           	callstack 20
  3754  0050AE                     
  3755                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3756  0050AE  0E79               	movlw	low color_display@buf
  3757  0050B0  0100               	movlb	0	; () banked
  3758  0050B2  6F60               	movwf	sprintf@s& (0+255),b
  3759  0050B4  0E00               	movlw	high color_display@buf
  3760  0050B6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3761  0050B8  0E05               	movlw	low STR_1
  3762  0050BA  6F62               	movwf	sprintf@fmt& (0+255),b
  3763  0050BC  0E0E               	movlw	high STR_1
  3764  0050BE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3765  0050C0  C058  FFD9         	movff	color_display@m,fsr2l
  3766  0050C4  C059  FFDA         	movff	color_display@m+1,fsr2h
  3767  0050C8  CFDE F064          	movff	postinc2,?_sprintf+4
  3768  0050CC  CFDD F065          	movff	postdec2,?_sprintf+5
  3769  0050D0  EE20 F002          	lfsr	2,2
  3770  0050D4  5058               	movf	color_display@m^0,w,c
  3771  0050D6  26D9               	addwf	fsr2l,f,c
  3772  0050D8  5059               	movf	(color_display@m+1)^0,w,c
  3773  0050DA  22DA               	addwfc	fsr2h,f,c
  3774  0050DC  CFDE F066          	movff	postinc2,?_sprintf+6
  3775  0050E0  CFDD F067          	movff	postdec2,?_sprintf+7
  3776  0050E4  EE20 F004          	lfsr	2,4
  3777  0050E8  5058               	movf	color_display@m^0,w,c
  3778  0050EA  26D9               	addwf	fsr2l,f,c
  3779  0050EC  5059               	movf	(color_display@m+1)^0,w,c
  3780  0050EE  22DA               	addwfc	fsr2h,f,c
  3781  0050F0  CFDE F068          	movff	postinc2,?_sprintf+8
  3782  0050F4  CFDD F069          	movff	postdec2,?_sprintf+9
  3783  0050F8  EE20 F006          	lfsr	2,6
  3784  0050FC  5058               	movf	color_display@m^0,w,c
  3785  0050FE  26D9               	addwf	fsr2l,f,c
  3786  005100  5059               	movf	(color_display@m+1)^0,w,c
  3787  005102  22DA               	addwfc	fsr2h,f,c
  3788  005104  CFDE F06A          	movff	postinc2,?_sprintf+10
  3789  005108  CFDD F06B          	movff	postdec2,?_sprintf+11
  3790  00510C  EC25  F029         	call	_sprintf	;wreg free
  3791  005110                     
  3792                           ;color.c: 238:     sendStringSerial4(buf);
  3793  005110  0E79               	movlw	low color_display@buf
  3794  005112  6E02               	movwf	sendStringSerial4@string^0,c
  3795  005114  0E00               	movlw	high color_display@buf
  3796  005116  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3797  005118  EC83  F02B         	call	_sendStringSerial4	;wreg free
  3798  00511C  0012               	return		;funcret
  3799  00511E                     __end_of_color_display:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function _calibrate_white *****************
  3803 ;; Defined at:
  3804 ;;		line 258 in file "color.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  w               2   11[COMRAM] PTR struct white_card
  3807 ;;		 -> main@white(28), 
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;Total ram usage:        4 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 4
  3826 ;; This function calls:
  3827 ;;		_LED_B
  3828 ;;		_LED_C
  3829 ;;		_LED_G
  3830 ;;		_LED_OFF
  3831 ;;		_LED_R
  3832 ;;		_color_read_Blue
  3833 ;;		_color_read_Clear
  3834 ;;		_color_read_Green
  3835 ;;		_color_read_Red
  3836 ;;		_toggle_light
  3837 ;; This function is called by:
  3838 ;;		_main
  3839 ;;		_test_function
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text9
  3844  00372A                     __ptext9:
  3845                           	callstack 0
  3846  00372A                     _calibrate_white:
  3847                           	callstack 25
  3848  00372A                     
  3849                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  3850  00372A  ECFE  F02B         	call	_LED_OFF	;wreg free
  3851  00372E                     
  3852                           ;color.c: 261:     toggle_light(1,2);
  3853  00372E  0E02               	movlw	2
  3854  003730  6E01               	movwf	toggle_light@toggletime^0,c
  3855  003732  0E01               	movlw	1
  3856  003734  EC3F  F01A         	call	_toggle_light
  3857  003738                     
  3858                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3859  003738  0E29               	movlw	41
  3860  00373A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3861  00373C  0E96               	movlw	150
  3862  00373E  6E0E               	movwf	??_calibrate_white^0,c
  3863  003740  0E7F               	movlw	127
  3864  003742                     u5637:
  3865  003742  2EE8               	decfsz	wreg,f,c
  3866  003744  D7FE               	bra	u5637
  3867  003746  2E0E               	decfsz	??_calibrate_white^0,f,c
  3868  003748  D7FC               	bra	u5637
  3869  00374A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3870  00374C  D7FA               	bra	u5637
  3871  00374E  F000               	nop	
  3872  003750                     
  3873                           ;color.c: 264:     LED_R();
  3874  003750  ECEE  F02B         	call	_LED_R	;wreg free
  3875  003754                     
  3876                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  3877  003754  EC4E  F029         	call	_color_read_Red	;wreg free
  3878  003758  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  3879  00375C  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  3880  003760  C005  FFDE         	movff	?_color_read_Red,postinc2
  3881  003764  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3882  003768  EC76  F029         	call	_color_read_Green	;wreg free
  3883  00376C  EE20 F002          	lfsr	2,2
  3884  003770  500C               	movf	calibrate_white@w^0,w,c
  3885  003772  26D9               	addwf	fsr2l,f,c
  3886  003774  500D               	movf	(calibrate_white@w+1)^0,w,c
  3887  003776  22DA               	addwfc	fsr2h,f,c
  3888  003778  C005  FFDE         	movff	?_color_read_Green,postinc2
  3889  00377C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3890  003780  EC9E  F029         	call	_color_read_Blue	;wreg free
  3891  003784  EE20 F004          	lfsr	2,4
  3892  003788  500C               	movf	calibrate_white@w^0,w,c
  3893  00378A  26D9               	addwf	fsr2l,f,c
  3894  00378C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3895  00378E  22DA               	addwfc	fsr2h,f,c
  3896  003790  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3897  003794  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3898  003798                     
  3899                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3900  003798  0E09               	movlw	9
  3901  00379A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3902  00379C  0E1E               	movlw	30
  3903  00379E  6E0E               	movwf	??_calibrate_white^0,c
  3904  0037A0  0EE4               	movlw	228
  3905  0037A2                     u5647:
  3906  0037A2  2EE8               	decfsz	wreg,f,c
  3907  0037A4  D7FE               	bra	u5647
  3908  0037A6  2E0E               	decfsz	??_calibrate_white^0,f,c
  3909  0037A8  D7FC               	bra	u5647
  3910  0037AA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3911  0037AC  D7FA               	bra	u5647
  3912  0037AE  D000               	nop2	
  3913  0037B0                     
  3914                           ;color.c: 268:     LED_G();
  3915  0037B0  EC0E  F02C         	call	_LED_G	;wreg free
  3916  0037B4                     
  3917                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  3918  0037B4  EC4E  F029         	call	_color_read_Red	;wreg free
  3919  0037B8  EE20 F006          	lfsr	2,6
  3920  0037BC  500C               	movf	calibrate_white@w^0,w,c
  3921  0037BE  26D9               	addwf	fsr2l,f,c
  3922  0037C0  500D               	movf	(calibrate_white@w+1)^0,w,c
  3923  0037C2  22DA               	addwfc	fsr2h,f,c
  3924  0037C4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3925  0037C8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3926  0037CC  EC76  F029         	call	_color_read_Green	;wreg free
  3927  0037D0  EE20 F008          	lfsr	2,8
  3928  0037D4  500C               	movf	calibrate_white@w^0,w,c
  3929  0037D6  26D9               	addwf	fsr2l,f,c
  3930  0037D8  500D               	movf	(calibrate_white@w+1)^0,w,c
  3931  0037DA  22DA               	addwfc	fsr2h,f,c
  3932  0037DC  C005  FFDE         	movff	?_color_read_Green,postinc2
  3933  0037E0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3934  0037E4  EC9E  F029         	call	_color_read_Blue	;wreg free
  3935  0037E8  EE20 F00A          	lfsr	2,10
  3936  0037EC  500C               	movf	calibrate_white@w^0,w,c
  3937  0037EE  26D9               	addwf	fsr2l,f,c
  3938  0037F0  500D               	movf	(calibrate_white@w+1)^0,w,c
  3939  0037F2  22DA               	addwfc	fsr2h,f,c
  3940  0037F4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3941  0037F8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3942  0037FC                     
  3943                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3944  0037FC  0E09               	movlw	9
  3945  0037FE  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3946  003800  0E1E               	movlw	30
  3947  003802  6E0E               	movwf	??_calibrate_white^0,c
  3948  003804  0EE4               	movlw	228
  3949  003806                     u5657:
  3950  003806  2EE8               	decfsz	wreg,f,c
  3951  003808  D7FE               	bra	u5657
  3952  00380A  2E0E               	decfsz	??_calibrate_white^0,f,c
  3953  00380C  D7FC               	bra	u5657
  3954  00380E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3955  003810  D7FA               	bra	u5657
  3956  003812  D000               	nop2	
  3957  003814                     
  3958                           ;color.c: 273:     LED_B();
  3959  003814  EC1E  F02C         	call	_LED_B	;wreg free
  3960  003818                     
  3961                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  3962  003818  EC4E  F029         	call	_color_read_Red	;wreg free
  3963  00381C  EE20 F00C          	lfsr	2,12
  3964  003820  500C               	movf	calibrate_white@w^0,w,c
  3965  003822  26D9               	addwf	fsr2l,f,c
  3966  003824  500D               	movf	(calibrate_white@w+1)^0,w,c
  3967  003826  22DA               	addwfc	fsr2h,f,c
  3968  003828  C005  FFDE         	movff	?_color_read_Red,postinc2
  3969  00382C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3970  003830  EC76  F029         	call	_color_read_Green	;wreg free
  3971  003834  EE20 F00E          	lfsr	2,14
  3972  003838  500C               	movf	calibrate_white@w^0,w,c
  3973  00383A  26D9               	addwf	fsr2l,f,c
  3974  00383C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3975  00383E  22DA               	addwfc	fsr2h,f,c
  3976  003840  C005  FFDE         	movff	?_color_read_Green,postinc2
  3977  003844  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3978  003848  EC9E  F029         	call	_color_read_Blue	;wreg free
  3979  00384C  EE20 F010          	lfsr	2,16
  3980  003850  500C               	movf	calibrate_white@w^0,w,c
  3981  003852  26D9               	addwf	fsr2l,f,c
  3982  003854  500D               	movf	(calibrate_white@w+1)^0,w,c
  3983  003856  22DA               	addwfc	fsr2h,f,c
  3984  003858  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3985  00385C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3986  003860  ECC6  F029         	call	_color_read_Clear	;wreg free
  3987  003864  EE20 F01A          	lfsr	2,26
  3988  003868  500C               	movf	calibrate_white@w^0,w,c
  3989  00386A  26D9               	addwf	fsr2l,f,c
  3990  00386C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3991  00386E  22DA               	addwfc	fsr2h,f,c
  3992  003870  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3993  003874  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3994  003878                     
  3995                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3996  003878  0E09               	movlw	9
  3997  00387A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3998  00387C  0E1E               	movlw	30
  3999  00387E  6E0E               	movwf	??_calibrate_white^0,c
  4000  003880  0EE4               	movlw	228
  4001  003882                     u5667:
  4002  003882  2EE8               	decfsz	wreg,f,c
  4003  003884  D7FE               	bra	u5667
  4004  003886  2E0E               	decfsz	??_calibrate_white^0,f,c
  4005  003888  D7FC               	bra	u5667
  4006  00388A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4007  00388C  D7FA               	bra	u5667
  4008  00388E  D000               	nop2	
  4009  003890                     
  4010                           ;color.c: 277:     LED_C();
  4011  003890  EC2E  F02C         	call	_LED_C	;wreg free
  4012  003894                     
  4013                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4014  003894  EC4E  F029         	call	_color_read_Red	;wreg free
  4015  003898  EE20 F012          	lfsr	2,18
  4016  00389C  500C               	movf	calibrate_white@w^0,w,c
  4017  00389E  26D9               	addwf	fsr2l,f,c
  4018  0038A0  500D               	movf	(calibrate_white@w+1)^0,w,c
  4019  0038A2  22DA               	addwfc	fsr2h,f,c
  4020  0038A4  C005  FFDE         	movff	?_color_read_Red,postinc2
  4021  0038A8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4022  0038AC  EC76  F029         	call	_color_read_Green	;wreg free
  4023  0038B0  EE20 F014          	lfsr	2,20
  4024  0038B4  500C               	movf	calibrate_white@w^0,w,c
  4025  0038B6  26D9               	addwf	fsr2l,f,c
  4026  0038B8  500D               	movf	(calibrate_white@w+1)^0,w,c
  4027  0038BA  22DA               	addwfc	fsr2h,f,c
  4028  0038BC  C005  FFDE         	movff	?_color_read_Green,postinc2
  4029  0038C0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4030  0038C4  EC9E  F029         	call	_color_read_Blue	;wreg free
  4031  0038C8  EE20 F016          	lfsr	2,22
  4032  0038CC  500C               	movf	calibrate_white@w^0,w,c
  4033  0038CE  26D9               	addwf	fsr2l,f,c
  4034  0038D0  500D               	movf	(calibrate_white@w+1)^0,w,c
  4035  0038D2  22DA               	addwfc	fsr2h,f,c
  4036  0038D4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4037  0038D8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4038  0038DC  ECC6  F029         	call	_color_read_Clear	;wreg free
  4039  0038E0  EE20 F018          	lfsr	2,24
  4040  0038E4  500C               	movf	calibrate_white@w^0,w,c
  4041  0038E6  26D9               	addwf	fsr2l,f,c
  4042  0038E8  500D               	movf	(calibrate_white@w+1)^0,w,c
  4043  0038EA  22DA               	addwfc	fsr2h,f,c
  4044  0038EC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4045  0038F0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4046  0038F4                     
  4047                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4048  0038F4  0E29               	movlw	41
  4049  0038F6  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4050  0038F8  0E96               	movlw	150
  4051  0038FA  6E0E               	movwf	??_calibrate_white^0,c
  4052  0038FC  0E7F               	movlw	127
  4053  0038FE                     u5677:
  4054  0038FE  2EE8               	decfsz	wreg,f,c
  4055  003900  D7FE               	bra	u5677
  4056  003902  2E0E               	decfsz	??_calibrate_white^0,f,c
  4057  003904  D7FC               	bra	u5677
  4058  003906  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4059  003908  D7FA               	bra	u5677
  4060  00390A  F000               	nop	
  4061  00390C                     
  4062                           ;color.c: 281:     LED_OFF();
  4063  00390C  ECFE  F02B         	call	_LED_OFF	;wreg free
  4064  003910                     
  4065                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4066  003910  0E29               	movlw	41
  4067  003912  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4068  003914  0E96               	movlw	150
  4069  003916  6E0E               	movwf	??_calibrate_white^0,c
  4070  003918  0E7F               	movlw	127
  4071  00391A                     u5687:
  4072  00391A  2EE8               	decfsz	wreg,f,c
  4073  00391C  D7FE               	bra	u5687
  4074  00391E  2E0E               	decfsz	??_calibrate_white^0,f,c
  4075  003920  D7FC               	bra	u5687
  4076  003922  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4077  003924  D7FA               	bra	u5687
  4078  003926  F000               	nop	
  4079                           
  4080                           ;color.c: 283:     toggle_light(1,2);
  4081  003928  0E02               	movlw	2
  4082  00392A  6E01               	movwf	toggle_light@toggletime^0,c
  4083  00392C  0E01               	movlw	1
  4084  00392E  EC3F  F01A         	call	_toggle_light
  4085  003932  0012               	return		;funcret
  4086  003934                     __end_of_calibrate_white:
  4087                           	callstack 0
  4088                           
  4089 ;; *************** function _color_read_Red *****************
  4090 ;; Defined at:
  4091 ;;		line 91 in file "color.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;  tmp             2    9[COMRAM] unsigned int 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  2    4[COMRAM] unsigned int 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2, status,0, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;Total ram usage:        7 bytes
  4110 ;; Hardware stack levels used: 1
  4111 ;; Hardware stack levels required when called: 3
  4112 ;; This function calls:
  4113 ;;		_I2C_2_Master_Read
  4114 ;;		_I2C_2_Master_RepStart
  4115 ;;		_I2C_2_Master_Start
  4116 ;;		_I2C_2_Master_Stop
  4117 ;;		_I2C_2_Master_Write
  4118 ;; This function is called by:
  4119 ;;		_read_color
  4120 ;;		_calibrate_white
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           	psect	text10
  4125  00529C                     __ptext10:
  4126                           	callstack 0
  4127  00529C                     _color_read_Red:
  4128                           	callstack 24
  4129  00529C                     
  4130                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4131  00529C  ECA9  F02C         	call	_I2C_2_Master_Start	;wreg free
  4132                           
  4133                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4134  0052A0  0E52               	movlw	82
  4135  0052A2  EC93  F02C         	call	_I2C_2_Master_Write
  4136                           
  4137                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4138  0052A6  0EB6               	movlw	182
  4139  0052A8  EC93  F02C         	call	_I2C_2_Master_Write
  4140                           
  4141                           ;color.c: 97:  I2C_2_Master_RepStart();
  4142  0052AC  EC9F  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4143                           
  4144                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4145  0052B0  0E53               	movlw	83
  4146  0052B2  EC93  F02C         	call	_I2C_2_Master_Write
  4147                           
  4148                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4149  0052B6  0E01               	movlw	1
  4150  0052B8  EC54  F02A         	call	_I2C_2_Master_Read
  4151  0052BC  6E07               	movwf	??_color_read_Red^0,c
  4152  0052BE  5007               	movf	??_color_read_Red^0,w,c
  4153  0052C0  6E0A               	movwf	color_read_Red@tmp^0,c
  4154  0052C2  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4155                           
  4156                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4157  0052C4  0E00               	movlw	0
  4158  0052C6  EC54  F02A         	call	_I2C_2_Master_Read
  4159  0052CA  6E07               	movwf	??_color_read_Red^0,c
  4160  0052CC  5007               	movf	??_color_read_Red^0,w,c
  4161  0052CE  6E09               	movwf	(??_color_read_Red+2)^0,c
  4162  0052D0  6A08               	clrf	(??_color_read_Red+1)^0,c
  4163  0052D2  500A               	movf	color_read_Red@tmp^0,w,c
  4164  0052D4  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4165  0052D6  6E0A               	movwf	color_read_Red@tmp^0,c
  4166  0052D8  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4167  0052DA  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4168  0052DC  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4169                           
  4170                           ;color.c: 101:  I2C_2_Master_Stop();
  4171  0052DE  ECA4  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4172  0052E2                     
  4173                           ;color.c: 102:  return tmp;
  4174  0052E2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4175  0052E6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4176  0052EA  0012               	return		;funcret
  4177  0052EC                     __end_of_color_read_Red:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function _color_read_Green *****************
  4181 ;; Defined at:
  4182 ;;		line 119 in file "color.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  tmp             2    9[COMRAM] unsigned int 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2    4[COMRAM] unsigned int 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;Total ram usage:        7 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 3
  4203 ;; This function calls:
  4204 ;;		_I2C_2_Master_Read
  4205 ;;		_I2C_2_Master_RepStart
  4206 ;;		_I2C_2_Master_Start
  4207 ;;		_I2C_2_Master_Stop
  4208 ;;		_I2C_2_Master_Write
  4209 ;; This function is called by:
  4210 ;;		_read_color
  4211 ;;		_calibrate_white
  4212 ;;		_distance_measure
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text11
  4217  0052EC                     __ptext11:
  4218                           	callstack 0
  4219  0052EC                     _color_read_Green:
  4220                           	callstack 24
  4221  0052EC                     
  4222                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4223  0052EC  ECA9  F02C         	call	_I2C_2_Master_Start	;wreg free
  4224                           
  4225                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4226  0052F0  0E52               	movlw	82
  4227  0052F2  EC93  F02C         	call	_I2C_2_Master_Write
  4228                           
  4229                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4230  0052F6  0EB8               	movlw	184
  4231  0052F8  EC93  F02C         	call	_I2C_2_Master_Write
  4232                           
  4233                           ;color.c: 125:  I2C_2_Master_RepStart();
  4234  0052FC  EC9F  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4235                           
  4236                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4237  005300  0E53               	movlw	83
  4238  005302  EC93  F02C         	call	_I2C_2_Master_Write
  4239                           
  4240                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4241  005306  0E01               	movlw	1
  4242  005308  EC54  F02A         	call	_I2C_2_Master_Read
  4243  00530C  6E07               	movwf	??_color_read_Green^0,c
  4244  00530E  5007               	movf	??_color_read_Green^0,w,c
  4245  005310  6E0A               	movwf	color_read_Green@tmp^0,c
  4246  005312  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4247                           
  4248                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4249  005314  0E00               	movlw	0
  4250  005316  EC54  F02A         	call	_I2C_2_Master_Read
  4251  00531A  6E07               	movwf	??_color_read_Green^0,c
  4252  00531C  5007               	movf	??_color_read_Green^0,w,c
  4253  00531E  6E09               	movwf	(??_color_read_Green+2)^0,c
  4254  005320  6A08               	clrf	(??_color_read_Green+1)^0,c
  4255  005322  500A               	movf	color_read_Green@tmp^0,w,c
  4256  005324  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4257  005326  6E0A               	movwf	color_read_Green@tmp^0,c
  4258  005328  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4259  00532A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4260  00532C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4261                           
  4262                           ;color.c: 129:  I2C_2_Master_Stop();
  4263  00532E  ECA4  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4264  005332                     
  4265                           ;color.c: 130:  return tmp;
  4266  005332  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4267  005336  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4268  00533A  0012               	return		;funcret
  4269  00533C                     __end_of_color_read_Green:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _color_read_Blue *****************
  4273 ;; Defined at:
  4274 ;;		line 105 in file "color.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  tmp             2    9[COMRAM] unsigned int 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  2    4[COMRAM] unsigned int 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;Total ram usage:        7 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 3
  4295 ;; This function calls:
  4296 ;;		_I2C_2_Master_Read
  4297 ;;		_I2C_2_Master_RepStart
  4298 ;;		_I2C_2_Master_Start
  4299 ;;		_I2C_2_Master_Stop
  4300 ;;		_I2C_2_Master_Write
  4301 ;; This function is called by:
  4302 ;;		_read_color
  4303 ;;		_calibrate_white
  4304 ;; This function uses a non-reentrant model
  4305 ;;
  4306                           
  4307                           	psect	text12
  4308  00533C                     __ptext12:
  4309                           	callstack 0
  4310  00533C                     _color_read_Blue:
  4311                           	callstack 24
  4312  00533C                     
  4313                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4314  00533C  ECA9  F02C         	call	_I2C_2_Master_Start	;wreg free
  4315                           
  4316                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4317  005340  0E52               	movlw	82
  4318  005342  EC93  F02C         	call	_I2C_2_Master_Write
  4319                           
  4320                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4321  005346  0EBA               	movlw	186
  4322  005348  EC93  F02C         	call	_I2C_2_Master_Write
  4323                           
  4324                           ;color.c: 111:  I2C_2_Master_RepStart();
  4325  00534C  EC9F  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4326                           
  4327                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4328  005350  0E53               	movlw	83
  4329  005352  EC93  F02C         	call	_I2C_2_Master_Write
  4330                           
  4331                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4332  005356  0E01               	movlw	1
  4333  005358  EC54  F02A         	call	_I2C_2_Master_Read
  4334  00535C  6E07               	movwf	??_color_read_Blue^0,c
  4335  00535E  5007               	movf	??_color_read_Blue^0,w,c
  4336  005360  6E0A               	movwf	color_read_Blue@tmp^0,c
  4337  005362  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4338                           
  4339                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4340  005364  0E00               	movlw	0
  4341  005366  EC54  F02A         	call	_I2C_2_Master_Read
  4342  00536A  6E07               	movwf	??_color_read_Blue^0,c
  4343  00536C  5007               	movf	??_color_read_Blue^0,w,c
  4344  00536E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4345  005370  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4346  005372  500A               	movf	color_read_Blue@tmp^0,w,c
  4347  005374  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4348  005376  6E0A               	movwf	color_read_Blue@tmp^0,c
  4349  005378  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4350  00537A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4351  00537C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4352                           
  4353                           ;color.c: 115:  I2C_2_Master_Stop();
  4354  00537E  ECA4  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4355  005382                     
  4356                           ;color.c: 116:  return tmp;
  4357  005382  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4358  005386  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4359  00538A  0012               	return		;funcret
  4360  00538C                     __end_of_color_read_Blue:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _LED_R *****************
  4364 ;; Defined at:
  4365 ;;		line 164 in file "color.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;Total ram usage:        2 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 1
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_color_data_collection
  4390 ;;		_calibrate_white
  4391 ;;		_detect_color
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text13
  4396  0057DC                     __ptext13:
  4397                           	callstack 0
  4398  0057DC                     _LED_R:
  4399                           	callstack 27
  4400  0057DC                     
  4401                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4402  0057DC  827F               	bsf	127,1,c	;volatile
  4403                           
  4404                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4405  0057DE  9E7E               	bcf	126,7,c	;volatile
  4406                           
  4407                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4408  0057E0  9879               	bcf	121,4,c	;volatile
  4409  0057E2                     
  4410                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4411  0057E2  0E11               	movlw	17
  4412  0057E4  6E02               	movwf	(??_LED_R+1)^0,c
  4413  0057E6  0E3C               	movlw	60
  4414  0057E8  6E01               	movwf	??_LED_R^0,c
  4415  0057EA  0ECB               	movlw	203
  4416  0057EC                     u5697:
  4417  0057EC  2EE8               	decfsz	wreg,f,c
  4418  0057EE  D7FE               	bra	u5697
  4419  0057F0  2E01               	decfsz	??_LED_R^0,f,c
  4420  0057F2  D7FC               	bra	u5697
  4421  0057F4  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4422  0057F6  D7FA               	bra	u5697
  4423  0057F8  F000               	nop	
  4424  0057FA  0012               	return		;funcret
  4425  0057FC                     __end_of_LED_R:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _LED_OFF *****************
  4429 ;; Defined at:
  4430 ;;		line 155 in file "color.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;		None
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      void 
  4437 ;; Registers used:
  4438 ;;		wreg
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;Total ram usage:        2 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 1
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_calibrate_white
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text14
  4459  0057FC                     __ptext14:
  4460                           	callstack 0
  4461  0057FC                     _LED_OFF:
  4462                           	callstack 27
  4463  0057FC                     
  4464                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4465  0057FC  927F               	bcf	127,1,c	;volatile
  4466                           
  4467                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4468  0057FE  9E7E               	bcf	126,7,c	;volatile
  4469                           
  4470                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4471  005800  9879               	bcf	121,4,c	;volatile
  4472  005802                     
  4473                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4474  005802  0E11               	movlw	17
  4475  005804  6E02               	movwf	(??_LED_OFF+1)^0,c
  4476  005806  0E3C               	movlw	60
  4477  005808  6E01               	movwf	??_LED_OFF^0,c
  4478  00580A  0ECB               	movlw	203
  4479  00580C                     u5707:
  4480  00580C  2EE8               	decfsz	wreg,f,c
  4481  00580E  D7FE               	bra	u5707
  4482  005810  2E01               	decfsz	??_LED_OFF^0,f,c
  4483  005812  D7FC               	bra	u5707
  4484  005814  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4485  005816  D7FA               	bra	u5707
  4486  005818  F000               	nop	
  4487  00581A  0012               	return		;funcret
  4488  00581C                     __end_of_LED_OFF:
  4489                           	callstack 0
  4490                           
  4491 ;; *************** function _LED_G *****************
  4492 ;; Defined at:
  4493 ;;		line 191 in file "color.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;Total ram usage:        2 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 1
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_color_data_collection
  4518 ;;		_calibrate_white
  4519 ;;		_detect_color
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           	psect	text15
  4524  00581C                     __ptext15:
  4525                           	callstack 0
  4526  00581C                     _LED_G:
  4527                           	callstack 27
  4528  00581C                     
  4529                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4530  00581C  927F               	bcf	127,1,c	;volatile
  4531                           
  4532                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4533  00581E  9E7E               	bcf	126,7,c	;volatile
  4534                           
  4535                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4536  005820  8879               	bsf	121,4,c	;volatile
  4537  005822                     
  4538                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4539  005822  0E11               	movlw	17
  4540  005824  6E02               	movwf	(??_LED_G+1)^0,c
  4541  005826  0E3C               	movlw	60
  4542  005828  6E01               	movwf	??_LED_G^0,c
  4543  00582A  0ECB               	movlw	203
  4544  00582C                     u5717:
  4545  00582C  2EE8               	decfsz	wreg,f,c
  4546  00582E  D7FE               	bra	u5717
  4547  005830  2E01               	decfsz	??_LED_G^0,f,c
  4548  005832  D7FC               	bra	u5717
  4549  005834  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4550  005836  D7FA               	bra	u5717
  4551  005838  F000               	nop	
  4552  00583A  0012               	return		;funcret
  4553  00583C                     __end_of_LED_G:
  4554                           	callstack 0
  4555                           
  4556 ;; *************** function _LED_B *****************
  4557 ;; Defined at:
  4558 ;;		line 182 in file "color.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;		None
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;		None
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4576 ;;Total ram usage:        2 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; Hardware stack levels required when called: 1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_color_data_collection
  4583 ;;		_calibrate_white
  4584 ;;		_detect_color
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text16
  4589  00583C                     __ptext16:
  4590                           	callstack 0
  4591  00583C                     _LED_B:
  4592                           	callstack 27
  4593  00583C                     
  4594                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4595  00583C  927F               	bcf	127,1,c	;volatile
  4596                           
  4597                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4598  00583E  8E7E               	bsf	126,7,c	;volatile
  4599                           
  4600                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4601  005840  9879               	bcf	121,4,c	;volatile
  4602  005842                     
  4603                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4604  005842  0E11               	movlw	17
  4605  005844  6E02               	movwf	(??_LED_B+1)^0,c
  4606  005846  0E3C               	movlw	60
  4607  005848  6E01               	movwf	??_LED_B^0,c
  4608  00584A  0ECB               	movlw	203
  4609  00584C                     u5727:
  4610  00584C  2EE8               	decfsz	wreg,f,c
  4611  00584E  D7FE               	bra	u5727
  4612  005850  2E01               	decfsz	??_LED_B^0,f,c
  4613  005852  D7FC               	bra	u5727
  4614  005854  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4615  005856  D7FA               	bra	u5727
  4616  005858  F000               	nop	
  4617  00585A  0012               	return		;funcret
  4618  00585C                     __end_of_LED_B:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function _amb_light_measure *****************
  4622 ;; Defined at:
  4623 ;;		line 376 in file "color.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4626 ;;		 -> main@rgb(8), main@amb(8), 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4629 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4630 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4631 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4632 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2   10[BANK0 ] unsigned int 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4642 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;Total ram usage:       14 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 5
  4649 ;; This function calls:
  4650 ;;		_LED_C
  4651 ;;		___fldiv
  4652 ;;		___xxtofl
  4653 ;;		_color_read_Clear
  4654 ;;		_lroundf
  4655 ;;		_toggle_light
  4656 ;; This function is called by:
  4657 ;;		_main
  4658 ;;		_test_function
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text17
  4663  0046F4                     __ptext17:
  4664                           	callstack 0
  4665  0046F4                     _amb_light_measure:
  4666                           	callstack 24
  4667  0046F4  0E00               	movlw	0
  4668  0046F6  0100               	movlb	0	; () banked
  4669  0046F8  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4670  0046FA  0E00               	movlw	0
  4671  0046FC  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4672  0046FE  0E00               	movlw	0
  4673  004700  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4674  004702  0E00               	movlw	0
  4675  004704  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4676  004706  0E00               	movlw	0
  4677  004708  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4678  00470A  0E00               	movlw	0
  4679  00470C  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4680  00470E                     
  4681                           ; BSR set to: 0
  4682                           ;color.c: 379:     toggle_light(2,2);
  4683  00470E  0E02               	movlw	2
  4684  004710  6E01               	movwf	toggle_light@toggletime^0,c
  4685  004712  0E02               	movlw	2
  4686  004714  EC3F  F01A         	call	_toggle_light
  4687  004718                     
  4688                           ;color.c: 380:     LED_C();
  4689  004718  EC2E  F02C         	call	_LED_C	;wreg free
  4690  00471C                     
  4691                           ;color.c: 381:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4692  00471C  0E29               	movlw	41
  4693  00471E  0100               	movlb	0	; () banked
  4694  004720  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4695  004722  0E96               	movlw	150
  4696  004724  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4697  004726  0E7F               	movlw	127
  4698  004728                     u5737:
  4699  004728  2EE8               	decfsz	wreg,f,c
  4700  00472A  D7FE               	bra	u5737
  4701  00472C  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4702  00472E  D7FC               	bra	u5737
  4703  004730  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4704  004732  D7FA               	bra	u5737
  4705  004734                     
  4706                           ;color.c: 383:     CC_amb_1 = color_read_Clear();
  4707  004734  ECC6  F029         	call	_color_read_Clear	;wreg free
  4708  004738  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4709  00473C  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4710  004740                     
  4711                           ;color.c: 384:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4712  004740  0E11               	movlw	17
  4713  004742  0100               	movlb	0	; () banked
  4714  004744  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4715  004746  0E3C               	movlw	60
  4716  004748  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4717  00474A  0ECB               	movlw	203
  4718  00474C                     u5747:
  4719  00474C  2EE8               	decfsz	wreg,f,c
  4720  00474E  D7FE               	bra	u5747
  4721  004750  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4722  004752  D7FC               	bra	u5747
  4723  004754  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4724  004756  D7FA               	bra	u5747
  4725  004758                     
  4726                           ;color.c: 386:     CC_amb_2 = color_read_Clear();
  4727  004758  ECC6  F029         	call	_color_read_Clear	;wreg free
  4728  00475C  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4729  004760  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4730  004764                     
  4731                           ;color.c: 387:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4732  004764  0E11               	movlw	17
  4733  004766  0100               	movlb	0	; () banked
  4734  004768  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4735  00476A  0E3C               	movlw	60
  4736  00476C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4737  00476E  0ECB               	movlw	203
  4738  004770                     u5757:
  4739  004770  2EE8               	decfsz	wreg,f,c
  4740  004772  D7FE               	bra	u5757
  4741  004774  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4742  004776  D7FC               	bra	u5757
  4743  004778  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4744  00477A  D7FA               	bra	u5757
  4745  00477C                     
  4746                           ;color.c: 389:     CC_amb_3 = color_read_Clear();
  4747  00477C  ECC6  F029         	call	_color_read_Clear	;wreg free
  4748  004780  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  4749  004784  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  4750  004788                     
  4751                           ;color.c: 390:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4752  004788  0E11               	movlw	17
  4753  00478A  0100               	movlb	0	; () banked
  4754  00478C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4755  00478E  0E3C               	movlw	60
  4756  004790  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4757  004792  0ECB               	movlw	203
  4758  004794                     u5767:
  4759  004794  2EE8               	decfsz	wreg,f,c
  4760  004796  D7FE               	bra	u5767
  4761  004798  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4762  00479A  D7FC               	bra	u5767
  4763  00479C  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4764  00479E  D7FA               	bra	u5767
  4765  0047A0                     
  4766                           ;color.c: 392:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  4767  0047A0  0100               	movlb	0	; () banked
  4768  0047A2  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  4769  0047A4  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  4770  0047A6  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4771  0047A8  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  4772  0047AA  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  4773  0047AC  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4774  0047AE  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  4775  0047B0  276C               	addwf	??_amb_light_measure& (0+255),f,b
  4776  0047B2  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  4777  0047B4  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  4778  0047B6  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  4779  0047BA  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  4780  0047BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4781  0047C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4782  0047C2  0E00               	movlw	0
  4783  0047C4  EC5F  F01E         	call	___xxtofl
  4784  0047C8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4785  0047CC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4786  0047D0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4787  0047D4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4788  0047D8  0E00               	movlw	0
  4789  0047DA  6E13               	movwf	___fldiv@a^0,c
  4790  0047DC  0E00               	movlw	0
  4791  0047DE  6E14               	movwf	(___fldiv@a+1)^0,c
  4792  0047E0  0E40               	movlw	64
  4793  0047E2  6E15               	movwf	(___fldiv@a+2)^0,c
  4794  0047E4  0E40               	movlw	64
  4795  0047E6  6E16               	movwf	(___fldiv@a+3)^0,c
  4796  0047E8  EC34  F014         	call	___fldiv	;wreg free
  4797  0047EC  C00F  F066         	movff	?___fldiv,lroundf@x
  4798  0047F0  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  4799  0047F4  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  4800  0047F8  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  4801  0047FC  EC15  F02B         	call	_lroundf	;wreg free
  4802  004800  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  4803  004804  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  4804  004808                     
  4805                           ;color.c: 394:     toggle_light(2,2);
  4806  004808  0E02               	movlw	2
  4807  00480A  6E01               	movwf	toggle_light@toggletime^0,c
  4808  00480C  0E02               	movlw	2
  4809  00480E  EC3F  F01A         	call	_toggle_light
  4810  004812                     
  4811                           ;color.c: 396:     return CC_amb_ave;
  4812  004812  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  4813  004816  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  4814  00481A  0012               	return		;funcret
  4815  00481C                     __end_of_amb_light_measure:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _lroundf *****************
  4819 ;; Defined at:
  4820 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  x               4    6[BANK0 ] float 
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  4    6[BANK0 ] long 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4834 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;Total ram usage:        4 bytes
  4839 ;; Hardware stack levels used: 1
  4840 ;; Hardware stack levels required when called: 4
  4841 ;; This function calls:
  4842 ;;		___fltol
  4843 ;;		_roundf
  4844 ;; This function is called by:
  4845 ;;		_detect_color
  4846 ;;		_amb_light_measure
  4847 ;;		_distance_measure
  4848 ;;		_check_color_reading
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text18
  4853  00562A                     __ptext18:
  4854                           	callstack 0
  4855  00562A                     _lroundf:
  4856                           	callstack 24
  4857  00562A  C066  F041         	movff	lroundf@x,roundf@x
  4858  00562E  C067  F042         	movff	lroundf@x+1,roundf@x+1
  4859  005632  C068  F043         	movff	lroundf@x+2,roundf@x+2
  4860  005636  C069  F044         	movff	lroundf@x+3,roundf@x+3
  4861  00563A  EC5D  F012         	call	_roundf	;wreg free
  4862  00563E  C041  F05B         	movff	?_roundf,___fltol@f1
  4863  005642  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  4864  005646  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  4865  00564A  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  4866  00564E  EC0E  F024         	call	___fltol	;wreg free
  4867  005652  C05B  F066         	movff	?___fltol,?_lroundf
  4868  005656  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  4869  00565A  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  4870  00565E  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  4871  005662  0012               	return		;funcret
  4872  005664                     __end_of_lroundf:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _roundf *****************
  4876 ;; Defined at:
  4877 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  x               4   64[COMRAM] float 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  y               4   86[COMRAM] float 
  4882 ;;  u               4   82[COMRAM] struct .
  4883 ;;  e               2   76[COMRAM] int 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  4   64[COMRAM] float 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4894 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;Total ram usage:       26 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; Hardware stack levels required when called: 3
  4900 ;; This function calls:
  4901 ;;		___fladd
  4902 ;;		___flge
  4903 ;;		___flmul
  4904 ;;		___flneg
  4905 ;;		___flsub
  4906 ;; This function is called by:
  4907 ;;		_lroundf
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text19
  4912  0024BA                     __ptext19:
  4913                           	callstack 0
  4914  0024BA                     _roundf:
  4915                           	callstack 24
  4916  0024BA  C150  F053         	movff	roundf@F527,roundf@u
  4917  0024BE  C151  F054         	movff	roundf@F527+1,roundf@u+1
  4918  0024C2  C152  F055         	movff	roundf@F527+2,roundf@u+2
  4919  0024C6  C153  F056         	movff	roundf@F527+3,roundf@u+3
  4920  0024CA  C041  F053         	movff	roundf@x,roundf@u
  4921  0024CE  C042  F054         	movff	roundf@x+1,roundf@u+1
  4922  0024D2  C043  F055         	movff	roundf@x+2,roundf@u+2
  4923  0024D6  C044  F056         	movff	roundf@x+3,roundf@u+3
  4924  0024DA  C053  F045         	movff	roundf@u,??_roundf
  4925  0024DE  C054  F046         	movff	roundf@u+1,??_roundf+1
  4926  0024E2  C055  F047         	movff	roundf@u+2,??_roundf+2
  4927  0024E6  C056  F048         	movff	roundf@u+3,??_roundf+3
  4928  0024EA  0E18               	movlw	24
  4929  0024EC  EF7D  F012         	goto	u4140
  4930  0024F0                     u4145:
  4931  0024F0  90D8               	bcf	status,0,c
  4932  0024F2  3248               	rrcf	(??_roundf+3)^0,f,c
  4933  0024F4  3247               	rrcf	(??_roundf+2)^0,f,c
  4934  0024F6  3246               	rrcf	(??_roundf+1)^0,f,c
  4935  0024F8  3245               	rrcf	??_roundf^0,f,c
  4936  0024FA                     u4140:
  4937  0024FA  2EE8               	decfsz	wreg,f,c
  4938  0024FC  EF78  F012         	goto	u4145
  4939  002500  5045               	movf	??_roundf^0,w,c
  4940  002502  6E4D               	movwf	roundf@e^0,c
  4941  002504  6A4E               	clrf	(roundf@e+1)^0,c
  4942  002506  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4943  002508  EF8F  F012         	goto	u4151
  4944  00250C  504E               	movf	(roundf@e+1)^0,w,c
  4945  00250E  E109               	bnz	u4150
  4946  002510  0E96               	movlw	150
  4947  002512  5C4D               	subwf	roundf@e^0,w,c
  4948  002514  A0D8               	btfss	status,0,c
  4949  002516  EF8F  F012         	goto	u4151
  4950  00251A  EF91  F012         	goto	u4150
  4951  00251E                     u4151:
  4952  00251E  EF9B  F012         	goto	l4408
  4953  002522                     u4150:
  4954  002522  C041  F041         	movff	roundf@x,?_roundf
  4955  002526  C042  F042         	movff	roundf@x+1,?_roundf+1
  4956  00252A  C043  F043         	movff	roundf@x+2,?_roundf+2
  4957  00252E  C044  F044         	movff	roundf@x+3,?_roundf+3
  4958  002532  EF33  F014         	goto	l1539
  4959  002536                     l4408:
  4960  002536  C053  F045         	movff	roundf@u,??_roundf
  4961  00253A  C054  F046         	movff	roundf@u+1,??_roundf+1
  4962  00253E  C055  F047         	movff	roundf@u+2,??_roundf+2
  4963  002542  C056  F048         	movff	roundf@u+3,??_roundf+3
  4964  002546  0E20               	movlw	32
  4965  002548  EFAB  F012         	goto	u4160
  4966  00254C                     u4165:
  4967  00254C  90D8               	bcf	status,0,c
  4968  00254E  3248               	rrcf	(??_roundf+3)^0,f,c
  4969  002550  3247               	rrcf	(??_roundf+2)^0,f,c
  4970  002552  3246               	rrcf	(??_roundf+1)^0,f,c
  4971  002554  3245               	rrcf	??_roundf^0,f,c
  4972  002556                     u4160:
  4973  002556  2EE8               	decfsz	wreg,f,c
  4974  002558  EFA6  F012         	goto	u4165
  4975  00255C  5045               	movf	??_roundf^0,w,c
  4976  00255E  1046               	iorwf	(??_roundf+1)^0,w,c
  4977  002560  1047               	iorwf	(??_roundf+2)^0,w,c
  4978  002562  1048               	iorwf	(??_roundf+3)^0,w,c
  4979  002564  B4D8               	btfsc	status,2,c
  4980  002566  EFB7  F012         	goto	u4171
  4981  00256A  EFB9  F012         	goto	u4170
  4982  00256E                     u4171:
  4983  00256E  EFCB  F012         	goto	l4412
  4984  002572                     u4170:
  4985  002572  C041  F001         	movff	roundf@x,___flneg@f1
  4986  002576  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  4987  00257A  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  4988  00257E  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  4989  002582  EC32  F02B         	call	___flneg	;wreg free
  4990  002586  C001  F041         	movff	?___flneg,roundf@x
  4991  00258A  C002  F042         	movff	?___flneg+1,roundf@x+1
  4992  00258E  C003  F043         	movff	?___flneg+2,roundf@x+2
  4993  002592  C004  F044         	movff	?___flneg+3,roundf@x+3
  4994  002596                     l4412:
  4995  002596  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4996  002598  EFD9  F012         	goto	u4180
  4997  00259C  504E               	movf	(roundf@e+1)^0,w,c
  4998  00259E  E107               	bnz	u4181
  4999  0025A0  0E7E               	movlw	126
  5000  0025A2  5C4D               	subwf	roundf@e^0,w,c
  5001  0025A4  B0D8               	btfsc	status,0,c
  5002  0025A6  EFD7  F012         	goto	u4181
  5003  0025AA  EFD9  F012         	goto	u4180
  5004  0025AE                     u4181:
  5005  0025AE  EFF5  F012         	goto	l4418
  5006  0025B2                     u4180:
  5007  0025B2  C053  F028         	movff	roundf@u,___flmul@b
  5008  0025B6  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5009  0025BA  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5010  0025BE  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5011  0025C2  0E00               	movlw	0
  5012  0025C4  6E2C               	movwf	___flmul@a^0,c
  5013  0025C6  0E00               	movlw	0
  5014  0025C8  6E2D               	movwf	(___flmul@a+1)^0,c
  5015  0025CA  0E00               	movlw	0
  5016  0025CC  6E2E               	movwf	(___flmul@a+2)^0,c
  5017  0025CE  0E00               	movlw	0
  5018  0025D0  6E2F               	movwf	(___flmul@a+3)^0,c
  5019  0025D2  EC48  F010         	call	___flmul	;wreg free
  5020  0025D6  C028  F041         	movff	?___flmul,?_roundf
  5021  0025DA  C029  F042         	movff	?___flmul+1,?_roundf+1
  5022  0025DE  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5023  0025E2  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5024  0025E6  EF33  F014         	goto	l1539
  5025  0025EA                     l4418:
  5026  0025EA  0E00               	movlw	0
  5027  0025EC  6E05               	movwf	___fladd@a^0,c
  5028  0025EE  0E00               	movlw	0
  5029  0025F0  6E06               	movwf	(___fladd@a+1)^0,c
  5030  0025F2  0E00               	movlw	0
  5031  0025F4  6E07               	movwf	(___fladd@a+2)^0,c
  5032  0025F6  0E4B               	movlw	75
  5033  0025F8  6E08               	movwf	(___fladd@a+3)^0,c
  5034  0025FA  C041  F001         	movff	roundf@x,___fladd@b
  5035  0025FE  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5036  002602  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5037  002606  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5038  00260A  ECE8  F00D         	call	___fladd	;wreg free
  5039  00260E  C001  F04F         	movff	?___fladd,_roundf$3236
  5040  002612  C002  F050         	movff	?___fladd+1,_roundf$3236+1
  5041  002616  C003  F051         	movff	?___fladd+2,_roundf$3236+2
  5042  00261A  C004  F052         	movff	?___fladd+3,_roundf$3236+3
  5043  00261E  0E00               	movlw	0
  5044  002620  6E05               	movwf	___fladd@a^0,c
  5045  002622  0E00               	movlw	0
  5046  002624  6E06               	movwf	(___fladd@a+1)^0,c
  5047  002626  0E00               	movlw	0
  5048  002628  6E07               	movwf	(___fladd@a+2)^0,c
  5049  00262A  0ECB               	movlw	203
  5050  00262C  6E08               	movwf	(___fladd@a+3)^0,c
  5051  00262E  C04F  F001         	movff	_roundf$3236,___fladd@b
  5052  002632  C050  F002         	movff	_roundf$3236+1,___fladd@b+1
  5053  002636  C051  F003         	movff	_roundf$3236+2,___fladd@b+2
  5054  00263A  C052  F004         	movff	_roundf$3236+3,___fladd@b+3
  5055  00263E  ECE8  F00D         	call	___fladd	;wreg free
  5056  002642  C001  F049         	movff	?___fladd,_roundf$3237
  5057  002646  C002  F04A         	movff	?___fladd+1,_roundf$3237+1
  5058  00264A  C003  F04B         	movff	?___fladd+2,_roundf$3237+2
  5059  00264E  C004  F04C         	movff	?___fladd+3,_roundf$3237+3
  5060  002652  C049  F011         	movff	_roundf$3237,___flsub@b
  5061  002656  C04A  F012         	movff	_roundf$3237+1,___flsub@b+1
  5062  00265A  C04B  F013         	movff	_roundf$3237+2,___flsub@b+2
  5063  00265E  C04C  F014         	movff	_roundf$3237+3,___flsub@b+3
  5064  002662  C041  F015         	movff	roundf@x,___flsub@a
  5065  002666  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5066  00266A  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5067  00266E  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5068  002672  ECEE  F029         	call	___flsub	;wreg free
  5069  002676  C011  F057         	movff	?___flsub,roundf@y
  5070  00267A  C012  F058         	movff	?___flsub+1,roundf@y+1
  5071  00267E  C013  F059         	movff	?___flsub+2,roundf@y+2
  5072  002682  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5073  002686  0E00               	movlw	0
  5074  002688  6E01               	movwf	___flge@ff1^0,c
  5075  00268A  0E00               	movlw	0
  5076  00268C  6E02               	movwf	(___flge@ff1+1)^0,c
  5077  00268E  0E00               	movlw	0
  5078  002690  6E03               	movwf	(___flge@ff1+2)^0,c
  5079  002692  0E3F               	movlw	63
  5080  002694  6E04               	movwf	(___flge@ff1+3)^0,c
  5081  002696  C057  F005         	movff	roundf@y,___flge@ff2
  5082  00269A  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5083  00269E  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5084  0026A2  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5085  0026A6  EC92  F024         	call	___flge	;wreg free
  5086  0026AA  B0D8               	btfsc	status,0,c
  5087  0026AC  EF5A  F013         	goto	u4191
  5088  0026B0  EF5C  F013         	goto	u4190
  5089  0026B4                     u4191:
  5090  0026B4  EF92  F013         	goto	l4422
  5091  0026B8                     u4190:
  5092  0026B8  C041  F005         	movff	roundf@x,___fladd@a
  5093  0026BC  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5094  0026C0  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5095  0026C4  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5096  0026C8  C057  F001         	movff	roundf@y,___fladd@b
  5097  0026CC  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5098  0026D0  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5099  0026D4  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5100  0026D8  ECE8  F00D         	call	___fladd	;wreg free
  5101  0026DC  C001  F04F         	movff	?___fladd,_roundf$3236
  5102  0026E0  C002  F050         	movff	?___fladd+1,_roundf$3236+1
  5103  0026E4  C003  F051         	movff	?___fladd+2,_roundf$3236+2
  5104  0026E8  C004  F052         	movff	?___fladd+3,_roundf$3236+3
  5105  0026EC  C04F  F001         	movff	_roundf$3236,___fladd@b
  5106  0026F0  C050  F002         	movff	_roundf$3236+1,___fladd@b+1
  5107  0026F4  C051  F003         	movff	_roundf$3236+2,___fladd@b+2
  5108  0026F8  C052  F004         	movff	_roundf$3236+3,___fladd@b+3
  5109  0026FC  0E00               	movlw	0
  5110  0026FE  6E05               	movwf	___fladd@a^0,c
  5111  002700  0E00               	movlw	0
  5112  002702  6E06               	movwf	(___fladd@a+1)^0,c
  5113  002704  0E80               	movlw	128
  5114  002706  6E07               	movwf	(___fladd@a+2)^0,c
  5115  002708  0EBF               	movlw	191
  5116  00270A  6E08               	movwf	(___fladd@a+3)^0,c
  5117  00270C  ECE8  F00D         	call	___fladd	;wreg free
  5118  002710  C001  F057         	movff	?___fladd,roundf@y
  5119  002714  C002  F058         	movff	?___fladd+1,roundf@y+1
  5120  002718  C003  F059         	movff	?___fladd+2,roundf@y+2
  5121  00271C  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5122  002720  EFFB  F013         	goto	l4428
  5123  002724                     l4422:
  5124  002724  0E00               	movlw	0
  5125  002726  6E01               	movwf	___flge@ff1^0,c
  5126  002728  0E00               	movlw	0
  5127  00272A  6E02               	movwf	(___flge@ff1+1)^0,c
  5128  00272C  0E00               	movlw	0
  5129  00272E  6E03               	movwf	(___flge@ff1+2)^0,c
  5130  002730  0EBF               	movlw	191
  5131  002732  6E04               	movwf	(___flge@ff1+3)^0,c
  5132  002734  C057  F005         	movff	roundf@y,___flge@ff2
  5133  002738  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5134  00273C  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5135  002740  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5136  002744  EC92  F024         	call	___flge	;wreg free
  5137  002748  A0D8               	btfss	status,0,c
  5138  00274A  EFA9  F013         	goto	u4201
  5139  00274E  EFAB  F013         	goto	u4200
  5140  002752                     u4201:
  5141  002752  EFE1  F013         	goto	l4426
  5142  002756                     u4200:
  5143  002756  C041  F005         	movff	roundf@x,___fladd@a
  5144  00275A  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5145  00275E  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5146  002762  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5147  002766  C057  F001         	movff	roundf@y,___fladd@b
  5148  00276A  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5149  00276E  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5150  002772  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5151  002776  ECE8  F00D         	call	___fladd	;wreg free
  5152  00277A  C001  F04F         	movff	?___fladd,_roundf$3236
  5153  00277E  C002  F050         	movff	?___fladd+1,_roundf$3236+1
  5154  002782  C003  F051         	movff	?___fladd+2,_roundf$3236+2
  5155  002786  C004  F052         	movff	?___fladd+3,_roundf$3236+3
  5156  00278A  C04F  F001         	movff	_roundf$3236,___fladd@b
  5157  00278E  C050  F002         	movff	_roundf$3236+1,___fladd@b+1
  5158  002792  C051  F003         	movff	_roundf$3236+2,___fladd@b+2
  5159  002796  C052  F004         	movff	_roundf$3236+3,___fladd@b+3
  5160  00279A  0E00               	movlw	0
  5161  00279C  6E05               	movwf	___fladd@a^0,c
  5162  00279E  0E00               	movlw	0
  5163  0027A0  6E06               	movwf	(___fladd@a+1)^0,c
  5164  0027A2  0E80               	movlw	128
  5165  0027A4  6E07               	movwf	(___fladd@a+2)^0,c
  5166  0027A6  0E3F               	movlw	63
  5167  0027A8  6E08               	movwf	(___fladd@a+3)^0,c
  5168  0027AA  ECE8  F00D         	call	___fladd	;wreg free
  5169  0027AE  C001  F057         	movff	?___fladd,roundf@y
  5170  0027B2  C002  F058         	movff	?___fladd+1,roundf@y+1
  5171  0027B6  C003  F059         	movff	?___fladd+2,roundf@y+2
  5172  0027BA  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5173  0027BE  EFFB  F013         	goto	l4428
  5174  0027C2                     l4426:
  5175  0027C2  C057  F001         	movff	roundf@y,___fladd@b
  5176  0027C6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5177  0027CA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5178  0027CE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5179  0027D2  C041  F005         	movff	roundf@x,___fladd@a
  5180  0027D6  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5181  0027DA  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5182  0027DE  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5183  0027E2  ECE8  F00D         	call	___fladd	;wreg free
  5184  0027E6  C001  F057         	movff	?___fladd,roundf@y
  5185  0027EA  C002  F058         	movff	?___fladd+1,roundf@y+1
  5186  0027EE  C003  F059         	movff	?___fladd+2,roundf@y+2
  5187  0027F2  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5188  0027F6                     l4428:
  5189  0027F6  C053  F045         	movff	roundf@u,??_roundf
  5190  0027FA  C054  F046         	movff	roundf@u+1,??_roundf+1
  5191  0027FE  C055  F047         	movff	roundf@u+2,??_roundf+2
  5192  002802  C056  F048         	movff	roundf@u+3,??_roundf+3
  5193  002806  0E20               	movlw	32
  5194  002808  EF0B  F014         	goto	u4210
  5195  00280C                     u4215:
  5196  00280C  90D8               	bcf	status,0,c
  5197  00280E  3248               	rrcf	(??_roundf+3)^0,f,c
  5198  002810  3247               	rrcf	(??_roundf+2)^0,f,c
  5199  002812  3246               	rrcf	(??_roundf+1)^0,f,c
  5200  002814  3245               	rrcf	??_roundf^0,f,c
  5201  002816                     u4210:
  5202  002816  2EE8               	decfsz	wreg,f,c
  5203  002818  EF06  F014         	goto	u4215
  5204  00281C  5045               	movf	??_roundf^0,w,c
  5205  00281E  1046               	iorwf	(??_roundf+1)^0,w,c
  5206  002820  1047               	iorwf	(??_roundf+2)^0,w,c
  5207  002822  1048               	iorwf	(??_roundf+3)^0,w,c
  5208  002824  B4D8               	btfsc	status,2,c
  5209  002826  EF17  F014         	goto	u4221
  5210  00282A  EF19  F014         	goto	u4220
  5211  00282E                     u4221:
  5212  00282E  EF2B  F014         	goto	l4432
  5213  002832                     u4220:
  5214  002832  C057  F001         	movff	roundf@y,___flneg@f1
  5215  002836  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5216  00283A  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5217  00283E  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5218  002842  EC32  F02B         	call	___flneg	;wreg free
  5219  002846  C001  F057         	movff	?___flneg,roundf@y
  5220  00284A  C002  F058         	movff	?___flneg+1,roundf@y+1
  5221  00284E  C003  F059         	movff	?___flneg+2,roundf@y+2
  5222  002852  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5223  002856                     l4432:
  5224  002856  C057  F041         	movff	roundf@y,?_roundf
  5225  00285A  C058  F042         	movff	roundf@y+1,?_roundf+1
  5226  00285E  C059  F043         	movff	roundf@y+2,?_roundf+2
  5227  002862  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5228  002866                     l1539:
  5229  002866  0012               	return		;funcret
  5230  002868                     __end_of_roundf:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function ___flsub *****************
  5234 ;; Defined at:
  5235 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  b               4   16[COMRAM] float 
  5238 ;;  a               4   20[COMRAM] float 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;		None
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  4   16[COMRAM] float 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5250 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;Total ram usage:        8 bytes
  5255 ;; Hardware stack levels used: 1
  5256 ;; Hardware stack levels required when called: 2
  5257 ;; This function calls:
  5258 ;;		___fladd
  5259 ;; This function is called by:
  5260 ;;		_roundf
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text20
  5265  0053DC                     __ptext20:
  5266                           	callstack 0
  5267  0053DC                     ___flsub:
  5268                           	callstack 24
  5269  0053DC  0E00               	movlw	0
  5270  0053DE  1A15               	xorwf	___flsub@a^0,f,c
  5271  0053E0  0E00               	movlw	0
  5272  0053E2  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5273  0053E4  0E00               	movlw	0
  5274  0053E6  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5275  0053E8  0E80               	movlw	128
  5276  0053EA  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5277  0053EC  C011  F001         	movff	___flsub@b,___fladd@b
  5278  0053F0  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5279  0053F4  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5280  0053F8  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5281  0053FC  C015  F005         	movff	___flsub@a,___fladd@a
  5282  005400  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5283  005404  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5284  005408  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5285  00540C  ECE8  F00D         	call	___fladd	;wreg free
  5286  005410  C001  F011         	movff	?___fladd,?___flsub
  5287  005414  C002  F012         	movff	?___fladd+1,?___flsub+1
  5288  005418  C003  F013         	movff	?___fladd+2,?___flsub+2
  5289  00541C  C004  F014         	movff	?___fladd+3,?___flsub+3
  5290  005420  0012               	return		;funcret
  5291  005422                     __end_of___flsub:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function ___fladd *****************
  5295 ;; Defined at:
  5296 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  b               4    0[COMRAM] float 
  5299 ;;  a               4    4[COMRAM] float 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  grs             1   15[COMRAM] unsigned char 
  5302 ;;  bexp            1   14[COMRAM] unsigned char 
  5303 ;;  aexp            1   13[COMRAM] unsigned char 
  5304 ;;  signs           1   12[COMRAM] unsigned char 
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  4    0[COMRAM] unsigned char 
  5307 ;; Registers used:
  5308 ;;		wreg, status,2, status,0
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5314 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;Total ram usage:       16 bytes
  5319 ;; Hardware stack levels used: 1
  5320 ;; Hardware stack levels required when called: 1
  5321 ;; This function calls:
  5322 ;;		Nothing
  5323 ;; This function is called by:
  5324 ;;		___flsub
  5325 ;;		_roundf
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text21
  5330  001BD0                     __ptext21:
  5331                           	callstack 0
  5332  001BD0                     ___fladd:
  5333                           	callstack 24
  5334  001BD0  5004               	movf	(___fladd@b+3)^0,w,c
  5335  001BD2  0B80               	andlw	128
  5336  001BD4  6E0D               	movwf	___fladd@signs^0,c
  5337  001BD6  5004               	movf	(___fladd@b+3)^0,w,c
  5338  001BD8  2404               	addwf	(___fladd@b+3)^0,w,c
  5339  001BDA  6E0F               	movwf	___fladd@bexp^0,c
  5340  001BDC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5341  001BDE  EFF3  F00D         	goto	u3281
  5342  001BE2  EFF5  F00D         	goto	u3280
  5343  001BE6                     u3281:
  5344  001BE6  EFF6  F00D         	goto	l3828
  5345  001BEA                     u3280:
  5346  001BEA  800F               	bsf	___fladd@bexp^0,0,c
  5347  001BEC                     l3828:
  5348  001BEC  500F               	movf	___fladd@bexp^0,w,c
  5349  001BEE  B4D8               	btfsc	status,2,c
  5350  001BF0  EFFC  F00D         	goto	u3291
  5351  001BF4  EFFE  F00D         	goto	u3290
  5352  001BF8                     u3291:
  5353  001BF8  EF13  F00E         	goto	l3838
  5354  001BFC                     u3290:
  5355  001BFC  280F               	incf	___fladd@bexp^0,w,c
  5356  001BFE  A4D8               	btfss	status,2,c
  5357  001C00  EF04  F00E         	goto	u3301
  5358  001C04  EF06  F00E         	goto	u3300
  5359  001C08                     u3301:
  5360  001C08  EF0E  F00E         	goto	l3834
  5361  001C0C                     u3300:
  5362  001C0C  0E00               	movlw	0
  5363  001C0E  6E01               	movwf	___fladd@b^0,c
  5364  001C10  0E00               	movlw	0
  5365  001C12  6E02               	movwf	(___fladd@b+1)^0,c
  5366  001C14  0E00               	movlw	0
  5367  001C16  6E03               	movwf	(___fladd@b+2)^0,c
  5368  001C18  0E00               	movlw	0
  5369  001C1A  6E04               	movwf	(___fladd@b+3)^0,c
  5370  001C1C                     l3834:
  5371  001C1C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5372  001C1E  0E00               	movlw	0
  5373  001C20  6E04               	movwf	(___fladd@b+3)^0,c
  5374  001C22  EF1B  F00E         	goto	l3840
  5375  001C26                     l3838:
  5376  001C26  0E00               	movlw	0
  5377  001C28  6E01               	movwf	___fladd@b^0,c
  5378  001C2A  0E00               	movlw	0
  5379  001C2C  6E02               	movwf	(___fladd@b+1)^0,c
  5380  001C2E  0E00               	movlw	0
  5381  001C30  6E03               	movwf	(___fladd@b+2)^0,c
  5382  001C32  0E00               	movlw	0
  5383  001C34  6E04               	movwf	(___fladd@b+3)^0,c
  5384  001C36                     l3840:
  5385  001C36  5008               	movf	(___fladd@a+3)^0,w,c
  5386  001C38  0B80               	andlw	128
  5387  001C3A  6E0E               	movwf	___fladd@aexp^0,c
  5388  001C3C  500D               	movf	___fladd@signs^0,w,c
  5389  001C3E  180E               	xorwf	___fladd@aexp^0,w,c
  5390  001C40  B4D8               	btfsc	status,2,c
  5391  001C42  EF25  F00E         	goto	u3311
  5392  001C46  EF27  F00E         	goto	u3310
  5393  001C4A                     u3311:
  5394  001C4A  EF28  F00E         	goto	l3846
  5395  001C4E                     u3310:
  5396  001C4E  8C0D               	bsf	___fladd@signs^0,6,c
  5397  001C50                     l3846:
  5398  001C50  5008               	movf	(___fladd@a+3)^0,w,c
  5399  001C52  2408               	addwf	(___fladd@a+3)^0,w,c
  5400  001C54  6E0E               	movwf	___fladd@aexp^0,c
  5401  001C56  AE07               	btfss	(___fladd@a+2)^0,7,c
  5402  001C58  EF30  F00E         	goto	u3321
  5403  001C5C  EF32  F00E         	goto	u3320
  5404  001C60                     u3321:
  5405  001C60  EF33  F00E         	goto	l3852
  5406  001C64                     u3320:
  5407  001C64  800E               	bsf	___fladd@aexp^0,0,c
  5408  001C66                     l3852:
  5409  001C66  500E               	movf	___fladd@aexp^0,w,c
  5410  001C68  B4D8               	btfsc	status,2,c
  5411  001C6A  EF39  F00E         	goto	u3331
  5412  001C6E  EF3B  F00E         	goto	u3330
  5413  001C72                     u3331:
  5414  001C72  EF50  F00E         	goto	l3862
  5415  001C76                     u3330:
  5416  001C76  280E               	incf	___fladd@aexp^0,w,c
  5417  001C78  A4D8               	btfss	status,2,c
  5418  001C7A  EF41  F00E         	goto	u3341
  5419  001C7E  EF43  F00E         	goto	u3340
  5420  001C82                     u3341:
  5421  001C82  EF4B  F00E         	goto	l3858
  5422  001C86                     u3340:
  5423  001C86  0E00               	movlw	0
  5424  001C88  6E05               	movwf	___fladd@a^0,c
  5425  001C8A  0E00               	movlw	0
  5426  001C8C  6E06               	movwf	(___fladd@a+1)^0,c
  5427  001C8E  0E00               	movlw	0
  5428  001C90  6E07               	movwf	(___fladd@a+2)^0,c
  5429  001C92  0E00               	movlw	0
  5430  001C94  6E08               	movwf	(___fladd@a+3)^0,c
  5431  001C96                     l3858:
  5432  001C96  8E07               	bsf	(___fladd@a+2)^0,7,c
  5433  001C98  0E00               	movlw	0
  5434  001C9A  6E08               	movwf	(___fladd@a+3)^0,c
  5435  001C9C  EF58  F00E         	goto	l3864
  5436  001CA0                     l3862:
  5437  001CA0  0E00               	movlw	0
  5438  001CA2  6E05               	movwf	___fladd@a^0,c
  5439  001CA4  0E00               	movlw	0
  5440  001CA6  6E06               	movwf	(___fladd@a+1)^0,c
  5441  001CA8  0E00               	movlw	0
  5442  001CAA  6E07               	movwf	(___fladd@a+2)^0,c
  5443  001CAC  0E00               	movlw	0
  5444  001CAE  6E08               	movwf	(___fladd@a+3)^0,c
  5445  001CB0                     l3864:
  5446  001CB0  500F               	movf	___fladd@bexp^0,w,c
  5447  001CB2  5C0E               	subwf	___fladd@aexp^0,w,c
  5448  001CB4  B0D8               	btfsc	status,0,c
  5449  001CB6  EF5F  F00E         	goto	u3351
  5450  001CBA  EF61  F00E         	goto	u3350
  5451  001CBE                     u3351:
  5452  001CBE  EF88  F00E         	goto	l3900
  5453  001CC2                     u3350:
  5454  001CC2  AC0D               	btfss	___fladd@signs^0,6,c
  5455  001CC4  EF66  F00E         	goto	u3361
  5456  001CC8  EF68  F00E         	goto	u3360
  5457  001CCC                     u3361:
  5458  001CCC  EF6A  F00E         	goto	l3870
  5459  001CD0                     u3360:
  5460  001CD0  0E80               	movlw	128
  5461  001CD2  1A0D               	xorwf	___fladd@signs^0,f,c
  5462  001CD4                     l3870:
  5463  001CD4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5464  001CD8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5465  001CDC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5466  001CE0  C001  F010         	movff	___fladd@b,___fladd@grs
  5467  001CE4  C005  F001         	movff	___fladd@a,___fladd@b
  5468  001CE8  C010  F005         	movff	___fladd@grs,___fladd@a
  5469  001CEC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5470  001CF0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5471  001CF4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5472  001CF8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5473  001CFC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5474  001D00  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5475  001D04  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5476  001D08  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5477  001D0C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5478  001D10                     l3900:
  5479  001D10  0E00               	movlw	0
  5480  001D12  6E10               	movwf	___fladd@grs^0,c
  5481  001D14  500F               	movf	___fladd@bexp^0,w,c
  5482  001D16  C00E  F009         	movff	___fladd@aexp,??___fladd
  5483  001D1A  6A0A               	clrf	(??___fladd+1)^0,c
  5484  001D1C  5E09               	subwf	??___fladd^0,f,c
  5485  001D1E  0E00               	movlw	0
  5486  001D20  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5487  001D22  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5488  001D24  EF9D  F00E         	goto	u3371
  5489  001D28  500A               	movf	(??___fladd+1)^0,w,c
  5490  001D2A  E109               	bnz	u3370
  5491  001D2C  0E1A               	movlw	26
  5492  001D2E  5C09               	subwf	??___fladd^0,w,c
  5493  001D30  A0D8               	btfss	status,0,c
  5494  001D32  EF9D  F00E         	goto	u3371
  5495  001D36  EF9F  F00E         	goto	u3370
  5496  001D3A                     u3371:
  5497  001D3A  EFD6  F00E         	goto	l1275
  5498  001D3E                     u3370:
  5499  001D3E  5001               	movf	___fladd@b^0,w,c
  5500  001D40  1002               	iorwf	(___fladd@b+1)^0,w,c
  5501  001D42  1003               	iorwf	(___fladd@b+2)^0,w,c
  5502  001D44  1004               	iorwf	(___fladd@b+3)^0,w,c
  5503  001D46  A4D8               	btfss	status,2,c
  5504  001D48  EFA8  F00E         	goto	u3381
  5505  001D4C  EFAB  F00E         	goto	u3380
  5506  001D50                     u3381:
  5507  001D50  0E01               	movlw	1
  5508  001D52  EFAC  F00E         	goto	u3390
  5509  001D56                     u3380:
  5510  001D56  0E00               	movlw	0
  5511  001D58                     u3390:
  5512  001D58  6E10               	movwf	___fladd@grs^0,c
  5513  001D5A  0E00               	movlw	0
  5514  001D5C  6E01               	movwf	___fladd@b^0,c
  5515  001D5E  0E00               	movlw	0
  5516  001D60  6E02               	movwf	(___fladd@b+1)^0,c
  5517  001D62  0E00               	movlw	0
  5518  001D64  6E03               	movwf	(___fladd@b+2)^0,c
  5519  001D66  0E00               	movlw	0
  5520  001D68  6E04               	movwf	(___fladd@b+3)^0,c
  5521  001D6A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5522  001D6E  EFDF  F00E         	goto	l1274
  5523  001D72                     l1276:
  5524  001D72  A010               	btfss	___fladd@grs^0,0,c
  5525  001D74  EFBE  F00E         	goto	u3401
  5526  001D78  EFC0  F00E         	goto	u3400
  5527  001D7C                     u3401:
  5528  001D7C  EFC6  F00E         	goto	l3912
  5529  001D80                     u3400:
  5530  001D80  90D8               	bcf	status,0,c
  5531  001D82  3010               	rrcf	___fladd@grs^0,w,c
  5532  001D84  0901               	iorlw	1
  5533  001D86  6E10               	movwf	___fladd@grs^0,c
  5534  001D88  EFC8  F00E         	goto	l3914
  5535  001D8C                     l3912:
  5536  001D8C  90D8               	bcf	status,0,c
  5537  001D8E  3210               	rrcf	___fladd@grs^0,f,c
  5538  001D90                     l3914:
  5539  001D90  A001               	btfss	___fladd@b^0,0,c
  5540  001D92  EFCD  F00E         	goto	u3411
  5541  001D96  EFCF  F00E         	goto	u3410
  5542  001D9A                     u3411:
  5543  001D9A  EFD0  F00E         	goto	l3918
  5544  001D9E                     u3410:
  5545  001D9E  8E10               	bsf	___fladd@grs^0,7,c
  5546  001DA0                     l3918:
  5547  001DA0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5548  001DA2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5549  001DA4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5550  001DA6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5551  001DA8  3201               	rrcf	___fladd@b^0,f,c
  5552  001DAA  2A0F               	incf	___fladd@bexp^0,f,c
  5553  001DAC                     l1275:
  5554  001DAC  500E               	movf	___fladd@aexp^0,w,c
  5555  001DAE  5C0F               	subwf	___fladd@bexp^0,w,c
  5556  001DB0  A0D8               	btfss	status,0,c
  5557  001DB2  EFDD  F00E         	goto	u3421
  5558  001DB6  EFDF  F00E         	goto	u3420
  5559  001DBA                     u3421:
  5560  001DBA  EFB9  F00E         	goto	l1276
  5561  001DBE                     u3420:
  5562  001DBE                     l1274:
  5563  001DBE  BC0D               	btfsc	___fladd@signs^0,6,c
  5564  001DC0  EFE4  F00E         	goto	u3431
  5565  001DC4  EFE6  F00E         	goto	u3430
  5566  001DC8                     u3431:
  5567  001DC8  EF26  F00F         	goto	l3946
  5568  001DCC                     u3430:
  5569  001DCC  500F               	movf	___fladd@bexp^0,w,c
  5570  001DCE  A4D8               	btfss	status,2,c
  5571  001DD0  EFEC  F00E         	goto	u3441
  5572  001DD4  EFEE  F00E         	goto	u3440
  5573  001DD8                     u3441:
  5574  001DD8  EFF8  F00E         	goto	l3928
  5575  001DDC                     u3440:
  5576  001DDC  0E00               	movlw	0
  5577  001DDE  6E01               	movwf	?___fladd^0,c
  5578  001DE0  0E00               	movlw	0
  5579  001DE2  6E02               	movwf	(?___fladd+1)^0,c
  5580  001DE4  0E00               	movlw	0
  5581  001DE6  6E03               	movwf	(?___fladd+2)^0,c
  5582  001DE8  0E00               	movlw	0
  5583  001DEA  6E04               	movwf	(?___fladd+3)^0,c
  5584  001DEC  EF47  F010         	goto	l1283
  5585  001DF0                     l3928:
  5586  001DF0  5005               	movf	___fladd@a^0,w,c
  5587  001DF2  2601               	addwf	___fladd@b^0,f,c
  5588  001DF4  5006               	movf	(___fladd@a+1)^0,w,c
  5589  001DF6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5590  001DF8  5007               	movf	(___fladd@a+2)^0,w,c
  5591  001DFA  2203               	addwfc	(___fladd@b+2)^0,f,c
  5592  001DFC  5008               	movf	(___fladd@a+3)^0,w,c
  5593  001DFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5594  001E00  A004               	btfss	(___fladd@b+3)^0,0,c
  5595  001E02  EF05  F00F         	goto	u3451
  5596  001E06  EF07  F00F         	goto	u3450
  5597  001E0A                     u3451:
  5598  001E0A  EFB3  F00F         	goto	l3982
  5599  001E0E                     u3450:
  5600  001E0E  A010               	btfss	___fladd@grs^0,0,c
  5601  001E10  EF0C  F00F         	goto	u3461
  5602  001E14  EF0E  F00F         	goto	u3460
  5603  001E18                     u3461:
  5604  001E18  EF14  F00F         	goto	l3936
  5605  001E1C                     u3460:
  5606  001E1C  90D8               	bcf	status,0,c
  5607  001E1E  3010               	rrcf	___fladd@grs^0,w,c
  5608  001E20  0901               	iorlw	1
  5609  001E22  6E10               	movwf	___fladd@grs^0,c
  5610  001E24  EF16  F00F         	goto	l3938
  5611  001E28                     l3936:
  5612  001E28  90D8               	bcf	status,0,c
  5613  001E2A  3210               	rrcf	___fladd@grs^0,f,c
  5614  001E2C                     l3938:
  5615  001E2C  A001               	btfss	___fladd@b^0,0,c
  5616  001E2E  EF1B  F00F         	goto	u3471
  5617  001E32  EF1D  F00F         	goto	u3470
  5618  001E36                     u3471:
  5619  001E36  EF1E  F00F         	goto	l3942
  5620  001E3A                     u3470:
  5621  001E3A  8E10               	bsf	___fladd@grs^0,7,c
  5622  001E3C                     l3942:
  5623  001E3C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5624  001E3E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5625  001E40  3203               	rrcf	(___fladd@b+2)^0,f,c
  5626  001E42  3202               	rrcf	(___fladd@b+1)^0,f,c
  5627  001E44  3201               	rrcf	___fladd@b^0,f,c
  5628  001E46  2A0F               	incf	___fladd@bexp^0,f,c
  5629  001E48  EFB3  F00F         	goto	l3982
  5630  001E4C                     l3946:
  5631  001E4C  5005               	movf	___fladd@a^0,w,c
  5632  001E4E  5C01               	subwf	___fladd@b^0,w,c
  5633  001E50  5006               	movf	(___fladd@a+1)^0,w,c
  5634  001E52  5802               	subwfb	(___fladd@b+1)^0,w,c
  5635  001E54  5007               	movf	(___fladd@a+2)^0,w,c
  5636  001E56  5803               	subwfb	(___fladd@b+2)^0,w,c
  5637  001E58  5004               	movf	(___fladd@b+3)^0,w,c
  5638  001E5A  0A80               	xorlw	128
  5639  001E5C  6E09               	movwf	??___fladd^0,c
  5640  001E5E  5008               	movf	(___fladd@a+3)^0,w,c
  5641  001E60  0A80               	xorlw	128
  5642  001E62  5809               	subwfb	??___fladd^0,w,c
  5643  001E64  B0D8               	btfsc	status,0,c
  5644  001E66  EF37  F00F         	goto	u3481
  5645  001E6A  EF39  F00F         	goto	u3480
  5646  001E6E                     u3481:
  5647  001E6E  EF64  F00F         	goto	l3956
  5648  001E72                     u3480:
  5649  001E72  5001               	movf	___fladd@b^0,w,c
  5650  001E74  5C05               	subwf	___fladd@a^0,w,c
  5651  001E76  6E09               	movwf	??___fladd^0,c
  5652  001E78  5002               	movf	(___fladd@b+1)^0,w,c
  5653  001E7A  5806               	subwfb	(___fladd@a+1)^0,w,c
  5654  001E7C  6E0A               	movwf	(??___fladd+1)^0,c
  5655  001E7E  5003               	movf	(___fladd@b+2)^0,w,c
  5656  001E80  5807               	subwfb	(___fladd@a+2)^0,w,c
  5657  001E82  6E0B               	movwf	(??___fladd+2)^0,c
  5658  001E84  5004               	movf	(___fladd@b+3)^0,w,c
  5659  001E86  5808               	subwfb	(___fladd@a+3)^0,w,c
  5660  001E88  6E0C               	movwf	(??___fladd+3)^0,c
  5661  001E8A  0EFF               	movlw	255
  5662  001E8C  2409               	addwf	??___fladd^0,w,c
  5663  001E8E  6E01               	movwf	___fladd@b^0,c
  5664  001E90  0EFF               	movlw	255
  5665  001E92  200A               	addwfc	(??___fladd+1)^0,w,c
  5666  001E94  6E02               	movwf	(___fladd@b+1)^0,c
  5667  001E96  0EFF               	movlw	255
  5668  001E98  200B               	addwfc	(??___fladd+2)^0,w,c
  5669  001E9A  6E03               	movwf	(___fladd@b+2)^0,c
  5670  001E9C  0EFF               	movlw	255
  5671  001E9E  200C               	addwfc	(??___fladd+3)^0,w,c
  5672  001EA0  6E04               	movwf	(___fladd@b+3)^0,c
  5673  001EA2  0E80               	movlw	128
  5674  001EA4  1A0D               	xorwf	___fladd@signs^0,f,c
  5675  001EA6  6C10               	negf	___fladd@grs^0,c
  5676  001EA8  5010               	movf	___fladd@grs^0,w,c
  5677  001EAA  A4D8               	btfss	status,2,c
  5678  001EAC  EF5A  F00F         	goto	u3491
  5679  001EB0  EF5C  F00F         	goto	u3490
  5680  001EB4                     u3491:
  5681  001EB4  EF6C  F00F         	goto	l1291
  5682  001EB8                     u3490:
  5683  001EB8  0E01               	movlw	1
  5684  001EBA  2601               	addwf	___fladd@b^0,f,c
  5685  001EBC  0E00               	movlw	0
  5686  001EBE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5687  001EC0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5688  001EC2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5689  001EC4  EF6C  F00F         	goto	l1291
  5690  001EC8                     l3956:
  5691  001EC8  5005               	movf	___fladd@a^0,w,c
  5692  001ECA  5E01               	subwf	___fladd@b^0,f,c
  5693  001ECC  5006               	movf	(___fladd@a+1)^0,w,c
  5694  001ECE  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5695  001ED0  5007               	movf	(___fladd@a+2)^0,w,c
  5696  001ED2  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5697  001ED4  5008               	movf	(___fladd@a+3)^0,w,c
  5698  001ED6  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5699  001ED8                     l1291:
  5700  001ED8  5001               	movf	___fladd@b^0,w,c
  5701  001EDA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5702  001EDC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5703  001EDE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5704  001EE0  A4D8               	btfss	status,2,c
  5705  001EE2  EF75  F00F         	goto	u3501
  5706  001EE6  EF77  F00F         	goto	u3500
  5707  001EEA                     u3501:
  5708  001EEA  EFAC  F00F         	goto	l3980
  5709  001EEE                     u3500:
  5710  001EEE  5010               	movf	___fladd@grs^0,w,c
  5711  001EF0  A4D8               	btfss	status,2,c
  5712  001EF2  EF7D  F00F         	goto	u3511
  5713  001EF6  EF7F  F00F         	goto	u3510
  5714  001EFA                     u3511:
  5715  001EFA  EFAC  F00F         	goto	l3980
  5716  001EFE                     u3510:
  5717  001EFE  0E00               	movlw	0
  5718  001F00  6E01               	movwf	?___fladd^0,c
  5719  001F02  0E00               	movlw	0
  5720  001F04  6E02               	movwf	(?___fladd+1)^0,c
  5721  001F06  0E00               	movlw	0
  5722  001F08  6E03               	movwf	(?___fladd+2)^0,c
  5723  001F0A  0E00               	movlw	0
  5724  001F0C  6E04               	movwf	(?___fladd+3)^0,c
  5725  001F0E  EF47  F010         	goto	l1283
  5726  001F12                     l3964:
  5727  001F12  90D8               	bcf	status,0,c
  5728  001F14  3601               	rlcf	___fladd@b^0,f,c
  5729  001F16  3602               	rlcf	(___fladd@b+1)^0,f,c
  5730  001F18  3603               	rlcf	(___fladd@b+2)^0,f,c
  5731  001F1A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5732  001F1C  AE10               	btfss	___fladd@grs^0,7,c
  5733  001F1E  EF93  F00F         	goto	u3521
  5734  001F22  EF95  F00F         	goto	u3520
  5735  001F26                     u3521:
  5736  001F26  EF96  F00F         	goto	l3970
  5737  001F2A                     u3520:
  5738  001F2A  8001               	bsf	___fladd@b^0,0,c
  5739  001F2C                     l3970:
  5740  001F2C  A010               	btfss	___fladd@grs^0,0,c
  5741  001F2E  EF9B  F00F         	goto	u3531
  5742  001F32  EF9D  F00F         	goto	u3530
  5743  001F36                     u3531:
  5744  001F36  EFA1  F00F         	goto	l3974
  5745  001F3A                     u3530:
  5746  001F3A  80D8               	bsf	status,0,c
  5747  001F3C  3610               	rlcf	___fladd@grs^0,f,c
  5748  001F3E  EFA3  F00F         	goto	l3976
  5749  001F42                     l3974:
  5750  001F42  90D8               	bcf	status,0,c
  5751  001F44  3610               	rlcf	___fladd@grs^0,f,c
  5752  001F46                     l3976:
  5753  001F46  500F               	movf	___fladd@bexp^0,w,c
  5754  001F48  B4D8               	btfsc	status,2,c
  5755  001F4A  EFA9  F00F         	goto	u3541
  5756  001F4E  EFAB  F00F         	goto	u3540
  5757  001F52                     u3541:
  5758  001F52  EFAC  F00F         	goto	l3980
  5759  001F56                     u3540:
  5760  001F56  060F               	decf	___fladd@bexp^0,f,c
  5761  001F58                     l3980:
  5762  001F58  AE03               	btfss	(___fladd@b+2)^0,7,c
  5763  001F5A  EFB1  F00F         	goto	u3551
  5764  001F5E  EFB3  F00F         	goto	u3550
  5765  001F62                     u3551:
  5766  001F62  EF89  F00F         	goto	l3964
  5767  001F66                     u3550:
  5768  001F66                     l3982:
  5769  001F66  0E00               	movlw	0
  5770  001F68  6E0E               	movwf	___fladd@aexp^0,c
  5771  001F6A  AE10               	btfss	___fladd@grs^0,7,c
  5772  001F6C  EFBA  F00F         	goto	u3561
  5773  001F70  EFBC  F00F         	goto	u3560
  5774  001F74                     u3561:
  5775  001F74  EFD4  F00F         	goto	l1300
  5776  001F78                     u3560:
  5777  001F78  C010  F009         	movff	___fladd@grs,??___fladd
  5778  001F7C  0E7F               	movlw	127
  5779  001F7E  1609               	andwf	??___fladd^0,f,c
  5780  001F80  B4D8               	btfsc	status,2,c
  5781  001F82  EFC5  F00F         	goto	u3571
  5782  001F86  EFC7  F00F         	goto	u3570
  5783  001F8A                     u3571:
  5784  001F8A  EFCB  F00F         	goto	l1301
  5785  001F8E                     u3570:
  5786  001F8E                     l3988:
  5787  001F8E  0E01               	movlw	1
  5788  001F90  6E0E               	movwf	___fladd@aexp^0,c
  5789  001F92  EFD4  F00F         	goto	l1300
  5790  001F96                     l1301:
  5791  001F96  A001               	btfss	___fladd@b^0,0,c
  5792  001F98  EFD0  F00F         	goto	u3581
  5793  001F9C  EFD2  F00F         	goto	u3580
  5794  001FA0                     u3581:
  5795  001FA0  EFD4  F00F         	goto	l1300
  5796  001FA4                     u3580:
  5797  001FA4  EFC7  F00F         	goto	l3988
  5798  001FA8                     l1300:
  5799  001FA8  500E               	movf	___fladd@aexp^0,w,c
  5800  001FAA  B4D8               	btfsc	status,2,c
  5801  001FAC  EFDA  F00F         	goto	u3591
  5802  001FB0  EFDC  F00F         	goto	u3590
  5803  001FB4                     u3591:
  5804  001FB4  EF07  F010         	goto	l4000
  5805  001FB8                     u3590:
  5806  001FB8  0E01               	movlw	1
  5807  001FBA  2601               	addwf	___fladd@b^0,f,c
  5808  001FBC  0E00               	movlw	0
  5809  001FBE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5810  001FC0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5811  001FC2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5812  001FC4  A004               	btfss	(___fladd@b+3)^0,0,c
  5813  001FC6  EFE7  F00F         	goto	u3601
  5814  001FCA  EFE9  F00F         	goto	u3600
  5815  001FCE                     u3601:
  5816  001FCE  EF07  F010         	goto	l4000
  5817  001FD2                     u3600:
  5818  001FD2  C001  F009         	movff	___fladd@b,??___fladd
  5819  001FD6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5820  001FDA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5821  001FDE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5822  001FE2  340C               	rlcf	(??___fladd+3)^0,w,c
  5823  001FE4  320C               	rrcf	(??___fladd+3)^0,f,c
  5824  001FE6  320B               	rrcf	(??___fladd+2)^0,f,c
  5825  001FE8  320A               	rrcf	(??___fladd+1)^0,f,c
  5826  001FEA  3209               	rrcf	??___fladd^0,f,c
  5827  001FEC  C009  F001         	movff	??___fladd,___fladd@b
  5828  001FF0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5829  001FF4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5830  001FF8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5831  001FFC  280F               	incf	___fladd@bexp^0,w,c
  5832  001FFE  B4D8               	btfsc	status,2,c
  5833  002000  EF04  F010         	goto	u3611
  5834  002004  EF06  F010         	goto	u3610
  5835  002008                     u3611:
  5836  002008  EF07  F010         	goto	l4000
  5837  00200C                     u3610:
  5838  00200C  2A0F               	incf	___fladd@bexp^0,f,c
  5839  00200E                     l4000:
  5840  00200E  280F               	incf	___fladd@bexp^0,w,c
  5841  002010  B4D8               	btfsc	status,2,c
  5842  002012  EF0D  F010         	goto	u3621
  5843  002016  EF0F  F010         	goto	u3620
  5844  00201A                     u3621:
  5845  00201A  EF17  F010         	goto	l4004
  5846  00201E                     u3620:
  5847  00201E  500F               	movf	___fladd@bexp^0,w,c
  5848  002020  A4D8               	btfss	status,2,c
  5849  002022  EF15  F010         	goto	u3631
  5850  002026  EF17  F010         	goto	u3630
  5851  00202A                     u3631:
  5852  00202A  EF29  F010         	goto	l4008
  5853  00202E                     u3630:
  5854  00202E                     l4004:
  5855  00202E  0E00               	movlw	0
  5856  002030  6E01               	movwf	___fladd@b^0,c
  5857  002032  0E00               	movlw	0
  5858  002034  6E02               	movwf	(___fladd@b+1)^0,c
  5859  002036  0E00               	movlw	0
  5860  002038  6E03               	movwf	(___fladd@b+2)^0,c
  5861  00203A  0E00               	movlw	0
  5862  00203C  6E04               	movwf	(___fladd@b+3)^0,c
  5863  00203E  500F               	movf	___fladd@bexp^0,w,c
  5864  002040  A4D8               	btfss	status,2,c
  5865  002042  EF25  F010         	goto	u3641
  5866  002046  EF27  F010         	goto	u3640
  5867  00204A                     u3641:
  5868  00204A  EF29  F010         	goto	l4008
  5869  00204E                     u3640:
  5870  00204E  0E00               	movlw	0
  5871  002050  6E0D               	movwf	___fladd@signs^0,c
  5872  002052                     l4008:
  5873  002052  A00F               	btfss	___fladd@bexp^0,0,c
  5874  002054  EF2E  F010         	goto	u3651
  5875  002058  EF30  F010         	goto	u3650
  5876  00205C                     u3651:
  5877  00205C  EF33  F010         	goto	l4012
  5878  002060                     u3650:
  5879  002060  8E03               	bsf	(___fladd@b+2)^0,7,c
  5880  002062  EF34  F010         	goto	l4014
  5881  002066                     l4012:
  5882  002066  9E03               	bcf	(___fladd@b+2)^0,7,c
  5883  002068                     l4014:
  5884  002068  90D8               	bcf	status,0,c
  5885  00206A  300F               	rrcf	___fladd@bexp^0,w,c
  5886  00206C  6E04               	movwf	(___fladd@b+3)^0,c
  5887  00206E  AE0D               	btfss	___fladd@signs^0,7,c
  5888  002070  EF3C  F010         	goto	u3661
  5889  002074  EF3E  F010         	goto	u3660
  5890  002078                     u3661:
  5891  002078  EF3F  F010         	goto	l4020
  5892  00207C                     u3660:
  5893  00207C  8E04               	bsf	(___fladd@b+3)^0,7,c
  5894  00207E                     l4020:
  5895  00207E  C001  F001         	movff	___fladd@b,?___fladd
  5896  002082  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5897  002086  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5898  00208A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5899  00208E                     l1283:
  5900  00208E  0012               	return		;funcret
  5901  002090                     __end_of___fladd:
  5902                           	callstack 0
  5903                           
  5904 ;; *************** function ___flneg *****************
  5905 ;; Defined at:
  5906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  f1              4    0[COMRAM] unsigned char 
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  4    0[COMRAM] unsigned char 
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;Total ram usage:        4 bytes
  5925 ;; Hardware stack levels used: 1
  5926 ;; Hardware stack levels required when called: 1
  5927 ;; This function calls:
  5928 ;;		Nothing
  5929 ;; This function is called by:
  5930 ;;		_roundf
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           	psect	text22
  5935  005664                     __ptext22:
  5936                           	callstack 0
  5937  005664                     ___flneg:
  5938                           	callstack 25
  5939  005664  5001               	movf	___flneg@f1^0,w,c
  5940  005666  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5941  005668  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5942  00566A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5943  00566C  B4D8               	btfsc	status,2,c
  5944  00566E  EF3B  F02B         	goto	u4021
  5945  005672  EF3D  F02B         	goto	u4020
  5946  005676                     u4021:
  5947  005676  EF45  F02B         	goto	l4284
  5948  00567A                     u4020:
  5949  00567A  0E00               	movlw	0
  5950  00567C  1A01               	xorwf	___flneg@f1^0,f,c
  5951  00567E  0E00               	movlw	0
  5952  005680  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5953  005682  0E00               	movlw	0
  5954  005684  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5955  005686  0E80               	movlw	128
  5956  005688  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5957  00568A                     l4284:
  5958  00568A  C001  F001         	movff	___flneg@f1,?___flneg
  5959  00568E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5960  005692  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5961  005696  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5962  00569A  0012               	return		;funcret
  5963  00569C                     __end_of___flneg:
  5964                           	callstack 0
  5965                           
  5966 ;; *************** function ___flmul *****************
  5967 ;; Defined at:
  5968 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  b               4   39[COMRAM] unsigned char 
  5971 ;;  a               4   43[COMRAM] unsigned char 
  5972 ;; Auto vars:     Size  Location     Type
  5973 ;;  prod            4   58[COMRAM] struct .
  5974 ;;  grs             4   52[COMRAM] unsigned long 
  5975 ;;  temp            2   62[COMRAM] struct .
  5976 ;;  bexp            1   57[COMRAM] unsigned char 
  5977 ;;  aexp            1   56[COMRAM] unsigned char 
  5978 ;;  sign            1   51[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  4   39[COMRAM] unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0, prodl, prodh
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5988 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;Total ram usage:       25 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_detect_color
  5999 ;;		_distance_measure
  6000 ;;		_roundf
  6001 ;;		_check_color_reading
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text23
  6006  002090                     __ptext23:
  6007                           	callstack 0
  6008  002090                     ___flmul:
  6009                           	callstack 25
  6010  002090  502B               	movf	(___flmul@b+3)^0,w,c
  6011  002092  0B80               	andlw	128
  6012  002094  6E34               	movwf	___flmul@sign^0,c
  6013  002096  502B               	movf	(___flmul@b+3)^0,w,c
  6014  002098  242B               	addwf	(___flmul@b+3)^0,w,c
  6015  00209A  6E3A               	movwf	___flmul@bexp^0,c
  6016  00209C  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6017  00209E  EF53  F010         	goto	u3781
  6018  0020A2  EF55  F010         	goto	u3780
  6019  0020A6                     u3781:
  6020  0020A6  EF56  F010         	goto	l4128
  6021  0020AA                     u3780:
  6022  0020AA  803A               	bsf	___flmul@bexp^0,0,c
  6023  0020AC                     l4128:
  6024  0020AC  503A               	movf	___flmul@bexp^0,w,c
  6025  0020AE  B4D8               	btfsc	status,2,c
  6026  0020B0  EF5C  F010         	goto	u3791
  6027  0020B4  EF5E  F010         	goto	u3790
  6028  0020B8                     u3791:
  6029  0020B8  EF71  F010         	goto	l4136
  6030  0020BC                     u3790:
  6031  0020BC  283A               	incf	___flmul@bexp^0,w,c
  6032  0020BE  A4D8               	btfss	status,2,c
  6033  0020C0  EF64  F010         	goto	u3801
  6034  0020C4  EF66  F010         	goto	u3800
  6035  0020C8                     u3801:
  6036  0020C8  EF6E  F010         	goto	l4134
  6037  0020CC                     u3800:
  6038  0020CC  0E00               	movlw	0
  6039  0020CE  6E28               	movwf	___flmul@b^0,c
  6040  0020D0  0E00               	movlw	0
  6041  0020D2  6E29               	movwf	(___flmul@b+1)^0,c
  6042  0020D4  0E00               	movlw	0
  6043  0020D6  6E2A               	movwf	(___flmul@b+2)^0,c
  6044  0020D8  0E00               	movlw	0
  6045  0020DA  6E2B               	movwf	(___flmul@b+3)^0,c
  6046  0020DC                     l4134:
  6047  0020DC  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6048  0020DE  EF79  F010         	goto	l4138
  6049  0020E2                     l4136:
  6050  0020E2  0E00               	movlw	0
  6051  0020E4  6E28               	movwf	___flmul@b^0,c
  6052  0020E6  0E00               	movlw	0
  6053  0020E8  6E29               	movwf	(___flmul@b+1)^0,c
  6054  0020EA  0E00               	movlw	0
  6055  0020EC  6E2A               	movwf	(___flmul@b+2)^0,c
  6056  0020EE  0E00               	movlw	0
  6057  0020F0  6E2B               	movwf	(___flmul@b+3)^0,c
  6058  0020F2                     l4138:
  6059  0020F2  502F               	movf	(___flmul@a+3)^0,w,c
  6060  0020F4  0B80               	andlw	128
  6061  0020F6  1A34               	xorwf	___flmul@sign^0,f,c
  6062  0020F8  502F               	movf	(___flmul@a+3)^0,w,c
  6063  0020FA  242F               	addwf	(___flmul@a+3)^0,w,c
  6064  0020FC  6E39               	movwf	___flmul@aexp^0,c
  6065  0020FE  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6066  002100  EF84  F010         	goto	u3811
  6067  002104  EF86  F010         	goto	u3810
  6068  002108                     u3811:
  6069  002108  EF87  F010         	goto	l4146
  6070  00210C                     u3810:
  6071  00210C  8039               	bsf	___flmul@aexp^0,0,c
  6072  00210E                     l4146:
  6073  00210E  5039               	movf	___flmul@aexp^0,w,c
  6074  002110  B4D8               	btfsc	status,2,c
  6075  002112  EF8D  F010         	goto	u3821
  6076  002116  EF8F  F010         	goto	u3820
  6077  00211A                     u3821:
  6078  00211A  EFA2  F010         	goto	l4154
  6079  00211E                     u3820:
  6080  00211E  2839               	incf	___flmul@aexp^0,w,c
  6081  002120  A4D8               	btfss	status,2,c
  6082  002122  EF95  F010         	goto	u3831
  6083  002126  EF97  F010         	goto	u3830
  6084  00212A                     u3831:
  6085  00212A  EF9F  F010         	goto	l4152
  6086  00212E                     u3830:
  6087  00212E  0E00               	movlw	0
  6088  002130  6E2C               	movwf	___flmul@a^0,c
  6089  002132  0E00               	movlw	0
  6090  002134  6E2D               	movwf	(___flmul@a+1)^0,c
  6091  002136  0E00               	movlw	0
  6092  002138  6E2E               	movwf	(___flmul@a+2)^0,c
  6093  00213A  0E00               	movlw	0
  6094  00213C  6E2F               	movwf	(___flmul@a+3)^0,c
  6095  00213E                     l4152:
  6096  00213E  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6097  002140  EFAA  F010         	goto	l1360
  6098  002144                     l4154:
  6099  002144  0E00               	movlw	0
  6100  002146  6E2C               	movwf	___flmul@a^0,c
  6101  002148  0E00               	movlw	0
  6102  00214A  6E2D               	movwf	(___flmul@a+1)^0,c
  6103  00214C  0E00               	movlw	0
  6104  00214E  6E2E               	movwf	(___flmul@a+2)^0,c
  6105  002150  0E00               	movlw	0
  6106  002152  6E2F               	movwf	(___flmul@a+3)^0,c
  6107  002154                     l1360:
  6108  002154  5039               	movf	___flmul@aexp^0,w,c
  6109  002156  B4D8               	btfsc	status,2,c
  6110  002158  EFB0  F010         	goto	u3841
  6111  00215C  EFB2  F010         	goto	u3840
  6112  002160                     u3841:
  6113  002160  EFBA  F010         	goto	l4158
  6114  002164                     u3840:
  6115  002164  503A               	movf	___flmul@bexp^0,w,c
  6116  002166  A4D8               	btfss	status,2,c
  6117  002168  EFB8  F010         	goto	u3851
  6118  00216C  EFBA  F010         	goto	u3850
  6119  002170                     u3851:
  6120  002170  EFC4  F010         	goto	l4162
  6121  002174                     u3850:
  6122  002174                     l4158:
  6123  002174  0E00               	movlw	0
  6124  002176  6E28               	movwf	?___flmul^0,c
  6125  002178  0E00               	movlw	0
  6126  00217A  6E29               	movwf	(?___flmul+1)^0,c
  6127  00217C  0E00               	movlw	0
  6128  00217E  6E2A               	movwf	(?___flmul+2)^0,c
  6129  002180  0E00               	movlw	0
  6130  002182  6E2B               	movwf	(?___flmul+3)^0,c
  6131  002184  EF5C  F012         	goto	l1364
  6132  002188                     l4162:
  6133  002188  502E               	movf	(___flmul@a+2)^0,w,c
  6134  00218A  0228               	mulwf	___flmul@b^0,c
  6135  00218C  CFF3 F03F          	movff	prodl,___flmul@temp
  6136  002190  CFF4 F040          	movff	prodh,___flmul@temp+1
  6137  002194  503F               	movf	___flmul@temp^0,w,c
  6138  002196  6E35               	movwf	___flmul@grs^0,c
  6139  002198  6A36               	clrf	(___flmul@grs+1)^0,c
  6140  00219A  6A37               	clrf	(___flmul@grs+2)^0,c
  6141  00219C  6A38               	clrf	(___flmul@grs+3)^0,c
  6142  00219E  5040               	movf	(___flmul@temp+1)^0,w,c
  6143  0021A0  6E3B               	movwf	___flmul@prod^0,c
  6144  0021A2  6A3C               	clrf	(___flmul@prod+1)^0,c
  6145  0021A4  6A3D               	clrf	(___flmul@prod+2)^0,c
  6146  0021A6  6A3E               	clrf	(___flmul@prod+3)^0,c
  6147  0021A8  502D               	movf	(___flmul@a+1)^0,w,c
  6148  0021AA  0229               	mulwf	(___flmul@b+1)^0,c
  6149  0021AC  CFF3 F03F          	movff	prodl,___flmul@temp
  6150  0021B0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6151  0021B4  503F               	movf	___flmul@temp^0,w,c
  6152  0021B6  2635               	addwf	___flmul@grs^0,f,c
  6153  0021B8  0E00               	movlw	0
  6154  0021BA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6155  0021BC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6156  0021BE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6157  0021C0  5040               	movf	(___flmul@temp+1)^0,w,c
  6158  0021C2  263B               	addwf	___flmul@prod^0,f,c
  6159  0021C4  0E00               	movlw	0
  6160  0021C6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6161  0021C8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6162  0021CA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6163  0021CC  502C               	movf	___flmul@a^0,w,c
  6164  0021CE  022A               	mulwf	(___flmul@b+2)^0,c
  6165  0021D0  CFF3 F03F          	movff	prodl,___flmul@temp
  6166  0021D4  CFF4 F040          	movff	prodh,___flmul@temp+1
  6167  0021D8  503F               	movf	___flmul@temp^0,w,c
  6168  0021DA  2635               	addwf	___flmul@grs^0,f,c
  6169  0021DC  0E00               	movlw	0
  6170  0021DE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6171  0021E0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6172  0021E2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6173  0021E4  5040               	movf	(___flmul@temp+1)^0,w,c
  6174  0021E6  263B               	addwf	___flmul@prod^0,f,c
  6175  0021E8  0E00               	movlw	0
  6176  0021EA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6177  0021EC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6178  0021EE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6179  0021F0  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6180  0021F4  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6181  0021F8  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6182  0021FC  6A35               	clrf	___flmul@grs^0,c
  6183  0021FE  502C               	movf	___flmul@a^0,w,c
  6184  002200  0229               	mulwf	(___flmul@b+1)^0,c
  6185  002202  CFF3 F03F          	movff	prodl,___flmul@temp
  6186  002206  CFF4 F040          	movff	prodh,___flmul@temp+1
  6187  00220A  503F               	movf	___flmul@temp^0,w,c
  6188  00220C  2635               	addwf	___flmul@grs^0,f,c
  6189  00220E  5040               	movf	(___flmul@temp+1)^0,w,c
  6190  002210  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6191  002212  0E00               	movlw	0
  6192  002214  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6193  002216  0E00               	movlw	0
  6194  002218  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6195  00221A  502D               	movf	(___flmul@a+1)^0,w,c
  6196  00221C  0228               	mulwf	___flmul@b^0,c
  6197  00221E  CFF3 F03F          	movff	prodl,___flmul@temp
  6198  002222  CFF4 F040          	movff	prodh,___flmul@temp+1
  6199  002226  503F               	movf	___flmul@temp^0,w,c
  6200  002228  2635               	addwf	___flmul@grs^0,f,c
  6201  00222A  5040               	movf	(___flmul@temp+1)^0,w,c
  6202  00222C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6203  00222E  0E00               	movlw	0
  6204  002230  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6205  002232  0E00               	movlw	0
  6206  002234  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6207  002236  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6208  00223A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6209  00223E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6210  002242  6A35               	clrf	___flmul@grs^0,c
  6211  002244  502C               	movf	___flmul@a^0,w,c
  6212  002246  0228               	mulwf	___flmul@b^0,c
  6213  002248  CFF3 F03F          	movff	prodl,___flmul@temp
  6214  00224C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6215  002250  503F               	movf	___flmul@temp^0,w,c
  6216  002252  2635               	addwf	___flmul@grs^0,f,c
  6217  002254  5040               	movf	(___flmul@temp+1)^0,w,c
  6218  002256  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6219  002258  0E00               	movlw	0
  6220  00225A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6221  00225C  0E00               	movlw	0
  6222  00225E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6223  002260  502E               	movf	(___flmul@a+2)^0,w,c
  6224  002262  0229               	mulwf	(___flmul@b+1)^0,c
  6225  002264  CFF3 F03F          	movff	prodl,___flmul@temp
  6226  002268  CFF4 F040          	movff	prodh,___flmul@temp+1
  6227  00226C  503F               	movf	___flmul@temp^0,w,c
  6228  00226E  263B               	addwf	___flmul@prod^0,f,c
  6229  002270  5040               	movf	(___flmul@temp+1)^0,w,c
  6230  002272  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6231  002274  0E00               	movlw	0
  6232  002276  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6233  002278  0E00               	movlw	0
  6234  00227A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6235  00227C  502D               	movf	(___flmul@a+1)^0,w,c
  6236  00227E  022A               	mulwf	(___flmul@b+2)^0,c
  6237  002280  CFF3 F03F          	movff	prodl,___flmul@temp
  6238  002284  CFF4 F040          	movff	prodh,___flmul@temp+1
  6239  002288  503F               	movf	___flmul@temp^0,w,c
  6240  00228A  263B               	addwf	___flmul@prod^0,f,c
  6241  00228C  5040               	movf	(___flmul@temp+1)^0,w,c
  6242  00228E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6243  002290  0E00               	movlw	0
  6244  002292  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6245  002294  0E00               	movlw	0
  6246  002296  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6247  002298  502E               	movf	(___flmul@a+2)^0,w,c
  6248  00229A  022A               	mulwf	(___flmul@b+2)^0,c
  6249  00229C  CFF3 F03F          	movff	prodl,___flmul@temp
  6250  0022A0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6251  0022A4  503F               	movf	___flmul@temp^0,w,c
  6252  0022A6  6E30               	movwf	??___flmul^0,c
  6253  0022A8  5040               	movf	(___flmul@temp+1)^0,w,c
  6254  0022AA  6E31               	movwf	(??___flmul+1)^0,c
  6255  0022AC  6A32               	clrf	(??___flmul+2)^0,c
  6256  0022AE  6A33               	clrf	(??___flmul+3)^0,c
  6257  0022B0  C032  F033         	movff	??___flmul+2,??___flmul+3
  6258  0022B4  C031  F032         	movff	??___flmul+1,??___flmul+2
  6259  0022B8  C030  F031         	movff	??___flmul,??___flmul+1
  6260  0022BC  6A30               	clrf	??___flmul^0,c
  6261  0022BE  5030               	movf	??___flmul^0,w,c
  6262  0022C0  263B               	addwf	___flmul@prod^0,f,c
  6263  0022C2  5031               	movf	(??___flmul+1)^0,w,c
  6264  0022C4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6265  0022C6  5032               	movf	(??___flmul+2)^0,w,c
  6266  0022C8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6267  0022CA  5033               	movf	(??___flmul+3)^0,w,c
  6268  0022CC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6269  0022CE  C035  F030         	movff	___flmul@grs,??___flmul
  6270  0022D2  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6271  0022D6  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6272  0022DA  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6273  0022DE  0E19               	movlw	25
  6274  0022E0  EF77  F011         	goto	u3860
  6275  0022E4                     u3865:
  6276  0022E4  90D8               	bcf	status,0,c
  6277  0022E6  3233               	rrcf	(??___flmul+3)^0,f,c
  6278  0022E8  3232               	rrcf	(??___flmul+2)^0,f,c
  6279  0022EA  3231               	rrcf	(??___flmul+1)^0,f,c
  6280  0022EC  3230               	rrcf	??___flmul^0,f,c
  6281  0022EE                     u3860:
  6282  0022EE  2EE8               	decfsz	wreg,f,c
  6283  0022F0  EF72  F011         	goto	u3865
  6284  0022F4  5030               	movf	??___flmul^0,w,c
  6285  0022F6  263B               	addwf	___flmul@prod^0,f,c
  6286  0022F8  5031               	movf	(??___flmul+1)^0,w,c
  6287  0022FA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6288  0022FC  5032               	movf	(??___flmul+2)^0,w,c
  6289  0022FE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6290  002300  5033               	movf	(??___flmul+3)^0,w,c
  6291  002302  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6292  002304  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6293  002308  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6294  00230C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6295  002310  6A35               	clrf	___flmul@grs^0,c
  6296  002312  5039               	movf	___flmul@aexp^0,w,c
  6297  002314  C03A  F030         	movff	___flmul@bexp,??___flmul
  6298  002318  6A31               	clrf	(??___flmul+1)^0,c
  6299  00231A  2630               	addwf	??___flmul^0,f,c
  6300  00231C  0E00               	movlw	0
  6301  00231E  2231               	addwfc	(??___flmul+1)^0,f,c
  6302  002320  0E82               	movlw	130
  6303  002322  2430               	addwf	??___flmul^0,w,c
  6304  002324  6E3F               	movwf	___flmul@temp^0,c
  6305  002326  0EFF               	movlw	255
  6306  002328  2031               	addwfc	(??___flmul+1)^0,w,c
  6307  00232A  6E40               	movwf	(___flmul@temp+1)^0,c
  6308  00232C  EFAD  F011         	goto	l4210
  6309  002330                     l4204:
  6310  002330  90D8               	bcf	status,0,c
  6311  002332  363B               	rlcf	___flmul@prod^0,f,c
  6312  002334  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6313  002336  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6314  002338  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6315  00233A  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6316  00233C  EFA2  F011         	goto	u3871
  6317  002340  EFA4  F011         	goto	u3870
  6318  002344                     u3871:
  6319  002344  EFA5  F011         	goto	l1367
  6320  002348                     u3870:
  6321  002348  803B               	bsf	___flmul@prod^0,0,c
  6322  00234A                     l1367:
  6323  00234A  90D8               	bcf	status,0,c
  6324  00234C  3635               	rlcf	___flmul@grs^0,f,c
  6325  00234E  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6326  002350  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6327  002352  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6328  002354  063F               	decf	___flmul@temp^0,f,c
  6329  002356  A0D8               	btfss	status,0,c
  6330  002358  0640               	decf	(___flmul@temp+1)^0,f,c
  6331  00235A                     l4210:
  6332  00235A  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6333  00235C  EFB2  F011         	goto	u3881
  6334  002360  EFB4  F011         	goto	u3880
  6335  002364                     u3881:
  6336  002364  EF98  F011         	goto	l4204
  6337  002368                     u3880:
  6338  002368  0E00               	movlw	0
  6339  00236A  6E39               	movwf	___flmul@aexp^0,c
  6340  00236C  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6341  00236E  EFBB  F011         	goto	u3891
  6342  002372  EFBD  F011         	goto	u3890
  6343  002376                     u3891:
  6344  002376  EFE1  F011         	goto	l1369
  6345  00237A                     u3890:
  6346  00237A  0EFF               	movlw	255
  6347  00237C  1435               	andwf	___flmul@grs^0,w,c
  6348  00237E  6E30               	movwf	??___flmul^0,c
  6349  002380  0EFF               	movlw	255
  6350  002382  1436               	andwf	(___flmul@grs+1)^0,w,c
  6351  002384  6E31               	movwf	(??___flmul+1)^0,c
  6352  002386  0EFF               	movlw	255
  6353  002388  1437               	andwf	(___flmul@grs+2)^0,w,c
  6354  00238A  6E32               	movwf	(??___flmul+2)^0,c
  6355  00238C  0E7F               	movlw	127
  6356  00238E  1438               	andwf	(___flmul@grs+3)^0,w,c
  6357  002390  6E33               	movwf	(??___flmul+3)^0,c
  6358  002392  5030               	movf	??___flmul^0,w,c
  6359  002394  1031               	iorwf	(??___flmul+1)^0,w,c
  6360  002396  1032               	iorwf	(??___flmul+2)^0,w,c
  6361  002398  1033               	iorwf	(??___flmul+3)^0,w,c
  6362  00239A  B4D8               	btfsc	status,2,c
  6363  00239C  EFD2  F011         	goto	u3901
  6364  0023A0  EFD4  F011         	goto	u3900
  6365  0023A4                     u3901:
  6366  0023A4  EFD8  F011         	goto	l1370
  6367  0023A8                     u3900:
  6368  0023A8                     l4218:
  6369  0023A8  0E01               	movlw	1
  6370  0023AA  6E39               	movwf	___flmul@aexp^0,c
  6371  0023AC  EFE1  F011         	goto	l1369
  6372  0023B0                     l1370:
  6373  0023B0  A03B               	btfss	___flmul@prod^0,0,c
  6374  0023B2  EFDD  F011         	goto	u3911
  6375  0023B6  EFDF  F011         	goto	u3910
  6376  0023BA                     u3911:
  6377  0023BA  EFE1  F011         	goto	l1369
  6378  0023BE                     u3910:
  6379  0023BE  EFD4  F011         	goto	l4218
  6380  0023C2                     l1369:
  6381  0023C2  5039               	movf	___flmul@aexp^0,w,c
  6382  0023C4  B4D8               	btfsc	status,2,c
  6383  0023C6  EFE7  F011         	goto	u3921
  6384  0023CA  EFE9  F011         	goto	u3920
  6385  0023CE                     u3921:
  6386  0023CE  EF0D  F012         	goto	l4230
  6387  0023D2                     u3920:
  6388  0023D2  0E01               	movlw	1
  6389  0023D4  263B               	addwf	___flmul@prod^0,f,c
  6390  0023D6  0E00               	movlw	0
  6391  0023D8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6392  0023DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6393  0023DC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6394  0023DE  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6395  0023E0  EFF4  F011         	goto	u3931
  6396  0023E4  EFF6  F011         	goto	u3930
  6397  0023E8                     u3931:
  6398  0023E8  EF0D  F012         	goto	l4230
  6399  0023EC                     u3930:
  6400  0023EC  C03B  F030         	movff	___flmul@prod,??___flmul
  6401  0023F0  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6402  0023F4  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6403  0023F8  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6404  0023FC  3433               	rlcf	(??___flmul+3)^0,w,c
  6405  0023FE  3233               	rrcf	(??___flmul+3)^0,f,c
  6406  002400  3232               	rrcf	(??___flmul+2)^0,f,c
  6407  002402  3231               	rrcf	(??___flmul+1)^0,f,c
  6408  002404  3230               	rrcf	??___flmul^0,f,c
  6409  002406  C030  F03B         	movff	??___flmul,___flmul@prod
  6410  00240A  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6411  00240E  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6412  002412  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6413  002416  4A3F               	infsnz	___flmul@temp^0,f,c
  6414  002418  2A40               	incf	(___flmul@temp+1)^0,f,c
  6415  00241A                     l4230:
  6416  00241A  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6417  00241C  EF18  F012         	goto	u3941
  6418  002420  5040               	movf	(___flmul@temp+1)^0,w,c
  6419  002422  E108               	bnz	u3940
  6420  002424  283F               	incf	___flmul@temp^0,w,c
  6421  002426  A0D8               	btfss	status,0,c
  6422  002428  EF18  F012         	goto	u3941
  6423  00242C  EF1A  F012         	goto	u3940
  6424  002430                     u3941:
  6425  002430  EF24  F012         	goto	l4234
  6426  002434                     u3940:
  6427  002434  0E00               	movlw	0
  6428  002436  6E3B               	movwf	___flmul@prod^0,c
  6429  002438  0E00               	movlw	0
  6430  00243A  6E3C               	movwf	(___flmul@prod+1)^0,c
  6431  00243C  0E80               	movlw	128
  6432  00243E  6E3D               	movwf	(___flmul@prod+2)^0,c
  6433  002440  0E7F               	movlw	127
  6434  002442  6E3E               	movwf	(___flmul@prod+3)^0,c
  6435  002444  EF52  F012         	goto	l4246
  6436  002448                     l4234:
  6437  002448  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6438  00244A  EF31  F012         	goto	u3950
  6439  00244E  5040               	movf	(___flmul@temp+1)^0,w,c
  6440  002450  E106               	bnz	u3951
  6441  002452  043F               	decf	___flmul@temp^0,w,c
  6442  002454  B0D8               	btfsc	status,0,c
  6443  002456  EF2F  F012         	goto	u3951
  6444  00245A  EF31  F012         	goto	u3950
  6445  00245E                     u3951:
  6446  00245E  EF3D  F012         	goto	l1377
  6447  002462                     u3950:
  6448  002462  0E00               	movlw	0
  6449  002464  6E3B               	movwf	___flmul@prod^0,c
  6450  002466  0E00               	movlw	0
  6451  002468  6E3C               	movwf	(___flmul@prod+1)^0,c
  6452  00246A  0E00               	movlw	0
  6453  00246C  6E3D               	movwf	(___flmul@prod+2)^0,c
  6454  00246E  0E00               	movlw	0
  6455  002470  6E3E               	movwf	(___flmul@prod+3)^0,c
  6456  002472  0E00               	movlw	0
  6457  002474  6E34               	movwf	___flmul@sign^0,c
  6458  002476  EF52  F012         	goto	l4246
  6459  00247A                     l1377:
  6460  00247A  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6461  00247E  0EFF               	movlw	255
  6462  002480  163B               	andwf	___flmul@prod^0,f,c
  6463  002482  0EFF               	movlw	255
  6464  002484  163C               	andwf	(___flmul@prod+1)^0,f,c
  6465  002486  0E7F               	movlw	127
  6466  002488  163D               	andwf	(___flmul@prod+2)^0,f,c
  6467  00248A  0E00               	movlw	0
  6468  00248C  163E               	andwf	(___flmul@prod+3)^0,f,c
  6469  00248E  A03A               	btfss	___flmul@bexp^0,0,c
  6470  002490  EF4C  F012         	goto	u3961
  6471  002494  EF4E  F012         	goto	u3960
  6472  002498                     u3961:
  6473  002498  EF4F  F012         	goto	l4244
  6474  00249C                     u3960:
  6475  00249C  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6476  00249E                     l4244:
  6477  00249E  90D8               	bcf	status,0,c
  6478  0024A0  303A               	rrcf	___flmul@bexp^0,w,c
  6479  0024A2  6E3E               	movwf	(___flmul@prod+3)^0,c
  6480  0024A4                     l4246:
  6481  0024A4  5034               	movf	___flmul@sign^0,w,c
  6482  0024A6  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6483  0024A8  C03B  F028         	movff	___flmul@prod,?___flmul
  6484  0024AC  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6485  0024B0  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6486  0024B4  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6487  0024B8                     l1364:
  6488  0024B8  0012               	return		;funcret
  6489  0024BA                     __end_of___flmul:
  6490                           	callstack 0
  6491                           
  6492 ;; *************** function ___flge *****************
  6493 ;; Defined at:
  6494 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  ff1             4    0[COMRAM] unsigned char 
  6497 ;;  ff2             4    4[COMRAM] unsigned char 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;		None               void
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6509 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;Total ram usage:       12 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; Hardware stack levels required when called: 1
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_roundf
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text24
  6524  004924                     __ptext24:
  6525                           	callstack 0
  6526  004924                     ___flge:
  6527                           	callstack 25
  6528  004924  0E00               	movlw	0
  6529  004926  1401               	andwf	___flge@ff1^0,w,c
  6530  004928  6E09               	movwf	??___flge^0,c
  6531  00492A  0E00               	movlw	0
  6532  00492C  1402               	andwf	(___flge@ff1+1)^0,w,c
  6533  00492E  6E0A               	movwf	(??___flge+1)^0,c
  6534  004930  0E80               	movlw	128
  6535  004932  1403               	andwf	(___flge@ff1+2)^0,w,c
  6536  004934  6E0B               	movwf	(??___flge+2)^0,c
  6537  004936  0E7F               	movlw	127
  6538  004938  1404               	andwf	(___flge@ff1+3)^0,w,c
  6539  00493A  6E0C               	movwf	(??___flge+3)^0,c
  6540  00493C  5009               	movf	??___flge^0,w,c
  6541  00493E  100A               	iorwf	(??___flge+1)^0,w,c
  6542  004940  100B               	iorwf	(??___flge+2)^0,w,c
  6543  004942  100C               	iorwf	(??___flge+3)^0,w,c
  6544  004944  A4D8               	btfss	status,2,c
  6545  004946  EFA7  F024         	goto	u3971
  6546  00494A  EFA9  F024         	goto	u3970
  6547  00494E                     u3971:
  6548  00494E  EFB1  F024         	goto	l4262
  6549  004952                     u3970:
  6550  004952  0E00               	movlw	0
  6551  004954  6E01               	movwf	___flge@ff1^0,c
  6552  004956  0E00               	movlw	0
  6553  004958  6E02               	movwf	(___flge@ff1+1)^0,c
  6554  00495A  0E00               	movlw	0
  6555  00495C  6E03               	movwf	(___flge@ff1+2)^0,c
  6556  00495E  0E00               	movlw	0
  6557  004960  6E04               	movwf	(___flge@ff1+3)^0,c
  6558  004962                     l4262:
  6559  004962  0E00               	movlw	0
  6560  004964  1405               	andwf	___flge@ff2^0,w,c
  6561  004966  6E09               	movwf	??___flge^0,c
  6562  004968  0E00               	movlw	0
  6563  00496A  1406               	andwf	(___flge@ff2+1)^0,w,c
  6564  00496C  6E0A               	movwf	(??___flge+1)^0,c
  6565  00496E  0E80               	movlw	128
  6566  004970  1407               	andwf	(___flge@ff2+2)^0,w,c
  6567  004972  6E0B               	movwf	(??___flge+2)^0,c
  6568  004974  0E7F               	movlw	127
  6569  004976  1408               	andwf	(___flge@ff2+3)^0,w,c
  6570  004978  6E0C               	movwf	(??___flge+3)^0,c
  6571  00497A  5009               	movf	??___flge^0,w,c
  6572  00497C  100A               	iorwf	(??___flge+1)^0,w,c
  6573  00497E  100B               	iorwf	(??___flge+2)^0,w,c
  6574  004980  100C               	iorwf	(??___flge+3)^0,w,c
  6575  004982  A4D8               	btfss	status,2,c
  6576  004984  EFC6  F024         	goto	u3981
  6577  004988  EFC8  F024         	goto	u3980
  6578  00498C                     u3981:
  6579  00498C  EFD0  F024         	goto	l4266
  6580  004990                     u3980:
  6581  004990  0E00               	movlw	0
  6582  004992  6E05               	movwf	___flge@ff2^0,c
  6583  004994  0E00               	movlw	0
  6584  004996  6E06               	movwf	(___flge@ff2+1)^0,c
  6585  004998  0E00               	movlw	0
  6586  00499A  6E07               	movwf	(___flge@ff2+2)^0,c
  6587  00499C  0E00               	movlw	0
  6588  00499E  6E08               	movwf	(___flge@ff2+3)^0,c
  6589  0049A0                     l4266:
  6590  0049A0  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6591  0049A2  EFD5  F024         	goto	u3991
  6592  0049A6  EFD7  F024         	goto	u3990
  6593  0049AA                     u3991:
  6594  0049AA  EFE0  F024         	goto	l4270
  6595  0049AE                     u3990:
  6596  0049AE  6C01               	negf	___flge@ff1^0,c
  6597  0049B0  1E02               	comf	(___flge@ff1+1)^0,f,c
  6598  0049B2  B0D8               	btfsc	status,0,c
  6599  0049B4  2A02               	incf	(___flge@ff1+1)^0,f,c
  6600  0049B6  1E03               	comf	(___flge@ff1+2)^0,f,c
  6601  0049B8  B0D8               	btfsc	status,0,c
  6602  0049BA  2A03               	incf	(___flge@ff1+2)^0,f,c
  6603  0049BC  0E80               	movlw	128
  6604  0049BE  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6605  0049C0                     l4270:
  6606  0049C0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6607  0049C2  EFE5  F024         	goto	u4001
  6608  0049C6  EFE7  F024         	goto	u4000
  6609  0049CA                     u4001:
  6610  0049CA  EFF0  F024         	goto	l1011
  6611  0049CE                     u4000:
  6612  0049CE  6C05               	negf	___flge@ff2^0,c
  6613  0049D0  1E06               	comf	(___flge@ff2+1)^0,f,c
  6614  0049D2  B0D8               	btfsc	status,0,c
  6615  0049D4  2A06               	incf	(___flge@ff2+1)^0,f,c
  6616  0049D6  1E07               	comf	(___flge@ff2+2)^0,f,c
  6617  0049D8  B0D8               	btfsc	status,0,c
  6618  0049DA  2A07               	incf	(___flge@ff2+2)^0,f,c
  6619  0049DC  0E80               	movlw	128
  6620  0049DE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6621  0049E0                     l1011:
  6622  0049E0  0E00               	movlw	0
  6623  0049E2  1A01               	xorwf	___flge@ff1^0,f,c
  6624  0049E4  0E00               	movlw	0
  6625  0049E6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6626  0049E8  0E00               	movlw	0
  6627  0049EA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6628  0049EC  0E80               	movlw	128
  6629  0049EE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6630  0049F0  0E00               	movlw	0
  6631  0049F2  1A05               	xorwf	___flge@ff2^0,f,c
  6632  0049F4  0E00               	movlw	0
  6633  0049F6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6634  0049F8  0E00               	movlw	0
  6635  0049FA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6636  0049FC  0E80               	movlw	128
  6637  0049FE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6638  004A00  5005               	movf	___flge@ff2^0,w,c
  6639  004A02  5C01               	subwf	___flge@ff1^0,w,c
  6640  004A04  5006               	movf	(___flge@ff2+1)^0,w,c
  6641  004A06  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6642  004A08  5007               	movf	(___flge@ff2+2)^0,w,c
  6643  004A0A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6644  004A0C  5008               	movf	(___flge@ff2+3)^0,w,c
  6645  004A0E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6646  004A10  B0D8               	btfsc	status,0,c
  6647  004A12  EF0D  F025         	goto	u4011
  6648  004A16  EF0F  F025         	goto	u4010
  6649  004A1A                     u4011:
  6650  004A1A  EF12  F025         	goto	l4276
  6651  004A1E                     u4010:
  6652  004A1E  90D8               	bcf	status,0,c
  6653  004A20  EF13  F025         	goto	l1016
  6654  004A24                     l4276:
  6655  004A24  80D8               	bsf	status,0,c
  6656  004A26                     l1016:
  6657  004A26  0012               	return		;funcret
  6658  004A28                     __end_of___flge:
  6659                           	callstack 0
  6660                           
  6661 ;; *************** function ___fltol *****************
  6662 ;; Defined at:
  6663 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6664 ;; Parameters:    Size  Location     Type
  6665 ;;  f1              4   90[COMRAM] unsigned char 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  exp1            1    5[BANK0 ] unsigned char 
  6668 ;;  sign1           1    4[BANK0 ] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;                  4   90[COMRAM] long 
  6671 ;; Registers used:
  6672 ;;		wreg, status,2, status,0
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6681 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6682 ;;Total ram usage:       10 bytes
  6683 ;; Hardware stack levels used: 1
  6684 ;; Hardware stack levels required when called: 1
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_lroundf
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text25
  6693  00481C                     __ptext25:
  6694                           	callstack 0
  6695  00481C                     ___fltol:
  6696                           	callstack 26
  6697  00481C  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6698  00481E  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6699  004820  0100               	movlb	0	; () banked
  6700  004822  6F65               	movwf	___fltol@exp1& (0+255),b
  6701  004824  5165               	movf	___fltol@exp1& (0+255),w,b
  6702  004826  A4D8               	btfss	status,2,c
  6703  004828  EF18  F024         	goto	u4071
  6704  00482C  EF1A  F024         	goto	u4070
  6705  004830                     u4071:
  6706  004830  EF24  F024         	goto	l4364
  6707  004834                     u4070:
  6708  004834                     l4360:
  6709                           
  6710                           ; BSR set to: 0
  6711  004834  0E00               	movlw	0
  6712  004836  6E5B               	movwf	?___fltol^0,c
  6713  004838  0E00               	movlw	0
  6714  00483A  6E5C               	movwf	(?___fltol+1)^0,c
  6715  00483C  0E00               	movlw	0
  6716  00483E  6E5D               	movwf	(?___fltol+2)^0,c
  6717  004840  0E00               	movlw	0
  6718  004842  6E5E               	movwf	(?___fltol+3)^0,c
  6719  004844  EF91  F024         	goto	l1043
  6720  004848                     l4364:
  6721                           
  6722                           ; BSR set to: 0
  6723  004848  C05B  F060         	movff	___fltol@f1,??___fltol
  6724  00484C  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6725  004850  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6726  004854  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6727  004858  0E20               	movlw	32
  6728  00485A  EF34  F024         	goto	u4080
  6729  00485E                     u4085:
  6730  00485E  90D8               	bcf	status,0,c
  6731  004860  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6732  004862  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6733  004864  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6734  004866  3360               	rrcf	??___fltol& (0+255),f,b
  6735  004868                     u4080:
  6736  004868  2EE8               	decfsz	wreg,f,c
  6737  00486A  EF2F  F024         	goto	u4085
  6738  00486E  5160               	movf	??___fltol& (0+255),w,b
  6739  004870  6F64               	movwf	___fltol@sign1& (0+255),b
  6740  004872                     
  6741                           ; BSR set to: 0
  6742  004872  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6743  004874                     
  6744                           ; BSR set to: 0
  6745  004874  0EFF               	movlw	255
  6746  004876  165B               	andwf	___fltol@f1^0,f,c
  6747  004878  0EFF               	movlw	255
  6748  00487A  165C               	andwf	(___fltol@f1+1)^0,f,c
  6749  00487C  0EFF               	movlw	255
  6750  00487E  165D               	andwf	(___fltol@f1+2)^0,f,c
  6751  004880  0E00               	movlw	0
  6752  004882  165E               	andwf	(___fltol@f1+3)^0,f,c
  6753  004884                     
  6754                           ; BSR set to: 0
  6755  004884  0E96               	movlw	150
  6756  004886  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6757  004888                     
  6758                           ; BSR set to: 0
  6759  004888  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  6760  00488A  EF4B  F024         	goto	u4090
  6761  00488E  EF49  F024         	goto	u4091
  6762  004892                     u4091:
  6763  004892  EF61  F024         	goto	l4384
  6764  004896                     u4090:
  6765  004896                     
  6766                           ; BSR set to: 0
  6767  004896  5165               	movf	___fltol@exp1& (0+255),w,b
  6768  004898  0A80               	xorlw	128
  6769  00489A  0F97               	addlw	151
  6770  00489C  B0D8               	btfsc	status,0,c
  6771  00489E  EF53  F024         	goto	u4101
  6772  0048A2  EF55  F024         	goto	u4100
  6773  0048A6                     u4101:
  6774  0048A6  EF57  F024         	goto	l4380
  6775  0048AA                     u4100:
  6776  0048AA  EF1A  F024         	goto	l4360
  6777  0048AE                     l4380:
  6778                           
  6779                           ; BSR set to: 0
  6780  0048AE  90D8               	bcf	status,0,c
  6781  0048B0  325E               	rrcf	(___fltol@f1+3)^0,f,c
  6782  0048B2  325D               	rrcf	(___fltol@f1+2)^0,f,c
  6783  0048B4  325C               	rrcf	(___fltol@f1+1)^0,f,c
  6784  0048B6  325B               	rrcf	___fltol@f1^0,f,c
  6785  0048B8                     
  6786                           ; BSR set to: 0
  6787  0048B8  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6788  0048BA  EF57  F024         	goto	l4380
  6789  0048BE  EF79  F024         	goto	l4394
  6790  0048C2                     l4384:
  6791                           
  6792                           ; BSR set to: 0
  6793  0048C2  0E1F               	movlw	31
  6794  0048C4  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6795  0048C6  EF67  F024         	goto	u4111
  6796  0048CA  EF69  F024         	goto	u4110
  6797  0048CE                     u4111:
  6798  0048CE  EF71  F024         	goto	l4392
  6799  0048D2                     u4110:
  6800  0048D2  EF1A  F024         	goto	l4360
  6801  0048D6                     l4390:
  6802                           
  6803                           ; BSR set to: 0
  6804  0048D6  90D8               	bcf	status,0,c
  6805  0048D8  365B               	rlcf	___fltol@f1^0,f,c
  6806  0048DA  365C               	rlcf	(___fltol@f1+1)^0,f,c
  6807  0048DC  365D               	rlcf	(___fltol@f1+2)^0,f,c
  6808  0048DE  365E               	rlcf	(___fltol@f1+3)^0,f,c
  6809  0048E0  0765               	decf	___fltol@exp1& (0+255),f,b
  6810  0048E2                     l4392:
  6811                           
  6812                           ; BSR set to: 0
  6813  0048E2  5165               	movf	___fltol@exp1& (0+255),w,b
  6814  0048E4  A4D8               	btfss	status,2,c
  6815  0048E6  EF77  F024         	goto	u4121
  6816  0048EA  EF79  F024         	goto	u4120
  6817  0048EE                     u4121:
  6818  0048EE  EF6B  F024         	goto	l4390
  6819  0048F2                     u4120:
  6820  0048F2                     l4394:
  6821                           
  6822                           ; BSR set to: 0
  6823  0048F2  5164               	movf	___fltol@sign1& (0+255),w,b
  6824  0048F4  B4D8               	btfsc	status,2,c
  6825  0048F6  EF7F  F024         	goto	u4131
  6826  0048FA  EF81  F024         	goto	u4130
  6827  0048FE                     u4131:
  6828  0048FE  EF89  F024         	goto	l4398
  6829  004902                     u4130:
  6830  004902                     
  6831                           ; BSR set to: 0
  6832  004902  1E5E               	comf	(___fltol@f1+3)^0,f,c
  6833  004904  1E5D               	comf	(___fltol@f1+2)^0,f,c
  6834  004906  1E5C               	comf	(___fltol@f1+1)^0,f,c
  6835  004908  6C5B               	negf	___fltol@f1^0,c
  6836  00490A  0E00               	movlw	0
  6837  00490C  225C               	addwfc	(___fltol@f1+1)^0,f,c
  6838  00490E  225D               	addwfc	(___fltol@f1+2)^0,f,c
  6839  004910  225E               	addwfc	(___fltol@f1+3)^0,f,c
  6840  004912                     l4398:
  6841                           
  6842                           ; BSR set to: 0
  6843  004912  C05B  F05B         	movff	___fltol@f1,?___fltol
  6844  004916  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  6845  00491A  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  6846  00491E  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  6847  004922                     l1043:
  6848                           
  6849                           ; BSR set to: 0
  6850  004922  0012               	return		;funcret
  6851  004924                     __end_of___fltol:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _color_read_Clear *****************
  6855 ;; Defined at:
  6856 ;;		line 133 in file "color.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;		None
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  tmp             2    9[COMRAM] unsigned int 
  6861 ;; Return value:  Size  Location     Type
  6862 ;;                  2    4[COMRAM] unsigned int 
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0, cstack
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6873 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;Total ram usage:        7 bytes
  6875 ;; Hardware stack levels used: 1
  6876 ;; Hardware stack levels required when called: 3
  6877 ;; This function calls:
  6878 ;;		_I2C_2_Master_Read
  6879 ;;		_I2C_2_Master_RepStart
  6880 ;;		_I2C_2_Master_Start
  6881 ;;		_I2C_2_Master_Stop
  6882 ;;		_I2C_2_Master_Write
  6883 ;; This function is called by:
  6884 ;;		_read_color
  6885 ;;		_calibrate_white
  6886 ;;		_amb_light_measure
  6887 ;;		_distance_measure
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text26
  6892  00538C                     __ptext26:
  6893                           	callstack 0
  6894  00538C                     _color_read_Clear:
  6895                           	callstack 24
  6896  00538C                     
  6897                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  6898  00538C  ECA9  F02C         	call	_I2C_2_Master_Start	;wreg free
  6899                           
  6900                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  6901  005390  0E52               	movlw	82
  6902  005392  EC93  F02C         	call	_I2C_2_Master_Write
  6903                           
  6904                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  6905  005396  0EB4               	movlw	180
  6906  005398  EC93  F02C         	call	_I2C_2_Master_Write
  6907                           
  6908                           ;color.c: 139:  I2C_2_Master_RepStart();
  6909  00539C  EC9F  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6910                           
  6911                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  6912  0053A0  0E53               	movlw	83
  6913  0053A2  EC93  F02C         	call	_I2C_2_Master_Write
  6914                           
  6915                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  6916  0053A6  0E01               	movlw	1
  6917  0053A8  EC54  F02A         	call	_I2C_2_Master_Read
  6918  0053AC  6E07               	movwf	??_color_read_Clear^0,c
  6919  0053AE  5007               	movf	??_color_read_Clear^0,w,c
  6920  0053B0  6E0A               	movwf	color_read_Clear@tmp^0,c
  6921  0053B2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6922                           
  6923                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6924  0053B4  0E00               	movlw	0
  6925  0053B6  EC54  F02A         	call	_I2C_2_Master_Read
  6926  0053BA  6E07               	movwf	??_color_read_Clear^0,c
  6927  0053BC  5007               	movf	??_color_read_Clear^0,w,c
  6928  0053BE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6929  0053C0  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6930  0053C2  500A               	movf	color_read_Clear@tmp^0,w,c
  6931  0053C4  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6932  0053C6  6E0A               	movwf	color_read_Clear@tmp^0,c
  6933  0053C8  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6934  0053CA  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6935  0053CC  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6936                           
  6937                           ;color.c: 143:  I2C_2_Master_Stop();
  6938  0053CE  ECA4  F02C         	call	_I2C_2_Master_Stop	;wreg free
  6939  0053D2                     
  6940                           ;color.c: 144:  return tmp;
  6941  0053D2  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6942  0053D6  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6943  0053DA  0012               	return		;funcret
  6944  0053DC                     __end_of_color_read_Clear:
  6945                           	callstack 0
  6946                           
  6947 ;; *************** function _I2C_2_Master_RepStart *****************
  6948 ;; Defined at:
  6949 ;;		line 33 in file "i2c.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;                  1    wreg      void 
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 0/0
  6960 ;;		On exit  : 0/0
  6961 ;;		Unchanged: 0/0
  6962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6967 ;;Total ram usage:        0 bytes
  6968 ;; Hardware stack levels used: 1
  6969 ;; Hardware stack levels required when called: 2
  6970 ;; This function calls:
  6971 ;;		_I2C_2_Master_Idle
  6972 ;; This function is called by:
  6973 ;;		_color_read_Red
  6974 ;;		_color_read_Blue
  6975 ;;		_color_read_Green
  6976 ;;		_color_read_Clear
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text27
  6981  00593E                     __ptext27:
  6982                           	callstack 0
  6983  00593E                     _I2C_2_Master_RepStart:
  6984                           	callstack 24
  6985  00593E                     
  6986                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6987  00593E  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  6988  005942                     
  6989                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6990  005942  010E               	movlb	14	; () banked
  6991  005944  83DA               	bsf	218,1,b	;volatile
  6992  005946                     
  6993                           ; BSR set to: 14
  6994  005946  0012               	return		;funcret
  6995  005948                     __end_of_I2C_2_Master_RepStart:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _I2C_2_Master_Read *****************
  6999 ;; Defined at:
  7000 ;;		line 51 in file "i2c.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  ack             1    wreg     unsigned char 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  ack             1    2[COMRAM] unsigned char 
  7005 ;;  tmp             1    3[COMRAM] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  1    wreg      unsigned char 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;Total ram usage:        3 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; Hardware stack levels required when called: 2
  7022 ;; This function calls:
  7023 ;;		_I2C_2_Master_Idle
  7024 ;; This function is called by:
  7025 ;;		_color_read_Red
  7026 ;;		_color_read_Blue
  7027 ;;		_color_read_Green
  7028 ;;		_color_read_Clear
  7029 ;; This function uses a non-reentrant model
  7030 ;;
  7031                           
  7032                           	psect	text28
  7033  0054A8                     __ptext28:
  7034                           	callstack 0
  7035  0054A8                     _I2C_2_Master_Read:
  7036                           	callstack 24
  7037                           
  7038                           ; BSR set to: 14
  7039                           ;incstack = 0
  7040                           ;I2C_2_Master_Read@ack stored from wreg
  7041  0054A8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7042  0054AA                     
  7043                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7044  0054AA  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7045  0054AE                     
  7046                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7047  0054AE  010E               	movlb	14	; () banked
  7048  0054B0  87DA               	bsf	218,3,b	;volatile
  7049                           
  7050                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7051  0054B2  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7052  0054B6                     
  7053                           ;i2c.c: 57:   tmp = SSP2BUF;
  7054  0054B6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7055                           
  7056                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7057  0054BA  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7058  0054BE                     
  7059                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7060  0054BE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7061  0054C0  B4D8               	btfsc	status,2,c
  7062  0054C2  EF65  F02A         	goto	u3711
  7063  0054C6  EF69  F02A         	goto	u3710
  7064  0054CA                     u3711:
  7065  0054CA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7066  0054CC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7067  0054CE  EF6A  F02A         	goto	u3728
  7068  0054D2                     u3710:
  7069  0054D2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7070  0054D4                     u3728:
  7071  0054D4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7072  0054D6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7073  0054D8  010E               	movlb	14	; () banked
  7074  0054DA  51DA               	movf	218,w,b	;volatile
  7075  0054DC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7076  0054DE  0BDF               	andlw	-33
  7077  0054E0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7078  0054E2  6FDA               	movwf	218,b	;volatile
  7079  0054E4                     
  7080                           ; BSR set to: 14
  7081                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7082  0054E4  89DA               	bsf	218,4,b	;volatile
  7083  0054E6                     
  7084                           ; BSR set to: 14
  7085                           ;i2c.c: 61:   return tmp;
  7086  0054E6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7087  0054E8                     
  7088                           ; BSR set to: 14
  7089  0054E8  0012               	return		;funcret
  7090  0054EA                     __end_of_I2C_2_Master_Read:
  7091                           	callstack 0
  7092                           
  7093 ;; *************** function ___xxtofl *****************
  7094 ;; Defined at:
  7095 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  sign            1    wreg     unsigned char 
  7098 ;;  val             4    0[COMRAM] long 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  sign            1    8[COMRAM] unsigned char 
  7101 ;;  arg             4   10[COMRAM] unsigned long 
  7102 ;;  exp             1    9[COMRAM] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  4    0[COMRAM] unsigned char 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7116 ;;Total ram usage:       14 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; Hardware stack levels required when called: 1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_detect_color
  7123 ;;		_amb_light_measure
  7124 ;;		_distance_measure
  7125 ;;		_check_color_reading
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text29
  7130  003CBE                     __ptext29:
  7131                           	callstack 0
  7132  003CBE                     ___xxtofl:
  7133                           	callstack 27
  7134                           
  7135                           ; BSR set to: 14
  7136                           ;incstack = 0
  7137                           ;___xxtofl@sign stored from wreg
  7138  003CBE  6E09               	movwf	___xxtofl@sign^0,c
  7139  003CC0  5009               	movf	___xxtofl@sign^0,w,c
  7140  003CC2  B4D8               	btfsc	status,2,c
  7141  003CC4  EF66  F01E         	goto	u4841
  7142  003CC8  EF68  F01E         	goto	u4840
  7143  003CCC                     u4841:
  7144  003CCC  EF8A  F01E         	goto	l1401
  7145  003CD0                     u4840:
  7146  003CD0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7147  003CD2  EF6F  F01E         	goto	u4850
  7148  003CD6  EF6D  F01E         	goto	u4851
  7149  003CDA                     u4851:
  7150  003CDA  EF8A  F01E         	goto	l1401
  7151  003CDE                     u4850:
  7152  003CDE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7153  003CE2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7154  003CE6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7155  003CEA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7156  003CEE  1E05               	comf	??___xxtofl^0,f,c
  7157  003CF0  1E06               	comf	(??___xxtofl+1)^0,f,c
  7158  003CF2  1E07               	comf	(??___xxtofl+2)^0,f,c
  7159  003CF4  1E08               	comf	(??___xxtofl+3)^0,f,c
  7160  003CF6  2A05               	incf	??___xxtofl^0,f,c
  7161  003CF8  0E00               	movlw	0
  7162  003CFA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7163  003CFC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7164  003CFE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7165  003D00  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7166  003D04  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7167  003D08  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7168  003D0C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7169  003D10  EF92  F01E         	goto	l4752
  7170  003D14                     l1401:
  7171  003D14  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7172  003D18  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7173  003D1C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7174  003D20  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7175  003D24                     l4752:
  7176  003D24  5001               	movf	___xxtofl@val^0,w,c
  7177  003D26  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7178  003D28  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7179  003D2A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7180  003D2C  A4D8               	btfss	status,2,c
  7181  003D2E  EF9B  F01E         	goto	u4861
  7182  003D32  EF9D  F01E         	goto	u4860
  7183  003D36                     u4861:
  7184  003D36  EFA7  F01E         	goto	l4758
  7185  003D3A                     u4860:
  7186  003D3A  0E00               	movlw	0
  7187  003D3C  6E01               	movwf	?___xxtofl^0,c
  7188  003D3E  0E00               	movlw	0
  7189  003D40  6E02               	movwf	(?___xxtofl+1)^0,c
  7190  003D42  0E00               	movlw	0
  7191  003D44  6E03               	movwf	(?___xxtofl+2)^0,c
  7192  003D46  0E00               	movlw	0
  7193  003D48  6E04               	movwf	(?___xxtofl+3)^0,c
  7194  003D4A  EF38  F01F         	goto	l1404
  7195  003D4E                     l4758:
  7196  003D4E  0E96               	movlw	150
  7197  003D50  6E0A               	movwf	___xxtofl@exp^0,c
  7198  003D52  EFB1  F01E         	goto	l4762
  7199  003D56                     l4760:
  7200  003D56  2A0A               	incf	___xxtofl@exp^0,f,c
  7201  003D58  90D8               	bcf	status,0,c
  7202  003D5A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7203  003D5C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7204  003D5E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7205  003D60  320B               	rrcf	___xxtofl@arg^0,f,c
  7206  003D62                     l4762:
  7207  003D62  0E00               	movlw	0
  7208  003D64  140B               	andwf	___xxtofl@arg^0,w,c
  7209  003D66  6E05               	movwf	??___xxtofl^0,c
  7210  003D68  0E00               	movlw	0
  7211  003D6A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7212  003D6C  6E06               	movwf	(??___xxtofl+1)^0,c
  7213  003D6E  0E00               	movlw	0
  7214  003D70  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7215  003D72  6E07               	movwf	(??___xxtofl+2)^0,c
  7216  003D74  0EFE               	movlw	254
  7217  003D76  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7218  003D78  6E08               	movwf	(??___xxtofl+3)^0,c
  7219  003D7A  5005               	movf	??___xxtofl^0,w,c
  7220  003D7C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7221  003D7E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7222  003D80  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7223  003D82  A4D8               	btfss	status,2,c
  7224  003D84  EFC6  F01E         	goto	u4871
  7225  003D88  EFC8  F01E         	goto	u4870
  7226  003D8C                     u4871:
  7227  003D8C  EFAB  F01E         	goto	l4760
  7228  003D90                     u4870:
  7229  003D90  EFD6  F01E         	goto	l1408
  7230  003D94                     l4764:
  7231  003D94  2A0A               	incf	___xxtofl@exp^0,f,c
  7232  003D96  0E01               	movlw	1
  7233  003D98  260B               	addwf	___xxtofl@arg^0,f,c
  7234  003D9A  0E00               	movlw	0
  7235  003D9C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7236  003D9E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7237  003DA0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7238  003DA2  90D8               	bcf	status,0,c
  7239  003DA4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7240  003DA6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7241  003DA8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7242  003DAA  320B               	rrcf	___xxtofl@arg^0,f,c
  7243  003DAC                     l1408:
  7244  003DAC  0E00               	movlw	0
  7245  003DAE  140B               	andwf	___xxtofl@arg^0,w,c
  7246  003DB0  6E05               	movwf	??___xxtofl^0,c
  7247  003DB2  0E00               	movlw	0
  7248  003DB4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7249  003DB6  6E06               	movwf	(??___xxtofl+1)^0,c
  7250  003DB8  0E00               	movlw	0
  7251  003DBA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7252  003DBC  6E07               	movwf	(??___xxtofl+2)^0,c
  7253  003DBE  0EFF               	movlw	255
  7254  003DC0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7255  003DC2  6E08               	movwf	(??___xxtofl+3)^0,c
  7256  003DC4  5005               	movf	??___xxtofl^0,w,c
  7257  003DC6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7258  003DC8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7259  003DCA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7260  003DCC  A4D8               	btfss	status,2,c
  7261  003DCE  EFEB  F01E         	goto	u4881
  7262  003DD2  EFED  F01E         	goto	u4880
  7263  003DD6                     u4881:
  7264  003DD6  EFCA  F01E         	goto	l4764
  7265  003DDA                     u4880:
  7266  003DDA  EFF5  F01E         	goto	l4772
  7267  003DDE                     l4770:
  7268  003DDE  060A               	decf	___xxtofl@exp^0,f,c
  7269  003DE0  90D8               	bcf	status,0,c
  7270  003DE2  360B               	rlcf	___xxtofl@arg^0,f,c
  7271  003DE4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7272  003DE6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7273  003DE8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7274  003DEA                     l4772:
  7275  003DEA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7276  003DEC  EFFA  F01E         	goto	u4891
  7277  003DF0  EFFC  F01E         	goto	u4890
  7278  003DF4                     u4891:
  7279  003DF4  EF04  F01F         	goto	l1415
  7280  003DF8                     u4890:
  7281  003DF8  0E02               	movlw	2
  7282  003DFA  600A               	cpfslt	___xxtofl@exp^0,c
  7283  003DFC  EF02  F01F         	goto	u4901
  7284  003E00  EF04  F01F         	goto	u4900
  7285  003E04                     u4901:
  7286  003E04  EFEF  F01E         	goto	l4770
  7287  003E08                     u4900:
  7288  003E08                     l1415:
  7289  003E08  B00A               	btfsc	___xxtofl@exp^0,0,c
  7290  003E0A  EF09  F01F         	goto	u4911
  7291  003E0E  EF0B  F01F         	goto	u4910
  7292  003E12                     u4911:
  7293  003E12  EF0C  F01F         	goto	l4778
  7294  003E16                     u4910:
  7295  003E16  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7296  003E18                     l4778:
  7297  003E18  90D8               	bcf	status,0,c
  7298  003E1A  320A               	rrcf	___xxtofl@exp^0,f,c
  7299  003E1C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7300  003E20  6A06               	clrf	(??___xxtofl+1)^0,c
  7301  003E22  6A07               	clrf	(??___xxtofl+2)^0,c
  7302  003E24  6A08               	clrf	(??___xxtofl+3)^0,c
  7303  003E26  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7304  003E2A  6A07               	clrf	(??___xxtofl+2)^0,c
  7305  003E2C  6A06               	clrf	(??___xxtofl+1)^0,c
  7306  003E2E  6A05               	clrf	??___xxtofl^0,c
  7307  003E30  5005               	movf	??___xxtofl^0,w,c
  7308  003E32  120B               	iorwf	___xxtofl@arg^0,f,c
  7309  003E34  5006               	movf	(??___xxtofl+1)^0,w,c
  7310  003E36  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7311  003E38  5007               	movf	(??___xxtofl+2)^0,w,c
  7312  003E3A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7313  003E3C  5008               	movf	(??___xxtofl+3)^0,w,c
  7314  003E3E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7315  003E40  5009               	movf	___xxtofl@sign^0,w,c
  7316  003E42  B4D8               	btfsc	status,2,c
  7317  003E44  EF26  F01F         	goto	u4921
  7318  003E48  EF28  F01F         	goto	u4920
  7319  003E4C                     u4921:
  7320  003E4C  EF30  F01F         	goto	l4788
  7321  003E50                     u4920:
  7322  003E50  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7323  003E52  EF2F  F01F         	goto	u4930
  7324  003E56  EF2D  F01F         	goto	u4931
  7325  003E5A                     u4931:
  7326  003E5A  EF30  F01F         	goto	l4788
  7327  003E5E                     u4930:
  7328  003E5E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7329  003E60                     l4788:
  7330  003E60  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7331  003E64  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7332  003E68  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7333  003E6C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7334  003E70                     l1404:
  7335  003E70  0012               	return		;funcret
  7336  003E72                     __end_of___xxtofl:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function ___fldiv *****************
  7340 ;; Defined at:
  7341 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  b               4   14[COMRAM] unsigned char 
  7344 ;;  a               4   18[COMRAM] unsigned char 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  grs             4   33[COMRAM] unsigned long 
  7347 ;;  rem             4   26[COMRAM] unsigned long 
  7348 ;;  new_exp         2   31[COMRAM] short 
  7349 ;;  aexp            1   38[COMRAM] unsigned char 
  7350 ;;  bexp            1   37[COMRAM] unsigned char 
  7351 ;;  sign            1   30[COMRAM] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  4   14[COMRAM] unsigned char 
  7354 ;; Registers used:
  7355 ;;		wreg, status,2, status,0
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7362 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;Total ram usage:       25 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 1
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_detect_color
  7372 ;;		_amb_light_measure
  7373 ;;		_check_color_reading
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text30
  7378  002868                     __ptext30:
  7379                           	callstack 0
  7380  002868                     ___fldiv:
  7381                           	callstack 27
  7382  002868  5012               	movf	(___fldiv@b+3)^0,w,c
  7383  00286A  0B80               	andlw	128
  7384  00286C  6E1F               	movwf	___fldiv@sign^0,c
  7385  00286E  5012               	movf	(___fldiv@b+3)^0,w,c
  7386  002870  2412               	addwf	(___fldiv@b+3)^0,w,c
  7387  002872  6E26               	movwf	___fldiv@bexp^0,c
  7388  002874  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7389  002876  EF3F  F014         	goto	u4611
  7390  00287A  EF41  F014         	goto	u4610
  7391  00287E                     u4611:
  7392  00287E  EF42  F014         	goto	l4614
  7393  002882                     u4610:
  7394  002882  8026               	bsf	___fldiv@bexp^0,0,c
  7395  002884                     l4614:
  7396  002884  5026               	movf	___fldiv@bexp^0,w,c
  7397  002886  B4D8               	btfsc	status,2,c
  7398  002888  EF48  F014         	goto	u4621
  7399  00288C  EF4A  F014         	goto	u4620
  7400  002890                     u4621:
  7401  002890  EF5F  F014         	goto	l4624
  7402  002894                     u4620:
  7403  002894  2826               	incf	___fldiv@bexp^0,w,c
  7404  002896  A4D8               	btfss	status,2,c
  7405  002898  EF50  F014         	goto	u4631
  7406  00289C  EF52  F014         	goto	u4630
  7407  0028A0                     u4631:
  7408  0028A0  EF5A  F014         	goto	l4620
  7409  0028A4                     u4630:
  7410  0028A4  0E00               	movlw	0
  7411  0028A6  6E0F               	movwf	___fldiv@b^0,c
  7412  0028A8  0E00               	movlw	0
  7413  0028AA  6E10               	movwf	(___fldiv@b+1)^0,c
  7414  0028AC  0E00               	movlw	0
  7415  0028AE  6E11               	movwf	(___fldiv@b+2)^0,c
  7416  0028B0  0E00               	movlw	0
  7417  0028B2  6E12               	movwf	(___fldiv@b+3)^0,c
  7418  0028B4                     l4620:
  7419  0028B4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7420  0028B6  0E00               	movlw	0
  7421  0028B8  6E12               	movwf	(___fldiv@b+3)^0,c
  7422  0028BA  EF67  F014         	goto	l4626
  7423  0028BE                     l4624:
  7424  0028BE  0E00               	movlw	0
  7425  0028C0  6E0F               	movwf	___fldiv@b^0,c
  7426  0028C2  0E00               	movlw	0
  7427  0028C4  6E10               	movwf	(___fldiv@b+1)^0,c
  7428  0028C6  0E00               	movlw	0
  7429  0028C8  6E11               	movwf	(___fldiv@b+2)^0,c
  7430  0028CA  0E00               	movlw	0
  7431  0028CC  6E12               	movwf	(___fldiv@b+3)^0,c
  7432  0028CE                     l4626:
  7433  0028CE  5016               	movf	(___fldiv@a+3)^0,w,c
  7434  0028D0  0B80               	andlw	128
  7435  0028D2  1A1F               	xorwf	___fldiv@sign^0,f,c
  7436  0028D4  5016               	movf	(___fldiv@a+3)^0,w,c
  7437  0028D6  2416               	addwf	(___fldiv@a+3)^0,w,c
  7438  0028D8  6E27               	movwf	___fldiv@aexp^0,c
  7439  0028DA  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7440  0028DC  EF72  F014         	goto	u4641
  7441  0028E0  EF74  F014         	goto	u4640
  7442  0028E4                     u4641:
  7443  0028E4  EF75  F014         	goto	l4634
  7444  0028E8                     u4640:
  7445  0028E8  8027               	bsf	___fldiv@aexp^0,0,c
  7446  0028EA                     l4634:
  7447  0028EA  5027               	movf	___fldiv@aexp^0,w,c
  7448  0028EC  B4D8               	btfsc	status,2,c
  7449  0028EE  EF7B  F014         	goto	u4651
  7450  0028F2  EF7D  F014         	goto	u4650
  7451  0028F6                     u4651:
  7452  0028F6  EF92  F014         	goto	l4644
  7453  0028FA                     u4650:
  7454  0028FA  2827               	incf	___fldiv@aexp^0,w,c
  7455  0028FC  A4D8               	btfss	status,2,c
  7456  0028FE  EF83  F014         	goto	u4661
  7457  002902  EF85  F014         	goto	u4660
  7458  002906                     u4661:
  7459  002906  EF8D  F014         	goto	l4640
  7460  00290A                     u4660:
  7461  00290A  0E00               	movlw	0
  7462  00290C  6E13               	movwf	___fldiv@a^0,c
  7463  00290E  0E00               	movlw	0
  7464  002910  6E14               	movwf	(___fldiv@a+1)^0,c
  7465  002912  0E00               	movlw	0
  7466  002914  6E15               	movwf	(___fldiv@a+2)^0,c
  7467  002916  0E00               	movlw	0
  7468  002918  6E16               	movwf	(___fldiv@a+3)^0,c
  7469  00291A                     l4640:
  7470  00291A  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7471  00291C  0E00               	movlw	0
  7472  00291E  6E16               	movwf	(___fldiv@a+3)^0,c
  7473  002920  EF9A  F014         	goto	l4646
  7474  002924                     l4644:
  7475  002924  0E00               	movlw	0
  7476  002926  6E13               	movwf	___fldiv@a^0,c
  7477  002928  0E00               	movlw	0
  7478  00292A  6E14               	movwf	(___fldiv@a+1)^0,c
  7479  00292C  0E00               	movlw	0
  7480  00292E  6E15               	movwf	(___fldiv@a+2)^0,c
  7481  002930  0E00               	movlw	0
  7482  002932  6E16               	movwf	(___fldiv@a+3)^0,c
  7483  002934                     l4646:
  7484  002934  5013               	movf	___fldiv@a^0,w,c
  7485  002936  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7486  002938  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7487  00293A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7488  00293C  A4D8               	btfss	status,2,c
  7489  00293E  EFA3  F014         	goto	u4671
  7490  002942  EFA5  F014         	goto	u4670
  7491  002946                     u4671:
  7492  002946  EFBD  F014         	goto	l4658
  7493  00294A                     u4670:
  7494  00294A  0E00               	movlw	0
  7495  00294C  6E0F               	movwf	___fldiv@b^0,c
  7496  00294E  0E00               	movlw	0
  7497  002950  6E10               	movwf	(___fldiv@b+1)^0,c
  7498  002952  0E00               	movlw	0
  7499  002954  6E11               	movwf	(___fldiv@b+2)^0,c
  7500  002956  0E00               	movlw	0
  7501  002958  6E12               	movwf	(___fldiv@b+3)^0,c
  7502  00295A  0E80               	movlw	128
  7503  00295C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7504  00295E  0E7F               	movlw	127
  7505  002960  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7506  002962                     l4652:
  7507  002962  501F               	movf	___fldiv@sign^0,w,c
  7508  002964  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7509  002966  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7510  00296A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7511  00296E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7512  002972  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7513  002976  EF00  F016         	goto	l1328
  7514  00297A                     l4658:
  7515  00297A  5026               	movf	___fldiv@bexp^0,w,c
  7516  00297C  A4D8               	btfss	status,2,c
  7517  00297E  EFC3  F014         	goto	u4681
  7518  002982  EFC5  F014         	goto	u4680
  7519  002986                     u4681:
  7520  002986  EFCF  F014         	goto	l4666
  7521  00298A                     u4680:
  7522  00298A  0E00               	movlw	0
  7523  00298C  6E0F               	movwf	?___fldiv^0,c
  7524  00298E  0E00               	movlw	0
  7525  002990  6E10               	movwf	(?___fldiv+1)^0,c
  7526  002992  0E00               	movlw	0
  7527  002994  6E11               	movwf	(?___fldiv+2)^0,c
  7528  002996  0E00               	movlw	0
  7529  002998  6E12               	movwf	(?___fldiv+3)^0,c
  7530  00299A  EF00  F016         	goto	l1328
  7531  00299E                     l4666:
  7532  00299E  5027               	movf	___fldiv@aexp^0,w,c
  7533  0029A0  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7534  0029A4  6A18               	clrf	(??___fldiv+1)^0,c
  7535  0029A6  5E17               	subwf	??___fldiv^0,f,c
  7536  0029A8  0E00               	movlw	0
  7537  0029AA  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7538  0029AC  0E7F               	movlw	127
  7539  0029AE  2417               	addwf	??___fldiv^0,w,c
  7540  0029B0  6E20               	movwf	___fldiv@new_exp^0,c
  7541  0029B2  0E00               	movlw	0
  7542  0029B4  2018               	addwfc	(??___fldiv+1)^0,w,c
  7543  0029B6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7544  0029B8  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7545  0029BC  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7546  0029C0  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7547  0029C4  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7548  0029C8  0E00               	movlw	0
  7549  0029CA  6E0F               	movwf	___fldiv@b^0,c
  7550  0029CC  0E00               	movlw	0
  7551  0029CE  6E10               	movwf	(___fldiv@b+1)^0,c
  7552  0029D0  0E00               	movlw	0
  7553  0029D2  6E11               	movwf	(___fldiv@b+2)^0,c
  7554  0029D4  0E00               	movlw	0
  7555  0029D6  6E12               	movwf	(___fldiv@b+3)^0,c
  7556  0029D8  0E00               	movlw	0
  7557  0029DA  6E22               	movwf	___fldiv@grs^0,c
  7558  0029DC  0E00               	movlw	0
  7559  0029DE  6E23               	movwf	(___fldiv@grs+1)^0,c
  7560  0029E0  0E00               	movlw	0
  7561  0029E2  6E24               	movwf	(___fldiv@grs+2)^0,c
  7562  0029E4  0E00               	movlw	0
  7563  0029E6  6E25               	movwf	(___fldiv@grs+3)^0,c
  7564  0029E8  0E00               	movlw	0
  7565  0029EA  6E27               	movwf	___fldiv@aexp^0,c
  7566  0029EC  EF30  F015         	goto	l1330
  7567  0029F0                     l4676:
  7568  0029F0  5027               	movf	___fldiv@aexp^0,w,c
  7569  0029F2  B4D8               	btfsc	status,2,c
  7570  0029F4  EFFE  F014         	goto	u4691
  7571  0029F8  EF00  F015         	goto	u4690
  7572  0029FC                     u4691:
  7573  0029FC  EF17  F015         	goto	l4684
  7574  002A00                     u4690:
  7575  002A00  90D8               	bcf	status,0,c
  7576  002A02  361B               	rlcf	___fldiv@rem^0,f,c
  7577  002A04  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7578  002A06  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7579  002A08  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7580  002A0A  90D8               	bcf	status,0,c
  7581  002A0C  360F               	rlcf	___fldiv@b^0,f,c
  7582  002A0E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7583  002A10  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7584  002A12  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7585  002A14  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7586  002A16  EF0F  F015         	goto	u4701
  7587  002A1A  EF11  F015         	goto	u4700
  7588  002A1E                     u4701:
  7589  002A1E  EF12  F015         	goto	l1333
  7590  002A22                     u4700:
  7591  002A22  800F               	bsf	___fldiv@b^0,0,c
  7592  002A24                     l1333:
  7593  002A24  90D8               	bcf	status,0,c
  7594  002A26  3622               	rlcf	___fldiv@grs^0,f,c
  7595  002A28  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7596  002A2A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7597  002A2C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7598  002A2E                     l4684:
  7599  002A2E  5013               	movf	___fldiv@a^0,w,c
  7600  002A30  5C1B               	subwf	___fldiv@rem^0,w,c
  7601  002A32  5014               	movf	(___fldiv@a+1)^0,w,c
  7602  002A34  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7603  002A36  5015               	movf	(___fldiv@a+2)^0,w,c
  7604  002A38  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7605  002A3A  5016               	movf	(___fldiv@a+3)^0,w,c
  7606  002A3C  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7607  002A3E  A0D8               	btfss	status,0,c
  7608  002A40  EF24  F015         	goto	u4711
  7609  002A44  EF26  F015         	goto	u4710
  7610  002A48                     u4711:
  7611  002A48  EF2F  F015         	goto	l4690
  7612  002A4C                     u4710:
  7613  002A4C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7614  002A4E  5013               	movf	___fldiv@a^0,w,c
  7615  002A50  5E1B               	subwf	___fldiv@rem^0,f,c
  7616  002A52  5014               	movf	(___fldiv@a+1)^0,w,c
  7617  002A54  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7618  002A56  5015               	movf	(___fldiv@a+2)^0,w,c
  7619  002A58  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7620  002A5A  5016               	movf	(___fldiv@a+3)^0,w,c
  7621  002A5C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7622  002A5E                     l4690:
  7623  002A5E  2A27               	incf	___fldiv@aexp^0,f,c
  7624  002A60                     l1330:
  7625  002A60  0E19               	movlw	25
  7626  002A62  6427               	cpfsgt	___fldiv@aexp^0,c
  7627  002A64  EF36  F015         	goto	u4721
  7628  002A68  EF38  F015         	goto	u4720
  7629  002A6C                     u4721:
  7630  002A6C  EFF8  F014         	goto	l4676
  7631  002A70                     u4720:
  7632  002A70  501B               	movf	___fldiv@rem^0,w,c
  7633  002A72  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7634  002A74  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7635  002A76  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7636  002A78  B4D8               	btfsc	status,2,c
  7637  002A7A  EF41  F015         	goto	u4731
  7638  002A7E  EF43  F015         	goto	u4730
  7639  002A82                     u4731:
  7640  002A82  EF5B  F015         	goto	l4702
  7641  002A86                     u4730:
  7642  002A86  8022               	bsf	___fldiv@grs^0,0,c
  7643  002A88  EF5B  F015         	goto	l4702
  7644  002A8C                     l4696:
  7645  002A8C  90D8               	bcf	status,0,c
  7646  002A8E  360F               	rlcf	___fldiv@b^0,f,c
  7647  002A90  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7648  002A92  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7649  002A94  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7650  002A96  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7651  002A98  EF50  F015         	goto	u4741
  7652  002A9C  EF52  F015         	goto	u4740
  7653  002AA0                     u4741:
  7654  002AA0  EF53  F015         	goto	l1339
  7655  002AA4                     u4740:
  7656  002AA4  800F               	bsf	___fldiv@b^0,0,c
  7657  002AA6                     l1339:
  7658  002AA6  90D8               	bcf	status,0,c
  7659  002AA8  3622               	rlcf	___fldiv@grs^0,f,c
  7660  002AAA  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7661  002AAC  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7662  002AAE  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7663  002AB0  0620               	decf	___fldiv@new_exp^0,f,c
  7664  002AB2  A0D8               	btfss	status,0,c
  7665  002AB4  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7666  002AB6                     l4702:
  7667  002AB6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7668  002AB8  EF60  F015         	goto	u4751
  7669  002ABC  EF62  F015         	goto	u4750
  7670  002AC0                     u4751:
  7671  002AC0  EF46  F015         	goto	l4696
  7672  002AC4                     u4750:
  7673  002AC4  0E00               	movlw	0
  7674  002AC6  6E27               	movwf	___fldiv@aexp^0,c
  7675  002AC8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7676  002ACA  EF69  F015         	goto	u4761
  7677  002ACE  EF6B  F015         	goto	u4760
  7678  002AD2                     u4761:
  7679  002AD2  EF8F  F015         	goto	l1341
  7680  002AD6                     u4760:
  7681  002AD6  0EFF               	movlw	255
  7682  002AD8  1422               	andwf	___fldiv@grs^0,w,c
  7683  002ADA  6E17               	movwf	??___fldiv^0,c
  7684  002ADC  0EFF               	movlw	255
  7685  002ADE  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7686  002AE0  6E18               	movwf	(??___fldiv+1)^0,c
  7687  002AE2  0EFF               	movlw	255
  7688  002AE4  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7689  002AE6  6E19               	movwf	(??___fldiv+2)^0,c
  7690  002AE8  0E7F               	movlw	127
  7691  002AEA  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7692  002AEC  6E1A               	movwf	(??___fldiv+3)^0,c
  7693  002AEE  5017               	movf	??___fldiv^0,w,c
  7694  002AF0  1018               	iorwf	(??___fldiv+1)^0,w,c
  7695  002AF2  1019               	iorwf	(??___fldiv+2)^0,w,c
  7696  002AF4  101A               	iorwf	(??___fldiv+3)^0,w,c
  7697  002AF6  B4D8               	btfsc	status,2,c
  7698  002AF8  EF80  F015         	goto	u4771
  7699  002AFC  EF82  F015         	goto	u4770
  7700  002B00                     u4771:
  7701  002B00  EF86  F015         	goto	l1342
  7702  002B04                     u4770:
  7703  002B04                     l4710:
  7704  002B04  0E01               	movlw	1
  7705  002B06  6E27               	movwf	___fldiv@aexp^0,c
  7706  002B08  EF8F  F015         	goto	l1341
  7707  002B0C                     l1342:
  7708  002B0C  A00F               	btfss	___fldiv@b^0,0,c
  7709  002B0E  EF8B  F015         	goto	u4781
  7710  002B12  EF8D  F015         	goto	u4780
  7711  002B16                     u4781:
  7712  002B16  EF8F  F015         	goto	l1341
  7713  002B1A                     u4780:
  7714  002B1A  EF82  F015         	goto	l4710
  7715  002B1E                     l1341:
  7716  002B1E  5027               	movf	___fldiv@aexp^0,w,c
  7717  002B20  B4D8               	btfsc	status,2,c
  7718  002B22  EF95  F015         	goto	u4791
  7719  002B26  EF97  F015         	goto	u4790
  7720  002B2A                     u4791:
  7721  002B2A  EFBB  F015         	goto	l4722
  7722  002B2E                     u4790:
  7723  002B2E  0E01               	movlw	1
  7724  002B30  260F               	addwf	___fldiv@b^0,f,c
  7725  002B32  0E00               	movlw	0
  7726  002B34  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7727  002B36  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7728  002B38  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7729  002B3A  A012               	btfss	(___fldiv@b+3)^0,0,c
  7730  002B3C  EFA2  F015         	goto	u4801
  7731  002B40  EFA4  F015         	goto	u4800
  7732  002B44                     u4801:
  7733  002B44  EFBB  F015         	goto	l4722
  7734  002B48                     u4800:
  7735  002B48  C00F  F017         	movff	___fldiv@b,??___fldiv
  7736  002B4C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7737  002B50  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7738  002B54  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7739  002B58  341A               	rlcf	(??___fldiv+3)^0,w,c
  7740  002B5A  321A               	rrcf	(??___fldiv+3)^0,f,c
  7741  002B5C  3219               	rrcf	(??___fldiv+2)^0,f,c
  7742  002B5E  3218               	rrcf	(??___fldiv+1)^0,f,c
  7743  002B60  3217               	rrcf	??___fldiv^0,f,c
  7744  002B62  C017  F00F         	movff	??___fldiv,___fldiv@b
  7745  002B66  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7746  002B6A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7747  002B6E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7748  002B72  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7749  002B74  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7750  002B76                     l4722:
  7751  002B76  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7752  002B78  EFC6  F015         	goto	u4811
  7753  002B7C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7754  002B7E  E108               	bnz	u4810
  7755  002B80  2820               	incf	___fldiv@new_exp^0,w,c
  7756  002B82  A0D8               	btfss	status,0,c
  7757  002B84  EFC6  F015         	goto	u4811
  7758  002B88  EFC8  F015         	goto	u4810
  7759  002B8C                     u4811:
  7760  002B8C  EFD3  F015         	goto	l4726
  7761  002B90                     u4810:
  7762  002B90  0E00               	movlw	0
  7763  002B92  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7764  002B94  6820               	setf	___fldiv@new_exp^0,c
  7765  002B96  0E00               	movlw	0
  7766  002B98  6E0F               	movwf	___fldiv@b^0,c
  7767  002B9A  0E00               	movlw	0
  7768  002B9C  6E10               	movwf	(___fldiv@b+1)^0,c
  7769  002B9E  0E00               	movlw	0
  7770  002BA0  6E11               	movwf	(___fldiv@b+2)^0,c
  7771  002BA2  0E00               	movlw	0
  7772  002BA4  6E12               	movwf	(___fldiv@b+3)^0,c
  7773  002BA6                     l4726:
  7774  002BA6  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7775  002BA8  EFE0  F015         	goto	u4820
  7776  002BAC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7777  002BAE  E106               	bnz	u4821
  7778  002BB0  0420               	decf	___fldiv@new_exp^0,w,c
  7779  002BB2  B0D8               	btfsc	status,0,c
  7780  002BB4  EFDE  F015         	goto	u4821
  7781  002BB8  EFE0  F015         	goto	u4820
  7782  002BBC                     u4821:
  7783  002BBC  EFEE  F015         	goto	l4730
  7784  002BC0                     u4820:
  7785  002BC0  0E00               	movlw	0
  7786  002BC2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7787  002BC4  0E00               	movlw	0
  7788  002BC6  6E20               	movwf	___fldiv@new_exp^0,c
  7789  002BC8  0E00               	movlw	0
  7790  002BCA  6E0F               	movwf	___fldiv@b^0,c
  7791  002BCC  0E00               	movlw	0
  7792  002BCE  6E10               	movwf	(___fldiv@b+1)^0,c
  7793  002BD0  0E00               	movlw	0
  7794  002BD2  6E11               	movwf	(___fldiv@b+2)^0,c
  7795  002BD4  0E00               	movlw	0
  7796  002BD6  6E12               	movwf	(___fldiv@b+3)^0,c
  7797  002BD8  0E00               	movlw	0
  7798  002BDA  6E1F               	movwf	___fldiv@sign^0,c
  7799  002BDC                     l4730:
  7800  002BDC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7801  002BE0  A026               	btfss	___fldiv@bexp^0,0,c
  7802  002BE2  EFF5  F015         	goto	u4831
  7803  002BE6  EFF7  F015         	goto	u4830
  7804  002BEA                     u4831:
  7805  002BEA  EFFA  F015         	goto	l4736
  7806  002BEE                     u4830:
  7807  002BEE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7808  002BF0  EFFB  F015         	goto	l4738
  7809  002BF4                     l4736:
  7810  002BF4  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7811  002BF6                     l4738:
  7812  002BF6  90D8               	bcf	status,0,c
  7813  002BF8  3026               	rrcf	___fldiv@bexp^0,w,c
  7814  002BFA  6E12               	movwf	(___fldiv@b+3)^0,c
  7815  002BFC  EFB1  F014         	goto	l4652
  7816  002C00                     l1328:
  7817  002C00  0012               	return		;funcret
  7818  002C02                     __end_of___fldiv:
  7819                           	callstack 0
  7820                           
  7821 ;; *************** function _LED_C *****************
  7822 ;; Defined at:
  7823 ;;		line 173 in file "color.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;		None
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7841 ;;Total ram usage:        2 bytes
  7842 ;; Hardware stack levels used: 1
  7843 ;; Hardware stack levels required when called: 1
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_color_data_collection
  7848 ;;		_calibrate_white
  7849 ;;		_amb_light_measure
  7850 ;;		_distance_measure
  7851 ;;		_test_function
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text31
  7856  00585C                     __ptext31:
  7857                           	callstack 0
  7858  00585C                     _LED_C:
  7859                           	callstack 27
  7860  00585C                     
  7861                           ;color.c: 175:     LATGbits.LATG1 = 1;
  7862  00585C  827F               	bsf	127,1,c	;volatile
  7863                           
  7864                           ;color.c: 176:     LATFbits.LATF7 = 1;
  7865  00585E  8E7E               	bsf	126,7,c	;volatile
  7866                           
  7867                           ;color.c: 177:     LATAbits.LATA4 = 1;
  7868  005860  8879               	bsf	121,4,c	;volatile
  7869  005862                     
  7870                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7871  005862  0E05               	movlw	5
  7872  005864  6E02               	movwf	(??_LED_C+1)^0,c
  7873  005866  0E0F               	movlw	15
  7874  005868  6E01               	movwf	??_LED_C^0,c
  7875  00586A  0EF1               	movlw	241
  7876  00586C                     u5777:
  7877  00586C  2EE8               	decfsz	wreg,f,c
  7878  00586E  D7FE               	bra	u5777
  7879  005870  2E01               	decfsz	??_LED_C^0,f,c
  7880  005872  D7FC               	bra	u5777
  7881  005874  2E02               	decfsz	(??_LED_C+1)^0,f,c
  7882  005876  D7FA               	bra	u5777
  7883  005878  F000               	nop	
  7884  00587A  0012               	return		;funcret
  7885  00587C                     __end_of_LED_C:
  7886                           	callstack 0
  7887                           
  7888 ;; *************** function _pin_init *****************
  7889 ;; Defined at:
  7890 ;;		line 88 in file "movement.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;		None
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  1    wreg      void 
  7897 ;; Registers used:
  7898 ;;		None
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;Total ram usage:        0 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; Hardware stack levels required when called: 1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_main
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text32
  7919  00587C                     __ptext32:
  7920                           	callstack 0
  7921  00587C                     _pin_init:
  7922                           	callstack 29
  7923  00587C  8486               	bsf	134,2,c	;volatile
  7924                           
  7925                           ;movement.c: 90:     ANSELFbits.ANSELF2=0;
  7926  00587E  010E               	movlb	14	; () banked
  7927  005880  95B4               	bcf	180,2,b	;volatile
  7928                           
  7929                           ;movement.c: 91:     TRISFbits.TRISF3=1;
  7930  005882  8686               	bsf	134,3,c	;volatile
  7931                           
  7932                           ;movement.c: 92:     ANSELFbits.ANSELF3=0;
  7933  005884  97B4               	bcf	180,3,b	;volatile
  7934                           
  7935                           ;movement.c: 97:     TRISGbits.TRISG1 = 0;
  7936  005886  9287               	bcf	135,1,c	;volatile
  7937                           
  7938                           ;movement.c: 98:     TRISFbits.TRISF7 = 0;
  7939  005888  9E86               	bcf	134,7,c	;volatile
  7940                           
  7941                           ;movement.c: 99:     TRISAbits.TRISA4 = 0;
  7942  00588A  9881               	bcf	129,4,c	;volatile
  7943                           
  7944                           ;movement.c: 100:     LATGbits.LATG1 = 1;
  7945  00588C  827F               	bsf	127,1,c	;volatile
  7946                           
  7947                           ;movement.c: 101:     LATFbits.LATF7 = 1;
  7948  00588E  8E7E               	bsf	126,7,c	;volatile
  7949                           
  7950                           ;movement.c: 102:     LATAbits.LATA4 = 1;
  7951  005890  8879               	bsf	121,4,c	;volatile
  7952                           
  7953                           ;movement.c: 105:     TRISDbits.TRISD7 = 0;
  7954  005892  9E84               	bcf	132,7,c	;volatile
  7955                           
  7956                           ;movement.c: 106:     LATDbits.LATD7 = 0;
  7957  005894  9E7C               	bcf	124,7,c	;volatile
  7958                           
  7959                           ;movement.c: 107:     TRISHbits.TRISH3 = 0;
  7960  005896  9688               	bcf	136,3,c	;volatile
  7961                           
  7962                           ;movement.c: 108:     LATHbits.LATH3 = 0;
  7963  005898  9680               	bcf	128,3,c	;volatile
  7964  00589A                     
  7965                           ; BSR set to: 14
  7966  00589A  0012               	return		;funcret
  7967  00589C                     __end_of_pin_init:
  7968                           	callstack 0
  7969                           
  7970 ;; *************** function _initUSART4 *****************
  7971 ;; Defined at:
  7972 ;;		line 4 in file "serial.c"
  7973 ;; Parameters:    Size  Location     Type
  7974 ;;		None
  7975 ;; Auto vars:     Size  Location     Type
  7976 ;;		None
  7977 ;; Return value:  Size  Location     Type
  7978 ;;                  1    wreg      void 
  7979 ;; Registers used:
  7980 ;;		wreg, status,2
  7981 ;; Tracked objects:
  7982 ;;		On entry : 0/0
  7983 ;;		On exit  : 0/0
  7984 ;;		Unchanged: 0/0
  7985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;Total ram usage:        0 bytes
  7991 ;; Hardware stack levels used: 1
  7992 ;; Hardware stack levels required when called: 1
  7993 ;; This function calls:
  7994 ;;		Nothing
  7995 ;; This function is called by:
  7996 ;;		_main
  7997 ;; This function uses a non-reentrant model
  7998 ;;
  7999                           
  8000                           	psect	text33
  8001  0058BC                     __ptext33:
  8002                           	callstack 0
  8003  0058BC                     _initUSART4:
  8004                           	callstack 29
  8005  0058BC                     
  8006                           ;serial.c: 8:     RC0PPS = 0x12;
  8007  0058BC  0E12               	movlw	18
  8008  0058BE  010E               	movlb	14	; () banked
  8009  0058C0  6F62               	movwf	98,b	;volatile
  8010                           
  8011                           ;serial.c: 9:     RX4PPS = 0x11;
  8012  0058C2  0E11               	movlw	17
  8013  0058C4  6F15               	movwf	21,b	;volatile
  8014  0058C6                     
  8015                           ; BSR set to: 14
  8016                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8017  0058C6  97E9               	bcf	233,3,b	;volatile
  8018  0058C8                     
  8019                           ; BSR set to: 14
  8020                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8021  0058C8  95E8               	bcf	232,2,b	;volatile
  8022                           
  8023                           ;serial.c: 13:     SP4BRGL = 51;
  8024  0058CA  0E33               	movlw	51
  8025  0058CC  6FE5               	movwf	229,b	;volatile
  8026                           
  8027                           ;serial.c: 15:     SP4BRGH = 0;
  8028  0058CE  0E00               	movlw	0
  8029  0058D0  6FE6               	movwf	230,b	;volatile
  8030  0058D2                     
  8031                           ; BSR set to: 14
  8032                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8033  0058D2  89E7               	bsf	231,4,b	;volatile
  8034  0058D4                     
  8035                           ; BSR set to: 14
  8036                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8037  0058D4  8BE8               	bsf	232,5,b	;volatile
  8038  0058D6                     
  8039                           ; BSR set to: 14
  8040                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8041  0058D6  8FE7               	bsf	231,7,b	;volatile
  8042  0058D8                     
  8043                           ; BSR set to: 14
  8044  0058D8  0012               	return		;funcret
  8045  0058DA                     __end_of_initUSART4:
  8046                           	callstack 0
  8047                           
  8048 ;; *************** function _initDCmotors_parameter *****************
  8049 ;; Defined at:
  8050 ;;		line 41 in file "dc_motor.c"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8053 ;;		 -> main@motorL(10), 
  8054 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8055 ;;		 -> main@motorR(10), 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  1    wreg      void 
  8060 ;; Registers used:
  8061 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8067 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;Total ram usage:        4 bytes
  8072 ;; Hardware stack levels used: 1
  8073 ;; Hardware stack levels required when called: 1
  8074 ;; This function calls:
  8075 ;;		Nothing
  8076 ;; This function is called by:
  8077 ;;		_main
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           	psect	text34
  8082  004A28                     __ptext34:
  8083                           	callstack 0
  8084  004A28                     _initDCmotors_parameter:
  8085                           	callstack 29
  8086  004A28                     
  8087                           ;dc_motor.c: 43:     motorL->power = 0;
  8088  004A28  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8089  004A2C  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8090  004A30  0E00               	movlw	0
  8091  004A32  6EDF               	movwf	indf2,c
  8092  004A34                     
  8093                           ;dc_motor.c: 44:     motorL->direction = 1;
  8094  004A34  EE20 F001          	lfsr	2,1
  8095  004A38  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8096  004A3A  26D9               	addwf	fsr2l,f,c
  8097  004A3C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8098  004A3E  22DA               	addwfc	fsr2h,f,c
  8099  004A40  0E01               	movlw	1
  8100  004A42  6EDF               	movwf	indf2,c
  8101  004A44                     
  8102                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8103  004A44  EE20 F002          	lfsr	2,2
  8104  004A48  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8105  004A4A  26D9               	addwf	fsr2l,f,c
  8106  004A4C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8107  004A4E  22DA               	addwfc	fsr2h,f,c
  8108  004A50  0EA3               	movlw	163
  8109  004A52  6EDE               	movwf	postinc2,c
  8110  004A54  0E0F               	movlw	15
  8111  004A56  6EDD               	movwf	postdec2,c
  8112  004A58                     
  8113                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8114  004A58  EE20 F004          	lfsr	2,4
  8115  004A5C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8116  004A5E  26D9               	addwf	fsr2l,f,c
  8117  004A60  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8118  004A62  22DA               	addwfc	fsr2h,f,c
  8119  004A64  0E7D               	movlw	125
  8120  004A66  6EDE               	movwf	postinc2,c
  8121  004A68  0E0F               	movlw	15
  8122  004A6A  6EDD               	movwf	postdec2,c
  8123  004A6C                     
  8124                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
  8125  004A6C  EE20 F006          	lfsr	2,6
  8126  004A70  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8127  004A72  26D9               	addwf	fsr2l,f,c
  8128  004A74  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8129  004A76  22DA               	addwfc	fsr2h,f,c
  8130  004A78  0E04               	movlw	4
  8131  004A7A  6EDF               	movwf	indf2,c
  8132  004A7C                     
  8133                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
  8134  004A7C  EE20 F007          	lfsr	2,7
  8135  004A80  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8136  004A82  26D9               	addwf	fsr2l,f,c
  8137  004A84  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8138  004A86  22DA               	addwfc	fsr2h,f,c
  8139  004A88  0EC7               	movlw	199
  8140  004A8A  6EDE               	movwf	postinc2,c
  8141  004A8C  0E00               	movlw	0
  8142  004A8E  6EDD               	movwf	postdec2,c
  8143  004A90                     
  8144                           ;dc_motor.c: 51:     motorR->power = 0;
  8145  004A90  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8146  004A94  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8147  004A98  0E00               	movlw	0
  8148  004A9A  6EDF               	movwf	indf2,c
  8149                           
  8150                           ;dc_motor.c: 52:     motorR->direction = 1;
  8151  004A9C  EE20 F001          	lfsr	2,1
  8152  004AA0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8153  004AA2  26D9               	addwf	fsr2l,f,c
  8154  004AA4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8155  004AA6  22DA               	addwfc	fsr2h,f,c
  8156  004AA8  0E01               	movlw	1
  8157  004AAA  6EDF               	movwf	indf2,c
  8158                           
  8159                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8160  004AAC  EE20 F002          	lfsr	2,2
  8161  004AB0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8162  004AB2  26D9               	addwf	fsr2l,f,c
  8163  004AB4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8164  004AB6  22DA               	addwfc	fsr2h,f,c
  8165  004AB8  0EA0               	movlw	160
  8166  004ABA  6EDE               	movwf	postinc2,c
  8167  004ABC  0E0F               	movlw	15
  8168  004ABE  6EDD               	movwf	postdec2,c
  8169                           
  8170                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8171  004AC0  EE20 F004          	lfsr	2,4
  8172  004AC4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8173  004AC6  26D9               	addwf	fsr2l,f,c
  8174  004AC8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8175  004ACA  22DA               	addwfc	fsr2h,f,c
  8176  004ACC  0E7F               	movlw	127
  8177  004ACE  6EDE               	movwf	postinc2,c
  8178  004AD0  0E0F               	movlw	15
  8179  004AD2  6EDD               	movwf	postdec2,c
  8180                           
  8181                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
  8182  004AD4  EE20 F006          	lfsr	2,6
  8183  004AD8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8184  004ADA  26D9               	addwf	fsr2l,f,c
  8185  004ADC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8186  004ADE  22DA               	addwfc	fsr2h,f,c
  8187  004AE0  0E06               	movlw	6
  8188  004AE2  6EDF               	movwf	indf2,c
  8189                           
  8190                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
  8191  004AE4  EE20 F007          	lfsr	2,7
  8192  004AE8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8193  004AEA  26D9               	addwf	fsr2l,f,c
  8194  004AEC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8195  004AEE  22DA               	addwfc	fsr2h,f,c
  8196  004AF0  0EC7               	movlw	199
  8197  004AF2  6EDE               	movwf	postinc2,c
  8198  004AF4  0E00               	movlw	0
  8199  004AF6  6EDD               	movwf	postdec2,c
  8200  004AF8  0012               	return		;funcret
  8201  004AFA                     __end_of_initDCmotors_parameter:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _initDCmotorsPWM *****************
  8205 ;; Defined at:
  8206 ;;		line 11 in file "dc_motor.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  PWMperiod       2    0[COMRAM] int 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;Total ram usage:        2 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 1
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text35
  8235  0054EA                     __ptext35:
  8236                           	callstack 0
  8237  0054EA                     _initDCmotorsPWM:
  8238                           	callstack 29
  8239  0054EA                     
  8240                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
  8241  0054EA  9485               	bcf	133,2,c	;volatile
  8242                           
  8243                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  8244  0054EC  9E83               	bcf	131,7,c	;volatile
  8245                           
  8246                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  8247  0054EE  9C87               	bcf	135,6,c	;volatile
  8248                           
  8249                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  8250  0054F0  9885               	bcf	133,4,c	;volatile
  8251                           
  8252                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  8253  0054F2  947D               	bcf	125,2,c	;volatile
  8254                           
  8255                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  8256  0054F4  9E7B               	bcf	123,7,c	;volatile
  8257                           
  8258                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
  8259  0054F6  9C7F               	bcf	127,6,c	;volatile
  8260                           
  8261                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  8262  0054F8  987D               	bcf	125,4,c	;volatile
  8263  0054FA                     
  8264                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  8265  0054FA  50BD               	movf	189,w,c	;volatile
  8266  0054FC  0B8F               	andlw	-113
  8267  0054FE  0930               	iorlw	48
  8268  005500  6EBD               	movwf	189,c	;volatile
  8269                           
  8270                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  8271  005502  0EE0               	movlw	-32
  8272  005504  16BE               	andwf	190,f,c	;volatile
  8273                           
  8274                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  8275  005506  50BF               	movf	191,w,c	;volatile
  8276  005508  0BF0               	andlw	-16
  8277  00550A  0901               	iorlw	1
  8278  00550C  6EBF               	movwf	191,c	;volatile
  8279                           
  8280                           ;dc_motor.c: 29:     T2PR=200-1;
  8281  00550E  0EC7               	movlw	199
  8282  005510  6EBC               	movwf	188,c	;volatile
  8283  005512                     
  8284                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  8285  005512  8EBD               	bsf	189,7,c	;volatile
  8286                           
  8287                           ;dc_motor.c: 32:     RE2PPS=0x0A;
  8288  005514  0E0A               	movlw	10
  8289  005516  010E               	movlb	14	; () banked
  8290  005518  6F74               	movwf	116,b	;volatile
  8291                           
  8292                           ;dc_motor.c: 33:     RC7PPS=0x0B;
  8293  00551A  0E0B               	movlw	11
  8294  00551C  6F69               	movwf	105,b	;volatile
  8295                           
  8296                           ;dc_motor.c: 35:     PWM6DCH=0;
  8297  00551E  0E00               	movlw	0
  8298  005520  6EA3               	movwf	163,c	;volatile
  8299                           
  8300                           ;dc_motor.c: 36:     PWM7DCH=0;
  8301  005522  0E00               	movlw	0
  8302  005524  6EA0               	movwf	160,c	;volatile
  8303  005526                     
  8304                           ; BSR set to: 14
  8305                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
  8306  005526  8EA4               	bsf	164,7,c	;volatile
  8307  005528                     
  8308                           ; BSR set to: 14
  8309                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
  8310  005528  8EA1               	bsf	161,7,c	;volatile
  8311  00552A                     
  8312                           ; BSR set to: 14
  8313  00552A  0012               	return		;funcret
  8314  00552C                     __end_of_initDCmotorsPWM:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _color_click_init *****************
  8318 ;; Defined at:
  8319 ;;		line 67 in file "color.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;		None
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;Total ram usage:        1 bytes
  8338 ;; Hardware stack levels used: 1
  8339 ;; Hardware stack levels required when called: 4
  8340 ;; This function calls:
  8341 ;;		_I2C_2_Master_Init
  8342 ;;		_color_writetoaddr
  8343 ;; This function is called by:
  8344 ;;		_main
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text36
  8349  0056D2                     __ptext36:
  8350                           	callstack 0
  8351  0056D2                     _color_click_init:
  8352                           	callstack 26
  8353  0056D2                     
  8354                           ;color.c: 70:     I2C_2_Master_Init();
  8355  0056D2  ECB2  F02B         	call	_I2C_2_Master_Init	;wreg free
  8356  0056D6                     
  8357                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8358  0056D6  0E01               	movlw	1
  8359  0056D8  6E03               	movwf	color_writetoaddr@value^0,c
  8360  0056DA  0E00               	movlw	0
  8361  0056DC  EC4E  F02C         	call	_color_writetoaddr
  8362  0056E0                     
  8363                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8364  0056E0  0E3F               	movlw	63
  8365  0056E2  6E05               	movwf	??_color_click_init^0,c
  8366  0056E4  0E55               	movlw	85
  8367  0056E6                     u5787:
  8368  0056E6  2EE8               	decfsz	wreg,f,c
  8369  0056E8  D7FE               	bra	u5787
  8370  0056EA  2E05               	decfsz	??_color_click_init^0,f,c
  8371  0056EC  D7FC               	bra	u5787
  8372  0056EE  F000               	nop	
  8373  0056F0                     
  8374                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8375  0056F0  0E03               	movlw	3
  8376  0056F2  6E03               	movwf	color_writetoaddr@value^0,c
  8377  0056F4  0E00               	movlw	0
  8378  0056F6  EC4E  F02C         	call	_color_writetoaddr
  8379  0056FA                     
  8380                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8381  0056FA  0ED5               	movlw	213
  8382  0056FC  6E03               	movwf	color_writetoaddr@value^0,c
  8383  0056FE  0E01               	movlw	1
  8384  005700  EC4E  F02C         	call	_color_writetoaddr
  8385  005704  0012               	return		;funcret
  8386  005706                     __end_of_color_click_init:
  8387                           	callstack 0
  8388                           
  8389 ;; *************** function _color_writetoaddr *****************
  8390 ;; Defined at:
  8391 ;;		line 83 in file "color.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  address         1    wreg     unsigned char 
  8394 ;;  value           1    2[COMRAM] unsigned char 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  address         1    3[COMRAM] unsigned char 
  8397 ;; Return value:  Size  Location     Type
  8398 ;;                  1    wreg      void 
  8399 ;; Registers used:
  8400 ;;		wreg, status,2, status,0, cstack
  8401 ;; Tracked objects:
  8402 ;;		On entry : 0/0
  8403 ;;		On exit  : 0/0
  8404 ;;		Unchanged: 0/0
  8405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8406 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;Total ram usage:        2 bytes
  8411 ;; Hardware stack levels used: 1
  8412 ;; Hardware stack levels required when called: 3
  8413 ;; This function calls:
  8414 ;;		_I2C_2_Master_Start
  8415 ;;		_I2C_2_Master_Stop
  8416 ;;		_I2C_2_Master_Write
  8417 ;; This function is called by:
  8418 ;;		_color_click_init
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text37
  8423  00589C                     __ptext37:
  8424                           	callstack 0
  8425  00589C                     _color_writetoaddr:
  8426                           	callstack 26
  8427                           
  8428                           ;incstack = 0
  8429                           ;color_writetoaddr@address stored from wreg
  8430  00589C  6E04               	movwf	color_writetoaddr@address^0,c
  8431  00589E                     
  8432                           ;color.c: 84:     I2C_2_Master_Start();
  8433  00589E  ECA9  F02C         	call	_I2C_2_Master_Start	;wreg free
  8434                           
  8435                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8436  0058A2  0E52               	movlw	82
  8437  0058A4  EC93  F02C         	call	_I2C_2_Master_Write
  8438                           
  8439                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8440  0058A8  5004               	movf	color_writetoaddr@address^0,w,c
  8441  0058AA  0980               	iorlw	128
  8442  0058AC  EC93  F02C         	call	_I2C_2_Master_Write
  8443                           
  8444                           ;color.c: 87:     I2C_2_Master_Write(value);
  8445  0058B0  5003               	movf	color_writetoaddr@value^0,w,c
  8446  0058B2  EC93  F02C         	call	_I2C_2_Master_Write
  8447                           
  8448                           ;color.c: 88:     I2C_2_Master_Stop();
  8449  0058B6  ECA4  F02C         	call	_I2C_2_Master_Stop	;wreg free
  8450  0058BA  0012               	return		;funcret
  8451  0058BC                     __end_of_color_writetoaddr:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function _I2C_2_Master_Write *****************
  8455 ;; Defined at:
  8456 ;;		line 45 in file "i2c.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  data_byte       1    wreg     unsigned char 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  data_byte       1    1[COMRAM] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;Total ram usage:        1 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 2
  8477 ;; This function calls:
  8478 ;;		_I2C_2_Master_Idle
  8479 ;; This function is called by:
  8480 ;;		_color_writetoaddr
  8481 ;;		_color_read_Red
  8482 ;;		_color_read_Blue
  8483 ;;		_color_read_Green
  8484 ;;		_color_read_Clear
  8485 ;; This function uses a non-reentrant model
  8486 ;;
  8487                           
  8488                           	psect	text38
  8489  005926                     __ptext38:
  8490                           	callstack 0
  8491  005926                     _I2C_2_Master_Write:
  8492                           	callstack 24
  8493                           
  8494                           ;incstack = 0
  8495                           ;I2C_2_Master_Write@data_byte stored from wreg
  8496  005926  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8497  005928                     
  8498                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8499  005928  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8500  00592C                     
  8501                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8502  00592C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8503  005930  0012               	return		;funcret
  8504  005932                     __end_of_I2C_2_Master_Write:
  8505                           	callstack 0
  8506                           
  8507 ;; *************** function _I2C_2_Master_Stop *****************
  8508 ;; Defined at:
  8509 ;;		line 39 in file "i2c.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;		None
  8512 ;; Auto vars:     Size  Location     Type
  8513 ;;		None
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  1    wreg      void 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, cstack
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;Total ram usage:        0 bytes
  8528 ;; Hardware stack levels used: 1
  8529 ;; Hardware stack levels required when called: 2
  8530 ;; This function calls:
  8531 ;;		_I2C_2_Master_Idle
  8532 ;; This function is called by:
  8533 ;;		_color_writetoaddr
  8534 ;;		_color_read_Red
  8535 ;;		_color_read_Blue
  8536 ;;		_color_read_Green
  8537 ;;		_color_read_Clear
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           	psect	text39
  8542  005948                     __ptext39:
  8543                           	callstack 0
  8544  005948                     _I2C_2_Master_Stop:
  8545                           	callstack 24
  8546  005948                     
  8547                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8548  005948  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8549  00594C                     
  8550                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8551  00594C  010E               	movlb	14	; () banked
  8552  00594E  85DA               	bsf	218,2,b	;volatile
  8553  005950                     
  8554                           ; BSR set to: 14
  8555  005950  0012               	return		;funcret
  8556  005952                     __end_of_I2C_2_Master_Stop:
  8557                           	callstack 0
  8558                           
  8559 ;; *************** function _I2C_2_Master_Start *****************
  8560 ;; Defined at:
  8561 ;;		line 27 in file "i2c.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8579 ;;Total ram usage:        0 bytes
  8580 ;; Hardware stack levels used: 1
  8581 ;; Hardware stack levels required when called: 2
  8582 ;; This function calls:
  8583 ;;		_I2C_2_Master_Idle
  8584 ;; This function is called by:
  8585 ;;		_color_writetoaddr
  8586 ;;		_color_read_Red
  8587 ;;		_color_read_Blue
  8588 ;;		_color_read_Green
  8589 ;;		_color_read_Clear
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text40
  8594  005952                     __ptext40:
  8595                           	callstack 0
  8596  005952                     _I2C_2_Master_Start:
  8597                           	callstack 24
  8598  005952                     
  8599                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8600  005952  ECC7  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8601  005956                     
  8602                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8603  005956  010E               	movlb	14	; () banked
  8604  005958  81DA               	bsf	218,0,b	;volatile
  8605  00595A                     
  8606                           ; BSR set to: 14
  8607  00595A  0012               	return		;funcret
  8608  00595C                     __end_of_I2C_2_Master_Start:
  8609                           	callstack 0
  8610                           
  8611 ;; *************** function _I2C_2_Master_Idle *****************
  8612 ;; Defined at:
  8613 ;;		line 22 in file "i2c.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;		None
  8616 ;; Auto vars:     Size  Location     Type
  8617 ;;		None
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  1    wreg      void 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8631 ;;Total ram usage:        1 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 1
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_I2C_2_Master_Start
  8638 ;;		_I2C_2_Master_RepStart
  8639 ;;		_I2C_2_Master_Stop
  8640 ;;		_I2C_2_Master_Write
  8641 ;;		_I2C_2_Master_Read
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text41
  8646  00578E                     __ptext41:
  8647                           	callstack 0
  8648  00578E                     _I2C_2_Master_Idle:
  8649                           	callstack 24
  8650  00578E                     l202:
  8651  00578E  010E               	movlb	14	; () banked
  8652  005790  B5D8               	btfsc	216,2,b	;volatile
  8653  005792  EFCD  F02B         	goto	u3221
  8654  005796  EFCF  F02B         	goto	u3220
  8655  00579A                     u3221:
  8656  00579A  EFC7  F02B         	goto	l202
  8657  00579E                     u3220:
  8658  00579E                     
  8659                           ; BSR set to: 14
  8660  00579E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8661  0057A2  0E1F               	movlw	31
  8662  0057A4  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8663  0057A6  A4D8               	btfss	status,2,c
  8664  0057A8  EFD8  F02B         	goto	u3231
  8665  0057AC  EFDA  F02B         	goto	u3230
  8666  0057B0                     u3231:
  8667  0057B0  EFC7  F02B         	goto	l202
  8668  0057B4                     u3230:
  8669  0057B4                     
  8670                           ; BSR set to: 14
  8671  0057B4  0012               	return		;funcret
  8672  0057B6                     __end_of_I2C_2_Master_Idle:
  8673                           	callstack 0
  8674                           
  8675 ;; *************** function _I2C_2_Master_Init *****************
  8676 ;; Defined at:
  8677 ;;		line 4 in file "i2c.c"
  8678 ;; Parameters:    Size  Location     Type
  8679 ;;		None
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;		None
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1    wreg      void 
  8684 ;; Registers used:
  8685 ;;		wreg, status,2
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8695 ;;Total ram usage:        0 bytes
  8696 ;; Hardware stack levels used: 1
  8697 ;; Hardware stack levels required when called: 1
  8698 ;; This function calls:
  8699 ;;		Nothing
  8700 ;; This function is called by:
  8701 ;;		_color_click_init
  8702 ;;		_main
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           	psect	text42
  8707  005764                     __ptext42:
  8708                           	callstack 0
  8709  005764                     _I2C_2_Master_Init:
  8710                           	callstack 28
  8711  005764                     
  8712                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8713  005764  010E               	movlb	14	; () banked
  8714  005766  51D9               	movf	217,w,b	;volatile
  8715  005768  0BF0               	andlw	-16
  8716  00576A  0908               	iorlw	8
  8717  00576C  6FD9               	movwf	217,b	;volatile
  8718  00576E                     
  8719                           ; BSR set to: 14
  8720                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8721  00576E  8BD9               	bsf	217,5,b	;volatile
  8722                           
  8723                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8724  005770  0E9F               	movlw	159
  8725  005772  6FD6               	movwf	214,b	;volatile
  8726  005774                     
  8727                           ; BSR set to: 14
  8728                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8729  005774  8A84               	bsf	132,5,c	;volatile
  8730  005776                     
  8731                           ; BSR set to: 14
  8732                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8733  005776  8C84               	bsf	132,6,c	;volatile
  8734  005778                     
  8735                           ; BSR set to: 14
  8736                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8737  005778  9BA7               	bcf	167,5,b	;volatile
  8738  00577A                     
  8739                           ; BSR set to: 14
  8740                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8741  00577A  9DA7               	bcf	167,6,b	;volatile
  8742                           
  8743                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8744  00577C  0E1D               	movlw	29
  8745  00577E  6F1D               	movwf	29,b	;volatile
  8746                           
  8747                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8748  005780  0E1E               	movlw	30
  8749  005782  6F1C               	movwf	28,b	;volatile
  8750                           
  8751                           ;i2c.c: 18:   RD5PPS=0x1C;
  8752  005784  0E1C               	movlw	28
  8753  005786  6F6F               	movwf	111,b	;volatile
  8754                           
  8755                           ;i2c.c: 19:   RD6PPS=0x1B;
  8756  005788  0E1B               	movlw	27
  8757  00578A  6F70               	movwf	112,b	;volatile
  8758  00578C                     
  8759                           ; BSR set to: 14
  8760  00578C  0012               	return		;funcret
  8761  00578E                     __end_of_I2C_2_Master_Init:
  8762                           	callstack 0
  8763                           
  8764 ;; *************** function _buggylight_init *****************
  8765 ;; Defined at:
  8766 ;;		line 13 in file "color.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		None
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8784 ;;Total ram usage:        0 bytes
  8785 ;; Hardware stack levels used: 1
  8786 ;; Hardware stack levels required when called: 1
  8787 ;; This function calls:
  8788 ;;		Nothing
  8789 ;; This function is called by:
  8790 ;;		_main
  8791 ;; This function uses a non-reentrant model
  8792 ;;
  8793                           
  8794                           	psect	text43
  8795  005910                     __ptext43:
  8796                           	callstack 0
  8797  005910                     _buggylight_init:
  8798                           	callstack 29
  8799  005910                     
  8800                           ;color.c: 15:     TRISHbits.TRISH1=0;
  8801  005910  9288               	bcf	136,1,c	;volatile
  8802                           
  8803                           ;color.c: 16:     TRISDbits.TRISD4=0;
  8804  005912  9884               	bcf	132,4,c	;volatile
  8805                           
  8806                           ;color.c: 17:     TRISDbits.TRISD3=0;
  8807  005914  9684               	bcf	132,3,c	;volatile
  8808                           
  8809                           ;color.c: 18:     TRISFbits.TRISF0=0;
  8810  005916  9086               	bcf	134,0,c	;volatile
  8811                           
  8812                           ;color.c: 19:     TRISHbits.TRISH0=0;
  8813  005918  9088               	bcf	136,0,c	;volatile
  8814                           
  8815                           ;color.c: 21:     LATHbits.LATH1 = 0;
  8816  00591A  9280               	bcf	128,1,c	;volatile
  8817                           
  8818                           ;color.c: 22:     LATDbits.LATD4 = 0;
  8819  00591C  987C               	bcf	124,4,c	;volatile
  8820                           
  8821                           ;color.c: 23:     LATDbits.LATD3 = 0;
  8822  00591E  967C               	bcf	124,3,c	;volatile
  8823                           
  8824                           ;color.c: 24:     LATFbits.LATF0 = 0;
  8825  005920  907E               	bcf	126,0,c	;volatile
  8826                           
  8827                           ;color.c: 25:     LATHbits.LATH0 = 0;
  8828  005922  9080               	bcf	128,0,c	;volatile
  8829  005924  0012               	return		;funcret
  8830  005926                     __end_of_buggylight_init:
  8831                           	callstack 0
  8832                           
  8833 ;; *************** function _action *****************
  8834 ;; Defined at:
  8835 ;;		line 18 in file "movement.c"
  8836 ;; Parameters:    Size  Location     Type
  8837 ;;  color           1    wreg     unsigned char 
  8838 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  8839 ;;		 -> main@motorL(10), 
  8840 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  8841 ;;		 -> main@motorR(10), 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  color           1   93[COMRAM] unsigned char 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8853 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;Total ram usage:        5 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 11
  8860 ;; This function calls:
  8861 ;;		_goback
  8862 ;;		_reverse_square
  8863 ;;		_short_reverse
  8864 ;;		_toggle_light
  8865 ;;		_turnLeft
  8866 ;;		_turnRight
  8867 ;; This function is called by:
  8868 ;;		_main
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text44
  8873  0031B2                     __ptext44:
  8874                           	callstack 0
  8875  0031B2                     _action:
  8876                           	callstack 19
  8877                           
  8878                           ;incstack = 0
  8879                           ;action@color stored from wreg
  8880  0031B2  6E5E               	movwf	action@color^0,c
  8881  0031B4                     
  8882                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 22:     if (color != 0){
  8883  0031B4  505E               	movf	action@color^0,w,c
  8884  0031B6  B4D8               	btfsc	status,2,c
  8885  0031B8  EFE0  F018         	goto	u5311
  8886  0031BC  EFE2  F018         	goto	u5310
  8887  0031C0                     u5311:
  8888  0031C0  EF3E  F01A         	goto	l603
  8889  0031C4                     u5310:
  8890  0031C4                     
  8891                           ;movement.c: 25:         if (color == 1){
  8892  0031C4  045E               	decf	action@color^0,w,c
  8893  0031C6  A4D8               	btfss	status,2,c
  8894  0031C8  EFE8  F018         	goto	u5321
  8895  0031CC  EFEA  F018         	goto	u5320
  8896  0031D0                     u5321:
  8897  0031D0  EF0E  F019         	goto	l5340
  8898  0031D4                     u5320:
  8899  0031D4                     
  8900                           ;movement.c: 26:             short_reverse(mL,mR);
  8901  0031D4  C0E0  F026         	movff	action@mL,short_reverse@mL
  8902  0031D8  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  8903  0031DC  C0E2  F028         	movff	action@mR,short_reverse@mR
  8904  0031E0  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  8905  0031E4  EC96  F02A         	call	_short_reverse	;wreg free
  8906                           
  8907                           ;movement.c: 27:             turnRight(mL,mR,90);
  8908  0031E8  C0E0  F020         	movff	action@mL,turnRight@mL
  8909  0031EC  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  8910  0031F0  C0E2  F022         	movff	action@mR,turnRight@mR
  8911  0031F4  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  8912  0031F8  0E5A               	movlw	90
  8913  0031FA  6E24               	movwf	turnRight@angle_right^0,c
  8914  0031FC  EC4E  F022         	call	_turnRight	;wreg free
  8915  003200                     
  8916                           ;movement.c: 28:             memory[array_index] = 1;
  8917  003200  0101               	movlb	1	; () banked
  8918  003202  5163               	movf	_array_index& (0+255),w,b
  8919  003204  0D02               	mullw	2
  8920  003206  0E00               	movlw	low _memory
  8921  003208  24F3               	addwf	243,w,c
  8922  00320A  6ED9               	movwf	fsr2l,c
  8923  00320C  0E01               	movlw	high _memory
  8924  00320E  20F4               	addwfc	prodh,w,c
  8925  003210  6EDA               	movwf	fsr2h,c
  8926  003212  0E01               	movlw	1
  8927  003214  6EDE               	movwf	postinc2,c
  8928  003216  0E00               	movlw	0
  8929  003218  6EDD               	movwf	postdec2,c
  8930  00321A                     
  8931                           ; BSR set to: 1
  8932                           ;movement.c: 29:             array_index++;
  8933  00321A  2B63               	incf	_array_index& (0+255),f,b
  8934  00321C                     l5340:
  8935                           
  8936                           ;movement.c: 31:         if (color == 2){
  8937  00321C  0E02               	movlw	2
  8938  00321E  185E               	xorwf	action@color^0,w,c
  8939  003220  A4D8               	btfss	status,2,c
  8940  003222  EF15  F019         	goto	u5331
  8941  003226  EF17  F019         	goto	u5330
  8942  00322A                     u5331:
  8943  00322A  EF3B  F019         	goto	l5348
  8944  00322E                     u5330:
  8945  00322E                     
  8946                           ;movement.c: 32:             short_reverse(mL,mR);
  8947  00322E  C0E0  F026         	movff	action@mL,short_reverse@mL
  8948  003232  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  8949  003236  C0E2  F028         	movff	action@mR,short_reverse@mR
  8950  00323A  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  8951  00323E  EC96  F02A         	call	_short_reverse	;wreg free
  8952                           
  8953                           ;movement.c: 33:             turnLeft(mL,mR,90);
  8954  003242  C0E0  F020         	movff	action@mL,turnLeft@mL
  8955  003246  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  8956  00324A  C0E2  F022         	movff	action@mR,turnLeft@mR
  8957  00324E  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  8958  003252  0E5A               	movlw	90
  8959  003254  6E24               	movwf	turnLeft@angle_left^0,c
  8960  003256  ECE4  F022         	call	_turnLeft	;wreg free
  8961  00325A                     
  8962                           ;movement.c: 34:             memory[array_index] = 2;
  8963  00325A  0101               	movlb	1	; () banked
  8964  00325C  5163               	movf	_array_index& (0+255),w,b
  8965  00325E  0D02               	mullw	2
  8966  003260  0E00               	movlw	low _memory
  8967  003262  24F3               	addwf	243,w,c
  8968  003264  6ED9               	movwf	fsr2l,c
  8969  003266  0E01               	movlw	high _memory
  8970  003268  20F4               	addwfc	prodh,w,c
  8971  00326A  6EDA               	movwf	fsr2h,c
  8972  00326C  0E02               	movlw	2
  8973  00326E  6EDE               	movwf	postinc2,c
  8974  003270  0E00               	movlw	0
  8975  003272  6EDD               	movwf	postdec2,c
  8976  003274                     
  8977                           ; BSR set to: 1
  8978                           ;movement.c: 35:             array_index++;
  8979  003274  2B63               	incf	_array_index& (0+255),f,b
  8980  003276                     l5348:
  8981                           
  8982                           ;movement.c: 37:         if (color == 3){
  8983  003276  0E03               	movlw	3
  8984  003278  185E               	xorwf	action@color^0,w,c
  8985  00327A  A4D8               	btfss	status,2,c
  8986  00327C  EF42  F019         	goto	u5341
  8987  003280  EF44  F019         	goto	u5340
  8988  003284                     u5341:
  8989  003284  EF68  F019         	goto	l5356
  8990  003288                     u5340:
  8991  003288                     
  8992                           ;movement.c: 38:             short_reverse(mL,mR);
  8993  003288  C0E0  F026         	movff	action@mL,short_reverse@mL
  8994  00328C  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  8995  003290  C0E2  F028         	movff	action@mR,short_reverse@mR
  8996  003294  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  8997  003298  EC96  F02A         	call	_short_reverse	;wreg free
  8998                           
  8999                           ;movement.c: 39:             turnLeft(mL,mR,180);
  9000  00329C  C0E0  F020         	movff	action@mL,turnLeft@mL
  9001  0032A0  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9002  0032A4  C0E2  F022         	movff	action@mR,turnLeft@mR
  9003  0032A8  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9004  0032AC  0EB4               	movlw	180
  9005  0032AE  6E24               	movwf	turnLeft@angle_left^0,c
  9006  0032B0  ECE4  F022         	call	_turnLeft	;wreg free
  9007  0032B4                     
  9008                           ;movement.c: 40:             memory[array_index] = 3;
  9009  0032B4  0101               	movlb	1	; () banked
  9010  0032B6  5163               	movf	_array_index& (0+255),w,b
  9011  0032B8  0D02               	mullw	2
  9012  0032BA  0E00               	movlw	low _memory
  9013  0032BC  24F3               	addwf	243,w,c
  9014  0032BE  6ED9               	movwf	fsr2l,c
  9015  0032C0  0E01               	movlw	high _memory
  9016  0032C2  20F4               	addwfc	prodh,w,c
  9017  0032C4  6EDA               	movwf	fsr2h,c
  9018  0032C6  0E03               	movlw	3
  9019  0032C8  6EDE               	movwf	postinc2,c
  9020  0032CA  0E00               	movlw	0
  9021  0032CC  6EDD               	movwf	postdec2,c
  9022  0032CE                     
  9023                           ; BSR set to: 1
  9024                           ;movement.c: 41:             array_index++;
  9025  0032CE  2B63               	incf	_array_index& (0+255),f,b
  9026  0032D0                     l5356:
  9027                           
  9028                           ;movement.c: 43:         if (color == 4){
  9029  0032D0  0E04               	movlw	4
  9030  0032D2  185E               	xorwf	action@color^0,w,c
  9031  0032D4  A4D8               	btfss	status,2,c
  9032  0032D6  EF6F  F019         	goto	u5351
  9033  0032DA  EF71  F019         	goto	u5350
  9034  0032DE                     u5351:
  9035  0032DE  EF95  F019         	goto	l5364
  9036  0032E2                     u5350:
  9037  0032E2                     
  9038                           ;movement.c: 44:             reverse_square(mL,mR);
  9039  0032E2  C0E0  F026         	movff	action@mL,reverse_square@mL
  9040  0032E6  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9041  0032EA  C0E2  F028         	movff	action@mR,reverse_square@mR
  9042  0032EE  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9043  0032F2  ECB7  F02A         	call	_reverse_square	;wreg free
  9044                           
  9045                           ;movement.c: 45:             turnRight(mL,mR,90);
  9046  0032F6  C0E0  F020         	movff	action@mL,turnRight@mL
  9047  0032FA  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9048  0032FE  C0E2  F022         	movff	action@mR,turnRight@mR
  9049  003302  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9050  003306  0E5A               	movlw	90
  9051  003308  6E24               	movwf	turnRight@angle_right^0,c
  9052  00330A  EC4E  F022         	call	_turnRight	;wreg free
  9053  00330E                     
  9054                           ;movement.c: 46:             memory[array_index] = 4;
  9055  00330E  0101               	movlb	1	; () banked
  9056  003310  5163               	movf	_array_index& (0+255),w,b
  9057  003312  0D02               	mullw	2
  9058  003314  0E00               	movlw	low _memory
  9059  003316  24F3               	addwf	243,w,c
  9060  003318  6ED9               	movwf	fsr2l,c
  9061  00331A  0E01               	movlw	high _memory
  9062  00331C  20F4               	addwfc	prodh,w,c
  9063  00331E  6EDA               	movwf	fsr2h,c
  9064  003320  0E04               	movlw	4
  9065  003322  6EDE               	movwf	postinc2,c
  9066  003324  0E00               	movlw	0
  9067  003326  6EDD               	movwf	postdec2,c
  9068  003328                     
  9069                           ; BSR set to: 1
  9070                           ;movement.c: 47:             array_index++;
  9071  003328  2B63               	incf	_array_index& (0+255),f,b
  9072  00332A                     l5364:
  9073                           
  9074                           ;movement.c: 49:         if (color == 5){
  9075  00332A  0E05               	movlw	5
  9076  00332C  185E               	xorwf	action@color^0,w,c
  9077  00332E  A4D8               	btfss	status,2,c
  9078  003330  EF9C  F019         	goto	u5361
  9079  003334  EF9E  F019         	goto	u5360
  9080  003338                     u5361:
  9081  003338  EFC2  F019         	goto	l5372
  9082  00333C                     u5360:
  9083  00333C                     
  9084                           ;movement.c: 50:             reverse_square(mL,mR);
  9085  00333C  C0E0  F026         	movff	action@mL,reverse_square@mL
  9086  003340  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9087  003344  C0E2  F028         	movff	action@mR,reverse_square@mR
  9088  003348  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9089  00334C  ECB7  F02A         	call	_reverse_square	;wreg free
  9090                           
  9091                           ;movement.c: 51:             turnLeft(mL,mR,90);
  9092  003350  C0E0  F020         	movff	action@mL,turnLeft@mL
  9093  003354  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9094  003358  C0E2  F022         	movff	action@mR,turnLeft@mR
  9095  00335C  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9096  003360  0E5A               	movlw	90
  9097  003362  6E24               	movwf	turnLeft@angle_left^0,c
  9098  003364  ECE4  F022         	call	_turnLeft	;wreg free
  9099  003368                     
  9100                           ;movement.c: 52:             memory[array_index] = 5;
  9101  003368  0101               	movlb	1	; () banked
  9102  00336A  5163               	movf	_array_index& (0+255),w,b
  9103  00336C  0D02               	mullw	2
  9104  00336E  0E00               	movlw	low _memory
  9105  003370  24F3               	addwf	243,w,c
  9106  003372  6ED9               	movwf	fsr2l,c
  9107  003374  0E01               	movlw	high _memory
  9108  003376  20F4               	addwfc	prodh,w,c
  9109  003378  6EDA               	movwf	fsr2h,c
  9110  00337A  0E05               	movlw	5
  9111  00337C  6EDE               	movwf	postinc2,c
  9112  00337E  0E00               	movlw	0
  9113  003380  6EDD               	movwf	postdec2,c
  9114  003382                     
  9115                           ; BSR set to: 1
  9116                           ;movement.c: 53:             array_index++;
  9117  003382  2B63               	incf	_array_index& (0+255),f,b
  9118  003384                     l5372:
  9119                           
  9120                           ;movement.c: 55:         if (color == 6){
  9121  003384  0E06               	movlw	6
  9122  003386  185E               	xorwf	action@color^0,w,c
  9123  003388  A4D8               	btfss	status,2,c
  9124  00338A  EFC9  F019         	goto	u5371
  9125  00338E  EFCB  F019         	goto	u5370
  9126  003392                     u5371:
  9127  003392  EFEF  F019         	goto	l5380
  9128  003396                     u5370:
  9129  003396                     
  9130                           ;movement.c: 56:             short_reverse(mL,mR);
  9131  003396  C0E0  F026         	movff	action@mL,short_reverse@mL
  9132  00339A  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9133  00339E  C0E2  F028         	movff	action@mR,short_reverse@mR
  9134  0033A2  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9135  0033A6  EC96  F02A         	call	_short_reverse	;wreg free
  9136                           
  9137                           ;movement.c: 57:             turnRight(mL,mR,135);
  9138  0033AA  C0E0  F020         	movff	action@mL,turnRight@mL
  9139  0033AE  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9140  0033B2  C0E2  F022         	movff	action@mR,turnRight@mR
  9141  0033B6  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9142  0033BA  0E87               	movlw	135
  9143  0033BC  6E24               	movwf	turnRight@angle_right^0,c
  9144  0033BE  EC4E  F022         	call	_turnRight	;wreg free
  9145  0033C2                     
  9146                           ;movement.c: 58:             memory[array_index] = 6;
  9147  0033C2  0101               	movlb	1	; () banked
  9148  0033C4  5163               	movf	_array_index& (0+255),w,b
  9149  0033C6  0D02               	mullw	2
  9150  0033C8  0E00               	movlw	low _memory
  9151  0033CA  24F3               	addwf	243,w,c
  9152  0033CC  6ED9               	movwf	fsr2l,c
  9153  0033CE  0E01               	movlw	high _memory
  9154  0033D0  20F4               	addwfc	prodh,w,c
  9155  0033D2  6EDA               	movwf	fsr2h,c
  9156  0033D4  0E06               	movlw	6
  9157  0033D6  6EDE               	movwf	postinc2,c
  9158  0033D8  0E00               	movlw	0
  9159  0033DA  6EDD               	movwf	postdec2,c
  9160  0033DC                     
  9161                           ; BSR set to: 1
  9162                           ;movement.c: 59:             array_index++;
  9163  0033DC  2B63               	incf	_array_index& (0+255),f,b
  9164  0033DE                     l5380:
  9165                           
  9166                           ;movement.c: 61:         if (color == 7){
  9167  0033DE  0E07               	movlw	7
  9168  0033E0  185E               	xorwf	action@color^0,w,c
  9169  0033E2  A4D8               	btfss	status,2,c
  9170  0033E4  EFF6  F019         	goto	u5381
  9171  0033E8  EFF8  F019         	goto	u5380
  9172  0033EC                     u5381:
  9173  0033EC  EF1C  F01A         	goto	l5388
  9174  0033F0                     u5380:
  9175  0033F0                     
  9176                           ;movement.c: 62:             short_reverse(mL,mR);
  9177  0033F0  C0E0  F026         	movff	action@mL,short_reverse@mL
  9178  0033F4  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9179  0033F8  C0E2  F028         	movff	action@mR,short_reverse@mR
  9180  0033FC  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9181  003400  EC96  F02A         	call	_short_reverse	;wreg free
  9182                           
  9183                           ;movement.c: 63:             turnLeft(mL,mR,135);
  9184  003404  C0E0  F020         	movff	action@mL,turnLeft@mL
  9185  003408  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9186  00340C  C0E2  F022         	movff	action@mR,turnLeft@mR
  9187  003410  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9188  003414  0E87               	movlw	135
  9189  003416  6E24               	movwf	turnLeft@angle_left^0,c
  9190  003418  ECE4  F022         	call	_turnLeft	;wreg free
  9191  00341C                     
  9192                           ;movement.c: 64:             memory[array_index] = 7;
  9193  00341C  0101               	movlb	1	; () banked
  9194  00341E  5163               	movf	_array_index& (0+255),w,b
  9195  003420  0D02               	mullw	2
  9196  003422  0E00               	movlw	low _memory
  9197  003424  24F3               	addwf	243,w,c
  9198  003426  6ED9               	movwf	fsr2l,c
  9199  003428  0E01               	movlw	high _memory
  9200  00342A  20F4               	addwfc	prodh,w,c
  9201  00342C  6EDA               	movwf	fsr2h,c
  9202  00342E  0E07               	movlw	7
  9203  003430  6EDE               	movwf	postinc2,c
  9204  003432  0E00               	movlw	0
  9205  003434  6EDD               	movwf	postdec2,c
  9206  003436                     
  9207                           ; BSR set to: 1
  9208                           ;movement.c: 65:             array_index++;
  9209  003436  2B63               	incf	_array_index& (0+255),f,b
  9210  003438                     l5388:
  9211                           
  9212                           ;movement.c: 67:         if (color == 8){
  9213  003438  0E08               	movlw	8
  9214  00343A  185E               	xorwf	action@color^0,w,c
  9215  00343C  A4D8               	btfss	status,2,c
  9216  00343E  EF23  F01A         	goto	u5391
  9217  003442  EF25  F01A         	goto	u5390
  9218  003446                     u5391:
  9219  003446  EF3E  F01A         	goto	l603
  9220  00344A                     u5390:
  9221  00344A                     
  9222                           ;movement.c: 68:             toggle_light(2,1);
  9223  00344A  0E01               	movlw	1
  9224  00344C  6E01               	movwf	toggle_light@toggletime^0,c
  9225  00344E  0E02               	movlw	2
  9226  003450  EC3F  F01A         	call	_toggle_light
  9227  003454                     
  9228                           ;movement.c: 69:             short_reverse(mL,mR);
  9229  003454  C0E0  F026         	movff	action@mL,short_reverse@mL
  9230  003458  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9231  00345C  C0E2  F028         	movff	action@mR,short_reverse@mR
  9232  003460  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9233  003464  EC96  F02A         	call	_short_reverse	;wreg free
  9234  003468                     
  9235                           ;movement.c: 70:             goback(mL,mR);
  9236  003468  C0E0  F058         	movff	action@mL,goback@mL
  9237  00346C  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9238  003470  C0E2  F05A         	movff	action@mR,goback@mR
  9239  003474  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9240  003478  EC72  F017         	call	_goback	;wreg free
  9241  00347C                     l603:
  9242  00347C  0012               	return		;funcret
  9243  00347E                     __end_of_action:
  9244                           	callstack 0
  9245                           
  9246 ;; *************** function _toggle_light *****************
  9247 ;; Defined at:
  9248 ;;		line 29 in file "color.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  lightnumber     1    wreg     unsigned char 
  9251 ;;  toggletime      1    0[COMRAM] unsigned char 
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9254 ;;  i               1    3[COMRAM] unsigned char 
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, status,0
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9264 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9267 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;Total ram usage:        5 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 1
  9271 ;; This function calls:
  9272 ;;		Nothing
  9273 ;; This function is called by:
  9274 ;;		_calibrate_white
  9275 ;;		_detect_color
  9276 ;;		_amb_light_measure
  9277 ;;		_action
  9278 ;; This function uses a non-reentrant model
  9279 ;;
  9280                           
  9281                           	psect	text45
  9282  00347E                     __ptext45:
  9283                           	callstack 0
  9284  00347E                     _toggle_light:
  9285                           	callstack 27
  9286                           
  9287                           ;incstack = 0
  9288                           ;toggle_light@lightnumber stored from wreg
  9289  00347E  6E05               	movwf	toggle_light@lightnumber^0,c
  9290  003480                     
  9291                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9292  003480  0E00               	movlw	0
  9293  003482  6E04               	movwf	toggle_light@i^0,c
  9294                           
  9295                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9296  003484  0E00               	movlw	0
  9297  003486  6E04               	movwf	toggle_light@i^0,c
  9298  003488  EF8B  F01B         	goto	l70
  9299  00348C                     l4438:
  9300                           
  9301                           ;color.c: 34:         if (lightnumber == 1){
  9302  00348C  0405               	decf	toggle_light@lightnumber^0,w,c
  9303  00348E  A4D8               	btfss	status,2,c
  9304  003490  EF4C  F01A         	goto	u4231
  9305  003494  EF4E  F01A         	goto	u4230
  9306  003498                     u4231:
  9307  003498  EF86  F01A         	goto	l4446
  9308  00349C                     u4230:
  9309  00349C                     
  9310                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9311  00349C  A280               	btfss	128,1,c	;volatile
  9312  00349E  EF53  F01A         	goto	u4241
  9313  0034A2  EF57  F01A         	goto	u4240
  9314  0034A6                     u4241:
  9315  0034A6  6A02               	clrf	??_toggle_light^0,c
  9316  0034A8  2A02               	incf	??_toggle_light^0,f,c
  9317  0034AA  EF58  F01A         	goto	u4258
  9318  0034AE                     u4240:
  9319  0034AE  6A02               	clrf	??_toggle_light^0,c
  9320  0034B0                     u4258:
  9321  0034B0  4602               	rlncf	??_toggle_light^0,f,c
  9322  0034B2  5080               	movf	128,w,c	;volatile
  9323  0034B4  1802               	xorwf	??_toggle_light^0,w,c
  9324  0034B6  0BFD               	andlw	-3
  9325  0034B8  1802               	xorwf	??_toggle_light^0,w,c
  9326  0034BA  6E80               	movwf	128,c	;volatile
  9327  0034BC                     
  9328                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9329  0034BC  0E29               	movlw	41
  9330  0034BE  6E03               	movwf	(??_toggle_light+1)^0,c
  9331  0034C0  0E96               	movlw	150
  9332  0034C2  6E02               	movwf	??_toggle_light^0,c
  9333  0034C4  0E7F               	movlw	127
  9334  0034C6                     u5797:
  9335  0034C6  2EE8               	decfsz	wreg,f,c
  9336  0034C8  D7FE               	bra	u5797
  9337  0034CA  2E02               	decfsz	??_toggle_light^0,f,c
  9338  0034CC  D7FC               	bra	u5797
  9339  0034CE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9340  0034D0  D7FA               	bra	u5797
  9341  0034D2  F000               	nop	
  9342  0034D4                     
  9343                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9344  0034D4  A280               	btfss	128,1,c	;volatile
  9345  0034D6  EF6F  F01A         	goto	u4261
  9346  0034DA  EF73  F01A         	goto	u4260
  9347  0034DE                     u4261:
  9348  0034DE  6A02               	clrf	??_toggle_light^0,c
  9349  0034E0  2A02               	incf	??_toggle_light^0,f,c
  9350  0034E2  EF74  F01A         	goto	u4278
  9351  0034E6                     u4260:
  9352  0034E6  6A02               	clrf	??_toggle_light^0,c
  9353  0034E8                     u4278:
  9354  0034E8  4602               	rlncf	??_toggle_light^0,f,c
  9355  0034EA  5080               	movf	128,w,c	;volatile
  9356  0034EC  1802               	xorwf	??_toggle_light^0,w,c
  9357  0034EE  0BFD               	andlw	-3
  9358  0034F0  1802               	xorwf	??_toggle_light^0,w,c
  9359  0034F2  6E80               	movwf	128,c	;volatile
  9360                           
  9361                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9362  0034F4  0E29               	movlw	41
  9363  0034F6  6E03               	movwf	(??_toggle_light+1)^0,c
  9364  0034F8  0E96               	movlw	150
  9365  0034FA  6E02               	movwf	??_toggle_light^0,c
  9366  0034FC  0E7F               	movlw	127
  9367  0034FE                     u5807:
  9368  0034FE  2EE8               	decfsz	wreg,f,c
  9369  003500  D7FE               	bra	u5807
  9370  003502  2E02               	decfsz	??_toggle_light^0,f,c
  9371  003504  D7FC               	bra	u5807
  9372  003506  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9373  003508  D7FA               	bra	u5807
  9374  00350A  F000               	nop	
  9375  00350C                     l4446:
  9376                           
  9377                           ;color.c: 40:         if (lightnumber == 2){
  9378  00350C  0E02               	movlw	2
  9379  00350E  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9380  003510  A4D8               	btfss	status,2,c
  9381  003512  EF8D  F01A         	goto	u4281
  9382  003516  EF8F  F01A         	goto	u4280
  9383  00351A                     u4281:
  9384  00351A  EFC7  F01A         	goto	l4454
  9385  00351E                     u4280:
  9386  00351E                     
  9387                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9388  00351E  A87C               	btfss	124,4,c	;volatile
  9389  003520  EF94  F01A         	goto	u4291
  9390  003524  EF98  F01A         	goto	u4290
  9391  003528                     u4291:
  9392  003528  6A02               	clrf	??_toggle_light^0,c
  9393  00352A  2A02               	incf	??_toggle_light^0,f,c
  9394  00352C  EF99  F01A         	goto	u4308
  9395  003530                     u4290:
  9396  003530  6A02               	clrf	??_toggle_light^0,c
  9397  003532                     u4308:
  9398  003532  3A02               	swapf	??_toggle_light^0,f,c
  9399  003534  507C               	movf	124,w,c	;volatile
  9400  003536  1802               	xorwf	??_toggle_light^0,w,c
  9401  003538  0BEF               	andlw	-17
  9402  00353A  1802               	xorwf	??_toggle_light^0,w,c
  9403  00353C  6E7C               	movwf	124,c	;volatile
  9404  00353E                     
  9405                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9406  00353E  0E29               	movlw	41
  9407  003540  6E03               	movwf	(??_toggle_light+1)^0,c
  9408  003542  0E96               	movlw	150
  9409  003544  6E02               	movwf	??_toggle_light^0,c
  9410  003546  0E7F               	movlw	127
  9411  003548                     u5817:
  9412  003548  2EE8               	decfsz	wreg,f,c
  9413  00354A  D7FE               	bra	u5817
  9414  00354C  2E02               	decfsz	??_toggle_light^0,f,c
  9415  00354E  D7FC               	bra	u5817
  9416  003550  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9417  003552  D7FA               	bra	u5817
  9418  003554  F000               	nop	
  9419  003556                     
  9420                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9421  003556  A87C               	btfss	124,4,c	;volatile
  9422  003558  EFB0  F01A         	goto	u4311
  9423  00355C  EFB4  F01A         	goto	u4310
  9424  003560                     u4311:
  9425  003560  6A02               	clrf	??_toggle_light^0,c
  9426  003562  2A02               	incf	??_toggle_light^0,f,c
  9427  003564  EFB5  F01A         	goto	u4328
  9428  003568                     u4310:
  9429  003568  6A02               	clrf	??_toggle_light^0,c
  9430  00356A                     u4328:
  9431  00356A  3A02               	swapf	??_toggle_light^0,f,c
  9432  00356C  507C               	movf	124,w,c	;volatile
  9433  00356E  1802               	xorwf	??_toggle_light^0,w,c
  9434  003570  0BEF               	andlw	-17
  9435  003572  1802               	xorwf	??_toggle_light^0,w,c
  9436  003574  6E7C               	movwf	124,c	;volatile
  9437                           
  9438                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9439  003576  0E29               	movlw	41
  9440  003578  6E03               	movwf	(??_toggle_light+1)^0,c
  9441  00357A  0E96               	movlw	150
  9442  00357C  6E02               	movwf	??_toggle_light^0,c
  9443  00357E  0E7F               	movlw	127
  9444  003580                     u5827:
  9445  003580  2EE8               	decfsz	wreg,f,c
  9446  003582  D7FE               	bra	u5827
  9447  003584  2E02               	decfsz	??_toggle_light^0,f,c
  9448  003586  D7FC               	bra	u5827
  9449  003588  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9450  00358A  D7FA               	bra	u5827
  9451  00358C  F000               	nop	
  9452  00358E                     l4454:
  9453                           
  9454                           ;color.c: 46:         if (lightnumber == 3){
  9455  00358E  0E03               	movlw	3
  9456  003590  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9457  003592  A4D8               	btfss	status,2,c
  9458  003594  EFCE  F01A         	goto	u4331
  9459  003598  EFD0  F01A         	goto	u4330
  9460  00359C                     u4331:
  9461  00359C  EF0C  F01B         	goto	l4462
  9462  0035A0                     u4330:
  9463  0035A0                     
  9464                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9465  0035A0  A67C               	btfss	124,3,c	;volatile
  9466  0035A2  EFD5  F01A         	goto	u4341
  9467  0035A6  EFD9  F01A         	goto	u4340
  9468  0035AA                     u4341:
  9469  0035AA  6A02               	clrf	??_toggle_light^0,c
  9470  0035AC  2A02               	incf	??_toggle_light^0,f,c
  9471  0035AE  EFDA  F01A         	goto	u4358
  9472  0035B2                     u4340:
  9473  0035B2  6A02               	clrf	??_toggle_light^0,c
  9474  0035B4                     u4358:
  9475  0035B4  4602               	rlncf	??_toggle_light^0,f,c
  9476  0035B6  4602               	rlncf	??_toggle_light^0,f,c
  9477  0035B8  4602               	rlncf	??_toggle_light^0,f,c
  9478  0035BA  507C               	movf	124,w,c	;volatile
  9479  0035BC  1802               	xorwf	??_toggle_light^0,w,c
  9480  0035BE  0BF7               	andlw	-9
  9481  0035C0  1802               	xorwf	??_toggle_light^0,w,c
  9482  0035C2  6E7C               	movwf	124,c	;volatile
  9483  0035C4                     
  9484                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9485  0035C4  0E29               	movlw	41
  9486  0035C6  6E03               	movwf	(??_toggle_light+1)^0,c
  9487  0035C8  0E96               	movlw	150
  9488  0035CA  6E02               	movwf	??_toggle_light^0,c
  9489  0035CC  0E7F               	movlw	127
  9490  0035CE                     u5837:
  9491  0035CE  2EE8               	decfsz	wreg,f,c
  9492  0035D0  D7FE               	bra	u5837
  9493  0035D2  2E02               	decfsz	??_toggle_light^0,f,c
  9494  0035D4  D7FC               	bra	u5837
  9495  0035D6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9496  0035D8  D7FA               	bra	u5837
  9497  0035DA  F000               	nop	
  9498  0035DC                     
  9499                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9500  0035DC  A67C               	btfss	124,3,c	;volatile
  9501  0035DE  EFF3  F01A         	goto	u4361
  9502  0035E2  EFF7  F01A         	goto	u4360
  9503  0035E6                     u4361:
  9504  0035E6  6A02               	clrf	??_toggle_light^0,c
  9505  0035E8  2A02               	incf	??_toggle_light^0,f,c
  9506  0035EA  EFF8  F01A         	goto	u4378
  9507  0035EE                     u4360:
  9508  0035EE  6A02               	clrf	??_toggle_light^0,c
  9509  0035F0                     u4378:
  9510  0035F0  4602               	rlncf	??_toggle_light^0,f,c
  9511  0035F2  4602               	rlncf	??_toggle_light^0,f,c
  9512  0035F4  4602               	rlncf	??_toggle_light^0,f,c
  9513  0035F6  507C               	movf	124,w,c	;volatile
  9514  0035F8  1802               	xorwf	??_toggle_light^0,w,c
  9515  0035FA  0BF7               	andlw	-9
  9516  0035FC  1802               	xorwf	??_toggle_light^0,w,c
  9517  0035FE  6E7C               	movwf	124,c	;volatile
  9518                           
  9519                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9520  003600  0E29               	movlw	41
  9521  003602  6E03               	movwf	(??_toggle_light+1)^0,c
  9522  003604  0E96               	movlw	150
  9523  003606  6E02               	movwf	??_toggle_light^0,c
  9524  003608  0E7F               	movlw	127
  9525  00360A                     u5847:
  9526  00360A  2EE8               	decfsz	wreg,f,c
  9527  00360C  D7FE               	bra	u5847
  9528  00360E  2E02               	decfsz	??_toggle_light^0,f,c
  9529  003610  D7FC               	bra	u5847
  9530  003612  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9531  003614  D7FA               	bra	u5847
  9532  003616  F000               	nop	
  9533  003618                     l4462:
  9534                           
  9535                           ;color.c: 52:         if (lightnumber == 4){
  9536  003618  0E04               	movlw	4
  9537  00361A  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9538  00361C  A4D8               	btfss	status,2,c
  9539  00361E  EF13  F01B         	goto	u4381
  9540  003622  EF15  F01B         	goto	u4380
  9541  003626                     u4381:
  9542  003626  EF4B  F01B         	goto	l4470
  9543  00362A                     u4380:
  9544  00362A                     
  9545                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9546  00362A  A07E               	btfss	126,0,c	;volatile
  9547  00362C  EF1A  F01B         	goto	u4391
  9548  003630  EF1E  F01B         	goto	u4390
  9549  003634                     u4391:
  9550  003634  6A02               	clrf	??_toggle_light^0,c
  9551  003636  2A02               	incf	??_toggle_light^0,f,c
  9552  003638  EF1F  F01B         	goto	u4408
  9553  00363C                     u4390:
  9554  00363C  6A02               	clrf	??_toggle_light^0,c
  9555  00363E                     u4408:
  9556  00363E  507E               	movf	126,w,c	;volatile
  9557  003640  1802               	xorwf	??_toggle_light^0,w,c
  9558  003642  0BFE               	andlw	-2
  9559  003644  1802               	xorwf	??_toggle_light^0,w,c
  9560  003646  6E7E               	movwf	126,c	;volatile
  9561  003648                     
  9562                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9563  003648  0E29               	movlw	41
  9564  00364A  6E03               	movwf	(??_toggle_light+1)^0,c
  9565  00364C  0E96               	movlw	150
  9566  00364E  6E02               	movwf	??_toggle_light^0,c
  9567  003650  0E7F               	movlw	127
  9568  003652                     u5857:
  9569  003652  2EE8               	decfsz	wreg,f,c
  9570  003654  D7FE               	bra	u5857
  9571  003656  2E02               	decfsz	??_toggle_light^0,f,c
  9572  003658  D7FC               	bra	u5857
  9573  00365A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9574  00365C  D7FA               	bra	u5857
  9575  00365E  F000               	nop	
  9576  003660                     
  9577                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9578  003660  A07E               	btfss	126,0,c	;volatile
  9579  003662  EF35  F01B         	goto	u4411
  9580  003666  EF39  F01B         	goto	u4410
  9581  00366A                     u4411:
  9582  00366A  6A02               	clrf	??_toggle_light^0,c
  9583  00366C  2A02               	incf	??_toggle_light^0,f,c
  9584  00366E  EF3A  F01B         	goto	u4428
  9585  003672                     u4410:
  9586  003672  6A02               	clrf	??_toggle_light^0,c
  9587  003674                     u4428:
  9588  003674  507E               	movf	126,w,c	;volatile
  9589  003676  1802               	xorwf	??_toggle_light^0,w,c
  9590  003678  0BFE               	andlw	-2
  9591  00367A  1802               	xorwf	??_toggle_light^0,w,c
  9592  00367C  6E7E               	movwf	126,c	;volatile
  9593                           
  9594                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9595  00367E  0E29               	movlw	41
  9596  003680  6E03               	movwf	(??_toggle_light+1)^0,c
  9597  003682  0E96               	movlw	150
  9598  003684  6E02               	movwf	??_toggle_light^0,c
  9599  003686  0E7F               	movlw	127
  9600  003688                     u5867:
  9601  003688  2EE8               	decfsz	wreg,f,c
  9602  00368A  D7FE               	bra	u5867
  9603  00368C  2E02               	decfsz	??_toggle_light^0,f,c
  9604  00368E  D7FC               	bra	u5867
  9605  003690  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9606  003692  D7FA               	bra	u5867
  9607  003694  F000               	nop	
  9608  003696                     l4470:
  9609                           
  9610                           ;color.c: 58:         if (lightnumber == 3){
  9611  003696  0E03               	movlw	3
  9612  003698  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9613  00369A  A4D8               	btfss	status,2,c
  9614  00369C  EF52  F01B         	goto	u4431
  9615  0036A0  EF54  F01B         	goto	u4430
  9616  0036A4                     u4431:
  9617  0036A4  EF8A  F01B         	goto	l4478
  9618  0036A8                     u4430:
  9619  0036A8                     
  9620                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9621  0036A8  A080               	btfss	128,0,c	;volatile
  9622  0036AA  EF59  F01B         	goto	u4441
  9623  0036AE  EF5D  F01B         	goto	u4440
  9624  0036B2                     u4441:
  9625  0036B2  6A02               	clrf	??_toggle_light^0,c
  9626  0036B4  2A02               	incf	??_toggle_light^0,f,c
  9627  0036B6  EF5E  F01B         	goto	u4458
  9628  0036BA                     u4440:
  9629  0036BA  6A02               	clrf	??_toggle_light^0,c
  9630  0036BC                     u4458:
  9631  0036BC  5080               	movf	128,w,c	;volatile
  9632  0036BE  1802               	xorwf	??_toggle_light^0,w,c
  9633  0036C0  0BFE               	andlw	-2
  9634  0036C2  1802               	xorwf	??_toggle_light^0,w,c
  9635  0036C4  6E80               	movwf	128,c	;volatile
  9636  0036C6                     
  9637                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9638  0036C6  0E29               	movlw	41
  9639  0036C8  6E03               	movwf	(??_toggle_light+1)^0,c
  9640  0036CA  0E96               	movlw	150
  9641  0036CC  6E02               	movwf	??_toggle_light^0,c
  9642  0036CE  0E7F               	movlw	127
  9643  0036D0                     u5877:
  9644  0036D0  2EE8               	decfsz	wreg,f,c
  9645  0036D2  D7FE               	bra	u5877
  9646  0036D4  2E02               	decfsz	??_toggle_light^0,f,c
  9647  0036D6  D7FC               	bra	u5877
  9648  0036D8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9649  0036DA  D7FA               	bra	u5877
  9650  0036DC  F000               	nop	
  9651  0036DE                     
  9652                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  9653  0036DE  A080               	btfss	128,0,c	;volatile
  9654  0036E0  EF74  F01B         	goto	u4461
  9655  0036E4  EF78  F01B         	goto	u4460
  9656  0036E8                     u4461:
  9657  0036E8  6A02               	clrf	??_toggle_light^0,c
  9658  0036EA  2A02               	incf	??_toggle_light^0,f,c
  9659  0036EC  EF79  F01B         	goto	u4478
  9660  0036F0                     u4460:
  9661  0036F0  6A02               	clrf	??_toggle_light^0,c
  9662  0036F2                     u4478:
  9663  0036F2  5080               	movf	128,w,c	;volatile
  9664  0036F4  1802               	xorwf	??_toggle_light^0,w,c
  9665  0036F6  0BFE               	andlw	-2
  9666  0036F8  1802               	xorwf	??_toggle_light^0,w,c
  9667  0036FA  6E80               	movwf	128,c	;volatile
  9668                           
  9669                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9670  0036FC  0E29               	movlw	41
  9671  0036FE  6E03               	movwf	(??_toggle_light+1)^0,c
  9672  003700  0E96               	movlw	150
  9673  003702  6E02               	movwf	??_toggle_light^0,c
  9674  003704  0E7F               	movlw	127
  9675  003706                     u5887:
  9676  003706  2EE8               	decfsz	wreg,f,c
  9677  003708  D7FE               	bra	u5887
  9678  00370A  2E02               	decfsz	??_toggle_light^0,f,c
  9679  00370C  D7FC               	bra	u5887
  9680  00370E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9681  003710  D7FA               	bra	u5887
  9682  003712  F000               	nop	
  9683  003714                     l4478:
  9684                           
  9685                           ;color.c: 64:     }
  9686  003714  2A04               	incf	toggle_light@i^0,f,c
  9687  003716                     l70:
  9688  003716  5001               	movf	toggle_light@toggletime^0,w,c
  9689  003718  5C04               	subwf	toggle_light@i^0,w,c
  9690  00371A  A0D8               	btfss	status,0,c
  9691  00371C  EF92  F01B         	goto	u4481
  9692  003720  EF94  F01B         	goto	u4480
  9693  003724                     u4481:
  9694  003724  EF46  F01A         	goto	l4438
  9695  003728                     u4480:
  9696  003728  0012               	return		;funcret
  9697  00372A                     __end_of_toggle_light:
  9698                           	callstack 0
  9699                           
  9700 ;; *************** function _short_reverse *****************
  9701 ;; Defined at:
  9702 ;;		line 184 in file "dc_motor.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  9705 ;;		 -> main@motorL(10), 
  9706 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  9707 ;;		 -> main@motorR(10), 
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;		None
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      void 
  9712 ;; Registers used:
  9713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9721 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9723 ;;Total ram usage:        6 bytes
  9724 ;; Hardware stack levels used: 1
  9725 ;; Hardware stack levels required when called: 5
  9726 ;; This function calls:
  9727 ;;		_fullSpeedBack
  9728 ;;		_stop
  9729 ;; This function is called by:
  9730 ;;		_action
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text46
  9735  00552C                     __ptext46:
  9736                           	callstack 0
  9737  00552C                     _short_reverse:
  9738                           	callstack 24
  9739  00552C                     
  9740                           ;dc_motor.c: 184: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 185: { fullSpeedBack(mL, mR);
  9741  00552C  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
  9742  005530  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
  9743  005534  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
  9744  005538  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
  9745  00553C  EC0A  F027         	call	_fullSpeedBack	;wreg free
  9746  005540                     
  9747                           ;dc_motor.c: 186:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9748  005540  0E29               	movlw	41
  9749  005542  6E2B               	movwf	(??_short_reverse+1)^0,c
  9750  005544  0E96               	movlw	150
  9751  005546  6E2A               	movwf	??_short_reverse^0,c
  9752  005548  0E7F               	movlw	127
  9753  00554A                     u5897:
  9754  00554A  2EE8               	decfsz	wreg,f,c
  9755  00554C  D7FE               	bra	u5897
  9756  00554E  2E2A               	decfsz	??_short_reverse^0,f,c
  9757  005550  D7FC               	bra	u5897
  9758  005552  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
  9759  005554  D7FA               	bra	u5897
  9760  005556  F000               	nop	
  9761  005558                     
  9762                           ;dc_motor.c: 187:     stop(mL,mR);
  9763  005558  C026  F01A         	movff	short_reverse@mL,stop@mL
  9764  00555C  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
  9765  005560  C028  F01C         	movff	short_reverse@mR,stop@mR
  9766  005564  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
  9767  005568  EC6A  F027         	call	_stop	;wreg free
  9768  00556C  0012               	return		;funcret
  9769  00556E                     __end_of_short_reverse:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _goback *****************
  9773 ;; Defined at:
  9774 ;;		line 111 in file "movement.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  mL              2   87[COMRAM] PTR struct DC_motor
  9777 ;;		 -> main@motorL(10), 
  9778 ;;  mR              2   89[COMRAM] PTR struct DC_motor
  9779 ;;		 -> main@motorR(10), 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  i               2  126[BANK0 ] unsigned int 
  9782 ;; Return value:  Size  Location     Type
  9783 ;;                  1    wreg      void 
  9784 ;; Registers used:
  9785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9786 ;; Tracked objects:
  9787 ;;		On entry : 0/0
  9788 ;;		On exit  : 0/0
  9789 ;;		Unchanged: 0/0
  9790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9795 ;;Total ram usage:        8 bytes
  9796 ;; Hardware stack levels used: 1
  9797 ;; Hardware stack levels required when called: 10
  9798 ;; This function calls:
  9799 ;;		_color_predict
  9800 ;;		_fullSpeedAhead
  9801 ;;		_reverse_square
  9802 ;;		_stop
  9803 ;;		_turnLeft
  9804 ;;		_turnRight
  9805 ;; This function is called by:
  9806 ;;		_action
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810                           	psect	text47
  9811  002EE4                     __ptext47:
  9812                           	callstack 0
  9813  002EE4                     _goback:
  9814                           	callstack 19
  9815  002EE4                     
  9816                           ;movement.c: 111: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 112:
      +                           { turnRight(mL,mR,180);
  9817  002EE4  C058  F020         	movff	goback@mL,turnRight@mL
  9818  002EE8  C059  F021         	movff	goback@mL+1,turnRight@mL+1
  9819  002EEC  C05A  F022         	movff	goback@mR,turnRight@mR
  9820  002EF0  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
  9821  002EF4  0EB4               	movlw	180
  9822  002EF6  6E24               	movwf	turnRight@angle_right^0,c
  9823  002EF8  EC4E  F022         	call	_turnRight	;wreg free
  9824  002EFC                     l5128:
  9825                           
  9826                           ;movement.c: 113:     array_index--;
  9827  002EFC  0101               	movlb	1	; () banked
  9828  002EFE  0763               	decf	_array_index& (0+255),f,b
  9829  002F00                     l5130:
  9830                           
  9831                           ; BSR set to: 1
  9832                           ;movement.c: 115:         fullSpeedAhead(mL,mR);
  9833  002F00  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
  9834  002F04  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  9835  002F08  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
  9836  002F0C  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  9837  002F10  ECC8  F027         	call	_fullSpeedAhead	;wreg free
  9838  002F14                     
  9839                           ;movement.c: 116:         color_predict(array_index);
  9840  002F14  0101               	movlb	1	; () banked
  9841  002F16  5163               	movf	_array_index& (0+255),w,b
  9842  002F18  EC9B  F02B         	call	_color_predict
  9843  002F1C                     
  9844                           ;movement.c: 117:         color_predict(201);
  9845  002F1C  0EC9               	movlw	201
  9846  002F1E  EC9B  F02B         	call	_color_predict
  9847  002F22                     
  9848                           ;movement.c: 118:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
  9849  002F22  0E00               	movlw	0
  9850  002F24  0100               	movlb	0	; () banked
  9851  002F26  6FDF               	movwf	(goback@i+1)& (0+255),b
  9852  002F28  0E00               	movlw	0
  9853  002F2A  6FDE               	movwf	goback@i& (0+255),b
  9854  002F2C  EFA7  F017         	goto	l5142
  9855  002F30                     l5138:
  9856                           
  9857                           ; BSR set to: 0
  9858  002F30  0E52               	movlw	82
  9859  002F32  6E5D               	movwf	(??_goback+1)^0,c
  9860  002F34  0E2B               	movlw	43
  9861  002F36  6E5C               	movwf	??_goback^0,c
  9862  002F38  0E00               	movlw	0
  9863  002F3A                     u5907:
  9864  002F3A  2EE8               	decfsz	wreg,f,c
  9865  002F3C  D7FE               	bra	u5907
  9866  002F3E  2E5C               	decfsz	??_goback^0,f,c
  9867  002F40  D7FC               	bra	u5907
  9868  002F42  2E5D               	decfsz	(??_goback+1)^0,f,c
  9869  002F44  D7FA               	bra	u5907
  9870  002F46  D000               	nop2	
  9871  002F48  0100               	movlb	0	; () banked
  9872  002F4A  4BDE               	infsnz	goback@i& (0+255),f,b
  9873  002F4C  2BDF               	incf	(goback@i+1)& (0+255),f,b
  9874  002F4E                     l5142:
  9875                           
  9876                           ; BSR set to: 0
  9877  002F4E  0101               	movlb	1	; () banked
  9878  002F50  5163               	movf	_array_index& (0+255),w,b
  9879  002F52  0D02               	mullw	2
  9880  002F54  0E00               	movlw	low _memory
  9881  002F56  24F3               	addwf	243,w,c
  9882  002F58  6ED9               	movwf	fsr2l,c
  9883  002F5A  0E01               	movlw	high _memory
  9884  002F5C  20F4               	addwfc	prodh,w,c
  9885  002F5E  6EDA               	movwf	fsr2h,c
  9886  002F60  50DE               	movf	postinc2,w,c
  9887  002F62  0100               	movlb	0	; () banked
  9888  002F64  5DDE               	subwf	goback@i& (0+255),w,b
  9889  002F66  50DE               	movf	postinc2,w,c
  9890  002F68  59DF               	subwfb	(goback@i+1)& (0+255),w,b
  9891  002F6A  A0D8               	btfss	status,0,c
  9892  002F6C  EFBA  F017         	goto	u5111
  9893  002F70  EFBC  F017         	goto	u5110
  9894  002F74                     u5111:
  9895  002F74  EF98  F017         	goto	l5138
  9896  002F78                     u5110:
  9897  002F78                     
  9898                           ; BSR set to: 0
  9899                           ;movement.c: 119:         stop(mL,mR);
  9900  002F78  C058  F01A         	movff	goback@mL,stop@mL
  9901  002F7C  C059  F01B         	movff	goback@mL+1,stop@mL+1
  9902  002F80  C05A  F01C         	movff	goback@mR,stop@mR
  9903  002F84  C05B  F01D         	movff	goback@mR+1,stop@mR+1
  9904  002F88  EC6A  F027         	call	_stop	;wreg free
  9905  002F8C                     
  9906                           ;movement.c: 120:         if (array_index == 0){break;}
  9907  002F8C  0101               	movlb	1	; () banked
  9908  002F8E  5163               	movf	_array_index& (0+255),w,b
  9909  002F90  A4D8               	btfss	status,2,c
  9910  002F92  EFCD  F017         	goto	u5121
  9911  002F96  EFCF  F017         	goto	u5120
  9912  002F9A                     u5121:
  9913  002F9A  EFD1  F017         	goto	l5150
  9914  002F9E                     u5120:
  9915  002F9E  EFCC  F018         	goto	l5198
  9916  002FA2                     l5150:
  9917                           
  9918                           ; BSR set to: 1
  9919                           ;movement.c: 121:         array_index--;
  9920  002FA2  0763               	decf	_array_index& (0+255),f,b
  9921  002FA4                     
  9922                           ; BSR set to: 1
  9923                           ;movement.c: 122:         color_predict(array_index);
  9924  002FA4  5163               	movf	_array_index& (0+255),w,b
  9925  002FA6  EC9B  F02B         	call	_color_predict
  9926  002FAA                     
  9927                           ;movement.c: 123:         color_predict(201);
  9928  002FAA  0EC9               	movlw	201
  9929  002FAC  EC9B  F02B         	call	_color_predict
  9930  002FB0                     
  9931                           ;movement.c: 125:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
  9932  002FB0  0101               	movlb	1	; () banked
  9933  002FB2  5163               	movf	_array_index& (0+255),w,b
  9934  002FB4  0D02               	mullw	2
  9935  002FB6  0E00               	movlw	low _memory
  9936  002FB8  24F3               	addwf	243,w,c
  9937  002FBA  6ED9               	movwf	fsr2l,c
  9938  002FBC  0E01               	movlw	high _memory
  9939  002FBE  20F4               	addwfc	prodh,w,c
  9940  002FC0  6EDA               	movwf	fsr2h,c
  9941  002FC2  04DE               	decf	postinc2,w,c
  9942  002FC4  10DE               	iorwf	postinc2,w,c
  9943  002FC6  A4D8               	btfss	status,2,c
  9944  002FC8  EFE8  F017         	goto	u5131
  9945  002FCC  EFEA  F017         	goto	u5130
  9946  002FD0                     u5131:
  9947  002FD0  EFF8  F017         	goto	l5162
  9948  002FD4                     u5130:
  9949  002FD4                     
  9950                           ; BSR set to: 1
  9951  002FD4  C058  F020         	movff	goback@mL,turnLeft@mL
  9952  002FD8  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
  9953  002FDC  C05A  F022         	movff	goback@mR,turnLeft@mR
  9954  002FE0  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
  9955  002FE4  0E5A               	movlw	90
  9956  002FE6  6E24               	movwf	turnLeft@angle_left^0,c
  9957  002FE8  ECE4  F022         	call	_turnLeft	;wreg free
  9958  002FEC  0101               	movlb	1	; () banked
  9959  002FEE  0763               	decf	_array_index& (0+255),f,b
  9960  002FF0                     l5162:
  9961                           
  9962                           ; BSR set to: 1
  9963                           ;movement.c: 126:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
  9964  002FF0  5163               	movf	_array_index& (0+255),w,b
  9965  002FF2  0D02               	mullw	2
  9966  002FF4  0E00               	movlw	low _memory
  9967  002FF6  24F3               	addwf	243,w,c
  9968  002FF8  6ED9               	movwf	fsr2l,c
  9969  002FFA  0E01               	movlw	high _memory
  9970  002FFC  20F4               	addwfc	prodh,w,c
  9971  002FFE  6EDA               	movwf	fsr2h,c
  9972  003000  0E02               	movlw	2
  9973  003002  18DE               	xorwf	postinc2,w,c
  9974  003004  10DE               	iorwf	postinc2,w,c
  9975  003006  A4D8               	btfss	status,2,c
  9976  003008  EF08  F018         	goto	u5141
  9977  00300C  EF0A  F018         	goto	u5140
  9978  003010                     u5141:
  9979  003010  EF18  F018         	goto	l5168
  9980  003014                     u5140:
  9981  003014                     
  9982                           ; BSR set to: 1
  9983  003014  C058  F020         	movff	goback@mL,turnRight@mL
  9984  003018  C059  F021         	movff	goback@mL+1,turnRight@mL+1
  9985  00301C  C05A  F022         	movff	goback@mR,turnRight@mR
  9986  003020  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
  9987  003024  0E5A               	movlw	90
  9988  003026  6E24               	movwf	turnRight@angle_right^0,c
  9989  003028  EC4E  F022         	call	_turnRight	;wreg free
  9990  00302C  0101               	movlb	1	; () banked
  9991  00302E  0763               	decf	_array_index& (0+255),f,b
  9992  003030                     l5168:
  9993                           
  9994                           ; BSR set to: 1
  9995                           ;movement.c: 127:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
  9996  003030  5163               	movf	_array_index& (0+255),w,b
  9997  003032  0D02               	mullw	2
  9998  003034  0E00               	movlw	low _memory
  9999  003036  24F3               	addwf	243,w,c
 10000  003038  6ED9               	movwf	fsr2l,c
 10001  00303A  0E01               	movlw	high _memory
 10002  00303C  20F4               	addwfc	prodh,w,c
 10003  00303E  6EDA               	movwf	fsr2h,c
 10004  003040  0E03               	movlw	3
 10005  003042  18DE               	xorwf	postinc2,w,c
 10006  003044  10DE               	iorwf	postinc2,w,c
 10007  003046  A4D8               	btfss	status,2,c
 10008  003048  EF28  F018         	goto	u5151
 10009  00304C  EF2A  F018         	goto	u5150
 10010  003050                     u5151:
 10011  003050  EF38  F018         	goto	l5174
 10012  003054                     u5150:
 10013  003054                     
 10014                           ; BSR set to: 1
 10015  003054  C058  F020         	movff	goback@mL,turnLeft@mL
 10016  003058  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10017  00305C  C05A  F022         	movff	goback@mR,turnLeft@mR
 10018  003060  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10019  003064  0EB4               	movlw	180
 10020  003066  6E24               	movwf	turnLeft@angle_left^0,c
 10021  003068  ECE4  F022         	call	_turnLeft	;wreg free
 10022  00306C  0101               	movlb	1	; () banked
 10023  00306E  0763               	decf	_array_index& (0+255),f,b
 10024  003070                     l5174:
 10025                           
 10026                           ; BSR set to: 1
 10027                           ;movement.c: 128:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 10028  003070  5163               	movf	_array_index& (0+255),w,b
 10029  003072  0D02               	mullw	2
 10030  003074  0E00               	movlw	low _memory
 10031  003076  24F3               	addwf	243,w,c
 10032  003078  6ED9               	movwf	fsr2l,c
 10033  00307A  0E01               	movlw	high _memory
 10034  00307C  20F4               	addwfc	prodh,w,c
 10035  00307E  6EDA               	movwf	fsr2h,c
 10036  003080  0E04               	movlw	4
 10037  003082  18DE               	xorwf	postinc2,w,c
 10038  003084  10DE               	iorwf	postinc2,w,c
 10039  003086  A4D8               	btfss	status,2,c
 10040  003088  EF48  F018         	goto	u5161
 10041  00308C  EF4A  F018         	goto	u5160
 10042  003090                     u5161:
 10043  003090  EF62  F018         	goto	l5180
 10044  003094                     u5160:
 10045  003094                     
 10046                           ; BSR set to: 1
 10047  003094  C058  F026         	movff	goback@mL,reverse_square@mL
 10048  003098  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10049  00309C  C05A  F028         	movff	goback@mR,reverse_square@mR
 10050  0030A0  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10051  0030A4  ECB7  F02A         	call	_reverse_square	;wreg free
 10052  0030A8  C058  F020         	movff	goback@mL,turnLeft@mL
 10053  0030AC  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10054  0030B0  C05A  F022         	movff	goback@mR,turnLeft@mR
 10055  0030B4  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10056  0030B8  0E5A               	movlw	90
 10057  0030BA  6E24               	movwf	turnLeft@angle_left^0,c
 10058  0030BC  ECE4  F022         	call	_turnLeft	;wreg free
 10059  0030C0  0101               	movlb	1	; () banked
 10060  0030C2  0763               	decf	_array_index& (0+255),f,b
 10061  0030C4                     l5180:
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;movement.c: 129:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 10065  0030C4  5163               	movf	_array_index& (0+255),w,b
 10066  0030C6  0D02               	mullw	2
 10067  0030C8  0E00               	movlw	low _memory
 10068  0030CA  24F3               	addwf	243,w,c
 10069  0030CC  6ED9               	movwf	fsr2l,c
 10070  0030CE  0E01               	movlw	high _memory
 10071  0030D0  20F4               	addwfc	prodh,w,c
 10072  0030D2  6EDA               	movwf	fsr2h,c
 10073  0030D4  0E05               	movlw	5
 10074  0030D6  18DE               	xorwf	postinc2,w,c
 10075  0030D8  10DE               	iorwf	postinc2,w,c
 10076  0030DA  A4D8               	btfss	status,2,c
 10077  0030DC  EF72  F018         	goto	u5171
 10078  0030E0  EF74  F018         	goto	u5170
 10079  0030E4                     u5171:
 10080  0030E4  EF8C  F018         	goto	l5186
 10081  0030E8                     u5170:
 10082  0030E8                     
 10083                           ; BSR set to: 1
 10084  0030E8  C058  F026         	movff	goback@mL,reverse_square@mL
 10085  0030EC  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10086  0030F0  C05A  F028         	movff	goback@mR,reverse_square@mR
 10087  0030F4  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10088  0030F8  ECB7  F02A         	call	_reverse_square	;wreg free
 10089  0030FC  C058  F020         	movff	goback@mL,turnRight@mL
 10090  003100  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10091  003104  C05A  F022         	movff	goback@mR,turnRight@mR
 10092  003108  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10093  00310C  0E5A               	movlw	90
 10094  00310E  6E24               	movwf	turnRight@angle_right^0,c
 10095  003110  EC4E  F022         	call	_turnRight	;wreg free
 10096  003114  0101               	movlb	1	; () banked
 10097  003116  0763               	decf	_array_index& (0+255),f,b
 10098  003118                     l5186:
 10099                           
 10100                           ; BSR set to: 1
 10101                           ;movement.c: 130:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 10102  003118  5163               	movf	_array_index& (0+255),w,b
 10103  00311A  0D02               	mullw	2
 10104  00311C  0E00               	movlw	low _memory
 10105  00311E  24F3               	addwf	243,w,c
 10106  003120  6ED9               	movwf	fsr2l,c
 10107  003122  0E01               	movlw	high _memory
 10108  003124  20F4               	addwfc	prodh,w,c
 10109  003126  6EDA               	movwf	fsr2h,c
 10110  003128  0E06               	movlw	6
 10111  00312A  18DE               	xorwf	postinc2,w,c
 10112  00312C  10DE               	iorwf	postinc2,w,c
 10113  00312E  A4D8               	btfss	status,2,c
 10114  003130  EF9C  F018         	goto	u5181
 10115  003134  EF9E  F018         	goto	u5180
 10116  003138                     u5181:
 10117  003138  EFAC  F018         	goto	l5192
 10118  00313C                     u5180:
 10119  00313C                     
 10120                           ; BSR set to: 1
 10121  00313C  C058  F020         	movff	goback@mL,turnLeft@mL
 10122  003140  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10123  003144  C05A  F022         	movff	goback@mR,turnLeft@mR
 10124  003148  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10125  00314C  0E87               	movlw	135
 10126  00314E  6E24               	movwf	turnLeft@angle_left^0,c
 10127  003150  ECE4  F022         	call	_turnLeft	;wreg free
 10128  003154  0101               	movlb	1	; () banked
 10129  003156  0763               	decf	_array_index& (0+255),f,b
 10130  003158                     l5192:
 10131                           
 10132                           ; BSR set to: 1
 10133                           ;movement.c: 131:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 10134  003158  5163               	movf	_array_index& (0+255),w,b
 10135  00315A  0D02               	mullw	2
 10136  00315C  0E00               	movlw	low _memory
 10137  00315E  24F3               	addwf	243,w,c
 10138  003160  6ED9               	movwf	fsr2l,c
 10139  003162  0E01               	movlw	high _memory
 10140  003164  20F4               	addwfc	prodh,w,c
 10141  003166  6EDA               	movwf	fsr2h,c
 10142  003168  0E07               	movlw	7
 10143  00316A  18DE               	xorwf	postinc2,w,c
 10144  00316C  10DE               	iorwf	postinc2,w,c
 10145  00316E  A4D8               	btfss	status,2,c
 10146  003170  EFBC  F018         	goto	u5191
 10147  003174  EFBE  F018         	goto	u5190
 10148  003178                     u5191:
 10149  003178  EF80  F017         	goto	l5130
 10150  00317C                     u5190:
 10151  00317C                     
 10152                           ; BSR set to: 1
 10153  00317C  C058  F020         	movff	goback@mL,turnRight@mL
 10154  003180  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10155  003184  C05A  F022         	movff	goback@mR,turnRight@mR
 10156  003188  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10157  00318C  0E79               	movlw	121
 10158  00318E  6E24               	movwf	turnRight@angle_right^0,c
 10159  003190  EC4E  F022         	call	_turnRight	;wreg free
 10160  003194  EF7E  F017         	goto	l5128
 10161  003198                     l5198:
 10162  003198  C058  F01A         	movff	goback@mL,stop@mL
 10163  00319C  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10164  0031A0  C05A  F01C         	movff	goback@mR,stop@mR
 10165  0031A4  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10166  0031A8  EC6A  F027         	call	_stop	;wreg free
 10167  0031AC  EFCC  F018         	goto	l5198
 10168  0031B0  0012               	return		;funcret
 10169  0031B2                     __end_of_goback:
 10170                           	callstack 0
 10171                           
 10172 ;; *************** function _turnRight *****************
 10173 ;; Defined at:
 10174 ;;		line 123 in file "dc_motor.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10177 ;;		 -> main@motorL(10), 
 10178 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10179 ;;		 -> main@motorR(10), 
 10180 ;;  angle_right     1   35[COMRAM] unsigned char 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;  i               2   41[COMRAM] unsigned int 
 10183 ;;  i               2   39[COMRAM] unsigned int 
 10184 ;;  delay           2   43[COMRAM] unsigned int 
 10185 ;;  delay_180       2   37[COMRAM] unsigned int 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10195 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10198 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10199 ;;Total ram usage:       14 bytes
 10200 ;; Hardware stack levels used: 1
 10201 ;; Hardware stack levels required when called: 4
 10202 ;; This function calls:
 10203 ;;		_setMotorPWM
 10204 ;;		_stop
 10205 ;; This function is called by:
 10206 ;;		_action
 10207 ;;		_goback
 10208 ;;		_test_action
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           	psect	text48
 10213  00449C                     __ptext48:
 10214                           	callstack 0
 10215  00449C                     _turnRight:
 10216                           	callstack 25
 10217  00449C                     
 10218                           ;dc_motor.c: 123: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 124: {;dc_motor.c: 125:     mL->direction=1;
 10219  00449C  EE20 F001          	lfsr	2,1
 10220  0044A0  5020               	movf	turnRight@mL^0,w,c
 10221  0044A2  26D9               	addwf	fsr2l,f,c
 10222  0044A4  5021               	movf	(turnRight@mL+1)^0,w,c
 10223  0044A6  22DA               	addwfc	fsr2h,f,c
 10224  0044A8  0E01               	movlw	1
 10225  0044AA  6EDF               	movwf	indf2,c
 10226                           
 10227                           ;dc_motor.c: 126:     mR->direction=1;
 10228  0044AC  EE20 F001          	lfsr	2,1
 10229  0044B0  5022               	movf	turnRight@mR^0,w,c
 10230  0044B2  26D9               	addwf	fsr2l,f,c
 10231  0044B4  5023               	movf	(turnRight@mR+1)^0,w,c
 10232  0044B6  22DA               	addwfc	fsr2h,f,c
 10233  0044B8  0E01               	movlw	1
 10234  0044BA  6EDF               	movwf	indf2,c
 10235                           
 10236                           ;dc_motor.c: 127:     while (mL->power <25){
 10237  0044BC  EF7F  F022         	goto	l4566
 10238  0044C0                     l4558:
 10239                           
 10240                           ;dc_motor.c: 128:         mL->power += 5;
 10241  0044C0  C020  FFD9         	movff	turnRight@mL,fsr2l
 10242  0044C4  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10243  0044C8  0E05               	movlw	5
 10244  0044CA  26DF               	addwf	indf2,f,c
 10245                           
 10246                           ;dc_motor.c: 129:         mR->power = 0;
 10247  0044CC  C022  FFD9         	movff	turnRight@mR,fsr2l
 10248  0044D0  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10249  0044D4  0E00               	movlw	0
 10250  0044D6  6EDF               	movwf	indf2,c
 10251  0044D8                     
 10252                           ;dc_motor.c: 130:         setMotorPWM(mL);
 10253  0044D8  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10254  0044DC  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10255  0044E0  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10256  0044E4                     
 10257                           ;dc_motor.c: 131:         setMotorPWM(mR);
 10258  0044E4  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10259  0044E8  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10260  0044EC  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10261  0044F0                     
 10262                           ;dc_motor.c: 132:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10263  0044F0  0ED0               	movlw	208
 10264  0044F2  6E25               	movwf	??_turnRight^0,c
 10265  0044F4  0ECA               	movlw	202
 10266  0044F6                     u5917:
 10267  0044F6  2EE8               	decfsz	wreg,f,c
 10268  0044F8  D7FE               	bra	u5917
 10269  0044FA  2E25               	decfsz	??_turnRight^0,f,c
 10270  0044FC  D7FC               	bra	u5917
 10271  0044FE                     l4566:
 10272                           
 10273                           ;dc_motor.c: 127:     while (mL->power <25){
 10274  0044FE  C020  FFD9         	movff	turnRight@mL,fsr2l
 10275  004502  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10276  004506  0E18               	movlw	24
 10277  004508  64DF               	cpfsgt	indf2,c
 10278  00450A  EF89  F022         	goto	u4551
 10279  00450E  EF8B  F022         	goto	u4550
 10280  004512                     u4551:
 10281  004512  EF60  F022         	goto	l4558
 10282  004516                     u4550:
 10283  004516                     
 10284                           ;dc_motor.c: 134:     unsigned int delay = angle_right * SENSITIVITY;
 10285  004516  5024               	movf	turnRight@angle_right^0,w,c
 10286  004518  0101               	movlb	1	; () banked
 10287  00451A  03CF               	mulwf	_SENSITIVITY& (0+255),b
 10288  00451C  CFF3 F02C          	movff	prodl,turnRight@delay
 10289  004520  CFF4 F02D          	movff	prodh,turnRight@delay+1
 10290  004524                     
 10291                           ; BSR set to: 1
 10292                           ;dc_motor.c: 136:     unsigned int delay_180 = delay + CALIBRATION_180;
 10293  004524  0E14               	movlw	20
 10294  004526  242C               	addwf	turnRight@delay^0,w,c
 10295  004528  6E26               	movwf	turnRight@delay_180^0,c
 10296  00452A  0E00               	movlw	0
 10297  00452C  202D               	addwfc	(turnRight@delay+1)^0,w,c
 10298  00452E  6E27               	movwf	(turnRight@delay_180+1)^0,c
 10299  004530                     
 10300                           ; BSR set to: 1
 10301                           ;dc_motor.c: 137:     if (angle_right == 180){
 10302  004530  0EB4               	movlw	180
 10303  004532  1824               	xorwf	turnRight@angle_right^0,w,c
 10304  004534  A4D8               	btfss	status,2,c
 10305  004536  EF9F  F022         	goto	u4561
 10306  00453A  EFA1  F022         	goto	u4560
 10307  00453E                     u4561:
 10308  00453E  EFBE  F022         	goto	l4580
 10309  004542                     u4560:
 10310  004542                     
 10311                           ; BSR set to: 1
 10312                           ;dc_motor.c: 138:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10313  004542  0E00               	movlw	0
 10314  004544  6E29               	movwf	(turnRight@i+1)^0,c
 10315  004546  0E00               	movlw	0
 10316  004548  6E28               	movwf	turnRight@i^0,c
 10317  00454A  EFB1  F022         	goto	l326
 10318  00454E                     l4576:
 10319  00454E  0E15               	movlw	21
 10320  004550  6E25               	movwf	??_turnRight^0,c
 10321  004552  0EC6               	movlw	198
 10322  004554                     u5927:
 10323  004554  2EE8               	decfsz	wreg,f,c
 10324  004556  D7FE               	bra	u5927
 10325  004558  2E25               	decfsz	??_turnRight^0,f,c
 10326  00455A  D7FC               	bra	u5927
 10327  00455C  D000               	nop2	
 10328  00455E  4A28               	infsnz	turnRight@i^0,f,c
 10329  004560  2A29               	incf	(turnRight@i+1)^0,f,c
 10330  004562                     l326:
 10331  004562  5026               	movf	turnRight@delay_180^0,w,c
 10332  004564  5C28               	subwf	turnRight@i^0,w,c
 10333  004566  5027               	movf	(turnRight@delay_180+1)^0,w,c
 10334  004568  5829               	subwfb	(turnRight@i+1)^0,w,c
 10335  00456A  A0D8               	btfss	status,0,c
 10336  00456C  EFBA  F022         	goto	u4571
 10337  004570  EFBC  F022         	goto	u4570
 10338  004574                     u4571:
 10339  004574  EFA7  F022         	goto	l4576
 10340  004578                     u4570:
 10341  004578  EFD9  F022         	goto	l4586
 10342  00457C                     l4580:
 10343                           
 10344                           ; BSR set to: 1
 10345                           ;dc_motor.c: 144:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10346  00457C  0E00               	movlw	0
 10347  00457E  6E2B               	movwf	(turnRight@i_1356+1)^0,c
 10348  004580  0E00               	movlw	0
 10349  004582  6E2A               	movwf	turnRight@i_1356^0,c
 10350  004584  EFCE  F022         	goto	l330
 10351  004588                     l4582:
 10352  004588  0E15               	movlw	21
 10353  00458A  6E25               	movwf	??_turnRight^0,c
 10354  00458C  0EC6               	movlw	198
 10355  00458E                     u5937:
 10356  00458E  2EE8               	decfsz	wreg,f,c
 10357  004590  D7FE               	bra	u5937
 10358  004592  2E25               	decfsz	??_turnRight^0,f,c
 10359  004594  D7FC               	bra	u5937
 10360  004596  D000               	nop2	
 10361  004598  4A2A               	infsnz	turnRight@i_1356^0,f,c
 10362  00459A  2A2B               	incf	(turnRight@i_1356+1)^0,f,c
 10363  00459C                     l330:
 10364  00459C  502C               	movf	turnRight@delay^0,w,c
 10365  00459E  5C2A               	subwf	turnRight@i_1356^0,w,c
 10366  0045A0  502D               	movf	(turnRight@delay+1)^0,w,c
 10367  0045A2  582B               	subwfb	(turnRight@i_1356+1)^0,w,c
 10368  0045A4  A0D8               	btfss	status,0,c
 10369  0045A6  EFD7  F022         	goto	u4581
 10370  0045AA  EFD9  F022         	goto	u4580
 10371  0045AE                     u4581:
 10372  0045AE  EFC4  F022         	goto	l4582
 10373  0045B2                     u4580:
 10374  0045B2                     l4586:
 10375                           
 10376                           ;dc_motor.c: 146:     stop(mL,mR);
 10377  0045B2  C020  F01A         	movff	turnRight@mL,stop@mL
 10378  0045B6  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10379  0045BA  C022  F01C         	movff	turnRight@mR,stop@mR
 10380  0045BE  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10381  0045C2  EC6A  F027         	call	_stop	;wreg free
 10382  0045C6  0012               	return		;funcret
 10383  0045C8                     __end_of_turnRight:
 10384                           	callstack 0
 10385                           
 10386 ;; *************** function _turnLeft *****************
 10387 ;; Defined at:
 10388 ;;		line 96 in file "dc_motor.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10391 ;;		 -> main@motorL(10), 
 10392 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10393 ;;		 -> main@motorR(10), 
 10394 ;;  angle_left      1   35[COMRAM] unsigned char 
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;  i               2   41[COMRAM] unsigned int 
 10397 ;;  i               2   39[COMRAM] unsigned int 
 10398 ;;  delay           2   43[COMRAM] unsigned int 
 10399 ;;  delay_180       2   37[COMRAM] unsigned int 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10409 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10410 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10412 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10413 ;;Total ram usage:       14 bytes
 10414 ;; Hardware stack levels used: 1
 10415 ;; Hardware stack levels required when called: 4
 10416 ;; This function calls:
 10417 ;;		_setMotorPWM
 10418 ;;		_stop
 10419 ;; This function is called by:
 10420 ;;		_action
 10421 ;;		_goback
 10422 ;;		_test_action
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text49
 10427  0045C8                     __ptext49:
 10428                           	callstack 0
 10429  0045C8                     _turnLeft:
 10430                           	callstack 25
 10431  0045C8                     
 10432                           ;dc_motor.c: 96: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 97: {;dc_motor.c: 98:       mL->direction=1;
 10433  0045C8  EE20 F001          	lfsr	2,1
 10434  0045CC  5020               	movf	turnLeft@mL^0,w,c
 10435  0045CE  26D9               	addwf	fsr2l,f,c
 10436  0045D0  5021               	movf	(turnLeft@mL+1)^0,w,c
 10437  0045D2  22DA               	addwfc	fsr2h,f,c
 10438  0045D4  0E01               	movlw	1
 10439  0045D6  6EDF               	movwf	indf2,c
 10440                           
 10441                           ;dc_motor.c: 99:       mR->direction=1;
 10442  0045D8  EE20 F001          	lfsr	2,1
 10443  0045DC  5022               	movf	turnLeft@mR^0,w,c
 10444  0045DE  26D9               	addwf	fsr2l,f,c
 10445  0045E0  5023               	movf	(turnLeft@mR+1)^0,w,c
 10446  0045E2  22DA               	addwfc	fsr2h,f,c
 10447  0045E4  0E01               	movlw	1
 10448  0045E6  6EDF               	movwf	indf2,c
 10449                           
 10450                           ;dc_motor.c: 100:       while (mR->power <25){
 10451  0045E8  EF15  F023         	goto	l4534
 10452  0045EC                     l4526:
 10453                           
 10454                           ;dc_motor.c: 101:         mR->power += 5;
 10455  0045EC  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10456  0045F0  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10457  0045F4  0E05               	movlw	5
 10458  0045F6  26DF               	addwf	indf2,f,c
 10459                           
 10460                           ;dc_motor.c: 102:         mL->power = 0;
 10461  0045F8  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10462  0045FC  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10463  004600  0E00               	movlw	0
 10464  004602  6EDF               	movwf	indf2,c
 10465  004604                     
 10466                           ;dc_motor.c: 103:         setMotorPWM(mL);
 10467  004604  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10468  004608  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10469  00460C  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10470  004610                     
 10471                           ;dc_motor.c: 104:         setMotorPWM(mR);
 10472  004610  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10473  004614  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10474  004618  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10475  00461C                     
 10476                           ;dc_motor.c: 105:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10477  00461C  0ED0               	movlw	208
 10478  00461E  6E25               	movwf	??_turnLeft^0,c
 10479  004620  0ECA               	movlw	202
 10480  004622                     u5947:
 10481  004622  2EE8               	decfsz	wreg,f,c
 10482  004624  D7FE               	bra	u5947
 10483  004626  2E25               	decfsz	??_turnLeft^0,f,c
 10484  004628  D7FC               	bra	u5947
 10485  00462A                     l4534:
 10486                           
 10487                           ;dc_motor.c: 100:       while (mR->power <25){
 10488  00462A  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10489  00462E  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10490  004632  0E18               	movlw	24
 10491  004634  64DF               	cpfsgt	indf2,c
 10492  004636  EF1F  F023         	goto	u4511
 10493  00463A  EF21  F023         	goto	u4510
 10494  00463E                     u4511:
 10495  00463E  EFF6  F022         	goto	l4526
 10496  004642                     u4510:
 10497  004642                     
 10498                           ;dc_motor.c: 107:     unsigned int delay = angle_left * SENSITIVITY;
 10499  004642  5024               	movf	turnLeft@angle_left^0,w,c
 10500  004644  0101               	movlb	1	; () banked
 10501  004646  03CF               	mulwf	_SENSITIVITY& (0+255),b
 10502  004648  CFF3 F02C          	movff	prodl,turnLeft@delay
 10503  00464C  CFF4 F02D          	movff	prodh,turnLeft@delay+1
 10504  004650                     
 10505                           ; BSR set to: 1
 10506                           ;dc_motor.c: 109:     unsigned int delay_180 = delay + CALIBRATION_180;
 10507  004650  0E14               	movlw	20
 10508  004652  242C               	addwf	turnLeft@delay^0,w,c
 10509  004654  6E26               	movwf	turnLeft@delay_180^0,c
 10510  004656  0E00               	movlw	0
 10511  004658  202D               	addwfc	(turnLeft@delay+1)^0,w,c
 10512  00465A  6E27               	movwf	(turnLeft@delay_180+1)^0,c
 10513  00465C                     
 10514                           ; BSR set to: 1
 10515                           ;dc_motor.c: 110:     if (angle_left == 180){
 10516  00465C  0EB4               	movlw	180
 10517  00465E  1824               	xorwf	turnLeft@angle_left^0,w,c
 10518  004660  A4D8               	btfss	status,2,c
 10519  004662  EF35  F023         	goto	u4521
 10520  004666  EF37  F023         	goto	u4520
 10521  00466A                     u4521:
 10522  00466A  EF54  F023         	goto	l4548
 10523  00466E                     u4520:
 10524  00466E                     
 10525                           ; BSR set to: 1
 10526                           ;dc_motor.c: 111:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10527  00466E  0E00               	movlw	0
 10528  004670  6E29               	movwf	(turnLeft@i+1)^0,c
 10529  004672  0E00               	movlw	0
 10530  004674  6E28               	movwf	turnLeft@i^0,c
 10531  004676  EF47  F023         	goto	l312
 10532  00467A                     l4544:
 10533  00467A  0E15               	movlw	21
 10534  00467C  6E25               	movwf	??_turnLeft^0,c
 10535  00467E  0EC6               	movlw	198
 10536  004680                     u5957:
 10537  004680  2EE8               	decfsz	wreg,f,c
 10538  004682  D7FE               	bra	u5957
 10539  004684  2E25               	decfsz	??_turnLeft^0,f,c
 10540  004686  D7FC               	bra	u5957
 10541  004688  D000               	nop2	
 10542  00468A  4A28               	infsnz	turnLeft@i^0,f,c
 10543  00468C  2A29               	incf	(turnLeft@i+1)^0,f,c
 10544  00468E                     l312:
 10545  00468E  5026               	movf	turnLeft@delay_180^0,w,c
 10546  004690  5C28               	subwf	turnLeft@i^0,w,c
 10547  004692  5027               	movf	(turnLeft@delay_180+1)^0,w,c
 10548  004694  5829               	subwfb	(turnLeft@i+1)^0,w,c
 10549  004696  A0D8               	btfss	status,0,c
 10550  004698  EF50  F023         	goto	u4531
 10551  00469C  EF52  F023         	goto	u4530
 10552  0046A0                     u4531:
 10553  0046A0  EF3D  F023         	goto	l4544
 10554  0046A4                     u4530:
 10555  0046A4  EF6F  F023         	goto	l4554
 10556  0046A8                     l4548:
 10557                           
 10558                           ; BSR set to: 1
 10559                           ;dc_motor.c: 117:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10560  0046A8  0E00               	movlw	0
 10561  0046AA  6E2B               	movwf	(turnLeft@i_1333+1)^0,c
 10562  0046AC  0E00               	movlw	0
 10563  0046AE  6E2A               	movwf	turnLeft@i_1333^0,c
 10564  0046B0  EF64  F023         	goto	l316
 10565  0046B4                     l4550:
 10566  0046B4  0E15               	movlw	21
 10567  0046B6  6E25               	movwf	??_turnLeft^0,c
 10568  0046B8  0EC6               	movlw	198
 10569  0046BA                     u5967:
 10570  0046BA  2EE8               	decfsz	wreg,f,c
 10571  0046BC  D7FE               	bra	u5967
 10572  0046BE  2E25               	decfsz	??_turnLeft^0,f,c
 10573  0046C0  D7FC               	bra	u5967
 10574  0046C2  D000               	nop2	
 10575  0046C4  4A2A               	infsnz	turnLeft@i_1333^0,f,c
 10576  0046C6  2A2B               	incf	(turnLeft@i_1333+1)^0,f,c
 10577  0046C8                     l316:
 10578  0046C8  502C               	movf	turnLeft@delay^0,w,c
 10579  0046CA  5C2A               	subwf	turnLeft@i_1333^0,w,c
 10580  0046CC  502D               	movf	(turnLeft@delay+1)^0,w,c
 10581  0046CE  582B               	subwfb	(turnLeft@i_1333+1)^0,w,c
 10582  0046D0  A0D8               	btfss	status,0,c
 10583  0046D2  EF6D  F023         	goto	u4541
 10584  0046D6  EF6F  F023         	goto	u4540
 10585  0046DA                     u4541:
 10586  0046DA  EF5A  F023         	goto	l4550
 10587  0046DE                     u4540:
 10588  0046DE                     l4554:
 10589                           
 10590                           ;dc_motor.c: 119:     stop(mL,mR);
 10591  0046DE  C020  F01A         	movff	turnLeft@mL,stop@mL
 10592  0046E2  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 10593  0046E6  C022  F01C         	movff	turnLeft@mR,stop@mR
 10594  0046EA  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 10595  0046EE  EC6A  F027         	call	_stop	;wreg free
 10596  0046F2  0012               	return		;funcret
 10597  0046F4                     __end_of_turnLeft:
 10598                           	callstack 0
 10599                           
 10600 ;; *************** function _reverse_square *****************
 10601 ;; Defined at:
 10602 ;;		line 190 in file "dc_motor.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10605 ;;		 -> main@motorL(10), 
 10606 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10607 ;;		 -> main@motorR(10), 
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10623 ;;Total ram usage:        6 bytes
 10624 ;; Hardware stack levels used: 1
 10625 ;; Hardware stack levels required when called: 5
 10626 ;; This function calls:
 10627 ;;		_fullSpeedBack
 10628 ;;		_stop
 10629 ;; This function is called by:
 10630 ;;		_action
 10631 ;;		_goback
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           	psect	text50
 10636  00556E                     __ptext50:
 10637                           	callstack 0
 10638  00556E                     _reverse_square:
 10639                           	callstack 24
 10640  00556E                     
 10641                           ;dc_motor.c: 190: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 191: { fullSpeedBack(mL, mR);
 10642  00556E  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 10643  005572  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 10644  005576  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 10645  00557A  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 10646  00557E  EC0A  F027         	call	_fullSpeedBack	;wreg free
 10647  005582                     
 10648                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10649  005582  0E52               	movlw	82
 10650  005584  6E2B               	movwf	(??_reverse_square+1)^0,c
 10651  005586  0E2B               	movlw	43
 10652  005588  6E2A               	movwf	??_reverse_square^0,c
 10653  00558A  0E00               	movlw	0
 10654  00558C                     u5977:
 10655  00558C  2EE8               	decfsz	wreg,f,c
 10656  00558E  D7FE               	bra	u5977
 10657  005590  2E2A               	decfsz	??_reverse_square^0,f,c
 10658  005592  D7FC               	bra	u5977
 10659  005594  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 10660  005596  D7FA               	bra	u5977
 10661  005598  D000               	nop2	
 10662  00559A                     
 10663                           ;dc_motor.c: 193:     stop(mL,mR);
 10664  00559A  C026  F01A         	movff	reverse_square@mL,stop@mL
 10665  00559E  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 10666  0055A2  C028  F01C         	movff	reverse_square@mR,stop@mR
 10667  0055A6  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 10668  0055AA  EC6A  F027         	call	_stop	;wreg free
 10669  0055AE  0012               	return		;funcret
 10670  0055B0                     __end_of_reverse_square:
 10671                           	callstack 0
 10672                           
 10673 ;; *************** function _fullSpeedBack *****************
 10674 ;; Defined at:
 10675 ;;		line 169 in file "dc_motor.c"
 10676 ;; Parameters:    Size  Location     Type
 10677 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10678 ;;		 -> main@motorL(10), 
 10679 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10680 ;;		 -> main@motorR(10), 
 10681 ;; Auto vars:     Size  Location     Type
 10682 ;;		None
 10683 ;; Return value:  Size  Location     Type
 10684 ;;                  1    wreg      void 
 10685 ;; Registers used:
 10686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10687 ;; Tracked objects:
 10688 ;;		On entry : 0/0
 10689 ;;		On exit  : 0/0
 10690 ;;		Unchanged: 0/0
 10691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10695 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10696 ;;Total ram usage:        6 bytes
 10697 ;; Hardware stack levels used: 1
 10698 ;; Hardware stack levels required when called: 4
 10699 ;; This function calls:
 10700 ;;		_setMotorPWM
 10701 ;;		_stop
 10702 ;; This function is called by:
 10703 ;;		_short_reverse
 10704 ;;		_reverse_square
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text51
 10709  004E14                     __ptext51:
 10710                           	callstack 0
 10711  004E14                     _fullSpeedBack:
 10712                           	callstack 24
 10713  004E14                     
 10714                           ;dc_motor.c: 169: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 170: {;dc_motor.c: 171:     mL->direction=0;
 10715  004E14  EE20 F001          	lfsr	2,1
 10716  004E18  5020               	movf	fullSpeedBack@mL^0,w,c
 10717  004E1A  26D9               	addwf	fsr2l,f,c
 10718  004E1C  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 10719  004E1E  22DA               	addwfc	fsr2h,f,c
 10720  004E20  0E00               	movlw	0
 10721  004E22  6EDF               	movwf	indf2,c
 10722                           
 10723                           ;dc_motor.c: 172:     mR->direction=0;
 10724  004E24  EE20 F001          	lfsr	2,1
 10725  004E28  5022               	movf	fullSpeedBack@mR^0,w,c
 10726  004E2A  26D9               	addwf	fsr2l,f,c
 10727  004E2C  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 10728  004E2E  22DA               	addwfc	fsr2h,f,c
 10729  004E30  0E00               	movlw	0
 10730  004E32  6EDF               	movwf	indf2,c
 10731                           
 10732                           ;dc_motor.c: 173:     while (mL->power<50 && mR->power<50){
 10733  004E34  EF3B  F027         	goto	l4350
 10734  004E38                     l4342:
 10735                           
 10736                           ;dc_motor.c: 174:         mL->power += 10;
 10737  004E38  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10738  004E3C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10739  004E40  0E0A               	movlw	10
 10740  004E42  26DF               	addwf	indf2,f,c
 10741                           
 10742                           ;dc_motor.c: 175:         mR->power += 10;
 10743  004E44  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10744  004E48  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10745  004E4C  0E0A               	movlw	10
 10746  004E4E  26DF               	addwf	indf2,f,c
 10747  004E50                     
 10748                           ;dc_motor.c: 176:         setMotorPWM(mL);
 10749  004E50  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 10750  004E54  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10751  004E58  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10752  004E5C                     
 10753                           ;dc_motor.c: 177:         setMotorPWM(mR);
 10754  004E5C  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 10755  004E60  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10756  004E64  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10757  004E68                     
 10758                           ;dc_motor.c: 178:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10759  004E68  0ED0               	movlw	208
 10760  004E6A  6E24               	movwf	??_fullSpeedBack^0,c
 10761  004E6C  0ECA               	movlw	202
 10762  004E6E                     u5987:
 10763  004E6E  2EE8               	decfsz	wreg,f,c
 10764  004E70  D7FE               	bra	u5987
 10765  004E72  2E24               	decfsz	??_fullSpeedBack^0,f,c
 10766  004E74  D7FC               	bra	u5987
 10767  004E76                     l4350:
 10768                           
 10769                           ;dc_motor.c: 173:     while (mL->power<50 && mR->power<50){
 10770  004E76  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10771  004E7A  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10772  004E7E  0E32               	movlw	50
 10773  004E80  60DF               	cpfslt	indf2,c
 10774  004E82  EF45  F027         	goto	u4051
 10775  004E86  EF47  F027         	goto	u4050
 10776  004E8A                     u4051:
 10777  004E8A  EF53  F027         	goto	l4354
 10778  004E8E                     u4050:
 10779  004E8E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10780  004E92  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10781  004E96  0E31               	movlw	49
 10782  004E98  64DF               	cpfsgt	indf2,c
 10783  004E9A  EF51  F027         	goto	u4061
 10784  004E9E  EF53  F027         	goto	u4060
 10785  004EA2                     u4061:
 10786  004EA2  EF1C  F027         	goto	l4342
 10787  004EA6                     u4060:
 10788  004EA6                     l4354:
 10789                           
 10790                           ;dc_motor.c: 180:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10791  004EA6  0E29               	movlw	41
 10792  004EA8  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 10793  004EAA  0E96               	movlw	150
 10794  004EAC  6E24               	movwf	??_fullSpeedBack^0,c
 10795  004EAE  0E7F               	movlw	127
 10796  004EB0                     u5997:
 10797  004EB0  2EE8               	decfsz	wreg,f,c
 10798  004EB2  D7FE               	bra	u5997
 10799  004EB4  2E24               	decfsz	??_fullSpeedBack^0,f,c
 10800  004EB6  D7FC               	bra	u5997
 10801  004EB8  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10802  004EBA  D7FA               	bra	u5997
 10803  004EBC  F000               	nop	
 10804  004EBE                     
 10805                           ;dc_motor.c: 181:     stop(mL,mR);
 10806  004EBE  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 10807  004EC2  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 10808  004EC6  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 10809  004ECA  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 10810  004ECE  EC6A  F027         	call	_stop	;wreg free
 10811  004ED2  0012               	return		;funcret
 10812  004ED4                     __end_of_fullSpeedBack:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _stop *****************
 10816 ;; Defined at:
 10817 ;;		line 83 in file "dc_motor.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10820 ;;		 -> main@motorL(10), 
 10821 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10822 ;;		 -> main@motorR(10), 
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10837 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10838 ;;Total ram usage:        6 bytes
 10839 ;; Hardware stack levels used: 1
 10840 ;; Hardware stack levels required when called: 3
 10841 ;; This function calls:
 10842 ;;		_setMotorPWM
 10843 ;; This function is called by:
 10844 ;;		_turnLeft
 10845 ;;		_turnRight
 10846 ;;		_fullSpeedBack
 10847 ;;		_short_reverse
 10848 ;;		_reverse_square
 10849 ;;		_main
 10850 ;;		_goback
 10851 ;;		_test_function
 10852 ;;		_fullSpeedAhead_test
 10853 ;;		_short_burst
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text52
 10858  004ED4                     __ptext52:
 10859                           	callstack 0
 10860  004ED4                     _stop:
 10861                           	callstack 26
 10862  004ED4                     
 10863                           ;dc_motor.c: 83: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 84: {;d
      +                          c_motor.c: 85:     while (mL->power >0 || mR->power >0){
 10864  004ED4  EFA3  F027         	goto	l4112
 10865  004ED8                     l4098:
 10866                           
 10867                           ;dc_motor.c: 86:         if (mL->power !=0){mL->power -= 5;}
 10868  004ED8  C01A  FFD9         	movff	stop@mL,fsr2l
 10869  004EDC  C01B  FFDA         	movff	stop@mL+1,fsr2h
 10870  004EE0  50DF               	movf	indf2,w,c
 10871  004EE2  B4D8               	btfsc	status,2,c
 10872  004EE4  EF76  F027         	goto	u3731
 10873  004EE8  EF78  F027         	goto	u3730
 10874  004EEC                     u3731:
 10875  004EEC  EF7E  F027         	goto	l4102
 10876  004EF0                     u3730:
 10877  004EF0  C01A  FFD9         	movff	stop@mL,fsr2l
 10878  004EF4  C01B  FFDA         	movff	stop@mL+1,fsr2h
 10879  004EF8  0E05               	movlw	5
 10880  004EFA  5EDF               	subwf	indf2,f,c
 10881  004EFC                     l4102:
 10882                           
 10883                           ;dc_motor.c: 87:         if (mR->power !=0){mR->power -= 5;}
 10884  004EFC  C01C  FFD9         	movff	stop@mR,fsr2l
 10885  004F00  C01D  FFDA         	movff	stop@mR+1,fsr2h
 10886  004F04  50DF               	movf	indf2,w,c
 10887  004F06  B4D8               	btfsc	status,2,c
 10888  004F08  EF88  F027         	goto	u3741
 10889  004F0C  EF8A  F027         	goto	u3740
 10890  004F10                     u3741:
 10891  004F10  EF90  F027         	goto	l4106
 10892  004F14                     u3740:
 10893  004F14  C01C  FFD9         	movff	stop@mR,fsr2l
 10894  004F18  C01D  FFDA         	movff	stop@mR+1,fsr2h
 10895  004F1C  0E05               	movlw	5
 10896  004F1E  5EDF               	subwf	indf2,f,c
 10897  004F20                     l4106:
 10898                           
 10899                           ;dc_motor.c: 88:         setMotorPWM(mL);
 10900  004F20  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 10901  004F24  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 10902  004F28  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10903  004F2C                     
 10904                           ;dc_motor.c: 89:         setMotorPWM(mR);
 10905  004F2C  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 10906  004F30  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 10907  004F34  EC9A  F01C         	call	_setMotorPWM	;wreg free
 10908  004F38                     
 10909                           ;dc_motor.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10910  004F38  0ED0               	movlw	208
 10911  004F3A  6E1E               	movwf	??_stop^0,c
 10912  004F3C  0ECA               	movlw	202
 10913  004F3E                     u6007:
 10914  004F3E  2EE8               	decfsz	wreg,f,c
 10915  004F40  D7FE               	bra	u6007
 10916  004F42  2E1E               	decfsz	??_stop^0,f,c
 10917  004F44  D7FC               	bra	u6007
 10918  004F46                     l4112:
 10919                           
 10920                           ;dc_motor.c: 85:     while (mL->power >0 || mR->power >0){
 10921  004F46  C01A  FFD9         	movff	stop@mL,fsr2l
 10922  004F4A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 10923  004F4E  50DF               	movf	indf2,w,c
 10924  004F50  A4D8               	btfss	status,2,c
 10925  004F52  EFAD  F027         	goto	u3751
 10926  004F56  EFAF  F027         	goto	u3750
 10927  004F5A                     u3751:
 10928  004F5A  EF6C  F027         	goto	l4098
 10929  004F5E                     u3750:
 10930  004F5E  C01C  FFD9         	movff	stop@mR,fsr2l
 10931  004F62  C01D  FFDA         	movff	stop@mR+1,fsr2h
 10932  004F66  50DF               	movf	indf2,w,c
 10933  004F68  A4D8               	btfss	status,2,c
 10934  004F6A  EFB9  F027         	goto	u3761
 10935  004F6E  EFBB  F027         	goto	u3760
 10936  004F72                     u3761:
 10937  004F72  EF6C  F027         	goto	l4098
 10938  004F76                     u3760:
 10939  004F76                     
 10940                           ;dc_motor.c: 92:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10941  004F76  0E09               	movlw	9
 10942  004F78  6E1F               	movwf	(??_stop+1)^0,c
 10943  004F7A  0E1E               	movlw	30
 10944  004F7C  6E1E               	movwf	??_stop^0,c
 10945  004F7E  0EE4               	movlw	228
 10946  004F80                     u6017:
 10947  004F80  2EE8               	decfsz	wreg,f,c
 10948  004F82  D7FE               	bra	u6017
 10949  004F84  2E1E               	decfsz	??_stop^0,f,c
 10950  004F86  D7FC               	bra	u6017
 10951  004F88  2E1F               	decfsz	(??_stop+1)^0,f,c
 10952  004F8A  D7FA               	bra	u6017
 10953  004F8C  D000               	nop2	
 10954  004F8E  0012               	return		;funcret
 10955  004F90                     __end_of_stop:
 10956                           	callstack 0
 10957                           
 10958 ;; *************** function _fullSpeedAhead *****************
 10959 ;; Defined at:
 10960 ;;		line 150 in file "dc_motor.c"
 10961 ;; Parameters:    Size  Location     Type
 10962 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10963 ;;		 -> main@motorL(10), 
 10964 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10965 ;;		 -> main@motorR(10), 
 10966 ;; Auto vars:     Size  Location     Type
 10967 ;;		None
 10968 ;; Return value:  Size  Location     Type
 10969 ;;                  1    wreg      void 
 10970 ;; Registers used:
 10971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10972 ;; Tracked objects:
 10973 ;;		On entry : 0/0
 10974 ;;		On exit  : 0/0
 10975 ;;		Unchanged: 0/0
 10976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10977 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10980 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10981 ;;Total ram usage:        5 bytes
 10982 ;; Hardware stack levels used: 1
 10983 ;; Hardware stack levels required when called: 3
 10984 ;; This function calls:
 10985 ;;		_setMotorPWM
 10986 ;; This function is called by:
 10987 ;;		_main
 10988 ;;		_goback
 10989 ;;		_test_function
 10990 ;;		_fullSpeedAhead_test
 10991 ;;		_short_burst
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           	psect	text53
 10996  004F90                     __ptext53:
 10997                           	callstack 0
 10998  004F90                     _fullSpeedAhead:
 10999                           	callstack 26
 11000  004F90                     
 11001                           ;dc_motor.c: 150: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 151: {;dc_motor.c: 152:     mL->direction=1;
 11002  004F90  EE20 F001          	lfsr	2,1
 11003  004F94  501A               	movf	fullSpeedAhead@mL^0,w,c
 11004  004F96  26D9               	addwf	fsr2l,f,c
 11005  004F98  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11006  004F9A  22DA               	addwfc	fsr2h,f,c
 11007  004F9C  0E01               	movlw	1
 11008  004F9E  6EDF               	movwf	indf2,c
 11009                           
 11010                           ;dc_motor.c: 153:     mR->direction=1;
 11011  004FA0  EE20 F001          	lfsr	2,1
 11012  004FA4  501C               	movf	fullSpeedAhead@mR^0,w,c
 11013  004FA6  26D9               	addwf	fsr2l,f,c
 11014  004FA8  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11015  004FAA  22DA               	addwfc	fsr2h,f,c
 11016  004FAC  0E01               	movlw	1
 11017  004FAE  6EDF               	movwf	indf2,c
 11018                           
 11019                           ;dc_motor.c: 154:     while (mL->power<20 && mR->power<20){
 11020  004FB0  EFF9  F027         	goto	l4598
 11021  004FB4                     l4590:
 11022                           
 11023                           ;dc_motor.c: 155:         mL->power += 10;
 11024  004FB4  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11025  004FB8  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11026  004FBC  0E0A               	movlw	10
 11027  004FBE  26DF               	addwf	indf2,f,c
 11028                           
 11029                           ;dc_motor.c: 156:         mR->power += 10;
 11030  004FC0  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11031  004FC4  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11032  004FC8  0E0A               	movlw	10
 11033  004FCA  26DF               	addwf	indf2,f,c
 11034  004FCC                     
 11035                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11036  004FCC  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11037  004FD0  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11038  004FD4  EC9A  F01C         	call	_setMotorPWM	;wreg free
 11039  004FD8                     
 11040                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11041  004FD8  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11042  004FDC  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11043  004FE0  EC9A  F01C         	call	_setMotorPWM	;wreg free
 11044  004FE4                     
 11045                           ;dc_motor.c: 159:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11046  004FE4  0ED0               	movlw	208
 11047  004FE6  6E1E               	movwf	??_fullSpeedAhead^0,c
 11048  004FE8  0ECA               	movlw	202
 11049  004FEA                     u6027:
 11050  004FEA  2EE8               	decfsz	wreg,f,c
 11051  004FEC  D7FE               	bra	u6027
 11052  004FEE  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11053  004FF0  D7FC               	bra	u6027
 11054  004FF2                     l4598:
 11055                           
 11056                           ;dc_motor.c: 154:     while (mL->power<20 && mR->power<20){
 11057  004FF2  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11058  004FF6  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11059  004FFA  0E14               	movlw	20
 11060  004FFC  60DF               	cpfslt	indf2,c
 11061  004FFE  EF03  F028         	goto	u4591
 11062  005002  EF05  F028         	goto	u4590
 11063  005006                     u4591:
 11064  005006  EF11  F028         	goto	l341
 11065  00500A                     u4590:
 11066  00500A  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11067  00500E  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11068  005012  0E13               	movlw	19
 11069  005014  64DF               	cpfsgt	indf2,c
 11070  005016  EF0F  F028         	goto	u4601
 11071  00501A  EF11  F028         	goto	u4600
 11072  00501E                     u4601:
 11073  00501E  EFDA  F027         	goto	l4590
 11074  005022                     u4600:
 11075  005022                     l341:
 11076  005022  0012               	return		;funcret
 11077  005024                     __end_of_fullSpeedAhead:
 11078                           	callstack 0
 11079                           
 11080 ;; *************** function _setMotorPWM *****************
 11081 ;; Defined at:
 11082 ;;		line 60 in file "dc_motor.c"
 11083 ;; Parameters:    Size  Location     Type
 11084 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11085 ;;		 -> main@motorR(10), main@motorL(10), 
 11086 ;; Auto vars:     Size  Location     Type
 11087 ;;  PWMduty         2   23[COMRAM] int 
 11088 ;; Return value:  Size  Location     Type
 11089 ;;                  1    wreg      void 
 11090 ;; Registers used:
 11091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11092 ;; Tracked objects:
 11093 ;;		On entry : 0/0
 11094 ;;		On exit  : 0/0
 11095 ;;		Unchanged: 0/0
 11096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11099 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11100 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11101 ;;Total ram usage:       11 bytes
 11102 ;; Hardware stack levels used: 1
 11103 ;; Hardware stack levels required when called: 2
 11104 ;; This function calls:
 11105 ;;		___awdiv
 11106 ;;		___wmul
 11107 ;; This function is called by:
 11108 ;;		_stop
 11109 ;;		_turnLeft
 11110 ;;		_turnRight
 11111 ;;		_fullSpeedAhead
 11112 ;;		_fullSpeedBack
 11113 ;; This function uses a non-reentrant model
 11114 ;;
 11115                           
 11116                           	psect	text54
 11117  003934                     __ptext54:
 11118                           	callstack 0
 11119  003934                     _setMotorPWM:
 11120                           	callstack 26
 11121  003934                     
 11122                           ;dc_motor.c: 60: void setMotorPWM(struct DC_motor *m);dc_motor.c: 61: {;dc_motor.c: 62: 
      +                           int PWMduty;;dc_motor.c: 64:  if (m->direction){
 11123  003934  EE20 F001          	lfsr	2,1
 11124  003938  500F               	movf	setMotorPWM@m^0,w,c
 11125  00393A  26D9               	addwf	fsr2l,f,c
 11126  00393C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11127  00393E  22DA               	addwfc	fsr2h,f,c
 11128  003940  50DF               	movf	indf2,w,c
 11129  003942  B4D8               	btfsc	status,2,c
 11130  003944  EFA6  F01C         	goto	u3241
 11131  003948  EFA8  F01C         	goto	u3240
 11132  00394C                     u3241:
 11133  00394C  EFD9  F01C         	goto	l3812
 11134  003950                     u3240:
 11135  003950                     
 11136                           ;dc_motor.c: 66:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11137  003950  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11138  003954  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11139  003958  50DF               	movf	indf2,w,c
 11140  00395A  6E11               	movwf	??_setMotorPWM^0,c
 11141  00395C  5011               	movf	??_setMotorPWM^0,w,c
 11142  00395E  6E01               	movwf	___wmul@multiplier^0,c
 11143  003960  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11144  003962  EE20 F007          	lfsr	2,7
 11145  003966  500F               	movf	setMotorPWM@m^0,w,c
 11146  003968  26D9               	addwf	fsr2l,f,c
 11147  00396A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11148  00396C  22DA               	addwfc	fsr2h,f,c
 11149  00396E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11150  003972  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11151  003976  ECDB  F02B         	call	___wmul	;wreg free
 11152  00397A  C001  F007         	movff	?___wmul,___awdiv@dividend
 11153  00397E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11154  003982  0E00               	movlw	0
 11155  003984  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11156  003986  0E64               	movlw	100
 11157  003988  6E09               	movwf	___awdiv@divisor^0,c
 11158  00398A  ECA8  F026         	call	___awdiv	;wreg free
 11159  00398E  EE20 F007          	lfsr	2,7
 11160  003992  500F               	movf	setMotorPWM@m^0,w,c
 11161  003994  26D9               	addwf	fsr2l,f,c
 11162  003996  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11163  003998  22DA               	addwfc	fsr2h,f,c
 11164  00399A  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11165  00399E  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11166  0039A2  5007               	movf	?___awdiv^0,w,c
 11167  0039A4  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11168  0039A6  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11169  0039A8  5008               	movf	(?___awdiv+1)^0,w,c
 11170  0039AA  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11171  0039AC  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11172                           
 11173                           ;dc_motor.c: 67:  }
 11174  0039AE  EFFC  F01C         	goto	l3814
 11175  0039B2                     l3812:
 11176                           
 11177                           ;dc_motor.c: 70:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11178  0039B2  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11179  0039B6  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11180  0039BA  50DF               	movf	indf2,w,c
 11181  0039BC  6E11               	movwf	??_setMotorPWM^0,c
 11182  0039BE  5011               	movf	??_setMotorPWM^0,w,c
 11183  0039C0  6E01               	movwf	___wmul@multiplier^0,c
 11184  0039C2  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11185  0039C4  EE20 F007          	lfsr	2,7
 11186  0039C8  500F               	movf	setMotorPWM@m^0,w,c
 11187  0039CA  26D9               	addwf	fsr2l,f,c
 11188  0039CC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11189  0039CE  22DA               	addwfc	fsr2h,f,c
 11190  0039D0  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11191  0039D4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11192  0039D8  ECDB  F02B         	call	___wmul	;wreg free
 11193  0039DC  C001  F007         	movff	?___wmul,___awdiv@dividend
 11194  0039E0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11195  0039E4  0E00               	movlw	0
 11196  0039E6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11197  0039E8  0E64               	movlw	100
 11198  0039EA  6E09               	movwf	___awdiv@divisor^0,c
 11199  0039EC  ECA8  F026         	call	___awdiv	;wreg free
 11200  0039F0  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11201  0039F4  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11202  0039F8                     l3814:
 11203                           
 11204                           ;dc_motor.c: 73:  *(m->dutyHighByte) = PWMduty;
 11205  0039F8  EE20 F002          	lfsr	2,2
 11206  0039FC  500F               	movf	setMotorPWM@m^0,w,c
 11207  0039FE  26D9               	addwf	fsr2l,f,c
 11208  003A00  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11209  003A02  22DA               	addwfc	fsr2h,f,c
 11210  003A04  CFDE F011          	movff	postinc2,??_setMotorPWM
 11211  003A08  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11212  003A0C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11213  003A10  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11214  003A14  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11215  003A18                     
 11216                           ;dc_motor.c: 75:  if (m->direction){
 11217  003A18  EE20 F001          	lfsr	2,1
 11218  003A1C  500F               	movf	setMotorPWM@m^0,w,c
 11219  003A1E  26D9               	addwf	fsr2l,f,c
 11220  003A20  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11221  003A22  22DA               	addwfc	fsr2h,f,c
 11222  003A24  50DF               	movf	indf2,w,c
 11223  003A26  B4D8               	btfsc	status,2,c
 11224  003A28  EF18  F01D         	goto	u3251
 11225  003A2C  EF1A  F01D         	goto	u3250
 11226  003A30                     u3251:
 11227  003A30  EF4F  F01D         	goto	l3820
 11228  003A34                     u3250:
 11229  003A34                     
 11230                           ;dc_motor.c: 76:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11231  003A34  EE20 F004          	lfsr	2,4
 11232  003A38  500F               	movf	setMotorPWM@m^0,w,c
 11233  003A3A  26D9               	addwf	fsr2l,f,c
 11234  003A3C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11235  003A3E  22DA               	addwfc	fsr2h,f,c
 11236  003A40  CFDE F011          	movff	postinc2,??_setMotorPWM
 11237  003A44  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11238  003A48  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11239  003A4C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11240  003A50  EE10 F004          	lfsr	1,4
 11241  003A54  500F               	movf	setMotorPWM@m^0,w,c
 11242  003A56  26E1               	addwf	fsr1l,f,c
 11243  003A58  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11244  003A5A  22E2               	addwfc	fsr1h,f,c
 11245  003A5C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11246  003A60  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11247  003A64  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11248  003A68  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11249  003A6C  50E7               	movf	indf1,w,c
 11250  003A6E  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11251  003A70  EE10 F006          	lfsr	1,6
 11252  003A74  500F               	movf	setMotorPWM@m^0,w,c
 11253  003A76  26E1               	addwf	fsr1l,f,c
 11254  003A78  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11255  003A7A  22E2               	addwfc	fsr1h,f,c
 11256  003A7C  50E7               	movf	indf1,w,c
 11257  003A7E  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11258  003A80  0E01               	movlw	1
 11259  003A82  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11260  003A84  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11261  003A86  EF47  F01D         	goto	u3264
 11262  003A8A                     u3265:
 11263  003A8A  90D8               	bcf	status,0,c
 11264  003A8C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11265  003A8E                     u3264:
 11266  003A8E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11267  003A90  EF45  F01D         	goto	u3265
 11268  003A94  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11269  003A96  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11270  003A98  6EDF               	movwf	indf2,c
 11271                           
 11272                           ;dc_motor.c: 77:  } else {
 11273  003A9A  EF83  F01D         	goto	l297
 11274  003A9E                     l3820:
 11275                           
 11276                           ;dc_motor.c: 78:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11277  003A9E  EE20 F004          	lfsr	2,4
 11278  003AA2  500F               	movf	setMotorPWM@m^0,w,c
 11279  003AA4  26D9               	addwf	fsr2l,f,c
 11280  003AA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11281  003AA8  22DA               	addwfc	fsr2h,f,c
 11282  003AAA  CFDE F011          	movff	postinc2,??_setMotorPWM
 11283  003AAE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11284  003AB2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11285  003AB6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11286  003ABA  EE10 F004          	lfsr	1,4
 11287  003ABE  500F               	movf	setMotorPWM@m^0,w,c
 11288  003AC0  26E1               	addwf	fsr1l,f,c
 11289  003AC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11290  003AC4  22E2               	addwfc	fsr1h,f,c
 11291  003AC6  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11292  003ACA  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11293  003ACE  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11294  003AD2  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11295  003AD6  50E7               	movf	indf1,w,c
 11296  003AD8  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11297  003ADA  EE10 F006          	lfsr	1,6
 11298  003ADE  500F               	movf	setMotorPWM@m^0,w,c
 11299  003AE0  26E1               	addwf	fsr1l,f,c
 11300  003AE2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11301  003AE4  22E2               	addwfc	fsr1h,f,c
 11302  003AE6  50E7               	movf	indf1,w,c
 11303  003AE8  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11304  003AEA  0E01               	movlw	1
 11305  003AEC  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11306  003AEE  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11307  003AF0  EF7C  F01D         	goto	u3274
 11308  003AF4                     u3275:
 11309  003AF4  90D8               	bcf	status,0,c
 11310  003AF6  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11311  003AF8                     u3274:
 11312  003AF8  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11313  003AFA  EF7A  F01D         	goto	u3275
 11314  003AFE  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11315  003B00  0AFF               	xorlw	255
 11316  003B02  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11317  003B04  6EDF               	movwf	indf2,c
 11318  003B06                     l297:
 11319  003B06  0012               	return		;funcret
 11320  003B08                     __end_of_setMotorPWM:
 11321                           	callstack 0
 11322                           
 11323 ;; *************** function ___wmul *****************
 11324 ;; Defined at:
 11325 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  multiplier      2    0[COMRAM] unsigned int 
 11328 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  product         2    4[COMRAM] unsigned int 
 11331 ;; Return value:  Size  Location     Type
 11332 ;;                  2    0[COMRAM] unsigned int 
 11333 ;; Registers used:
 11334 ;;		wreg, status,2, status,0, prodl, prodh
 11335 ;; Tracked objects:
 11336 ;;		On entry : 0/0
 11337 ;;		On exit  : 0/0
 11338 ;;		Unchanged: 0/0
 11339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11343 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11344 ;;Total ram usage:        6 bytes
 11345 ;; Hardware stack levels used: 1
 11346 ;; Hardware stack levels required when called: 1
 11347 ;; This function calls:
 11348 ;;		Nothing
 11349 ;; This function is called by:
 11350 ;;		_detect_color
 11351 ;;		_setMotorPWM
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text55
 11356  0057B6                     __ptext55:
 11357                           	callstack 0
 11358  0057B6                     ___wmul:
 11359                           	callstack 27
 11360  0057B6  5001               	movf	___wmul@multiplier^0,w,c
 11361  0057B8  0203               	mulwf	___wmul@multiplicand^0,c
 11362  0057BA  CFF3 F005          	movff	prodl,___wmul@product
 11363  0057BE  CFF4 F006          	movff	prodh,___wmul@product+1
 11364  0057C2  5001               	movf	___wmul@multiplier^0,w,c
 11365  0057C4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11366  0057C6  50F3               	movf	243,w,c
 11367  0057C8  2606               	addwf	(___wmul@product+1)^0,f,c
 11368  0057CA  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11369  0057CC  0203               	mulwf	___wmul@multiplicand^0,c
 11370  0057CE  50F3               	movf	243,w,c
 11371  0057D0  2606               	addwf	(___wmul@product+1)^0,f,c
 11372  0057D2  C005  F001         	movff	___wmul@product,?___wmul
 11373  0057D6  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11374  0057DA  0012               	return		;funcret
 11375  0057DC                     __end_of___wmul:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function ___awdiv *****************
 11379 ;; Defined at:
 11380 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  dividend        2    6[COMRAM] int 
 11383 ;;  divisor         2    8[COMRAM] int 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;  quotient        2   12[COMRAM] int 
 11386 ;;  sign            1   11[COMRAM] unsigned char 
 11387 ;;  counter         1   10[COMRAM] unsigned char 
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  2    6[COMRAM] int 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11400 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11401 ;;Total ram usage:        8 bytes
 11402 ;; Hardware stack levels used: 1
 11403 ;; Hardware stack levels required when called: 1
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_setMotorPWM
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text56
 11412  004D50                     __ptext56:
 11413                           	callstack 0
 11414  004D50                     ___awdiv:
 11415                           	callstack 26
 11416  004D50  0E00               	movlw	0
 11417  004D52  6E0C               	movwf	___awdiv@sign^0,c
 11418  004D54  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11419  004D56  EFB1  F026         	goto	u3010
 11420  004D5A  EFAF  F026         	goto	u3011
 11421  004D5E                     u3011:
 11422  004D5E  EFB7  F026         	goto	l3706
 11423  004D62                     u3010:
 11424  004D62  6C09               	negf	___awdiv@divisor^0,c
 11425  004D64  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11426  004D66  B0D8               	btfsc	status,0,c
 11427  004D68  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11428  004D6A  0E01               	movlw	1
 11429  004D6C  6E0C               	movwf	___awdiv@sign^0,c
 11430  004D6E                     l3706:
 11431  004D6E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11432  004D70  EFBE  F026         	goto	u3020
 11433  004D74  EFBC  F026         	goto	u3021
 11434  004D78                     u3021:
 11435  004D78  EFC4  F026         	goto	l3712
 11436  004D7C                     u3020:
 11437  004D7C  6C07               	negf	___awdiv@dividend^0,c
 11438  004D7E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11439  004D80  B0D8               	btfsc	status,0,c
 11440  004D82  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11441  004D84  0E01               	movlw	1
 11442  004D86  1A0C               	xorwf	___awdiv@sign^0,f,c
 11443  004D88                     l3712:
 11444  004D88  0E00               	movlw	0
 11445  004D8A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11446  004D8C  0E00               	movlw	0
 11447  004D8E  6E0D               	movwf	___awdiv@quotient^0,c
 11448  004D90  5009               	movf	___awdiv@divisor^0,w,c
 11449  004D92  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11450  004D94  B4D8               	btfsc	status,2,c
 11451  004D96  EFCF  F026         	goto	u3031
 11452  004D9A  EFD1  F026         	goto	u3030
 11453  004D9E                     u3031:
 11454  004D9E  EFF9  F026         	goto	l3734
 11455  004DA2                     u3030:
 11456  004DA2  0E01               	movlw	1
 11457  004DA4  6E0B               	movwf	___awdiv@counter^0,c
 11458  004DA6  EFD9  F026         	goto	l3720
 11459  004DAA                     l3718:
 11460  004DAA  90D8               	bcf	status,0,c
 11461  004DAC  3609               	rlcf	___awdiv@divisor^0,f,c
 11462  004DAE  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11463  004DB0  2A0B               	incf	___awdiv@counter^0,f,c
 11464  004DB2                     l3720:
 11465  004DB2  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11466  004DB4  EFDE  F026         	goto	u3041
 11467  004DB8  EFE0  F026         	goto	u3040
 11468  004DBC                     u3041:
 11469  004DBC  EFD5  F026         	goto	l3718
 11470  004DC0                     u3040:
 11471  004DC0                     l3722:
 11472  004DC0  90D8               	bcf	status,0,c
 11473  004DC2  360D               	rlcf	___awdiv@quotient^0,f,c
 11474  004DC4  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11475  004DC6  5009               	movf	___awdiv@divisor^0,w,c
 11476  004DC8  5C07               	subwf	___awdiv@dividend^0,w,c
 11477  004DCA  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11478  004DCC  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11479  004DCE  A0D8               	btfss	status,0,c
 11480  004DD0  EFEC  F026         	goto	u3051
 11481  004DD4  EFEE  F026         	goto	u3050
 11482  004DD8                     u3051:
 11483  004DD8  EFF3  F026         	goto	l3730
 11484  004DDC                     u3050:
 11485  004DDC  5009               	movf	___awdiv@divisor^0,w,c
 11486  004DDE  5E07               	subwf	___awdiv@dividend^0,f,c
 11487  004DE0  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11488  004DE2  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11489  004DE4  800D               	bsf	___awdiv@quotient^0,0,c
 11490  004DE6                     l3730:
 11491  004DE6  90D8               	bcf	status,0,c
 11492  004DE8  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11493  004DEA  3209               	rrcf	___awdiv@divisor^0,f,c
 11494  004DEC  2E0B               	decfsz	___awdiv@counter^0,f,c
 11495  004DEE  EFE0  F026         	goto	l3722
 11496  004DF2                     l3734:
 11497  004DF2  500C               	movf	___awdiv@sign^0,w,c
 11498  004DF4  B4D8               	btfsc	status,2,c
 11499  004DF6  EFFF  F026         	goto	u3061
 11500  004DFA  EF01  F027         	goto	u3060
 11501  004DFE                     u3061:
 11502  004DFE  EF05  F027         	goto	l3738
 11503  004E02                     u3060:
 11504  004E02  6C0D               	negf	___awdiv@quotient^0,c
 11505  004E04  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11506  004E06  B0D8               	btfsc	status,0,c
 11507  004E08  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11508  004E0A                     l3738:
 11509  004E0A  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11510  004E0E  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11511  004E12  0012               	return		;funcret
 11512  004E14                     __end_of___awdiv:
 11513                           	callstack 0
 11514                           
 11515 ;; *************** function _color_predict *****************
 11516 ;; Defined at:
 11517 ;;		line 250 in file "color.c"
 11518 ;; Parameters:    Size  Location     Type
 11519 ;;  color           1    wreg     unsigned char 
 11520 ;; Auto vars:     Size  Location     Type
 11521 ;;  color           1  125[BANK0 ] unsigned char 
 11522 ;;  buf           100   25[BANK0 ] unsigned char [100]
 11523 ;; Return value:  Size  Location     Type
 11524 ;;                  1    wreg      void 
 11525 ;; Registers used:
 11526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11527 ;; Tracked objects:
 11528 ;;		On entry : 0/0
 11529 ;;		On exit  : 0/0
 11530 ;;		Unchanged: 0/0
 11531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11533 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11535 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11536 ;;Total ram usage:      101 bytes
 11537 ;; Hardware stack levels used: 1
 11538 ;; Hardware stack levels required when called: 9
 11539 ;; This function calls:
 11540 ;;		_sendStringSerial4
 11541 ;;		_sprintf
 11542 ;; This function is called by:
 11543 ;;		_color_data_collection
 11544 ;;		_main
 11545 ;;		_goback
 11546 ;;		_test_function
 11547 ;; This function uses a non-reentrant model
 11548 ;;
 11549                           
 11550                           	psect	text57
 11551  005736                     __ptext57:
 11552                           	callstack 0
 11553  005736                     _color_predict:
 11554                           	callstack 20
 11555                           
 11556                           ;incstack = 0
 11557                           ;color_predict@color stored from wreg
 11558  005736  0100               	movlb	0	; () banked
 11559  005738  6FDD               	movwf	color_predict@color& (0+255),b
 11560  00573A                     
 11561                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 11562  00573A  0E79               	movlw	low color_predict@buf
 11563  00573C  0100               	movlb	0	; () banked
 11564  00573E  6F60               	movwf	sprintf@s& (0+255),b
 11565  005740  0E00               	movlw	high color_predict@buf
 11566  005742  6F61               	movwf	(sprintf@s+1)& (0+255),b
 11567  005744  0E0D               	movlw	low (STR_1+8)
 11568  005746  6F62               	movwf	sprintf@fmt& (0+255),b
 11569  005748  0E0E               	movlw	high (STR_1+8)
 11570  00574A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 11571  00574C  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 11572  005750  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11573  005752  EC25  F029         	call	_sprintf	;wreg free
 11574  005756                     
 11575                           ;color.c: 254:     sendStringSerial4(buf);
 11576  005756  0E79               	movlw	low color_predict@buf
 11577  005758  6E02               	movwf	sendStringSerial4@string^0,c
 11578  00575A  0E00               	movlw	high color_predict@buf
 11579  00575C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 11580  00575E  EC83  F02B         	call	_sendStringSerial4	;wreg free
 11581  005762  0012               	return		;funcret
 11582  005764                     __end_of_color_predict:
 11583                           	callstack 0
 11584                           
 11585 ;; *************** function _sprintf *****************
 11586 ;; Defined at:
 11587 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  s               2    0[BANK0 ] PTR unsigned char 
 11590 ;;		 -> detect_color@buf(100), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 11591 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11592 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(6), 
 11593 ;;		 -> STR_2(12), STR_1(14), 
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;  f              11   14[BANK0 ] struct _IO_FILE
 11596 ;;  ap              2   12[BANK0 ] PTR void [1]
 11597 ;;		 -> ?_sprintf(2), 
 11598 ;;  ret             2    0        int 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  2    0[BANK0 ] int 
 11601 ;; Registers used:
 11602 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11608 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11609 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11611 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11612 ;;Total ram usage:       25 bytes
 11613 ;; Hardware stack levels used: 1
 11614 ;; Hardware stack levels required when called: 8
 11615 ;; This function calls:
 11616 ;;		_vfprintf
 11617 ;; This function is called by:
 11618 ;;		_color_display
 11619 ;;		_color_predict
 11620 ;;		_detect_color
 11621 ;;		_check_color_reading
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text58
 11626  00524A                     __ptext58:
 11627                           	callstack 0
 11628  00524A                     _sprintf:
 11629                           	callstack 20
 11630  00524A  0E64               	movlw	low (?_sprintf+4)
 11631  00524C  0100               	movlb	0	; () banked
 11632  00524E  6F6C               	movwf	sprintf@ap& (0+255),b
 11633  005250  0E00               	movlw	high (?_sprintf+4)
 11634  005252  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 11635  005254  C060  F06E         	movff	sprintf@s,sprintf@f
 11636  005258  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 11637  00525C                     
 11638                           ; BSR set to: 0
 11639  00525C  0E00               	movlw	0
 11640  00525E  6F72               	movwf	(sprintf@f+4)& (0+255),b
 11641  005260  0E00               	movlw	0
 11642  005262  6F71               	movwf	(sprintf@f+3)& (0+255),b
 11643  005264                     
 11644                           ; BSR set to: 0
 11645  005264  0E00               	movlw	0
 11646  005266  6F78               	movwf	(sprintf@f+10)& (0+255),b
 11647  005268  0E00               	movlw	0
 11648  00526A  6F77               	movwf	(sprintf@f+9)& (0+255),b
 11649  00526C                     
 11650                           ; BSR set to: 0
 11651  00526C  0E6E               	movlw	low sprintf@f
 11652  00526E  6E50               	movwf	vfprintf@fp^0,c
 11653  005270  0E00               	movlw	high sprintf@f
 11654  005272  6E51               	movwf	(vfprintf@fp+1)^0,c
 11655  005274  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 11656  005278  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 11657  00527C  0E6C               	movlw	low sprintf@ap
 11658  00527E  6E54               	movwf	vfprintf@ap^0,c
 11659  005280  0E00               	movlw	high sprintf@ap
 11660  005282  6E55               	movwf	(vfprintf@ap+1)^0,c
 11661  005284  ECC5  F028         	call	_vfprintf	;wreg free
 11662  005288  0100               	movlb	0	; () banked
 11663  00528A  5171               	movf	(sprintf@f+3)& (0+255),w,b
 11664  00528C  2560               	addwf	sprintf@s& (0+255),w,b
 11665  00528E  6ED9               	movwf	fsr2l,c
 11666  005290  5172               	movf	(sprintf@f+4)& (0+255),w,b
 11667  005292  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 11668  005294  6EDA               	movwf	fsr2h,c
 11669  005296  0E00               	movlw	0
 11670  005298  6EDF               	movwf	indf2,c
 11671  00529A                     
 11672                           ; BSR set to: 0
 11673  00529A  0012               	return		;funcret
 11674  00529C                     __end_of_sprintf:
 11675                           	callstack 0
 11676                           
 11677 ;; *************** function _vfprintf *****************
 11678 ;; Defined at:
 11679 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 11682 ;;		 -> sprintf@f(11), 
 11683 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 11684 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(6), 
 11685 ;;		 -> STR_2(12), STR_1(14), 
 11686 ;;  ap              2   83[COMRAM] PTR PTR void 
 11687 ;;		 -> sprintf@ap(2), 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 11690 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(6), 
 11691 ;;		 -> STR_2(12), STR_1(14), 
 11692 ;; Return value:  Size  Location     Type
 11693 ;;                  2   79[COMRAM] int 
 11694 ;; Registers used:
 11695 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11696 ;; Tracked objects:
 11697 ;;		On entry : 0/0
 11698 ;;		On exit  : 0/0
 11699 ;;		Unchanged: 0/0
 11700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11701 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11702 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11704 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11705 ;;Total ram usage:        8 bytes
 11706 ;; Hardware stack levels used: 1
 11707 ;; Hardware stack levels required when called: 7
 11708 ;; This function calls:
 11709 ;;		_vfpfcnvrt
 11710 ;; This function is called by:
 11711 ;;		_sprintf
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text59
 11716  00518A                     __ptext59:
 11717                           	callstack 0
 11718  00518A                     _vfprintf:
 11719                           	callstack 20
 11720  00518A                     
 11721                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11722  00518A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 11723  00518E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11724  005192                     
 11725                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11726  005192  0E00               	movlw	0
 11727  005194  0101               	movlb	1	; () banked
 11728  005196  6F55               	movwf	(_nout+1)& (0+255),b
 11729  005198  0E00               	movlw	0
 11730  00519A  6F54               	movwf	_nout& (0+255),b
 11731                           
 11732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11733  00519C  EFE3  F028         	goto	l4294
 11734  0051A0                     l4292:
 11735                           
 11736                           ; BSR set to: 1
 11737                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11738  0051A0  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 11739  0051A4  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11740  0051A8  0E56               	movlw	low vfprintf@cfmt
 11741  0051AA  6E42               	movwf	vfpfcnvrt@fmt^0,c
 11742  0051AC  0E00               	movlw	high vfprintf@cfmt
 11743  0051AE  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11744  0051B0  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 11745  0051B4  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11746  0051B8  EC39  F01F         	call	_vfpfcnvrt	;wreg free
 11747  0051BC  5040               	movf	?_vfpfcnvrt^0,w,c
 11748  0051BE  0101               	movlb	1	; () banked
 11749  0051C0  2754               	addwf	_nout& (0+255),f,b
 11750  0051C2  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 11751  0051C4  2355               	addwfc	(_nout+1)& (0+255),f,b
 11752  0051C6                     l4294:
 11753                           
 11754                           ; BSR set to: 1
 11755                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11756  0051C6  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 11757  0051CA  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11758  0051CE                     	if	0	;tblptru may be non-zero
 11759  0051CE                     	endif
 11760  0051CE                     	if	0	;tblptru may be non-zero
 11761  0051CE                     	endif
 11762  0051CE  0008               	tblrd		*
 11763  0051D0  50F5               	movf	tablat,w,c
 11764  0051D2  0900               	iorlw	0
 11765  0051D4  A4D8               	btfss	status,2,c
 11766  0051D6  EFEF  F028         	goto	u4031
 11767  0051DA  EFF1  F028         	goto	u4030
 11768  0051DE                     u4031:
 11769  0051DE  EFD0  F028         	goto	l4292
 11770  0051E2                     u4030:
 11771  0051E2                     
 11772                           ; BSR set to: 1
 11773                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11774  0051E2  C154  F050         	movff	_nout,?_vfprintf
 11775  0051E6  C155  F051         	movff	_nout+1,?_vfprintf+1
 11776  0051EA                     
 11777                           ; BSR set to: 1
 11778  0051EA  0012               	return		;funcret
 11779  0051EC                     __end_of_vfprintf:
 11780                           	callstack 0
 11781                           
 11782 ;; *************** function _vfpfcnvrt *****************
 11783 ;; Defined at:
 11784 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 11787 ;;		 -> sprintf@f(11), 
 11788 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 11789 ;;		 -> vfprintf@cfmt(2), 
 11790 ;;  ap              2   67[COMRAM] PTR PTR void 
 11791 ;;		 -> sprintf@ap(2), 
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;  ll              8   71[COMRAM] long long 
 11794 ;;  llu             8    0        unsigned long long 
 11795 ;;  f               4    0        unsigned long long 
 11796 ;;  vp              3    0        PTR void 
 11797 ;;  ct              3    0        unsigned char [3]
 11798 ;;  cp              3    0        PTR unsigned char 
 11799 ;;  i               2    0        int 
 11800 ;;  done            2    0        int 
 11801 ;;  c               1    0        unsigned char 
 11802 ;; Return value:  Size  Location     Type
 11803 ;;                  2   63[COMRAM] int 
 11804 ;; Registers used:
 11805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11806 ;; Tracked objects:
 11807 ;;		On entry : 0/0
 11808 ;;		On exit  : 0/0
 11809 ;;		Unchanged: 0/0
 11810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11811 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11812 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11814 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11815 ;;Total ram usage:       16 bytes
 11816 ;; Hardware stack levels used: 1
 11817 ;; Hardware stack levels required when called: 6
 11818 ;; This function calls:
 11819 ;;		_dtoa
 11820 ;;		_fputc
 11821 ;; This function is called by:
 11822 ;;		_vfprintf
 11823 ;; This function uses a non-reentrant model
 11824 ;;
 11825                           
 11826                           	psect	text60
 11827  003E72                     __ptext60:
 11828                           	callstack 0
 11829  003E72                     _vfpfcnvrt:
 11830                           	callstack 20
 11831  003E72                     
 11832                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11833  003E72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11834  003E76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11835  003E7A  CFDE FFF6          	movff	postinc2,tblptrl
 11836  003E7E  CFDD FFF7          	movff	postdec2,tblptrh
 11837  003E82                     	if	0	;tblptru may be non-zero
 11838  003E82                     	endif
 11839  003E82                     	if	0	;tblptru may be non-zero
 11840  003E82                     	endif
 11841  003E82  0008               	tblrd		*
 11842  003E84  50F5               	movf	tablat,w,c
 11843  003E86  0A25               	xorlw	37
 11844  003E88  A4D8               	btfss	status,2,c
 11845  003E8A  EF49  F01F         	goto	u3671
 11846  003E8E  EF4B  F01F         	goto	u3670
 11847  003E92                     u3671:
 11848  003E92  EFF7  F01F         	goto	l4058
 11849  003E96                     u3670:
 11850  003E96                     
 11851                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11852  003E96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11853  003E9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11854  003E9E  2ADE               	incf	postinc2,f,c
 11855  003EA0  0E00               	movlw	0
 11856  003EA2  22DD               	addwfc	postdec2,f,c
 11857  003EA4                     
 11858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11859  003EA4  0E00               	movlw	0
 11860  003EA6  0101               	movlb	1	; () banked
 11861  003EA8  6F57               	movwf	(_width+1)& (0+255),b
 11862  003EAA  0E00               	movlw	0
 11863  003EAC  6F56               	movwf	_width& (0+255),b
 11864  003EAE  C156  F15A         	movff	_width,_flags
 11865  003EB2  C157  F15B         	movff	_width+1,_flags+1
 11866  003EB6                     
 11867                           ; BSR set to: 1
 11868                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11869  003EB6  6958               	setf	_prec& (0+255),b
 11870  003EB8  6959               	setf	(_prec+1)& (0+255),b
 11871  003EBA                     
 11872                           ; BSR set to: 1
 11873                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11874  003EBA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11875  003EBE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11876  003EC2  CFDE FFF6          	movff	postinc2,tblptrl
 11877  003EC6  CFDD FFF7          	movff	postdec2,tblptrh
 11878  003ECA                     	if	0	;tblptru may be non-zero
 11879  003ECA                     	endif
 11880  003ECA                     	if	0	;tblptru may be non-zero
 11881  003ECA                     	endif
 11882  003ECA  0008               	tblrd		*
 11883  003ECC  50F5               	movf	tablat,w,c
 11884  003ECE  0A64               	xorlw	100
 11885  003ED0  B4D8               	btfsc	status,2,c
 11886  003ED2  EF6D  F01F         	goto	u3681
 11887  003ED6  EF6F  F01F         	goto	u3680
 11888  003EDA                     u3681:
 11889  003EDA  EF81  F01F         	goto	l4036
 11890  003EDE                     u3680:
 11891  003EDE                     
 11892                           ; BSR set to: 1
 11893  003EDE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11894  003EE2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11895  003EE6  CFDE FFF6          	movff	postinc2,tblptrl
 11896  003EEA  CFDD FFF7          	movff	postdec2,tblptrh
 11897  003EEE                     	if	0	;tblptru may be non-zero
 11898  003EEE                     	endif
 11899  003EEE                     	if	0	;tblptru may be non-zero
 11900  003EEE                     	endif
 11901  003EEE  0008               	tblrd		*
 11902  003EF0  50F5               	movf	tablat,w,c
 11903  003EF2  0A69               	xorlw	105
 11904  003EF4  A4D8               	btfss	status,2,c
 11905  003EF6  EF7F  F01F         	goto	u3691
 11906  003EFA  EF81  F01F         	goto	u3690
 11907  003EFE                     u3691:
 11908  003EFE  EFC1  F01F         	goto	l4042
 11909  003F02                     u3690:
 11910  003F02                     l4036:
 11911                           
 11912                           ; BSR set to: 1
 11913                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 11914  003F02  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11915  003F06  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11916  003F0A  2ADE               	incf	postinc2,f,c
 11917  003F0C  0E00               	movlw	0
 11918  003F0E  22DD               	addwfc	postdec2,f,c
 11919                           
 11920                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11921  003F10  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 11922  003F14  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 11923  003F18  CFDF F046          	movff	indf2,??_vfpfcnvrt
 11924  003F1C  0E02               	movlw	2
 11925  003F1E  26DE               	addwf	postinc2,f,c
 11926  003F20  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 11927  003F24  0E00               	movlw	0
 11928  003F26  22DD               	addwfc	postdec2,f,c
 11929  003F28  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 11930  003F2C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 11931  003F30  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 11932  003F34  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 11933  003F38  0E00               	movlw	0
 11934  003F3A  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 11935  003F3C  0EFF               	movlw	-1
 11936  003F3E  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 11937  003F40  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 11938  003F42  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 11939  003F44  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 11940  003F46  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 11941  003F48  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 11942  003F4A                     
 11943                           ; BSR set to: 1
 11944                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 11945  003F4A  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 11946  003F4E  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 11947  003F52  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 11948  003F56  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 11949  003F5A  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 11950  003F5E  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 11951  003F62  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 11952  003F66  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 11953  003F6A  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 11954  003F6E  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 11955  003F72  EC01  F016         	call	_dtoa	;wreg free
 11956  003F76  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 11957  003F7A  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 11958  003F7E  EF12  F020         	goto	l1494
 11959  003F82                     l4042:
 11960                           
 11961                           ; BSR set to: 1
 11962                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11963  003F82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11964  003F86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11965  003F8A  CFDE FFF6          	movff	postinc2,tblptrl
 11966  003F8E  CFDD FFF7          	movff	postdec2,tblptrh
 11967  003F92                     	if	0	;tblptru may be non-zero
 11968  003F92                     	endif
 11969  003F92                     	if	0	;tblptru may be non-zero
 11970  003F92                     	endif
 11971  003F92  0008               	tblrd		*
 11972  003F94  50F5               	movf	tablat,w,c
 11973  003F96  0A25               	xorlw	37
 11974  003F98  A4D8               	btfss	status,2,c
 11975  003F9A  EFD1  F01F         	goto	u3701
 11976  003F9E  EFD3  F01F         	goto	u3700
 11977  003FA2                     u3701:
 11978  003FA2  EFEA  F01F         	goto	l4052
 11979  003FA6                     u3700:
 11980  003FA6                     
 11981                           ; BSR set to: 1
 11982                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11983  003FA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11984  003FAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11985  003FAE  2ADE               	incf	postinc2,f,c
 11986  003FB0  0E00               	movlw	0
 11987  003FB2  22DD               	addwfc	postdec2,f,c
 11988  003FB4                     
 11989                           ; BSR set to: 1
 11990                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11991  003FB4  0E00               	movlw	0
 11992  003FB6  6E02               	movwf	(fputc@c+1)^0,c
 11993  003FB8  0E25               	movlw	37
 11994  003FBA  6E01               	movwf	fputc@c^0,c
 11995  003FBC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 11996  003FC0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 11997  003FC4  EC7D  F025         	call	_fputc	;wreg free
 11998  003FC8                     l4048:
 11999                           
 12000                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12001  003FC8  0E00               	movlw	0
 12002  003FCA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12003  003FCC  0E01               	movlw	1
 12004  003FCE  6E40               	movwf	?_vfpfcnvrt^0,c
 12005  003FD0  EF12  F020         	goto	l1494
 12006  003FD4                     l4052:
 12007                           
 12008                           ; BSR set to: 1
 12009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12010  003FD4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12011  003FD8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12012  003FDC  2ADE               	incf	postinc2,f,c
 12013  003FDE  0E00               	movlw	0
 12014  003FE0  22DD               	addwfc	postdec2,f,c
 12015  003FE2                     
 12016                           ; BSR set to: 1
 12017                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12018  003FE2  0E00               	movlw	0
 12019  003FE4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12020  003FE6  0E00               	movlw	0
 12021  003FE8  6E40               	movwf	?_vfpfcnvrt^0,c
 12022  003FEA  EF12  F020         	goto	l1494
 12023  003FEE                     l4058:
 12024                           
 12025                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12026  003FEE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12027  003FF2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12028  003FF6  CFDE FFF6          	movff	postinc2,tblptrl
 12029  003FFA  CFDD FFF7          	movff	postdec2,tblptrh
 12030  003FFE                     	if	0	;tblptru may be non-zero
 12031  003FFE                     	endif
 12032  003FFE                     	if	0	;tblptru may be non-zero
 12033  003FFE                     	endif
 12034  003FFE  0008               	tblrd		*
 12035  004000  50F5               	movf	tablat,w,c
 12036  004002  6E01               	movwf	fputc@c^0,c
 12037  004004  6A02               	clrf	(fputc@c+1)^0,c
 12038  004006  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12039  00400A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12040  00400E  EC7D  F025         	call	_fputc	;wreg free
 12041  004012                     
 12042                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12043  004012  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12044  004016  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12045  00401A  2ADE               	incf	postinc2,f,c
 12046  00401C  0E00               	movlw	0
 12047  00401E  22DD               	addwfc	postdec2,f,c
 12048  004020  EFE4  F01F         	goto	l4048
 12049  004024                     l1494:
 12050  004024  0012               	return		;funcret
 12051  004026                     __end_of_vfpfcnvrt:
 12052                           	callstack 0
 12053                           
 12054 ;; *************** function _dtoa *****************
 12055 ;; Defined at:
 12056 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12059 ;;		 -> sprintf@f(11), 
 12060 ;;  d               8   29[COMRAM] long long 
 12061 ;; Auto vars:     Size  Location     Type
 12062 ;;  n               8   53[COMRAM] long long 
 12063 ;;  i               2   61[COMRAM] int 
 12064 ;;  s               2   51[COMRAM] int 
 12065 ;;  w               2   49[COMRAM] int 
 12066 ;;  p               2   47[COMRAM] int 
 12067 ;; Return value:  Size  Location     Type
 12068 ;;                  2   27[COMRAM] int 
 12069 ;; Registers used:
 12070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12071 ;; Tracked objects:
 12072 ;;		On entry : 0/0
 12073 ;;		On exit  : 0/0
 12074 ;;		Unchanged: 0/0
 12075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12076 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12077 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12079 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12080 ;;Total ram usage:       36 bytes
 12081 ;; Hardware stack levels used: 1
 12082 ;; Hardware stack levels required when called: 5
 12083 ;; This function calls:
 12084 ;;		___aodiv
 12085 ;;		___aomod
 12086 ;;		_abs
 12087 ;;		_pad
 12088 ;; This function is called by:
 12089 ;;		_vfpfcnvrt
 12090 ;; This function uses a non-reentrant model
 12091 ;;
 12092                           
 12093                           	psect	text61
 12094  002C02                     __ptext61:
 12095                           	callstack 0
 12096  002C02                     _dtoa:
 12097                           	callstack 20
 12098  002C02                     
 12099                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12100  002C02  C01E  F036         	movff	dtoa@d,dtoa@n
 12101  002C06  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12102  002C0A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12103  002C0E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12104  002C12  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12105  002C16  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12106  002C1A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12107  002C1E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12108  002C22                     
 12109                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12110  002C22  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12111  002C24  EF16  F016         	goto	u3071
 12112  002C28  EF19  F016         	goto	u3070
 12113  002C2C                     u3071:
 12114  002C2C  0E01               	movlw	1
 12115  002C2E  EF1A  F016         	goto	u3080
 12116  002C32                     u3070:
 12117  002C32  0E00               	movlw	0
 12118  002C34                     u3080:
 12119  002C34  6E34               	movwf	dtoa@s^0,c
 12120  002C36  6A35               	clrf	(dtoa@s+1)^0,c
 12121                           
 12122                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12123  002C38  5034               	movf	dtoa@s^0,w,c
 12124  002C3A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12125  002C3C  B4D8               	btfsc	status,2,c
 12126  002C3E  EF23  F016         	goto	u3091
 12127  002C42  EF25  F016         	goto	u3090
 12128  002C46                     u3091:
 12129  002C46  EF35  F016         	goto	l3748
 12130  002C4A                     u3090:
 12131  002C4A                     
 12132                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12133  002C4A  1E3D               	comf	(dtoa@n+7)^0,f,c
 12134  002C4C  1E3C               	comf	(dtoa@n+6)^0,f,c
 12135  002C4E  1E3B               	comf	(dtoa@n+5)^0,f,c
 12136  002C50  1E3A               	comf	(dtoa@n+4)^0,f,c
 12137  002C52  1E39               	comf	(dtoa@n+3)^0,f,c
 12138  002C54  1E38               	comf	(dtoa@n+2)^0,f,c
 12139  002C56  1E37               	comf	(dtoa@n+1)^0,f,c
 12140  002C58  6C36               	negf	dtoa@n^0,c
 12141  002C5A  0E00               	movlw	0
 12142  002C5C  2237               	addwfc	(dtoa@n+1)^0,f,c
 12143  002C5E  2238               	addwfc	(dtoa@n+2)^0,f,c
 12144  002C60  2239               	addwfc	(dtoa@n+3)^0,f,c
 12145  002C62  223A               	addwfc	(dtoa@n+4)^0,f,c
 12146  002C64  223B               	addwfc	(dtoa@n+5)^0,f,c
 12147  002C66  223C               	addwfc	(dtoa@n+6)^0,f,c
 12148  002C68  223D               	addwfc	(dtoa@n+7)^0,f,c
 12149  002C6A                     l3748:
 12150                           
 12151                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12152  002C6A  0101               	movlb	1	; () banked
 12153  002C6C  BF59               	btfsc	(_prec+1)& (0+255),7,b
 12154  002C6E  EF3B  F016         	goto	u3101
 12155  002C72  EF3D  F016         	goto	u3100
 12156  002C76                     u3101:
 12157  002C76  EF3E  F016         	goto	l3752
 12158  002C7A                     u3100:
 12159  002C7A                     
 12160                           ; BSR set to: 1
 12161                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12162  002C7A  935A               	bcf	_flags& (0+255),1,b
 12163  002C7C                     l3752:
 12164                           
 12165                           ; BSR set to: 1
 12166                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12167  002C7C  BF59               	btfsc	(_prec+1)& (0+255),7,b
 12168  002C7E  EF4B  F016         	goto	u3110
 12169  002C82  5159               	movf	(_prec+1)& (0+255),w,b
 12170  002C84  E106               	bnz	u3111
 12171  002C86  0558               	decf	_prec& (0+255),w,b
 12172  002C88  B0D8               	btfsc	status,0,c
 12173  002C8A  EF49  F016         	goto	u3111
 12174  002C8E  EF4B  F016         	goto	u3110
 12175  002C92                     u3111:
 12176  002C92  EF51  F016         	goto	l1467
 12177  002C96                     u3110:
 12178  002C96                     
 12179                           ; BSR set to: 1
 12180  002C96  0E00               	movlw	0
 12181  002C98  6E31               	movwf	(dtoa@p+1)^0,c
 12182  002C9A  0E01               	movlw	1
 12183  002C9C  6E30               	movwf	dtoa@p^0,c
 12184  002C9E  EF55  F016         	goto	l1469
 12185  002CA2                     l1467:
 12186                           
 12187                           ; BSR set to: 1
 12188  002CA2  C158  F030         	movff	_prec,dtoa@p
 12189  002CA6  C159  F031         	movff	_prec+1,dtoa@p+1
 12190  002CAA                     l1469:
 12191                           
 12192                           ; BSR set to: 1
 12193                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12194  002CAA  C156  F032         	movff	_width,dtoa@w
 12195  002CAE  C157  F033         	movff	_width+1,dtoa@w+1
 12196  002CB2                     
 12197                           ; BSR set to: 1
 12198                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12199  002CB2  5034               	movf	dtoa@s^0,w,c
 12200  002CB4  1035               	iorwf	(dtoa@s+1)^0,w,c
 12201  002CB6  A4D8               	btfss	status,2,c
 12202  002CB8  EF60  F016         	goto	u3121
 12203  002CBC  EF62  F016         	goto	u3120
 12204  002CC0                     u3121:
 12205  002CC0  EF69  F016         	goto	l3760
 12206  002CC4                     u3120:
 12207  002CC4                     
 12208                           ; BSR set to: 1
 12209  002CC4  A55A               	btfss	_flags& (0+255),2,b
 12210  002CC6  EF67  F016         	goto	u3131
 12211  002CCA  EF69  F016         	goto	u3130
 12212  002CCE                     u3131:
 12213  002CCE  EF6C  F016         	goto	l3762
 12214  002CD2                     u3130:
 12215  002CD2                     l3760:
 12216                           
 12217                           ; BSR set to: 1
 12218                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12219  002CD2  0632               	decf	dtoa@w^0,f,c
 12220  002CD4  A0D8               	btfss	status,0,c
 12221  002CD6  0633               	decf	(dtoa@w+1)^0,f,c
 12222  002CD8                     l3762:
 12223                           
 12224                           ; BSR set to: 1
 12225                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12226  002CD8  0E00               	movlw	0
 12227  002CDA  6E3F               	movwf	(dtoa@i+1)^0,c
 12228  002CDC  0E1F               	movlw	31
 12229  002CDE  6E3E               	movwf	dtoa@i^0,c
 12230  002CE0                     
 12231                           ; BSR set to: 1
 12232                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12233  002CE0  0E00               	movlw	0
 12234  002CE2  6F87               	movwf	(_dbuf+31)& (0+255),b
 12235                           
 12236                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12237  002CE4  EFF0  F016         	goto	l3776
 12238  002CE8                     l3766:
 12239                           
 12240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12241  002CE8  063E               	decf	dtoa@i^0,f,c
 12242  002CEA  A0D8               	btfss	status,0,c
 12243  002CEC  063F               	decf	(dtoa@i+1)^0,f,c
 12244  002CEE                     
 12245                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12246  002CEE  0E68               	movlw	low _dbuf
 12247  002CF0  243E               	addwf	dtoa@i^0,w,c
 12248  002CF2  6ED9               	movwf	fsr2l,c
 12249  002CF4  0E01               	movlw	high _dbuf
 12250  002CF6  203F               	addwfc	(dtoa@i+1)^0,w,c
 12251  002CF8  6EDA               	movwf	fsr2h,c
 12252  002CFA  C036  F001         	movff	dtoa@n,___aomod@dividend
 12253  002CFE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12254  002D02  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12255  002D06  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12256  002D0A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12257  002D0E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12258  002D12  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12259  002D16  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12260  002D1A  0E0A               	movlw	10
 12261  002D1C  6E09               	movwf	___aomod@divisor^0,c
 12262  002D1E  0E00               	movlw	0
 12263  002D20  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12264  002D22  0E00               	movlw	0
 12265  002D24  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12266  002D26  0E00               	movlw	0
 12267  002D28  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12268  002D2A  0E00               	movlw	0
 12269  002D2C  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12270  002D2E  0E00               	movlw	0
 12271  002D30  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12272  002D32  0E00               	movlw	0
 12273  002D34  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12274  002D36  0E00               	movlw	0
 12275  002D38  6E10               	movwf	(___aomod@divisor+7)^0,c
 12276  002D3A  EC9C  F021         	call	___aomod	;wreg free
 12277  002D3E  C001  F026         	movff	?___aomod,??_dtoa
 12278  002D42  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12279  002D46  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12280  002D4A  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12281  002D4E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12282  002D52  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12283  002D56  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12284  002D5A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12285  002D5E  C026  F013         	movff	??_dtoa,abs@a
 12286  002D62  C028  F014         	movff	??_dtoa+2,abs@a+1
 12287  002D66  ECD8  F02A         	call	_abs	;wreg free
 12288  002D6A  5013               	movf	?_abs^0,w,c
 12289  002D6C  0F30               	addlw	48
 12290  002D6E  6EDF               	movwf	indf2,c
 12291  002D70                     
 12292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12293  002D70  0630               	decf	dtoa@p^0,f,c
 12294  002D72  A0D8               	btfss	status,0,c
 12295  002D74  0631               	decf	(dtoa@p+1)^0,f,c
 12296  002D76                     
 12297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12298  002D76  0632               	decf	dtoa@w^0,f,c
 12299  002D78  A0D8               	btfss	status,0,c
 12300  002D7A  0633               	decf	(dtoa@w+1)^0,f,c
 12301  002D7C                     
 12302                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12303  002D7C  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12304  002D80  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12305  002D84  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12306  002D88  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12307  002D8C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12308  002D90  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12309  002D94  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12310  002D98  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12311  002D9C  0E0A               	movlw	10
 12312  002D9E  6E09               	movwf	___aodiv@divisor^0,c
 12313  002DA0  0E00               	movlw	0
 12314  002DA2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12315  002DA4  0E00               	movlw	0
 12316  002DA6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12317  002DA8  0E00               	movlw	0
 12318  002DAA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12319  002DAC  0E00               	movlw	0
 12320  002DAE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12321  002DB0  0E00               	movlw	0
 12322  002DB2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12323  002DB4  0E00               	movlw	0
 12324  002DB6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12325  002DB8  0E00               	movlw	0
 12326  002DBA  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12327  002DBC  ECD8  F020         	call	___aodiv	;wreg free
 12328  002DC0  C001  F036         	movff	?___aodiv,dtoa@n
 12329  002DC4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12330  002DC8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12331  002DCC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12332  002DD0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12333  002DD4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12334  002DD8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12335  002DDC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12336  002DE0                     l3776:
 12337                           
 12338                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12339  002DE0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12340  002DE2  EFFB  F016         	goto	u3141
 12341  002DE6  503F               	movf	(dtoa@i+1)^0,w,c
 12342  002DE8  E108               	bnz	u3140
 12343  002DEA  043E               	decf	dtoa@i^0,w,c
 12344  002DEC  A0D8               	btfss	status,0,c
 12345  002DEE  EFFB  F016         	goto	u3141
 12346  002DF2  EFFD  F016         	goto	u3140
 12347  002DF6                     u3141:
 12348  002DF6  EF2E  F017         	goto	l3786
 12349  002DFA                     u3140:
 12350  002DFA  5036               	movf	dtoa@n^0,w,c
 12351  002DFC  1037               	iorwf	(dtoa@n+1)^0,w,c
 12352  002DFE  1038               	iorwf	(dtoa@n+2)^0,w,c
 12353  002E00  1039               	iorwf	(dtoa@n+3)^0,w,c
 12354  002E02  103A               	iorwf	(dtoa@n+4)^0,w,c
 12355  002E04  103B               	iorwf	(dtoa@n+5)^0,w,c
 12356  002E06  103C               	iorwf	(dtoa@n+6)^0,w,c
 12357  002E08  103D               	iorwf	(dtoa@n+7)^0,w,c
 12358  002E0A  A4D8               	btfss	status,2,c
 12359  002E0C  EF0A  F017         	goto	u3151
 12360  002E10  EF0C  F017         	goto	u3150
 12361  002E14                     u3151:
 12362  002E14  EF74  F016         	goto	l3766
 12363  002E18                     u3150:
 12364  002E18  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12365  002E1A  EF19  F017         	goto	u3160
 12366  002E1E  5031               	movf	(dtoa@p+1)^0,w,c
 12367  002E20  E106               	bnz	u3161
 12368  002E22  0430               	decf	dtoa@p^0,w,c
 12369  002E24  B0D8               	btfsc	status,0,c
 12370  002E26  EF17  F017         	goto	u3161
 12371  002E2A  EF19  F017         	goto	u3160
 12372  002E2E                     u3161:
 12373  002E2E  EF74  F016         	goto	l3766
 12374  002E32                     u3160:
 12375  002E32  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12376  002E34  EF24  F017         	goto	u3171
 12377  002E38  5033               	movf	(dtoa@w+1)^0,w,c
 12378  002E3A  E108               	bnz	u3170
 12379  002E3C  0432               	decf	dtoa@w^0,w,c
 12380  002E3E  A0D8               	btfss	status,0,c
 12381  002E40  EF24  F017         	goto	u3171
 12382  002E44  EF26  F017         	goto	u3170
 12383  002E48                     u3171:
 12384  002E48  EF2E  F017         	goto	l3786
 12385  002E4C                     u3170:
 12386  002E4C  0101               	movlb	1	; () banked
 12387  002E4E  B35A               	btfsc	_flags& (0+255),1,b
 12388  002E50  EF2C  F017         	goto	u3181
 12389  002E54  EF2E  F017         	goto	u3180
 12390  002E58                     u3181:
 12391  002E58  EF74  F016         	goto	l3766
 12392  002E5C                     u3180:
 12393  002E5C                     l3786:
 12394                           
 12395                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12396  002E5C  5034               	movf	dtoa@s^0,w,c
 12397  002E5E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12398  002E60  A4D8               	btfss	status,2,c
 12399  002E62  EF35  F017         	goto	u3191
 12400  002E66  EF37  F017         	goto	u3190
 12401  002E6A                     u3191:
 12402  002E6A  EF3F  F017         	goto	l3790
 12403  002E6E                     u3190:
 12404  002E6E  0101               	movlb	1	; () banked
 12405  002E70  A55A               	btfss	_flags& (0+255),2,b
 12406  002E72  EF3D  F017         	goto	u3201
 12407  002E76  EF3F  F017         	goto	u3200
 12408  002E7A                     u3201:
 12409  002E7A  EF5D  F017         	goto	l3800
 12410  002E7E                     u3200:
 12411  002E7E                     l3790:
 12412                           
 12413                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12414  002E7E  063E               	decf	dtoa@i^0,f,c
 12415  002E80  A0D8               	btfss	status,0,c
 12416  002E82  063F               	decf	(dtoa@i+1)^0,f,c
 12417  002E84                     
 12418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12419  002E84  5034               	movf	dtoa@s^0,w,c
 12420  002E86  1035               	iorwf	(dtoa@s+1)^0,w,c
 12421  002E88  A4D8               	btfss	status,2,c
 12422  002E8A  EF49  F017         	goto	u3211
 12423  002E8E  EF4B  F017         	goto	u3210
 12424  002E92                     u3211:
 12425  002E92  EF51  F017         	goto	l3796
 12426  002E96                     u3210:
 12427  002E96  0E00               	movlw	0
 12428  002E98  6E2F               	movwf	(_dtoa$2869+1)^0,c
 12429  002E9A  0E2B               	movlw	43
 12430  002E9C  6E2E               	movwf	_dtoa$2869^0,c
 12431  002E9E  EF55  F017         	goto	l3798
 12432  002EA2                     l3796:
 12433  002EA2  0E00               	movlw	0
 12434  002EA4  6E2F               	movwf	(_dtoa$2869+1)^0,c
 12435  002EA6  0E2D               	movlw	45
 12436  002EA8  6E2E               	movwf	_dtoa$2869^0,c
 12437  002EAA                     l3798:
 12438  002EAA  0E68               	movlw	low _dbuf
 12439  002EAC  243E               	addwf	dtoa@i^0,w,c
 12440  002EAE  6ED9               	movwf	fsr2l,c
 12441  002EB0  0E01               	movlw	high _dbuf
 12442  002EB2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12443  002EB4  6EDA               	movwf	fsr2h,c
 12444  002EB6  C02E  FFDF         	movff	_dtoa$2869,indf2
 12445  002EBA                     l3800:
 12446                           
 12447                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12448  002EBA  C01C  F011         	movff	dtoa@fp,pad@fp
 12449  002EBE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12450  002EC2  0E68               	movlw	low _dbuf
 12451  002EC4  243E               	addwf	dtoa@i^0,w,c
 12452  002EC6  6E13               	movwf	pad@buf^0,c
 12453  002EC8  0E01               	movlw	high _dbuf
 12454  002ECA  203F               	addwfc	(dtoa@i+1)^0,w,c
 12455  002ECC  6E14               	movwf	(pad@buf+1)^0,c
 12456  002ECE  C032  F015         	movff	dtoa@w,pad@p
 12457  002ED2  C033  F016         	movff	dtoa@w+1,pad@p+1
 12458  002ED6  EC45  F026         	call	_pad	;wreg free
 12459  002EDA  C011  F01C         	movff	?_pad,?_dtoa
 12460  002EDE  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12461  002EE2  0012               	return		;funcret
 12462  002EE4                     __end_of_dtoa:
 12463                           	callstack 0
 12464                           
 12465 ;; *************** function _pad *****************
 12466 ;; Defined at:
 12467 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12468 ;; Parameters:    Size  Location     Type
 12469 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12470 ;;		 -> sprintf@f(11), 
 12471 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12472 ;;		 -> dbuf(32), 
 12473 ;;  p               2   20[COMRAM] int 
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;  w               2   25[COMRAM] int 
 12476 ;;  i               2   23[COMRAM] int 
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  2   16[COMRAM] int 
 12479 ;; Registers used:
 12480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12486 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12489 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;Total ram usage:       11 bytes
 12491 ;; Hardware stack levels used: 1
 12492 ;; Hardware stack levels required when called: 4
 12493 ;; This function calls:
 12494 ;;		_fputc
 12495 ;;		_fputs
 12496 ;;		_strlen
 12497 ;; This function is called by:
 12498 ;;		_dtoa
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text62
 12503  004C8A                     __ptext62:
 12504                           	callstack 0
 12505  004C8A                     _pad:
 12506                           	callstack 20
 12507  004C8A                     
 12508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12509  004C8A  0101               	movlb	1	; () banked
 12510  004C8C  A15A               	btfss	_flags& (0+255),0,b
 12511  004C8E  EF4B  F026         	goto	u2961
 12512  004C92  EF4D  F026         	goto	u2960
 12513  004C96                     u2961:
 12514  004C96  EF57  F026         	goto	l3670
 12515  004C9A                     u2960:
 12516  004C9A                     
 12517                           ; BSR set to: 1
 12518                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12519  004C9A  C013  F00A         	movff	pad@buf,fputs@s
 12520  004C9E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12521  004CA2  C011  F00C         	movff	pad@fp,fputs@fp
 12522  004CA6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12523  004CAA  EC11  F02A         	call	_fputs	;wreg free
 12524  004CAE                     l3670:
 12525                           
 12526                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12527  004CAE  BE16               	btfsc	(pad@p+1)^0,7,c
 12528  004CB0  EF5C  F026         	goto	u2971
 12529  004CB4  EF5E  F026         	goto	u2970
 12530  004CB8                     u2971:
 12531  004CB8  EF64  F026         	goto	l3674
 12532  004CBC                     u2970:
 12533  004CBC  C015  F01A         	movff	pad@p,pad@w
 12534  004CC0  C016  F01B         	movff	pad@p+1,pad@w+1
 12535  004CC4  EF68  F026         	goto	l1456
 12536  004CC8                     l3674:
 12537  004CC8  0E00               	movlw	0
 12538  004CCA  6E1B               	movwf	(pad@w+1)^0,c
 12539  004CCC  0E00               	movlw	0
 12540  004CCE  6E1A               	movwf	pad@w^0,c
 12541  004CD0                     l1456:
 12542                           
 12543                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12544  004CD0  0E00               	movlw	0
 12545  004CD2  6E19               	movwf	(pad@i+1)^0,c
 12546  004CD4  0E00               	movlw	0
 12547  004CD6  6E18               	movwf	pad@i^0,c
 12548                           
 12549                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12550  004CD8  EF7A  F026         	goto	l3680
 12551  004CDC                     l3676:
 12552                           
 12553                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12554  004CDC  0E00               	movlw	0
 12555  004CDE  6E02               	movwf	(fputc@c+1)^0,c
 12556  004CE0  0E20               	movlw	32
 12557  004CE2  6E01               	movwf	fputc@c^0,c
 12558  004CE4  C011  F003         	movff	pad@fp,fputc@fp
 12559  004CE8  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12560  004CEC  EC7D  F025         	call	_fputc	;wreg free
 12561  004CF0                     
 12562                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12563  004CF0  4A18               	infsnz	pad@i^0,f,c
 12564  004CF2  2A19               	incf	(pad@i+1)^0,f,c
 12565  004CF4                     l3680:
 12566                           
 12567                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12568  004CF4  501A               	movf	pad@w^0,w,c
 12569  004CF6  5C18               	subwf	pad@i^0,w,c
 12570  004CF8  5019               	movf	(pad@i+1)^0,w,c
 12571  004CFA  0A80               	xorlw	128
 12572  004CFC  6E17               	movwf	??_pad^0,c
 12573  004CFE  501B               	movf	(pad@w+1)^0,w,c
 12574  004D00  0A80               	xorlw	128
 12575  004D02  5817               	subwfb	??_pad^0,w,c
 12576  004D04  A0D8               	btfss	status,0,c
 12577  004D06  EF87  F026         	goto	u2981
 12578  004D0A  EF89  F026         	goto	u2980
 12579  004D0E                     u2981:
 12580  004D0E  EF6E  F026         	goto	l3676
 12581  004D12                     u2980:
 12582  004D12                     
 12583                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12584  004D12  0101               	movlb	1	; () banked
 12585  004D14  B15A               	btfsc	_flags& (0+255),0,b
 12586  004D16  EF8F  F026         	goto	u2991
 12587  004D1A  EF91  F026         	goto	u2990
 12588  004D1E                     u2991:
 12589  004D1E  EF9B  F026         	goto	l3684
 12590  004D22                     u2990:
 12591  004D22                     
 12592                           ; BSR set to: 1
 12593                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12594  004D22  C013  F00A         	movff	pad@buf,fputs@s
 12595  004D26  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12596  004D2A  C011  F00C         	movff	pad@fp,fputs@fp
 12597  004D2E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12598  004D32  EC11  F02A         	call	_fputs	;wreg free
 12599  004D36                     l3684:
 12600                           
 12601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12602  004D36  C013  F001         	movff	pad@buf,strlen@s
 12603  004D3A  C014  F002         	movff	pad@buf+1,strlen@s+1
 12604  004D3E  EC4E  F02B         	call	_strlen	;wreg free
 12605  004D42  501A               	movf	pad@w^0,w,c
 12606  004D44  2401               	addwf	?_strlen^0,w,c
 12607  004D46  6E11               	movwf	?_pad^0,c
 12608  004D48  501B               	movf	(pad@w+1)^0,w,c
 12609  004D4A  2002               	addwfc	(?_strlen+1)^0,w,c
 12610  004D4C  6E12               	movwf	(?_pad+1)^0,c
 12611  004D4E  0012               	return		;funcret
 12612  004D50                     __end_of_pad:
 12613                           	callstack 0
 12614                           
 12615 ;; *************** function _strlen *****************
 12616 ;; Defined at:
 12617 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12618 ;; Parameters:    Size  Location     Type
 12619 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12620 ;;		 -> dbuf(32), 
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12623 ;;		 -> dbuf(32), 
 12624 ;; Return value:  Size  Location     Type
 12625 ;;                  2    0[COMRAM] unsigned int 
 12626 ;; Registers used:
 12627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12628 ;; Tracked objects:
 12629 ;;		On entry : 0/0
 12630 ;;		On exit  : 0/0
 12631 ;;		Unchanged: 0/0
 12632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12634 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12637 ;;Total ram usage:        4 bytes
 12638 ;; Hardware stack levels used: 1
 12639 ;; Hardware stack levels required when called: 1
 12640 ;; This function calls:
 12641 ;;		Nothing
 12642 ;; This function is called by:
 12643 ;;		_pad
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text63
 12648  00569C                     __ptext63:
 12649                           	callstack 0
 12650  00569C                     _strlen:
 12651                           	callstack 22
 12652  00569C  C001  F003         	movff	strlen@s,strlen@a
 12653  0056A0  C002  F004         	movff	strlen@s+1,strlen@a+1
 12654  0056A4  EF56  F02B         	goto	l3580
 12655  0056A8                     l3578:
 12656  0056A8  4A01               	infsnz	strlen@s^0,f,c
 12657  0056AA  2A02               	incf	(strlen@s+1)^0,f,c
 12658  0056AC                     l3580:
 12659  0056AC  C001  FFD9         	movff	strlen@s,fsr2l
 12660  0056B0  C002  FFDA         	movff	strlen@s+1,fsr2h
 12661  0056B4  50DF               	movf	indf2,w,c
 12662  0056B6  A4D8               	btfss	status,2,c
 12663  0056B8  EF60  F02B         	goto	u2821
 12664  0056BC  EF62  F02B         	goto	u2820
 12665  0056C0                     u2821:
 12666  0056C0  EF54  F02B         	goto	l3578
 12667  0056C4                     u2820:
 12668  0056C4  5003               	movf	strlen@a^0,w,c
 12669  0056C6  5C01               	subwf	strlen@s^0,w,c
 12670  0056C8  6E01               	movwf	?_strlen^0,c
 12671  0056CA  5004               	movf	(strlen@a+1)^0,w,c
 12672  0056CC  5802               	subwfb	(strlen@s+1)^0,w,c
 12673  0056CE  6E02               	movwf	(?_strlen+1)^0,c
 12674  0056D0  0012               	return		;funcret
 12675  0056D2                     __end_of_strlen:
 12676                           	callstack 0
 12677                           
 12678 ;; *************** function _fputs *****************
 12679 ;; Defined at:
 12680 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12683 ;;		 -> dbuf(32), 
 12684 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12685 ;;		 -> sprintf@f(11), 
 12686 ;; Auto vars:     Size  Location     Type
 12687 ;;  i               2   14[COMRAM] int 
 12688 ;;  c               1   13[COMRAM] unsigned char 
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  2    9[COMRAM] int 
 12691 ;; Registers used:
 12692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12699 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12702 ;;Total ram usage:        7 bytes
 12703 ;; Hardware stack levels used: 1
 12704 ;; Hardware stack levels required when called: 3
 12705 ;; This function calls:
 12706 ;;		_fputc
 12707 ;; This function is called by:
 12708 ;;		_pad
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           	psect	text64
 12713  005422                     __ptext64:
 12714                           	callstack 0
 12715  005422                     _fputs:
 12716                           	callstack 20
 12717  005422  0E00               	movlw	0
 12718  005424  6E10               	movwf	(fputs@i+1)^0,c
 12719  005426  0E00               	movlw	0
 12720  005428  6E0F               	movwf	fputs@i^0,c
 12721  00542A  EF22  F02A         	goto	l3574
 12722  00542E                     l3570:
 12723  00542E  C00E  F001         	movff	fputs@c,fputc@c
 12724  005432  6A02               	clrf	(fputc@c+1)^0,c
 12725  005434  C00C  F003         	movff	fputs@fp,fputc@fp
 12726  005438  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12727  00543C  EC7D  F025         	call	_fputc	;wreg free
 12728  005440  4A0F               	infsnz	fputs@i^0,f,c
 12729  005442  2A10               	incf	(fputs@i+1)^0,f,c
 12730  005444                     l3574:
 12731  005444  500F               	movf	fputs@i^0,w,c
 12732  005446  240A               	addwf	fputs@s^0,w,c
 12733  005448  6ED9               	movwf	fsr2l,c
 12734  00544A  5010               	movf	(fputs@i+1)^0,w,c
 12735  00544C  200B               	addwfc	(fputs@s+1)^0,w,c
 12736  00544E  6EDA               	movwf	fsr2h,c
 12737  005450  50DF               	movf	indf2,w,c
 12738  005452  6E0E               	movwf	fputs@c^0,c
 12739  005454  500E               	movf	fputs@c^0,w,c
 12740  005456  A4D8               	btfss	status,2,c
 12741  005458  EF30  F02A         	goto	u2811
 12742  00545C  EF32  F02A         	goto	u2810
 12743  005460                     u2811:
 12744  005460  EF17  F02A         	goto	l3570
 12745  005464                     u2810:
 12746  005464  0012               	return		;funcret
 12747  005466                     __end_of_fputs:
 12748                           	callstack 0
 12749                           
 12750 ;; *************** function _fputc *****************
 12751 ;; Defined at:
 12752 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12753 ;; Parameters:    Size  Location     Type
 12754 ;;  c               2    0[COMRAM] int 
 12755 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12756 ;;		 -> sprintf@f(11), 
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;		None
 12759 ;; Return value:  Size  Location     Type
 12760 ;;                  2    0[COMRAM] int 
 12761 ;; Registers used:
 12762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12763 ;; Tracked objects:
 12764 ;;		On entry : 0/0
 12765 ;;		On exit  : 0/0
 12766 ;;		Unchanged: 0/0
 12767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12770 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12771 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12772 ;;Total ram usage:        9 bytes
 12773 ;; Hardware stack levels used: 1
 12774 ;; Hardware stack levels required when called: 2
 12775 ;; This function calls:
 12776 ;;		_putch
 12777 ;; This function is called by:
 12778 ;;		_pad
 12779 ;;		_vfpfcnvrt
 12780 ;;		_fputs
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           	psect	text65
 12785  004AFA                     __ptext65:
 12786                           	callstack 0
 12787  004AFA                     _fputc:
 12788                           	callstack 23
 12789  004AFA  5003               	movf	fputc@fp^0,w,c
 12790  004AFC  1004               	iorwf	(fputc@fp+1)^0,w,c
 12791  004AFE  B4D8               	btfsc	status,2,c
 12792  004B00  EF84  F025         	goto	u2771
 12793  004B04  EF86  F025         	goto	u2770
 12794  004B08                     u2771:
 12795  004B08  EF8F  F025         	goto	l3558
 12796  004B0C                     u2770:
 12797  004B0C  5003               	movf	fputc@fp^0,w,c
 12798  004B0E  1004               	iorwf	(fputc@fp+1)^0,w,c
 12799  004B10  A4D8               	btfss	status,2,c
 12800  004B12  EF8D  F025         	goto	u2781
 12801  004B16  EF8F  F025         	goto	u2780
 12802  004B1A                     u2781:
 12803  004B1A  EF94  F025         	goto	l3560
 12804  004B1E                     u2780:
 12805  004B1E                     l3558:
 12806  004B1E  5001               	movf	fputc@c^0,w,c
 12807  004B20  ECAF  F02C         	call	_putch
 12808  004B24  EFE1  F025         	goto	l1520
 12809  004B28                     l3560:
 12810  004B28  EE20 F009          	lfsr	2,9
 12811  004B2C  5003               	movf	fputc@fp^0,w,c
 12812  004B2E  26D9               	addwf	fsr2l,f,c
 12813  004B30  5004               	movf	(fputc@fp+1)^0,w,c
 12814  004B32  22DA               	addwfc	fsr2h,f,c
 12815  004B34  50DE               	movf	postinc2,w,c
 12816  004B36  10DE               	iorwf	postinc2,w,c
 12817  004B38  B4D8               	btfsc	status,2,c
 12818  004B3A  EFA1  F025         	goto	u2791
 12819  004B3E  EFA3  F025         	goto	u2790
 12820  004B42                     u2791:
 12821  004B42  EFBE  F025         	goto	l3564
 12822  004B46                     u2790:
 12823  004B46  EE20 F009          	lfsr	2,9
 12824  004B4A  5003               	movf	fputc@fp^0,w,c
 12825  004B4C  26D9               	addwf	fsr2l,f,c
 12826  004B4E  5004               	movf	(fputc@fp+1)^0,w,c
 12827  004B50  22DA               	addwfc	fsr2h,f,c
 12828  004B52  EE10 F003          	lfsr	1,3
 12829  004B56  5003               	movf	fputc@fp^0,w,c
 12830  004B58  26E1               	addwf	fsr1l,f,c
 12831  004B5A  5004               	movf	(fputc@fp+1)^0,w,c
 12832  004B5C  22E2               	addwfc	fsr1h,f,c
 12833  004B5E  50DE               	movf	postinc2,w,c
 12834  004B60  5CE6               	subwf	postinc1,w,c
 12835  004B62  50E6               	movf	postinc1,w,c
 12836  004B64  0A80               	xorlw	128
 12837  004B66  6E09               	movwf	(??_fputc+4)^0,c
 12838  004B68  50DE               	movf	postinc2,w,c
 12839  004B6A  0A80               	xorlw	128
 12840  004B6C  5809               	subwfb	(??_fputc+4)^0,w,c
 12841  004B6E  B0D8               	btfsc	status,0,c
 12842  004B70  EFBC  F025         	goto	u2801
 12843  004B74  EFBE  F025         	goto	u2800
 12844  004B78                     u2801:
 12845  004B78  EFE1  F025         	goto	l1520
 12846  004B7C                     u2800:
 12847  004B7C                     l3564:
 12848  004B7C  EE20 F003          	lfsr	2,3
 12849  004B80  5003               	movf	fputc@fp^0,w,c
 12850  004B82  26D9               	addwf	fsr2l,f,c
 12851  004B84  5004               	movf	(fputc@fp+1)^0,w,c
 12852  004B86  22DA               	addwfc	fsr2h,f,c
 12853  004B88  CFDE F005          	movff	postinc2,??_fputc
 12854  004B8C  CFDD F006          	movff	postdec2,??_fputc+1
 12855  004B90  C003  FFD9         	movff	fputc@fp,fsr2l
 12856  004B94  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12857  004B98  CFDE F007          	movff	postinc2,??_fputc+2
 12858  004B9C  CFDD F008          	movff	postdec2,??_fputc+3
 12859  004BA0  5005               	movf	??_fputc^0,w,c
 12860  004BA2  2407               	addwf	(??_fputc+2)^0,w,c
 12861  004BA4  6ED9               	movwf	fsr2l,c
 12862  004BA6  5006               	movf	(??_fputc+1)^0,w,c
 12863  004BA8  2008               	addwfc	(??_fputc+3)^0,w,c
 12864  004BAA  6EDA               	movwf	fsr2h,c
 12865  004BAC  C001  FFDF         	movff	fputc@c,indf2
 12866  004BB0  EE20 F003          	lfsr	2,3
 12867  004BB4  5003               	movf	fputc@fp^0,w,c
 12868  004BB6  26D9               	addwf	fsr2l,f,c
 12869  004BB8  5004               	movf	(fputc@fp+1)^0,w,c
 12870  004BBA  22DA               	addwfc	fsr2h,f,c
 12871  004BBC  2ADE               	incf	postinc2,f,c
 12872  004BBE  0E00               	movlw	0
 12873  004BC0  22DD               	addwfc	postdec2,f,c
 12874  004BC2                     l1520:
 12875  004BC2  0012               	return		;funcret
 12876  004BC4                     __end_of_fputc:
 12877                           	callstack 0
 12878                           
 12879 ;; *************** function _putch *****************
 12880 ;; Defined at:
 12881 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;  c               1    wreg     unsigned char 
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;  c               1    0[COMRAM] unsigned char 
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		wreg
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;Total ram usage:        0 bytes
 12900 ;; Hardware stack levels used: 1
 12901 ;; Hardware stack levels required when called: 1
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_fputc
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           	psect	text66
 12910  00595E                     __ptext66:
 12911                           	callstack 0
 12912  00595E                     _putch:
 12913                           	callstack 23
 12914  00595E  0012               	return		;funcret
 12915  005960                     __end_of_putch:
 12916                           	callstack 0
 12917                           
 12918 ;; *************** function _abs *****************
 12919 ;; Defined at:
 12920 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;  a               2   18[COMRAM] int 
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  2   18[COMRAM] int 
 12927 ;; Registers used:
 12928 ;;		wreg, status,2, status,0
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12934 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12936 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12937 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12938 ;;Total ram usage:        4 bytes
 12939 ;; Hardware stack levels used: 1
 12940 ;; Hardware stack levels required when called: 1
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_dtoa
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text67
 12949  0055B0                     __ptext67:
 12950                           	callstack 0
 12951  0055B0                     _abs:
 12952                           	callstack 23
 12953  0055B0  BE14               	btfsc	(abs@a+1)^0,7,c
 12954  0055B2  EFE5  F02A         	goto	u3000
 12955  0055B6  5014               	movf	(abs@a+1)^0,w,c
 12956  0055B8  E106               	bnz	u3001
 12957  0055BA  0413               	decf	abs@a^0,w,c
 12958  0055BC  B0D8               	btfsc	status,0,c
 12959  0055BE  EFE3  F02A         	goto	u3001
 12960  0055C2  EFE5  F02A         	goto	u3000
 12961  0055C6                     u3001:
 12962  0055C6  EFF3  F02A         	goto	l1505
 12963  0055CA                     u3000:
 12964  0055CA  C013  F015         	movff	abs@a,??_abs
 12965  0055CE  C014  F016         	movff	abs@a+1,??_abs+1
 12966  0055D2  1E15               	comf	??_abs^0,f,c
 12967  0055D4  1E16               	comf	(??_abs+1)^0,f,c
 12968  0055D6  4A15               	infsnz	??_abs^0,f,c
 12969  0055D8  2A16               	incf	(??_abs+1)^0,f,c
 12970  0055DA  C015  F013         	movff	??_abs,?_abs
 12971  0055DE  C016  F014         	movff	??_abs+1,?_abs+1
 12972  0055E2  EFF7  F02A         	goto	l1508
 12973  0055E6                     l1505:
 12974  0055E6  C013  F013         	movff	abs@a,?_abs
 12975  0055EA  C014  F014         	movff	abs@a+1,?_abs+1
 12976  0055EE                     l1508:
 12977  0055EE  0012               	return		;funcret
 12978  0055F0                     __end_of_abs:
 12979                           	callstack 0
 12980                           
 12981 ;; *************** function ___aomod *****************
 12982 ;; Defined at:
 12983 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 12984 ;; Parameters:    Size  Location     Type
 12985 ;;  dividend        8    0[COMRAM] long long 
 12986 ;;  divisor         8    8[COMRAM] long long 
 12987 ;; Auto vars:     Size  Location     Type
 12988 ;;  sign            1   17[COMRAM] unsigned char 
 12989 ;;  counter         1   16[COMRAM] unsigned char 
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  8    0[COMRAM] long long 
 12992 ;; Registers used:
 12993 ;;		wreg, status,2, status,0
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12999 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13003 ;;Total ram usage:       18 bytes
 13004 ;; Hardware stack levels used: 1
 13005 ;; Hardware stack levels required when called: 1
 13006 ;; This function calls:
 13007 ;;		Nothing
 13008 ;; This function is called by:
 13009 ;;		_dtoa
 13010 ;; This function uses a non-reentrant model
 13011 ;;
 13012                           
 13013                           	psect	text68
 13014  004338                     __ptext68:
 13015                           	callstack 0
 13016  004338                     ___aomod:
 13017                           	callstack 23
 13018  004338  0E00               	movlw	0
 13019  00433A  6E12               	movwf	___aomod@sign^0,c
 13020  00433C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13021  00433E  EFA5  F021         	goto	u2900
 13022  004342  EFA3  F021         	goto	u2901
 13023  004346                     u2901:
 13024  004346  EFB7  F021         	goto	l3638
 13025  00434A                     u2900:
 13026  00434A  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13027  00434C  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13028  00434E  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13029  004350  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13030  004352  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13031  004354  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13032  004356  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13033  004358  6C01               	negf	___aomod@dividend^0,c
 13034  00435A  0E00               	movlw	0
 13035  00435C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13036  00435E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13037  004360  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13038  004362  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13039  004364  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13040  004366  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13041  004368  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13042  00436A  0E01               	movlw	1
 13043  00436C  6E12               	movwf	___aomod@sign^0,c
 13044  00436E                     l3638:
 13045  00436E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13046  004370  EFBE  F021         	goto	u2910
 13047  004374  EFBC  F021         	goto	u2911
 13048  004378                     u2911:
 13049  004378  EFCE  F021         	goto	l3642
 13050  00437C                     u2910:
 13051  00437C  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13052  00437E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13053  004380  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13054  004382  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13055  004384  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13056  004386  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13057  004388  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13058  00438A  6C09               	negf	___aomod@divisor^0,c
 13059  00438C  0E00               	movlw	0
 13060  00438E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13061  004390  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13062  004392  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13063  004394  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13064  004396  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13065  004398  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13066  00439A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13067  00439C                     l3642:
 13068  00439C  5009               	movf	___aomod@divisor^0,w,c
 13069  00439E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13070  0043A0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13071  0043A2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13072  0043A4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13073  0043A6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13074  0043A8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13075  0043AA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13076  0043AC  B4D8               	btfsc	status,2,c
 13077  0043AE  EFDB  F021         	goto	u2921
 13078  0043B2  EFDD  F021         	goto	u2920
 13079  0043B6                     u2921:
 13080  0043B6  EF25  F022         	goto	l3658
 13081  0043BA                     u2920:
 13082  0043BA  0E01               	movlw	1
 13083  0043BC  6E11               	movwf	___aomod@counter^0,c
 13084  0043BE  EFEB  F021         	goto	l3648
 13085  0043C2                     l3646:
 13086  0043C2  90D8               	bcf	status,0,c
 13087  0043C4  3609               	rlcf	___aomod@divisor^0,f,c
 13088  0043C6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13089  0043C8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13090  0043CA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13091  0043CC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13092  0043CE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13093  0043D0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13094  0043D2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13095  0043D4  2A11               	incf	___aomod@counter^0,f,c
 13096  0043D6                     l3648:
 13097  0043D6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13098  0043D8  EFF0  F021         	goto	u2931
 13099  0043DC  EFF2  F021         	goto	u2930
 13100  0043E0                     u2931:
 13101  0043E0  EFE1  F021         	goto	l3646
 13102  0043E4                     u2930:
 13103  0043E4                     l3650:
 13104  0043E4  5009               	movf	___aomod@divisor^0,w,c
 13105  0043E6  5C01               	subwf	___aomod@dividend^0,w,c
 13106  0043E8  500A               	movf	(___aomod@divisor+1)^0,w,c
 13107  0043EA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13108  0043EC  500B               	movf	(___aomod@divisor+2)^0,w,c
 13109  0043EE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13110  0043F0  500C               	movf	(___aomod@divisor+3)^0,w,c
 13111  0043F2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13112  0043F4  500D               	movf	(___aomod@divisor+4)^0,w,c
 13113  0043F6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13114  0043F8  500E               	movf	(___aomod@divisor+5)^0,w,c
 13115  0043FA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13116  0043FC  500F               	movf	(___aomod@divisor+6)^0,w,c
 13117  0043FE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13118  004400  5010               	movf	(___aomod@divisor+7)^0,w,c
 13119  004402  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13120  004404  A0D8               	btfss	status,0,c
 13121  004406  EF07  F022         	goto	u2941
 13122  00440A  EF09  F022         	goto	u2940
 13123  00440E                     u2941:
 13124  00440E  EF19  F022         	goto	l3654
 13125  004412                     u2940:
 13126  004412  5009               	movf	___aomod@divisor^0,w,c
 13127  004414  5E01               	subwf	___aomod@dividend^0,f,c
 13128  004416  500A               	movf	(___aomod@divisor+1)^0,w,c
 13129  004418  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13130  00441A  500B               	movf	(___aomod@divisor+2)^0,w,c
 13131  00441C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13132  00441E  500C               	movf	(___aomod@divisor+3)^0,w,c
 13133  004420  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13134  004422  500D               	movf	(___aomod@divisor+4)^0,w,c
 13135  004424  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13136  004426  500E               	movf	(___aomod@divisor+5)^0,w,c
 13137  004428  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13138  00442A  500F               	movf	(___aomod@divisor+6)^0,w,c
 13139  00442C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13140  00442E  5010               	movf	(___aomod@divisor+7)^0,w,c
 13141  004430  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13142  004432                     l3654:
 13143  004432  90D8               	bcf	status,0,c
 13144  004434  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13145  004436  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13146  004438  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13147  00443A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13148  00443C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13149  00443E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13150  004440  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13151  004442  3209               	rrcf	___aomod@divisor^0,f,c
 13152  004444  2E11               	decfsz	___aomod@counter^0,f,c
 13153  004446  EFF2  F021         	goto	l3650
 13154  00444A                     l3658:
 13155  00444A  5012               	movf	___aomod@sign^0,w,c
 13156  00444C  B4D8               	btfsc	status,2,c
 13157  00444E  EF2B  F022         	goto	u2951
 13158  004452  EF2D  F022         	goto	u2950
 13159  004456                     u2951:
 13160  004456  EF3D  F022         	goto	l3662
 13161  00445A                     u2950:
 13162  00445A  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13163  00445C  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13164  00445E  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13165  004460  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13166  004462  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13167  004464  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13168  004466  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13169  004468  6C01               	negf	___aomod@dividend^0,c
 13170  00446A  0E00               	movlw	0
 13171  00446C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13172  00446E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13173  004470  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13174  004472  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13175  004474  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13176  004476  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13177  004478  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13178  00447A                     l3662:
 13179  00447A  C001  F001         	movff	___aomod@dividend,?___aomod
 13180  00447E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13181  004482  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13182  004486  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13183  00448A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13184  00448E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13185  004492  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13186  004496  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13187  00449A  0012               	return		;funcret
 13188  00449C                     __end_of___aomod:
 13189                           	callstack 0
 13190                           
 13191 ;; *************** function ___aodiv *****************
 13192 ;; Defined at:
 13193 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13194 ;; Parameters:    Size  Location     Type
 13195 ;;  dividend        8    0[COMRAM] long long 
 13196 ;;  divisor         8    8[COMRAM] long long 
 13197 ;; Auto vars:     Size  Location     Type
 13198 ;;  quotient        8   18[COMRAM] long long 
 13199 ;;  sign            1   17[COMRAM] unsigned char 
 13200 ;;  counter         1   16[COMRAM] unsigned char 
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  8    0[COMRAM] long long 
 13203 ;; Registers used:
 13204 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13210 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13211 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13213 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13214 ;;Total ram usage:       26 bytes
 13215 ;; Hardware stack levels used: 1
 13216 ;; Hardware stack levels required when called: 1
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_dtoa
 13221 ;; This function uses a non-reentrant model
 13222 ;;
 13223                           
 13224                           	psect	text69
 13225  0041B0                     __ptext69:
 13226                           	callstack 0
 13227  0041B0                     ___aodiv:
 13228                           	callstack 23
 13229  0041B0  0E00               	movlw	0
 13230  0041B2  6E12               	movwf	___aodiv@sign^0,c
 13231  0041B4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13232  0041B6  EFE1  F020         	goto	u2830
 13233  0041BA  EFDF  F020         	goto	u2831
 13234  0041BE                     u2831:
 13235  0041BE  EFF3  F020         	goto	l3594
 13236  0041C2                     u2830:
 13237  0041C2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13238  0041C4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13239  0041C6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13240  0041C8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13241  0041CA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13242  0041CC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13243  0041CE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13244  0041D0  6C09               	negf	___aodiv@divisor^0,c
 13245  0041D2  0E00               	movlw	0
 13246  0041D4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13247  0041D6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13248  0041D8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13249  0041DA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13250  0041DC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13251  0041DE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13252  0041E0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13253  0041E2  0E01               	movlw	1
 13254  0041E4  6E12               	movwf	___aodiv@sign^0,c
 13255  0041E6                     l3594:
 13256  0041E6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13257  0041E8  EFFA  F020         	goto	u2840
 13258  0041EC  EFF8  F020         	goto	u2841
 13259  0041F0                     u2841:
 13260  0041F0  EF0C  F021         	goto	l3600
 13261  0041F4                     u2840:
 13262  0041F4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13263  0041F6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13264  0041F8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13265  0041FA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13266  0041FC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13267  0041FE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13268  004200  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13269  004202  6C01               	negf	___aodiv@dividend^0,c
 13270  004204  0E00               	movlw	0
 13271  004206  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13272  004208  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13273  00420A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13274  00420C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13275  00420E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13276  004210  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13277  004212  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13278  004214  0E01               	movlw	1
 13279  004216  1A12               	xorwf	___aodiv@sign^0,f,c
 13280  004218                     l3600:
 13281  004218  EE20  F013         	lfsr	2,___aodiv@quotient
 13282  00421C  0E07               	movlw	7
 13283  00421E                     u2851:
 13284  00421E  6ADE               	clrf	postinc2,c
 13285  004220  06E8               	decf	wreg,f,c
 13286  004222  E2FD               	bc	u2851
 13287  004224  5009               	movf	___aodiv@divisor^0,w,c
 13288  004226  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13289  004228  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13290  00422A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13291  00422C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13292  00422E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13293  004230  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13294  004232  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13295  004234  B4D8               	btfsc	status,2,c
 13296  004236  EF1F  F021         	goto	u2861
 13297  00423A  EF21  F021         	goto	u2860
 13298  00423E                     u2861:
 13299  00423E  EF73  F021         	goto	l3622
 13300  004242                     u2860:
 13301  004242  0E01               	movlw	1
 13302  004244  6E11               	movwf	___aodiv@counter^0,c
 13303  004246  EF2F  F021         	goto	l3608
 13304  00424A                     l3606:
 13305  00424A  90D8               	bcf	status,0,c
 13306  00424C  3609               	rlcf	___aodiv@divisor^0,f,c
 13307  00424E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13308  004250  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13309  004252  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13310  004254  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13311  004256  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13312  004258  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13313  00425A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13314  00425C  2A11               	incf	___aodiv@counter^0,f,c
 13315  00425E                     l3608:
 13316  00425E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13317  004260  EF34  F021         	goto	u2871
 13318  004264  EF36  F021         	goto	u2870
 13319  004268                     u2871:
 13320  004268  EF25  F021         	goto	l3606
 13321  00426C                     u2870:
 13322  00426C                     l3610:
 13323  00426C  90D8               	bcf	status,0,c
 13324  00426E  3613               	rlcf	___aodiv@quotient^0,f,c
 13325  004270  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13326  004272  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13327  004274  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13328  004276  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13329  004278  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13330  00427A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13331  00427C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13332  00427E  5009               	movf	___aodiv@divisor^0,w,c
 13333  004280  5C01               	subwf	___aodiv@dividend^0,w,c
 13334  004282  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13335  004284  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13336  004286  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13337  004288  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13338  00428A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13339  00428C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13340  00428E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13341  004290  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13342  004292  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13343  004294  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13344  004296  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13345  004298  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13346  00429A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13347  00429C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13348  00429E  A0D8               	btfss	status,0,c
 13349  0042A0  EF54  F021         	goto	u2881
 13350  0042A4  EF56  F021         	goto	u2880
 13351  0042A8                     u2881:
 13352  0042A8  EF67  F021         	goto	l3618
 13353  0042AC                     u2880:
 13354  0042AC  5009               	movf	___aodiv@divisor^0,w,c
 13355  0042AE  5E01               	subwf	___aodiv@dividend^0,f,c
 13356  0042B0  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13357  0042B2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13358  0042B4  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13359  0042B6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13360  0042B8  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13361  0042BA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13362  0042BC  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13363  0042BE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13364  0042C0  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13365  0042C2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13366  0042C4  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13367  0042C6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13368  0042C8  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13369  0042CA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13370  0042CC  8013               	bsf	___aodiv@quotient^0,0,c
 13371  0042CE                     l3618:
 13372  0042CE  90D8               	bcf	status,0,c
 13373  0042D0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13374  0042D2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13375  0042D4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13376  0042D6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13377  0042D8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13378  0042DA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13379  0042DC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13380  0042DE  3209               	rrcf	___aodiv@divisor^0,f,c
 13381  0042E0  2E11               	decfsz	___aodiv@counter^0,f,c
 13382  0042E2  EF36  F021         	goto	l3610
 13383  0042E6                     l3622:
 13384  0042E6  5012               	movf	___aodiv@sign^0,w,c
 13385  0042E8  B4D8               	btfsc	status,2,c
 13386  0042EA  EF79  F021         	goto	u2891
 13387  0042EE  EF7B  F021         	goto	u2890
 13388  0042F2                     u2891:
 13389  0042F2  EF8B  F021         	goto	l3626
 13390  0042F6                     u2890:
 13391  0042F6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13392  0042F8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13393  0042FA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13394  0042FC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13395  0042FE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13396  004300  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13397  004302  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13398  004304  6C13               	negf	___aodiv@quotient^0,c
 13399  004306  0E00               	movlw	0
 13400  004308  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13401  00430A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13402  00430C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13403  00430E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13404  004310  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13405  004312  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13406  004314  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13407  004316                     l3626:
 13408  004316  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13409  00431A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13410  00431E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13411  004322  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13412  004326  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13413  00432A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13414  00432E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13415  004332  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13416  004336  0012               	return		;funcret
 13417  004338                     __end_of___aodiv:
 13418                           	callstack 0
 13419                           
 13420 ;; *************** function _sendStringSerial4 *****************
 13421 ;; Defined at:
 13422 ;;		line 36 in file "serial.c"
 13423 ;; Parameters:    Size  Location     Type
 13424 ;;  string          2    1[COMRAM] PTR unsigned char 
 13425 ;;		 -> detect_color@buf(100), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;		None
 13428 ;; Return value:  Size  Location     Type
 13429 ;;                  1    wreg      void 
 13430 ;; Registers used:
 13431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13440 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13441 ;;Total ram usage:        2 bytes
 13442 ;; Hardware stack levels used: 1
 13443 ;; Hardware stack levels required when called: 2
 13444 ;; This function calls:
 13445 ;;		_sendCharSerial4
 13446 ;; This function is called by:
 13447 ;;		_color_display
 13448 ;;		_color_predict
 13449 ;;		_detect_color
 13450 ;;		_check_color_reading
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           	psect	text70
 13455  005706                     __ptext70:
 13456                           	callstack 0
 13457  005706                     _sendStringSerial4:
 13458                           	callstack 26
 13459  005706                     
 13460                           ;serial.c: 38:     while(*string != 0){
 13461  005706  EF8E  F02B         	goto	l4338
 13462  00570A                     l4334:
 13463                           
 13464                           ;serial.c: 39:   sendCharSerial4(*string++);}
 13465  00570A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13466  00570E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13467  005712  50DF               	movf	indf2,w,c
 13468  005714  EC7C  F02C         	call	_sendCharSerial4
 13469  005718  4A02               	infsnz	sendStringSerial4@string^0,f,c
 13470  00571A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 13471  00571C                     l4338:
 13472                           
 13473                           ;serial.c: 38:     while(*string != 0){
 13474  00571C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13475  005720  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13476  005724  50DF               	movf	indf2,w,c
 13477  005726  A4D8               	btfss	status,2,c
 13478  005728  EF98  F02B         	goto	u4041
 13479  00572C  EF9A  F02B         	goto	u4040
 13480  005730                     u4041:
 13481  005730  EF85  F02B         	goto	l4334
 13482  005734                     u4040:
 13483  005734  0012               	return		;funcret
 13484  005736                     __end_of_sendStringSerial4:
 13485                           	callstack 0
 13486                           
 13487 ;; *************** function _sendCharSerial4 *****************
 13488 ;; Defined at:
 13489 ;;		line 29 in file "serial.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;  charToSend      1    wreg     unsigned char 
 13492 ;; Auto vars:     Size  Location     Type
 13493 ;;  charToSend      1    0[COMRAM] unsigned char 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  1    wreg      void 
 13496 ;; Registers used:
 13497 ;;		wreg
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/0
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13507 ;;Total ram usage:        1 bytes
 13508 ;; Hardware stack levels used: 1
 13509 ;; Hardware stack levels required when called: 1
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_sendStringSerial4
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text71
 13518  0058F8                     __ptext71:
 13519                           	callstack 0
 13520  0058F8                     _sendCharSerial4:
 13521                           	callstack 26
 13522                           
 13523                           ;incstack = 0
 13524                           ;sendCharSerial4@charToSend stored from wreg
 13525  0058F8  6E01               	movwf	sendCharSerial4@charToSend^0,c
 13526  0058FA                     l404:
 13527  0058FA  010E               	movlb	14	; () banked
 13528  0058FC  A537               	btfss	55,2,b	;volatile
 13529  0058FE  EF83  F02C         	goto	u3771
 13530  005902  EF85  F02C         	goto	u3770
 13531  005906                     u3771:
 13532  005906  EF7D  F02C         	goto	l404
 13533  00590A                     u3770:
 13534  00590A                     
 13535                           ; BSR set to: 14
 13536                           ;serial.c: 31:     TX4REG = charToSend;
 13537  00590A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 13538  00590E                     
 13539                           ; BSR set to: 14
 13540  00590E  0012               	return		;funcret
 13541  005910                     __end_of_sendCharSerial4:
 13542                           	callstack 0
 13543                           
 13544 ;; *************** function _Timer0_init *****************
 13545 ;; Defined at:
 13546 ;;		line 7 in file "timers.c"
 13547 ;; Parameters:    Size  Location     Type
 13548 ;;		None
 13549 ;; Auto vars:     Size  Location     Type
 13550 ;;		None
 13551 ;; Return value:  Size  Location     Type
 13552 ;;                  1    wreg      void 
 13553 ;; Registers used:
 13554 ;;		wreg, status,2
 13555 ;; Tracked objects:
 13556 ;;		On entry : 0/0
 13557 ;;		On exit  : 0/0
 13558 ;;		Unchanged: 0/0
 13559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13564 ;;Total ram usage:        0 bytes
 13565 ;; Hardware stack levels used: 1
 13566 ;; Hardware stack levels required when called: 1
 13567 ;; This function calls:
 13568 ;;		Nothing
 13569 ;; This function is called by:
 13570 ;;		_main
 13571 ;; This function uses a non-reentrant model
 13572 ;;
 13573                           
 13574                           	psect	text72
 13575  0058DA                     __ptext72:
 13576                           	callstack 0
 13577  0058DA                     _Timer0_init:
 13578                           	callstack 29
 13579  0058DA                     
 13580                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13581  0058DA  50D6               	movf	214,w,c	;volatile
 13582  0058DC  0B1F               	andlw	-225
 13583  0058DE  0940               	iorlw	64
 13584  0058E0  6ED6               	movwf	214,c	;volatile
 13585  0058E2                     
 13586                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13587  0058E2  88D6               	bsf	214,4,c	;volatile
 13588                           
 13589                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13590  0058E4  50D6               	movf	214,w,c	;volatile
 13591  0058E6  0BF0               	andlw	-16
 13592  0058E8  0908               	iorlw	8
 13593  0058EA  6ED6               	movwf	214,c	;volatile
 13594  0058EC                     
 13595                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13596  0058EC  88D5               	bsf	213,4,c	;volatile
 13597                           
 13598                           ;timers.c: 16:     TMR0H=0b00001011;
 13599  0058EE  0E0B               	movlw	11
 13600  0058F0  6ED4               	movwf	212,c	;volatile
 13601                           
 13602                           ;timers.c: 17:     TMR0L=0b11011011;
 13603  0058F2  0EDB               	movlw	219
 13604  0058F4  6ED3               	movwf	211,c	;volatile
 13605  0058F6  0012               	return		;funcret
 13606  0058F8                     __end_of_Timer0_init:
 13607                           	callstack 0
 13608                           
 13609 ;; *************** function _Interrupts_init *****************
 13610 ;; Defined at:
 13611 ;;		line 9 in file "interrupts.c"
 13612 ;; Parameters:    Size  Location     Type
 13613 ;;		None
 13614 ;; Auto vars:     Size  Location     Type
 13615 ;;		None
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		None
 13620 ;; Tracked objects:
 13621 ;;		On entry : 0/0
 13622 ;;		On exit  : 0/0
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13629 ;;Total ram usage:        0 bytes
 13630 ;; Hardware stack levels used: 1
 13631 ;; Hardware stack levels required when called: 1
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		_main
 13636 ;; This function uses a non-reentrant model
 13637 ;;
 13638                           
 13639                           	psect	text73
 13640  005932                     __ptext73:
 13641                           	callstack 0
 13642  005932                     _Interrupts_init:
 13643                           	callstack 29
 13644  005932  8EF2               	bsf	242,7,c	;volatile
 13645                           
 13646                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13647  005934  8AF2               	bsf	242,5,c	;volatile
 13648                           
 13649                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13650  005936  8CF2               	bsf	242,6,c	;volatile
 13651                           
 13652                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13653  005938  010E               	movlb	14	; () banked
 13654  00593A  8B29               	bsf	41,5,b	;volatile
 13655  00593C                     
 13656                           ; BSR set to: 14
 13657  00593C  0012               	return		;funcret
 13658  00593E                     __end_of_Interrupts_init:
 13659                           	callstack 0
 13660                           
 13661 ;; *************** function _HighISR *****************
 13662 ;; Defined at:
 13663 ;;		line 21 in file "interrupts.c"
 13664 ;; Parameters:    Size  Location     Type
 13665 ;;		None
 13666 ;; Auto vars:     Size  Location     Type
 13667 ;;		None
 13668 ;; Return value:  Size  Location     Type
 13669 ;;                  1    wreg      void 
 13670 ;; Registers used:
 13671 ;;		status,2, status,0
 13672 ;; Tracked objects:
 13673 ;;		On entry : 0/0
 13674 ;;		On exit  : 0/0
 13675 ;;		Unchanged: 0/0
 13676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13681 ;;Total ram usage:        0 bytes
 13682 ;; Hardware stack levels used: 1
 13683 ;; This function calls:
 13684 ;;		Nothing
 13685 ;; This function is called by:
 13686 ;;		Interrupt level 2
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           
 13690                           	psect	intcode
 13691  000008                     __pintcode:
 13692                           	callstack 0
 13693  000008                     _HighISR:
 13694                           	callstack 19
 13695                           
 13696                           ; BSR set to: 14
 13697                           ;incstack = 0
 13698  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13699  00000A                     
 13700                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 13701  00000A  010E               	movlb	14	; () banked
 13702  00000C  AB33               	btfss	51,5,b	;volatile
 13703  00000E  EF0B  F000         	goto	i2u545_41
 13704  000012  EF0D  F000         	goto	i2u545_40
 13705  000016                     i2u545_41:
 13706  000016  EF12  F000         	goto	i2l650
 13707  00001A                     i2u545_40:
 13708  00001A                     
 13709                           ; BSR set to: 14
 13710                           ;interrupts.c: 24:         second ++;
 13711  00001A  0101               	movlb	1	; () banked
 13712  00001C  4B60               	infsnz	_second& (0+255),f,b
 13713  00001E  2B61               	incf	(_second+1)& (0+255),f,b
 13714  000020                     
 13715                           ; BSR set to: 1
 13716                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 13717  000020  010E               	movlb	14	; () banked
 13718  000022  9B33               	bcf	51,5,b	;volatile
 13719  000024                     i2l650:
 13720                           
 13721                           ; BSR set to: 14
 13722  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13723  000026  0011               	retfie		f
 13724  000028                     __end_of_HighISR:
 13725                           	callstack 0
 13726                           
 13727                           	psect	rparam
 13728  0000                     
 13729                           	psect	temp
 13730  00005F                     btemp:
 13731                           	callstack 0
 13732  00005F                     	ds	1
 13733  0000                     int$flags	set	btemp
 13734  0000                     wtemp8	set	btemp+1
 13735  0000                     ttemp5	set	btemp+1
 13736  0000                     ttemp6	set	btemp+4
 13737  0000                     ttemp7	set	btemp+8
 13738                           
 13739                           	psect	idloc
 13740                           
 13741                           ;Config register IDLOC0 @ 0x200000
 13742                           ;	unspecified, using default values
 13743  200000                     	org	2097152
 13744  200000  0FFF               	dw	4095
 13745                           
 13746                           ;Config register IDLOC1 @ 0x200002
 13747                           ;	unspecified, using default values
 13748  200002                     	org	2097154
 13749  200002  0FFF               	dw	4095
 13750                           
 13751                           ;Config register IDLOC2 @ 0x200004
 13752                           ;	unspecified, using default values
 13753  200004                     	org	2097156
 13754  200004  0FFF               	dw	4095
 13755                           
 13756                           ;Config register IDLOC3 @ 0x200006
 13757                           ;	unspecified, using default values
 13758  200006                     	org	2097158
 13759  200006  0FFF               	dw	4095
 13760                           
 13761                           ;Config register IDLOC4 @ 0x200008
 13762                           ;	unspecified, using default values
 13763  200008                     	org	2097160
 13764  200008  0FFF               	dw	4095
 13765                           
 13766                           ;Config register IDLOC5 @ 0x20000A
 13767                           ;	unspecified, using default values
 13768  20000A                     	org	2097162
 13769  20000A  0FFF               	dw	4095
 13770                           
 13771                           ;Config register IDLOC6 @ 0x20000C
 13772                           ;	unspecified, using default values
 13773  20000C                     	org	2097164
 13774  20000C  0FFF               	dw	4095
 13775                           
 13776                           ;Config register IDLOC7 @ 0x20000E
 13777                           ;	unspecified, using default values
 13778  20000E                     	org	2097166
 13779  20000E  0FFF               	dw	4095
 13780                           
 13781                           	psect	config
 13782                           
 13783                           ;Config register CONFIG1L @ 0x300000
 13784                           ;	External Oscillator mode Selection bits
 13785                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13786                           ;	Power-up default value for COSC bits
 13787                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13788  300000                     	org	3145728
 13789  300000  AA                 	db	170
 13790                           
 13791                           ;Config register CONFIG1H @ 0x300001
 13792                           ;	unspecified, using default values
 13793                           ;	Clock Out Enable bit
 13794                           ;	CLKOUTEN = 0x1, unprogrammed default
 13795                           ;	Clock Switch Enable bit
 13796                           ;	CSWEN = 0x1, unprogrammed default
 13797                           ;	Fail-Safe Clock Monitor Enable bit
 13798                           ;	FCMEN = 0x1, unprogrammed default
 13799  300001                     	org	3145729
 13800  300001  FF                 	db	255
 13801                           
 13802                           ;Config register CONFIG2L @ 0x300002
 13803                           ;	unspecified, using default values
 13804                           ;	Master Clear Enable bit
 13805                           ;	MCLRE = 0x1, unprogrammed default
 13806                           ;	Power-up Timer Enable bit
 13807                           ;	PWRTE = 0x1, unprogrammed default
 13808                           ;	Low-power BOR enable bit
 13809                           ;	LPBOREN = 0x1, unprogrammed default
 13810                           ;	Brown-out Reset Enable bits
 13811                           ;	BOREN = 0x3, unprogrammed default
 13812  300002                     	org	3145730
 13813  300002  FF                 	db	255
 13814                           
 13815                           ;Config register CONFIG2H @ 0x300003
 13816                           ;	unspecified, using default values
 13817                           ;	Brown Out Reset Voltage selection bits
 13818                           ;	BORV = 0x3, unprogrammed default
 13819                           ;	ZCD Disable bit
 13820                           ;	ZCD = 0x1, unprogrammed default
 13821                           ;	PPSLOCK bit One-Way Set Enable bit
 13822                           ;	PPS1WAY = 0x1, unprogrammed default
 13823                           ;	Stack Full/Underflow Reset Enable bit
 13824                           ;	STVREN = 0x1, unprogrammed default
 13825                           ;	Debugger Enable bit
 13826                           ;	DEBUG = 0x1, unprogrammed default
 13827                           ;	Extended Instruction Set Enable bit
 13828                           ;	XINST = 0x1, unprogrammed default
 13829  300003                     	org	3145731
 13830  300003  FF                 	db	255
 13831                           
 13832                           ;Config register CONFIG3L @ 0x300004
 13833                           ;	WDT Period Select bits
 13834                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13835                           ;	WDT operating mode
 13836                           ;	WDTE = OFF, WDT Disabled
 13837  300004                     	org	3145732
 13838  300004  9F                 	db	159
 13839                           
 13840                           ;Config register CONFIG3H @ 0x300005
 13841                           ;	unspecified, using default values
 13842                           ;	WDT Window Select bits
 13843                           ;	WDTCWS = 0x7, unprogrammed default
 13844                           ;	WDT input clock selector
 13845                           ;	WDTCCS = 0x7, unprogrammed default
 13846  300005                     	org	3145733
 13847  300005  FF                 	db	255
 13848                           
 13849                           ;Config register CONFIG4L @ 0x300006
 13850                           ;	unspecified, using default values
 13851                           ;	Write Protection Block 0
 13852                           ;	WRT0 = 0x1, unprogrammed default
 13853                           ;	Write Protection Block 1
 13854                           ;	WRT1 = 0x1, unprogrammed default
 13855                           ;	Write Protection Block 2
 13856                           ;	WRT2 = 0x1, unprogrammed default
 13857                           ;	Write Protection Block 3
 13858                           ;	WRT3 = 0x1, unprogrammed default
 13859                           ;	Write Protection Block 3
 13860                           ;	WRT4 = 0x1, unprogrammed default
 13861                           ;	Write Protection Block 3
 13862                           ;	WRT5 = 0x1, unprogrammed default
 13863                           ;	Write Protection Block 3
 13864                           ;	WRT6 = 0x1, unprogrammed default
 13865                           ;	Write Protection Block 3
 13866                           ;	WRT7 = 0x1, unprogrammed default
 13867  300006                     	org	3145734
 13868  300006  FF                 	db	255
 13869                           
 13870                           ;Config register CONFIG4H @ 0x300007
 13871                           ;	unspecified, using default values
 13872                           ;	Configuration Register Write Protection bit
 13873                           ;	WRTC = 0x1, unprogrammed default
 13874                           ;	Boot Block Write Protection bit
 13875                           ;	WRTB = 0x1, unprogrammed default
 13876                           ;	Data EEPROM Write Protection bit
 13877                           ;	WRTD = 0x1, unprogrammed default
 13878                           ;	Scanner Enable bit
 13879                           ;	SCANE = 0x1, unprogrammed default
 13880                           ;	Low Voltage Programming Enable bit
 13881                           ;	LVP = 0x1, unprogrammed default
 13882  300007                     	org	3145735
 13883  300007  FF                 	db	255
 13884                           
 13885                           ;Config register CONFIG5L @ 0x300008
 13886                           ;	unspecified, using default values
 13887                           ;	UserNVM Program Memory Code Protection bit
 13888                           ;	CP = 0x1, unprogrammed default
 13889                           ;	DataNVM Memory Code Protection bit
 13890                           ;	CPD = 0x1, unprogrammed default
 13891  300008                     	org	3145736
 13892  300008  FF                 	db	255
 13893                           
 13894                           ;Config register CONFIG5H @ 0x300009
 13895                           ;	unspecified, using default values
 13896  300009                     	org	3145737
 13897  300009  FF                 	db	255
 13898                           
 13899                           ;Config register CONFIG6L @ 0x30000A
 13900                           ;	unspecified, using default values
 13901                           ;	Table Read Protection Block 0
 13902                           ;	EBTR0 = 0x1, unprogrammed default
 13903                           ;	Table Read Protection Block 1
 13904                           ;	EBTR1 = 0x1, unprogrammed default
 13905                           ;	Table Read Protection Block 2
 13906                           ;	EBTR2 = 0x1, unprogrammed default
 13907                           ;	Table Read Protection Block 3
 13908                           ;	EBTR3 = 0x1, unprogrammed default
 13909                           ;	Table Read Protection Block 4
 13910                           ;	EBTR4 = 0x1, unprogrammed default
 13911                           ;	Table Read Protection Block 5
 13912                           ;	EBTR5 = 0x1, unprogrammed default
 13913                           ;	Table Read Protection Block 6
 13914                           ;	EBTR6 = 0x1, unprogrammed default
 13915                           ;	Table Read Protection Block 7
 13916                           ;	EBTR7 = 0x1, unprogrammed default
 13917  30000A                     	org	3145738
 13918  30000A  FF                 	db	255
 13919                           
 13920                           ;Config register CONFIG6H @ 0x30000B
 13921                           ;	unspecified, using default values
 13922                           ;	Boot Block Table Read Protection bit
 13923                           ;	EBTRB = 0x1, unprogrammed default
 13924  30000B                     	org	3145739
 13925  30000B  FF                 	db	255
 13926                           tosu	equ	0xFFF
 13927                           tosh	equ	0xFFE
 13928                           tosl	equ	0xFFD
 13929                           stkptr	equ	0xFFC
 13930                           pclatu	equ	0xFFB
 13931                           pclath	equ	0xFFA
 13932                           pcl	equ	0xFF9
 13933                           tblptru	equ	0xFF8
 13934                           tblptrh	equ	0xFF7
 13935                           tblptrl	equ	0xFF6
 13936                           tablat	equ	0xFF5
 13937                           prodh	equ	0xFF4
 13938                           prodl	equ	0xFF3
 13939                           indf0	equ	0xFEF
 13940                           postinc0	equ	0xFEE
 13941                           postdec0	equ	0xFED
 13942                           preinc0	equ	0xFEC
 13943                           plusw0	equ	0xFEB
 13944                           fsr0h	equ	0xFEA
 13945                           fsr0l	equ	0xFE9
 13946                           wreg	equ	0xFE8
 13947                           indf1	equ	0xFE7
 13948                           postinc1	equ	0xFE6
 13949                           postdec1	equ	0xFE5
 13950                           preinc1	equ	0xFE4
 13951                           plusw1	equ	0xFE3
 13952                           fsr1h	equ	0xFE2
 13953                           fsr1l	equ	0xFE1
 13954                           bsr	equ	0xFE0
 13955                           indf2	equ	0xFDF
 13956                           postinc2	equ	0xFDE
 13957                           postdec2	equ	0xFDD
 13958                           preinc2	equ	0xFDC
 13959                           plusw2	equ	0xFDB
 13960                           fsr2h	equ	0xFDA
 13961                           fsr2l	equ	0xFD9
 13962                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    160     160
    BANK1           256     70     208
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[6]), 
		 -> STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[6]), 
		 -> STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[6]), 
		 -> STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2787$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2787$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_action
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _main->_verify_color
    _verify_color->_detect_color
    _test_function->_detect_color
    _distance_measure->_lroundf
    _detect_color->_sprintf
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_test_function

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  345013
                                             14 BANK1     56    56      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   37355
                                            158 BANK0      2     2      0
                                              0 BANK1      7     3      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  121829
                                            158 BANK0      2     2      0
                                              0 BANK1     14     6      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   20203
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   37069
                                             25 BANK0    133   129      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                  _sendStringSerial4
                            _sprintf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2164
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19879
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13552
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11933
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3636
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2214
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3139
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   90447
                                             93 COMRAM     1     1      0
                                            128 BANK0      4     0      4
                             _goback
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   12237
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   46282
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     9      5    8936
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     9      5    9392
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11933
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    7050
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4187
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3275
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2339
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     751
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___wmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _sendStringSerial4
     _sprintf
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      D0       7       81.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20A      57        0.0%
DATA                 0      0     20A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 12:47:41 2022

                ?_short_reverse 0026                  _color_read_Red 529C                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 533C  
                 _color_predict 5736                              l70 3716                              l81 5704  
                            l90 538A                              l67 5924                              l84 58BA  
                            l93 533A                              l78 3728                              l87 52EA  
                            l96 53DA                              l99 5248                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 538C                _color_read_Green 52EC  
             ??_Interrupts_init 0001                             l102 581A                             l111 585A  
                           l105 57FA                             l202 578E                             l114 583A  
                           l211 5946                             l108 587A                             l220 54E8  
                           l205 57B4                             l125 3CBC                             l134 5762  
                           l214 5950                             l312 468E                             l208 595A  
                           l128 511C                             l160 5628                             l305 4F8E  
                           l217 5930                             l137 3932                             l330 459C  
                           l171 4C86                             l404 58FA                             l316 46C8  
                           l156 1BCE                             l172 4C88                             l164 50AC  
                           l413 5734                             l341 5022                             l333 45C6  
                           l326 4562                             l407 590E                             l319 46F2  
                           l159 5626                             l352 4ED2                             l168 481A  
                           l290 4AF8                             l355 556C                             l603 347C  
                           l358 55AE                             l199 578C                             l287 552A  
                           l297 3B06                             l609 589A                             l395 58D8  
                           l644 593C                             l661 58F6                             l746 57DA  
                           l860 4336                             l873 449A                             l977 4E12  
             verify_color@color 018E                ?_calibrate_white 000C        __end_of_distance_measure 4C8A  
                           _abs 55B0                             _pad 4C8A                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
               __end_of_LED_OFF 581C                    ___fltol@exp1 0065                            l1011 49E0  
                          l1020 569A                            l1016 4A26                            l1043 4922  
                          ?_abs 0013                            l1300 1FA8                            l1301 1F96  
                          l1401 3D14                            l1330 2A60                            l1500 51E2  
                          l1404 3E70                            l1316 5420                            l1501 51EA  
                          l1341 2B1E                            l1333 2A24                            l1342 2B0C  
                          l1422 5662                            l1415 3E08                            l1520 4BC2  
                          l1328 2C00                            l1408 3DAC                            l1360 2154  
                          l4000 200E                            l1505 55E6                            l1370 23B0  
                          l4010 2060                            l4002 201E                            l1274 1DBE  
                          l1531 595E                            l1339 2AA6                            l1291 1ED8  
                          l1283 208E                            l1275 1DAC                            l1508 55EE  
                          l4100 4EF0                            l1364 24B8                            l4020 207E  
                          l4012 2066                            l4004 202E                            l1276 1D72  
                          l1461 4D4E                            l1429 529A                            l4030 3EB6  
                          l4110 4F38                            l4102 4EFC                            l4014 2068  
                          l4006 204E                            l1367 234A                            l4120 590A  
                          l1528 5464                            l1552 56D0                            l1456 4CD0  
                          l4032 3EBA                            l4024 3E72                            l4104 4F14  
                          l4112 4F46                            l4200 2304                            l4016 206E  
                          l4008 2052                            l5000 153E                            l1377 247A  
                          l1369 23C2                            l4042 3F82                            l4034 3EDE  
                          l4026 3E96                            l4114 4F5E                            l4106 4F20  
                          l4210 235A                            l4202 2312                            l4130 20BC  
                          l4122 2090                            l4018 207C                            l5010 16D6  
                          l5002 15E6                            l1459 4D12                            l1467 2CA2  
                          l1539 2866                            l4060 4012                            l4044 3FA6  
                          l4052 3FD4                            l4036 3F02                            l4028 3EA4  
                          l4116 4F76                            l4108 4F2C                            l4212 2368  
                          l4204 2330                            l4140 20F8                            l4132 20CC  
                          l4124 209C                            l5020 1816                            l5012 1704  
                          l5004 1602                            l5100 4BF8                            l1469 2CAA  
                          l4118 58FA                            l4054 3FE2                            l4046 3FB4  
                          l1494 4024                            l4038 3F4A                            l4070 5928  
                          l4222 23D2                            l4230 241A                            l4214 236C  
                          l4206 233A                            l4150 212E                            l4142 20FE  
                          l4134 20DC                            l4126 20AA                            l4302 533C  
                          l4310 5332                            l5030 1922                            l5022 1820  
                          l5014 1710                            l5006 16AA                            l5110 4C82  
                          l5102 4C04                            l1487 2EE2                            l3600 4218  
                          l4048 3FC8                            l4320 524A                            l5120 552C  
                          l5200 5910                            l4072 592C                            l4080 5942  
                          l4240 248E                            l4232 2434                            l4224 23DE  
                          l4216 237A                            l4208 2348                            l4152 213E  
                          l4144 210C                            l4136 20E2                            l4128 20AC  
                          l4304 5382                            l5040 1A7E                            l5032 193A  
                          l5024 184E                            l5016 173E                            l5008 16BE  
                          l5104 4C08                            l3610 426C                            l3602 4224  
                          l4058 3FEE                            l4322 525C                            l5130 2F00  
                          l5122 5540                            l4066 5952                            l4074 5948  
                          l5210 56FA                            l5202 56D2                            l4090 54E4  
                          l4082 54AA                            l4314 538C                            l4242 249C  
                          l4234 2448                            l4226 23EC                            l4218 23A8  
                          l4170 21C0                            l4162 2188                            l4154 2144  
                          l4146 210E                            l4138 20F2                            l4410 2572  
                          l4402 24BA                            l5050 1B44                            l5042 1AB6  
                          l5034 1942                            l5026 190E                            l5018 180C  
                          l5106 4C4E                            l4332 5706                            l3620 42E0  
                          l3612 427E                            l3604 4242                            l4324 5264  
                          l3700 4D54                            l4340 4E14                            l5140 2F48  
                          l5132 2F14                            l5124 5558                            l4068 5956  
                          l4076 594C                            l5204 56D6                            l4092 54E6  
                          l4084 54AE                            l4316 53D2                            l4260 4952  
                          l4244 249E                            l4236 2462                            l4228 2416  
                          l4180 220A                            l4172 21D8                            l4164 2194  
                          l4156 2164                            l4148 211E                            l4252 53DC  
                          l4420 26B8                            l4412 2596                            l4404 24DA  
                          l4500 5822                            l4308 52EC                            l5060 1BC0  
                          l5052 1B4A                            l5044 1ABE                            l5036 1A02  
                          l5028 1918                            l5108 4C6A                            l5300 40C4  
                          l5220 50A2                            l5212 5028                            l4334 570A  
                          l3614 42AC                            l3606 424A                            l3622 42E6  
                          l3630 4338                            l4326 526C                            l3710 4D84  
                          l3702 4D62                            l4342 4E38                            l4350 4E76  
                          l5150 2FA2                            l5142 2F4E                            l5134 2F1C  
                          l5126 2EE4                            l5206 56E0                            l5230 54EA  
                          l4086 54B6                            l4078 593E                            l4270 49C0  
                          l4262 4962                            l4238 247E                            l4246 24A4  
                          l4190 2260                            l4182 221A                            l4174 21E4  
                          l4166 219E                            l4158 2174                            l4254 53EC  
                          l4430 2832                            l4422 2724                            l4414 25B2  
                          l4406 2522                            l4510 562A                            l5070 4718  
                          l4502 50AE                            l5062 1BCA                            l5054 1B78  
                          l5038 1A02                            l5046 1AC2                            l5310 4106  
                          l5302 40DC                            l5214 5040                            l4336 5718  
                          l3624 42F6                            l3616 42CC                            l3608 425E  
                          l3640 437C                            l3632 433C                            l3560 4B28  
                          l3800 2EBA                            l4328 5288                            l3720 4DB2  
                          l3712 4D88                            l3704 4D6A                            l4600 500A  
                          l4096 4ED4                            l4352 4E8E                            l4344 4E50  
                          l5160 2FEC                            l5152 2FA4                            l5144 2F78  
                          l5136 2F22                            l5128 2EFC                            l4440 349C  
                          l5208 56F0                            l5232 54FA                            l5240 4A28  
                          l4088 54BE                            l4360 4834                            l4272 49CE  
                          l4264 4990                            l4248 24A8                            l4192 227C  
                          l4184 2226                            l4176 21F0                            l4168 21B4  
                          l4280 5664                            l4432 2856                            l4424 2756  
                          l4408 2536                            l5080 4764                            l5072 471C  
                          l4504 5110                            l4520 5622                            l5056 1BA6  
                          l5048 1B02                            l5320 4146                            l5312 410C  
                          l5304 40E2                            l5216 5060                            l4338 571C  
                          l3626 4316                            l3618 42CE                            l3650 43E4  
                          l3642 439C                            l3634 434A                            l3562 4B46  
                          l3554 4AFA                            l3570 542E                            l4290 5192  
                          l4506 573A                            l3730 4DE6                            l3722 4DC0  
                          l3714 4D90                            l3706 4D6E                            l3810 3950  
                          l4098 4ED8                            l4354 4EA6                            l4346 4E5C  
                          l4602 556E                            l4530 4610                            l5170 3054  
                          l5162 2FF0                            l5154 2FAA                            l5146 2F8C  
                          l5138 2F30                            l4450 353E                            l4442 34BC  
                          l5330 31B4                            l5234 5512                            l5250 4A7C  
                          l5242 4A34                            l4610 2874                            l4370 4884  
                          l4274 4A1E                            l4266 49A0                            l4258 4924  
                          l4194 2288                            l4186 2236                            l4178 21FE  
                          l4282 567A                            l4426 27C2                            l4418 25EA  
                          l5090 4812                            l5082 477C                            l5074 4734  
                          l5066 46F4                            l4514 55F0                            l5058 1BAC  
                          l5322 4166                            l5314 411C                            l5226 50AA  
                          l5218 5078                            l3660 445A                            l3652 4412  
                          l3644 43BA                            l3636 436A                            l3564 4B7C  
                          l3556 4B0C                            l3572 5440                            l3580 56AC  
                          l4292 51A0                            l4508 5756                            l3732 4DEC  
                          l3724 4DC6                            l3716 4DA2                            l3708 4D7C  
                          l3820 3A9E                            l3812 39B2                            l4356 4EBE  
                          l4348 4E68                            l4604 5582                            l4540 465C  
                          l4532 461C                            l4524 45C8                            l5180 30C4  
                          l5172 306C                            l5164 3014                            l5156 2FB0  
                          l4460 35DC                            l4452 3556                            l4444 34D4  
                          l4436 3480                            l5340 321C                            l5332 31C4  
                          l3804 578E                            l5236 5526                            l5252 4A90  
                          l5244 4A44                            l5260 58D2                            l4700 2AA4  
                          l4620 28B4                            l4612 2882                            l4380 48AE  
                          l4372 4888                            l4364 4848                            l4276 4A24  
                          l4268 49AE                            l4196 22A4                            l4188 2250  
                          l4284 568A                            l3900 1D10                            l4428 27F6  
                          l5084 4788                            l5076 4740                            l5068 470E  
                          l4516 55F6                            l5324 4176                            l5308 40FA  
                          l5270 58DA                            l3590 41C2                            l3662 447A  
                          l3654 4432                            l3646 43C2                            l3638 436E  
                          l3558 4B1E                            l3574 5444                            l3582 56C4  
                          l3670 4CAE                            l3750 2C7A                            l3742 2C02  
                          l4294 51C6                            l3726 4DDC                            l3718 4DAA  
                          l3734 4DF2                            l3814 39F8                            l4606 559A  
                          l4550 46B4                            l4542 466E                            l4526 45EC  
                          l4534 462A                            l5190 3154                            l5182 30E8  
                          l5174 3070                            l5166 302C                            l5158 2FD4  
                          l4470 3696                            l4462 3618                            l4454 358E  
                          l4446 350C                            l4438 348C                            l5350 3288  
                          l5342 322E                            l5334 31D4                            l3806 579E  
                          l5238 5528                            l5246 4A58                            l5262 58D4  
                          l5254 58BC                            l4710 2B04                            l4702 2AB6  
                          l4630 28DA                            l4622 28B6                            l4614 2884  
                          l4390 48D6                            l4382 48B8                            l4374 4896  
                          l4366 4872                            l4358 481C                            l4198 22CE  
                          l3910 1D80                            l3902 1D14                            l3830 1BFC  
                          l3822 1BD0                            l5086 47A0                            l5078 4758  
                          l4518 560C                            l5094 4BC4                            l5326 418A  
                          l5318 4132                            ?_pad 0011                            l5272 58E2  
                          l3592 41E2                            l3656 4444                            l3648 43D6  
                          l3568 5422                            l3576 569C                            l3680 4CF4  
                          l3672 4CBC                            l3760 2CD2                            l3752 2C7C  
                          l3744 2C22                            l4288 518A                            l3736 4E02  
                          l3728 4DE4                            l3816 3A18                            l3808 3934  
                          l4552 46C4                            l4544 467A                            l4536 4642  
                          l4528 4604                            l4560 44D8                            l5192 3158  
                          l5184 3114                            l5176 3094                            l5168 3030  
                          l4472 36A8                            l4464 362A                            l4456 35A0  
                          l4448 351E                            l5360 330E                            l5352 32B4  
                          l5344 325A                            l5336 3200                            l4800 5778  
                          l5248 4A6C                            l5264 58D6                            l5256 58C6  
                          l4720 2B72                            l4704 2AC4                            l4640 291A  
                          l4632 28E8                            l4616 2894                            l4624 28BE  
                          l4608 2868                            l4392 48E2                            l4384 48C2  
                          l4368 4874                            l3920 1DAA                            l3912 1D8C  
                          l3904 1D3E                            l3840 1C36                            l3832 1C0C  
                          l3824 1BDC                            l5088 4808                            l4296 529C  
                          l4480 51EC                            l5096 4BDA                            l5328 41A4  
                          l5280 402A                            l5274 58EC                            l3594 41E6  
                          l3586 41B0                            l3658 444A                            l3690 55CA  
                          l3578 56A8                            l3682 4D22                            l3674 4CC8  
                          l3666 4C8A                            l3770 2D70                            l3762 2CD8  
                          l3754 2C96                            l3746 2C4A                            l3738 4E0A  
                          l3818 3A34                            l4554 46DE                            l4546 468A  
                          l4538 4650                            l4570 4524                            l4562 44E4  
                          l5194 317C                            l5186 3118                            l5178 30C0  
                          l4474 36C6                            l4466 3648                            l4458 35C4  
                          l5370 3382                            l5362 3328                            l5354 32CE  
                          l5346 3274                            l5338 321A                            l4802 577A  
                          l5258 58C8                            l4490 585C                            l4730 2BDC  
                          l4714 2B2E                            l4722 2B76                            l4706 2AC8  
                          l4650 295A                            l4642 291C                            l4634 28EA  
                          l4626 28CE                            l4618 28A4                            l4394 48F2  
                          l3930 1E00                            l3922 1DCC                            l3914 1D90  
                          l3906 1D5A                            l3850 1C64                            l3842 1C3C  
                          l3834 1C1C                            l3826 1BEA                            l4482 57FC  
                          l4298 52E2                            l5098 4BDE                            l5290 4082  
                          l5282 403C                            l5450 5126                            l5276 5932  
                          l3596 41F4                            l3588 41B4                            l3684 4D36  
                          l3676 4CDC                            l3668 4C9A                            l3780 2E18  
                          l3772 2D76                            l3764 2CE0                            l3756 2CB2  
                          l3748 2C6A                            l3692 57B6                            l4548 46A8  
                          l4580 457C                            l4572 4530                            l4564 44F0  
                          l4556 449C                            l5188 313C                            l4476 36DE  
                          l4468 3660                            l5380 33DE                            l5372 3384  
                          l5364 332A                            l5356 32D0                            l5348 3276  
                          l4804 589E                            l4492 5862                            l4732 2BE0  
                          l4724 2B90                            l4716 2B3A                            l4708 2AD6  
                          l4660 298A                            l4652 2962                            l4636 28FA  
                          l4644 2924                            l4628 28D4                            l4396 4902  
                          l3940 1E3A                            l3932 1E0E                            l3924 1DDC  
                          l3916 1D9E                            l3908 1D6A                            l3860 1C98  
                          l3852 1C66                            l3844 1C4E                            l3836 1C1E  
                          l3828 1BEC                            l4484 5802                            l4900 3780  
                          l4820 3B5E                            l4812 3B2A                            l5292 4094  
                          l5284 404E                            l5460 5142                            l5452 5132  
                          l3598 4214                            l3678 4CF0                            l3790 2E7E  
                          l3782 2E32                            l3774 2D7C                            l3766 2CE8  
                          l3758 2CC4                            l3694 57D2                            l4590 4FB4  
                          l4582 4588                            l4574 4542                            l4558 44C0  
                          l4566 44FE                            l5198 3198                            l4478 3714  
                          l5390 344A                            l5382 33F0                            l5374 3396  
                          l5366 333C                            l5358 32E2                            l5278 587C  
                          l4734 2BEE                            l4726 2BA6                            l4718 2B48  
                          l4670 29C8                            l4662 298A                            l4654 2966  
                          l4646 2934                            l4638 290A                            l4750 3CDE  
                          l4398 4912                            l3950 1EA6                            l3942 1E3C  
                          l3934 1E1C                            l3918 1DA0                            l3870 1CD4  
                          l3854 1C76                            l3862 1CA0                            l3846 1C50  
                          l3838 1C26                            l4494 583C                            l4486 57DC  
                          l4910 37E4                            l4902 3798                            l4822 3B64  
                          l4814 3B2E                            l4806 3B08                            l5294 4098  
                          l5286 405A                            l5462 5146                            l5454 5136  
                          l5446 511E                            l3688 55B0                            l3792 2E84  
                          l3784 2E4C                            l3768 2CEE                            l3776 2DE0  
                          l4592 4FCC                            l4584 4598                            l4576 454E  
                          l4568 4516                            l5392 3454                            l5384 341C  
                          l5376 33C2                            l5368 3368                            l4736 2BF4  
                          l4728 2BC0                            l4680 2A14                            l4672 29D8  
                          l4648 294A                            l4760 3D56                            l4752 3D24  
                          l3960 1EFE                            l3952 1EA8                            l3944 1E46  
                          l3936 1E28                            l3928 1DF0                            l3880 1CE8  
                          l3872 1CD8                            l3864 1CB0                            l3856 1C86  
                          l3848 1C56                            l4496 5842                            l4488 57E2  
                          l4920 3848                            l4912 37FC                            l4904 37B0  
                          l4840 3BC4                            l4832 3B90                            l4824 3B80  
                          l4816 3B3A                            l5296 40A4                            l5288 406E  
                          l5472 515A                            l5464 515A                            l5456 513A  
                          l5448 5122                            l3794 2E96                            l3778 2DFA  
                          l3786 2E5C                            l3698 4D50                            l4594 4FD8  
                          l4586 45B2                            l4578 455E                            l5394 3468  
                          l5386 3436                            l5378 33DC                            l4738 2BF6  
                          l4690 2A5E                            l4682 2A22                            l4674 29E8  
                          l4666 299E                            l4658 297A                            l4770 3DDE  
                          l4762 3D62                            l4754 3D3A                            l4746 3CC0  
                          l3970 1F2C                            l3954 1EB8                            l3938 1E2C  
                          l3946 1E4C                            l3890 1CFC                            l3882 1CEC  
                          l3874 1CDC                            l3866 1CC2                            l3858 1C96  
                          l4498 581C                            l4930 38AC                            l4922 3860  
                          l4914 3814                            l4906 37B4                            l4842 3BCA  
                          l4834 3B94                            l4826 3B86                            l4818 3B46  
                          l5298 40B0                            l5466 515A                            l5458 513E  
                          l3796 2EA2                            l3788 2E6E                            l4596 4FE4  
                          l4588 4F90                            l5388 3438                            l4692 2A70  
                          l4684 2A2E                            l4676 29F0                            l4668 29B8  
                          l4780 3E1C                            l4772 3DEA                            l4764 3D94  
                          l4748 3CD0                            l3972 1F3A                            l3964 1F12  
                          l3980 1F58                            l3948 1E72                            l3956 1EC8  
                          l3892 1D00                            l3884 1CF0                            l3876 1CE0  
                          l3868 1CD0                            l4940 3910                            l4932 38C4  
                          l4924 3878                            l4916 3818                            l4908 37CC  
                          l4860 3C2A                            l4852 3BF6                            l4844 3BE6  
                          l4836 3BA0                            l3798 2EAA                            l4598 4FF2  
                          l4694 2A86                            l4686 2A4C                            l4678 2A00  
                          l4782 3E40                            l4774 3DF8                            l4766 3D96  
                          l4758 3D4E                            l3974 1F42                            l3966 1F1C  
                          l3958 1EEE                            l3982 1F66                            l3894 1D04  
                          l3886 1CF4                            l3878 1CE4                            l4934 38DC  
                          l4926 3890                            l4918 3830                            l4862 3C30  
                          l4854 3BFA                            l4846 3BEC                            l4838 3BAC  
                          l4950 0F0E                            l4942 0E14                            l4792 5764  
                          l4696 2A8C                            l4688 2A4E                            l4784 3E50  
                          l4776 3E16                            l4768 3DA2                            l3992 1FB8  
                          l3984 1F6A                            l3976 1F46                            l3968 1F2A  
                          l3896 1D08                            l3888 1CF8                            l4936 38F4  
                          l4928 3894                            l4880 3C90                            l4872 3C5C  
                          l4864 3C4C                            l4856 3C06                            l4960 10B2  
                          l4952 0F2A                            l4944 0E62                            l4794 576E  
                          l4698 2A96                            l4786 3E5E                            l4778 3E18  
                          l3994 1FC4                            l3986 1F78                            l3978 1F56  
                          l3898 1D0C                            l4938 390C                            l4890 372E  
                          l4882 3C96                            l4874 3C60                            l4866 3C52  
                          l4858 3C12                            l4970 1114                            l4962 10CA  
                          l4954 0FD2                            l4946 0E66                            l4796 5774  
                          l4788 3E60                            l3996 1FD2                            l3988 1F8E  
                          l4892 3738                            l4884 3CB2                            l4876 3C6C  
                          l4980 133E                            l4972 11B6                            l4964 10F8  
                          l4956 0FEE                            l4948 0E72                            l4798 5776  
                          l3998 200C                            l4894 3750                            l4886 3CB8  
                          l4878 3C78                            l4990 13B0                            l4982 135A  
                          l4974 11D2                            l4966 1104                            l4958 1096  
                          l4896 3754                            l4888 372A                            l4992 13BC  
                          l4984 1372                            l4976 127A                            l4968 1108  
                          l4898 3768                            l4994 145E                            l4986 13A0  
                          l4978 1296                            l4996 147A                            l4988 13AC  
                          l4998 1522                            STR_1 0E05                            STR_3 0E0D  
                          STR_4 0E08                            STR_5 0E08                            STR_6 0E08  
                          u3000 55CA                            u3001 55C6                            u3010 4D62  
                          u3011 4D5E                            u3100 2C7A                            u3020 4D7C  
                          u3101 2C76                            u3021 4D78                            u3110 2C96  
                          u3030 4DA2                            u3111 2C92                            u3031 4D9E  
                          u3200 2E7E                            u3120 2CC4                            u3040 4DC0  
                          u4000 49CE                    _BAUD4CONbits 000EE9                            u3201 2E7A  
                          u3121 2CC0                            u3041 4DBC                            u4001 49CA  
                          _LATE 000F7D                            u3210 2E96                            u3130 2CD2  
                          u3050 4DDC                            u4010 4A1E                            u3211 2E92  
                          u3131 2CCE                            u3051 4DD8                            u4011 4A1A  
                          _LATG 000F7F                            u3140 2DFA                            u3060 4E02  
                          u3220 579E                            u4100 48AA                            u4020 567A  
                          u3300 1C0C                            u3141 2DF6                            u3061 4DFE  
                          u3221 579A                            u4101 48A6                            u4021 5676  
                          u3301 1C08                            u3150 2E18                            u3070 2C32  
                          u4030 51E2                            u3230 57B4                            u4110 48D2  
                          u3310 1C4E                            u3151 2E14                            u3071 2C2C  
                          u4031 51DE                            u3231 57B0                            u4111 48CE  
                          u3311 1C4A                            u4040 5734                            u3160 2E32  
                          u3080 2C34                            u3240 3950                            u4120 48F2  
                          u3400 1D80                            u3320 1C64                            u4200 2756  
                          u5000 184E                            u4041 5730                            u3161 2E2E  
                          u3241 394C                            u4121 48EE                            u3401 1D7C  
                          u3321 1C60                            u4201 2752                            u5001 184A  
                          u3170 2E4C                            u3090 2C4A                            u3250 3A34  
                          u4050 4E8E                            u4130 4902                            u3410 1D9E  
                          u3330 1C76                            u4210 2816                            u5010 190E  
                          _T2PR 000FBC                            u3171 2E48                            u3091 2C46  
                          u3251 3A30                            u4051 4E8A                            u4131 48FE  
                          u3411 1D9A                            u3331 1C72                            u5011 190A  
                          u3180 2E5C                            u4060 4EA6                            u3500 1EEE  
                          u3420 1DBE                            u3340 1C86                            u4220 2832  
                          u4140 24FA                            u5020 193A                            u5100 4C82  
                          u3181 2E58                            u4061 4EA2                            u3501 1EEA  
                          u3421 1DBA                            u3341 1C82                            u4221 282E  
                          u5021 1936                            u5101 4C7E                            u3190 2E6E  
                          u5110 2F78                            u4310 3568                            u4230 349C  
                          u4070 4834                            u3510 1EFE                            u3430 1DCC  
                          u3350 1CC2                            u4150 2522                            u5030 1A02  
                          u3191 2E6A                            u5111 2F74                            u4311 3560  
                          u4231 3498                            u4071 4830                            u3511 1EFA  
                          u3431 1DC8                            u3351 1CBE                            u4215 280C  
                          u4151 251E                            u5031 19FE                            u2800 4B7C  
                          u3264 3A8E                            u5120 2F9E                            u4240 34AE  
                          u4080 4868                            u3600 1FD2                            u3520 1F2A  
                          u3440 1DDC                            u3360 1CD0                            u3280 1BEA  
                          u4160 2556                            u5040 1AB6                            u5200 50A2  
                          u2801 4B78                            u3265 3A8A                            u5121 2F9A  
                          u4241 34A6                            u3601 1FCE                            u3521 1F26  
                          u3441 1DD8                            u3361 1CCC                            u3281 1BE6  
                          u4145 24F0                            u5041 1AB2                            u5201 509E  
                          u2810 5464                            u3274 3AF8                            u5130 2FD4  
                          u4410 3672                            u4330 35A0                            u4090 4896  
                          u3610 200C                            u3530 1F3A                            u3450 1E0E  
                          u3370 1D3E                            u3290 1BFC                            u4170 2572  
                          u5050 1B02                            u2811 5460                            u3275 3AF4  
                          u5131 2FD0                            u4411 366A                            u4331 359C  
                          u4091 4892                            u3611 2008                            u3531 1F36  
                          u3451 1E0A                            u3371 1D3A                            u3291 1BF8  
                          u4171 256E                            u5051 1AFE                            u2900 434A  
                          u2820 56C4                            u3700 3FA6                            u5140 3014  
                          u4340 35B2                            u4308 3532                            u4260 34E6  
                          u3620 201E                            u3540 1F56                            u3460 1E1C  
                          u3380 1D56                            u4180 25B2                            u4500 5622  
                          u5060 1B44                            u5300 4176                            u2901 4346  
                          u2821 56C0                            u3701 3FA2                            u5141 3010  
                          u4341 35AA                            u4261 34DE                            u4085 485E  
                          u3621 201A                            u3541 1F52                            u3461 1E18  
                          u3381 1D50                            u4181 25AE                            u4165 254C  
                          u4501 561E                            u5061 1B40                            u5301 4172  
                          u2830 41C2                            u2910 437C                            u4510 4642  
                          u5150 3054                            u4430 36A8                            u5310 31C4  
                          u3710 54D2                            u3630 202E                            u3550 1F66  
                          u3470 1E3A                            u3390 1D58                            u4190 26B8  
                          u5070 1B78                            u5230 404E                            u2831 41BE  
                          u2911 4378                            u6007 4F3E                            u4511 463E  
                          u5151 3050                            u4431 36A4                            u5311 31C0  
                          u3711 54CA                            u3631 202A                            u3551 1F62  
                          u3471 1E36                            u4191 26B4                            u5071 1B74  
                          u5231 404A                            u2840 41F4                            u2920 43BA  
                          u4600 5022                            u4520 466E                            u5160 3094  
                          u4440 36BA                            u4408 363E                            u4360 35EE  
                          u4328 356A                            u4280 351E                            u5320 31D4  
                          u3800 20CC                            u3640 204E                            u3560 1F78  
                          u3480 1E72                            u5080 1BA6                            u5240 406E  
                          u2841 41F0                            u2921 43B6                            u4601 501E  
                          u6017 4F80                            u4521 466A                            u5161 3090  
                          u4441 36B2                            u4361 35E6                            u4281 351A  
                          u5321 31D0                            u3801 20C8                            u3641 204A  
                          u3561 1F74                            u3481 1E6E                            u5081 1BA2  
                          u5241 406A                            u2930 43E4                            u2770 4B0C  
                          u3730 4EF0                            u4530 46A4                            u5170 30E8  
                          u4290 3530                            u4258 34B0                            u5330 322E  
                          u4610 2882                            u3810 210C                            u3650 2060  
                          u3570 1F8E                            u3490 1EB8                            u5090 1BC0  
                          u5250 4094              verify_color@color2 018C                            u2851 421E  
                          u2931 43E0                            u2771 4B08                            u6027 4FEA  
                          u3731 4EEC                            u4531 46A0                            u5171 30E4  
                          u4291 3528                            u5331 322A                            u4611 287E  
                          u3811 2108                            u3651 205C                            u3571 1F8A  
                          u3491 1EB4                            u5091 1BBC                            u5251 4090  
                          u2860 4242                            u2940 4412                            u2780 4B1E  
                          u3740 4F14                            u4540 46DE                            u5180 313C  
                          u4460 36F0                            u4428 3674                            u4380 362A  
                          u5340 3288                            u4700 2A22                            u4620 2894  
                          u3900 23A8                            u3820 211E                            u3660 207C  
                          u3580 1FA4                            u5260 40C4                            u2861 423E  
                          u2941 440E                            u2781 4B1A                            u3741 4F10  
                          u4541 46DA                            u5181 3138                            u4461 36E8  
                          u4381 3626                            u5341 3284                            u4701 2A1E  
                          u4621 2890                            u3901 23A4                            u3821 211A  
                          u3661 2078                            u3581 1FA0                            u5261 40C0  
                          u2870 426C                            u2950 445A                            u2790 4B46  
                          u3670 3E96                            u3750 4F5E                            u4550 4516  
                          u5190 317C                            u4390 363C                            u4358 35B4  
                          u4278 34E8                            u5350 32E2                            u4710 2A4C  
                          u4630 28A4                            u3910 23BE                            u3830 212E  
                          u3590 1FB8                            u5270 40F6                            u2871 4268  
                          u2951 4456                            u2791 4B42                            u3671 3E92  
                          u3751 4F5A                            u4551 4512                            u5191 3178  
                          u4391 3634                            u5351 32DE                            u4711 2A48  
                          u4631 28A0                            u3911 23BA                            u3831 212A  
                          u3591 1FB4                            u5271 40F2                            u2880 42AC  
                          u2960 4C9A                            u3680 3EDE                            u3760 4F76  
                          u4560 4542                            u4480 3728                            u5360 333C  
                          u4800 2B48                            u4720 2A70                            u4640 28E8  
                          u3728 54D4                            u3920 23D2                            u3840 2164  
                          u5280 411C                            u2881 42A8                            u2961 4C96  
                          u3681 3EDA                            u3761 4F72                            u4561 453E  
                          u4481 3724                            u5361 3338                            u4801 2B44  
                          u4721 2A6C                            u4641 28E4                            u3921 23CE  
                          u3841 2160                            u5281 4118                            u3770 590A  
                          u2890 42F6                            u2970 4CBC                            u3690 3F02  
                          u4570 4578                            u4458 36BC                            u4378 35F0  
                          u5370 3396                            u4810 2B90                            u4730 2A86  
                          u4650 28FA                            u3930 23EC                            u3850 2174  
                          u4490 560C                            u5290 412E                            u3771 5906  
                          u2891 42F2                            u2971 4CB8                            u3691 3EFE  
                          u4571 4574                            u5371 3392                            u4811 2B8C  
                          u4731 2A82                            u4651 28F6                            u3931 23E8  
                          u3851 2170                            u4491 5608                            u5291 412A  
                          u2980 4D12                            u4580 45B2                            u5380 33F0  
                          u4820 2BC0                            u4740 2AA4                            u4660 290A  
                          u4900 3E08                            u3940 2434                            u3860 22EE  
                          u3780 20AA                            u2981 4D0E                            u4581 45AE  
                          u5381 33EC                            u4821 2BBC                            u4741 2AA0  
                          u4661 2906                            u4901 3E04                            u3941 2430  
                          u3781 20A6                            u2990 4D22                            u4590 500A  
                          u4478 36F2                            u5390 344A                            u4830 2BEE  
                          u4750 2AC4                            u4670 294A                            u4910 3E16  
                          u3950 2462                            u3870 2348                            u3790 20BC  
                          u2991 4D1E                            u4591 5006                            u5391 3446  
                          u4831 2BEA                            u4751 2AC0                            u4671 2946  
                          u4911 3E12                            u3951 245E                            u3871 2344  
                          u3791 20B8                            u5607 3BB6                            u5527 5034  
                          u4760 2AD6                            u4680 298A                            u4920 3E50  
                          u4840 3CD0                            u3960 249C                            u3880 2368  
                          u4761 2AD2                            u4681 2986                            u4921 3E4C  
                          u4841 3CCC                            u3961 2498                            u3881 2364  
                          u3865 22E4                            u5617 3C1C                            u5537 506C  
                          u4770 2B04                            u4690 2A00                            u4930 3E5E  
                          u4850 3CDE                            u3970 4952                            u3890 237A  
                          u4771 2B00                            u4691 29FC                            u4931 3E5A  
                          u4851 3CDA                            u3971 494E                            u3891 2376  
                          u5707 580C                            u5627 3C82                            u5547 4196  
                          u4780 2B1A                            u4860 3D3A                            u3980 4990  
                          u4940 3B80                            u4781 2B16                            u4861 3D36  
                          u3981 498C                            u5717 582C                            u5637 3742  
                          u4941 3B7C                            u5557 4BEA                            u4790 2B2E  
                          u4870 3D90                            u3990 49AE                            u4950 3BE6  
                          u5807 34FE                            u4791 2B2A                            u4871 3D8C  
                          u3991 49AA                            u5727 584C                            u5647 37A2  
                          u4951 3BE2                            u5567 10BE                            u4880 3DDA  
                          u4960 3C4C                            u5817 3548                            u4881 3DD6  
                          u5737 4728                            u5657 3806                            u4961 3C48  
                          u5577 1366                            u4890 3DF8                            u4970 3CB2  
                          u5907 2F3A                            u5827 3580                            u4891 3DF4  
                          u5747 474C                            u5667 3882                            u4971 3CAE  
                          u5587 16CA                            u4980 173E                            u5917 44F6  
                          u5837 35CE                            u5757 4770                            u5677 38FE  
                          u5597 3B50                            u4981 173A                            u4990 180C  
                          u5927 4554                            u5847 360A                            u5767 4794  
                          u5687 391A                            u4991 1808                            u5937 458E  
                          u5857 3652                            u5777 586C                            u5697 57EC  
                          u5947 4622                            u5867 3688                            u5787 56E6  
                          u5957 4680                            u5877 36D0                            u5797 34C6  
                          u5967 46BA                            u5887 3706                            u5977 558C  
                          u5897 554A                            u5987 4E6E                            u5997 4EB0  
                          abs@a 0013                            _dbuf 0168                            _main 511E  
                          _dtoa 2C02                            _prec 0158                            _nout 0154  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 4ED4                            prodh 000FF4  
                          prodl 000FF3                            start 0028                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 52EC                 __end_of_HighISR 0028  
                  ___param_bank 000000                 detect_color@buf 0081                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 4338       amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074  
     amb_light_measure@CC_amb_3 0076                 __end_of___fladd 2090                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 449C                 __end_of___fldiv 2C02  
               __end_of___awdiv 4E14                 __end_of___flneg 569C                 __end_of___flmul 24BA  
               __end_of___flsub 5422                 __end_of___fltol 4924                           ?_stop 001A  
               ___awdiv@divisor 0009                           _LED_B 583C                           _LED_C 585C  
                         _LED_G 581C                           _LED_R 57DC                           i2l650 0024  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 5910      __end_of_I2C_2_Master_Start 595C  
       ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5932                 __end_of_compare 562A  
                  compare@lower 006A                           _flags 015A                           _color 0162  
                  compare@upper 006E                           _fputc 4AFA                           _fputs 5422  
                         pad@fp 0011                           _width 0156                           _putch 595E  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00FE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 5664                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 529C                color_display@buf 0079  
       __end_of_color_read_Blue 538C           _I2C_2_Master_RepStart 593E                 ??_short_reverse 002A  
               ?_color_read_Red 0005                 __initialization 5466                    __end_of_main 518A  
                  __end_of_dtoa 2EE4            __end_of_detect_color 1BD0                    __end_of_stop 4F90  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 005F  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 5910                       ??_LED_OFF 0001  
        _initDCmotors_parameter 4A28                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5512 000A                          i2l5514 001A                          i2l5516 0020  
            turnLeft@angle_left 0024                       ??_HighISR 0001        __end_of_color_click_init 5706  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3E72                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 4924                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 57B6  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 31B2                       ??___flsub 0019  
                     ??___fltol 0060                          _goback 2EE4                   compare@result 0070  
                        _memory 0100                          clear_0 5484                          clear_1 5490  
              ___awdiv@quotient 000D                          _second 0160                          _motorL 0146  
                        _motorR 013C                          isa$std 000001                          pad@buf 0013  
                        _roundf 24BA                          dtoa@fp 001C                          _strlen 569C  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 589C  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 0188  
                test_function@w 018A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 51EC                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                __end_of_turnLeft 46F4  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                calibrate_white@w 000C  
               fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022                      __accesstop 0060  
       __end_of__initialization 5496                   verify_color@m 0188                   verify_color@w 018A  
      __end_of_color_read_Clear 53DC                      ___flneg@f1 0001        __end_of_color_read_Green 533C  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 585C                   __end_of_LED_C 587C                   __end_of_LED_G 583C  
                 __end_of_LED_R 57FC                ?_color_read_Blue 0005                 _Interrupts_init 5932  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4E14                    __pidataBANK1 595C  
       __end_of_buggylight_init 5926            turnRight@angle_right 0024           _distance_measure$3235 0074  
                 __end_of_fputc 4BC4               detect_color@color 00F3                   __end_of_fputs 5466  
                 __end_of_putch 5960                   __end_of_toint 0E05             __end_of_Timer0_init 58F8  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 006A              ??_distance_measure 0070  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK1 0100                      __pbssBANK2 0200                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 589C                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 00E0                         ?_goback 0058  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 57FC                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
                  _detect_color 0E14   __end_of_color_data_collection 3CBE         __end_of_Interrupts_init 593E  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 58BC              _I2C_2_Master_Start 5952                      _initUSART4 58BC  
            _I2C_2_Master_Write 5926                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 0192                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 58DA         sendStringSerial4@string 0002                         ___aodiv 41B0  
                       ___fladd 1BD0                         ___aomod 4338                         ___fldiv 2868  
                       ___awdiv 4D50                         ___flneg 5664                         ___flmul 2090  
                       ___flsub 53DC                         ___fltol 481C             ?_I2C_2_Master_Start 0001  
              ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00       distance_measure@threshold 007A                         __pcinit 5466  
                       __ramtop 0E00                      _read_color 51EC                       ?_turnLeft 0020  
                       __ptext0 511E                         __ptext1 5024                         __ptext2 4026  
                       __ptext3 4BC4                         __ptext4 0E14                         __ptext5 55F0  
                       __ptext6 3B08                         __ptext7 51EC                         __ptext8 50AE  
                       __ptext9 372A                         _compare 55F0         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
                       _lroundf 562A                   _RxBufWriteCnt 0167                         goback@i 00DE  
        distance_measure@CC_amb 0078          distance_measure@CG_amb 0072                         _sprintf 524A  
                       main@rgb 0196            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 5496              setMotorPWM@PWMduty 0018                 _CALIBRATION_180 01CE  
                       fputc@fp 0003           __end_of_test_function 41B0                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 018C                 test_function@mR 018E  
               ??_fullSpeedBack 0024                      ??_pin_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 4026           __end_of_short_reverse 556E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 54EA  
                    ??_turnLeft 0025  __end_of_initDCmotors_parameter 4AFA                       _PORTFbits 000F8E  
      test_function@stop_signal 0194               __end_of_turnRight 45C8                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                      _start_move 015E  
              ?_Interrupts_init 0001                     ___flmul@grs 0035                   ?_toggle_light 0001  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 0128                    _EUSART4TXbuf 0200  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0188           __end_of_color_display 511E                      main@motorL 01BA  
                    main@motorR 01C4     amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 00F4                  detect_color@BC 00E5                  detect_color@BG 00F6  
                detect_color@GB 00EB                  detect_color@GG 00EF                  detect_color@BR 00F8  
                detect_color@GR 00ED                  detect_color@RB 00E9                  detect_color@RG 00E7  
                detect_color@RR 00F1           __end_of_color_predict 5764                  __end_of___flge 4A28  
                _fullSpeedAhead 4F90                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 57DC                  __end_of_action 347E  
                   ?_read_color 000C                  __end_of_goback 31B2                  __end_of_roundf 2868  
            turnRight@delay_180 0026                  __end_of_strlen 56D2             color_read_Clear@tmp 000A  
           start_initialization 5466                     __end_of_abs 55F0                     __end_of_pad 4D50  
                 _TxBufWriteCnt 0165               turnLeft@delay_180 0026                  ??_toggle_light 0002  
                ??_verify_color 00FE             color_read_Green@tmp 000A                  _reverse_square 556E  
       __end_of_initDCmotorsPWM 552C                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 5024  
                      ??___flge 0009                        ??___wmul 0005                        ??_action 005E  
                      ??_goback 005C                 short_reverse@mL 0026                 short_reverse@mR 0028  
                   __pdataBANK1 01CE                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 0188                ___aodiv@dividend 0001  
                      ?_HighISR 0001          __end_of_reverse_square 55B0                       _dtoa$2869 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 0193                 turnRight@i_1356 002A  
                turnLeft@i_1333 002A            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 578E  
             _I2C_2_Master_Init 5764               _I2C_2_Master_Read 54A8               _I2C_2_Master_Stop 5948  
        toggle_light@toggletime 0001                    _RxBufReadCnt 0166                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 5706           _color_data_collection 3B08  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0026                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u545_40 001A  
                      i2u545_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0163                       _vfpfcnvrt 3E72       __end_of_I2C_2_Master_Idle 57B6  
          __end_of_toggle_light 372A       __end_of_I2C_2_Master_Init 578E       __end_of_I2C_2_Master_Read 54EA  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5952                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 50AE          test_function@amb_light 0190  
                     main@white 019E               ??_color_read_Blue 0007                       _stop_move 015C  
                 detect_color@m 0079                   detect_color@w 007B                    _TxBufReadCnt 0164  
                     _turnRight 449C                 _calibrate_white 372A       __end_of_sendStringSerial4 5736  
             _amb_light_measure 46F4   __end_of_I2C_2_Master_RepStart 5948              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3B08                      roundf@F527 0150                _distance_measure 4BC4  
                  ??_initUSART4 0001              ?_amb_light_measure 006A                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 4ED4                    __Lsmallconst 0E00            compare@value2compare 006C  
           ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                     action@color 005E                      sprintf@fmt 0062  
                      ___xxtofl 3CBE                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 58DA                      ?_turnRight 0020                        __ptext10 529C  
                      __ptext11 52EC                        __ptext20 53DC                        __ptext12 533C  
                      __ptext21 1BD0                        __ptext13 57DC                        __ptext30 2868  
                      __ptext22 5664                        __ptext14 57FC                        __ptext31 585C  
                      __ptext23 2090                        __ptext15 581C                        __ptext40 5952  
                      __ptext32 587C                        __ptext24 4924                        __ptext16 583C  
                      __ptext41 578E                        __ptext33 58BC                        __ptext25 481C  
                      __ptext17 46F4                        __ptext50 556E                        __ptext42 5764  
                      __ptext34 4A28                        __ptext26 538C                        __ptext18 562A  
                      __ptext51 4E14                        __ptext43 5910                        __ptext35 54EA  
                      __ptext27 593E                        __ptext19 24BA                        __ptext60 3E72  
                      __ptext52 4ED4                        __ptext44 31B2                        __ptext36 56D2  
                      __ptext28 54A8                        __ptext61 2C02                        __ptext53 4F90  
                      __ptext45 347E                        __ptext37 589C                        __ptext29 3CBE  
                      __ptext70 5706                        __ptext62 4C8A                        __ptext54 3934  
                      __ptext46 552C                        __ptext38 5926                        __ptext71 58F8  
                      __ptext63 569C                        __ptext55 57B6                        __ptext47 2EE4  
                      __ptext39 5948                        __ptext72 58DA                        __ptext64 5422  
                      __ptext56 4D50                        __ptext48 449C                        __ptext73 5932  
                      __ptext65 4AFA                        __ptext57 5736                        __ptext49 45C8  
                      __ptext66 595E                        __ptext58 524A                        __ptext67 55B0  
                      __ptext59 518A                        __ptext68 4338                        __ptext69 41B0  
     __end_of_amb_light_measure 481C                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A                  turnRight@delay 002C          test_function@test_code 0195  
                 turnLeft@delay 002C                        action@mL 00E0                        action@mR 00E2  
                    turnLeft@mL 0020                      turnLeft@mR 0022              __end_of_read_color 524A  
                      _pin_init 587C                      turnRight@i 0028                        isa$xinst 000000  
          distance_measure@stop 007C                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 01CF                        goback@mL 0058                        goback@mR 005A  
                      _vfprintf 518A                        _turnLeft 45C8                ___aomod@dividend 0001  
       __end_of_calibrate_white 3934                      _INTCONbits 000FF2                     _setMotorPWM 3934  
                 ?_detect_color 0079                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006C               ??_buggylight_init 0001  
              ??_fullSpeedAhead 001E                   _test_function 4026                       turnLeft@i 0028  
              reverse_square@mL 0026                reverse_square@mR 0028                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                   _short_reverse 552C                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                _color_click_init 56D2  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$3234 00FA  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C              distance_measure@mL 006A  
            distance_measure@mR 006C                  ??_detect_color 007D                     ??_turnRight 0025  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 58F8                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 0188                    _toggle_light 347E  
                  ___aomod@sign 0012                    _verify_color 5024                     _roundf$3236 004F  
                   _roundf$3237 0049                   _color_display 50AE  
