

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 22:41:32 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   101  0000                     
   102                           ; Version 2.35
   103                           ; Generated 05/05/2021 GMT
   104                           ; 
   105                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution. Publication is not required when
   119                           ;        this file is used in an embedded application.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F67K40 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataBANK0
   139  005DAC                     __pidataBANK0:
   140                           	callstack 0
   141                           
   142                           ;initializer for _SENSITIVITY
   143  005DAC  0A                 	db	10
   144                           
   145                           ;initializer for _CALIBRATION_135
   146  005DAD  0F                 	db	15
   147                           
   148                           	psect	idataBANK1
   149  005DB0                     __pidataBANK1:
   150                           	callstack 0
   151                           
   152                           ;initializer for _CALIBRATION_180
   153  005DB0  0A                 	db	10
   154                           
   155                           	psect	smallconst
   156  000E00                     __psmallconst:
   157                           	callstack 0
   158  000E00  00                 	db	0
   159  000E01  0000               	dw	0
   160  000E03  4B00               	dw	19200
   161  000E05                     __end_of_toint:
   162                           	callstack 0
   163  0000                     _TX4REG	set	3812
   164  0000                     _RC4STAbits	set	3815
   165  0000                     _SP4BRGH	set	3814
   166  0000                     _LATEbits	set	3965
   167  0000                     _TRISGbits	set	3975
   168  0000                     _TRISEbits	set	3973
   169  0000                     _LATGbits	set	3967
   170  0000                     _LATFbits	set	3966
   171  0000                     _TRISFbits	set	3974
   172  0000                     _SSP2CON2bits	set	3802
   173  0000                     _LATG	set	3967
   174  0000                     _LATE	set	3965
   175  0000                     _RX4PPS	set	3605
   176  0000                     _SSP2CLKPPS	set	3612
   177  0000                     _SSP2DATPPS	set	3613
   178  0000                     _ANSELDbits	set	3751
   179  0000                     _SSP2ADD	set	3798
   180  0000                     _SSP2CON1bits	set	3801
   181  0000                     _LATAbits	set	3961
   182  0000                     _LATDbits	set	3964
   183  0000                     _LATHbits	set	3968
   184  0000                     _TRISDbits	set	3972
   185  0000                     _TRISHbits	set	3976
   186  0000                     _PORTFbits	set	3982
   187  0000                     _T2PR	set	4028
   188  0000                     _T2CONbits	set	4029
   189  0000                     _PWM7DCH	set	4000
   190  0000                     _PWM6DCH	set	4003
   191  0000                     _TRISAbits	set	3969
   192  0000                     _TRISCbits	set	3971
   193  0000                     _LATCbits	set	3963
   194  0000                     _RC4REG	set	3811
   195  0000                     _SP4BRGL	set	3813
   196  0000                     _TX4STAbits	set	3816
   197  0000                     _BAUD4CONbits	set	3817
   198  0000                     _SSP2CON2	set	3802
   199  0000                     _SSP2STAT	set	3800
   200  0000                     _ANSELFbits	set	3764
   201  0000                     _SSP2BUF	set	3797
   202  0000                     _PIE0bits	set	3625
   203  0000                     _PIE4bits	set	3629
   204  0000                     _PIR4bits	set	3639
   205  0000                     _RC0PPS	set	3682
   206  0000                     _RC7PPS	set	3689
   207  0000                     _RD5PPS	set	3695
   208  0000                     _RE2PPS	set	3700
   209  0000                     _RD6PPS	set	3696
   210  0000                     _TMR0L	set	4051
   211  0000                     _TMR0H	set	4052
   212  0000                     _T0CON0bits	set	4053
   213  0000                     _T2CLKCONbits	set	4031
   214  0000                     _T2HLTbits	set	4030
   215  0000                     _PWM6CONbits	set	4004
   216  0000                     _PWM7CONbits	set	4001
   217  0000                     _PIR0bits	set	3635
   218  0000                     _T0CON1bits	set	4054
   219  0000                     _INTCONbits	set	4082
   220  000E05                     STR_1:
   221                           
   222                           ; BSR set to: 14
   223  000E05  25                 	db	37
   224  000E06  64                 	db	100	;'d'
   225  000E07  09                 	db	9
   226  000E08  25                 	db	37
   227  000E09  64                 	db	100	;'d'
   228  000E0A  09                 	db	9
   229  000E0B  25                 	db	37
   230  000E0C  64                 	db	100	;'d'
   231  000E0D  09                 	db	9
   232  000E0E  25                 	db	37
   233  000E0F  64                 	db	100	;'d'
   234  000E10  0D                 	db	13
   235  000E11  0A                 	db	10
   236  000E12  00                 	db	0
   237  000E13  00                 	db	0	; dummy byte at the end
   238  0000                     
   239                           ; #config settings
   240                           
   241                           	psect	cinit
   242  0055F4                     __pcinit:
   243                           	callstack 0
   244  0055F4                     start_initialization:
   245                           	callstack 0
   246  0055F4                     __initialization:
   247                           	callstack 0
   248                           
   249                           ; Initialize objects allocated to BANK1 (1 bytes)
   250                           ; load TBLPTR registers with __pidataBANK1
   251  0055F4  0EB0               	movlw	low __pidataBANK1
   252  0055F6  6EF6               	movwf	tblptrl,c
   253  0055F8  0E5D               	movlw	high __pidataBANK1
   254  0055FA  6EF7               	movwf	tblptrh,c
   255  0055FC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   256  0055FE  6EF8               	movwf	tblptru,c
   257  005600  0009               	tblrd		*+	;fetch initializer
   258  005602  CFF5 F1FE          	movff	tablat,__pdataBANK1
   259                           
   260                           ; Initialize objects allocated to BANK0 (2 bytes)
   261                           ; load TBLPTR registers with __pidataBANK0
   262  005606  0EAC               	movlw	low __pidataBANK0
   263  005608  6EF6               	movwf	tblptrl,c
   264  00560A  0E5D               	movlw	high __pidataBANK0
   265  00560C  6EF7               	movwf	tblptrh,c
   266  00560E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   267  005610  6EF8               	movwf	tblptru,c
   268  005612  0009               	tblrd		*+	;fetch initializer
   269  005614  CFF5 F0FE          	movff	tablat,__pdataBANK0
   270  005618  0009               	tblrd		*+	;fetch initializer
   271  00561A  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   272                           
   273                           ; Clear objects allocated to BANK1 (188 bytes)
   274  00561E  EE01  F000         	lfsr	0,__pbssBANK1
   275  005622  0EBC               	movlw	188
   276  005624                     clear_0:
   277  005624  6AEE               	clrf	postinc0,c
   278  005626  06E8               	decf	wreg,f,c
   279  005628  E1FD               	bnz	clear_0
   280                           
   281                           ; Clear objects allocated to BANK0 (6 bytes)
   282  00562A  0100               	movlb	0
   283  00562C  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   284  00562E  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   285  005630  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   286  005632  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   287  005634  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   288  005636  6BF8               	clrf	__pbssBANK0& (0+255),b
   289  005638                     end_of_initialization:
   290                           	callstack 0
   291  005638                     __end_of__initialization:
   292                           	callstack 0
   293  005638  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   294  00563A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   295  00563C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   296  00563E  6EF8               	movwf	tblptru,c
   297  005640  0E0E               	movlw	high __Lsmallconst
   298  005642  6EF7               	movwf	tblptrh,c
   299  005644  0100               	movlb	0
   300  005646  EFFC  F017         	goto	_main	;jump to C main() function
   301                           
   302                           	psect	bssBANK0
   303  0000F8                     __pbssBANK0:
   304                           	callstack 0
   305  0000F8                     _flags:
   306                           	callstack 0
   307  0000F8                     	ds	2
   308  0000FA                     _TxBufReadCnt:
   309                           	callstack 0
   310  0000FA                     	ds	1
   311  0000FB                     _TxBufWriteCnt:
   312                           	callstack 0
   313  0000FB                     	ds	1
   314  0000FC                     _RxBufReadCnt:
   315                           	callstack 0
   316  0000FC                     	ds	1
   317  0000FD                     _RxBufWriteCnt:
   318                           	callstack 0
   319  0000FD                     	ds	1
   320                           
   321                           	psect	dataBANK0
   322  0000FE                     __pdataBANK0:
   323                           	callstack 0
   324  0000FE                     _SENSITIVITY:
   325                           	callstack 0
   326  0000FE                     	ds	1
   327  0000FF                     _CALIBRATION_135:
   328                           	callstack 0
   329  0000FF                     	ds	1
   330                           
   331                           	psect	bssBANK1
   332  000100                     __pbssBANK1:
   333                           	callstack 0
   334  000100                     _EUSART4TXbuf:
   335                           	callstack 0
   336  000100                     	ds	60
   337  00013C                     _memory:
   338                           	callstack 0
   339  00013C                     	ds	40
   340  000164                     _EUSART4RXbuf:
   341                           	callstack 0
   342  000164                     	ds	20
   343  000178                     _motorR:
   344                           	callstack 0
   345  000178                     	ds	9
   346  000181                     _motorL:
   347                           	callstack 0
   348  000181                     	ds	9
   349  00018A                     roundf@F527:
   350                           	callstack 0
   351  00018A                     	ds	4
   352  00018E                     _nout:
   353                           	callstack 0
   354  00018E                     	ds	2
   355  000190                     _width:
   356                           	callstack 0
   357  000190                     	ds	2
   358  000192                     _prec:
   359                           	callstack 0
   360  000192                     	ds	2
   361  000194                     _stop_move:
   362                           	callstack 0
   363  000194                     	ds	2
   364  000196                     _start_move:
   365                           	callstack 0
   366  000196                     	ds	2
   367  000198                     _centisecond:
   368                           	callstack 0
   369  000198                     	ds	2
   370  00019A                     _color:
   371                           	callstack 0
   372  00019A                     	ds	1
   373  00019B                     _array_index:
   374                           	callstack 0
   375  00019B                     	ds	1
   376  00019C                     _dbuf:
   377                           	callstack 0
   378  00019C                     	ds	32
   379                           
   380                           	psect	dataBANK1
   381  0001FE                     __pdataBANK1:
   382                           	callstack 0
   383  0001FE                     _CALIBRATION_180:
   384                           	callstack 0
   385  0001FE                     	ds	1
   386                           
   387                           	psect	cstackBANK1
   388  0001BC                     __pcstackBANK1:
   389                           	callstack 0
   390  0001BC                     main@amb:
   391                           	callstack 0
   392                           
   393                           ; 8 bytes @ 0x0
   394  0001BC                     	ds	8
   395  0001C4                     main@amb_light:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x8
   399  0001C4                     	ds	2
   400  0001C6                     main@setup:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xA
   404  0001C6                     	ds	1
   405  0001C7                     main@stop_signal:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xB
   409  0001C7                     	ds	1
   410  0001C8                     main@rgb:
   411                           	callstack 0
   412                           
   413                           ; 8 bytes @ 0xC
   414  0001C8                     	ds	8
   415  0001D0                     main@white:
   416                           	callstack 0
   417                           
   418                           ; 28 bytes @ 0x14
   419  0001D0                     	ds	28
   420  0001EC                     main@motorL:
   421                           	callstack 0
   422                           
   423                           ; 9 bytes @ 0x30
   424  0001EC                     	ds	9
   425  0001F5                     main@motorR:
   426                           	callstack 0
   427                           
   428                           ; 9 bytes @ 0x39
   429  0001F5                     	ds	9
   430                           
   431                           	psect	cstackBANK0
   432  000060                     __pcstackBANK0:
   433                           	callstack 0
   434  000060                     ??___fltol:
   435  000060                     ?_sprintf:
   436                           	callstack 0
   437  000060                     sprintf@s:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x0
   441  000060                     	ds	2
   442  000062                     sprintf@fmt:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x2
   446  000062                     	ds	2
   447  000064                     ___fltol@sign1:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x4
   451  000064                     	ds	1
   452  000065                     ___fltol@exp1:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x5
   456  000065                     	ds	1
   457  000066                     ?_lroundf:
   458                           	callstack 0
   459  000066                     lroundf@x:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x6
   463  000066                     	ds	4
   464  00006A                     ?_amb_light_measure:
   465                           	callstack 0
   466  00006A                     compare@lower:
   467                           	callstack 0
   468  00006A                     amb_light_measure@amb:
   469                           	callstack 0
   470  00006A                     distance_measure@mL:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474  00006A                     	ds	2
   475  00006C                     ??_amb_light_measure:
   476  00006C                     compare@value2compare:
   477                           	callstack 0
   478  00006C                     distance_measure@mR:
   479                           	callstack 0
   480  00006C                     sprintf@ap:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC
   484  00006C                     	ds	2
   485  00006E                     compare@upper:
   486                           	callstack 0
   487  00006E                     amb_light_measure@upper_bound:
   488                           	callstack 0
   489  00006E                     distance_measure@amb_light:
   490                           	callstack 0
   491  00006E                     sprintf@f:
   492                           	callstack 0
   493                           
   494                           ; 11 bytes @ 0xE
   495  00006E                     	ds	2
   496  000070                     ??_distance_measure:
   497  000070                     compare@result:
   498                           	callstack 0
   499  000070                     amb_light_measure@CC_amb_ave:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x10
   503  000070                     	ds	1
   504  000071                     detect_color@m:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x11
   508  000071                     	ds	1
   509  000072                     amb_light_measure@CC_amb_1:
   510                           	callstack 0
   511  000072                     distance_measure@CG_amb:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x12
   515  000072                     	ds	1
   516  000073                     detect_color@w:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x13
   520  000073                     	ds	1
   521  000074                     amb_light_measure@CC_amb_2:
   522                           	callstack 0
   523  000074                     _distance_measure$3347:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x14
   527  000074                     	ds	1
   528  000075                     ??_detect_color:
   529                           
   530                           ; 1 bytes @ 0x15
   531  000075                     	ds	1
   532  000076                     amb_light_measure@CC_amb_3:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x16
   536  000076                     	ds	2
   537  000078                     distance_measure@CC_amb:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x18
   541  000078                     	ds	1
   542  000079                     detect_color@RG:
   543                           	callstack 0
   544  000079                     color_display@buf:
   545                           	callstack 0
   546  000079                     color_predict@buf:
   547                           	callstack 0
   548                           
   549                           ; 100 bytes @ 0x19
   550  000079                     	ds	1
   551  00007A                     distance_measure@threshold:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x1A
   555  00007A                     	ds	1
   556  00007B                     detect_color@BC:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1B
   560  00007B                     	ds	1
   561  00007C                     distance_measure@stop:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x1C
   565  00007C                     	ds	1
   566  00007D                     detect_color@GR:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x1D
   570  00007D                     	ds	2
   571  00007F                     detect_color@BB:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x1F
   575  00007F                     	ds	2
   576  000081                     detect_color@RB:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x21
   580  000081                     	ds	2
   581  000083                     detect_color@GB:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x23
   585  000083                     	ds	2
   586  000085                     detect_color@BR:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x25
   590  000085                     	ds	2
   591  000087                     detect_color@GG:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x27
   595  000087                     	ds	2
   596  000089                     detect_color@color:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x29
   600  000089                     	ds	1
   601  00008A                     detect_color@RR:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x2A
   605  00008A                     	ds	2
   606  00008C                     detect_color@BG:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x2C
   610  00008C                     	ds	2
   611  00008E                     _detect_color$3346:
   612                           	callstack 0
   613                           
   614                           ; 4 bytes @ 0x2E
   615  00008E                     	ds	4
   616  000092                     verify_color@m:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x32
   620  000092                     	ds	2
   621  000094                     verify_color@w:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x34
   625  000094                     	ds	2
   626  000096                     ??_verify_color:
   627                           
   628                           ; 1 bytes @ 0x36
   629  000096                     	ds	2
   630  000098                     verify_color@color2:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x38
   634  000098                     	ds	2
   635  00009A                     verify_color@color:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x3A
   639  00009A                     	ds	67
   640  0000DD                     color_predict@color:
   641                           	callstack 0
   642                           
   643                           ; 1 bytes @ 0x7D
   644  0000DD                     	ds	1
   645  0000DE                     color_data_collection@i:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x7E
   649  0000DE                     	ds	2
   650  0000E0                     color_data_collection@j:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x80
   654  0000E0                     	ds	2
   655  0000E2                     color_data_collection@k:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x82
   659  0000E2                     	ds	2
   660  0000E4                     color_data_collection@x:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x84
   664  0000E4                     	ds	2
   665  0000E6                     test_function@m:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x86
   669  0000E6                     	ds	2
   670  0000E8                     test_function@w:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x88
   674  0000E8                     	ds	2
   675  0000EA                     test_function@mL:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x8A
   679  0000EA                     	ds	2
   680  0000EC                     test_function@mR:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x8C
   684  0000EC                     	ds	2
   685  0000EE                     ??_test_function:
   686                           
   687                           ; 1 bytes @ 0x8E
   688  0000EE                     	ds	2
   689  0000F0                     test_function@amb_light:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x90
   693  0000F0                     	ds	2
   694  0000F2                     test_function@complete:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x92
   698  0000F2                     	ds	1
   699  0000F3                     test_function@color:
   700                           	callstack 0
   701                           
   702                           ; 1 bytes @ 0x93
   703  0000F3                     	ds	1
   704  0000F4                     test_function@stop_signal:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x94
   708  0000F4                     	ds	1
   709  0000F5                     test_function@test_code:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x95
   713  0000F5                     	ds	1
   714  0000F6                     ??_main:
   715                           
   716                           ; 1 bytes @ 0x96
   717  0000F6                     	ds	2
   718                           
   719                           	psect	cstackCOMRAM
   720  000001                     __pcstackCOMRAM:
   721                           	callstack 0
   722  000001                     ??_LED_OFF:
   723  000001                     ??_LED_R:
   724  000001                     ??_LED_C:
   725  000001                     ??_LED_B:
   726  000001                     ??_LED_G:
   727  000001                     ??_I2C_2_Master_Idle:
   728  000001                     ?_strlen:
   729                           	callstack 0
   730  000001                     ?___wmul:
   731                           	callstack 0
   732  000001                     ?___fladd:
   733                           	callstack 0
   734  000001                     ?___flneg:
   735                           	callstack 0
   736  000001                     ?___xxtofl:
   737                           	callstack 0
   738  000001                     ?___aodiv:
   739                           	callstack 0
   740  000001                     ?___aomod:
   741                           	callstack 0
   742  000001                     toggle_light@toggletime:
   743                           	callstack 0
   744  000001                     sendCharSerial4@charToSend:
   745                           	callstack 0
   746  000001                     initDCmotorsPWM@PWMperiod:
   747                           	callstack 0
   748  000001                     initDCmotors_parameter@motorL:
   749                           	callstack 0
   750  000001                     ___wmul@multiplier:
   751                           	callstack 0
   752  000001                     fputc@c:
   753                           	callstack 0
   754  000001                     strlen@s:
   755                           	callstack 0
   756  000001                     ___flge@ff1:
   757                           	callstack 0
   758  000001                     ___flneg@f1:
   759                           	callstack 0
   760  000001                     ___fladd@b:
   761                           	callstack 0
   762  000001                     ___xxtofl@val:
   763                           	callstack 0
   764  000001                     ___aodiv@dividend:
   765                           	callstack 0
   766  000001                     ___aomod@dividend:
   767                           	callstack 0
   768                           
   769                           ; 8 bytes @ 0x0
   770  000001                     	ds	1
   771  000002                     ??_I2C_2_Master_Read:
   772  000002                     ??_toggle_light:
   773  000002                     I2C_2_Master_Write@data_byte:
   774                           	callstack 0
   775  000002                     sendStringSerial4@string:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x1
   779  000002                     	ds	1
   780  000003                     color_writetoaddr@value:
   781                           	callstack 0
   782  000003                     I2C_2_Master_Read@ack:
   783                           	callstack 0
   784  000003                     initDCmotors_parameter@motorR:
   785                           	callstack 0
   786  000003                     ___wmul@multiplicand:
   787                           	callstack 0
   788  000003                     fputc@fp:
   789                           	callstack 0
   790  000003                     strlen@a:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x2
   794  000003                     	ds	1
   795  000004                     toggle_light@i:
   796                           	callstack 0
   797  000004                     color_writetoaddr@address:
   798                           	callstack 0
   799  000004                     I2C_2_Master_Read@tmp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x3
   803  000004                     	ds	1
   804  000005                     ??_fputc:
   805  000005                     ??_color_click_init:
   806  000005                     ??___xxtofl:
   807  000005                     ?_color_read_Red:
   808                           	callstack 0
   809  000005                     ?_color_read_Blue:
   810                           	callstack 0
   811  000005                     ?_color_read_Green:
   812                           	callstack 0
   813  000005                     ?_color_read_Clear:
   814                           	callstack 0
   815  000005                     toggle_light@lightnumber:
   816                           	callstack 0
   817  000005                     ___wmul@product:
   818                           	callstack 0
   819  000005                     ___flge@ff2:
   820                           	callstack 0
   821  000005                     ___fladd@a:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x4
   825  000005                     	ds	2
   826  000007                     ??_color_read_Red:
   827  000007                     ??_color_read_Blue:
   828  000007                     ??_color_read_Green:
   829  000007                     ??_color_read_Clear:
   830  000007                     ?___awdiv:
   831                           	callstack 0
   832  000007                     ___awdiv@dividend:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x6
   836  000007                     	ds	2
   837  000009                     ??___fladd:
   838  000009                     ??___flge:
   839  000009                     ___xxtofl@sign:
   840                           	callstack 0
   841  000009                     ___awdiv@divisor:
   842                           	callstack 0
   843  000009                     ___aodiv@divisor:
   844                           	callstack 0
   845  000009                     ___aomod@divisor:
   846                           	callstack 0
   847                           
   848                           ; 8 bytes @ 0x8
   849  000009                     	ds	1
   850  00000A                     ___xxtofl@exp:
   851                           	callstack 0
   852  00000A                     color_read_Red@tmp:
   853                           	callstack 0
   854  00000A                     color_read_Blue@tmp:
   855                           	callstack 0
   856  00000A                     color_read_Green@tmp:
   857                           	callstack 0
   858  00000A                     color_read_Clear@tmp:
   859                           	callstack 0
   860  00000A                     fputs@s:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x9
   864  00000A                     	ds	1
   865  00000B                     ___awdiv@counter:
   866                           	callstack 0
   867  00000B                     ___xxtofl@arg:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0xA
   871  00000B                     	ds	1
   872  00000C                     ___awdiv@sign:
   873                           	callstack 0
   874  00000C                     read_color@m:
   875                           	callstack 0
   876  00000C                     calibrate_white@w:
   877                           	callstack 0
   878  00000C                     fputs@fp:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0xB
   882  00000C                     	ds	1
   883  00000D                     ___fladd@signs:
   884                           	callstack 0
   885  00000D                     ___awdiv@quotient:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0xC
   889  00000D                     	ds	1
   890  00000E                     ??_calibrate_white:
   891  00000E                     ___fladd@aexp:
   892                           	callstack 0
   893  00000E                     fputs@c:
   894                           	callstack 0
   895                           
   896                           ; 1 bytes @ 0xD
   897  00000E                     	ds	1
   898  00000F                     ?___fldiv:
   899                           	callstack 0
   900  00000F                     ___fladd@bexp:
   901                           	callstack 0
   902  00000F                     setMotorPWM@m:
   903                           	callstack 0
   904  00000F                     fputs@i:
   905                           	callstack 0
   906  00000F                     ___fldiv@b:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0xE
   910  00000F                     	ds	1
   911  000010                     ___fladd@grs:
   912                           	callstack 0
   913                           
   914                           ; 1 bytes @ 0xF
   915  000010                     	ds	1
   916  000011                     ??_setMotorPWM:
   917  000011                     ?_pad:
   918                           	callstack 0
   919  000011                     ?___flsub:
   920                           	callstack 0
   921  000011                     ___aodiv@counter:
   922                           	callstack 0
   923  000011                     ___aomod@counter:
   924                           	callstack 0
   925  000011                     pad@fp:
   926                           	callstack 0
   927  000011                     ___flsub@b:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x10
   931  000011                     	ds	1
   932  000012                     ___aodiv@sign:
   933                           	callstack 0
   934  000012                     ___aomod@sign:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x11
   938  000012                     	ds	1
   939  000013                     ?_abs:
   940                           	callstack 0
   941  000013                     pad@buf:
   942                           	callstack 0
   943  000013                     abs@a:
   944                           	callstack 0
   945  000013                     ___fldiv@a:
   946                           	callstack 0
   947  000013                     ___aodiv@quotient:
   948                           	callstack 0
   949                           
   950                           ; 8 bytes @ 0x12
   951  000013                     	ds	2
   952  000015                     ??_abs:
   953  000015                     pad@p:
   954                           	callstack 0
   955  000015                     ___flsub@a:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x14
   959  000015                     	ds	2
   960  000017                     ??___fldiv:
   961  000017                     ??_pad:
   962                           
   963                           ; 1 bytes @ 0x16
   964  000017                     	ds	1
   965  000018                     setMotorPWM@PWMduty:
   966                           	callstack 0
   967  000018                     pad@i:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0x17
   971  000018                     	ds	1
   972  000019                     
   973                           ; 1 bytes @ 0x18
   974  000019                     	ds	1
   975  00001A                     stop@mL:
   976                           	callstack 0
   977  00001A                     fullSpeedAhead@mL:
   978                           	callstack 0
   979  00001A                     pad@w:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x19
   983  00001A                     	ds	1
   984  00001B                     ___fldiv@rem:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0x1A
   988  00001B                     	ds	1
   989  00001C                     ?_dtoa:
   990                           	callstack 0
   991  00001C                     stop@mR:
   992                           	callstack 0
   993  00001C                     fullSpeedAhead@mR:
   994                           	callstack 0
   995  00001C                     dtoa@fp:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x1B
   999  00001C                     	ds	2
  1000  00001E                     ??_stop:
  1001  00001E                     ??_fullSpeedAhead:
  1002  00001E                     dtoa@d:
  1003                           	callstack 0
  1004                           
  1005                           ; 8 bytes @ 0x1D
  1006  00001E                     	ds	1
  1007  00001F                     ___fldiv@sign:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x1E
  1011  00001F                     	ds	1
  1012  000020                     turnLeft@mL:
  1013                           	callstack 0
  1014  000020                     turnRight@mL:
  1015                           	callstack 0
  1016  000020                     fullSpeedAhead_test@mL:
  1017                           	callstack 0
  1018  000020                     fullSpeedBack@mL:
  1019                           	callstack 0
  1020  000020                     short_burst_back@mL:
  1021                           	callstack 0
  1022  000020                     ___fldiv@new_exp:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x1F
  1026  000020                     	ds	2
  1027  000022                     turnLeft@mR:
  1028                           	callstack 0
  1029  000022                     turnRight@mR:
  1030                           	callstack 0
  1031  000022                     fullSpeedAhead_test@mR:
  1032                           	callstack 0
  1033  000022                     fullSpeedBack@mR:
  1034                           	callstack 0
  1035  000022                     short_burst_back@mR:
  1036                           	callstack 0
  1037  000022                     ___fldiv@grs:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x21
  1041  000022                     	ds	2
  1042  000024                     ??_short_burst_back:
  1043  000024                     ??_fullSpeedAhead_test:
  1044  000024                     ??_fullSpeedBack:
  1045  000024                     turnLeft@angle_left:
  1046                           	callstack 0
  1047  000024                     turnRight@angle_right:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x23
  1051  000024                     	ds	1
  1052  000025                     ??_turnLeft:
  1053  000025                     ??_turnRight:
  1054                           
  1055                           ; 1 bytes @ 0x24
  1056  000025                     	ds	1
  1057  000026                     ??_dtoa:
  1058  000026                     ___fldiv@bexp:
  1059                           	callstack 0
  1060  000026                     turnLeft@delay_135:
  1061                           	callstack 0
  1062  000026                     turnRight@delay_135:
  1063                           	callstack 0
  1064  000026                     short_reverse@mL:
  1065                           	callstack 0
  1066  000026                     reverse_square@mL:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x25
  1070  000026                     	ds	1
  1071  000027                     ___fldiv@aexp:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x26
  1075  000027                     	ds	1
  1076  000028                     ?___flmul:
  1077                           	callstack 0
  1078  000028                     turnLeft@delay_180:
  1079                           	callstack 0
  1080  000028                     turnRight@delay_180:
  1081                           	callstack 0
  1082  000028                     short_reverse@mR:
  1083                           	callstack 0
  1084  000028                     reverse_square@mR:
  1085                           	callstack 0
  1086  000028                     ___flmul@b:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x27
  1090  000028                     	ds	2
  1091  00002A                     ??_short_reverse:
  1092  00002A                     ??_reverse_square:
  1093  00002A                     turnLeft@i:
  1094                           	callstack 0
  1095  00002A                     turnRight@i:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x29
  1099  00002A                     	ds	2
  1100  00002C                     turnLeft@i_1321:
  1101                           	callstack 0
  1102  00002C                     turnRight@i_1344:
  1103                           	callstack 0
  1104  00002C                     ___flmul@a:
  1105                           	callstack 0
  1106                           
  1107                           ; 4 bytes @ 0x2B
  1108  00002C                     	ds	2
  1109  00002E                     turnLeft@i_1322:
  1110                           	callstack 0
  1111  00002E                     turnRight@i_1345:
  1112                           	callstack 0
  1113  00002E                     _dtoa$2987:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x2D
  1117  00002E                     	ds	2
  1118  000030                     ??___flmul:
  1119  000030                     turnLeft@delay:
  1120                           	callstack 0
  1121  000030                     turnRight@delay:
  1122                           	callstack 0
  1123  000030                     dtoa@p:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x2F
  1127  000030                     	ds	2
  1128  000032                     test_action@mL:
  1129                           	callstack 0
  1130  000032                     goback@mL:
  1131                           	callstack 0
  1132  000032                     dtoa@w:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x31
  1136  000032                     	ds	2
  1137  000034                     ___flmul@sign:
  1138                           	callstack 0
  1139  000034                     test_action@mR:
  1140                           	callstack 0
  1141  000034                     goback@mR:
  1142                           	callstack 0
  1143  000034                     dtoa@s:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x33
  1147  000034                     	ds	1
  1148  000035                     ___flmul@grs:
  1149                           	callstack 0
  1150                           
  1151                           ; 4 bytes @ 0x34
  1152  000035                     	ds	1
  1153  000036                     ??_goback:
  1154  000036                     calibration_motor@mL:
  1155                           	callstack 0
  1156  000036                     dtoa@n:
  1157                           	callstack 0
  1158                           
  1159                           ; 8 bytes @ 0x35
  1160  000036                     	ds	2
  1161  000038                     goback@i:
  1162                           	callstack 0
  1163  000038                     calibration_motor@mR:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x37
  1167  000038                     	ds	1
  1168  000039                     ___flmul@aexp:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x38
  1172  000039                     	ds	1
  1173  00003A                     ??_calibration_motor:
  1174  00003A                     ___flmul@bexp:
  1175                           	callstack 0
  1176  00003A                     action@mL:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x39
  1180  00003A                     	ds	1
  1181  00003B                     ___flmul@prod:
  1182                           	callstack 0
  1183                           
  1184                           ; 4 bytes @ 0x3A
  1185  00003B                     	ds	1
  1186  00003C                     action@mR:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x3B
  1190  00003C                     	ds	2
  1191  00003E                     action@color:
  1192                           	callstack 0
  1193  00003E                     dtoa@i:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x3D
  1197  00003E                     	ds	1
  1198  00003F                     ___flmul@temp:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x3E
  1202  00003F                     	ds	1
  1203  000040                     ?_vfpfcnvrt:
  1204                           	callstack 0
  1205  000040                     vfpfcnvrt@fp:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x3F
  1209  000040                     	ds	1
  1210  000041                     ?_roundf:
  1211                           	callstack 0
  1212  000041                     roundf@x:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x40
  1216  000041                     	ds	1
  1217  000042                     vfpfcnvrt@fmt:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x41
  1221  000042                     	ds	2
  1222  000044                     vfpfcnvrt@ap:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x43
  1226  000044                     	ds	1
  1227  000045                     ??_roundf:
  1228                           
  1229                           ; 1 bytes @ 0x44
  1230  000045                     	ds	1
  1231  000046                     ??_vfpfcnvrt:
  1232                           
  1233                           ; 1 bytes @ 0x45
  1234  000046                     	ds	2
  1235  000048                     vfpfcnvrt@ll:
  1236                           	callstack 0
  1237                           
  1238                           ; 8 bytes @ 0x47
  1239  000048                     	ds	1
  1240  000049                     _roundf$3349:
  1241                           	callstack 0
  1242                           
  1243                           ; 4 bytes @ 0x48
  1244  000049                     	ds	4
  1245  00004D                     roundf@e:
  1246                           	callstack 0
  1247                           
  1248                           ; 2 bytes @ 0x4C
  1249  00004D                     	ds	2
  1250  00004F                     _roundf$3348:
  1251                           	callstack 0
  1252                           
  1253                           ; 4 bytes @ 0x4E
  1254  00004F                     	ds	1
  1255  000050                     ?_vfprintf:
  1256                           	callstack 0
  1257  000050                     vfprintf@fp:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x4F
  1261  000050                     	ds	2
  1262  000052                     vfprintf@fmt:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x51
  1266  000052                     	ds	1
  1267  000053                     roundf@u:
  1268                           	callstack 0
  1269                           
  1270                           ; 4 bytes @ 0x52
  1271  000053                     	ds	1
  1272  000054                     vfprintf@ap:
  1273                           	callstack 0
  1274                           
  1275                           ; 2 bytes @ 0x53
  1276  000054                     	ds	2
  1277  000056                     vfprintf@cfmt:
  1278                           	callstack 0
  1279                           
  1280                           ; 2 bytes @ 0x55
  1281  000056                     	ds	1
  1282  000057                     roundf@y:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0x56
  1286  000057                     	ds	1
  1287  000058                     color_display@m:
  1288                           	callstack 0
  1289                           
  1290                           ; 2 bytes @ 0x57
  1291  000058                     	ds	2
  1292  00005A                     color_data_collection@m:
  1293                           	callstack 0
  1294                           
  1295                           ; 2 bytes @ 0x59
  1296  00005A                     	ds	1
  1297  00005B                     ?___fltol:
  1298                           	callstack 0
  1299  00005B                     ___fltol@f1:
  1300                           	callstack 0
  1301                           
  1302                           ; 4 bytes @ 0x5A
  1303  00005B                     	ds	1
  1304  00005C                     ??_color_data_collection:
  1305                           
  1306                           ; 1 bytes @ 0x5B
  1307  00005C                     	ds	3
  1308  00005F                     
  1309                           ; 1 bytes @ 0x5E
  1310 ;;
  1311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1312 ;;
  1313 ;; *************** function _main *****************
  1314 ;; Defined at:
  1315 ;;		line 29 in file "main.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  white          28   20[BANK1 ] struct white_card
  1320 ;;  motorR          9   57[BANK1 ] struct DC_motor
  1321 ;;  motorL          9   48[BANK1 ] struct DC_motor
  1322 ;;  rgb             8   12[BANK1 ] struct color_rgb
  1323 ;;  amb             8    0[BANK1 ] struct color_rgb
  1324 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1325 ;;  stop_signal     1   11[BANK1 ] unsigned char 
  1326 ;;  setup           1   10[BANK1 ] unsigned char 
  1327 ;; Return value:  Size  Location     Type
  1328 ;;                  1    wreg      void 
  1329 ;; Registers used:
  1330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1331 ;; Tracked objects:
  1332 ;;		On entry : 0/0
  1333 ;;		On exit  : 0/0
  1334 ;;		Unchanged: 0/0
  1335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1339 ;;      Totals:         0       2      66       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1340 ;;Total ram usage:       68 bytes
  1341 ;; Hardware stack levels required when called: 12
  1342 ;; This function calls:
  1343 ;;		_I2C_2_Master_Init
  1344 ;;		_Interrupts_init
  1345 ;;		_LED_OFF
  1346 ;;		_Timer0_init
  1347 ;;		_action
  1348 ;;		_amb_light_measure
  1349 ;;		_buggylight_init
  1350 ;;		_calibrate_white
  1351 ;;		_calibration_motor
  1352 ;;		_color_click_init
  1353 ;;		_detect_color
  1354 ;;		_distance_measure
  1355 ;;		_fullSpeedAhead
  1356 ;;		_initDCmotorsPWM
  1357 ;;		_initDCmotors_parameter
  1358 ;;		_initUSART4
  1359 ;;		_pin_init
  1360 ;;		_setup_init
  1361 ;;		_short_burst_back
  1362 ;;		_stop
  1363 ;;		_test_function
  1364 ;;		_verify_color
  1365 ;; This function is called by:
  1366 ;;		Startup code after reset
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text0
  1371  002FF8                     __ptext0:
  1372                           	callstack 0
  1373  002FF8                     _main:
  1374                           	callstack 19
  1375  002FF8                     
  1376                           ;main.c: 32:     I2C_2_Master_Init();
  1377  002FF8  ECD0  F02D         	call	_I2C_2_Master_Init	;wreg free
  1378  002FFC                     
  1379                           ;main.c: 33:     color_click_init();
  1380  002FFC  EC87  F02D         	call	_color_click_init	;wreg free
  1381  003000                     
  1382                           ;main.c: 34:     initDCmotorsPWM(199);
  1383  003000  0E00               	movlw	0
  1384  003002  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1385  003004  0EC7               	movlw	199
  1386  003006  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1387  003008  EC54  F02C         	call	_initDCmotorsPWM	;wreg free
  1388  00300C                     
  1389                           ;main.c: 35:     buggylight_init();
  1390  00300C  ECA6  F02E         	call	_buggylight_init	;wreg free
  1391  003010                     
  1392                           ;main.c: 36:     initUSART4();
  1393  003010  EC7C  F02E         	call	_initUSART4	;wreg free
  1394  003014                     
  1395                           ;main.c: 37:     Timer0_init();
  1396  003014  EC8B  F02E         	call	_Timer0_init	;wreg free
  1397  003018                     
  1398                           ;main.c: 38:     Interrupts_init();
  1399  003018  ECC1  F02E         	call	_Interrupts_init	;wreg free
  1400  00301C                     
  1401                           ;main.c: 39:     setup_init();
  1402  00301C  ECB1  F02E         	call	_setup_init	;wreg free
  1403  003020                     
  1404                           ;main.c: 41:     struct color_rgb rgb, amb;;main.c: 42:     struct white_card white;;mai
      +                          n.c: 46:     struct DC_motor motorL, motorR;;main.c: 47:     pin_init();
  1405  003020  EC5C  F02E         	call	_pin_init	;wreg free
  1406  003024                     
  1407                           ;main.c: 48:     initDCmotors_parameter(&motorL, &motorR);
  1408  003024  0EEC               	movlw	low main@motorL
  1409  003026  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1410  003028  0E01               	movlw	high main@motorL
  1411  00302A  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1412  00302C  0EF5               	movlw	low main@motorR
  1413  00302E  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1414  003030  0E01               	movlw	high main@motorR
  1415  003032  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1416  003034  EC26  F027         	call	_initDCmotors_parameter	;wreg free
  1417  003038                     
  1418                           ;main.c: 50:     unsigned char stop_signal = 0;
  1419  003038  0E00               	movlw	0
  1420  00303A  0101               	movlb	1	; () banked
  1421  00303C  6FC7               	movwf	main@stop_signal& (0+255),b
  1422  00303E                     
  1423                           ; BSR set to: 1
  1424                           ;main.c: 52:     unsigned int amb_light = 0;
  1425  00303E  0E00               	movlw	0
  1426  003040  6FC5               	movwf	(main@amb_light+1)& (0+255),b
  1427  003042  0E00               	movlw	0
  1428  003044  6FC4               	movwf	main@amb_light& (0+255),b
  1429  003046                     
  1430                           ; BSR set to: 1
  1431                           ;main.c: 55:     if (0 == 0){
  1432  003046  0E00               	movlw	0
  1433  003048  6FC6               	movwf	main@setup& (0+255),b
  1434                           
  1435                           ;main.c: 56:         while(!setup){
  1436  00304A  EFA2  F018         	goto	l5644
  1437  00304E                     l5614:
  1438                           
  1439                           ; BSR set to: 1
  1440                           ;main.c: 57:             LED_OFF();
  1441  00304E  EC1C  F02E         	call	_LED_OFF	;wreg free
  1442  003052                     
  1443                           ;main.c: 58:             LATDbits.LATD7 = 1;
  1444  003052  8E7C               	bsf	124,7,c	;volatile
  1445  003054                     
  1446                           ;main.c: 59:             LATHbits.LATH3 = 1;
  1447  003054  8680               	bsf	128,3,c	;volatile
  1448  003056                     l548:
  1449  003056  B48E               	btfsc	142,2,c	;volatile
  1450  003058  EF30  F018         	goto	u5791
  1451  00305C  EF32  F018         	goto	u5790
  1452  003060                     u5791:
  1453  003060  EF2B  F018         	goto	l548
  1454  003064                     u5790:
  1455  003064                     
  1456                           ;main.c: 61:             if (!PORTFbits.RF2){calibrate_white(&white); LATDbits.LATD7 = 0
      +                          ; _delay((unsigned long)((500)*(64000000/4000.0)));}
  1457  003064  B48E               	btfsc	142,2,c	;volatile
  1458  003066  EF37  F018         	goto	u5801
  1459  00306A  EF39  F018         	goto	u5800
  1460  00306E                     u5801:
  1461  00306E  EF4C  F018         	goto	l552
  1462  003072                     u5800:
  1463  003072  0ED0               	movlw	low main@white
  1464  003074  6E0C               	movwf	calibrate_white@w^0,c
  1465  003076  0E01               	movlw	high main@white
  1466  003078  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1467  00307A  EC05  F01C         	call	_calibrate_white	;wreg free
  1468  00307E  9E7C               	bcf	124,7,c	;volatile
  1469  003080  0E29               	movlw	41
  1470  003082  0100               	movlb	0	; () banked
  1471  003084  6FF7               	movwf	(??_main+1)& (0+255),b
  1472  003086  0E96               	movlw	150
  1473  003088  6FF6               	movwf	??_main& (0+255),b
  1474  00308A  0E7F               	movlw	127
  1475  00308C                     u5907:
  1476  00308C  2EE8               	decfsz	wreg,f,c
  1477  00308E  D7FE               	bra	u5907
  1478  003090  2FF6               	decfsz	??_main& (0+255),f,b
  1479  003092  D7FC               	bra	u5907
  1480  003094  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1481  003096  D7FA               	bra	u5907
  1482  003098                     l552:
  1483  003098  B68E               	btfsc	142,3,c	;volatile
  1484  00309A  EF51  F018         	goto	u5811
  1485  00309E  EF53  F018         	goto	u5810
  1486  0030A2                     u5811:
  1487  0030A2  EF4C  F018         	goto	l552
  1488  0030A6                     u5810:
  1489  0030A6                     
  1490                           ;main.c: 63:             if (!PORTFbits.RF3){amb_light = amb_light_measure(&amb); LATHbi
      +                          ts.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  1491  0030A6  B68E               	btfsc	142,3,c	;volatile
  1492  0030A8  EF58  F018         	goto	u5821
  1493  0030AC  EF5A  F018         	goto	u5820
  1494  0030B0                     u5821:
  1495  0030B0  EF72  F018         	goto	l5632
  1496  0030B4                     u5820:
  1497  0030B4  0EBC               	movlw	low main@amb
  1498  0030B6  0100               	movlb	0	; () banked
  1499  0030B8  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1500  0030BA  0E01               	movlw	high main@amb
  1501  0030BC  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1502  0030BE  EC19  F025         	call	_amb_light_measure	;wreg free
  1503  0030C2  C06A  F1C4         	movff	?_amb_light_measure,main@amb_light
  1504  0030C6  C06B  F1C5         	movff	?_amb_light_measure+1,main@amb_light+1
  1505  0030CA  9680               	bcf	128,3,c	;volatile
  1506  0030CC  0E29               	movlw	41
  1507  0030CE  0100               	movlb	0	; () banked
  1508  0030D0  6FF7               	movwf	(??_main+1)& (0+255),b
  1509  0030D2  0E96               	movlw	150
  1510  0030D4  6FF6               	movwf	??_main& (0+255),b
  1511  0030D6  0E7F               	movlw	127
  1512  0030D8                     u5917:
  1513  0030D8  2EE8               	decfsz	wreg,f,c
  1514  0030DA  D7FE               	bra	u5917
  1515  0030DC  2FF6               	decfsz	??_main& (0+255),f,b
  1516  0030DE  D7FC               	bra	u5917
  1517  0030E0  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1518  0030E2  D7FA               	bra	u5917
  1519  0030E4                     l5632:
  1520                           
  1521                           ;main.c: 64:             LATDbits.LATD7 = 1;
  1522  0030E4  8E7C               	bsf	124,7,c	;volatile
  1523  0030E6                     
  1524                           ;main.c: 65:             if (!PORTFbits.RF3){calibration_motor(&motorL, &motorR);}
  1525  0030E6  B68E               	btfsc	142,3,c	;volatile
  1526  0030E8  EF78  F018         	goto	u5831
  1527  0030EC  EF7A  F018         	goto	u5830
  1528  0030F0                     u5831:
  1529  0030F0  EF84  F018         	goto	l557
  1530  0030F4                     u5830:
  1531  0030F4  0EEC               	movlw	low main@motorL
  1532  0030F6  6E36               	movwf	calibration_motor@mL^0,c
  1533  0030F8  0E01               	movlw	high main@motorL
  1534  0030FA  6E37               	movwf	(calibration_motor@mL+1)^0,c
  1535  0030FC  0EF5               	movlw	low main@motorR
  1536  0030FE  6E38               	movwf	calibration_motor@mR^0,c
  1537  003100  0E01               	movlw	high main@motorR
  1538  003102  6E39               	movwf	(calibration_motor@mR+1)^0,c
  1539  003104  ECB3  F026         	call	_calibration_motor	;wreg free
  1540  003108                     l557:
  1541  003108  B48E               	btfsc	142,2,c	;volatile
  1542  00310A  EF89  F018         	goto	u5841
  1543  00310E  EF8B  F018         	goto	u5840
  1544  003112                     u5841:
  1545  003112  EF84  F018         	goto	l557
  1546  003116                     u5840:
  1547  003116                     
  1548                           ;main.c: 67:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; setup = 1;_delay((unsig
      +                          ned long)((500)*(64000000/4000.0)));}
  1549  003116  B48E               	btfsc	142,2,c	;volatile
  1550  003118  EF90  F018         	goto	u5851
  1551  00311C  EF92  F018         	goto	u5850
  1552  003120                     u5851:
  1553  003120  EFA2  F018         	goto	l5644
  1554  003124                     u5850:
  1555  003124  9E7C               	bcf	124,7,c	;volatile
  1556  003126  0E01               	movlw	1
  1557  003128  0101               	movlb	1	; () banked
  1558  00312A  6FC6               	movwf	main@setup& (0+255),b
  1559  00312C                     
  1560                           ; BSR set to: 1
  1561  00312C  0E29               	movlw	41
  1562  00312E  0100               	movlb	0	; () banked
  1563  003130  6FF7               	movwf	(??_main+1)& (0+255),b
  1564  003132  0E96               	movlw	150
  1565  003134  6FF6               	movwf	??_main& (0+255),b
  1566  003136  0E7F               	movlw	127
  1567  003138                     u5927:
  1568  003138  2EE8               	decfsz	wreg,f,c
  1569  00313A  D7FE               	bra	u5927
  1570  00313C  2FF6               	decfsz	??_main& (0+255),f,b
  1571  00313E  D7FC               	bra	u5927
  1572  003140  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1573  003142  D7FA               	bra	u5927
  1574  003144                     l5644:
  1575                           
  1576                           ;main.c: 56:         while(!setup){
  1577  003144  0101               	movlb	1	; () banked
  1578  003146  51C6               	movf	main@setup& (0+255),w,b
  1579  003148  B4D8               	btfsc	status,2,c
  1580  00314A  EFA9  F018         	goto	u5861
  1581  00314E  EFAB  F018         	goto	u5860
  1582  003152                     u5861:
  1583  003152  EF27  F018         	goto	l5614
  1584  003156                     u5860:
  1585  003156                     l5648:
  1586                           
  1587                           ; BSR set to: 1
  1588                           ;main.c: 81:             T0CON0bits.T0EN=1;
  1589  003156  8ED5               	bsf	213,7,c	;volatile
  1590  003158                     
  1591                           ; BSR set to: 1
  1592                           ;main.c: 82:             start_move = centisecond;
  1593  003158  C198  F196         	movff	_centisecond,_start_move
  1594  00315C  C199  F197         	movff	_centisecond+1,_start_move+1
  1595                           
  1596                           ;main.c: 83:             while (stop_signal == 0){
  1597  003160  EFCD  F018         	goto	l5656
  1598  003164                     l5652:
  1599                           
  1600                           ; BSR set to: 1
  1601                           ;main.c: 84:                 fullSpeedAhead(&motorL, &motorR);
  1602  003164  0EEC               	movlw	low main@motorL
  1603  003166  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1604  003168  0E01               	movlw	high main@motorL
  1605  00316A  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1606  00316C  0EF5               	movlw	low main@motorR
  1607  00316E  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1608  003170  0E01               	movlw	high main@motorR
  1609  003172  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1610  003174  ECDA  F029         	call	_fullSpeedAhead	;wreg free
  1611  003178                     
  1612                           ;main.c: 85:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1613  003178  0EEC               	movlw	low main@motorL
  1614  00317A  0100               	movlb	0	; () banked
  1615  00317C  6F6A               	movwf	distance_measure@mL& (0+255),b
  1616  00317E  0E01               	movlw	high main@motorL
  1617  003180  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1618  003182  0EF5               	movlw	low main@motorR
  1619  003184  6F6C               	movwf	distance_measure@mR& (0+255),b
  1620  003186  0E01               	movlw	high main@motorR
  1621  003188  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1622  00318A  C1C4  F06E         	movff	main@amb_light,distance_measure@amb_light
  1623  00318E  C1C5  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1624  003192  ECF4  F027         	call	_distance_measure	;wreg free
  1625  003196  0101               	movlb	1	; () banked
  1626  003198  6FC7               	movwf	main@stop_signal& (0+255),b
  1627  00319A                     l5656:
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;main.c: 83:             while (stop_signal == 0){
  1631  00319A  51C7               	movf	main@stop_signal& (0+255),w,b
  1632  00319C  B4D8               	btfsc	status,2,c
  1633  00319E  EFD3  F018         	goto	u5871
  1634  0031A2  EFD5  F018         	goto	u5870
  1635  0031A6                     u5871:
  1636  0031A6  EFB2  F018         	goto	l5652
  1637  0031AA                     u5870:
  1638  0031AA                     
  1639                           ; BSR set to: 1
  1640                           ;main.c: 87:             T0CON0bits.T0EN=0;
  1641  0031AA  9ED5               	bcf	213,7,c	;volatile
  1642                           
  1643                           ;main.c: 88:             stop_move = centisecond;
  1644  0031AC  C198  F194         	movff	_centisecond,_stop_move
  1645  0031B0  C199  F195         	movff	_centisecond+1,_stop_move+1
  1646  0031B4                     
  1647                           ; BSR set to: 1
  1648                           ;main.c: 89:             if ((stop_move-start_move)>1){
  1649  0031B4  5196               	movf	_start_move& (0+255),w,b
  1650  0031B6  5D94               	subwf	_stop_move& (0+255),w,b
  1651  0031B8  0100               	movlb	0	; () banked
  1652  0031BA  6FF6               	movwf	??_main& (0+255),b
  1653  0031BC  0101               	movlb	1	; () banked
  1654  0031BE  5197               	movf	(_start_move+1)& (0+255),w,b
  1655  0031C0  5995               	subwfb	(_stop_move+1)& (0+255),w,b
  1656  0031C2  0100               	movlb	0	; () banked
  1657  0031C4  6FF7               	movwf	(??_main+1)& (0+255),b
  1658  0031C6  51F7               	movf	(??_main+1)& (0+255),w,b
  1659  0031C8  E109               	bnz	u5880
  1660  0031CA  0E02               	movlw	2
  1661  0031CC  5DF6               	subwf	??_main& (0+255),w,b
  1662  0031CE  A0D8               	btfss	status,0,c
  1663  0031D0  EFEC  F018         	goto	u5881
  1664  0031D4  EFEE  F018         	goto	u5880
  1665  0031D8                     u5881:
  1666  0031D8  EF06  F019         	goto	l5664
  1667  0031DC                     u5880:
  1668  0031DC                     
  1669                           ; BSR set to: 0
  1670                           ;main.c: 90:                 memory[array_index] = (stop_move-start_move);
  1671  0031DC  0101               	movlb	1	; () banked
  1672  0031DE  5196               	movf	_start_move& (0+255),w,b
  1673  0031E0  5D94               	subwf	_stop_move& (0+255),w,b
  1674  0031E2  0100               	movlb	0	; () banked
  1675  0031E4  6FF6               	movwf	??_main& (0+255),b
  1676  0031E6  0101               	movlb	1	; () banked
  1677  0031E8  5197               	movf	(_start_move+1)& (0+255),w,b
  1678  0031EA  5995               	subwfb	(_stop_move+1)& (0+255),w,b
  1679  0031EC  0100               	movlb	0	; () banked
  1680  0031EE  6FF7               	movwf	(??_main+1)& (0+255),b
  1681  0031F0  0101               	movlb	1	; () banked
  1682  0031F2  519B               	movf	_array_index& (0+255),w,b
  1683  0031F4  0D02               	mullw	2
  1684  0031F6  0E3C               	movlw	low _memory
  1685  0031F8  24F3               	addwf	243,w,c
  1686  0031FA  6ED9               	movwf	fsr2l,c
  1687  0031FC  0E01               	movlw	high _memory
  1688  0031FE  20F4               	addwfc	prodh,w,c
  1689  003200  6EDA               	movwf	fsr2h,c
  1690  003202  C0F6  FFDE         	movff	??_main,postinc2
  1691  003206  C0F7  FFDD         	movff	??_main+1,postdec2
  1692  00320A                     
  1693                           ; BSR set to: 1
  1694                           ;main.c: 91:                 array_index++;
  1695  00320A  2B9B               	incf	_array_index& (0+255),f,b
  1696  00320C                     l5664:
  1697                           
  1698                           ;main.c: 93:             stop(&motorL, &motorR);
  1699  00320C  0EEC               	movlw	low main@motorL
  1700  00320E  6E1A               	movwf	stop@mL^0,c
  1701  003210  0E01               	movlw	high main@motorL
  1702  003212  6E1B               	movwf	(stop@mL+1)^0,c
  1703  003214  0EF5               	movlw	low main@motorR
  1704  003216  6E1C               	movwf	stop@mR^0,c
  1705  003218  0E01               	movlw	high main@motorR
  1706  00321A  6E1D               	movwf	(stop@mR+1)^0,c
  1707  00321C  EC7C  F029         	call	_stop	;wreg free
  1708  003220                     
  1709                           ;main.c: 94:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1710  003220  0E52               	movlw	82
  1711  003222  0100               	movlb	0	; () banked
  1712  003224  6FF7               	movwf	(??_main+1)& (0+255),b
  1713  003226  0E2B               	movlw	43
  1714  003228  6FF6               	movwf	??_main& (0+255),b
  1715  00322A  0E00               	movlw	0
  1716  00322C                     u5937:
  1717  00322C  2EE8               	decfsz	wreg,f,c
  1718  00322E  D7FE               	bra	u5937
  1719  003230  2FF6               	decfsz	??_main& (0+255),f,b
  1720  003232  D7FC               	bra	u5937
  1721  003234  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1722  003236  D7FA               	bra	u5937
  1723  003238  F000               	nop	
  1724  00323A                     
  1725                           ;main.c: 95:             short_burst_back(&motorL, &motorR);
  1726  00323A  0EEC               	movlw	low main@motorL
  1727  00323C  6E20               	movwf	short_burst_back@mL^0,c
  1728  00323E  0E01               	movlw	high main@motorL
  1729  003240  6E21               	movwf	(short_burst_back@mL+1)^0,c
  1730  003242  0EF5               	movlw	low main@motorR
  1731  003244  6E22               	movwf	short_burst_back@mR^0,c
  1732  003246  0E01               	movlw	high main@motorR
  1733  003248  6E23               	movwf	(short_burst_back@mR+1)^0,c
  1734  00324A  ECB6  F02C         	call	_short_burst_back	;wreg free
  1735  00324E                     
  1736                           ;main.c: 96:             color = detect_color(&rgb, &white);
  1737  00324E  0EC8               	movlw	low main@rgb
  1738  003250  0100               	movlb	0	; () banked
  1739  003252  6F71               	movwf	detect_color@m& (0+255),b
  1740  003254  0E01               	movlw	high main@rgb
  1741  003256  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1742  003258  0ED0               	movlw	low main@white
  1743  00325A  6F73               	movwf	detect_color@w& (0+255),b
  1744  00325C  0E01               	movlw	high main@white
  1745  00325E  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1746  003260  EC0A  F007         	call	_detect_color	;wreg free
  1747  003264  0101               	movlb	1	; () banked
  1748  003266  6F9A               	movwf	_color& (0+255),b
  1749  003268                     
  1750                           ; BSR set to: 1
  1751                           ;main.c: 97:             color = verify_color(color, &rgb, &white);
  1752  003268  0EC8               	movlw	low main@rgb
  1753  00326A  0100               	movlb	0	; () banked
  1754  00326C  6F92               	movwf	verify_color@m& (0+255),b
  1755  00326E  0E01               	movlw	high main@rgb
  1756  003270  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1757  003272  0ED0               	movlw	low main@white
  1758  003274  6F94               	movwf	verify_color@w& (0+255),b
  1759  003276  0E01               	movlw	high main@white
  1760  003278  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1761  00327A  0101               	movlb	1	; () banked
  1762  00327C  519A               	movf	_color& (0+255),w,b
  1763  00327E  EC24  F02A         	call	_verify_color
  1764  003282  0101               	movlb	1	; () banked
  1765  003284  6F9A               	movwf	_color& (0+255),b
  1766  003286                     
  1767                           ; BSR set to: 1
  1768                           ;main.c: 100:             action(color, &motorL, &motorR);
  1769  003286  0EEC               	movlw	low main@motorL
  1770  003288  6E3A               	movwf	action@mL^0,c
  1771  00328A  0E01               	movlw	high main@motorL
  1772  00328C  6E3B               	movwf	(action@mL+1)^0,c
  1773  00328E  0EF5               	movlw	low main@motorR
  1774  003290  6E3C               	movwf	action@mR^0,c
  1775  003292  0E01               	movlw	high main@motorR
  1776  003294  6E3D               	movwf	(action@mR+1)^0,c
  1777  003296  519A               	movf	_color& (0+255),w,b
  1778  003298  EC96  F016         	call	_action
  1779  00329C                     
  1780                           ;main.c: 101:             color = 0;
  1781  00329C  0E00               	movlw	0
  1782  00329E  0101               	movlb	1	; () banked
  1783  0032A0  6F9A               	movwf	_color& (0+255),b
  1784  0032A2                     
  1785                           ; BSR set to: 1
  1786                           ;main.c: 102:             stop_signal = 0;
  1787  0032A2  0E00               	movlw	0
  1788  0032A4  6FC7               	movwf	main@stop_signal& (0+255),b
  1789  0032A6  EFAB  F018         	goto	l5648
  1790  0032AA  EF18  F000         	goto	start
  1791  0032AE                     __end_of_main:
  1792                           	callstack 0
  1793                           
  1794 ;; *************** function _verify_color *****************
  1795 ;; Defined at:
  1796 ;;		line 364 in file "color.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  color           1    wreg     unsigned char 
  1799 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1800 ;;		 -> main@rgb(8), 
  1801 ;;  w               2   52[BANK0 ] PTR struct white_card
  1802 ;;		 -> main@white(28), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  color           1   58[BANK0 ] unsigned char 
  1805 ;;  color2          2   56[BANK0 ] unsigned int 
  1806 ;;  color3          2    0        unsigned int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      unsigned char 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1817 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1819 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1820 ;;Total ram usage:        9 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 6
  1823 ;; This function calls:
  1824 ;;		_detect_color
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text1
  1831  005448                     __ptext1:
  1832                           	callstack 0
  1833  005448                     _verify_color:
  1834                           	callstack 24
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;incstack = 0
  1838                           ;verify_color@color stored from wreg
  1839  005448  0100               	movlb	0	; () banked
  1840  00544A  6F9A               	movwf	verify_color@color& (0+255),b
  1841  00544C                     
  1842                           ;color.c: 364: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 365: {;color.c: 366:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1843  00544C  0E05               	movlw	5
  1844  00544E  0100               	movlb	0	; () banked
  1845  005450  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1846  005452  0E0F               	movlw	15
  1847  005454  6F96               	movwf	??_verify_color& (0+255),b
  1848  005456  0EF1               	movlw	241
  1849  005458                     u5947:
  1850  005458  2EE8               	decfsz	wreg,f,c
  1851  00545A  D7FE               	bra	u5947
  1852  00545C  2F96               	decfsz	??_verify_color& (0+255),f,b
  1853  00545E  D7FC               	bra	u5947
  1854  005460  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1855  005462  D7FA               	bra	u5947
  1856  005464                     
  1857                           ;color.c: 367:     unsigned int color2, color3;;color.c: 368:     color2 = detect_color(
      +                          m,w);
  1858  005464  C092  F071         	movff	verify_color@m,detect_color@m
  1859  005468  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1860  00546C  C094  F073         	movff	verify_color@w,detect_color@w
  1861  005470  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1862  005474  EC0A  F007         	call	_detect_color	;wreg free
  1863  005478  0100               	movlb	0	; () banked
  1864  00547A  6F96               	movwf	??_verify_color& (0+255),b
  1865  00547C  5196               	movf	??_verify_color& (0+255),w,b
  1866  00547E  6F98               	movwf	verify_color@color2& (0+255),b
  1867  005480  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1868  005482                     
  1869                           ; BSR set to: 0
  1870                           ;color.c: 369:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1871  005482  0E05               	movlw	5
  1872  005484  0100               	movlb	0	; () banked
  1873  005486  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1874  005488  0E0F               	movlw	15
  1875  00548A  6F96               	movwf	??_verify_color& (0+255),b
  1876  00548C  0EF1               	movlw	241
  1877  00548E                     u5957:
  1878  00548E  2EE8               	decfsz	wreg,f,c
  1879  005490  D7FE               	bra	u5957
  1880  005492  2F96               	decfsz	??_verify_color& (0+255),f,b
  1881  005494  D7FC               	bra	u5957
  1882  005496  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1883  005498  D7FA               	bra	u5957
  1884  00549A                     
  1885                           ;color.c: 371:     if (color == color2){return color;}
  1886  00549A  0100               	movlb	0	; () banked
  1887  00549C  519A               	movf	verify_color@color& (0+255),w,b
  1888  00549E  6F96               	movwf	??_verify_color& (0+255),b
  1889  0054A0  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1890  0054A2  5198               	movf	verify_color@color2& (0+255),w,b
  1891  0054A4  1996               	xorwf	??_verify_color& (0+255),w,b
  1892  0054A6  E107               	bnz	u5481
  1893  0054A8  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1894  0054AA  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1895  0054AC  A4D8               	btfss	status,2,c
  1896  0054AE  EF5B  F02A         	goto	u5481
  1897  0054B2  EF5D  F02A         	goto	u5480
  1898  0054B6                     u5481:
  1899  0054B6  EF60  F02A         	goto	l5338
  1900  0054BA                     u5480:
  1901  0054BA                     
  1902                           ; BSR set to: 0
  1903  0054BA  519A               	movf	verify_color@color& (0+255),w,b
  1904  0054BC  EF61  F02A         	goto	l168
  1905  0054C0                     l5338:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;color.c: 374:         return color;}
  1909  0054C0  0E00               	movlw	0
  1910  0054C2                     l168:
  1911                           
  1912                           ; BSR set to: 0
  1913  0054C2  0012               	return		;funcret
  1914  0054C4                     __end_of_verify_color:
  1915                           	callstack 0
  1916                           
  1917 ;; *************** function _test_function *****************
  1918 ;; Defined at:
  1919 ;;		line 34 in file "test_and_calibration.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;  test_code       1    wreg     unsigned char 
  1922 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1923 ;;		 -> main@rgb(8), 
  1924 ;;  w               2  136[BANK0 ] PTR struct white_card
  1925 ;;		 -> main@white(28), 
  1926 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1927 ;;		 -> main@motorL(9), 
  1928 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1929 ;;		 -> main@motorR(9), 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  test_code       1  149[BANK0 ] unsigned char 
  1932 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1933 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1934 ;;  color           1  147[BANK0 ] unsigned char 
  1935 ;;  complete        1  146[BANK0 ] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1945 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1948 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1949 ;;Total ram usage:       16 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 11
  1952 ;; This function calls:
  1953 ;;		_LED_C
  1954 ;;		_amb_light_measure
  1955 ;;		_calibrate_white
  1956 ;;		_color_data_collection
  1957 ;;		_color_display
  1958 ;;		_color_predict
  1959 ;;		_detect_color
  1960 ;;		_distance_measure
  1961 ;;		_fullSpeedAhead
  1962 ;;		_read_color
  1963 ;;		_stop
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text2
  1970  0045BC                     __ptext2:
  1971                           	callstack 0
  1972  0045BC                     _test_function:
  1973                           	callstack 19
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;incstack = 0
  1977                           ;test_function@test_code stored from wreg
  1978  0045BC  0100               	movlb	0	; () banked
  1979  0045BE  6FF5               	movwf	test_function@test_code& (0+255),b
  1980  0045C0                     
  1981                           ;test_and_calibration.c: 34: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 35: {;test_and_calibration.c: 36:     unsigned char complete = 0;
  1982  0045C0  0E00               	movlw	0
  1983  0045C2  0100               	movlb	0	; () banked
  1984  0045C4  6FF2               	movwf	test_function@complete& (0+255),b
  1985                           
  1986                           ;test_and_calibration.c: 38:     unsigned char stop_signal = 0;
  1987  0045C6  0E00               	movlw	0
  1988  0045C8  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1989                           
  1990                           ;test_and_calibration.c: 39:     unsigned int amb_light = 0;
  1991  0045CA  0E00               	movlw	0
  1992  0045CC  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1993  0045CE  0E00               	movlw	0
  1994  0045D0  6FF0               	movwf	test_function@amb_light& (0+255),b
  1995  0045D2                     
  1996                           ; BSR set to: 0
  1997                           ;test_and_calibration.c: 41:     if (test_code == 2){calibrate_white(w);}
  1998  0045D2  0E02               	movlw	2
  1999  0045D4  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2000  0045D6  A4D8               	btfss	status,2,c
  2001  0045D8  EFF0  F022         	goto	u5571
  2002  0045DC  EFF2  F022         	goto	u5570
  2003  0045E0                     u5571:
  2004  0045E0  EFF8  F022         	goto	l5428
  2005  0045E4                     u5570:
  2006  0045E4                     
  2007                           ; BSR set to: 0
  2008  0045E4  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  2009  0045E8  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2010  0045EC  EC05  F01C         	call	_calibrate_white	;wreg free
  2011  0045F0                     l5428:
  2012                           
  2013                           ;test_and_calibration.c: 42:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2014  0045F0  0E04               	movlw	4
  2015  0045F2  0100               	movlb	0	; () banked
  2016  0045F4  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2017  0045F6  A4D8               	btfss	status,2,c
  2018  0045F8  EF00  F023         	goto	u5581
  2019  0045FC  EF02  F023         	goto	u5580
  2020  004600                     u5581:
  2021  004600  EF0C  F023         	goto	l5432
  2022  004604                     u5580:
  2023  004604                     
  2024                           ; BSR set to: 0
  2025  004604  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  2026  004608  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2027  00460C  EC19  F025         	call	_amb_light_measure	;wreg free
  2028  004610  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  2029  004614  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2030  004618                     l5432:
  2031                           
  2032                           ;test_and_calibration.c: 46:         if (test_code == 1){
  2033  004618  0100               	movlb	0	; () banked
  2034  00461A  05F5               	decf	test_function@test_code& (0+255),w,b
  2035  00461C  A4D8               	btfss	status,2,c
  2036  00461E  EF13  F023         	goto	u5591
  2037  004622  EF15  F023         	goto	u5590
  2038  004626                     u5591:
  2039  004626  EF23  F023         	goto	l5440
  2040  00462A                     u5590:
  2041  00462A                     
  2042                           ; BSR set to: 0
  2043                           ;test_and_calibration.c: 47:             LED_C();
  2044  00462A  EC4C  F02E         	call	_LED_C	;wreg free
  2045  00462E                     
  2046                           ;test_and_calibration.c: 48:             read_color(m);
  2047  00462E  C0E6  F00C         	movff	test_function@m,read_color@m
  2048  004632  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  2049  004636  ECCB  F02A         	call	_read_color	;wreg free
  2050  00463A                     
  2051                           ;test_and_calibration.c: 49:             color_display(m);
  2052  00463A  C0E6  F058         	movff	test_function@m,color_display@m
  2053  00463E  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  2054  004642  EC62  F02A         	call	_color_display	;wreg free
  2055  004646                     l5440:
  2056                           
  2057                           ;test_and_calibration.c: 52:         if (test_code == 2){
  2058  004646  0E02               	movlw	2
  2059  004648  0100               	movlb	0	; () banked
  2060  00464A  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2061  00464C  A4D8               	btfss	status,2,c
  2062  00464E  EF2B  F023         	goto	u5601
  2063  004652  EF2D  F023         	goto	u5600
  2064  004656                     u5601:
  2065  004656  EF3C  F023         	goto	l5446
  2066  00465A                     u5600:
  2067  00465A                     
  2068                           ; BSR set to: 0
  2069                           ;test_and_calibration.c: 53:             color = detect_color(m,w);
  2070  00465A  C0E6  F071         	movff	test_function@m,detect_color@m
  2071  00465E  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  2072  004662  C0E8  F073         	movff	test_function@w,detect_color@w
  2073  004666  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  2074  00466A  EC0A  F007         	call	_detect_color	;wreg free
  2075  00466E  0100               	movlb	0	; () banked
  2076  004670  6FF3               	movwf	test_function@color& (0+255),b
  2077  004672                     
  2078                           ; BSR set to: 0
  2079                           ;test_and_calibration.c: 55:             color_predict(color);
  2080  004672  51F3               	movf	test_function@color& (0+255),w,b
  2081  004674  ECB9  F02D         	call	_color_predict
  2082  004678                     l5446:
  2083                           
  2084                           ;test_and_calibration.c: 58:         if (test_code == 3){
  2085  004678  0E03               	movlw	3
  2086  00467A  0100               	movlb	0	; () banked
  2087  00467C  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2088  00467E  A4D8               	btfss	status,2,c
  2089  004680  EF44  F023         	goto	u5611
  2090  004684  EF46  F023         	goto	u5610
  2091  004688                     u5611:
  2092  004688  EF59  F023         	goto	l5456
  2093  00468C                     u5610:
  2094  00468C  EF51  F023         	goto	l5454
  2095  004690                     l5450:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;test_and_calibration.c: 60:                 color_data_collection(m);
  2099  004690  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  2100  004694  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2101  004698  EC85  F020         	call	_color_data_collection	;wreg free
  2102  00469C                     
  2103                           ;test_and_calibration.c: 61:                 complete = 1;
  2104  00469C  0E01               	movlw	1
  2105  00469E  0100               	movlb	0	; () banked
  2106  0046A0  6FF2               	movwf	test_function@complete& (0+255),b
  2107  0046A2                     l5454:
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;test_and_calibration.c: 59:             while (complete == 0){
  2111  0046A2  51F2               	movf	test_function@complete& (0+255),w,b
  2112  0046A4  B4D8               	btfsc	status,2,c
  2113  0046A6  EF57  F023         	goto	u5621
  2114  0046AA  EF59  F023         	goto	u5620
  2115  0046AE                     u5621:
  2116  0046AE  EF48  F023         	goto	l5450
  2117  0046B2                     u5620:
  2118  0046B2                     l5456:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;test_and_calibration.c: 65:         if (test_code == 4){
  2122  0046B2  0E04               	movlw	4
  2123  0046B4  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2124  0046B6  A4D8               	btfss	status,2,c
  2125  0046B8  EF60  F023         	goto	u5631
  2126  0046BC  EF62  F023         	goto	u5630
  2127  0046C0                     u5631:
  2128  0046C0  EF0C  F023         	goto	l5432
  2129  0046C4                     u5630:
  2130  0046C4  EF7E  F023         	goto	l5464
  2131  0046C8                     l5460:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;test_and_calibration.c: 67:                 fullSpeedAhead(mL, mR);
  2135  0046C8  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  2136  0046CC  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  2137  0046D0  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  2138  0046D4  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  2139  0046D8  ECDA  F029         	call	_fullSpeedAhead	;wreg free
  2140  0046DC                     
  2141                           ;test_and_calibration.c: 68:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  2142  0046DC  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  2143  0046E0  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  2144  0046E4  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  2145  0046E8  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  2146  0046EC  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  2147  0046F0  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  2148  0046F4  ECF4  F027         	call	_distance_measure	;wreg free
  2149  0046F8  0100               	movlb	0	; () banked
  2150  0046FA  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2151  0046FC                     l5464:
  2152                           
  2153                           ; BSR set to: 0
  2154                           ;test_and_calibration.c: 66:             while (stop_signal == 0){
  2155  0046FC  51F4               	movf	test_function@stop_signal& (0+255),w,b
  2156  0046FE  B4D8               	btfsc	status,2,c
  2157  004700  EF84  F023         	goto	u5641
  2158  004704  EF86  F023         	goto	u5640
  2159  004708                     u5641:
  2160  004708  EF64  F023         	goto	l5460
  2161  00470C                     u5640:
  2162  00470C                     
  2163                           ; BSR set to: 0
  2164                           ;test_and_calibration.c: 70:             stop(mL, mR);
  2165  00470C  C0EA  F01A         	movff	test_function@mL,stop@mL
  2166  004710  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  2167  004714  C0EC  F01C         	movff	test_function@mR,stop@mR
  2168  004718  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  2169  00471C  EC7C  F029         	call	_stop	;wreg free
  2170  004720                     
  2171                           ;test_and_calibration.c: 71:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  2172  004720  0E52               	movlw	82
  2173  004722  0100               	movlb	0	; () banked
  2174  004724  6FEF               	movwf	(??_test_function+1)& (0+255),b
  2175  004726  0E2B               	movlw	43
  2176  004728  6FEE               	movwf	??_test_function& (0+255),b
  2177  00472A  0E00               	movlw	0
  2178  00472C                     u5967:
  2179  00472C  2EE8               	decfsz	wreg,f,c
  2180  00472E  D7FE               	bra	u5967
  2181  004730  2FEE               	decfsz	??_test_function& (0+255),f,b
  2182  004732  D7FC               	bra	u5967
  2183  004734  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  2184  004736  D7FA               	bra	u5967
  2185  004738  F000               	nop	
  2186  00473A                     
  2187                           ;test_and_calibration.c: 72:             stop_signal = 0;
  2188  00473A  0E00               	movlw	0
  2189  00473C  0100               	movlb	0	; () banked
  2190  00473E  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2191  004740  EF0C  F023         	goto	l5432
  2192  004744  0012               	return		;funcret
  2193  004746                     __end_of_test_function:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function _distance_measure *****************
  2197 ;; Defined at:
  2198 ;;		line 400 in file "color.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  2201 ;;		 -> main@motorL(9), 
  2202 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  2203 ;;		 -> main@motorR(9), 
  2204 ;;  amb_light       2   14[BANK0 ] unsigned int 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  threshold       2   26[BANK0 ] unsigned int 
  2207 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2208 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2209 ;;  stop            1   28[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      unsigned char 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2219 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;Total ram usage:       19 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 5
  2226 ;; This function calls:
  2227 ;;		_LED_C
  2228 ;;		___flmul
  2229 ;;		___xxtofl
  2230 ;;		_color_read_Clear
  2231 ;;		_color_read_Green
  2232 ;;		_lroundf
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;;		_test_function
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text3
  2240  004FE8                     __ptext3:
  2241                           	callstack 0
  2242  004FE8                     _distance_measure:
  2243                           	callstack 24
  2244  004FE8  0E00               	movlw	0
  2245  004FEA  0100               	movlb	0	; () banked
  2246  004FEC  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2247  004FEE  0E00               	movlw	0
  2248  004FF0  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2249                           
  2250                           ;color.c: 403:     unsigned char stop = 0;
  2251  004FF2  0E00               	movlw	0
  2252  004FF4  6F7C               	movwf	distance_measure@stop& (0+255),b
  2253                           
  2254                           ;color.c: 404:     unsigned int threshold = 0;
  2255  004FF6  0E00               	movlw	0
  2256  004FF8  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2257  004FFA  0E00               	movlw	0
  2258  004FFC  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2259  004FFE                     
  2260                           ; BSR set to: 0
  2261                           ;color.c: 405:     LED_C();
  2262  004FFE  EC4C  F02E         	call	_LED_C	;wreg free
  2263  005002                     
  2264                           ;color.c: 406:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2265  005002  0E09               	movlw	9
  2266  005004  0100               	movlb	0	; () banked
  2267  005006  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2268  005008  0E1E               	movlw	30
  2269  00500A  6F70               	movwf	??_distance_measure& (0+255),b
  2270  00500C  0EE4               	movlw	228
  2271  00500E                     u5977:
  2272  00500E  2EE8               	decfsz	wreg,f,c
  2273  005010  D7FE               	bra	u5977
  2274  005012  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2275  005014  D7FC               	bra	u5977
  2276  005016  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2277  005018  D7FA               	bra	u5977
  2278  00501A  F000               	nop	
  2279  00501C                     
  2280                           ;color.c: 407:     CC_amb = color_read_Clear();
  2281  00501C  ECC6  F02B         	call	_color_read_Clear	;wreg free
  2282  005020  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2283  005024  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2284  005028  EC76  F02B         	call	_color_read_Green	;wreg free
  2285  00502C                     
  2286                           ;color.c: 409:     threshold = lroundf((float)amb_light * 1.05);
  2287  00502C  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2288  005030  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2289  005034  6A03               	clrf	(___xxtofl@val+2)^0,c
  2290  005036  6A04               	clrf	(___xxtofl@val+3)^0,c
  2291  005038  0E00               	movlw	0
  2292  00503A  ECAB  F01F         	call	___xxtofl
  2293  00503E  C001  F028         	movff	?___xxtofl,___flmul@b
  2294  005042  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2295  005046  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2296  00504A  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2297  00504E  0E66               	movlw	102
  2298  005050  6E2C               	movwf	___flmul@a^0,c
  2299  005052  0E66               	movlw	102
  2300  005054  6E2D               	movwf	(___flmul@a+1)^0,c
  2301  005056  0E86               	movlw	134
  2302  005058  6E2E               	movwf	(___flmul@a+2)^0,c
  2303  00505A  0E3F               	movlw	63
  2304  00505C  6E2F               	movwf	(___flmul@a+3)^0,c
  2305  00505E  EC68  F00F         	call	___flmul	;wreg free
  2306  005062  C028  F074         	movff	?___flmul,_distance_measure$3347
  2307  005066  C029  F075         	movff	?___flmul+1,_distance_measure$3347+1
  2308  00506A  C02A  F076         	movff	?___flmul+2,_distance_measure$3347+2
  2309  00506E  C02B  F077         	movff	?___flmul+3,_distance_measure$3347+3
  2310  005072                     
  2311                           ;color.c: 409:     threshold = lroundf((float)amb_light * 1.05);
  2312  005072  C074  F066         	movff	_distance_measure$3347,lroundf@x
  2313  005076  C075  F067         	movff	_distance_measure$3347+1,lroundf@x+1
  2314  00507A  C076  F068         	movff	_distance_measure$3347+2,lroundf@x+2
  2315  00507E  C077  F069         	movff	_distance_measure$3347+3,lroundf@x+3
  2316  005082  EC33  F02D         	call	_lroundf	;wreg free
  2317  005086  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2318  00508A  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2319  00508E                     
  2320                           ;color.c: 412:     if (CC_amb >= threshold){stop = 1;}
  2321  00508E  0100               	movlb	0	; () banked
  2322  005090  517A               	movf	distance_measure@threshold& (0+255),w,b
  2323  005092  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2324  005094  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2325  005096  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2326  005098  A0D8               	btfss	status,0,c
  2327  00509A  EF51  F028         	goto	u5381
  2328  00509E  EF53  F028         	goto	u5380
  2329  0050A2                     u5381:
  2330  0050A2  EF55  F028         	goto	l175
  2331  0050A6                     u5380:
  2332  0050A6                     
  2333                           ; BSR set to: 0
  2334  0050A6  0E01               	movlw	1
  2335  0050A8  6F7C               	movwf	distance_measure@stop& (0+255),b
  2336  0050AA                     l175:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;color.c: 413:     return stop;
  2340  0050AA  517C               	movf	distance_measure@stop& (0+255),w,b
  2341  0050AC                     
  2342                           ; BSR set to: 0
  2343  0050AC  0012               	return		;funcret
  2344  0050AE                     __end_of_distance_measure:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _detect_color *****************
  2348 ;; Defined at:
  2349 ;;		line 290 in file "color.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2352 ;;		 -> main@rgb(8), 
  2353 ;;  w               2   19[BANK0 ] PTR struct white_card
  2354 ;;		 -> main@white(28), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  BG              2   44[BANK0 ] unsigned int 
  2357 ;;  RR              2   42[BANK0 ] unsigned int 
  2358 ;;  GG              2   39[BANK0 ] unsigned int 
  2359 ;;  BR              2   37[BANK0 ] unsigned int 
  2360 ;;  GB              2   35[BANK0 ] unsigned int 
  2361 ;;  RB              2   33[BANK0 ] unsigned int 
  2362 ;;  BB              2   31[BANK0 ] unsigned int 
  2363 ;;  GR              2   29[BANK0 ] unsigned int 
  2364 ;;  BC              2   27[BANK0 ] unsigned int 
  2365 ;;  RG              2   25[BANK0 ] unsigned int 
  2366 ;;  color           1   41[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      unsigned char 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2376 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;Total ram usage:       33 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 5
  2383 ;; This function calls:
  2384 ;;		_LED_B
  2385 ;;		_LED_G
  2386 ;;		_LED_R
  2387 ;;		___fldiv
  2388 ;;		___flmul
  2389 ;;		___xxtofl
  2390 ;;		_compare
  2391 ;;		_lroundf
  2392 ;;		_read_color
  2393 ;;		_toggle_light
  2394 ;; This function is called by:
  2395 ;;		_verify_color
  2396 ;;		_main
  2397 ;;		_test_function
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text4
  2402  000E14                     __ptext4:
  2403                           	callstack 0
  2404  000E14                     _detect_color:
  2405                           	callstack 24
  2406  000E14  0E00               	movlw	0
  2407  000E16  0100               	movlb	0	; () banked
  2408  000E18  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2409  000E1A  0E00               	movlw	0
  2410  000E1C  6F79               	movwf	detect_color@RG& (0+255),b
  2411  000E1E  0E00               	movlw	0
  2412  000E20  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  2413  000E22  0E00               	movlw	0
  2414  000E24  6F81               	movwf	detect_color@RB& (0+255),b
  2415  000E26  0E00               	movlw	0
  2416  000E28  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  2417  000E2A  0E00               	movlw	0
  2418  000E2C  6F7D               	movwf	detect_color@GR& (0+255),b
  2419  000E2E  0E00               	movlw	0
  2420  000E30  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  2421  000E32  0E00               	movlw	0
  2422  000E34  6F87               	movwf	detect_color@GG& (0+255),b
  2423  000E36  0E00               	movlw	0
  2424  000E38  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  2425  000E3A  0E00               	movlw	0
  2426  000E3C  6F83               	movwf	detect_color@GB& (0+255),b
  2427  000E3E  0E00               	movlw	0
  2428  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  2429  000E42  0E00               	movlw	0
  2430  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  2431  000E46  0E00               	movlw	0
  2432  000E48  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  2433  000E4A  0E00               	movlw	0
  2434  000E4C  6F8C               	movwf	detect_color@BG& (0+255),b
  2435  000E4E  0E00               	movlw	0
  2436  000E50  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  2437  000E52  0E00               	movlw	0
  2438  000E54  6F7F               	movwf	detect_color@BB& (0+255),b
  2439  000E56  0E00               	movlw	0
  2440  000E58  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  2441  000E5A  0E00               	movlw	0
  2442  000E5C  6F7B               	movwf	detect_color@BC& (0+255),b
  2443                           
  2444                           ;color.c: 296:     unsigned char color = 0;
  2445  000E5E  0E00               	movlw	0
  2446  000E60  6F89               	movwf	detect_color@color& (0+255),b
  2447  000E62                     
  2448                           ; BSR set to: 0
  2449                           ;color.c: 298:     LED_R();
  2450  000E62  EC0C  F02E         	call	_LED_R	;wreg free
  2451  000E66                     
  2452                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2453  000E66  0E09               	movlw	9
  2454  000E68  0100               	movlb	0	; () banked
  2455  000E6A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2456  000E6C  0E1E               	movlw	30
  2457  000E6E  6F75               	movwf	??_detect_color& (0+255),b
  2458  000E70  0EE4               	movlw	228
  2459  000E72                     u5987:
  2460  000E72  2EE8               	decfsz	wreg,f,c
  2461  000E74  D7FE               	bra	u5987
  2462  000E76  2F75               	decfsz	??_detect_color& (0+255),f,b
  2463  000E78  D7FC               	bra	u5987
  2464  000E7A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2465  000E7C  D7FA               	bra	u5987
  2466  000E7E  F000               	nop	
  2467  000E80                     
  2468                           ;color.c: 300:     read_color(m);
  2469  000E80  C071  F00C         	movff	detect_color@m,read_color@m
  2470  000E84  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2471  000E88  ECCB  F02A         	call	_read_color	;wreg free
  2472  000E8C                     
  2473                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2474  000E8C  C073  FFD9         	movff	detect_color@w,fsr2l
  2475  000E90  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2476  000E94  CFDE F075          	movff	postinc2,??_detect_color
  2477  000E98  CFDD F076          	movff	postdec2,??_detect_color+1
  2478  000E9C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2479  000EA0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2480  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2481  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2482  000EA8  0E00               	movlw	0
  2483  000EAA  ECAB  F01F         	call	___xxtofl
  2484  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2485  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2486  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2487  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2488  000EBE  C071  FFD9         	movff	detect_color@m,fsr2l
  2489  000EC2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2490  000EC6  CFDE F077          	movff	postinc2,??_detect_color+2
  2491  000ECA  CFDD F078          	movff	postdec2,??_detect_color+3
  2492  000ECE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2493  000ED2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2494  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2495  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2496  000EDA  0E00               	movlw	0
  2497  000EDC  ECAB  F01F         	call	___xxtofl
  2498  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2499  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2500  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2501  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2502  000EF0  EC54  F013         	call	___fldiv	;wreg free
  2503  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  2504  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2505  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2506  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2507  000F04  0E00               	movlw	0
  2508  000F06  6E2C               	movwf	___flmul@a^0,c
  2509  000F08  0E00               	movlw	0
  2510  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  2511  000F0C  0EC8               	movlw	200
  2512  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  2513  000F10  0E42               	movlw	66
  2514  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  2515  000F14  EC68  F00F         	call	___flmul	;wreg free
  2516  000F18  C028  F08E         	movff	?___flmul,_detect_color$3346
  2517  000F1C  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2518  000F20  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2519  000F24  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2520  000F28                     
  2521                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2522  000F28  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2523  000F2C  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2524  000F30  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2525  000F34  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2526  000F38  EC33  F02D         	call	_lroundf	;wreg free
  2527  000F3C  C066  F08A         	movff	?_lroundf,detect_color@RR
  2528  000F40  C067  F08B         	movff	?_lroundf+1,detect_color@RR+1
  2529  000F44  0100               	movlb	0	; () banked
  2530  000F46  EE20 F002          	lfsr	2,2
  2531  000F4A  5173               	movf	detect_color@w& (0+255),w,b
  2532  000F4C  26D9               	addwf	fsr2l,f,c
  2533  000F4E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2534  000F50  22DA               	addwfc	fsr2h,f,c
  2535  000F52  CFDE F075          	movff	postinc2,??_detect_color
  2536  000F56  CFDD F076          	movff	postdec2,??_detect_color+1
  2537  000F5A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2538  000F5E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2539  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  2540  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  2541  000F66  0E00               	movlw	0
  2542  000F68  ECAB  F01F         	call	___xxtofl
  2543  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2544  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2545  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2546  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2547  000F7C  0100               	movlb	0	; () banked
  2548  000F7E  EE20 F002          	lfsr	2,2
  2549  000F82  5171               	movf	detect_color@m& (0+255),w,b
  2550  000F84  26D9               	addwf	fsr2l,f,c
  2551  000F86  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2552  000F88  22DA               	addwfc	fsr2h,f,c
  2553  000F8A  CFDE F077          	movff	postinc2,??_detect_color+2
  2554  000F8E  CFDD F078          	movff	postdec2,??_detect_color+3
  2555  000F92  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2556  000F96  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2557  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2558  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2559  000F9E  0E00               	movlw	0
  2560  000FA0  ECAB  F01F         	call	___xxtofl
  2561  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2562  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2563  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2564  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2565  000FB4  EC54  F013         	call	___fldiv	;wreg free
  2566  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  2567  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2568  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2569  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2570  000FC8  0E00               	movlw	0
  2571  000FCA  6E2C               	movwf	___flmul@a^0,c
  2572  000FCC  0E00               	movlw	0
  2573  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  2574  000FD0  0EC8               	movlw	200
  2575  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  2576  000FD4  0E42               	movlw	66
  2577  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  2578  000FD8  EC68  F00F         	call	___flmul	;wreg free
  2579  000FDC  C028  F08E         	movff	?___flmul,_detect_color$3346
  2580  000FE0  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2581  000FE4  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2582  000FE8  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2583  000FEC  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2584  000FF0  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2585  000FF4  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2586  000FF8  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2587  000FFC  EC33  F02D         	call	_lroundf	;wreg free
  2588  001000  0100               	movlb	0	; () banked
  2589  001002  EE20 F004          	lfsr	2,4
  2590  001006  5173               	movf	detect_color@w& (0+255),w,b
  2591  001008  26D9               	addwf	fsr2l,f,c
  2592  00100A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2593  00100C  22DA               	addwfc	fsr2h,f,c
  2594  00100E  CFDE F075          	movff	postinc2,??_detect_color
  2595  001012  CFDD F076          	movff	postdec2,??_detect_color+1
  2596  001016  C075  F001         	movff	??_detect_color,___xxtofl@val
  2597  00101A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2598  00101E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2599  001020  6A04               	clrf	(___xxtofl@val+3)^0,c
  2600  001022  0E00               	movlw	0
  2601  001024  ECAB  F01F         	call	___xxtofl
  2602  001028  C001  F013         	movff	?___xxtofl,___fldiv@a
  2603  00102C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2604  001030  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2605  001034  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2606  001038  0100               	movlb	0	; () banked
  2607  00103A  EE20 F004          	lfsr	2,4
  2608  00103E  5171               	movf	detect_color@m& (0+255),w,b
  2609  001040  26D9               	addwf	fsr2l,f,c
  2610  001042  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2611  001044  22DA               	addwfc	fsr2h,f,c
  2612  001046  CFDE F077          	movff	postinc2,??_detect_color+2
  2613  00104A  CFDD F078          	movff	postdec2,??_detect_color+3
  2614  00104E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2615  001052  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2616  001056  6A03               	clrf	(___xxtofl@val+2)^0,c
  2617  001058  6A04               	clrf	(___xxtofl@val+3)^0,c
  2618  00105A  0E00               	movlw	0
  2619  00105C  ECAB  F01F         	call	___xxtofl
  2620  001060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2621  001064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2622  001068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2623  00106C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2624  001070  EC54  F013         	call	___fldiv	;wreg free
  2625  001074  C00F  F028         	movff	?___fldiv,___flmul@b
  2626  001078  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2627  00107C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2628  001080  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2629  001084  0E00               	movlw	0
  2630  001086  6E2C               	movwf	___flmul@a^0,c
  2631  001088  0E00               	movlw	0
  2632  00108A  6E2D               	movwf	(___flmul@a+1)^0,c
  2633  00108C  0EC8               	movlw	200
  2634  00108E  6E2E               	movwf	(___flmul@a+2)^0,c
  2635  001090  0E42               	movlw	66
  2636  001092  6E2F               	movwf	(___flmul@a+3)^0,c
  2637  001094  EC68  F00F         	call	___flmul	;wreg free
  2638  001098  C028  F08E         	movff	?___flmul,_detect_color$3346
  2639  00109C  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2640  0010A0  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2641  0010A4  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2642  0010A8  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2643  0010AC  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2644  0010B0  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2645  0010B4  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2646  0010B8  EC33  F02D         	call	_lroundf	;wreg free
  2647  0010BC  C066  F081         	movff	?_lroundf,detect_color@RB
  2648  0010C0  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  2649  0010C4                     
  2650                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2651  0010C4  0E05               	movlw	5
  2652  0010C6  0100               	movlb	0	; () banked
  2653  0010C8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2654  0010CA  0E0F               	movlw	15
  2655  0010CC  6F75               	movwf	??_detect_color& (0+255),b
  2656  0010CE  0EF1               	movlw	241
  2657  0010D0                     u5997:
  2658  0010D0  2EE8               	decfsz	wreg,f,c
  2659  0010D2  D7FE               	bra	u5997
  2660  0010D4  2F75               	decfsz	??_detect_color& (0+255),f,b
  2661  0010D6  D7FC               	bra	u5997
  2662  0010D8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2663  0010DA  D7FA               	bra	u5997
  2664  0010DC                     
  2665                           ;color.c: 309:     LED_G();
  2666  0010DC  EC2C  F02E         	call	_LED_G	;wreg free
  2667  0010E0                     
  2668                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2669  0010E0  0E09               	movlw	9
  2670  0010E2  0100               	movlb	0	; () banked
  2671  0010E4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2672  0010E6  0E1E               	movlw	30
  2673  0010E8  6F75               	movwf	??_detect_color& (0+255),b
  2674  0010EA  0EE4               	movlw	228
  2675  0010EC                     u6007:
  2676  0010EC  2EE8               	decfsz	wreg,f,c
  2677  0010EE  D7FE               	bra	u6007
  2678  0010F0  2F75               	decfsz	??_detect_color& (0+255),f,b
  2679  0010F2  D7FC               	bra	u6007
  2680  0010F4  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2681  0010F6  D7FA               	bra	u6007
  2682  0010F8  F000               	nop	
  2683  0010FA                     
  2684                           ;color.c: 311:     read_color(m);
  2685  0010FA  C071  F00C         	movff	detect_color@m,read_color@m
  2686  0010FE  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2687  001102  ECCB  F02A         	call	_read_color	;wreg free
  2688  001106                     
  2689                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2690  001106  0100               	movlb	0	; () banked
  2691  001108  EE20 F006          	lfsr	2,6
  2692  00110C  5173               	movf	detect_color@w& (0+255),w,b
  2693  00110E  26D9               	addwf	fsr2l,f,c
  2694  001110  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2695  001112  22DA               	addwfc	fsr2h,f,c
  2696  001114  CFDE F075          	movff	postinc2,??_detect_color
  2697  001118  CFDD F076          	movff	postdec2,??_detect_color+1
  2698  00111C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2699  001120  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2700  001124  6A03               	clrf	(___xxtofl@val+2)^0,c
  2701  001126  6A04               	clrf	(___xxtofl@val+3)^0,c
  2702  001128  0E00               	movlw	0
  2703  00112A  ECAB  F01F         	call	___xxtofl
  2704  00112E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2705  001132  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2706  001136  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2707  00113A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2708  00113E  C071  FFD9         	movff	detect_color@m,fsr2l
  2709  001142  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2710  001146  CFDE F077          	movff	postinc2,??_detect_color+2
  2711  00114A  CFDD F078          	movff	postdec2,??_detect_color+3
  2712  00114E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2713  001152  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2714  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2715  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2716  00115A  0E00               	movlw	0
  2717  00115C  ECAB  F01F         	call	___xxtofl
  2718  001160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2719  001164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2720  001168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2721  00116C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2722  001170  EC54  F013         	call	___fldiv	;wreg free
  2723  001174  C00F  F028         	movff	?___fldiv,___flmul@b
  2724  001178  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2725  00117C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2726  001180  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2727  001184  0E00               	movlw	0
  2728  001186  6E2C               	movwf	___flmul@a^0,c
  2729  001188  0E00               	movlw	0
  2730  00118A  6E2D               	movwf	(___flmul@a+1)^0,c
  2731  00118C  0EC8               	movlw	200
  2732  00118E  6E2E               	movwf	(___flmul@a+2)^0,c
  2733  001190  0E42               	movlw	66
  2734  001192  6E2F               	movwf	(___flmul@a+3)^0,c
  2735  001194  EC68  F00F         	call	___flmul	;wreg free
  2736  001198  C028  F08E         	movff	?___flmul,_detect_color$3346
  2737  00119C  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2738  0011A0  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2739  0011A4  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2740  0011A8                     
  2741                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2742  0011A8  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2743  0011AC  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2744  0011B0  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2745  0011B4  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2746  0011B8  EC33  F02D         	call	_lroundf	;wreg free
  2747  0011BC  C066  F07D         	movff	?_lroundf,detect_color@GR
  2748  0011C0  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  2749  0011C4  0100               	movlb	0	; () banked
  2750  0011C6  EE20 F008          	lfsr	2,8
  2751  0011CA  5173               	movf	detect_color@w& (0+255),w,b
  2752  0011CC  26D9               	addwf	fsr2l,f,c
  2753  0011CE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2754  0011D0  22DA               	addwfc	fsr2h,f,c
  2755  0011D2  CFDE F075          	movff	postinc2,??_detect_color
  2756  0011D6  CFDD F076          	movff	postdec2,??_detect_color+1
  2757  0011DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  2758  0011DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2759  0011E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2760  0011E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2761  0011E6  0E00               	movlw	0
  2762  0011E8  ECAB  F01F         	call	___xxtofl
  2763  0011EC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2764  0011F0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2765  0011F4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2766  0011F8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2767  0011FC  0100               	movlb	0	; () banked
  2768  0011FE  EE20 F002          	lfsr	2,2
  2769  001202  5171               	movf	detect_color@m& (0+255),w,b
  2770  001204  26D9               	addwf	fsr2l,f,c
  2771  001206  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2772  001208  22DA               	addwfc	fsr2h,f,c
  2773  00120A  CFDE F077          	movff	postinc2,??_detect_color+2
  2774  00120E  CFDD F078          	movff	postdec2,??_detect_color+3
  2775  001212  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2776  001216  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2777  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2778  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2779  00121E  0E00               	movlw	0
  2780  001220  ECAB  F01F         	call	___xxtofl
  2781  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2782  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2783  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2784  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2785  001234  EC54  F013         	call	___fldiv	;wreg free
  2786  001238  C00F  F028         	movff	?___fldiv,___flmul@b
  2787  00123C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2788  001240  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2789  001244  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2790  001248  0E00               	movlw	0
  2791  00124A  6E2C               	movwf	___flmul@a^0,c
  2792  00124C  0E00               	movlw	0
  2793  00124E  6E2D               	movwf	(___flmul@a+1)^0,c
  2794  001250  0EC8               	movlw	200
  2795  001252  6E2E               	movwf	(___flmul@a+2)^0,c
  2796  001254  0E42               	movlw	66
  2797  001256  6E2F               	movwf	(___flmul@a+3)^0,c
  2798  001258  EC68  F00F         	call	___flmul	;wreg free
  2799  00125C  C028  F08E         	movff	?___flmul,_detect_color$3346
  2800  001260  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2801  001264  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2802  001268  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2803  00126C  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2804  001270  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2805  001274  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2806  001278  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2807  00127C  EC33  F02D         	call	_lroundf	;wreg free
  2808  001280  C066  F087         	movff	?_lroundf,detect_color@GG
  2809  001284  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  2810  001288  0100               	movlb	0	; () banked
  2811  00128A  EE20 F00A          	lfsr	2,10
  2812  00128E  5173               	movf	detect_color@w& (0+255),w,b
  2813  001290  26D9               	addwf	fsr2l,f,c
  2814  001292  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2815  001294  22DA               	addwfc	fsr2h,f,c
  2816  001296  CFDE F075          	movff	postinc2,??_detect_color
  2817  00129A  CFDD F076          	movff	postdec2,??_detect_color+1
  2818  00129E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2819  0012A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2820  0012A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2821  0012A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2822  0012AA  0E00               	movlw	0
  2823  0012AC  ECAB  F01F         	call	___xxtofl
  2824  0012B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2825  0012B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2826  0012B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2827  0012BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2828  0012C0  0100               	movlb	0	; () banked
  2829  0012C2  EE20 F004          	lfsr	2,4
  2830  0012C6  5171               	movf	detect_color@m& (0+255),w,b
  2831  0012C8  26D9               	addwf	fsr2l,f,c
  2832  0012CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2833  0012CC  22DA               	addwfc	fsr2h,f,c
  2834  0012CE  CFDE F077          	movff	postinc2,??_detect_color+2
  2835  0012D2  CFDD F078          	movff	postdec2,??_detect_color+3
  2836  0012D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2837  0012DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2838  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2839  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2840  0012E2  0E00               	movlw	0
  2841  0012E4  ECAB  F01F         	call	___xxtofl
  2842  0012E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2843  0012EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2844  0012F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2845  0012F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2846  0012F8  EC54  F013         	call	___fldiv	;wreg free
  2847  0012FC  C00F  F028         	movff	?___fldiv,___flmul@b
  2848  001300  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2849  001304  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2850  001308  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2851  00130C  0E00               	movlw	0
  2852  00130E  6E2C               	movwf	___flmul@a^0,c
  2853  001310  0E00               	movlw	0
  2854  001312  6E2D               	movwf	(___flmul@a+1)^0,c
  2855  001314  0EC8               	movlw	200
  2856  001316  6E2E               	movwf	(___flmul@a+2)^0,c
  2857  001318  0E42               	movlw	66
  2858  00131A  6E2F               	movwf	(___flmul@a+3)^0,c
  2859  00131C  EC68  F00F         	call	___flmul	;wreg free
  2860  001320  C028  F08E         	movff	?___flmul,_detect_color$3346
  2861  001324  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2862  001328  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2863  00132C  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2864  001330  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2865  001334  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2866  001338  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2867  00133C  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2868  001340  EC33  F02D         	call	_lroundf	;wreg free
  2869  001344  C066  F083         	movff	?_lroundf,detect_color@GB
  2870  001348  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  2871  00134C                     
  2872                           ;color.c: 319:     LED_B();
  2873  00134C  EC3C  F02E         	call	_LED_B	;wreg free
  2874  001350                     
  2875                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2876  001350  0E09               	movlw	9
  2877  001352  0100               	movlb	0	; () banked
  2878  001354  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2879  001356  0E1E               	movlw	30
  2880  001358  6F75               	movwf	??_detect_color& (0+255),b
  2881  00135A  0EE4               	movlw	228
  2882  00135C                     u6017:
  2883  00135C  2EE8               	decfsz	wreg,f,c
  2884  00135E  D7FE               	bra	u6017
  2885  001360  2F75               	decfsz	??_detect_color& (0+255),f,b
  2886  001362  D7FC               	bra	u6017
  2887  001364  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2888  001366  D7FA               	bra	u6017
  2889  001368  F000               	nop	
  2890  00136A                     
  2891                           ;color.c: 321:     read_color(m);
  2892  00136A  C071  F00C         	movff	detect_color@m,read_color@m
  2893  00136E  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2894  001372  ECCB  F02A         	call	_read_color	;wreg free
  2895  001376                     
  2896                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2897  001376  0100               	movlb	0	; () banked
  2898  001378  EE20 F00C          	lfsr	2,12
  2899  00137C  5173               	movf	detect_color@w& (0+255),w,b
  2900  00137E  26D9               	addwf	fsr2l,f,c
  2901  001380  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2902  001382  22DA               	addwfc	fsr2h,f,c
  2903  001384  CFDE F075          	movff	postinc2,??_detect_color
  2904  001388  CFDD F076          	movff	postdec2,??_detect_color+1
  2905  00138C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2906  001390  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2907  001394  6A03               	clrf	(___xxtofl@val+2)^0,c
  2908  001396  6A04               	clrf	(___xxtofl@val+3)^0,c
  2909  001398  0E00               	movlw	0
  2910  00139A  ECAB  F01F         	call	___xxtofl
  2911  00139E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2912  0013A2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2913  0013A6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2914  0013AA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2915  0013AE  C071  FFD9         	movff	detect_color@m,fsr2l
  2916  0013B2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2917  0013B6  CFDE F077          	movff	postinc2,??_detect_color+2
  2918  0013BA  CFDD F078          	movff	postdec2,??_detect_color+3
  2919  0013BE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2920  0013C2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2921  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2922  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2923  0013CA  0E00               	movlw	0
  2924  0013CC  ECAB  F01F         	call	___xxtofl
  2925  0013D0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2926  0013D4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2927  0013D8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2928  0013DC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2929  0013E0  EC54  F013         	call	___fldiv	;wreg free
  2930  0013E4  C00F  F028         	movff	?___fldiv,___flmul@b
  2931  0013E8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2932  0013EC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2933  0013F0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2934  0013F4  0E00               	movlw	0
  2935  0013F6  6E2C               	movwf	___flmul@a^0,c
  2936  0013F8  0E00               	movlw	0
  2937  0013FA  6E2D               	movwf	(___flmul@a+1)^0,c
  2938  0013FC  0EC8               	movlw	200
  2939  0013FE  6E2E               	movwf	(___flmul@a+2)^0,c
  2940  001400  0E42               	movlw	66
  2941  001402  6E2F               	movwf	(___flmul@a+3)^0,c
  2942  001404  EC68  F00F         	call	___flmul	;wreg free
  2943  001408  C028  F08E         	movff	?___flmul,_detect_color$3346
  2944  00140C  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  2945  001410  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  2946  001414  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  2947  001418                     
  2948                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2949  001418  C08E  F066         	movff	_detect_color$3346,lroundf@x
  2950  00141C  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  2951  001420  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  2952  001424  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  2953  001428  EC33  F02D         	call	_lroundf	;wreg free
  2954  00142C  C066  F085         	movff	?_lroundf,detect_color@BR
  2955  001430  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  2956  001434  0100               	movlb	0	; () banked
  2957  001436  EE20 F00E          	lfsr	2,14
  2958  00143A  5173               	movf	detect_color@w& (0+255),w,b
  2959  00143C  26D9               	addwf	fsr2l,f,c
  2960  00143E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2961  001440  22DA               	addwfc	fsr2h,f,c
  2962  001442  CFDE F075          	movff	postinc2,??_detect_color
  2963  001446  CFDD F076          	movff	postdec2,??_detect_color+1
  2964  00144A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2965  00144E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2966  001452  6A03               	clrf	(___xxtofl@val+2)^0,c
  2967  001454  6A04               	clrf	(___xxtofl@val+3)^0,c
  2968  001456  0E00               	movlw	0
  2969  001458  ECAB  F01F         	call	___xxtofl
  2970  00145C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2971  001460  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2972  001464  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2973  001468  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2974  00146C  0100               	movlb	0	; () banked
  2975  00146E  EE20 F002          	lfsr	2,2
  2976  001472  5171               	movf	detect_color@m& (0+255),w,b
  2977  001474  26D9               	addwf	fsr2l,f,c
  2978  001476  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2979  001478  22DA               	addwfc	fsr2h,f,c
  2980  00147A  CFDE F077          	movff	postinc2,??_detect_color+2
  2981  00147E  CFDD F078          	movff	postdec2,??_detect_color+3
  2982  001482  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2983  001486  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2984  00148A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2985  00148C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2986  00148E  0E00               	movlw	0
  2987  001490  ECAB  F01F         	call	___xxtofl
  2988  001494  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2989  001498  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2990  00149C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2991  0014A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2992  0014A4  EC54  F013         	call	___fldiv	;wreg free
  2993  0014A8  C00F  F028         	movff	?___fldiv,___flmul@b
  2994  0014AC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2995  0014B0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2996  0014B4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2997  0014B8  0E00               	movlw	0
  2998  0014BA  6E2C               	movwf	___flmul@a^0,c
  2999  0014BC  0E00               	movlw	0
  3000  0014BE  6E2D               	movwf	(___flmul@a+1)^0,c
  3001  0014C0  0EC8               	movlw	200
  3002  0014C2  6E2E               	movwf	(___flmul@a+2)^0,c
  3003  0014C4  0E42               	movlw	66
  3004  0014C6  6E2F               	movwf	(___flmul@a+3)^0,c
  3005  0014C8  EC68  F00F         	call	___flmul	;wreg free
  3006  0014CC  C028  F08E         	movff	?___flmul,_detect_color$3346
  3007  0014D0  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  3008  0014D4  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  3009  0014D8  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  3010  0014DC  C08E  F066         	movff	_detect_color$3346,lroundf@x
  3011  0014E0  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  3012  0014E4  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  3013  0014E8  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  3014  0014EC  EC33  F02D         	call	_lroundf	;wreg free
  3015  0014F0  C066  F08C         	movff	?_lroundf,detect_color@BG
  3016  0014F4  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  3017  0014F8  0100               	movlb	0	; () banked
  3018  0014FA  EE20 F010          	lfsr	2,16
  3019  0014FE  5173               	movf	detect_color@w& (0+255),w,b
  3020  001500  26D9               	addwf	fsr2l,f,c
  3021  001502  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3022  001504  22DA               	addwfc	fsr2h,f,c
  3023  001506  CFDE F075          	movff	postinc2,??_detect_color
  3024  00150A  CFDD F076          	movff	postdec2,??_detect_color+1
  3025  00150E  C075  F001         	movff	??_detect_color,___xxtofl@val
  3026  001512  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3027  001516  6A03               	clrf	(___xxtofl@val+2)^0,c
  3028  001518  6A04               	clrf	(___xxtofl@val+3)^0,c
  3029  00151A  0E00               	movlw	0
  3030  00151C  ECAB  F01F         	call	___xxtofl
  3031  001520  C001  F013         	movff	?___xxtofl,___fldiv@a
  3032  001524  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3033  001528  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3034  00152C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3035  001530  0100               	movlb	0	; () banked
  3036  001532  EE20 F004          	lfsr	2,4
  3037  001536  5171               	movf	detect_color@m& (0+255),w,b
  3038  001538  26D9               	addwf	fsr2l,f,c
  3039  00153A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3040  00153C  22DA               	addwfc	fsr2h,f,c
  3041  00153E  CFDE F077          	movff	postinc2,??_detect_color+2
  3042  001542  CFDD F078          	movff	postdec2,??_detect_color+3
  3043  001546  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3044  00154A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3045  00154E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3046  001550  6A04               	clrf	(___xxtofl@val+3)^0,c
  3047  001552  0E00               	movlw	0
  3048  001554  ECAB  F01F         	call	___xxtofl
  3049  001558  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3050  00155C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3051  001560  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3052  001564  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3053  001568  EC54  F013         	call	___fldiv	;wreg free
  3054  00156C  C00F  F028         	movff	?___fldiv,___flmul@b
  3055  001570  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3056  001574  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3057  001578  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3058  00157C  0E00               	movlw	0
  3059  00157E  6E2C               	movwf	___flmul@a^0,c
  3060  001580  0E00               	movlw	0
  3061  001582  6E2D               	movwf	(___flmul@a+1)^0,c
  3062  001584  0EC8               	movlw	200
  3063  001586  6E2E               	movwf	(___flmul@a+2)^0,c
  3064  001588  0E42               	movlw	66
  3065  00158A  6E2F               	movwf	(___flmul@a+3)^0,c
  3066  00158C  EC68  F00F         	call	___flmul	;wreg free
  3067  001590  C028  F08E         	movff	?___flmul,_detect_color$3346
  3068  001594  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  3069  001598  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  3070  00159C  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  3071  0015A0  C08E  F066         	movff	_detect_color$3346,lroundf@x
  3072  0015A4  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  3073  0015A8  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  3074  0015AC  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  3075  0015B0  EC33  F02D         	call	_lroundf	;wreg free
  3076  0015B4  C066  F07F         	movff	?_lroundf,detect_color@BB
  3077  0015B8  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  3078  0015BC                     
  3079                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3080  0015BC  0100               	movlb	0	; () banked
  3081  0015BE  EE20 F01A          	lfsr	2,26
  3082  0015C2  5173               	movf	detect_color@w& (0+255),w,b
  3083  0015C4  26D9               	addwf	fsr2l,f,c
  3084  0015C6  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3085  0015C8  22DA               	addwfc	fsr2h,f,c
  3086  0015CA  CFDE F075          	movff	postinc2,??_detect_color
  3087  0015CE  CFDD F076          	movff	postdec2,??_detect_color+1
  3088  0015D2  C075  F001         	movff	??_detect_color,___xxtofl@val
  3089  0015D6  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3090  0015DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  3091  0015DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  3092  0015DE  0E00               	movlw	0
  3093  0015E0  ECAB  F01F         	call	___xxtofl
  3094  0015E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  3095  0015E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3096  0015EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3097  0015F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3098  0015F4  0100               	movlb	0	; () banked
  3099  0015F6  EE20 F006          	lfsr	2,6
  3100  0015FA  5171               	movf	detect_color@m& (0+255),w,b
  3101  0015FC  26D9               	addwf	fsr2l,f,c
  3102  0015FE  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3103  001600  22DA               	addwfc	fsr2h,f,c
  3104  001602  CFDE F077          	movff	postinc2,??_detect_color+2
  3105  001606  CFDD F078          	movff	postdec2,??_detect_color+3
  3106  00160A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3107  00160E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3108  001612  6A03               	clrf	(___xxtofl@val+2)^0,c
  3109  001614  6A04               	clrf	(___xxtofl@val+3)^0,c
  3110  001616  0E00               	movlw	0
  3111  001618  ECAB  F01F         	call	___xxtofl
  3112  00161C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3113  001620  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3114  001624  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3115  001628  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3116  00162C  EC54  F013         	call	___fldiv	;wreg free
  3117  001630  C00F  F028         	movff	?___fldiv,___flmul@b
  3118  001634  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3119  001638  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3120  00163C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3121  001640  0E00               	movlw	0
  3122  001642  6E2C               	movwf	___flmul@a^0,c
  3123  001644  0E00               	movlw	0
  3124  001646  6E2D               	movwf	(___flmul@a+1)^0,c
  3125  001648  0EC8               	movlw	200
  3126  00164A  6E2E               	movwf	(___flmul@a+2)^0,c
  3127  00164C  0E42               	movlw	66
  3128  00164E  6E2F               	movwf	(___flmul@a+3)^0,c
  3129  001650  EC68  F00F         	call	___flmul	;wreg free
  3130  001654  C028  F08E         	movff	?___flmul,_detect_color$3346
  3131  001658  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  3132  00165C  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  3133  001660  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  3134  001664  C08E  F066         	movff	_detect_color$3346,lroundf@x
  3135  001668  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  3136  00166C  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  3137  001670  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  3138  001674  EC33  F02D         	call	_lroundf	;wreg free
  3139  001678                     
  3140                           ;color.c: 329:     if (compare(0, RR, 45)){
  3141  001678  0E00               	movlw	0
  3142  00167A  0100               	movlb	0	; () banked
  3143  00167C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3144  00167E  0E00               	movlw	0
  3145  001680  6F6A               	movwf	compare@lower& (0+255),b
  3146  001682  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3147  001686  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3148  00168A  0E00               	movlw	0
  3149  00168C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3150  00168E  0E2D               	movlw	45
  3151  001690  6F6E               	movwf	compare@upper& (0+255),b
  3152  001692  EC16  F02D         	call	_compare	;wreg free
  3153  001696  0900               	iorlw	0
  3154  001698  B4D8               	btfsc	status,2,c
  3155  00169A  EF51  F00B         	goto	u5231
  3156  00169E  EF53  F00B         	goto	u5230
  3157  0016A2                     u5231:
  3158  0016A2  EFC4  F00B         	goto	l5144
  3159  0016A6                     u5230:
  3160  0016A6                     
  3161                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3162  0016A6  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  3163  0016AA  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3164  0016AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3165  0016B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3166  0016B2  0E00               	movlw	0
  3167  0016B4  ECAB  F01F         	call	___xxtofl
  3168  0016B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  3169  0016BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3170  0016C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3171  0016C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3172  0016C8  0100               	movlb	0	; () banked
  3173  0016CA  518C               	movf	detect_color@BG& (0+255),w,b
  3174  0016CC  2587               	addwf	detect_color@GG& (0+255),w,b
  3175  0016CE  6F75               	movwf	??_detect_color& (0+255),b
  3176  0016D0  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3177  0016D2  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3178  0016D4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3179  0016D6  C075  F001         	movff	??_detect_color,___xxtofl@val
  3180  0016DA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3181  0016DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3182  0016E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3183  0016E2  0E00               	movlw	0
  3184  0016E4  ECAB  F01F         	call	___xxtofl
  3185  0016E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3186  0016EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3187  0016F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3188  0016F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3189  0016F8  EC54  F013         	call	___fldiv	;wreg free
  3190  0016FC  C00F  F028         	movff	?___fldiv,___flmul@b
  3191  001700  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3192  001704  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3193  001708  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3194  00170C  0E00               	movlw	0
  3195  00170E  6E2C               	movwf	___flmul@a^0,c
  3196  001710  0E00               	movlw	0
  3197  001712  6E2D               	movwf	(___flmul@a+1)^0,c
  3198  001714  0E48               	movlw	72
  3199  001716  6E2E               	movwf	(___flmul@a+2)^0,c
  3200  001718  0E43               	movlw	67
  3201  00171A  6E2F               	movwf	(___flmul@a+3)^0,c
  3202  00171C  EC68  F00F         	call	___flmul	;wreg free
  3203  001720  C028  F08E         	movff	?___flmul,_detect_color$3346
  3204  001724  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  3205  001728  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  3206  00172C  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  3207                           
  3208                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3209  001730  0E00               	movlw	0
  3210  001732  0100               	movlb	0	; () banked
  3211  001734  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3212  001736  0E00               	movlw	0
  3213  001738  6F6A               	movwf	compare@lower& (0+255),b
  3214  00173A  C08E  F066         	movff	_detect_color$3346,lroundf@x
  3215  00173E  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  3216  001742  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  3217  001746  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  3218  00174A  EC33  F02D         	call	_lroundf	;wreg free
  3219  00174E  C066  F06C         	movff	?_lroundf,compare@value2compare
  3220  001752  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3221  001756  0E01               	movlw	1
  3222  001758  0100               	movlb	0	; () banked
  3223  00175A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3224  00175C  0ED3               	movlw	211
  3225  00175E  6F6E               	movwf	compare@upper& (0+255),b
  3226  001760  EC16  F02D         	call	_compare	;wreg free
  3227  001764  0900               	iorlw	0
  3228  001766  B4D8               	btfsc	status,2,c
  3229  001768  EFB8  F00B         	goto	u5241
  3230  00176C  EFBA  F00B         	goto	u5240
  3231  001770                     u5241:
  3232  001770  EFBF  F00B         	goto	l5142
  3233  001774                     u5240:
  3234  001774  0E03               	movlw	3
  3235  001776  0100               	movlb	0	; () banked
  3236  001778  6F89               	movwf	detect_color@color& (0+255),b
  3237  00177A  EF7B  F00C         	goto	l5168
  3238  00177E                     l5142:
  3239  00177E  0E02               	movlw	2
  3240  001780  0100               	movlb	0	; () banked
  3241  001782  6F89               	movwf	detect_color@color& (0+255),b
  3242  001784  EF7B  F00C         	goto	l5168
  3243  001788                     l5144:
  3244                           
  3245                           ;color.c: 334:         if (GG <= 30 && GB <= 30){
  3246  001788  0100               	movlb	0	; () banked
  3247  00178A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  3248  00178C  E107               	bnz	u5251
  3249  00178E  0E1F               	movlw	31
  3250  001790  5D87               	subwf	detect_color@GG& (0+255),w,b
  3251  001792  B0D8               	btfsc	status,0,c
  3252  001794  EFCE  F00B         	goto	u5251
  3253  001798  EFD0  F00B         	goto	u5250
  3254  00179C                     u5251:
  3255  00179C  EF45  F00C         	goto	l5154
  3256  0017A0                     u5250:
  3257  0017A0                     
  3258                           ; BSR set to: 0
  3259  0017A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3260  0017A2  E107               	bnz	u5261
  3261  0017A4  0E1F               	movlw	31
  3262  0017A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  3263  0017A8  B0D8               	btfsc	status,0,c
  3264  0017AA  EFD9  F00B         	goto	u5261
  3265  0017AE  EFDB  F00B         	goto	u5260
  3266  0017B2                     u5261:
  3267  0017B2  EF45  F00C         	goto	l5154
  3268  0017B6                     u5260:
  3269  0017B6                     
  3270                           ; BSR set to: 0
  3271                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3272  0017B6  C08A  F001         	movff	detect_color@RR,___xxtofl@val
  3273  0017BA  C08B  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3274  0017BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3275  0017C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3276  0017C2  0E00               	movlw	0
  3277  0017C4  ECAB  F01F         	call	___xxtofl
  3278  0017C8  C001  F013         	movff	?___xxtofl,___fldiv@a
  3279  0017CC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3280  0017D0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3281  0017D4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3282  0017D8  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  3283  0017DC  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  3284  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3285  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3286  0017E4  0E00               	movlw	0
  3287  0017E6  ECAB  F01F         	call	___xxtofl
  3288  0017EA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3289  0017EE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3290  0017F2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3291  0017F6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3292  0017FA  EC54  F013         	call	___fldiv	;wreg free
  3293  0017FE  C00F  F028         	movff	?___fldiv,___flmul@b
  3294  001802  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3295  001806  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3296  00180A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3297  00180E  0E00               	movlw	0
  3298  001810  6E2C               	movwf	___flmul@a^0,c
  3299  001812  0E00               	movlw	0
  3300  001814  6E2D               	movwf	(___flmul@a+1)^0,c
  3301  001816  0EFA               	movlw	250
  3302  001818  6E2E               	movwf	(___flmul@a+2)^0,c
  3303  00181A  0E43               	movlw	67
  3304  00181C  6E2F               	movwf	(___flmul@a+3)^0,c
  3305  00181E  EC68  F00F         	call	___flmul	;wreg free
  3306  001822  C028  F08E         	movff	?___flmul,_detect_color$3346
  3307  001826  C029  F08F         	movff	?___flmul+1,_detect_color$3346+1
  3308  00182A  C02A  F090         	movff	?___flmul+2,_detect_color$3346+2
  3309  00182E  C02B  F091         	movff	?___flmul+3,_detect_color$3346+3
  3310                           
  3311                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3312  001832  0E00               	movlw	0
  3313  001834  0100               	movlb	0	; () banked
  3314  001836  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3315  001838  0E00               	movlw	0
  3316  00183A  6F6A               	movwf	compare@lower& (0+255),b
  3317  00183C  C08E  F066         	movff	_detect_color$3346,lroundf@x
  3318  001840  C08F  F067         	movff	_detect_color$3346+1,lroundf@x+1
  3319  001844  C090  F068         	movff	_detect_color$3346+2,lroundf@x+2
  3320  001848  C091  F069         	movff	_detect_color$3346+3,lroundf@x+3
  3321  00184C  EC33  F02D         	call	_lroundf	;wreg free
  3322  001850  C066  F06C         	movff	?_lroundf,compare@value2compare
  3323  001854  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3324  001858  0E00               	movlw	0
  3325  00185A  0100               	movlb	0	; () banked
  3326  00185C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3327  00185E  0E96               	movlw	150
  3328  001860  6F6E               	movwf	compare@upper& (0+255),b
  3329  001862  EC16  F02D         	call	_compare	;wreg free
  3330  001866  0900               	iorlw	0
  3331  001868  B4D8               	btfsc	status,2,c
  3332  00186A  EF39  F00C         	goto	u5271
  3333  00186E  EF3B  F00C         	goto	u5270
  3334  001872                     u5271:
  3335  001872  EF40  F00C         	goto	l5152
  3336  001876                     u5270:
  3337  001876  0E01               	movlw	1
  3338  001878  0100               	movlb	0	; () banked
  3339  00187A  6F89               	movwf	detect_color@color& (0+255),b
  3340  00187C  EF7B  F00C         	goto	l5168
  3341  001880                     l5152:
  3342  001880  0E06               	movlw	6
  3343  001882  0100               	movlb	0	; () banked
  3344  001884  6F89               	movwf	detect_color@color& (0+255),b
  3345  001886  EF7B  F00C         	goto	l5168
  3346  00188A                     l5154:
  3347                           
  3348                           ; BSR set to: 0
  3349  00188A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  3350  00188C  E109               	bnz	u5280
  3351  00188E  0E1F               	movlw	31
  3352  001890  5D87               	subwf	detect_color@GG& (0+255),w,b
  3353  001892  A0D8               	btfss	status,0,c
  3354  001894  EF4E  F00C         	goto	u5281
  3355  001898  EF50  F00C         	goto	u5280
  3356  00189C                     u5281:
  3357  00189C  EF7B  F00C         	goto	l5168
  3358  0018A0                     u5280:
  3359  0018A0                     
  3360                           ; BSR set to: 0
  3361  0018A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3362  0018A2  E109               	bnz	u5290
  3363  0018A4  0E1F               	movlw	31
  3364  0018A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  3365  0018A8  A0D8               	btfss	status,0,c
  3366  0018AA  EF59  F00C         	goto	u5291
  3367  0018AE  EF5B  F00C         	goto	u5290
  3368  0018B2                     u5291:
  3369  0018B2  EF7B  F00C         	goto	l5168
  3370  0018B6                     u5290:
  3371  0018B6                     
  3372                           ; BSR set to: 0
  3373                           ;color.c: 341:             if (BG >= BR) {color = 7;}
  3374  0018B6  5185               	movf	detect_color@BR& (0+255),w,b
  3375  0018B8  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3376  0018BA  5186               	movf	(detect_color@BR+1)& (0+255),w,b
  3377  0018BC  598D               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3378  0018BE  A0D8               	btfss	status,0,c
  3379  0018C0  EF64  F00C         	goto	u5301
  3380  0018C4  EF66  F00C         	goto	u5300
  3381  0018C8                     u5301:
  3382  0018C8  EF6A  F00C         	goto	l5162
  3383  0018CC                     u5300:
  3384  0018CC                     
  3385                           ; BSR set to: 0
  3386  0018CC  0E07               	movlw	7
  3387  0018CE  6F89               	movwf	detect_color@color& (0+255),b
  3388  0018D0  EF7B  F00C         	goto	l5168
  3389  0018D4                     l5162:
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;color.c: 343:                 if (BG < 48){color = 4;}
  3393  0018D4  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3394  0018D6  E107               	bnz	u5311
  3395  0018D8  0E30               	movlw	48
  3396  0018DA  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3397  0018DC  B0D8               	btfsc	status,0,c
  3398  0018DE  EF73  F00C         	goto	u5311
  3399  0018E2  EF75  F00C         	goto	u5310
  3400  0018E6                     u5311:
  3401  0018E6  EF79  F00C         	goto	l5166
  3402  0018EA                     u5310:
  3403  0018EA                     
  3404                           ; BSR set to: 0
  3405  0018EA  0E04               	movlw	4
  3406  0018EC  6F89               	movwf	detect_color@color& (0+255),b
  3407  0018EE  EF7B  F00C         	goto	l5168
  3408  0018F2                     l5166:
  3409                           
  3410                           ; BSR set to: 0
  3411  0018F2  0E05               	movlw	5
  3412  0018F4  6F89               	movwf	detect_color@color& (0+255),b
  3413  0018F6                     l5168:
  3414                           
  3415                           ; BSR set to: 0
  3416                           ;color.c: 349:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  3417  0018F6  0E00               	movlw	0
  3418  0018F8  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3419  0018FA  0E5A               	movlw	90
  3420  0018FC  6F6A               	movwf	compare@lower& (0+255),b
  3421  0018FE  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3422  001902  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3423  001906  90D8               	bcf	status,0,c
  3424  001908  358A               	rlcf	detect_color@RR& (0+255),w,b
  3425  00190A  6F6E               	movwf	compare@upper& (0+255),b
  3426  00190C  358B               	rlcf	(detect_color@RR+1)& (0+255),w,b
  3427  00190E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3428  001910  EC16  F02D         	call	_compare	;wreg free
  3429  001914  0900               	iorlw	0
  3430  001916  B4D8               	btfsc	status,2,c
  3431  001918  EF90  F00C         	goto	u5321
  3432  00191C  EF92  F00C         	goto	u5320
  3433  001920                     u5321:
  3434  001920  EFC5  F00C         	goto	l5176
  3435  001924                     u5320:
  3436  001924  0E00               	movlw	0
  3437  001926  0100               	movlb	0	; () banked
  3438  001928  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3439  00192A  0E5A               	movlw	90
  3440  00192C  6F6A               	movwf	compare@lower& (0+255),b
  3441  00192E  C081  F06C         	movff	detect_color@RB,compare@value2compare
  3442  001932  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  3443  001936  90D8               	bcf	status,0,c
  3444  001938  3581               	rlcf	detect_color@RB& (0+255),w,b
  3445  00193A  6F6E               	movwf	compare@upper& (0+255),b
  3446  00193C  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  3447  00193E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3448  001940  EC16  F02D         	call	_compare	;wreg free
  3449  001944  0900               	iorlw	0
  3450  001946  B4D8               	btfsc	status,2,c
  3451  001948  EFA8  F00C         	goto	u5331
  3452  00194C  EFAA  F00C         	goto	u5330
  3453  001950                     u5331:
  3454  001950  EFC5  F00C         	goto	l5176
  3455  001954                     u5330:
  3456  001954  0E00               	movlw	0
  3457  001956  0100               	movlb	0	; () banked
  3458  001958  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3459  00195A  0E5A               	movlw	90
  3460  00195C  6F6A               	movwf	compare@lower& (0+255),b
  3461  00195E  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  3462  001962  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3463  001966  90D8               	bcf	status,0,c
  3464  001968  358C               	rlcf	detect_color@BG& (0+255),w,b
  3465  00196A  6F6E               	movwf	compare@upper& (0+255),b
  3466  00196C  358D               	rlcf	(detect_color@BG+1)& (0+255),w,b
  3467  00196E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3468  001970  EC16  F02D         	call	_compare	;wreg free
  3469  001974  0900               	iorlw	0
  3470  001976  B4D8               	btfsc	status,2,c
  3471  001978  EFC0  F00C         	goto	u5341
  3472  00197C  EFC2  F00C         	goto	u5340
  3473  001980                     u5341:
  3474  001980  EFC5  F00C         	goto	l5176
  3475  001984                     u5340:
  3476  001984  0E08               	movlw	8
  3477  001986  0100               	movlb	0	; () banked
  3478  001988  6F89               	movwf	detect_color@color& (0+255),b
  3479  00198A                     l5176:
  3480                           
  3481                           ;color.c: 350:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  3482  00198A  0E00               	movlw	0
  3483  00198C  0100               	movlb	0	; () banked
  3484  00198E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3485  001990  0E00               	movlw	0
  3486  001992  6F6A               	movwf	compare@lower& (0+255),b
  3487  001994  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3488  001998  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3489  00199C  0E00               	movlw	0
  3490  00199E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3491  0019A0  0E19               	movlw	25
  3492  0019A2  6F6E               	movwf	compare@upper& (0+255),b
  3493  0019A4  EC16  F02D         	call	_compare	;wreg free
  3494  0019A8  0900               	iorlw	0
  3495  0019AA  B4D8               	btfsc	status,2,c
  3496  0019AC  EFDA  F00C         	goto	u5351
  3497  0019B0  EFDC  F00C         	goto	u5350
  3498  0019B4                     u5351:
  3499  0019B4  EFF6  F00C         	goto	l5182
  3500  0019B8                     u5350:
  3501  0019B8  0E00               	movlw	0
  3502  0019BA  0100               	movlb	0	; () banked
  3503  0019BC  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3504  0019BE  0E00               	movlw	0
  3505  0019C0  6F6A               	movwf	compare@lower& (0+255),b
  3506  0019C2  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3507  0019C6  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3508  0019CA  0E00               	movlw	0
  3509  0019CC  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3510  0019CE  0E1E               	movlw	30
  3511  0019D0  6F6E               	movwf	compare@upper& (0+255),b
  3512  0019D2  EC16  F02D         	call	_compare	;wreg free
  3513  0019D6  0900               	iorlw	0
  3514  0019D8  B4D8               	btfsc	status,2,c
  3515  0019DA  EFF1  F00C         	goto	u5361
  3516  0019DE  EFF3  F00C         	goto	u5360
  3517  0019E2                     u5361:
  3518  0019E2  EFF6  F00C         	goto	l5182
  3519  0019E6                     u5360:
  3520  0019E6  0E00               	movlw	0
  3521  0019E8  0100               	movlb	0	; () banked
  3522  0019EA  6F89               	movwf	detect_color@color& (0+255),b
  3523  0019EC                     l5182:
  3524                           
  3525                           ;color.c: 352:     if (color == 8) {toggle_light(2,1);}
  3526  0019EC  0E08               	movlw	8
  3527  0019EE  0100               	movlb	0	; () banked
  3528  0019F0  1989               	xorwf	detect_color@color& (0+255),w,b
  3529  0019F2  A4D8               	btfss	status,2,c
  3530  0019F4  EFFE  F00C         	goto	u5371
  3531  0019F8  EF00  F00D         	goto	u5370
  3532  0019FC                     u5371:
  3533  0019FC  EF05  F00D         	goto	l5186
  3534  001A00                     u5370:
  3535  001A00                     
  3536                           ; BSR set to: 0
  3537  001A00  0E01               	movlw	1
  3538  001A02  6E01               	movwf	toggle_light@toggletime^0,c
  3539  001A04  0E02               	movlw	2
  3540  001A06  ECAF  F01A         	call	_toggle_light
  3541  001A0A                     l5186:
  3542                           
  3543                           ;color.c: 353:     return color;
  3544  001A0A  0100               	movlb	0	; () banked
  3545  001A0C  5189               	movf	detect_color@color& (0+255),w,b
  3546  001A0E                     
  3547                           ; BSR set to: 0
  3548  001A0E  0012               	return		;funcret
  3549  001A10                     __end_of_detect_color:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _compare *****************
  3553 ;; Defined at:
  3554 ;;		line 356 in file "color.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  lower           2   10[BANK0 ] unsigned int 
  3557 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3558 ;;  upper           2   14[BANK0 ] unsigned int 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  result          1   16[BANK0 ] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      unsigned char 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3570 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3573 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3574 ;;Total ram usage:        7 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 1
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_detect_color
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text5
  3585  005A2C                     __ptext5:
  3586                           	callstack 0
  3587  005A2C                     _compare:
  3588                           	callstack 27
  3589  005A2C                     
  3590                           ;color.c: 356: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 357: {;color.c: 358:     unsigned char result = 0;
  3591  005A2C  0E00               	movlw	0
  3592  005A2E  0100               	movlb	0	; () banked
  3593  005A30  6F70               	movwf	compare@result& (0+255),b
  3594  005A32                     
  3595                           ; BSR set to: 0
  3596                           ;color.c: 359:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3597  005A32  516C               	movf	compare@value2compare& (0+255),w,b
  3598  005A34  5D6A               	subwf	compare@lower& (0+255),w,b
  3599  005A36  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3600  005A38  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3601  005A3A  B0D8               	btfsc	status,0,c
  3602  005A3C  EF22  F02D         	goto	u4701
  3603  005A40  EF24  F02D         	goto	u4700
  3604  005A44                     u4701:
  3605  005A44  EF31  F02D         	goto	l163
  3606  005A48                     u4700:
  3607  005A48                     
  3608                           ; BSR set to: 0
  3609  005A48  516C               	movf	compare@value2compare& (0+255),w,b
  3610  005A4A  5D6E               	subwf	compare@upper& (0+255),w,b
  3611  005A4C  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3612  005A4E  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3613  005A50  A0D8               	btfss	status,0,c
  3614  005A52  EF2D  F02D         	goto	u4711
  3615  005A56  EF2F  F02D         	goto	u4710
  3616  005A5A                     u4711:
  3617  005A5A  EF31  F02D         	goto	l163
  3618  005A5E                     u4710:
  3619  005A5E                     
  3620                           ; BSR set to: 0
  3621  005A5E  0E01               	movlw	1
  3622  005A60  6F70               	movwf	compare@result& (0+255),b
  3623  005A62                     l163:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;color.c: 360:     return result;
  3627  005A62  5170               	movf	compare@result& (0+255),w,b
  3628  005A64                     
  3629                           ; BSR set to: 0
  3630  005A64  0012               	return		;funcret
  3631  005A66                     __end_of_compare:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _color_data_collection *****************
  3635 ;; Defined at:
  3636 ;;		line 200 in file "color.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3639 ;;		 -> main@rgb(8), 
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  x               2  132[BANK0 ] int 
  3642 ;;  k               2  130[BANK0 ] int 
  3643 ;;  j               2  128[BANK0 ] int 
  3644 ;;  i               2  126[BANK0 ] int 
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;Total ram usage:       12 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 10
  3661 ;; This function calls:
  3662 ;;		_LED_B
  3663 ;;		_LED_C
  3664 ;;		_LED_G
  3665 ;;		_LED_R
  3666 ;;		_color_display
  3667 ;;		_color_predict
  3668 ;;		_read_color
  3669 ;; This function is called by:
  3670 ;;		_test_function
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text6
  3675  00410A                     __ptext6:
  3676                           	callstack 0
  3677  00410A                     _color_data_collection:
  3678                           	callstack 19
  3679  00410A                     
  3680                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3681  00410A  0E00               	movlw	0
  3682  00410C  0100               	movlb	0	; () banked
  3683  00410E  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3684  004110  0E00               	movlw	0
  3685  004112  6FDE               	movwf	color_data_collection@i& (0+255),b
  3686  004114  0E00               	movlw	0
  3687  004116  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3688  004118  0E00               	movlw	0
  3689  00411A  6FE2               	movwf	color_data_collection@k& (0+255),b
  3690  00411C  0E00               	movlw	0
  3691  00411E  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3692  004120  0E00               	movlw	0
  3693  004122  6FE4               	movwf	color_data_collection@x& (0+255),b
  3694                           
  3695                           ;color.c: 203:     for (i = 0; i < 1; ++i){
  3696  004124  0E00               	movlw	0
  3697  004126  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3698  004128  0E00               	movlw	0
  3699  00412A  6FDE               	movwf	color_data_collection@i& (0+255),b
  3700  00412C                     l4950:
  3701                           
  3702                           ; BSR set to: 0
  3703                           ;color.c: 204:         LED_C();
  3704  00412C  EC4C  F02E         	call	_LED_C	;wreg free
  3705  004130                     
  3706                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3707  004130  0E09               	movlw	9
  3708  004132  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3709  004134  0E1E               	movlw	30
  3710  004136  6E5C               	movwf	??_color_data_collection^0,c
  3711  004138  0EE4               	movlw	228
  3712  00413A                     u6027:
  3713  00413A  2EE8               	decfsz	wreg,f,c
  3714  00413C  D7FE               	bra	u6027
  3715  00413E  2E5C               	decfsz	??_color_data_collection^0,f,c
  3716  004140  D7FC               	bra	u6027
  3717  004142  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3718  004144  D7FA               	bra	u6027
  3719  004146  D000               	nop2	
  3720  004148                     
  3721                           ;color.c: 206:         read_color(m);
  3722  004148  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3723  00414C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3724  004150  ECCB  F02A         	call	_read_color	;wreg free
  3725  004154                     
  3726                           ;color.c: 207:         color_display(m);
  3727  004154  C05A  F058         	movff	color_data_collection@m,color_display@m
  3728  004158  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3729  00415C  EC62  F02A         	call	_color_display	;wreg free
  3730  004160                     
  3731                           ;color.c: 208:     }
  3732  004160  0100               	movlb	0	; () banked
  3733  004162  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3734  004164  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3735  004166                     
  3736                           ; BSR set to: 0
  3737  004166  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3738  004168  EFBE  F020         	goto	u5191
  3739  00416C  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3740  00416E  E108               	bnz	u5190
  3741  004170  05DE               	decf	color_data_collection@i& (0+255),w,b
  3742  004172  A0D8               	btfss	status,0,c
  3743  004174  EFBE  F020         	goto	u5191
  3744  004178  EFC0  F020         	goto	u5190
  3745  00417C                     u5191:
  3746  00417C  EF96  F020         	goto	l4950
  3747  004180                     u5190:
  3748  004180                     
  3749                           ; BSR set to: 0
  3750                           ;color.c: 210:     for (j = 0; j < 1; ++j){
  3751  004180  0E00               	movlw	0
  3752  004182  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3753  004184  0E00               	movlw	0
  3754  004186  6FE0               	movwf	color_data_collection@j& (0+255),b
  3755  004188                     l4968:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;color.c: 211:         LED_R();
  3759  004188  EC0C  F02E         	call	_LED_R	;wreg free
  3760  00418C                     
  3761                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3762  00418C  0E09               	movlw	9
  3763  00418E  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3764  004190  0E1E               	movlw	30
  3765  004192  6E5C               	movwf	??_color_data_collection^0,c
  3766  004194  0EE4               	movlw	228
  3767  004196                     u6037:
  3768  004196  2EE8               	decfsz	wreg,f,c
  3769  004198  D7FE               	bra	u6037
  3770  00419A  2E5C               	decfsz	??_color_data_collection^0,f,c
  3771  00419C  D7FC               	bra	u6037
  3772  00419E  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3773  0041A0  D7FA               	bra	u6037
  3774  0041A2  D000               	nop2	
  3775  0041A4                     
  3776                           ;color.c: 213:         read_color(m);
  3777  0041A4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3778  0041A8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3779  0041AC  ECCB  F02A         	call	_read_color	;wreg free
  3780  0041B0                     
  3781                           ;color.c: 214:         color_display(m);
  3782  0041B0  C05A  F058         	movff	color_data_collection@m,color_display@m
  3783  0041B4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3784  0041B8  EC62  F02A         	call	_color_display	;wreg free
  3785  0041BC                     
  3786                           ;color.c: 215:     }
  3787  0041BC  0100               	movlb	0	; () banked
  3788  0041BE  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3789  0041C0  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3790  0041C2                     
  3791                           ; BSR set to: 0
  3792  0041C2  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3793  0041C4  EFEC  F020         	goto	u5201
  3794  0041C8  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3795  0041CA  E108               	bnz	u5200
  3796  0041CC  05E0               	decf	color_data_collection@j& (0+255),w,b
  3797  0041CE  A0D8               	btfss	status,0,c
  3798  0041D0  EFEC  F020         	goto	u5201
  3799  0041D4  EFEE  F020         	goto	u5200
  3800  0041D8                     u5201:
  3801  0041D8  EFC4  F020         	goto	l4968
  3802  0041DC                     u5200:
  3803  0041DC                     
  3804                           ; BSR set to: 0
  3805                           ;color.c: 217:     for (k = 0; k < 1; ++k){
  3806  0041DC  0E00               	movlw	0
  3807  0041DE  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3808  0041E0  0E00               	movlw	0
  3809  0041E2  6FE2               	movwf	color_data_collection@k& (0+255),b
  3810  0041E4                     l4986:
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;color.c: 218:         LED_G();
  3814  0041E4  EC2C  F02E         	call	_LED_G	;wreg free
  3815  0041E8                     
  3816                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3817  0041E8  0E09               	movlw	9
  3818  0041EA  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3819  0041EC  0E1E               	movlw	30
  3820  0041EE  6E5C               	movwf	??_color_data_collection^0,c
  3821  0041F0  0EE4               	movlw	228
  3822  0041F2                     u6047:
  3823  0041F2  2EE8               	decfsz	wreg,f,c
  3824  0041F4  D7FE               	bra	u6047
  3825  0041F6  2E5C               	decfsz	??_color_data_collection^0,f,c
  3826  0041F8  D7FC               	bra	u6047
  3827  0041FA  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3828  0041FC  D7FA               	bra	u6047
  3829  0041FE  D000               	nop2	
  3830  004200                     
  3831                           ;color.c: 220:         read_color(m);
  3832  004200  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3833  004204  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3834  004208  ECCB  F02A         	call	_read_color	;wreg free
  3835  00420C                     
  3836                           ;color.c: 221:         color_display(m);
  3837  00420C  C05A  F058         	movff	color_data_collection@m,color_display@m
  3838  004210  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3839  004214  EC62  F02A         	call	_color_display	;wreg free
  3840  004218                     
  3841                           ;color.c: 222:     }
  3842  004218  0100               	movlb	0	; () banked
  3843  00421A  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3844  00421C  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3845  00421E                     
  3846                           ; BSR set to: 0
  3847  00421E  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3848  004220  EF1A  F021         	goto	u5211
  3849  004224  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3850  004226  E108               	bnz	u5210
  3851  004228  05E2               	decf	color_data_collection@k& (0+255),w,b
  3852  00422A  A0D8               	btfss	status,0,c
  3853  00422C  EF1A  F021         	goto	u5211
  3854  004230  EF1C  F021         	goto	u5210
  3855  004234                     u5211:
  3856  004234  EFF2  F020         	goto	l4986
  3857  004238                     u5210:
  3858  004238                     
  3859                           ; BSR set to: 0
  3860                           ;color.c: 224:     for (x = 0; x < 1; ++x){
  3861  004238  0E00               	movlw	0
  3862  00423A  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3863  00423C  0E00               	movlw	0
  3864  00423E  6FE4               	movwf	color_data_collection@x& (0+255),b
  3865  004240                     l5004:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;color.c: 225:         LED_B();
  3869  004240  EC3C  F02E         	call	_LED_B	;wreg free
  3870  004244                     
  3871                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3872  004244  0E09               	movlw	9
  3873  004246  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3874  004248  0E1E               	movlw	30
  3875  00424A  6E5C               	movwf	??_color_data_collection^0,c
  3876  00424C  0EE4               	movlw	228
  3877  00424E                     u6057:
  3878  00424E  2EE8               	decfsz	wreg,f,c
  3879  004250  D7FE               	bra	u6057
  3880  004252  2E5C               	decfsz	??_color_data_collection^0,f,c
  3881  004254  D7FC               	bra	u6057
  3882  004256  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3883  004258  D7FA               	bra	u6057
  3884  00425A  D000               	nop2	
  3885  00425C                     
  3886                           ;color.c: 227:         read_color(m);
  3887  00425C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3888  004260  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3889  004264  ECCB  F02A         	call	_read_color	;wreg free
  3890  004268                     
  3891                           ;color.c: 228:         color_display(m);
  3892  004268  C05A  F058         	movff	color_data_collection@m,color_display@m
  3893  00426C  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3894  004270  EC62  F02A         	call	_color_display	;wreg free
  3895  004274                     
  3896                           ;color.c: 229:     }
  3897  004274  0100               	movlb	0	; () banked
  3898  004276  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3899  004278  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3900  00427A                     
  3901                           ; BSR set to: 0
  3902  00427A  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3903  00427C  EF48  F021         	goto	u5221
  3904  004280  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3905  004282  E108               	bnz	u5220
  3906  004284  05E4               	decf	color_data_collection@x& (0+255),w,b
  3907  004286  A0D8               	btfss	status,0,c
  3908  004288  EF48  F021         	goto	u5221
  3909  00428C  EF4A  F021         	goto	u5220
  3910  004290                     u5221:
  3911  004290  EF20  F021         	goto	l5004
  3912  004294                     u5220:
  3913  004294                     
  3914                           ; BSR set to: 0
  3915                           ;color.c: 230:     color_predict(1);
  3916  004294  0E01               	movlw	1
  3917  004296  ECB9  F02D         	call	_color_predict
  3918  00429A                     
  3919                           ;color.c: 231:     LED_C();
  3920  00429A  EC4C  F02E         	call	_LED_C	;wreg free
  3921  00429E  0012               	return		;funcret
  3922  0042A0                     __end_of_color_data_collection:
  3923                           	callstack 0
  3924                           
  3925 ;; *************** function _read_color *****************
  3926 ;; Defined at:
  3927 ;;		line 147 in file "color.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3930 ;;		 -> main@rgb(8), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 4
  3949 ;; This function calls:
  3950 ;;		_color_read_Blue
  3951 ;;		_color_read_Clear
  3952 ;;		_color_read_Green
  3953 ;;		_color_read_Red
  3954 ;; This function is called by:
  3955 ;;		_color_data_collection
  3956 ;;		_detect_color
  3957 ;;		_test_function
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text7
  3962  005596                     __ptext7:
  3963                           	callstack 0
  3964  005596                     _read_color:
  3965                           	callstack 24
  3966  005596                     
  3967                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3968  005596  EC4E  F02B         	call	_color_read_Red	;wreg free
  3969  00559A  C00C  FFD9         	movff	read_color@m,fsr2l
  3970  00559E  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3971  0055A2  C005  FFDE         	movff	?_color_read_Red,postinc2
  3972  0055A6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3973                           
  3974                           ;color.c: 150:     m->B = color_read_Blue();
  3975  0055AA  EC9E  F02B         	call	_color_read_Blue	;wreg free
  3976  0055AE  EE20 F004          	lfsr	2,4
  3977  0055B2  500C               	movf	read_color@m^0,w,c
  3978  0055B4  26D9               	addwf	fsr2l,f,c
  3979  0055B6  500D               	movf	(read_color@m+1)^0,w,c
  3980  0055B8  22DA               	addwfc	fsr2h,f,c
  3981  0055BA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3982  0055BE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3983                           
  3984                           ;color.c: 151:     m->G = color_read_Green();
  3985  0055C2  EC76  F02B         	call	_color_read_Green	;wreg free
  3986  0055C6  EE20 F002          	lfsr	2,2
  3987  0055CA  500C               	movf	read_color@m^0,w,c
  3988  0055CC  26D9               	addwf	fsr2l,f,c
  3989  0055CE  500D               	movf	(read_color@m+1)^0,w,c
  3990  0055D0  22DA               	addwfc	fsr2h,f,c
  3991  0055D2  C005  FFDE         	movff	?_color_read_Green,postinc2
  3992  0055D6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3993                           
  3994                           ;color.c: 152:     m->C = color_read_Clear();
  3995  0055DA  ECC6  F02B         	call	_color_read_Clear	;wreg free
  3996  0055DE  EE20 F006          	lfsr	2,6
  3997  0055E2  500C               	movf	read_color@m^0,w,c
  3998  0055E4  26D9               	addwf	fsr2l,f,c
  3999  0055E6  500D               	movf	(read_color@m+1)^0,w,c
  4000  0055E8  22DA               	addwfc	fsr2h,f,c
  4001  0055EA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4002  0055EE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4003  0055F2  0012               	return		;funcret
  4004  0055F4                     __end_of_read_color:
  4005                           	callstack 0
  4006                           
  4007 ;; *************** function _color_predict *****************
  4008 ;; Defined at:
  4009 ;;		line 250 in file "color.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  color           1    wreg     unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  color           1  125[BANK0 ] unsigned char 
  4014 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;Total ram usage:      101 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 9
  4031 ;; This function calls:
  4032 ;;		_sendStringSerial4
  4033 ;;		_sprintf
  4034 ;; This function is called by:
  4035 ;;		_color_data_collection
  4036 ;;		_test_function
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           	psect	text8
  4041  005B72                     __ptext8:
  4042                           	callstack 0
  4043  005B72                     _color_predict:
  4044                           	callstack 20
  4045                           
  4046                           ;incstack = 0
  4047                           ;color_predict@color stored from wreg
  4048  005B72  0100               	movlb	0	; () banked
  4049  005B74  6FDD               	movwf	color_predict@color& (0+255),b
  4050  005B76                     
  4051                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
  4052  005B76  0E79               	movlw	low color_predict@buf
  4053  005B78  0100               	movlb	0	; () banked
  4054  005B7A  6F60               	movwf	sprintf@s& (0+255),b
  4055  005B7C  0E00               	movlw	high color_predict@buf
  4056  005B7E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4057  005B80  0E0D               	movlw	low (STR_1+8)
  4058  005B82  6F62               	movwf	sprintf@fmt& (0+255),b
  4059  005B84  0E0E               	movlw	high (STR_1+8)
  4060  005B86  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4061  005B88  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  4062  005B8C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4063  005B8E  EC25  F02B         	call	_sprintf	;wreg free
  4064  005B92                     
  4065                           ;color.c: 254:     sendStringSerial4(buf);
  4066  005B92  0E79               	movlw	low color_predict@buf
  4067  005B94  6E02               	movwf	sendStringSerial4@string^0,c
  4068  005B96  0E00               	movlw	high color_predict@buf
  4069  005B98  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4070  005B9A  ECA1  F02D         	call	_sendStringSerial4	;wreg free
  4071  005B9E  0012               	return		;funcret
  4072  005BA0                     __end_of_color_predict:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _color_display *****************
  4076 ;; Defined at:
  4077 ;;		line 234 in file "color.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  m               2   87[COMRAM] PTR struct color_rgb
  4080 ;;		 -> main@rgb(8), 
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      void 
  4085 ;; Registers used:
  4086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:      102 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 9
  4099 ;; This function calls:
  4100 ;;		_sendStringSerial4
  4101 ;;		_sprintf
  4102 ;; This function is called by:
  4103 ;;		_color_data_collection
  4104 ;;		_test_function
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text9
  4109  0054C4                     __ptext9:
  4110                           	callstack 0
  4111  0054C4                     _color_display:
  4112                           	callstack 20
  4113  0054C4                     
  4114                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4115  0054C4  0E79               	movlw	low color_display@buf
  4116  0054C6  0100               	movlb	0	; () banked
  4117  0054C8  6F60               	movwf	sprintf@s& (0+255),b
  4118  0054CA  0E00               	movlw	high color_display@buf
  4119  0054CC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4120  0054CE  0E05               	movlw	low STR_1
  4121  0054D0  6F62               	movwf	sprintf@fmt& (0+255),b
  4122  0054D2  0E0E               	movlw	high STR_1
  4123  0054D4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4124  0054D6  C058  FFD9         	movff	color_display@m,fsr2l
  4125  0054DA  C059  FFDA         	movff	color_display@m+1,fsr2h
  4126  0054DE  CFDE F064          	movff	postinc2,?_sprintf+4
  4127  0054E2  CFDD F065          	movff	postdec2,?_sprintf+5
  4128  0054E6  EE20 F002          	lfsr	2,2
  4129  0054EA  5058               	movf	color_display@m^0,w,c
  4130  0054EC  26D9               	addwf	fsr2l,f,c
  4131  0054EE  5059               	movf	(color_display@m+1)^0,w,c
  4132  0054F0  22DA               	addwfc	fsr2h,f,c
  4133  0054F2  CFDE F066          	movff	postinc2,?_sprintf+6
  4134  0054F6  CFDD F067          	movff	postdec2,?_sprintf+7
  4135  0054FA  EE20 F004          	lfsr	2,4
  4136  0054FE  5058               	movf	color_display@m^0,w,c
  4137  005500  26D9               	addwf	fsr2l,f,c
  4138  005502  5059               	movf	(color_display@m+1)^0,w,c
  4139  005504  22DA               	addwfc	fsr2h,f,c
  4140  005506  CFDE F068          	movff	postinc2,?_sprintf+8
  4141  00550A  CFDD F069          	movff	postdec2,?_sprintf+9
  4142  00550E  EE20 F006          	lfsr	2,6
  4143  005512  5058               	movf	color_display@m^0,w,c
  4144  005514  26D9               	addwf	fsr2l,f,c
  4145  005516  5059               	movf	(color_display@m+1)^0,w,c
  4146  005518  22DA               	addwfc	fsr2h,f,c
  4147  00551A  CFDE F06A          	movff	postinc2,?_sprintf+10
  4148  00551E  CFDD F06B          	movff	postdec2,?_sprintf+11
  4149  005522  EC25  F02B         	call	_sprintf	;wreg free
  4150  005526                     
  4151                           ;color.c: 238:     sendStringSerial4(buf);
  4152  005526  0E79               	movlw	low color_display@buf
  4153  005528  6E02               	movwf	sendStringSerial4@string^0,c
  4154  00552A  0E00               	movlw	high color_display@buf
  4155  00552C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4156  00552E  ECA1  F02D         	call	_sendStringSerial4	;wreg free
  4157  005532  0012               	return		;funcret
  4158  005534                     __end_of_color_display:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _sprintf *****************
  4162 ;; Defined at:
  4163 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4166 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  4167 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4168 ;;		 -> STR_2(6), STR_1(14), 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4171 ;;  ap              2   12[BANK0 ] PTR void [1]
  4172 ;;		 -> ?_sprintf(2), 
  4173 ;;  ret             2    0        int 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  2    0[BANK0 ] int 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4183 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;Total ram usage:       25 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 8
  4190 ;; This function calls:
  4191 ;;		_vfprintf
  4192 ;; This function is called by:
  4193 ;;		_color_display
  4194 ;;		_color_predict
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text10
  4199  00564A                     __ptext10:
  4200                           	callstack 0
  4201  00564A                     _sprintf:
  4202                           	callstack 20
  4203  00564A  0E64               	movlw	low (?_sprintf+4)
  4204  00564C  0100               	movlb	0	; () banked
  4205  00564E  6F6C               	movwf	sprintf@ap& (0+255),b
  4206  005650  0E00               	movlw	high (?_sprintf+4)
  4207  005652  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4208  005654  C060  F06E         	movff	sprintf@s,sprintf@f
  4209  005658  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4210  00565C                     
  4211                           ; BSR set to: 0
  4212  00565C  0E00               	movlw	0
  4213  00565E  6F72               	movwf	(sprintf@f+4)& (0+255),b
  4214  005660  0E00               	movlw	0
  4215  005662  6F71               	movwf	(sprintf@f+3)& (0+255),b
  4216  005664                     
  4217                           ; BSR set to: 0
  4218  005664  0E00               	movlw	0
  4219  005666  6F78               	movwf	(sprintf@f+10)& (0+255),b
  4220  005668  0E00               	movlw	0
  4221  00566A  6F77               	movwf	(sprintf@f+9)& (0+255),b
  4222  00566C                     
  4223                           ; BSR set to: 0
  4224  00566C  0E6E               	movlw	low sprintf@f
  4225  00566E  6E50               	movwf	vfprintf@fp^0,c
  4226  005670  0E00               	movlw	high sprintf@f
  4227  005672  6E51               	movwf	(vfprintf@fp+1)^0,c
  4228  005674  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  4229  005678  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4230  00567C  0E6C               	movlw	low sprintf@ap
  4231  00567E  6E54               	movwf	vfprintf@ap^0,c
  4232  005680  0E00               	movlw	high sprintf@ap
  4233  005682  6E55               	movwf	(vfprintf@ap+1)^0,c
  4234  005684  EC9A  F02A         	call	_vfprintf	;wreg free
  4235  005688  0100               	movlb	0	; () banked
  4236  00568A  5171               	movf	(sprintf@f+3)& (0+255),w,b
  4237  00568C  2560               	addwf	sprintf@s& (0+255),w,b
  4238  00568E  6ED9               	movwf	fsr2l,c
  4239  005690  5172               	movf	(sprintf@f+4)& (0+255),w,b
  4240  005692  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  4241  005694  6EDA               	movwf	fsr2h,c
  4242  005696  0E00               	movlw	0
  4243  005698  6EDF               	movwf	indf2,c
  4244  00569A                     
  4245                           ; BSR set to: 0
  4246  00569A  0012               	return		;funcret
  4247  00569C                     __end_of_sprintf:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _vfprintf *****************
  4251 ;; Defined at:
  4252 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  4255 ;;		 -> sprintf@f(11), 
  4256 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  4257 ;;		 -> STR_2(6), STR_1(14), 
  4258 ;;  ap              2   83[COMRAM] PTR PTR void 
  4259 ;;		 -> sprintf@ap(2), 
  4260 ;; Auto vars:     Size  Location     Type
  4261 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  4262 ;;		 -> STR_2(6), STR_1(14), 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  2   79[COMRAM] int 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4272 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;Total ram usage:        8 bytes
  4277 ;; Hardware stack levels used: 1
  4278 ;; Hardware stack levels required when called: 7
  4279 ;; This function calls:
  4280 ;;		_vfpfcnvrt
  4281 ;; This function is called by:
  4282 ;;		_sprintf
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text11
  4287  005534                     __ptext11:
  4288                           	callstack 0
  4289  005534                     _vfprintf:
  4290                           	callstack 20
  4291  005534                     
  4292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4293  005534  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  4294  005538  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4295  00553C                     
  4296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4297  00553C  0E00               	movlw	0
  4298  00553E  0101               	movlb	1	; () banked
  4299  005540  6F8F               	movwf	(_nout+1)& (0+255),b
  4300  005542  0E00               	movlw	0
  4301  005544  6F8E               	movwf	_nout& (0+255),b
  4302                           
  4303                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4304  005546  EFB8  F02A         	goto	l4402
  4305  00554A                     l4400:
  4306                           
  4307                           ; BSR set to: 1
  4308                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4309  00554A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  4310  00554E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4311  005552  0E56               	movlw	low vfprintf@cfmt
  4312  005554  6E42               	movwf	vfpfcnvrt@fmt^0,c
  4313  005556  0E00               	movlw	high vfprintf@cfmt
  4314  005558  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4315  00555A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  4316  00555E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4317  005562  ECD1  F01E         	call	_vfpfcnvrt	;wreg free
  4318  005566  5040               	movf	?_vfpfcnvrt^0,w,c
  4319  005568  0101               	movlb	1	; () banked
  4320  00556A  278E               	addwf	_nout& (0+255),f,b
  4321  00556C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  4322  00556E  238F               	addwfc	(_nout+1)& (0+255),f,b
  4323  005570                     l4402:
  4324                           
  4325                           ; BSR set to: 1
  4326                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4327  005570  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  4328  005574  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4329  005578                     	if	0	;tblptru may be non-zero
  4330  005578                     	endif
  4331  005578                     	if	0	;tblptru may be non-zero
  4332  005578                     	endif
  4333  005578  0008               	tblrd		*
  4334  00557A  50F5               	movf	tablat,w,c
  4335  00557C  0900               	iorlw	0
  4336  00557E  A4D8               	btfss	status,2,c
  4337  005580  EFC4  F02A         	goto	u4221
  4338  005584  EFC6  F02A         	goto	u4220
  4339  005588                     u4221:
  4340  005588  EFA5  F02A         	goto	l4400
  4341  00558C                     u4220:
  4342  00558C                     
  4343                           ; BSR set to: 1
  4344                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4345  00558C  C18E  F050         	movff	_nout,?_vfprintf
  4346  005590  C18F  F051         	movff	_nout+1,?_vfprintf+1
  4347  005594                     
  4348                           ; BSR set to: 1
  4349  005594  0012               	return		;funcret
  4350  005596                     __end_of_vfprintf:
  4351                           	callstack 0
  4352                           
  4353 ;; *************** function _vfpfcnvrt *****************
  4354 ;; Defined at:
  4355 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4358 ;;		 -> sprintf@f(11), 
  4359 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4360 ;;		 -> vfprintf@cfmt(2), 
  4361 ;;  ap              2   67[COMRAM] PTR PTR void 
  4362 ;;		 -> sprintf@ap(2), 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  ll              8   71[COMRAM] long long 
  4365 ;;  llu             8    0        unsigned long long 
  4366 ;;  f               4    0        unsigned long long 
  4367 ;;  vp              3    0        PTR void 
  4368 ;;  ct              3    0        unsigned char [3]
  4369 ;;  cp              3    0        PTR unsigned char 
  4370 ;;  i               2    0        int 
  4371 ;;  done            2    0        int 
  4372 ;;  c               1    0        unsigned char 
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  2   63[COMRAM] int 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4382 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;Total ram usage:       16 bytes
  4387 ;; Hardware stack levels used: 1
  4388 ;; Hardware stack levels required when called: 6
  4389 ;; This function calls:
  4390 ;;		_dtoa
  4391 ;;		_fputc
  4392 ;; This function is called by:
  4393 ;;		_vfprintf
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text12
  4398  003DA2                     __ptext12:
  4399                           	callstack 0
  4400  003DA2                     _vfpfcnvrt:
  4401                           	callstack 20
  4402  003DA2                     
  4403                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4404  003DA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4405  003DA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4406  003DAA  CFDE FFF6          	movff	postinc2,tblptrl
  4407  003DAE  CFDD FFF7          	movff	postdec2,tblptrh
  4408  003DB2                     	if	0	;tblptru may be non-zero
  4409  003DB2                     	endif
  4410  003DB2                     	if	0	;tblptru may be non-zero
  4411  003DB2                     	endif
  4412  003DB2  0008               	tblrd		*
  4413  003DB4  50F5               	movf	tablat,w,c
  4414  003DB6  0A25               	xorlw	37
  4415  003DB8  A4D8               	btfss	status,2,c
  4416  003DBA  EFE1  F01E         	goto	u3861
  4417  003DBE  EFE3  F01E         	goto	u3860
  4418  003DC2                     u3861:
  4419  003DC2  EF8F  F01F         	goto	l4166
  4420  003DC6                     u3860:
  4421  003DC6                     
  4422                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4423  003DC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4424  003DCA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4425  003DCE  2ADE               	incf	postinc2,f,c
  4426  003DD0  0E00               	movlw	0
  4427  003DD2  22DD               	addwfc	postdec2,f,c
  4428  003DD4                     
  4429                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4430  003DD4  0E00               	movlw	0
  4431  003DD6  0101               	movlb	1	; () banked
  4432  003DD8  6F91               	movwf	(_width+1)& (0+255),b
  4433  003DDA  0E00               	movlw	0
  4434  003DDC  6F90               	movwf	_width& (0+255),b
  4435  003DDE  C190  F0F8         	movff	_width,_flags
  4436  003DE2  C191  F0F9         	movff	_width+1,_flags+1
  4437  003DE6                     
  4438                           ; BSR set to: 1
  4439                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4440  003DE6  6992               	setf	_prec& (0+255),b
  4441  003DE8  6993               	setf	(_prec+1)& (0+255),b
  4442  003DEA                     
  4443                           ; BSR set to: 1
  4444                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4445  003DEA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4446  003DEE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4447  003DF2  CFDE FFF6          	movff	postinc2,tblptrl
  4448  003DF6  CFDD FFF7          	movff	postdec2,tblptrh
  4449  003DFA                     	if	0	;tblptru may be non-zero
  4450  003DFA                     	endif
  4451  003DFA                     	if	0	;tblptru may be non-zero
  4452  003DFA                     	endif
  4453  003DFA  0008               	tblrd		*
  4454  003DFC  50F5               	movf	tablat,w,c
  4455  003DFE  0A64               	xorlw	100
  4456  003E00  B4D8               	btfsc	status,2,c
  4457  003E02  EF05  F01F         	goto	u3871
  4458  003E06  EF07  F01F         	goto	u3870
  4459  003E0A                     u3871:
  4460  003E0A  EF19  F01F         	goto	l4144
  4461  003E0E                     u3870:
  4462  003E0E                     
  4463                           ; BSR set to: 1
  4464  003E0E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4465  003E12  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4466  003E16  CFDE FFF6          	movff	postinc2,tblptrl
  4467  003E1A  CFDD FFF7          	movff	postdec2,tblptrh
  4468  003E1E                     	if	0	;tblptru may be non-zero
  4469  003E1E                     	endif
  4470  003E1E                     	if	0	;tblptru may be non-zero
  4471  003E1E                     	endif
  4472  003E1E  0008               	tblrd		*
  4473  003E20  50F5               	movf	tablat,w,c
  4474  003E22  0A69               	xorlw	105
  4475  003E24  A4D8               	btfss	status,2,c
  4476  003E26  EF17  F01F         	goto	u3881
  4477  003E2A  EF19  F01F         	goto	u3880
  4478  003E2E                     u3881:
  4479  003E2E  EF59  F01F         	goto	l4150
  4480  003E32                     u3880:
  4481  003E32                     l4144:
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4485  003E32  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4486  003E36  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4487  003E3A  2ADE               	incf	postinc2,f,c
  4488  003E3C  0E00               	movlw	0
  4489  003E3E  22DD               	addwfc	postdec2,f,c
  4490                           
  4491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4492  003E40  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4493  003E44  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4494  003E48  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4495  003E4C  0E02               	movlw	2
  4496  003E4E  26DE               	addwf	postinc2,f,c
  4497  003E50  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4498  003E54  0E00               	movlw	0
  4499  003E56  22DD               	addwfc	postdec2,f,c
  4500  003E58  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4501  003E5C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4502  003E60  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  4503  003E64  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  4504  003E68  0E00               	movlw	0
  4505  003E6A  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4506  003E6C  0EFF               	movlw	-1
  4507  003E6E  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  4508  003E70  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  4509  003E72  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  4510  003E74  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  4511  003E76  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  4512  003E78  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  4513  003E7A                     
  4514                           ; BSR set to: 1
  4515                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4516  003E7A  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4517  003E7E  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4518  003E82  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4519  003E86  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4520  003E8A  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4521  003E8E  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4522  003E92  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4523  003E96  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4524  003E9A  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4525  003E9E  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4526  003EA2  EC21  F015         	call	_dtoa	;wreg free
  4527  003EA6  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4528  003EAA  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4529  003EAE  EFAA  F01F         	goto	l1568
  4530  003EB2                     l4150:
  4531                           
  4532                           ; BSR set to: 1
  4533                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4534  003EB2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4535  003EB6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4536  003EBA  CFDE FFF6          	movff	postinc2,tblptrl
  4537  003EBE  CFDD FFF7          	movff	postdec2,tblptrh
  4538  003EC2                     	if	0	;tblptru may be non-zero
  4539  003EC2                     	endif
  4540  003EC2                     	if	0	;tblptru may be non-zero
  4541  003EC2                     	endif
  4542  003EC2  0008               	tblrd		*
  4543  003EC4  50F5               	movf	tablat,w,c
  4544  003EC6  0A25               	xorlw	37
  4545  003EC8  A4D8               	btfss	status,2,c
  4546  003ECA  EF69  F01F         	goto	u3891
  4547  003ECE  EF6B  F01F         	goto	u3890
  4548  003ED2                     u3891:
  4549  003ED2  EF82  F01F         	goto	l4160
  4550  003ED6                     u3890:
  4551  003ED6                     
  4552                           ; BSR set to: 1
  4553                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4554  003ED6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4555  003EDA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4556  003EDE  2ADE               	incf	postinc2,f,c
  4557  003EE0  0E00               	movlw	0
  4558  003EE2  22DD               	addwfc	postdec2,f,c
  4559  003EE4                     
  4560                           ; BSR set to: 1
  4561                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4562  003EE4  0E00               	movlw	0
  4563  003EE6  6E02               	movwf	(fputc@c+1)^0,c
  4564  003EE8  0E25               	movlw	37
  4565  003EEA  6E01               	movwf	fputc@c^0,c
  4566  003EEC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4567  003EF0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4568  003EF4  EC8F  F027         	call	_fputc	;wreg free
  4569  003EF8                     l4156:
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4572  003EF8  0E00               	movlw	0
  4573  003EFA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4574  003EFC  0E01               	movlw	1
  4575  003EFE  6E40               	movwf	?_vfpfcnvrt^0,c
  4576  003F00  EFAA  F01F         	goto	l1568
  4577  003F04                     l4160:
  4578                           
  4579                           ; BSR set to: 1
  4580                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4581  003F04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4582  003F08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4583  003F0C  2ADE               	incf	postinc2,f,c
  4584  003F0E  0E00               	movlw	0
  4585  003F10  22DD               	addwfc	postdec2,f,c
  4586  003F12                     
  4587                           ; BSR set to: 1
  4588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4589  003F12  0E00               	movlw	0
  4590  003F14  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4591  003F16  0E00               	movlw	0
  4592  003F18  6E40               	movwf	?_vfpfcnvrt^0,c
  4593  003F1A  EFAA  F01F         	goto	l1568
  4594  003F1E                     l4166:
  4595                           
  4596                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4597  003F1E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4598  003F22  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4599  003F26  CFDE FFF6          	movff	postinc2,tblptrl
  4600  003F2A  CFDD FFF7          	movff	postdec2,tblptrh
  4601  003F2E                     	if	0	;tblptru may be non-zero
  4602  003F2E                     	endif
  4603  003F2E                     	if	0	;tblptru may be non-zero
  4604  003F2E                     	endif
  4605  003F2E  0008               	tblrd		*
  4606  003F30  50F5               	movf	tablat,w,c
  4607  003F32  6E01               	movwf	fputc@c^0,c
  4608  003F34  6A02               	clrf	(fputc@c+1)^0,c
  4609  003F36  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4610  003F3A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4611  003F3E  EC8F  F027         	call	_fputc	;wreg free
  4612  003F42                     
  4613                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4614  003F42  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4615  003F46  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4616  003F4A  2ADE               	incf	postinc2,f,c
  4617  003F4C  0E00               	movlw	0
  4618  003F4E  22DD               	addwfc	postdec2,f,c
  4619  003F50  EF7C  F01F         	goto	l4156
  4620  003F54                     l1568:
  4621  003F54  0012               	return		;funcret
  4622  003F56                     __end_of_vfpfcnvrt:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _dtoa *****************
  4626 ;; Defined at:
  4627 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4630 ;;		 -> sprintf@f(11), 
  4631 ;;  d               8   29[COMRAM] long long 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  n               8   53[COMRAM] long long 
  4634 ;;  i               2   61[COMRAM] int 
  4635 ;;  s               2   51[COMRAM] int 
  4636 ;;  w               2   49[COMRAM] int 
  4637 ;;  p               2   47[COMRAM] int 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2   27[COMRAM] int 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4647 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;Total ram usage:       36 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 5
  4654 ;; This function calls:
  4655 ;;		___aodiv
  4656 ;;		___aomod
  4657 ;;		_abs
  4658 ;;		_pad
  4659 ;; This function is called by:
  4660 ;;		_vfpfcnvrt
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text13
  4665  002A42                     __ptext13:
  4666                           	callstack 0
  4667  002A42                     _dtoa:
  4668                           	callstack 20
  4669  002A42                     
  4670                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4671  002A42  C01E  F036         	movff	dtoa@d,dtoa@n
  4672  002A46  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4673  002A4A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4674  002A4E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4675  002A52  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4676  002A56  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4677  002A5A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4678  002A5E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4679  002A62                     
  4680                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4681  002A62  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4682  002A64  EF36  F015         	goto	u3261
  4683  002A68  EF39  F015         	goto	u3260
  4684  002A6C                     u3261:
  4685  002A6C  0E01               	movlw	1
  4686  002A6E  EF3A  F015         	goto	u3270
  4687  002A72                     u3260:
  4688  002A72  0E00               	movlw	0
  4689  002A74                     u3270:
  4690  002A74  6E34               	movwf	dtoa@s^0,c
  4691  002A76  6A35               	clrf	(dtoa@s+1)^0,c
  4692                           
  4693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4694  002A78  5034               	movf	dtoa@s^0,w,c
  4695  002A7A  1035               	iorwf	(dtoa@s+1)^0,w,c
  4696  002A7C  B4D8               	btfsc	status,2,c
  4697  002A7E  EF43  F015         	goto	u3281
  4698  002A82  EF45  F015         	goto	u3280
  4699  002A86                     u3281:
  4700  002A86  EF55  F015         	goto	l3856
  4701  002A8A                     u3280:
  4702  002A8A                     
  4703                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4704  002A8A  1E3D               	comf	(dtoa@n+7)^0,f,c
  4705  002A8C  1E3C               	comf	(dtoa@n+6)^0,f,c
  4706  002A8E  1E3B               	comf	(dtoa@n+5)^0,f,c
  4707  002A90  1E3A               	comf	(dtoa@n+4)^0,f,c
  4708  002A92  1E39               	comf	(dtoa@n+3)^0,f,c
  4709  002A94  1E38               	comf	(dtoa@n+2)^0,f,c
  4710  002A96  1E37               	comf	(dtoa@n+1)^0,f,c
  4711  002A98  6C36               	negf	dtoa@n^0,c
  4712  002A9A  0E00               	movlw	0
  4713  002A9C  2237               	addwfc	(dtoa@n+1)^0,f,c
  4714  002A9E  2238               	addwfc	(dtoa@n+2)^0,f,c
  4715  002AA0  2239               	addwfc	(dtoa@n+3)^0,f,c
  4716  002AA2  223A               	addwfc	(dtoa@n+4)^0,f,c
  4717  002AA4  223B               	addwfc	(dtoa@n+5)^0,f,c
  4718  002AA6  223C               	addwfc	(dtoa@n+6)^0,f,c
  4719  002AA8  223D               	addwfc	(dtoa@n+7)^0,f,c
  4720  002AAA                     l3856:
  4721                           
  4722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4723  002AAA  0101               	movlb	1	; () banked
  4724  002AAC  BF93               	btfsc	(_prec+1)& (0+255),7,b
  4725  002AAE  EF5B  F015         	goto	u3291
  4726  002AB2  EF5D  F015         	goto	u3290
  4727  002AB6                     u3291:
  4728  002AB6  EF5F  F015         	goto	l3860
  4729  002ABA                     u3290:
  4730  002ABA                     
  4731                           ; BSR set to: 1
  4732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4733  002ABA  0100               	movlb	0	; () banked
  4734  002ABC  93F8               	bcf	_flags& (0+255),1,b
  4735  002ABE                     l3860:
  4736                           
  4737                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4738  002ABE  0101               	movlb	1	; () banked
  4739  002AC0  BF93               	btfsc	(_prec+1)& (0+255),7,b
  4740  002AC2  EF6D  F015         	goto	u3300
  4741  002AC6  5193               	movf	(_prec+1)& (0+255),w,b
  4742  002AC8  E106               	bnz	u3301
  4743  002ACA  0592               	decf	_prec& (0+255),w,b
  4744  002ACC  B0D8               	btfsc	status,0,c
  4745  002ACE  EF6B  F015         	goto	u3301
  4746  002AD2  EF6D  F015         	goto	u3300
  4747  002AD6                     u3301:
  4748  002AD6  EF73  F015         	goto	l1541
  4749  002ADA                     u3300:
  4750  002ADA                     
  4751                           ; BSR set to: 1
  4752  002ADA  0E00               	movlw	0
  4753  002ADC  6E31               	movwf	(dtoa@p+1)^0,c
  4754  002ADE  0E01               	movlw	1
  4755  002AE0  6E30               	movwf	dtoa@p^0,c
  4756  002AE2  EF77  F015         	goto	l1543
  4757  002AE6                     l1541:
  4758                           
  4759                           ; BSR set to: 1
  4760  002AE6  C192  F030         	movff	_prec,dtoa@p
  4761  002AEA  C193  F031         	movff	_prec+1,dtoa@p+1
  4762  002AEE                     l1543:
  4763                           
  4764                           ; BSR set to: 1
  4765                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4766  002AEE  C190  F032         	movff	_width,dtoa@w
  4767  002AF2  C191  F033         	movff	_width+1,dtoa@w+1
  4768  002AF6                     
  4769                           ; BSR set to: 1
  4770                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4771  002AF6  5034               	movf	dtoa@s^0,w,c
  4772  002AF8  1035               	iorwf	(dtoa@s+1)^0,w,c
  4773  002AFA  A4D8               	btfss	status,2,c
  4774  002AFC  EF82  F015         	goto	u3311
  4775  002B00  EF84  F015         	goto	u3310
  4776  002B04                     u3311:
  4777  002B04  EF8C  F015         	goto	l3868
  4778  002B08                     u3310:
  4779  002B08                     
  4780                           ; BSR set to: 1
  4781  002B08  0100               	movlb	0	; () banked
  4782  002B0A  A5F8               	btfss	_flags& (0+255),2,b
  4783  002B0C  EF8A  F015         	goto	u3321
  4784  002B10  EF8C  F015         	goto	u3320
  4785  002B14                     u3321:
  4786  002B14  EF8F  F015         	goto	l3870
  4787  002B18                     u3320:
  4788  002B18                     l3868:
  4789                           
  4790                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4791  002B18  0632               	decf	dtoa@w^0,f,c
  4792  002B1A  A0D8               	btfss	status,0,c
  4793  002B1C  0633               	decf	(dtoa@w+1)^0,f,c
  4794  002B1E                     l3870:
  4795                           
  4796                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4797  002B1E  0E00               	movlw	0
  4798  002B20  6E3F               	movwf	(dtoa@i+1)^0,c
  4799  002B22  0E1F               	movlw	31
  4800  002B24  6E3E               	movwf	dtoa@i^0,c
  4801  002B26                     
  4802                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4803  002B26  0E00               	movlw	0
  4804  002B28  0101               	movlb	1	; () banked
  4805  002B2A  6FBB               	movwf	(_dbuf+31)& (0+255),b
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4808  002B2C  EF14  F016         	goto	l3884
  4809  002B30                     l3874:
  4810                           
  4811                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4812  002B30  063E               	decf	dtoa@i^0,f,c
  4813  002B32  A0D8               	btfss	status,0,c
  4814  002B34  063F               	decf	(dtoa@i+1)^0,f,c
  4815  002B36                     
  4816                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4817  002B36  0E9C               	movlw	low _dbuf
  4818  002B38  243E               	addwf	dtoa@i^0,w,c
  4819  002B3A  6ED9               	movwf	fsr2l,c
  4820  002B3C  0E01               	movlw	high _dbuf
  4821  002B3E  203F               	addwfc	(dtoa@i+1)^0,w,c
  4822  002B40  6EDA               	movwf	fsr2h,c
  4823  002B42  C036  F001         	movff	dtoa@n,___aomod@dividend
  4824  002B46  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4825  002B4A  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4826  002B4E  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4827  002B52  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4828  002B56  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4829  002B5A  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4830  002B5E  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4831  002B62  0E0A               	movlw	10
  4832  002B64  6E09               	movwf	___aomod@divisor^0,c
  4833  002B66  0E00               	movlw	0
  4834  002B68  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4835  002B6A  0E00               	movlw	0
  4836  002B6C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4837  002B6E  0E00               	movlw	0
  4838  002B70  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4839  002B72  0E00               	movlw	0
  4840  002B74  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4841  002B76  0E00               	movlw	0
  4842  002B78  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4843  002B7A  0E00               	movlw	0
  4844  002B7C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4845  002B7E  0E00               	movlw	0
  4846  002B80  6E10               	movwf	(___aomod@divisor+7)^0,c
  4847  002B82  EC67  F024         	call	___aomod	;wreg free
  4848  002B86  C001  F026         	movff	?___aomod,??_dtoa
  4849  002B8A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4850  002B8E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4851  002B92  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4852  002B96  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4853  002B9A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4854  002B9E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4855  002BA2  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4856  002BA6  C026  F013         	movff	??_dtoa,abs@a
  4857  002BAA  C028  F014         	movff	??_dtoa+2,abs@a+1
  4858  002BAE  EC96  F02C         	call	_abs	;wreg free
  4859  002BB2  5013               	movf	?_abs^0,w,c
  4860  002BB4  0F30               	addlw	48
  4861  002BB6  6EDF               	movwf	indf2,c
  4862  002BB8                     
  4863                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4864  002BB8  0630               	decf	dtoa@p^0,f,c
  4865  002BBA  A0D8               	btfss	status,0,c
  4866  002BBC  0631               	decf	(dtoa@p+1)^0,f,c
  4867  002BBE                     
  4868                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4869  002BBE  0632               	decf	dtoa@w^0,f,c
  4870  002BC0  A0D8               	btfss	status,0,c
  4871  002BC2  0633               	decf	(dtoa@w+1)^0,f,c
  4872  002BC4                     
  4873                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4874  002BC4  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4875  002BC8  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4876  002BCC  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4877  002BD0  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4878  002BD4  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4879  002BD8  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4880  002BDC  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4881  002BE0  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4882  002BE4  0E0A               	movlw	10
  4883  002BE6  6E09               	movwf	___aodiv@divisor^0,c
  4884  002BE8  0E00               	movlw	0
  4885  002BEA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4886  002BEC  0E00               	movlw	0
  4887  002BEE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4888  002BF0  0E00               	movlw	0
  4889  002BF2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4890  002BF4  0E00               	movlw	0
  4891  002BF6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4892  002BF8  0E00               	movlw	0
  4893  002BFA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4894  002BFC  0E00               	movlw	0
  4895  002BFE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4896  002C00  0E00               	movlw	0
  4897  002C02  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4898  002C04  ECA3  F023         	call	___aodiv	;wreg free
  4899  002C08  C001  F036         	movff	?___aodiv,dtoa@n
  4900  002C0C  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4901  002C10  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4902  002C14  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4903  002C18  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4904  002C1C  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4905  002C20  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4906  002C24  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4907  002C28                     l3884:
  4908                           
  4909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4910  002C28  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4911  002C2A  EF1F  F016         	goto	u3331
  4912  002C2E  503F               	movf	(dtoa@i+1)^0,w,c
  4913  002C30  E108               	bnz	u3330
  4914  002C32  043E               	decf	dtoa@i^0,w,c
  4915  002C34  A0D8               	btfss	status,0,c
  4916  002C36  EF1F  F016         	goto	u3331
  4917  002C3A  EF21  F016         	goto	u3330
  4918  002C3E                     u3331:
  4919  002C3E  EF52  F016         	goto	l3894
  4920  002C42                     u3330:
  4921  002C42  5036               	movf	dtoa@n^0,w,c
  4922  002C44  1037               	iorwf	(dtoa@n+1)^0,w,c
  4923  002C46  1038               	iorwf	(dtoa@n+2)^0,w,c
  4924  002C48  1039               	iorwf	(dtoa@n+3)^0,w,c
  4925  002C4A  103A               	iorwf	(dtoa@n+4)^0,w,c
  4926  002C4C  103B               	iorwf	(dtoa@n+5)^0,w,c
  4927  002C4E  103C               	iorwf	(dtoa@n+6)^0,w,c
  4928  002C50  103D               	iorwf	(dtoa@n+7)^0,w,c
  4929  002C52  A4D8               	btfss	status,2,c
  4930  002C54  EF2E  F016         	goto	u3341
  4931  002C58  EF30  F016         	goto	u3340
  4932  002C5C                     u3341:
  4933  002C5C  EF98  F015         	goto	l3874
  4934  002C60                     u3340:
  4935  002C60  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4936  002C62  EF3D  F016         	goto	u3350
  4937  002C66  5031               	movf	(dtoa@p+1)^0,w,c
  4938  002C68  E106               	bnz	u3351
  4939  002C6A  0430               	decf	dtoa@p^0,w,c
  4940  002C6C  B0D8               	btfsc	status,0,c
  4941  002C6E  EF3B  F016         	goto	u3351
  4942  002C72  EF3D  F016         	goto	u3350
  4943  002C76                     u3351:
  4944  002C76  EF98  F015         	goto	l3874
  4945  002C7A                     u3350:
  4946  002C7A  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4947  002C7C  EF48  F016         	goto	u3361
  4948  002C80  5033               	movf	(dtoa@w+1)^0,w,c
  4949  002C82  E108               	bnz	u3360
  4950  002C84  0432               	decf	dtoa@w^0,w,c
  4951  002C86  A0D8               	btfss	status,0,c
  4952  002C88  EF48  F016         	goto	u3361
  4953  002C8C  EF4A  F016         	goto	u3360
  4954  002C90                     u3361:
  4955  002C90  EF52  F016         	goto	l3894
  4956  002C94                     u3360:
  4957  002C94  0100               	movlb	0	; () banked
  4958  002C96  B3F8               	btfsc	_flags& (0+255),1,b
  4959  002C98  EF50  F016         	goto	u3371
  4960  002C9C  EF52  F016         	goto	u3370
  4961  002CA0                     u3371:
  4962  002CA0  EF98  F015         	goto	l3874
  4963  002CA4                     u3370:
  4964  002CA4                     l3894:
  4965                           
  4966                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4967  002CA4  5034               	movf	dtoa@s^0,w,c
  4968  002CA6  1035               	iorwf	(dtoa@s+1)^0,w,c
  4969  002CA8  A4D8               	btfss	status,2,c
  4970  002CAA  EF59  F016         	goto	u3381
  4971  002CAE  EF5B  F016         	goto	u3380
  4972  002CB2                     u3381:
  4973  002CB2  EF63  F016         	goto	l3898
  4974  002CB6                     u3380:
  4975  002CB6  0100               	movlb	0	; () banked
  4976  002CB8  A5F8               	btfss	_flags& (0+255),2,b
  4977  002CBA  EF61  F016         	goto	u3391
  4978  002CBE  EF63  F016         	goto	u3390
  4979  002CC2                     u3391:
  4980  002CC2  EF81  F016         	goto	l3908
  4981  002CC6                     u3390:
  4982  002CC6                     l3898:
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4985  002CC6  063E               	decf	dtoa@i^0,f,c
  4986  002CC8  A0D8               	btfss	status,0,c
  4987  002CCA  063F               	decf	(dtoa@i+1)^0,f,c
  4988  002CCC                     
  4989                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4990  002CCC  5034               	movf	dtoa@s^0,w,c
  4991  002CCE  1035               	iorwf	(dtoa@s+1)^0,w,c
  4992  002CD0  A4D8               	btfss	status,2,c
  4993  002CD2  EF6D  F016         	goto	u3401
  4994  002CD6  EF6F  F016         	goto	u3400
  4995  002CDA                     u3401:
  4996  002CDA  EF75  F016         	goto	l3904
  4997  002CDE                     u3400:
  4998  002CDE  0E00               	movlw	0
  4999  002CE0  6E2F               	movwf	(_dtoa$2987+1)^0,c
  5000  002CE2  0E2B               	movlw	43
  5001  002CE4  6E2E               	movwf	_dtoa$2987^0,c
  5002  002CE6  EF79  F016         	goto	l3906
  5003  002CEA                     l3904:
  5004  002CEA  0E00               	movlw	0
  5005  002CEC  6E2F               	movwf	(_dtoa$2987+1)^0,c
  5006  002CEE  0E2D               	movlw	45
  5007  002CF0  6E2E               	movwf	_dtoa$2987^0,c
  5008  002CF2                     l3906:
  5009  002CF2  0E9C               	movlw	low _dbuf
  5010  002CF4  243E               	addwf	dtoa@i^0,w,c
  5011  002CF6  6ED9               	movwf	fsr2l,c
  5012  002CF8  0E01               	movlw	high _dbuf
  5013  002CFA  203F               	addwfc	(dtoa@i+1)^0,w,c
  5014  002CFC  6EDA               	movwf	fsr2h,c
  5015  002CFE  C02E  FFDF         	movff	_dtoa$2987,indf2
  5016  002D02                     l3908:
  5017                           
  5018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5019  002D02  C01C  F011         	movff	dtoa@fp,pad@fp
  5020  002D06  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5021  002D0A  0E9C               	movlw	low _dbuf
  5022  002D0C  243E               	addwf	dtoa@i^0,w,c
  5023  002D0E  6E13               	movwf	pad@buf^0,c
  5024  002D10  0E01               	movlw	high _dbuf
  5025  002D12  203F               	addwfc	(dtoa@i+1)^0,w,c
  5026  002D14  6E14               	movwf	(pad@buf+1)^0,c
  5027  002D16  C032  F015         	movff	dtoa@w,pad@p
  5028  002D1A  C033  F016         	movff	dtoa@w+1,pad@p+1
  5029  002D1E  EC57  F028         	call	_pad	;wreg free
  5030  002D22  C011  F01C         	movff	?_pad,?_dtoa
  5031  002D26  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5032  002D2A  0012               	return		;funcret
  5033  002D2C                     __end_of_dtoa:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _pad *****************
  5037 ;; Defined at:
  5038 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5041 ;;		 -> sprintf@f(11), 
  5042 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5043 ;;		 -> dbuf(32), 
  5044 ;;  p               2   20[COMRAM] int 
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;  w               2   25[COMRAM] int 
  5047 ;;  i               2   23[COMRAM] int 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;                  2   16[COMRAM] int 
  5050 ;; Registers used:
  5051 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5057 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5061 ;;Total ram usage:       11 bytes
  5062 ;; Hardware stack levels used: 1
  5063 ;; Hardware stack levels required when called: 4
  5064 ;; This function calls:
  5065 ;;		_fputc
  5066 ;;		_fputs
  5067 ;;		_strlen
  5068 ;; This function is called by:
  5069 ;;		_dtoa
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           	psect	text14
  5074  0050AE                     __ptext14:
  5075                           	callstack 0
  5076  0050AE                     _pad:
  5077                           	callstack 20
  5078  0050AE                     
  5079                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5080  0050AE  0100               	movlb	0	; () banked
  5081  0050B0  A1F8               	btfss	_flags& (0+255),0,b
  5082  0050B2  EF5D  F028         	goto	u3151
  5083  0050B6  EF5F  F028         	goto	u3150
  5084  0050BA                     u3151:
  5085  0050BA  EF69  F028         	goto	l3778
  5086  0050BE                     u3150:
  5087  0050BE                     
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5090  0050BE  C013  F00A         	movff	pad@buf,fputs@s
  5091  0050C2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5092  0050C6  C011  F00C         	movff	pad@fp,fputs@fp
  5093  0050CA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5094  0050CE  EC11  F02C         	call	_fputs	;wreg free
  5095  0050D2                     l3778:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5098  0050D2  BE16               	btfsc	(pad@p+1)^0,7,c
  5099  0050D4  EF6E  F028         	goto	u3161
  5100  0050D8  EF70  F028         	goto	u3160
  5101  0050DC                     u3161:
  5102  0050DC  EF76  F028         	goto	l3782
  5103  0050E0                     u3160:
  5104  0050E0  C015  F01A         	movff	pad@p,pad@w
  5105  0050E4  C016  F01B         	movff	pad@p+1,pad@w+1
  5106  0050E8  EF7A  F028         	goto	l1530
  5107  0050EC                     l3782:
  5108  0050EC  0E00               	movlw	0
  5109  0050EE  6E1B               	movwf	(pad@w+1)^0,c
  5110  0050F0  0E00               	movlw	0
  5111  0050F2  6E1A               	movwf	pad@w^0,c
  5112  0050F4                     l1530:
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5115  0050F4  0E00               	movlw	0
  5116  0050F6  6E19               	movwf	(pad@i+1)^0,c
  5117  0050F8  0E00               	movlw	0
  5118  0050FA  6E18               	movwf	pad@i^0,c
  5119                           
  5120                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5121  0050FC  EF8C  F028         	goto	l3788
  5122  005100                     l3784:
  5123                           
  5124                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5125  005100  0E00               	movlw	0
  5126  005102  6E02               	movwf	(fputc@c+1)^0,c
  5127  005104  0E20               	movlw	32
  5128  005106  6E01               	movwf	fputc@c^0,c
  5129  005108  C011  F003         	movff	pad@fp,fputc@fp
  5130  00510C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5131  005110  EC8F  F027         	call	_fputc	;wreg free
  5132  005114                     
  5133                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5134  005114  4A18               	infsnz	pad@i^0,f,c
  5135  005116  2A19               	incf	(pad@i+1)^0,f,c
  5136  005118                     l3788:
  5137                           
  5138                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5139  005118  501A               	movf	pad@w^0,w,c
  5140  00511A  5C18               	subwf	pad@i^0,w,c
  5141  00511C  5019               	movf	(pad@i+1)^0,w,c
  5142  00511E  0A80               	xorlw	128
  5143  005120  6E17               	movwf	??_pad^0,c
  5144  005122  501B               	movf	(pad@w+1)^0,w,c
  5145  005124  0A80               	xorlw	128
  5146  005126  5817               	subwfb	??_pad^0,w,c
  5147  005128  A0D8               	btfss	status,0,c
  5148  00512A  EF99  F028         	goto	u3171
  5149  00512E  EF9B  F028         	goto	u3170
  5150  005132                     u3171:
  5151  005132  EF80  F028         	goto	l3784
  5152  005136                     u3170:
  5153  005136                     
  5154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5155  005136  0100               	movlb	0	; () banked
  5156  005138  B1F8               	btfsc	_flags& (0+255),0,b
  5157  00513A  EFA1  F028         	goto	u3181
  5158  00513E  EFA3  F028         	goto	u3180
  5159  005142                     u3181:
  5160  005142  EFAD  F028         	goto	l3792
  5161  005146                     u3180:
  5162  005146                     
  5163                           ; BSR set to: 0
  5164                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5165  005146  C013  F00A         	movff	pad@buf,fputs@s
  5166  00514A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5167  00514E  C011  F00C         	movff	pad@fp,fputs@fp
  5168  005152  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5169  005156  EC11  F02C         	call	_fputs	;wreg free
  5170  00515A                     l3792:
  5171                           
  5172                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5173  00515A  C013  F001         	movff	pad@buf,strlen@s
  5174  00515E  C014  F002         	movff	pad@buf+1,strlen@s+1
  5175  005162  EC6C  F02D         	call	_strlen	;wreg free
  5176  005166  501A               	movf	pad@w^0,w,c
  5177  005168  2401               	addwf	?_strlen^0,w,c
  5178  00516A  6E11               	movwf	?_pad^0,c
  5179  00516C  501B               	movf	(pad@w+1)^0,w,c
  5180  00516E  2002               	addwfc	(?_strlen+1)^0,w,c
  5181  005170  6E12               	movwf	(?_pad+1)^0,c
  5182  005172  0012               	return		;funcret
  5183  005174                     __end_of_pad:
  5184                           	callstack 0
  5185                           
  5186 ;; *************** function _strlen *****************
  5187 ;; Defined at:
  5188 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5191 ;;		 -> dbuf(32), 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5194 ;;		 -> dbuf(32), 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  2    0[COMRAM] unsigned int 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;Total ram usage:        4 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 1
  5211 ;; This function calls:
  5212 ;;		Nothing
  5213 ;; This function is called by:
  5214 ;;		_pad
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text15
  5219  005AD8                     __ptext15:
  5220                           	callstack 0
  5221  005AD8                     _strlen:
  5222                           	callstack 22
  5223  005AD8  C001  F003         	movff	strlen@s,strlen@a
  5224  005ADC  C002  F004         	movff	strlen@s+1,strlen@a+1
  5225  005AE0  EF74  F02D         	goto	l3688
  5226  005AE4                     l3686:
  5227  005AE4  4A01               	infsnz	strlen@s^0,f,c
  5228  005AE6  2A02               	incf	(strlen@s+1)^0,f,c
  5229  005AE8                     l3688:
  5230  005AE8  C001  FFD9         	movff	strlen@s,fsr2l
  5231  005AEC  C002  FFDA         	movff	strlen@s+1,fsr2h
  5232  005AF0  50DF               	movf	indf2,w,c
  5233  005AF2  A4D8               	btfss	status,2,c
  5234  005AF4  EF7E  F02D         	goto	u3011
  5235  005AF8  EF80  F02D         	goto	u3010
  5236  005AFC                     u3011:
  5237  005AFC  EF72  F02D         	goto	l3686
  5238  005B00                     u3010:
  5239  005B00  5003               	movf	strlen@a^0,w,c
  5240  005B02  5C01               	subwf	strlen@s^0,w,c
  5241  005B04  6E01               	movwf	?_strlen^0,c
  5242  005B06  5004               	movf	(strlen@a+1)^0,w,c
  5243  005B08  5802               	subwfb	(strlen@s+1)^0,w,c
  5244  005B0A  6E02               	movwf	(?_strlen+1)^0,c
  5245  005B0C  0012               	return		;funcret
  5246  005B0E                     __end_of_strlen:
  5247                           	callstack 0
  5248                           
  5249 ;; *************** function _fputs *****************
  5250 ;; Defined at:
  5251 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5254 ;;		 -> dbuf(32), 
  5255 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5256 ;;		 -> sprintf@f(11), 
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;  i               2   14[COMRAM] int 
  5259 ;;  c               1   13[COMRAM] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  2    9[COMRAM] int 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5269 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;Total ram usage:        7 bytes
  5274 ;; Hardware stack levels used: 1
  5275 ;; Hardware stack levels required when called: 3
  5276 ;; This function calls:
  5277 ;;		_fputc
  5278 ;; This function is called by:
  5279 ;;		_pad
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text16
  5284  005822                     __ptext16:
  5285                           	callstack 0
  5286  005822                     _fputs:
  5287                           	callstack 20
  5288  005822  0E00               	movlw	0
  5289  005824  6E10               	movwf	(fputs@i+1)^0,c
  5290  005826  0E00               	movlw	0
  5291  005828  6E0F               	movwf	fputs@i^0,c
  5292  00582A  EF22  F02C         	goto	l3682
  5293  00582E                     l3678:
  5294  00582E  C00E  F001         	movff	fputs@c,fputc@c
  5295  005832  6A02               	clrf	(fputc@c+1)^0,c
  5296  005834  C00C  F003         	movff	fputs@fp,fputc@fp
  5297  005838  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5298  00583C  EC8F  F027         	call	_fputc	;wreg free
  5299  005840  4A0F               	infsnz	fputs@i^0,f,c
  5300  005842  2A10               	incf	(fputs@i+1)^0,f,c
  5301  005844                     l3682:
  5302  005844  500F               	movf	fputs@i^0,w,c
  5303  005846  240A               	addwf	fputs@s^0,w,c
  5304  005848  6ED9               	movwf	fsr2l,c
  5305  00584A  5010               	movf	(fputs@i+1)^0,w,c
  5306  00584C  200B               	addwfc	(fputs@s+1)^0,w,c
  5307  00584E  6EDA               	movwf	fsr2h,c
  5308  005850  50DF               	movf	indf2,w,c
  5309  005852  6E0E               	movwf	fputs@c^0,c
  5310  005854  500E               	movf	fputs@c^0,w,c
  5311  005856  A4D8               	btfss	status,2,c
  5312  005858  EF30  F02C         	goto	u3001
  5313  00585C  EF32  F02C         	goto	u3000
  5314  005860                     u3001:
  5315  005860  EF17  F02C         	goto	l3678
  5316  005864                     u3000:
  5317  005864  0012               	return		;funcret
  5318  005866                     __end_of_fputs:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _fputc *****************
  5322 ;; Defined at:
  5323 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  c               2    0[COMRAM] int 
  5326 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5327 ;;		 -> sprintf@f(11), 
  5328 ;; Auto vars:     Size  Location     Type
  5329 ;;		None
  5330 ;; Return value:  Size  Location     Type
  5331 ;;                  2    0[COMRAM] int 
  5332 ;; Registers used:
  5333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5334 ;; Tracked objects:
  5335 ;;		On entry : 0/0
  5336 ;;		On exit  : 0/0
  5337 ;;		Unchanged: 0/0
  5338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;Total ram usage:        9 bytes
  5344 ;; Hardware stack levels used: 1
  5345 ;; Hardware stack levels required when called: 2
  5346 ;; This function calls:
  5347 ;;		_putch
  5348 ;; This function is called by:
  5349 ;;		_pad
  5350 ;;		_vfpfcnvrt
  5351 ;;		_fputs
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text17
  5356  004F1E                     __ptext17:
  5357                           	callstack 0
  5358  004F1E                     _fputc:
  5359                           	callstack 23
  5360  004F1E  5003               	movf	fputc@fp^0,w,c
  5361  004F20  1004               	iorwf	(fputc@fp+1)^0,w,c
  5362  004F22  B4D8               	btfsc	status,2,c
  5363  004F24  EF96  F027         	goto	u2961
  5364  004F28  EF98  F027         	goto	u2960
  5365  004F2C                     u2961:
  5366  004F2C  EFA1  F027         	goto	l3666
  5367  004F30                     u2960:
  5368  004F30  5003               	movf	fputc@fp^0,w,c
  5369  004F32  1004               	iorwf	(fputc@fp+1)^0,w,c
  5370  004F34  A4D8               	btfss	status,2,c
  5371  004F36  EF9F  F027         	goto	u2971
  5372  004F3A  EFA1  F027         	goto	u2970
  5373  004F3E                     u2971:
  5374  004F3E  EFA6  F027         	goto	l3668
  5375  004F42                     u2970:
  5376  004F42                     l3666:
  5377  004F42  5001               	movf	fputc@c^0,w,c
  5378  004F44  ECD7  F02E         	call	_putch
  5379  004F48  EFF3  F027         	goto	l1594
  5380  004F4C                     l3668:
  5381  004F4C  EE20 F009          	lfsr	2,9
  5382  004F50  5003               	movf	fputc@fp^0,w,c
  5383  004F52  26D9               	addwf	fsr2l,f,c
  5384  004F54  5004               	movf	(fputc@fp+1)^0,w,c
  5385  004F56  22DA               	addwfc	fsr2h,f,c
  5386  004F58  50DE               	movf	postinc2,w,c
  5387  004F5A  10DE               	iorwf	postinc2,w,c
  5388  004F5C  B4D8               	btfsc	status,2,c
  5389  004F5E  EFB3  F027         	goto	u2981
  5390  004F62  EFB5  F027         	goto	u2980
  5391  004F66                     u2981:
  5392  004F66  EFD0  F027         	goto	l3672
  5393  004F6A                     u2980:
  5394  004F6A  EE20 F009          	lfsr	2,9
  5395  004F6E  5003               	movf	fputc@fp^0,w,c
  5396  004F70  26D9               	addwf	fsr2l,f,c
  5397  004F72  5004               	movf	(fputc@fp+1)^0,w,c
  5398  004F74  22DA               	addwfc	fsr2h,f,c
  5399  004F76  EE10 F003          	lfsr	1,3
  5400  004F7A  5003               	movf	fputc@fp^0,w,c
  5401  004F7C  26E1               	addwf	fsr1l,f,c
  5402  004F7E  5004               	movf	(fputc@fp+1)^0,w,c
  5403  004F80  22E2               	addwfc	fsr1h,f,c
  5404  004F82  50DE               	movf	postinc2,w,c
  5405  004F84  5CE6               	subwf	postinc1,w,c
  5406  004F86  50E6               	movf	postinc1,w,c
  5407  004F88  0A80               	xorlw	128
  5408  004F8A  6E09               	movwf	(??_fputc+4)^0,c
  5409  004F8C  50DE               	movf	postinc2,w,c
  5410  004F8E  0A80               	xorlw	128
  5411  004F90  5809               	subwfb	(??_fputc+4)^0,w,c
  5412  004F92  B0D8               	btfsc	status,0,c
  5413  004F94  EFCE  F027         	goto	u2991
  5414  004F98  EFD0  F027         	goto	u2990
  5415  004F9C                     u2991:
  5416  004F9C  EFF3  F027         	goto	l1594
  5417  004FA0                     u2990:
  5418  004FA0                     l3672:
  5419  004FA0  EE20 F003          	lfsr	2,3
  5420  004FA4  5003               	movf	fputc@fp^0,w,c
  5421  004FA6  26D9               	addwf	fsr2l,f,c
  5422  004FA8  5004               	movf	(fputc@fp+1)^0,w,c
  5423  004FAA  22DA               	addwfc	fsr2h,f,c
  5424  004FAC  CFDE F005          	movff	postinc2,??_fputc
  5425  004FB0  CFDD F006          	movff	postdec2,??_fputc+1
  5426  004FB4  C003  FFD9         	movff	fputc@fp,fsr2l
  5427  004FB8  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5428  004FBC  CFDE F007          	movff	postinc2,??_fputc+2
  5429  004FC0  CFDD F008          	movff	postdec2,??_fputc+3
  5430  004FC4  5005               	movf	??_fputc^0,w,c
  5431  004FC6  2407               	addwf	(??_fputc+2)^0,w,c
  5432  004FC8  6ED9               	movwf	fsr2l,c
  5433  004FCA  5006               	movf	(??_fputc+1)^0,w,c
  5434  004FCC  2008               	addwfc	(??_fputc+3)^0,w,c
  5435  004FCE  6EDA               	movwf	fsr2h,c
  5436  004FD0  C001  FFDF         	movff	fputc@c,indf2
  5437  004FD4  EE20 F003          	lfsr	2,3
  5438  004FD8  5003               	movf	fputc@fp^0,w,c
  5439  004FDA  26D9               	addwf	fsr2l,f,c
  5440  004FDC  5004               	movf	(fputc@fp+1)^0,w,c
  5441  004FDE  22DA               	addwfc	fsr2h,f,c
  5442  004FE0  2ADE               	incf	postinc2,f,c
  5443  004FE2  0E00               	movlw	0
  5444  004FE4  22DD               	addwfc	postdec2,f,c
  5445  004FE6                     l1594:
  5446  004FE6  0012               	return		;funcret
  5447  004FE8                     __end_of_fputc:
  5448                           	callstack 0
  5449                           
  5450 ;; *************** function _putch *****************
  5451 ;; Defined at:
  5452 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  c               1    wreg     unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  c               1    0[COMRAM] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used: 1
  5472 ;; Hardware stack levels required when called: 1
  5473 ;; This function calls:
  5474 ;;		Nothing
  5475 ;; This function is called by:
  5476 ;;		_fputc
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           	psect	text18
  5481  005DAE                     __ptext18:
  5482                           	callstack 0
  5483  005DAE                     _putch:
  5484                           	callstack 23
  5485  005DAE  0012               	return		;funcret
  5486  005DB0                     __end_of_putch:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function _abs *****************
  5490 ;; Defined at:
  5491 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  a               2   18[COMRAM] int 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  2   18[COMRAM] int 
  5498 ;; Registers used:
  5499 ;;		wreg, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5505 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;Total ram usage:        4 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; Hardware stack levels required when called: 1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_dtoa
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text19
  5520  00592C                     __ptext19:
  5521                           	callstack 0
  5522  00592C                     _abs:
  5523                           	callstack 23
  5524  00592C  BE14               	btfsc	(abs@a+1)^0,7,c
  5525  00592E  EFA3  F02C         	goto	u3190
  5526  005932  5014               	movf	(abs@a+1)^0,w,c
  5527  005934  E106               	bnz	u3191
  5528  005936  0413               	decf	abs@a^0,w,c
  5529  005938  B0D8               	btfsc	status,0,c
  5530  00593A  EFA1  F02C         	goto	u3191
  5531  00593E  EFA3  F02C         	goto	u3190
  5532  005942                     u3191:
  5533  005942  EFB1  F02C         	goto	l1579
  5534  005946                     u3190:
  5535  005946  C013  F015         	movff	abs@a,??_abs
  5536  00594A  C014  F016         	movff	abs@a+1,??_abs+1
  5537  00594E  1E15               	comf	??_abs^0,f,c
  5538  005950  1E16               	comf	(??_abs+1)^0,f,c
  5539  005952  4A15               	infsnz	??_abs^0,f,c
  5540  005954  2A16               	incf	(??_abs+1)^0,f,c
  5541  005956  C015  F013         	movff	??_abs,?_abs
  5542  00595A  C016  F014         	movff	??_abs+1,?_abs+1
  5543  00595E  EFB5  F02C         	goto	l1582
  5544  005962                     l1579:
  5545  005962  C013  F013         	movff	abs@a,?_abs
  5546  005966  C014  F014         	movff	abs@a+1,?_abs+1
  5547  00596A                     l1582:
  5548  00596A  0012               	return		;funcret
  5549  00596C                     __end_of_abs:
  5550                           	callstack 0
  5551                           
  5552 ;; *************** function ___aomod *****************
  5553 ;; Defined at:
  5554 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5555 ;; Parameters:    Size  Location     Type
  5556 ;;  dividend        8    0[COMRAM] long long 
  5557 ;;  divisor         8    8[COMRAM] long long 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;  sign            1   17[COMRAM] unsigned char 
  5560 ;;  counter         1   16[COMRAM] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  8    0[COMRAM] long long 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5570 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5574 ;;Total ram usage:       18 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_dtoa
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           	psect	text20
  5585  0048CE                     __ptext20:
  5586                           	callstack 0
  5587  0048CE                     ___aomod:
  5588                           	callstack 23
  5589  0048CE  0E00               	movlw	0
  5590  0048D0  6E12               	movwf	___aomod@sign^0,c
  5591  0048D2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5592  0048D4  EF70  F024         	goto	u3090
  5593  0048D8  EF6E  F024         	goto	u3091
  5594  0048DC                     u3091:
  5595  0048DC  EF82  F024         	goto	l3746
  5596  0048E0                     u3090:
  5597  0048E0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5598  0048E2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5599  0048E4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5600  0048E6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5601  0048E8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5602  0048EA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5603  0048EC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5604  0048EE  6C01               	negf	___aomod@dividend^0,c
  5605  0048F0  0E00               	movlw	0
  5606  0048F2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5607  0048F4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5608  0048F6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5609  0048F8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5610  0048FA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5611  0048FC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5612  0048FE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5613  004900  0E01               	movlw	1
  5614  004902  6E12               	movwf	___aomod@sign^0,c
  5615  004904                     l3746:
  5616  004904  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5617  004906  EF89  F024         	goto	u3100
  5618  00490A  EF87  F024         	goto	u3101
  5619  00490E                     u3101:
  5620  00490E  EF99  F024         	goto	l3750
  5621  004912                     u3100:
  5622  004912  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5623  004914  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5624  004916  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5625  004918  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5626  00491A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5627  00491C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5628  00491E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5629  004920  6C09               	negf	___aomod@divisor^0,c
  5630  004922  0E00               	movlw	0
  5631  004924  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5632  004926  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5633  004928  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5634  00492A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5635  00492C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5636  00492E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5637  004930  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5638  004932                     l3750:
  5639  004932  5009               	movf	___aomod@divisor^0,w,c
  5640  004934  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5641  004936  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5642  004938  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5643  00493A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5644  00493C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5645  00493E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5646  004940  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5647  004942  B4D8               	btfsc	status,2,c
  5648  004944  EFA6  F024         	goto	u3111
  5649  004948  EFA8  F024         	goto	u3110
  5650  00494C                     u3111:
  5651  00494C  EFF0  F024         	goto	l3766
  5652  004950                     u3110:
  5653  004950  0E01               	movlw	1
  5654  004952  6E11               	movwf	___aomod@counter^0,c
  5655  004954  EFB6  F024         	goto	l3756
  5656  004958                     l3754:
  5657  004958  90D8               	bcf	status,0,c
  5658  00495A  3609               	rlcf	___aomod@divisor^0,f,c
  5659  00495C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5660  00495E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5661  004960  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5662  004962  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5663  004964  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5664  004966  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5665  004968  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5666  00496A  2A11               	incf	___aomod@counter^0,f,c
  5667  00496C                     l3756:
  5668  00496C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5669  00496E  EFBB  F024         	goto	u3121
  5670  004972  EFBD  F024         	goto	u3120
  5671  004976                     u3121:
  5672  004976  EFAC  F024         	goto	l3754
  5673  00497A                     u3120:
  5674  00497A                     l3758:
  5675  00497A  5009               	movf	___aomod@divisor^0,w,c
  5676  00497C  5C01               	subwf	___aomod@dividend^0,w,c
  5677  00497E  500A               	movf	(___aomod@divisor+1)^0,w,c
  5678  004980  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5679  004982  500B               	movf	(___aomod@divisor+2)^0,w,c
  5680  004984  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5681  004986  500C               	movf	(___aomod@divisor+3)^0,w,c
  5682  004988  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5683  00498A  500D               	movf	(___aomod@divisor+4)^0,w,c
  5684  00498C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5685  00498E  500E               	movf	(___aomod@divisor+5)^0,w,c
  5686  004990  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5687  004992  500F               	movf	(___aomod@divisor+6)^0,w,c
  5688  004994  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5689  004996  5010               	movf	(___aomod@divisor+7)^0,w,c
  5690  004998  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5691  00499A  A0D8               	btfss	status,0,c
  5692  00499C  EFD2  F024         	goto	u3131
  5693  0049A0  EFD4  F024         	goto	u3130
  5694  0049A4                     u3131:
  5695  0049A4  EFE4  F024         	goto	l3762
  5696  0049A8                     u3130:
  5697  0049A8  5009               	movf	___aomod@divisor^0,w,c
  5698  0049AA  5E01               	subwf	___aomod@dividend^0,f,c
  5699  0049AC  500A               	movf	(___aomod@divisor+1)^0,w,c
  5700  0049AE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5701  0049B0  500B               	movf	(___aomod@divisor+2)^0,w,c
  5702  0049B2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5703  0049B4  500C               	movf	(___aomod@divisor+3)^0,w,c
  5704  0049B6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5705  0049B8  500D               	movf	(___aomod@divisor+4)^0,w,c
  5706  0049BA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5707  0049BC  500E               	movf	(___aomod@divisor+5)^0,w,c
  5708  0049BE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5709  0049C0  500F               	movf	(___aomod@divisor+6)^0,w,c
  5710  0049C2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5711  0049C4  5010               	movf	(___aomod@divisor+7)^0,w,c
  5712  0049C6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5713  0049C8                     l3762:
  5714  0049C8  90D8               	bcf	status,0,c
  5715  0049CA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5716  0049CC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5717  0049CE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5718  0049D0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5719  0049D2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5720  0049D4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5721  0049D6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5722  0049D8  3209               	rrcf	___aomod@divisor^0,f,c
  5723  0049DA  2E11               	decfsz	___aomod@counter^0,f,c
  5724  0049DC  EFBD  F024         	goto	l3758
  5725  0049E0                     l3766:
  5726  0049E0  5012               	movf	___aomod@sign^0,w,c
  5727  0049E2  B4D8               	btfsc	status,2,c
  5728  0049E4  EFF6  F024         	goto	u3141
  5729  0049E8  EFF8  F024         	goto	u3140
  5730  0049EC                     u3141:
  5731  0049EC  EF08  F025         	goto	l3770
  5732  0049F0                     u3140:
  5733  0049F0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5734  0049F2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5735  0049F4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5736  0049F6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5737  0049F8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5738  0049FA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5739  0049FC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5740  0049FE  6C01               	negf	___aomod@dividend^0,c
  5741  004A00  0E00               	movlw	0
  5742  004A02  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5743  004A04  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5744  004A06  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5745  004A08  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5746  004A0A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5747  004A0C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5748  004A0E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5749  004A10                     l3770:
  5750  004A10  C001  F001         	movff	___aomod@dividend,?___aomod
  5751  004A14  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5752  004A18  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5753  004A1C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5754  004A20  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5755  004A24  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5756  004A28  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5757  004A2C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5758  004A30  0012               	return		;funcret
  5759  004A32                     __end_of___aomod:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function ___aodiv *****************
  5763 ;; Defined at:
  5764 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  dividend        8    0[COMRAM] long long 
  5767 ;;  divisor         8    8[COMRAM] long long 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  quotient        8   18[COMRAM] long long 
  5770 ;;  sign            1   17[COMRAM] unsigned char 
  5771 ;;  counter         1   16[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  8    0[COMRAM] long long 
  5774 ;; Registers used:
  5775 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5781 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;Total ram usage:       26 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; Hardware stack levels required when called: 1
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_dtoa
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text21
  5796  004746                     __ptext21:
  5797                           	callstack 0
  5798  004746                     ___aodiv:
  5799                           	callstack 23
  5800  004746  0E00               	movlw	0
  5801  004748  6E12               	movwf	___aodiv@sign^0,c
  5802  00474A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5803  00474C  EFAC  F023         	goto	u3020
  5804  004750  EFAA  F023         	goto	u3021
  5805  004754                     u3021:
  5806  004754  EFBE  F023         	goto	l3702
  5807  004758                     u3020:
  5808  004758  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5809  00475A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5810  00475C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5811  00475E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5812  004760  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5813  004762  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5814  004764  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5815  004766  6C09               	negf	___aodiv@divisor^0,c
  5816  004768  0E00               	movlw	0
  5817  00476A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5818  00476C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5819  00476E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5820  004770  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5821  004772  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5822  004774  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5823  004776  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5824  004778  0E01               	movlw	1
  5825  00477A  6E12               	movwf	___aodiv@sign^0,c
  5826  00477C                     l3702:
  5827  00477C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5828  00477E  EFC5  F023         	goto	u3030
  5829  004782  EFC3  F023         	goto	u3031
  5830  004786                     u3031:
  5831  004786  EFD7  F023         	goto	l3708
  5832  00478A                     u3030:
  5833  00478A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5834  00478C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5835  00478E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5836  004790  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5837  004792  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5838  004794  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5839  004796  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5840  004798  6C01               	negf	___aodiv@dividend^0,c
  5841  00479A  0E00               	movlw	0
  5842  00479C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5843  00479E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5844  0047A0  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5845  0047A2  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5846  0047A4  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5847  0047A6  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5848  0047A8  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5849  0047AA  0E01               	movlw	1
  5850  0047AC  1A12               	xorwf	___aodiv@sign^0,f,c
  5851  0047AE                     l3708:
  5852  0047AE  EE20  F013         	lfsr	2,___aodiv@quotient
  5853  0047B2  0E07               	movlw	7
  5854  0047B4                     u3041:
  5855  0047B4  6ADE               	clrf	postinc2,c
  5856  0047B6  06E8               	decf	wreg,f,c
  5857  0047B8  E2FD               	bc	u3041
  5858  0047BA  5009               	movf	___aodiv@divisor^0,w,c
  5859  0047BC  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5860  0047BE  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5861  0047C0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5862  0047C2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5863  0047C4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5864  0047C6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5865  0047C8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5866  0047CA  B4D8               	btfsc	status,2,c
  5867  0047CC  EFEA  F023         	goto	u3051
  5868  0047D0  EFEC  F023         	goto	u3050
  5869  0047D4                     u3051:
  5870  0047D4  EF3E  F024         	goto	l3730
  5871  0047D8                     u3050:
  5872  0047D8  0E01               	movlw	1
  5873  0047DA  6E11               	movwf	___aodiv@counter^0,c
  5874  0047DC  EFFA  F023         	goto	l3716
  5875  0047E0                     l3714:
  5876  0047E0  90D8               	bcf	status,0,c
  5877  0047E2  3609               	rlcf	___aodiv@divisor^0,f,c
  5878  0047E4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5879  0047E6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5880  0047E8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5881  0047EA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5882  0047EC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5883  0047EE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5884  0047F0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5885  0047F2  2A11               	incf	___aodiv@counter^0,f,c
  5886  0047F4                     l3716:
  5887  0047F4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5888  0047F6  EFFF  F023         	goto	u3061
  5889  0047FA  EF01  F024         	goto	u3060
  5890  0047FE                     u3061:
  5891  0047FE  EFF0  F023         	goto	l3714
  5892  004802                     u3060:
  5893  004802                     l3718:
  5894  004802  90D8               	bcf	status,0,c
  5895  004804  3613               	rlcf	___aodiv@quotient^0,f,c
  5896  004806  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5897  004808  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5898  00480A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5899  00480C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5900  00480E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5901  004810  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5902  004812  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5903  004814  5009               	movf	___aodiv@divisor^0,w,c
  5904  004816  5C01               	subwf	___aodiv@dividend^0,w,c
  5905  004818  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5906  00481A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5907  00481C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5908  00481E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5909  004820  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5910  004822  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5911  004824  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5912  004826  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5913  004828  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5914  00482A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5915  00482C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5916  00482E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5917  004830  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5918  004832  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5919  004834  A0D8               	btfss	status,0,c
  5920  004836  EF1F  F024         	goto	u3071
  5921  00483A  EF21  F024         	goto	u3070
  5922  00483E                     u3071:
  5923  00483E  EF32  F024         	goto	l3726
  5924  004842                     u3070:
  5925  004842  5009               	movf	___aodiv@divisor^0,w,c
  5926  004844  5E01               	subwf	___aodiv@dividend^0,f,c
  5927  004846  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5928  004848  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5929  00484A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5930  00484C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5931  00484E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5932  004850  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5933  004852  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5934  004854  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5935  004856  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5936  004858  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5937  00485A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5938  00485C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5939  00485E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5940  004860  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5941  004862  8013               	bsf	___aodiv@quotient^0,0,c
  5942  004864                     l3726:
  5943  004864  90D8               	bcf	status,0,c
  5944  004866  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5945  004868  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5946  00486A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5947  00486C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5948  00486E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5949  004870  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5950  004872  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5951  004874  3209               	rrcf	___aodiv@divisor^0,f,c
  5952  004876  2E11               	decfsz	___aodiv@counter^0,f,c
  5953  004878  EF01  F024         	goto	l3718
  5954  00487C                     l3730:
  5955  00487C  5012               	movf	___aodiv@sign^0,w,c
  5956  00487E  B4D8               	btfsc	status,2,c
  5957  004880  EF44  F024         	goto	u3081
  5958  004884  EF46  F024         	goto	u3080
  5959  004888                     u3081:
  5960  004888  EF56  F024         	goto	l3734
  5961  00488C                     u3080:
  5962  00488C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5963  00488E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5964  004890  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5965  004892  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5966  004894  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5967  004896  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5968  004898  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5969  00489A  6C13               	negf	___aodiv@quotient^0,c
  5970  00489C  0E00               	movlw	0
  5971  00489E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5972  0048A0  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5973  0048A2  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5974  0048A4  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5975  0048A6  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5976  0048A8  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5977  0048AA  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5978  0048AC                     l3734:
  5979  0048AC  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5980  0048B0  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5981  0048B4  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5982  0048B8  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5983  0048BC  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5984  0048C0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5985  0048C4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5986  0048C8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5987  0048CC  0012               	return		;funcret
  5988  0048CE                     __end_of___aodiv:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _sendStringSerial4 *****************
  5992 ;; Defined at:
  5993 ;;		line 36 in file "serial.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  string          2    1[COMRAM] PTR unsigned char 
  5996 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;Total ram usage:        2 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 2
  6015 ;; This function calls:
  6016 ;;		_sendCharSerial4
  6017 ;; This function is called by:
  6018 ;;		_color_display
  6019 ;;		_color_predict
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text22
  6024  005B42                     __ptext22:
  6025                           	callstack 0
  6026  005B42                     _sendStringSerial4:
  6027                           	callstack 26
  6028  005B42                     
  6029                           ;serial.c: 38:     while(*string != 0){
  6030  005B42  EFAC  F02D         	goto	l4446
  6031  005B46                     l4442:
  6032                           
  6033                           ;serial.c: 39:   sendCharSerial4(*string++);}
  6034  005B46  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6035  005B4A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6036  005B4E  50DF               	movf	indf2,w,c
  6037  005B50  EC9A  F02E         	call	_sendCharSerial4
  6038  005B54  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6039  005B56  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6040  005B58                     l4446:
  6041                           
  6042                           ;serial.c: 38:     while(*string != 0){
  6043  005B58  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6044  005B5C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6045  005B60  50DF               	movf	indf2,w,c
  6046  005B62  A4D8               	btfss	status,2,c
  6047  005B64  EFB6  F02D         	goto	u4231
  6048  005B68  EFB8  F02D         	goto	u4230
  6049  005B6C                     u4231:
  6050  005B6C  EFA3  F02D         	goto	l4442
  6051  005B70                     u4230:
  6052  005B70  0012               	return		;funcret
  6053  005B72                     __end_of_sendStringSerial4:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _sendCharSerial4 *****************
  6057 ;; Defined at:
  6058 ;;		line 29 in file "serial.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  charToSend      1    wreg     unsigned char 
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;  charToSend      1    0[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;Total ram usage:        1 bytes
  6077 ;; Hardware stack levels used: 1
  6078 ;; Hardware stack levels required when called: 1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_sendStringSerial4
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text23
  6087  005D34                     __ptext23:
  6088                           	callstack 0
  6089  005D34                     _sendCharSerial4:
  6090                           	callstack 26
  6091                           
  6092                           ;incstack = 0
  6093                           ;sendCharSerial4@charToSend stored from wreg
  6094  005D34  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6095  005D36                     l418:
  6096  005D36  010E               	movlb	14	; () banked
  6097  005D38  A537               	btfss	55,2,b	;volatile
  6098  005D3A  EFA1  F02E         	goto	u3961
  6099  005D3E  EFA3  F02E         	goto	u3960
  6100  005D42                     u3961:
  6101  005D42  EF9B  F02E         	goto	l418
  6102  005D46                     u3960:
  6103  005D46                     
  6104                           ; BSR set to: 14
  6105                           ;serial.c: 31:     TX4REG = charToSend;
  6106  005D46  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6107  005D4A                     
  6108                           ; BSR set to: 14
  6109  005D4A  0012               	return		;funcret
  6110  005D4C                     __end_of_sendCharSerial4:
  6111                           	callstack 0
  6112                           
  6113 ;; *************** function _calibrate_white *****************
  6114 ;; Defined at:
  6115 ;;		line 258 in file "color.c"
  6116 ;; Parameters:    Size  Location     Type
  6117 ;;  w               2   11[COMRAM] PTR struct white_card
  6118 ;;		 -> main@white(28), 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;		None
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  1    wreg      void 
  6123 ;; Registers used:
  6124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;Total ram usage:        4 bytes
  6135 ;; Hardware stack levels used: 1
  6136 ;; Hardware stack levels required when called: 4
  6137 ;; This function calls:
  6138 ;;		_LED_B
  6139 ;;		_LED_C
  6140 ;;		_LED_G
  6141 ;;		_LED_OFF
  6142 ;;		_LED_R
  6143 ;;		_color_read_Blue
  6144 ;;		_color_read_Clear
  6145 ;;		_color_read_Green
  6146 ;;		_color_read_Red
  6147 ;;		_toggle_light
  6148 ;; This function is called by:
  6149 ;;		_main
  6150 ;;		_test_function
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text24
  6155  00380A                     __ptext24:
  6156                           	callstack 0
  6157  00380A                     _calibrate_white:
  6158                           	callstack 25
  6159  00380A                     
  6160                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  6161  00380A  EC1C  F02E         	call	_LED_OFF	;wreg free
  6162  00380E                     
  6163                           ;color.c: 261:     toggle_light(1,2);
  6164  00380E  0E02               	movlw	2
  6165  003810  6E01               	movwf	toggle_light@toggletime^0,c
  6166  003812  0E01               	movlw	1
  6167  003814  ECAF  F01A         	call	_toggle_light
  6168  003818                     
  6169                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6170  003818  0E29               	movlw	41
  6171  00381A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6172  00381C  0E96               	movlw	150
  6173  00381E  6E0E               	movwf	??_calibrate_white^0,c
  6174  003820  0E7F               	movlw	127
  6175  003822                     u6067:
  6176  003822  2EE8               	decfsz	wreg,f,c
  6177  003824  D7FE               	bra	u6067
  6178  003826  2E0E               	decfsz	??_calibrate_white^0,f,c
  6179  003828  D7FC               	bra	u6067
  6180  00382A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6181  00382C  D7FA               	bra	u6067
  6182  00382E  F000               	nop	
  6183  003830                     
  6184                           ;color.c: 264:     LED_R();
  6185  003830  EC0C  F02E         	call	_LED_R	;wreg free
  6186  003834                     
  6187                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6188  003834  0E09               	movlw	9
  6189  003836  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6190  003838  0E1E               	movlw	30
  6191  00383A  6E0E               	movwf	??_calibrate_white^0,c
  6192  00383C  0EE4               	movlw	228
  6193  00383E                     u6077:
  6194  00383E  2EE8               	decfsz	wreg,f,c
  6195  003840  D7FE               	bra	u6077
  6196  003842  2E0E               	decfsz	??_calibrate_white^0,f,c
  6197  003844  D7FC               	bra	u6077
  6198  003846  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6199  003848  D7FA               	bra	u6077
  6200  00384A  D000               	nop2	
  6201  00384C                     
  6202                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  6203  00384C  EC4E  F02B         	call	_color_read_Red	;wreg free
  6204  003850  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  6205  003854  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  6206  003858  C005  FFDE         	movff	?_color_read_Red,postinc2
  6207  00385C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6208  003860  EC76  F02B         	call	_color_read_Green	;wreg free
  6209  003864  EE20 F002          	lfsr	2,2
  6210  003868  500C               	movf	calibrate_white@w^0,w,c
  6211  00386A  26D9               	addwf	fsr2l,f,c
  6212  00386C  500D               	movf	(calibrate_white@w+1)^0,w,c
  6213  00386E  22DA               	addwfc	fsr2h,f,c
  6214  003870  C005  FFDE         	movff	?_color_read_Green,postinc2
  6215  003874  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6216  003878  EC9E  F02B         	call	_color_read_Blue	;wreg free
  6217  00387C  EE20 F004          	lfsr	2,4
  6218  003880  500C               	movf	calibrate_white@w^0,w,c
  6219  003882  26D9               	addwf	fsr2l,f,c
  6220  003884  500D               	movf	(calibrate_white@w+1)^0,w,c
  6221  003886  22DA               	addwfc	fsr2h,f,c
  6222  003888  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6223  00388C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6224  003890                     
  6225                           ;color.c: 269:     LED_G();
  6226  003890  EC2C  F02E         	call	_LED_G	;wreg free
  6227  003894                     
  6228                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6229  003894  0E09               	movlw	9
  6230  003896  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6231  003898  0E1E               	movlw	30
  6232  00389A  6E0E               	movwf	??_calibrate_white^0,c
  6233  00389C  0EE4               	movlw	228
  6234  00389E                     u6087:
  6235  00389E  2EE8               	decfsz	wreg,f,c
  6236  0038A0  D7FE               	bra	u6087
  6237  0038A2  2E0E               	decfsz	??_calibrate_white^0,f,c
  6238  0038A4  D7FC               	bra	u6087
  6239  0038A6  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6240  0038A8  D7FA               	bra	u6087
  6241  0038AA  D000               	nop2	
  6242  0038AC                     
  6243                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  6244  0038AC  EC4E  F02B         	call	_color_read_Red	;wreg free
  6245  0038B0  EE20 F006          	lfsr	2,6
  6246  0038B4  500C               	movf	calibrate_white@w^0,w,c
  6247  0038B6  26D9               	addwf	fsr2l,f,c
  6248  0038B8  500D               	movf	(calibrate_white@w+1)^0,w,c
  6249  0038BA  22DA               	addwfc	fsr2h,f,c
  6250  0038BC  C005  FFDE         	movff	?_color_read_Red,postinc2
  6251  0038C0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6252  0038C4  EC76  F02B         	call	_color_read_Green	;wreg free
  6253  0038C8  EE20 F008          	lfsr	2,8
  6254  0038CC  500C               	movf	calibrate_white@w^0,w,c
  6255  0038CE  26D9               	addwf	fsr2l,f,c
  6256  0038D0  500D               	movf	(calibrate_white@w+1)^0,w,c
  6257  0038D2  22DA               	addwfc	fsr2h,f,c
  6258  0038D4  C005  FFDE         	movff	?_color_read_Green,postinc2
  6259  0038D8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6260  0038DC  EC9E  F02B         	call	_color_read_Blue	;wreg free
  6261  0038E0  EE20 F00A          	lfsr	2,10
  6262  0038E4  500C               	movf	calibrate_white@w^0,w,c
  6263  0038E6  26D9               	addwf	fsr2l,f,c
  6264  0038E8  500D               	movf	(calibrate_white@w+1)^0,w,c
  6265  0038EA  22DA               	addwfc	fsr2h,f,c
  6266  0038EC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6267  0038F0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6268  0038F4                     
  6269                           ;color.c: 275:     LED_B();
  6270  0038F4  EC3C  F02E         	call	_LED_B	;wreg free
  6271  0038F8                     
  6272                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6273  0038F8  0E09               	movlw	9
  6274  0038FA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6275  0038FC  0E1E               	movlw	30
  6276  0038FE  6E0E               	movwf	??_calibrate_white^0,c
  6277  003900  0EE4               	movlw	228
  6278  003902                     u6097:
  6279  003902  2EE8               	decfsz	wreg,f,c
  6280  003904  D7FE               	bra	u6097
  6281  003906  2E0E               	decfsz	??_calibrate_white^0,f,c
  6282  003908  D7FC               	bra	u6097
  6283  00390A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6284  00390C  D7FA               	bra	u6097
  6285  00390E  D000               	nop2	
  6286  003910                     
  6287                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  6288  003910  EC4E  F02B         	call	_color_read_Red	;wreg free
  6289  003914  EE20 F00C          	lfsr	2,12
  6290  003918  500C               	movf	calibrate_white@w^0,w,c
  6291  00391A  26D9               	addwf	fsr2l,f,c
  6292  00391C  500D               	movf	(calibrate_white@w+1)^0,w,c
  6293  00391E  22DA               	addwfc	fsr2h,f,c
  6294  003920  C005  FFDE         	movff	?_color_read_Red,postinc2
  6295  003924  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6296  003928  EC76  F02B         	call	_color_read_Green	;wreg free
  6297  00392C  EE20 F00E          	lfsr	2,14
  6298  003930  500C               	movf	calibrate_white@w^0,w,c
  6299  003932  26D9               	addwf	fsr2l,f,c
  6300  003934  500D               	movf	(calibrate_white@w+1)^0,w,c
  6301  003936  22DA               	addwfc	fsr2h,f,c
  6302  003938  C005  FFDE         	movff	?_color_read_Green,postinc2
  6303  00393C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6304  003940  EC9E  F02B         	call	_color_read_Blue	;wreg free
  6305  003944  EE20 F010          	lfsr	2,16
  6306  003948  500C               	movf	calibrate_white@w^0,w,c
  6307  00394A  26D9               	addwf	fsr2l,f,c
  6308  00394C  500D               	movf	(calibrate_white@w+1)^0,w,c
  6309  00394E  22DA               	addwfc	fsr2h,f,c
  6310  003950  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6311  003954  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6312  003958  ECC6  F02B         	call	_color_read_Clear	;wreg free
  6313  00395C  EE20 F01A          	lfsr	2,26
  6314  003960  500C               	movf	calibrate_white@w^0,w,c
  6315  003962  26D9               	addwf	fsr2l,f,c
  6316  003964  500D               	movf	(calibrate_white@w+1)^0,w,c
  6317  003966  22DA               	addwfc	fsr2h,f,c
  6318  003968  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6319  00396C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6320  003970                     
  6321                           ;color.c: 280:     LED_C();
  6322  003970  EC4C  F02E         	call	_LED_C	;wreg free
  6323  003974                     
  6324                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6325  003974  0E09               	movlw	9
  6326  003976  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6327  003978  0E1E               	movlw	30
  6328  00397A  6E0E               	movwf	??_calibrate_white^0,c
  6329  00397C  0EE4               	movlw	228
  6330  00397E                     u6107:
  6331  00397E  2EE8               	decfsz	wreg,f,c
  6332  003980  D7FE               	bra	u6107
  6333  003982  2E0E               	decfsz	??_calibrate_white^0,f,c
  6334  003984  D7FC               	bra	u6107
  6335  003986  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6336  003988  D7FA               	bra	u6107
  6337  00398A  D000               	nop2	
  6338  00398C                     
  6339                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  6340  00398C  EC4E  F02B         	call	_color_read_Red	;wreg free
  6341  003990  EE20 F012          	lfsr	2,18
  6342  003994  500C               	movf	calibrate_white@w^0,w,c
  6343  003996  26D9               	addwf	fsr2l,f,c
  6344  003998  500D               	movf	(calibrate_white@w+1)^0,w,c
  6345  00399A  22DA               	addwfc	fsr2h,f,c
  6346  00399C  C005  FFDE         	movff	?_color_read_Red,postinc2
  6347  0039A0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6348  0039A4  EC76  F02B         	call	_color_read_Green	;wreg free
  6349  0039A8  EE20 F014          	lfsr	2,20
  6350  0039AC  500C               	movf	calibrate_white@w^0,w,c
  6351  0039AE  26D9               	addwf	fsr2l,f,c
  6352  0039B0  500D               	movf	(calibrate_white@w+1)^0,w,c
  6353  0039B2  22DA               	addwfc	fsr2h,f,c
  6354  0039B4  C005  FFDE         	movff	?_color_read_Green,postinc2
  6355  0039B8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6356  0039BC  EC9E  F02B         	call	_color_read_Blue	;wreg free
  6357  0039C0  EE20 F016          	lfsr	2,22
  6358  0039C4  500C               	movf	calibrate_white@w^0,w,c
  6359  0039C6  26D9               	addwf	fsr2l,f,c
  6360  0039C8  500D               	movf	(calibrate_white@w+1)^0,w,c
  6361  0039CA  22DA               	addwfc	fsr2h,f,c
  6362  0039CC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6363  0039D0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6364  0039D4  ECC6  F02B         	call	_color_read_Clear	;wreg free
  6365  0039D8  EE20 F018          	lfsr	2,24
  6366  0039DC  500C               	movf	calibrate_white@w^0,w,c
  6367  0039DE  26D9               	addwf	fsr2l,f,c
  6368  0039E0  500D               	movf	(calibrate_white@w+1)^0,w,c
  6369  0039E2  22DA               	addwfc	fsr2h,f,c
  6370  0039E4  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6371  0039E8  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6372  0039EC                     
  6373                           ;color.c: 284:     LED_OFF();
  6374  0039EC  EC1C  F02E         	call	_LED_OFF	;wreg free
  6375  0039F0                     
  6376                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6377  0039F0  0E29               	movlw	41
  6378  0039F2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6379  0039F4  0E96               	movlw	150
  6380  0039F6  6E0E               	movwf	??_calibrate_white^0,c
  6381  0039F8  0E7F               	movlw	127
  6382  0039FA                     u6117:
  6383  0039FA  2EE8               	decfsz	wreg,f,c
  6384  0039FC  D7FE               	bra	u6117
  6385  0039FE  2E0E               	decfsz	??_calibrate_white^0,f,c
  6386  003A00  D7FC               	bra	u6117
  6387  003A02  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6388  003A04  D7FA               	bra	u6117
  6389  003A06  F000               	nop	
  6390                           
  6391                           ;color.c: 286:     toggle_light(1,2);
  6392  003A08  0E02               	movlw	2
  6393  003A0A  6E01               	movwf	toggle_light@toggletime^0,c
  6394  003A0C  0E01               	movlw	1
  6395  003A0E  ECAF  F01A         	call	_toggle_light
  6396  003A12  0012               	return		;funcret
  6397  003A14                     __end_of_calibrate_white:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _color_read_Red *****************
  6401 ;; Defined at:
  6402 ;;		line 91 in file "color.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;  tmp             2    9[COMRAM] unsigned int 
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  2    4[COMRAM] unsigned int 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2, status,0, cstack
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;Total ram usage:        7 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 3
  6423 ;; This function calls:
  6424 ;;		_I2C_2_Master_Read
  6425 ;;		_I2C_2_Master_RepStart
  6426 ;;		_I2C_2_Master_Start
  6427 ;;		_I2C_2_Master_Stop
  6428 ;;		_I2C_2_Master_Write
  6429 ;; This function is called by:
  6430 ;;		_read_color
  6431 ;;		_calibrate_white
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text25
  6436  00569C                     __ptext25:
  6437                           	callstack 0
  6438  00569C                     _color_read_Red:
  6439                           	callstack 24
  6440  00569C                     
  6441                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6442  00569C  ECD1  F02E         	call	_I2C_2_Master_Start	;wreg free
  6443                           
  6444                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6445  0056A0  0E52               	movlw	82
  6446  0056A2  ECBB  F02E         	call	_I2C_2_Master_Write
  6447                           
  6448                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  6449  0056A6  0EB6               	movlw	182
  6450  0056A8  ECBB  F02E         	call	_I2C_2_Master_Write
  6451                           
  6452                           ;color.c: 97:  I2C_2_Master_RepStart();
  6453  0056AC  ECC7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6454                           
  6455                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6456  0056B0  0E53               	movlw	83
  6457  0056B2  ECBB  F02E         	call	_I2C_2_Master_Write
  6458                           
  6459                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6460  0056B6  0E01               	movlw	1
  6461  0056B8  EC33  F02C         	call	_I2C_2_Master_Read
  6462  0056BC  6E07               	movwf	??_color_read_Red^0,c
  6463  0056BE  5007               	movf	??_color_read_Red^0,w,c
  6464  0056C0  6E0A               	movwf	color_read_Red@tmp^0,c
  6465  0056C2  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6466                           
  6467                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6468  0056C4  0E00               	movlw	0
  6469  0056C6  EC33  F02C         	call	_I2C_2_Master_Read
  6470  0056CA  6E07               	movwf	??_color_read_Red^0,c
  6471  0056CC  5007               	movf	??_color_read_Red^0,w,c
  6472  0056CE  6E09               	movwf	(??_color_read_Red+2)^0,c
  6473  0056D0  6A08               	clrf	(??_color_read_Red+1)^0,c
  6474  0056D2  500A               	movf	color_read_Red@tmp^0,w,c
  6475  0056D4  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6476  0056D6  6E0A               	movwf	color_read_Red@tmp^0,c
  6477  0056D8  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6478  0056DA  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6479  0056DC  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6480                           
  6481                           ;color.c: 101:  I2C_2_Master_Stop();
  6482  0056DE  ECCC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6483  0056E2                     
  6484                           ;color.c: 102:  return tmp;
  6485  0056E2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6486  0056E6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6487  0056EA  0012               	return		;funcret
  6488  0056EC                     __end_of_color_read_Red:
  6489                           	callstack 0
  6490                           
  6491 ;; *************** function _color_read_Green *****************
  6492 ;; Defined at:
  6493 ;;		line 119 in file "color.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  tmp             2    9[COMRAM] unsigned int 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    4[COMRAM] unsigned int 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;Total ram usage:        7 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 3
  6514 ;; This function calls:
  6515 ;;		_I2C_2_Master_Read
  6516 ;;		_I2C_2_Master_RepStart
  6517 ;;		_I2C_2_Master_Start
  6518 ;;		_I2C_2_Master_Stop
  6519 ;;		_I2C_2_Master_Write
  6520 ;; This function is called by:
  6521 ;;		_read_color
  6522 ;;		_calibrate_white
  6523 ;;		_distance_measure
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text26
  6528  0056EC                     __ptext26:
  6529                           	callstack 0
  6530  0056EC                     _color_read_Green:
  6531                           	callstack 24
  6532  0056EC                     
  6533                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  6534  0056EC  ECD1  F02E         	call	_I2C_2_Master_Start	;wreg free
  6535                           
  6536                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  6537  0056F0  0E52               	movlw	82
  6538  0056F2  ECBB  F02E         	call	_I2C_2_Master_Write
  6539                           
  6540                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  6541  0056F6  0EB8               	movlw	184
  6542  0056F8  ECBB  F02E         	call	_I2C_2_Master_Write
  6543                           
  6544                           ;color.c: 125:  I2C_2_Master_RepStart();
  6545  0056FC  ECC7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6546                           
  6547                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  6548  005700  0E53               	movlw	83
  6549  005702  ECBB  F02E         	call	_I2C_2_Master_Write
  6550                           
  6551                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  6552  005706  0E01               	movlw	1
  6553  005708  EC33  F02C         	call	_I2C_2_Master_Read
  6554  00570C  6E07               	movwf	??_color_read_Green^0,c
  6555  00570E  5007               	movf	??_color_read_Green^0,w,c
  6556  005710  6E0A               	movwf	color_read_Green@tmp^0,c
  6557  005712  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6558                           
  6559                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6560  005714  0E00               	movlw	0
  6561  005716  EC33  F02C         	call	_I2C_2_Master_Read
  6562  00571A  6E07               	movwf	??_color_read_Green^0,c
  6563  00571C  5007               	movf	??_color_read_Green^0,w,c
  6564  00571E  6E09               	movwf	(??_color_read_Green+2)^0,c
  6565  005720  6A08               	clrf	(??_color_read_Green+1)^0,c
  6566  005722  500A               	movf	color_read_Green@tmp^0,w,c
  6567  005724  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6568  005726  6E0A               	movwf	color_read_Green@tmp^0,c
  6569  005728  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6570  00572A  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6571  00572C  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6572                           
  6573                           ;color.c: 129:  I2C_2_Master_Stop();
  6574  00572E  ECCC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6575  005732                     
  6576                           ;color.c: 130:  return tmp;
  6577  005732  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6578  005736  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6579  00573A  0012               	return		;funcret
  6580  00573C                     __end_of_color_read_Green:
  6581                           	callstack 0
  6582                           
  6583 ;; *************** function _color_read_Blue *****************
  6584 ;; Defined at:
  6585 ;;		line 105 in file "color.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;  tmp             2    9[COMRAM] unsigned int 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  2    4[COMRAM] unsigned int 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0, cstack
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6601 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6602 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6603 ;;Total ram usage:        7 bytes
  6604 ;; Hardware stack levels used: 1
  6605 ;; Hardware stack levels required when called: 3
  6606 ;; This function calls:
  6607 ;;		_I2C_2_Master_Read
  6608 ;;		_I2C_2_Master_RepStart
  6609 ;;		_I2C_2_Master_Start
  6610 ;;		_I2C_2_Master_Stop
  6611 ;;		_I2C_2_Master_Write
  6612 ;; This function is called by:
  6613 ;;		_read_color
  6614 ;;		_calibrate_white
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text27
  6619  00573C                     __ptext27:
  6620                           	callstack 0
  6621  00573C                     _color_read_Blue:
  6622                           	callstack 24
  6623  00573C                     
  6624                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  6625  00573C  ECD1  F02E         	call	_I2C_2_Master_Start	;wreg free
  6626                           
  6627                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  6628  005740  0E52               	movlw	82
  6629  005742  ECBB  F02E         	call	_I2C_2_Master_Write
  6630                           
  6631                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  6632  005746  0EBA               	movlw	186
  6633  005748  ECBB  F02E         	call	_I2C_2_Master_Write
  6634                           
  6635                           ;color.c: 111:  I2C_2_Master_RepStart();
  6636  00574C  ECC7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6637                           
  6638                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  6639  005750  0E53               	movlw	83
  6640  005752  ECBB  F02E         	call	_I2C_2_Master_Write
  6641                           
  6642                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  6643  005756  0E01               	movlw	1
  6644  005758  EC33  F02C         	call	_I2C_2_Master_Read
  6645  00575C  6E07               	movwf	??_color_read_Blue^0,c
  6646  00575E  5007               	movf	??_color_read_Blue^0,w,c
  6647  005760  6E0A               	movwf	color_read_Blue@tmp^0,c
  6648  005762  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6649                           
  6650                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6651  005764  0E00               	movlw	0
  6652  005766  EC33  F02C         	call	_I2C_2_Master_Read
  6653  00576A  6E07               	movwf	??_color_read_Blue^0,c
  6654  00576C  5007               	movf	??_color_read_Blue^0,w,c
  6655  00576E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6656  005770  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6657  005772  500A               	movf	color_read_Blue@tmp^0,w,c
  6658  005774  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6659  005776  6E0A               	movwf	color_read_Blue@tmp^0,c
  6660  005778  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6661  00577A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6662  00577C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6663                           
  6664                           ;color.c: 115:  I2C_2_Master_Stop();
  6665  00577E  ECCC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6666  005782                     
  6667                           ;color.c: 116:  return tmp;
  6668  005782  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6669  005786  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6670  00578A  0012               	return		;funcret
  6671  00578C                     __end_of_color_read_Blue:
  6672                           	callstack 0
  6673                           
  6674 ;; *************** function _LED_R *****************
  6675 ;; Defined at:
  6676 ;;		line 164 in file "color.c"
  6677 ;; Parameters:    Size  Location     Type
  6678 ;;		None
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;		None
  6681 ;; Return value:  Size  Location     Type
  6682 ;;                  1    wreg      void 
  6683 ;; Registers used:
  6684 ;;		wreg
  6685 ;; Tracked objects:
  6686 ;;		On entry : 0/0
  6687 ;;		On exit  : 0/0
  6688 ;;		Unchanged: 0/0
  6689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6694 ;;Total ram usage:        2 bytes
  6695 ;; Hardware stack levels used: 1
  6696 ;; Hardware stack levels required when called: 1
  6697 ;; This function calls:
  6698 ;;		Nothing
  6699 ;; This function is called by:
  6700 ;;		_color_data_collection
  6701 ;;		_calibrate_white
  6702 ;;		_detect_color
  6703 ;; This function uses a non-reentrant model
  6704 ;;
  6705                           
  6706                           	psect	text28
  6707  005C18                     __ptext28:
  6708                           	callstack 0
  6709  005C18                     _LED_R:
  6710                           	callstack 27
  6711  005C18                     
  6712                           ;color.c: 166:     LATGbits.LATG1 = 1;
  6713  005C18  827F               	bsf	127,1,c	;volatile
  6714                           
  6715                           ;color.c: 167:     LATFbits.LATF7 = 0;
  6716  005C1A  9E7E               	bcf	126,7,c	;volatile
  6717                           
  6718                           ;color.c: 168:     LATAbits.LATA4 = 0;
  6719  005C1C  9879               	bcf	121,4,c	;volatile
  6720  005C1E                     
  6721                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6722  005C1E  0E11               	movlw	17
  6723  005C20  6E02               	movwf	(??_LED_R+1)^0,c
  6724  005C22  0E3C               	movlw	60
  6725  005C24  6E01               	movwf	??_LED_R^0,c
  6726  005C26  0ECB               	movlw	203
  6727  005C28                     u6127:
  6728  005C28  2EE8               	decfsz	wreg,f,c
  6729  005C2A  D7FE               	bra	u6127
  6730  005C2C  2E01               	decfsz	??_LED_R^0,f,c
  6731  005C2E  D7FC               	bra	u6127
  6732  005C30  2E02               	decfsz	(??_LED_R+1)^0,f,c
  6733  005C32  D7FA               	bra	u6127
  6734  005C34  F000               	nop	
  6735  005C36  0012               	return		;funcret
  6736  005C38                     __end_of_LED_R:
  6737                           	callstack 0
  6738                           
  6739 ;; *************** function _LED_OFF *****************
  6740 ;; Defined at:
  6741 ;;		line 155 in file "color.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;		None
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      void 
  6748 ;; Registers used:
  6749 ;;		wreg
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;Total ram usage:        2 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; Hardware stack levels required when called: 1
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_calibrate_white
  6766 ;;		_main
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           	psect	text29
  6771  005C38                     __ptext29:
  6772                           	callstack 0
  6773  005C38                     _LED_OFF:
  6774                           	callstack 27
  6775  005C38                     
  6776                           ;color.c: 157:     LATGbits.LATG1 = 0;
  6777  005C38  927F               	bcf	127,1,c	;volatile
  6778                           
  6779                           ;color.c: 158:     LATFbits.LATF7 = 0;
  6780  005C3A  9E7E               	bcf	126,7,c	;volatile
  6781                           
  6782                           ;color.c: 159:     LATAbits.LATA4 = 0;
  6783  005C3C  9879               	bcf	121,4,c	;volatile
  6784  005C3E                     
  6785                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6786  005C3E  0E11               	movlw	17
  6787  005C40  6E02               	movwf	(??_LED_OFF+1)^0,c
  6788  005C42  0E3C               	movlw	60
  6789  005C44  6E01               	movwf	??_LED_OFF^0,c
  6790  005C46  0ECB               	movlw	203
  6791  005C48                     u6137:
  6792  005C48  2EE8               	decfsz	wreg,f,c
  6793  005C4A  D7FE               	bra	u6137
  6794  005C4C  2E01               	decfsz	??_LED_OFF^0,f,c
  6795  005C4E  D7FC               	bra	u6137
  6796  005C50  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  6797  005C52  D7FA               	bra	u6137
  6798  005C54  F000               	nop	
  6799  005C56  0012               	return		;funcret
  6800  005C58                     __end_of_LED_OFF:
  6801                           	callstack 0
  6802                           
  6803 ;; *************** function _LED_G *****************
  6804 ;; Defined at:
  6805 ;;		line 191 in file "color.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;		None
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  1    wreg      void 
  6812 ;; Registers used:
  6813 ;;		wreg
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;Total ram usage:        2 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; Hardware stack levels required when called: 1
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_color_data_collection
  6830 ;;		_calibrate_white
  6831 ;;		_detect_color
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text30
  6836  005C58                     __ptext30:
  6837                           	callstack 0
  6838  005C58                     _LED_G:
  6839                           	callstack 27
  6840  005C58                     
  6841                           ;color.c: 193:     LATGbits.LATG1 = 0;
  6842  005C58  927F               	bcf	127,1,c	;volatile
  6843                           
  6844                           ;color.c: 194:     LATFbits.LATF7 = 0;
  6845  005C5A  9E7E               	bcf	126,7,c	;volatile
  6846                           
  6847                           ;color.c: 195:     LATAbits.LATA4 = 1;
  6848  005C5C  8879               	bsf	121,4,c	;volatile
  6849  005C5E                     
  6850                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6851  005C5E  0E11               	movlw	17
  6852  005C60  6E02               	movwf	(??_LED_G+1)^0,c
  6853  005C62  0E3C               	movlw	60
  6854  005C64  6E01               	movwf	??_LED_G^0,c
  6855  005C66  0ECB               	movlw	203
  6856  005C68                     u6147:
  6857  005C68  2EE8               	decfsz	wreg,f,c
  6858  005C6A  D7FE               	bra	u6147
  6859  005C6C  2E01               	decfsz	??_LED_G^0,f,c
  6860  005C6E  D7FC               	bra	u6147
  6861  005C70  2E02               	decfsz	(??_LED_G+1)^0,f,c
  6862  005C72  D7FA               	bra	u6147
  6863  005C74  F000               	nop	
  6864  005C76  0012               	return		;funcret
  6865  005C78                     __end_of_LED_G:
  6866                           	callstack 0
  6867                           
  6868 ;; *************** function _LED_B *****************
  6869 ;; Defined at:
  6870 ;;		line 182 in file "color.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;		None
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		wreg
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;Total ram usage:        2 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; Hardware stack levels required when called: 1
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_color_data_collection
  6895 ;;		_calibrate_white
  6896 ;;		_detect_color
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900                           	psect	text31
  6901  005C78                     __ptext31:
  6902                           	callstack 0
  6903  005C78                     _LED_B:
  6904                           	callstack 27
  6905  005C78                     
  6906                           ;color.c: 184:     LATGbits.LATG1 = 0;
  6907  005C78  927F               	bcf	127,1,c	;volatile
  6908                           
  6909                           ;color.c: 185:     LATFbits.LATF7 = 1;
  6910  005C7A  8E7E               	bsf	126,7,c	;volatile
  6911                           
  6912                           ;color.c: 186:     LATAbits.LATA4 = 0;
  6913  005C7C  9879               	bcf	121,4,c	;volatile
  6914  005C7E                     
  6915                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6916  005C7E  0E11               	movlw	17
  6917  005C80  6E02               	movwf	(??_LED_B+1)^0,c
  6918  005C82  0E3C               	movlw	60
  6919  005C84  6E01               	movwf	??_LED_B^0,c
  6920  005C86  0ECB               	movlw	203
  6921  005C88                     u6157:
  6922  005C88  2EE8               	decfsz	wreg,f,c
  6923  005C8A  D7FE               	bra	u6157
  6924  005C8C  2E01               	decfsz	??_LED_B^0,f,c
  6925  005C8E  D7FC               	bra	u6157
  6926  005C90  2E02               	decfsz	(??_LED_B+1)^0,f,c
  6927  005C92  D7FA               	bra	u6157
  6928  005C94  F000               	nop	
  6929  005C96  0012               	return		;funcret
  6930  005C98                     __end_of_LED_B:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _amb_light_measure *****************
  6934 ;; Defined at:
  6935 ;;		line 377 in file "color.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  6938 ;;		 -> main@rgb(8), main@amb(8), 
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  6941 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  6942 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  6943 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  6944 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  2   10[BANK0 ] unsigned int 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6954 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6955 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6957 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6958 ;;Total ram usage:       14 bytes
  6959 ;; Hardware stack levels used: 1
  6960 ;; Hardware stack levels required when called: 5
  6961 ;; This function calls:
  6962 ;;		_LED_C
  6963 ;;		___fldiv
  6964 ;;		___xxtofl
  6965 ;;		_color_read_Clear
  6966 ;;		_lroundf
  6967 ;;		_toggle_light
  6968 ;; This function is called by:
  6969 ;;		_main
  6970 ;;		_test_function
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text32
  6975  004A32                     __ptext32:
  6976                           	callstack 0
  6977  004A32                     _amb_light_measure:
  6978                           	callstack 24
  6979  004A32  0E00               	movlw	0
  6980  004A34  0100               	movlb	0	; () banked
  6981  004A36  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  6982  004A38  0E00               	movlw	0
  6983  004A3A  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  6984  004A3C  0E00               	movlw	0
  6985  004A3E  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  6986  004A40  0E00               	movlw	0
  6987  004A42  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  6988  004A44  0E00               	movlw	0
  6989  004A46  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  6990  004A48  0E00               	movlw	0
  6991  004A4A  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  6992  004A4C                     
  6993                           ; BSR set to: 0
  6994                           ;color.c: 380:     toggle_light(2,2);
  6995  004A4C  0E02               	movlw	2
  6996  004A4E  6E01               	movwf	toggle_light@toggletime^0,c
  6997  004A50  0E02               	movlw	2
  6998  004A52  ECAF  F01A         	call	_toggle_light
  6999  004A56                     
  7000                           ;color.c: 381:     LED_C();
  7001  004A56  EC4C  F02E         	call	_LED_C	;wreg free
  7002  004A5A                     
  7003                           ;color.c: 382:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7004  004A5A  0E29               	movlw	41
  7005  004A5C  0100               	movlb	0	; () banked
  7006  004A5E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7007  004A60  0E96               	movlw	150
  7008  004A62  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7009  004A64  0E7F               	movlw	127
  7010  004A66                     u6167:
  7011  004A66  2EE8               	decfsz	wreg,f,c
  7012  004A68  D7FE               	bra	u6167
  7013  004A6A  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7014  004A6C  D7FC               	bra	u6167
  7015  004A6E  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7016  004A70  D7FA               	bra	u6167
  7017  004A72                     
  7018                           ;color.c: 384:     CC_amb_1 = color_read_Clear();
  7019  004A72  ECC6  F02B         	call	_color_read_Clear	;wreg free
  7020  004A76  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  7021  004A7A  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  7022  004A7E                     
  7023                           ;color.c: 385:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7024  004A7E  0E11               	movlw	17
  7025  004A80  0100               	movlb	0	; () banked
  7026  004A82  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7027  004A84  0E3C               	movlw	60
  7028  004A86  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7029  004A88  0ECB               	movlw	203
  7030  004A8A                     u6177:
  7031  004A8A  2EE8               	decfsz	wreg,f,c
  7032  004A8C  D7FE               	bra	u6177
  7033  004A8E  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7034  004A90  D7FC               	bra	u6177
  7035  004A92  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7036  004A94  D7FA               	bra	u6177
  7037  004A96                     
  7038                           ;color.c: 387:     CC_amb_2 = color_read_Clear();
  7039  004A96  ECC6  F02B         	call	_color_read_Clear	;wreg free
  7040  004A9A  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  7041  004A9E  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  7042  004AA2                     
  7043                           ;color.c: 388:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7044  004AA2  0E11               	movlw	17
  7045  004AA4  0100               	movlb	0	; () banked
  7046  004AA6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7047  004AA8  0E3C               	movlw	60
  7048  004AAA  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7049  004AAC  0ECB               	movlw	203
  7050  004AAE                     u6187:
  7051  004AAE  2EE8               	decfsz	wreg,f,c
  7052  004AB0  D7FE               	bra	u6187
  7053  004AB2  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7054  004AB4  D7FC               	bra	u6187
  7055  004AB6  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7056  004AB8  D7FA               	bra	u6187
  7057  004ABA                     
  7058                           ;color.c: 390:     CC_amb_3 = color_read_Clear();
  7059  004ABA  ECC6  F02B         	call	_color_read_Clear	;wreg free
  7060  004ABE  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  7061  004AC2  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  7062  004AC6                     
  7063                           ;color.c: 391:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7064  004AC6  0E11               	movlw	17
  7065  004AC8  0100               	movlb	0	; () banked
  7066  004ACA  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7067  004ACC  0E3C               	movlw	60
  7068  004ACE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7069  004AD0  0ECB               	movlw	203
  7070  004AD2                     u6197:
  7071  004AD2  2EE8               	decfsz	wreg,f,c
  7072  004AD4  D7FE               	bra	u6197
  7073  004AD6  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7074  004AD8  D7FC               	bra	u6197
  7075  004ADA  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7076  004ADC  D7FA               	bra	u6197
  7077  004ADE                     
  7078                           ;color.c: 393:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  7079  004ADE  0100               	movlb	0	; () banked
  7080  004AE0  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  7081  004AE2  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  7082  004AE4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7083  004AE6  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  7084  004AE8  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  7085  004AEA  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7086  004AEC  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  7087  004AEE  276C               	addwf	??_amb_light_measure& (0+255),f,b
  7088  004AF0  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  7089  004AF2  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  7090  004AF4  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  7091  004AF8  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  7092  004AFC  6A03               	clrf	(___xxtofl@val+2)^0,c
  7093  004AFE  6A04               	clrf	(___xxtofl@val+3)^0,c
  7094  004B00  0E00               	movlw	0
  7095  004B02  ECAB  F01F         	call	___xxtofl
  7096  004B06  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7097  004B0A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7098  004B0E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7099  004B12  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7100  004B16  0E00               	movlw	0
  7101  004B18  6E13               	movwf	___fldiv@a^0,c
  7102  004B1A  0E00               	movlw	0
  7103  004B1C  6E14               	movwf	(___fldiv@a+1)^0,c
  7104  004B1E  0E40               	movlw	64
  7105  004B20  6E15               	movwf	(___fldiv@a+2)^0,c
  7106  004B22  0E40               	movlw	64
  7107  004B24  6E16               	movwf	(___fldiv@a+3)^0,c
  7108  004B26  EC54  F013         	call	___fldiv	;wreg free
  7109  004B2A  C00F  F066         	movff	?___fldiv,lroundf@x
  7110  004B2E  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  7111  004B32  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  7112  004B36  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  7113  004B3A  EC33  F02D         	call	_lroundf	;wreg free
  7114  004B3E  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  7115  004B42  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  7116  004B46                     
  7117                           ;color.c: 395:     toggle_light(2,2);
  7118  004B46  0E02               	movlw	2
  7119  004B48  6E01               	movwf	toggle_light@toggletime^0,c
  7120  004B4A  0E02               	movlw	2
  7121  004B4C  ECAF  F01A         	call	_toggle_light
  7122  004B50                     
  7123                           ;color.c: 397:     return CC_amb_ave;
  7124  004B50  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  7125  004B54  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  7126  004B58  0012               	return		;funcret
  7127  004B5A                     __end_of_amb_light_measure:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _lroundf *****************
  7131 ;; Defined at:
  7132 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;  x               4    6[BANK0 ] float 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;		None
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  4    6[BANK0 ] long 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7146 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;Total ram usage:        4 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 4
  7153 ;; This function calls:
  7154 ;;		___fltol
  7155 ;;		_roundf
  7156 ;; This function is called by:
  7157 ;;		_detect_color
  7158 ;;		_amb_light_measure
  7159 ;;		_distance_measure
  7160 ;;		_check_color_reading
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text33
  7165  005A66                     __ptext33:
  7166                           	callstack 0
  7167  005A66                     _lroundf:
  7168                           	callstack 24
  7169  005A66  C066  F041         	movff	lroundf@x,roundf@x
  7170  005A6A  C067  F042         	movff	lroundf@x+1,roundf@x+1
  7171  005A6E  C068  F043         	movff	lroundf@x+2,roundf@x+2
  7172  005A72  C069  F044         	movff	lroundf@x+3,roundf@x+3
  7173  005A76  EC7D  F011         	call	_roundf	;wreg free
  7174  005A7A  C041  F05B         	movff	?_roundf,___fltol@f1
  7175  005A7E  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  7176  005A82  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  7177  005A86  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  7178  005A8A  ECAD  F025         	call	___fltol	;wreg free
  7179  005A8E  C05B  F066         	movff	?___fltol,?_lroundf
  7180  005A92  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  7181  005A96  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  7182  005A9A  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  7183  005A9E  0012               	return		;funcret
  7184  005AA0                     __end_of_lroundf:
  7185                           	callstack 0
  7186                           
  7187 ;; *************** function _roundf *****************
  7188 ;; Defined at:
  7189 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  x               4   64[COMRAM] float 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  y               4   86[COMRAM] float 
  7194 ;;  u               4   82[COMRAM] struct .
  7195 ;;  e               2   76[COMRAM] int 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  4   64[COMRAM] float 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7206 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;Total ram usage:       26 bytes
  7210 ;; Hardware stack levels used: 1
  7211 ;; Hardware stack levels required when called: 3
  7212 ;; This function calls:
  7213 ;;		___fladd
  7214 ;;		___flge
  7215 ;;		___flmul
  7216 ;;		___flneg
  7217 ;;		___flsub
  7218 ;; This function is called by:
  7219 ;;		_lroundf
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           	psect	text34
  7224  0022FA                     __ptext34:
  7225                           	callstack 0
  7226  0022FA                     _roundf:
  7227                           	callstack 24
  7228  0022FA  C18A  F053         	movff	roundf@F527,roundf@u
  7229  0022FE  C18B  F054         	movff	roundf@F527+1,roundf@u+1
  7230  002302  C18C  F055         	movff	roundf@F527+2,roundf@u+2
  7231  002306  C18D  F056         	movff	roundf@F527+3,roundf@u+3
  7232  00230A  C041  F053         	movff	roundf@x,roundf@u
  7233  00230E  C042  F054         	movff	roundf@x+1,roundf@u+1
  7234  002312  C043  F055         	movff	roundf@x+2,roundf@u+2
  7235  002316  C044  F056         	movff	roundf@x+3,roundf@u+3
  7236  00231A  C053  F045         	movff	roundf@u,??_roundf
  7237  00231E  C054  F046         	movff	roundf@u+1,??_roundf+1
  7238  002322  C055  F047         	movff	roundf@u+2,??_roundf+2
  7239  002326  C056  F048         	movff	roundf@u+3,??_roundf+3
  7240  00232A  0E18               	movlw	24
  7241  00232C  EF9D  F011         	goto	u4350
  7242  002330                     u4355:
  7243  002330  90D8               	bcf	status,0,c
  7244  002332  3248               	rrcf	(??_roundf+3)^0,f,c
  7245  002334  3247               	rrcf	(??_roundf+2)^0,f,c
  7246  002336  3246               	rrcf	(??_roundf+1)^0,f,c
  7247  002338  3245               	rrcf	??_roundf^0,f,c
  7248  00233A                     u4350:
  7249  00233A  2EE8               	decfsz	wreg,f,c
  7250  00233C  EF98  F011         	goto	u4355
  7251  002340  5045               	movf	??_roundf^0,w,c
  7252  002342  6E4D               	movwf	roundf@e^0,c
  7253  002344  6A4E               	clrf	(roundf@e+1)^0,c
  7254  002346  BE4E               	btfsc	(roundf@e+1)^0,7,c
  7255  002348  EFAF  F011         	goto	u4361
  7256  00234C  504E               	movf	(roundf@e+1)^0,w,c
  7257  00234E  E109               	bnz	u4360
  7258  002350  0E96               	movlw	150
  7259  002352  5C4D               	subwf	roundf@e^0,w,c
  7260  002354  A0D8               	btfss	status,0,c
  7261  002356  EFAF  F011         	goto	u4361
  7262  00235A  EFB1  F011         	goto	u4360
  7263  00235E                     u4361:
  7264  00235E  EFBB  F011         	goto	l4530
  7265  002362                     u4360:
  7266  002362  C041  F041         	movff	roundf@x,?_roundf
  7267  002366  C042  F042         	movff	roundf@x+1,?_roundf+1
  7268  00236A  C043  F043         	movff	roundf@x+2,?_roundf+2
  7269  00236E  C044  F044         	movff	roundf@x+3,?_roundf+3
  7270  002372  EF53  F013         	goto	l1613
  7271  002376                     l4530:
  7272  002376  C053  F045         	movff	roundf@u,??_roundf
  7273  00237A  C054  F046         	movff	roundf@u+1,??_roundf+1
  7274  00237E  C055  F047         	movff	roundf@u+2,??_roundf+2
  7275  002382  C056  F048         	movff	roundf@u+3,??_roundf+3
  7276  002386  0E20               	movlw	32
  7277  002388  EFCB  F011         	goto	u4370
  7278  00238C                     u4375:
  7279  00238C  90D8               	bcf	status,0,c
  7280  00238E  3248               	rrcf	(??_roundf+3)^0,f,c
  7281  002390  3247               	rrcf	(??_roundf+2)^0,f,c
  7282  002392  3246               	rrcf	(??_roundf+1)^0,f,c
  7283  002394  3245               	rrcf	??_roundf^0,f,c
  7284  002396                     u4370:
  7285  002396  2EE8               	decfsz	wreg,f,c
  7286  002398  EFC6  F011         	goto	u4375
  7287  00239C  5045               	movf	??_roundf^0,w,c
  7288  00239E  1046               	iorwf	(??_roundf+1)^0,w,c
  7289  0023A0  1047               	iorwf	(??_roundf+2)^0,w,c
  7290  0023A2  1048               	iorwf	(??_roundf+3)^0,w,c
  7291  0023A4  B4D8               	btfsc	status,2,c
  7292  0023A6  EFD7  F011         	goto	u4381
  7293  0023AA  EFD9  F011         	goto	u4380
  7294  0023AE                     u4381:
  7295  0023AE  EFEB  F011         	goto	l4534
  7296  0023B2                     u4380:
  7297  0023B2  C041  F001         	movff	roundf@x,___flneg@f1
  7298  0023B6  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  7299  0023BA  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  7300  0023BE  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  7301  0023C2  EC50  F02D         	call	___flneg	;wreg free
  7302  0023C6  C001  F041         	movff	?___flneg,roundf@x
  7303  0023CA  C002  F042         	movff	?___flneg+1,roundf@x+1
  7304  0023CE  C003  F043         	movff	?___flneg+2,roundf@x+2
  7305  0023D2  C004  F044         	movff	?___flneg+3,roundf@x+3
  7306  0023D6                     l4534:
  7307  0023D6  BE4E               	btfsc	(roundf@e+1)^0,7,c
  7308  0023D8  EFF9  F011         	goto	u4390
  7309  0023DC  504E               	movf	(roundf@e+1)^0,w,c
  7310  0023DE  E107               	bnz	u4391
  7311  0023E0  0E7E               	movlw	126
  7312  0023E2  5C4D               	subwf	roundf@e^0,w,c
  7313  0023E4  B0D8               	btfsc	status,0,c
  7314  0023E6  EFF7  F011         	goto	u4391
  7315  0023EA  EFF9  F011         	goto	u4390
  7316  0023EE                     u4391:
  7317  0023EE  EF15  F012         	goto	l4540
  7318  0023F2                     u4390:
  7319  0023F2  C053  F028         	movff	roundf@u,___flmul@b
  7320  0023F6  C054  F029         	movff	roundf@u+1,___flmul@b+1
  7321  0023FA  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  7322  0023FE  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  7323  002402  0E00               	movlw	0
  7324  002404  6E2C               	movwf	___flmul@a^0,c
  7325  002406  0E00               	movlw	0
  7326  002408  6E2D               	movwf	(___flmul@a+1)^0,c
  7327  00240A  0E00               	movlw	0
  7328  00240C  6E2E               	movwf	(___flmul@a+2)^0,c
  7329  00240E  0E00               	movlw	0
  7330  002410  6E2F               	movwf	(___flmul@a+3)^0,c
  7331  002412  EC68  F00F         	call	___flmul	;wreg free
  7332  002416  C028  F041         	movff	?___flmul,?_roundf
  7333  00241A  C029  F042         	movff	?___flmul+1,?_roundf+1
  7334  00241E  C02A  F043         	movff	?___flmul+2,?_roundf+2
  7335  002422  C02B  F044         	movff	?___flmul+3,?_roundf+3
  7336  002426  EF53  F013         	goto	l1613
  7337  00242A                     l4540:
  7338  00242A  0E00               	movlw	0
  7339  00242C  6E05               	movwf	___fladd@a^0,c
  7340  00242E  0E00               	movlw	0
  7341  002430  6E06               	movwf	(___fladd@a+1)^0,c
  7342  002432  0E00               	movlw	0
  7343  002434  6E07               	movwf	(___fladd@a+2)^0,c
  7344  002436  0E4B               	movlw	75
  7345  002438  6E08               	movwf	(___fladd@a+3)^0,c
  7346  00243A  C041  F001         	movff	roundf@x,___fladd@b
  7347  00243E  C042  F002         	movff	roundf@x+1,___fladd@b+1
  7348  002442  C043  F003         	movff	roundf@x+2,___fladd@b+2
  7349  002446  C044  F004         	movff	roundf@x+3,___fladd@b+3
  7350  00244A  EC08  F00D         	call	___fladd	;wreg free
  7351  00244E  C001  F04F         	movff	?___fladd,_roundf$3348
  7352  002452  C002  F050         	movff	?___fladd+1,_roundf$3348+1
  7353  002456  C003  F051         	movff	?___fladd+2,_roundf$3348+2
  7354  00245A  C004  F052         	movff	?___fladd+3,_roundf$3348+3
  7355  00245E  0E00               	movlw	0
  7356  002460  6E05               	movwf	___fladd@a^0,c
  7357  002462  0E00               	movlw	0
  7358  002464  6E06               	movwf	(___fladd@a+1)^0,c
  7359  002466  0E00               	movlw	0
  7360  002468  6E07               	movwf	(___fladd@a+2)^0,c
  7361  00246A  0ECB               	movlw	203
  7362  00246C  6E08               	movwf	(___fladd@a+3)^0,c
  7363  00246E  C04F  F001         	movff	_roundf$3348,___fladd@b
  7364  002472  C050  F002         	movff	_roundf$3348+1,___fladd@b+1
  7365  002476  C051  F003         	movff	_roundf$3348+2,___fladd@b+2
  7366  00247A  C052  F004         	movff	_roundf$3348+3,___fladd@b+3
  7367  00247E  EC08  F00D         	call	___fladd	;wreg free
  7368  002482  C001  F049         	movff	?___fladd,_roundf$3349
  7369  002486  C002  F04A         	movff	?___fladd+1,_roundf$3349+1
  7370  00248A  C003  F04B         	movff	?___fladd+2,_roundf$3349+2
  7371  00248E  C004  F04C         	movff	?___fladd+3,_roundf$3349+3
  7372  002492  C049  F011         	movff	_roundf$3349,___flsub@b
  7373  002496  C04A  F012         	movff	_roundf$3349+1,___flsub@b+1
  7374  00249A  C04B  F013         	movff	_roundf$3349+2,___flsub@b+2
  7375  00249E  C04C  F014         	movff	_roundf$3349+3,___flsub@b+3
  7376  0024A2  C041  F015         	movff	roundf@x,___flsub@a
  7377  0024A6  C042  F016         	movff	roundf@x+1,___flsub@a+1
  7378  0024AA  C043  F017         	movff	roundf@x+2,___flsub@a+2
  7379  0024AE  C044  F018         	movff	roundf@x+3,___flsub@a+3
  7380  0024B2  ECEE  F02B         	call	___flsub	;wreg free
  7381  0024B6  C011  F057         	movff	?___flsub,roundf@y
  7382  0024BA  C012  F058         	movff	?___flsub+1,roundf@y+1
  7383  0024BE  C013  F059         	movff	?___flsub+2,roundf@y+2
  7384  0024C2  C014  F05A         	movff	?___flsub+3,roundf@y+3
  7385  0024C6  0E00               	movlw	0
  7386  0024C8  6E01               	movwf	___flge@ff1^0,c
  7387  0024CA  0E00               	movlw	0
  7388  0024CC  6E02               	movwf	(___flge@ff1+1)^0,c
  7389  0024CE  0E00               	movlw	0
  7390  0024D0  6E03               	movwf	(___flge@ff1+2)^0,c
  7391  0024D2  0E3F               	movlw	63
  7392  0024D4  6E04               	movwf	(___flge@ff1+3)^0,c
  7393  0024D6  C057  F005         	movff	roundf@y,___flge@ff2
  7394  0024DA  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  7395  0024DE  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  7396  0024E2  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  7397  0024E6  EC31  F026         	call	___flge	;wreg free
  7398  0024EA  B0D8               	btfsc	status,0,c
  7399  0024EC  EF7A  F012         	goto	u4401
  7400  0024F0  EF7C  F012         	goto	u4400
  7401  0024F4                     u4401:
  7402  0024F4  EFB2  F012         	goto	l4544
  7403  0024F8                     u4400:
  7404  0024F8  C041  F005         	movff	roundf@x,___fladd@a
  7405  0024FC  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7406  002500  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7407  002504  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7408  002508  C057  F001         	movff	roundf@y,___fladd@b
  7409  00250C  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7410  002510  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7411  002514  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7412  002518  EC08  F00D         	call	___fladd	;wreg free
  7413  00251C  C001  F04F         	movff	?___fladd,_roundf$3348
  7414  002520  C002  F050         	movff	?___fladd+1,_roundf$3348+1
  7415  002524  C003  F051         	movff	?___fladd+2,_roundf$3348+2
  7416  002528  C004  F052         	movff	?___fladd+3,_roundf$3348+3
  7417  00252C  C04F  F001         	movff	_roundf$3348,___fladd@b
  7418  002530  C050  F002         	movff	_roundf$3348+1,___fladd@b+1
  7419  002534  C051  F003         	movff	_roundf$3348+2,___fladd@b+2
  7420  002538  C052  F004         	movff	_roundf$3348+3,___fladd@b+3
  7421  00253C  0E00               	movlw	0
  7422  00253E  6E05               	movwf	___fladd@a^0,c
  7423  002540  0E00               	movlw	0
  7424  002542  6E06               	movwf	(___fladd@a+1)^0,c
  7425  002544  0E80               	movlw	128
  7426  002546  6E07               	movwf	(___fladd@a+2)^0,c
  7427  002548  0EBF               	movlw	191
  7428  00254A  6E08               	movwf	(___fladd@a+3)^0,c
  7429  00254C  EC08  F00D         	call	___fladd	;wreg free
  7430  002550  C001  F057         	movff	?___fladd,roundf@y
  7431  002554  C002  F058         	movff	?___fladd+1,roundf@y+1
  7432  002558  C003  F059         	movff	?___fladd+2,roundf@y+2
  7433  00255C  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7434  002560  EF1B  F013         	goto	l4550
  7435  002564                     l4544:
  7436  002564  0E00               	movlw	0
  7437  002566  6E01               	movwf	___flge@ff1^0,c
  7438  002568  0E00               	movlw	0
  7439  00256A  6E02               	movwf	(___flge@ff1+1)^0,c
  7440  00256C  0E00               	movlw	0
  7441  00256E  6E03               	movwf	(___flge@ff1+2)^0,c
  7442  002570  0EBF               	movlw	191
  7443  002572  6E04               	movwf	(___flge@ff1+3)^0,c
  7444  002574  C057  F005         	movff	roundf@y,___flge@ff2
  7445  002578  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  7446  00257C  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  7447  002580  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  7448  002584  EC31  F026         	call	___flge	;wreg free
  7449  002588  A0D8               	btfss	status,0,c
  7450  00258A  EFC9  F012         	goto	u4411
  7451  00258E  EFCB  F012         	goto	u4410
  7452  002592                     u4411:
  7453  002592  EF01  F013         	goto	l4548
  7454  002596                     u4410:
  7455  002596  C041  F005         	movff	roundf@x,___fladd@a
  7456  00259A  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7457  00259E  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7458  0025A2  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7459  0025A6  C057  F001         	movff	roundf@y,___fladd@b
  7460  0025AA  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7461  0025AE  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7462  0025B2  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7463  0025B6  EC08  F00D         	call	___fladd	;wreg free
  7464  0025BA  C001  F04F         	movff	?___fladd,_roundf$3348
  7465  0025BE  C002  F050         	movff	?___fladd+1,_roundf$3348+1
  7466  0025C2  C003  F051         	movff	?___fladd+2,_roundf$3348+2
  7467  0025C6  C004  F052         	movff	?___fladd+3,_roundf$3348+3
  7468  0025CA  C04F  F001         	movff	_roundf$3348,___fladd@b
  7469  0025CE  C050  F002         	movff	_roundf$3348+1,___fladd@b+1
  7470  0025D2  C051  F003         	movff	_roundf$3348+2,___fladd@b+2
  7471  0025D6  C052  F004         	movff	_roundf$3348+3,___fladd@b+3
  7472  0025DA  0E00               	movlw	0
  7473  0025DC  6E05               	movwf	___fladd@a^0,c
  7474  0025DE  0E00               	movlw	0
  7475  0025E0  6E06               	movwf	(___fladd@a+1)^0,c
  7476  0025E2  0E80               	movlw	128
  7477  0025E4  6E07               	movwf	(___fladd@a+2)^0,c
  7478  0025E6  0E3F               	movlw	63
  7479  0025E8  6E08               	movwf	(___fladd@a+3)^0,c
  7480  0025EA  EC08  F00D         	call	___fladd	;wreg free
  7481  0025EE  C001  F057         	movff	?___fladd,roundf@y
  7482  0025F2  C002  F058         	movff	?___fladd+1,roundf@y+1
  7483  0025F6  C003  F059         	movff	?___fladd+2,roundf@y+2
  7484  0025FA  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7485  0025FE  EF1B  F013         	goto	l4550
  7486  002602                     l4548:
  7487  002602  C057  F001         	movff	roundf@y,___fladd@b
  7488  002606  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7489  00260A  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7490  00260E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7491  002612  C041  F005         	movff	roundf@x,___fladd@a
  7492  002616  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7493  00261A  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7494  00261E  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7495  002622  EC08  F00D         	call	___fladd	;wreg free
  7496  002626  C001  F057         	movff	?___fladd,roundf@y
  7497  00262A  C002  F058         	movff	?___fladd+1,roundf@y+1
  7498  00262E  C003  F059         	movff	?___fladd+2,roundf@y+2
  7499  002632  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7500  002636                     l4550:
  7501  002636  C053  F045         	movff	roundf@u,??_roundf
  7502  00263A  C054  F046         	movff	roundf@u+1,??_roundf+1
  7503  00263E  C055  F047         	movff	roundf@u+2,??_roundf+2
  7504  002642  C056  F048         	movff	roundf@u+3,??_roundf+3
  7505  002646  0E20               	movlw	32
  7506  002648  EF2B  F013         	goto	u4420
  7507  00264C                     u4425:
  7508  00264C  90D8               	bcf	status,0,c
  7509  00264E  3248               	rrcf	(??_roundf+3)^0,f,c
  7510  002650  3247               	rrcf	(??_roundf+2)^0,f,c
  7511  002652  3246               	rrcf	(??_roundf+1)^0,f,c
  7512  002654  3245               	rrcf	??_roundf^0,f,c
  7513  002656                     u4420:
  7514  002656  2EE8               	decfsz	wreg,f,c
  7515  002658  EF26  F013         	goto	u4425
  7516  00265C  5045               	movf	??_roundf^0,w,c
  7517  00265E  1046               	iorwf	(??_roundf+1)^0,w,c
  7518  002660  1047               	iorwf	(??_roundf+2)^0,w,c
  7519  002662  1048               	iorwf	(??_roundf+3)^0,w,c
  7520  002664  B4D8               	btfsc	status,2,c
  7521  002666  EF37  F013         	goto	u4431
  7522  00266A  EF39  F013         	goto	u4430
  7523  00266E                     u4431:
  7524  00266E  EF4B  F013         	goto	l4554
  7525  002672                     u4430:
  7526  002672  C057  F001         	movff	roundf@y,___flneg@f1
  7527  002676  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  7528  00267A  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  7529  00267E  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  7530  002682  EC50  F02D         	call	___flneg	;wreg free
  7531  002686  C001  F057         	movff	?___flneg,roundf@y
  7532  00268A  C002  F058         	movff	?___flneg+1,roundf@y+1
  7533  00268E  C003  F059         	movff	?___flneg+2,roundf@y+2
  7534  002692  C004  F05A         	movff	?___flneg+3,roundf@y+3
  7535  002696                     l4554:
  7536  002696  C057  F041         	movff	roundf@y,?_roundf
  7537  00269A  C058  F042         	movff	roundf@y+1,?_roundf+1
  7538  00269E  C059  F043         	movff	roundf@y+2,?_roundf+2
  7539  0026A2  C05A  F044         	movff	roundf@y+3,?_roundf+3
  7540  0026A6                     l1613:
  7541  0026A6  0012               	return		;funcret
  7542  0026A8                     __end_of_roundf:
  7543                           	callstack 0
  7544                           
  7545 ;; *************** function ___flsub *****************
  7546 ;; Defined at:
  7547 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  b               4   16[COMRAM] float 
  7550 ;;  a               4   20[COMRAM] float 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  4   16[COMRAM] float 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7562 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        8 bytes
  7567 ;; Hardware stack levels used: 1
  7568 ;; Hardware stack levels required when called: 2
  7569 ;; This function calls:
  7570 ;;		___fladd
  7571 ;; This function is called by:
  7572 ;;		_roundf
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text35
  7577  0057DC                     __ptext35:
  7578                           	callstack 0
  7579  0057DC                     ___flsub:
  7580                           	callstack 24
  7581  0057DC  0E00               	movlw	0
  7582  0057DE  1A15               	xorwf	___flsub@a^0,f,c
  7583  0057E0  0E00               	movlw	0
  7584  0057E2  1A16               	xorwf	(___flsub@a+1)^0,f,c
  7585  0057E4  0E00               	movlw	0
  7586  0057E6  1A17               	xorwf	(___flsub@a+2)^0,f,c
  7587  0057E8  0E80               	movlw	128
  7588  0057EA  1A18               	xorwf	(___flsub@a+3)^0,f,c
  7589  0057EC  C011  F001         	movff	___flsub@b,___fladd@b
  7590  0057F0  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  7591  0057F4  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  7592  0057F8  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  7593  0057FC  C015  F005         	movff	___flsub@a,___fladd@a
  7594  005800  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  7595  005804  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  7596  005808  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  7597  00580C  EC08  F00D         	call	___fladd	;wreg free
  7598  005810  C001  F011         	movff	?___fladd,?___flsub
  7599  005814  C002  F012         	movff	?___fladd+1,?___flsub+1
  7600  005818  C003  F013         	movff	?___fladd+2,?___flsub+2
  7601  00581C  C004  F014         	movff	?___fladd+3,?___flsub+3
  7602  005820  0012               	return		;funcret
  7603  005822                     __end_of___flsub:
  7604                           	callstack 0
  7605                           
  7606 ;; *************** function ___fladd *****************
  7607 ;; Defined at:
  7608 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  b               4    0[COMRAM] float 
  7611 ;;  a               4    4[COMRAM] float 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  grs             1   15[COMRAM] unsigned char 
  7614 ;;  bexp            1   14[COMRAM] unsigned char 
  7615 ;;  aexp            1   13[COMRAM] unsigned char 
  7616 ;;  signs           1   12[COMRAM] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  4    0[COMRAM] unsigned char 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7626 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:       16 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 1
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		___flsub
  7637 ;;		_roundf
  7638 ;; This function uses a non-reentrant model
  7639 ;;
  7640                           
  7641                           	psect	text36
  7642  001A10                     __ptext36:
  7643                           	callstack 0
  7644  001A10                     ___fladd:
  7645                           	callstack 24
  7646  001A10  5004               	movf	(___fladd@b+3)^0,w,c
  7647  001A12  0B80               	andlw	128
  7648  001A14  6E0D               	movwf	___fladd@signs^0,c
  7649  001A16  5004               	movf	(___fladd@b+3)^0,w,c
  7650  001A18  2404               	addwf	(___fladd@b+3)^0,w,c
  7651  001A1A  6E0F               	movwf	___fladd@bexp^0,c
  7652  001A1C  AE03               	btfss	(___fladd@b+2)^0,7,c
  7653  001A1E  EF13  F00D         	goto	u3471
  7654  001A22  EF15  F00D         	goto	u3470
  7655  001A26                     u3471:
  7656  001A26  EF16  F00D         	goto	l3936
  7657  001A2A                     u3470:
  7658  001A2A  800F               	bsf	___fladd@bexp^0,0,c
  7659  001A2C                     l3936:
  7660  001A2C  500F               	movf	___fladd@bexp^0,w,c
  7661  001A2E  B4D8               	btfsc	status,2,c
  7662  001A30  EF1C  F00D         	goto	u3481
  7663  001A34  EF1E  F00D         	goto	u3480
  7664  001A38                     u3481:
  7665  001A38  EF33  F00D         	goto	l3946
  7666  001A3C                     u3480:
  7667  001A3C  280F               	incf	___fladd@bexp^0,w,c
  7668  001A3E  A4D8               	btfss	status,2,c
  7669  001A40  EF24  F00D         	goto	u3491
  7670  001A44  EF26  F00D         	goto	u3490
  7671  001A48                     u3491:
  7672  001A48  EF2E  F00D         	goto	l3942
  7673  001A4C                     u3490:
  7674  001A4C  0E00               	movlw	0
  7675  001A4E  6E01               	movwf	___fladd@b^0,c
  7676  001A50  0E00               	movlw	0
  7677  001A52  6E02               	movwf	(___fladd@b+1)^0,c
  7678  001A54  0E00               	movlw	0
  7679  001A56  6E03               	movwf	(___fladd@b+2)^0,c
  7680  001A58  0E00               	movlw	0
  7681  001A5A  6E04               	movwf	(___fladd@b+3)^0,c
  7682  001A5C                     l3942:
  7683  001A5C  8E03               	bsf	(___fladd@b+2)^0,7,c
  7684  001A5E  0E00               	movlw	0
  7685  001A60  6E04               	movwf	(___fladd@b+3)^0,c
  7686  001A62  EF3B  F00D         	goto	l3948
  7687  001A66                     l3946:
  7688  001A66  0E00               	movlw	0
  7689  001A68  6E01               	movwf	___fladd@b^0,c
  7690  001A6A  0E00               	movlw	0
  7691  001A6C  6E02               	movwf	(___fladd@b+1)^0,c
  7692  001A6E  0E00               	movlw	0
  7693  001A70  6E03               	movwf	(___fladd@b+2)^0,c
  7694  001A72  0E00               	movlw	0
  7695  001A74  6E04               	movwf	(___fladd@b+3)^0,c
  7696  001A76                     l3948:
  7697  001A76  5008               	movf	(___fladd@a+3)^0,w,c
  7698  001A78  0B80               	andlw	128
  7699  001A7A  6E0E               	movwf	___fladd@aexp^0,c
  7700  001A7C  500D               	movf	___fladd@signs^0,w,c
  7701  001A7E  180E               	xorwf	___fladd@aexp^0,w,c
  7702  001A80  B4D8               	btfsc	status,2,c
  7703  001A82  EF45  F00D         	goto	u3501
  7704  001A86  EF47  F00D         	goto	u3500
  7705  001A8A                     u3501:
  7706  001A8A  EF48  F00D         	goto	l3954
  7707  001A8E                     u3500:
  7708  001A8E  8C0D               	bsf	___fladd@signs^0,6,c
  7709  001A90                     l3954:
  7710  001A90  5008               	movf	(___fladd@a+3)^0,w,c
  7711  001A92  2408               	addwf	(___fladd@a+3)^0,w,c
  7712  001A94  6E0E               	movwf	___fladd@aexp^0,c
  7713  001A96  AE07               	btfss	(___fladd@a+2)^0,7,c
  7714  001A98  EF50  F00D         	goto	u3511
  7715  001A9C  EF52  F00D         	goto	u3510
  7716  001AA0                     u3511:
  7717  001AA0  EF53  F00D         	goto	l3960
  7718  001AA4                     u3510:
  7719  001AA4  800E               	bsf	___fladd@aexp^0,0,c
  7720  001AA6                     l3960:
  7721  001AA6  500E               	movf	___fladd@aexp^0,w,c
  7722  001AA8  B4D8               	btfsc	status,2,c
  7723  001AAA  EF59  F00D         	goto	u3521
  7724  001AAE  EF5B  F00D         	goto	u3520
  7725  001AB2                     u3521:
  7726  001AB2  EF70  F00D         	goto	l3970
  7727  001AB6                     u3520:
  7728  001AB6  280E               	incf	___fladd@aexp^0,w,c
  7729  001AB8  A4D8               	btfss	status,2,c
  7730  001ABA  EF61  F00D         	goto	u3531
  7731  001ABE  EF63  F00D         	goto	u3530
  7732  001AC2                     u3531:
  7733  001AC2  EF6B  F00D         	goto	l3966
  7734  001AC6                     u3530:
  7735  001AC6  0E00               	movlw	0
  7736  001AC8  6E05               	movwf	___fladd@a^0,c
  7737  001ACA  0E00               	movlw	0
  7738  001ACC  6E06               	movwf	(___fladd@a+1)^0,c
  7739  001ACE  0E00               	movlw	0
  7740  001AD0  6E07               	movwf	(___fladd@a+2)^0,c
  7741  001AD2  0E00               	movlw	0
  7742  001AD4  6E08               	movwf	(___fladd@a+3)^0,c
  7743  001AD6                     l3966:
  7744  001AD6  8E07               	bsf	(___fladd@a+2)^0,7,c
  7745  001AD8  0E00               	movlw	0
  7746  001ADA  6E08               	movwf	(___fladd@a+3)^0,c
  7747  001ADC  EF78  F00D         	goto	l3972
  7748  001AE0                     l3970:
  7749  001AE0  0E00               	movlw	0
  7750  001AE2  6E05               	movwf	___fladd@a^0,c
  7751  001AE4  0E00               	movlw	0
  7752  001AE6  6E06               	movwf	(___fladd@a+1)^0,c
  7753  001AE8  0E00               	movlw	0
  7754  001AEA  6E07               	movwf	(___fladd@a+2)^0,c
  7755  001AEC  0E00               	movlw	0
  7756  001AEE  6E08               	movwf	(___fladd@a+3)^0,c
  7757  001AF0                     l3972:
  7758  001AF0  500F               	movf	___fladd@bexp^0,w,c
  7759  001AF2  5C0E               	subwf	___fladd@aexp^0,w,c
  7760  001AF4  B0D8               	btfsc	status,0,c
  7761  001AF6  EF7F  F00D         	goto	u3541
  7762  001AFA  EF81  F00D         	goto	u3540
  7763  001AFE                     u3541:
  7764  001AFE  EFA8  F00D         	goto	l4008
  7765  001B02                     u3540:
  7766  001B02  AC0D               	btfss	___fladd@signs^0,6,c
  7767  001B04  EF86  F00D         	goto	u3551
  7768  001B08  EF88  F00D         	goto	u3550
  7769  001B0C                     u3551:
  7770  001B0C  EF8A  F00D         	goto	l3978
  7771  001B10                     u3550:
  7772  001B10  0E80               	movlw	128
  7773  001B12  1A0D               	xorwf	___fladd@signs^0,f,c
  7774  001B14                     l3978:
  7775  001B14  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7776  001B18  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7777  001B1C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7778  001B20  C001  F010         	movff	___fladd@b,___fladd@grs
  7779  001B24  C005  F001         	movff	___fladd@a,___fladd@b
  7780  001B28  C010  F005         	movff	___fladd@grs,___fladd@a
  7781  001B2C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7782  001B30  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7783  001B34  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7784  001B38  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7785  001B3C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7786  001B40  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7787  001B44  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7788  001B48  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7789  001B4C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7790  001B50                     l4008:
  7791  001B50  0E00               	movlw	0
  7792  001B52  6E10               	movwf	___fladd@grs^0,c
  7793  001B54  500F               	movf	___fladd@bexp^0,w,c
  7794  001B56  C00E  F009         	movff	___fladd@aexp,??___fladd
  7795  001B5A  6A0A               	clrf	(??___fladd+1)^0,c
  7796  001B5C  5E09               	subwf	??___fladd^0,f,c
  7797  001B5E  0E00               	movlw	0
  7798  001B60  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7799  001B62  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7800  001B64  EFBD  F00D         	goto	u3561
  7801  001B68  500A               	movf	(??___fladd+1)^0,w,c
  7802  001B6A  E109               	bnz	u3560
  7803  001B6C  0E1A               	movlw	26
  7804  001B6E  5C09               	subwf	??___fladd^0,w,c
  7805  001B70  A0D8               	btfss	status,0,c
  7806  001B72  EFBD  F00D         	goto	u3561
  7807  001B76  EFBF  F00D         	goto	u3560
  7808  001B7A                     u3561:
  7809  001B7A  EFF6  F00D         	goto	l1349
  7810  001B7E                     u3560:
  7811  001B7E  5001               	movf	___fladd@b^0,w,c
  7812  001B80  1002               	iorwf	(___fladd@b+1)^0,w,c
  7813  001B82  1003               	iorwf	(___fladd@b+2)^0,w,c
  7814  001B84  1004               	iorwf	(___fladd@b+3)^0,w,c
  7815  001B86  A4D8               	btfss	status,2,c
  7816  001B88  EFC8  F00D         	goto	u3571
  7817  001B8C  EFCB  F00D         	goto	u3570
  7818  001B90                     u3571:
  7819  001B90  0E01               	movlw	1
  7820  001B92  EFCC  F00D         	goto	u3580
  7821  001B96                     u3570:
  7822  001B96  0E00               	movlw	0
  7823  001B98                     u3580:
  7824  001B98  6E10               	movwf	___fladd@grs^0,c
  7825  001B9A  0E00               	movlw	0
  7826  001B9C  6E01               	movwf	___fladd@b^0,c
  7827  001B9E  0E00               	movlw	0
  7828  001BA0  6E02               	movwf	(___fladd@b+1)^0,c
  7829  001BA2  0E00               	movlw	0
  7830  001BA4  6E03               	movwf	(___fladd@b+2)^0,c
  7831  001BA6  0E00               	movlw	0
  7832  001BA8  6E04               	movwf	(___fladd@b+3)^0,c
  7833  001BAA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7834  001BAE  EFFF  F00D         	goto	l1348
  7835  001BB2                     l1350:
  7836  001BB2  A010               	btfss	___fladd@grs^0,0,c
  7837  001BB4  EFDE  F00D         	goto	u3591
  7838  001BB8  EFE0  F00D         	goto	u3590
  7839  001BBC                     u3591:
  7840  001BBC  EFE6  F00D         	goto	l4020
  7841  001BC0                     u3590:
  7842  001BC0  90D8               	bcf	status,0,c
  7843  001BC2  3010               	rrcf	___fladd@grs^0,w,c
  7844  001BC4  0901               	iorlw	1
  7845  001BC6  6E10               	movwf	___fladd@grs^0,c
  7846  001BC8  EFE8  F00D         	goto	l4022
  7847  001BCC                     l4020:
  7848  001BCC  90D8               	bcf	status,0,c
  7849  001BCE  3210               	rrcf	___fladd@grs^0,f,c
  7850  001BD0                     l4022:
  7851  001BD0  A001               	btfss	___fladd@b^0,0,c
  7852  001BD2  EFED  F00D         	goto	u3601
  7853  001BD6  EFEF  F00D         	goto	u3600
  7854  001BDA                     u3601:
  7855  001BDA  EFF0  F00D         	goto	l4026
  7856  001BDE                     u3600:
  7857  001BDE  8E10               	bsf	___fladd@grs^0,7,c
  7858  001BE0                     l4026:
  7859  001BE0  3404               	rlcf	(___fladd@b+3)^0,w,c
  7860  001BE2  3204               	rrcf	(___fladd@b+3)^0,f,c
  7861  001BE4  3203               	rrcf	(___fladd@b+2)^0,f,c
  7862  001BE6  3202               	rrcf	(___fladd@b+1)^0,f,c
  7863  001BE8  3201               	rrcf	___fladd@b^0,f,c
  7864  001BEA  2A0F               	incf	___fladd@bexp^0,f,c
  7865  001BEC                     l1349:
  7866  001BEC  500E               	movf	___fladd@aexp^0,w,c
  7867  001BEE  5C0F               	subwf	___fladd@bexp^0,w,c
  7868  001BF0  A0D8               	btfss	status,0,c
  7869  001BF2  EFFD  F00D         	goto	u3611
  7870  001BF6  EFFF  F00D         	goto	u3610
  7871  001BFA                     u3611:
  7872  001BFA  EFD9  F00D         	goto	l1350
  7873  001BFE                     u3610:
  7874  001BFE                     l1348:
  7875  001BFE  BC0D               	btfsc	___fladd@signs^0,6,c
  7876  001C00  EF04  F00E         	goto	u3621
  7877  001C04  EF06  F00E         	goto	u3620
  7878  001C08                     u3621:
  7879  001C08  EF46  F00E         	goto	l4054
  7880  001C0C                     u3620:
  7881  001C0C  500F               	movf	___fladd@bexp^0,w,c
  7882  001C0E  A4D8               	btfss	status,2,c
  7883  001C10  EF0C  F00E         	goto	u3631
  7884  001C14  EF0E  F00E         	goto	u3630
  7885  001C18                     u3631:
  7886  001C18  EF18  F00E         	goto	l4036
  7887  001C1C                     u3630:
  7888  001C1C  0E00               	movlw	0
  7889  001C1E  6E01               	movwf	?___fladd^0,c
  7890  001C20  0E00               	movlw	0
  7891  001C22  6E02               	movwf	(?___fladd+1)^0,c
  7892  001C24  0E00               	movlw	0
  7893  001C26  6E03               	movwf	(?___fladd+2)^0,c
  7894  001C28  0E00               	movlw	0
  7895  001C2A  6E04               	movwf	(?___fladd+3)^0,c
  7896  001C2C  EF67  F00F         	goto	l1357
  7897  001C30                     l4036:
  7898  001C30  5005               	movf	___fladd@a^0,w,c
  7899  001C32  2601               	addwf	___fladd@b^0,f,c
  7900  001C34  5006               	movf	(___fladd@a+1)^0,w,c
  7901  001C36  2202               	addwfc	(___fladd@b+1)^0,f,c
  7902  001C38  5007               	movf	(___fladd@a+2)^0,w,c
  7903  001C3A  2203               	addwfc	(___fladd@b+2)^0,f,c
  7904  001C3C  5008               	movf	(___fladd@a+3)^0,w,c
  7905  001C3E  2204               	addwfc	(___fladd@b+3)^0,f,c
  7906  001C40  A004               	btfss	(___fladd@b+3)^0,0,c
  7907  001C42  EF25  F00E         	goto	u3641
  7908  001C46  EF27  F00E         	goto	u3640
  7909  001C4A                     u3641:
  7910  001C4A  EFD3  F00E         	goto	l4090
  7911  001C4E                     u3640:
  7912  001C4E  A010               	btfss	___fladd@grs^0,0,c
  7913  001C50  EF2C  F00E         	goto	u3651
  7914  001C54  EF2E  F00E         	goto	u3650
  7915  001C58                     u3651:
  7916  001C58  EF34  F00E         	goto	l4044
  7917  001C5C                     u3650:
  7918  001C5C  90D8               	bcf	status,0,c
  7919  001C5E  3010               	rrcf	___fladd@grs^0,w,c
  7920  001C60  0901               	iorlw	1
  7921  001C62  6E10               	movwf	___fladd@grs^0,c
  7922  001C64  EF36  F00E         	goto	l4046
  7923  001C68                     l4044:
  7924  001C68  90D8               	bcf	status,0,c
  7925  001C6A  3210               	rrcf	___fladd@grs^0,f,c
  7926  001C6C                     l4046:
  7927  001C6C  A001               	btfss	___fladd@b^0,0,c
  7928  001C6E  EF3B  F00E         	goto	u3661
  7929  001C72  EF3D  F00E         	goto	u3660
  7930  001C76                     u3661:
  7931  001C76  EF3E  F00E         	goto	l4050
  7932  001C7A                     u3660:
  7933  001C7A  8E10               	bsf	___fladd@grs^0,7,c
  7934  001C7C                     l4050:
  7935  001C7C  3404               	rlcf	(___fladd@b+3)^0,w,c
  7936  001C7E  3204               	rrcf	(___fladd@b+3)^0,f,c
  7937  001C80  3203               	rrcf	(___fladd@b+2)^0,f,c
  7938  001C82  3202               	rrcf	(___fladd@b+1)^0,f,c
  7939  001C84  3201               	rrcf	___fladd@b^0,f,c
  7940  001C86  2A0F               	incf	___fladd@bexp^0,f,c
  7941  001C88  EFD3  F00E         	goto	l4090
  7942  001C8C                     l4054:
  7943  001C8C  5005               	movf	___fladd@a^0,w,c
  7944  001C8E  5C01               	subwf	___fladd@b^0,w,c
  7945  001C90  5006               	movf	(___fladd@a+1)^0,w,c
  7946  001C92  5802               	subwfb	(___fladd@b+1)^0,w,c
  7947  001C94  5007               	movf	(___fladd@a+2)^0,w,c
  7948  001C96  5803               	subwfb	(___fladd@b+2)^0,w,c
  7949  001C98  5004               	movf	(___fladd@b+3)^0,w,c
  7950  001C9A  0A80               	xorlw	128
  7951  001C9C  6E09               	movwf	??___fladd^0,c
  7952  001C9E  5008               	movf	(___fladd@a+3)^0,w,c
  7953  001CA0  0A80               	xorlw	128
  7954  001CA2  5809               	subwfb	??___fladd^0,w,c
  7955  001CA4  B0D8               	btfsc	status,0,c
  7956  001CA6  EF57  F00E         	goto	u3671
  7957  001CAA  EF59  F00E         	goto	u3670
  7958  001CAE                     u3671:
  7959  001CAE  EF84  F00E         	goto	l4064
  7960  001CB2                     u3670:
  7961  001CB2  5001               	movf	___fladd@b^0,w,c
  7962  001CB4  5C05               	subwf	___fladd@a^0,w,c
  7963  001CB6  6E09               	movwf	??___fladd^0,c
  7964  001CB8  5002               	movf	(___fladd@b+1)^0,w,c
  7965  001CBA  5806               	subwfb	(___fladd@a+1)^0,w,c
  7966  001CBC  6E0A               	movwf	(??___fladd+1)^0,c
  7967  001CBE  5003               	movf	(___fladd@b+2)^0,w,c
  7968  001CC0  5807               	subwfb	(___fladd@a+2)^0,w,c
  7969  001CC2  6E0B               	movwf	(??___fladd+2)^0,c
  7970  001CC4  5004               	movf	(___fladd@b+3)^0,w,c
  7971  001CC6  5808               	subwfb	(___fladd@a+3)^0,w,c
  7972  001CC8  6E0C               	movwf	(??___fladd+3)^0,c
  7973  001CCA  0EFF               	movlw	255
  7974  001CCC  2409               	addwf	??___fladd^0,w,c
  7975  001CCE  6E01               	movwf	___fladd@b^0,c
  7976  001CD0  0EFF               	movlw	255
  7977  001CD2  200A               	addwfc	(??___fladd+1)^0,w,c
  7978  001CD4  6E02               	movwf	(___fladd@b+1)^0,c
  7979  001CD6  0EFF               	movlw	255
  7980  001CD8  200B               	addwfc	(??___fladd+2)^0,w,c
  7981  001CDA  6E03               	movwf	(___fladd@b+2)^0,c
  7982  001CDC  0EFF               	movlw	255
  7983  001CDE  200C               	addwfc	(??___fladd+3)^0,w,c
  7984  001CE0  6E04               	movwf	(___fladd@b+3)^0,c
  7985  001CE2  0E80               	movlw	128
  7986  001CE4  1A0D               	xorwf	___fladd@signs^0,f,c
  7987  001CE6  6C10               	negf	___fladd@grs^0,c
  7988  001CE8  5010               	movf	___fladd@grs^0,w,c
  7989  001CEA  A4D8               	btfss	status,2,c
  7990  001CEC  EF7A  F00E         	goto	u3681
  7991  001CF0  EF7C  F00E         	goto	u3680
  7992  001CF4                     u3681:
  7993  001CF4  EF8C  F00E         	goto	l1365
  7994  001CF8                     u3680:
  7995  001CF8  0E01               	movlw	1
  7996  001CFA  2601               	addwf	___fladd@b^0,f,c
  7997  001CFC  0E00               	movlw	0
  7998  001CFE  2202               	addwfc	(___fladd@b+1)^0,f,c
  7999  001D00  2203               	addwfc	(___fladd@b+2)^0,f,c
  8000  001D02  2204               	addwfc	(___fladd@b+3)^0,f,c
  8001  001D04  EF8C  F00E         	goto	l1365
  8002  001D08                     l4064:
  8003  001D08  5005               	movf	___fladd@a^0,w,c
  8004  001D0A  5E01               	subwf	___fladd@b^0,f,c
  8005  001D0C  5006               	movf	(___fladd@a+1)^0,w,c
  8006  001D0E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  8007  001D10  5007               	movf	(___fladd@a+2)^0,w,c
  8008  001D12  5A03               	subwfb	(___fladd@b+2)^0,f,c
  8009  001D14  5008               	movf	(___fladd@a+3)^0,w,c
  8010  001D16  5A04               	subwfb	(___fladd@b+3)^0,f,c
  8011  001D18                     l1365:
  8012  001D18  5001               	movf	___fladd@b^0,w,c
  8013  001D1A  1002               	iorwf	(___fladd@b+1)^0,w,c
  8014  001D1C  1003               	iorwf	(___fladd@b+2)^0,w,c
  8015  001D1E  1004               	iorwf	(___fladd@b+3)^0,w,c
  8016  001D20  A4D8               	btfss	status,2,c
  8017  001D22  EF95  F00E         	goto	u3691
  8018  001D26  EF97  F00E         	goto	u3690
  8019  001D2A                     u3691:
  8020  001D2A  EFCC  F00E         	goto	l4088
  8021  001D2E                     u3690:
  8022  001D2E  5010               	movf	___fladd@grs^0,w,c
  8023  001D30  A4D8               	btfss	status,2,c
  8024  001D32  EF9D  F00E         	goto	u3701
  8025  001D36  EF9F  F00E         	goto	u3700
  8026  001D3A                     u3701:
  8027  001D3A  EFCC  F00E         	goto	l4088
  8028  001D3E                     u3700:
  8029  001D3E  0E00               	movlw	0
  8030  001D40  6E01               	movwf	?___fladd^0,c
  8031  001D42  0E00               	movlw	0
  8032  001D44  6E02               	movwf	(?___fladd+1)^0,c
  8033  001D46  0E00               	movlw	0
  8034  001D48  6E03               	movwf	(?___fladd+2)^0,c
  8035  001D4A  0E00               	movlw	0
  8036  001D4C  6E04               	movwf	(?___fladd+3)^0,c
  8037  001D4E  EF67  F00F         	goto	l1357
  8038  001D52                     l4072:
  8039  001D52  90D8               	bcf	status,0,c
  8040  001D54  3601               	rlcf	___fladd@b^0,f,c
  8041  001D56  3602               	rlcf	(___fladd@b+1)^0,f,c
  8042  001D58  3603               	rlcf	(___fladd@b+2)^0,f,c
  8043  001D5A  3604               	rlcf	(___fladd@b+3)^0,f,c
  8044  001D5C  AE10               	btfss	___fladd@grs^0,7,c
  8045  001D5E  EFB3  F00E         	goto	u3711
  8046  001D62  EFB5  F00E         	goto	u3710
  8047  001D66                     u3711:
  8048  001D66  EFB6  F00E         	goto	l4078
  8049  001D6A                     u3710:
  8050  001D6A  8001               	bsf	___fladd@b^0,0,c
  8051  001D6C                     l4078:
  8052  001D6C  A010               	btfss	___fladd@grs^0,0,c
  8053  001D6E  EFBB  F00E         	goto	u3721
  8054  001D72  EFBD  F00E         	goto	u3720
  8055  001D76                     u3721:
  8056  001D76  EFC1  F00E         	goto	l4082
  8057  001D7A                     u3720:
  8058  001D7A  80D8               	bsf	status,0,c
  8059  001D7C  3610               	rlcf	___fladd@grs^0,f,c
  8060  001D7E  EFC3  F00E         	goto	l4084
  8061  001D82                     l4082:
  8062  001D82  90D8               	bcf	status,0,c
  8063  001D84  3610               	rlcf	___fladd@grs^0,f,c
  8064  001D86                     l4084:
  8065  001D86  500F               	movf	___fladd@bexp^0,w,c
  8066  001D88  B4D8               	btfsc	status,2,c
  8067  001D8A  EFC9  F00E         	goto	u3731
  8068  001D8E  EFCB  F00E         	goto	u3730
  8069  001D92                     u3731:
  8070  001D92  EFCC  F00E         	goto	l4088
  8071  001D96                     u3730:
  8072  001D96  060F               	decf	___fladd@bexp^0,f,c
  8073  001D98                     l4088:
  8074  001D98  AE03               	btfss	(___fladd@b+2)^0,7,c
  8075  001D9A  EFD1  F00E         	goto	u3741
  8076  001D9E  EFD3  F00E         	goto	u3740
  8077  001DA2                     u3741:
  8078  001DA2  EFA9  F00E         	goto	l4072
  8079  001DA6                     u3740:
  8080  001DA6                     l4090:
  8081  001DA6  0E00               	movlw	0
  8082  001DA8  6E0E               	movwf	___fladd@aexp^0,c
  8083  001DAA  AE10               	btfss	___fladd@grs^0,7,c
  8084  001DAC  EFDA  F00E         	goto	u3751
  8085  001DB0  EFDC  F00E         	goto	u3750
  8086  001DB4                     u3751:
  8087  001DB4  EFF4  F00E         	goto	l1374
  8088  001DB8                     u3750:
  8089  001DB8  C010  F009         	movff	___fladd@grs,??___fladd
  8090  001DBC  0E7F               	movlw	127
  8091  001DBE  1609               	andwf	??___fladd^0,f,c
  8092  001DC0  B4D8               	btfsc	status,2,c
  8093  001DC2  EFE5  F00E         	goto	u3761
  8094  001DC6  EFE7  F00E         	goto	u3760
  8095  001DCA                     u3761:
  8096  001DCA  EFEB  F00E         	goto	l1375
  8097  001DCE                     u3760:
  8098  001DCE                     l4096:
  8099  001DCE  0E01               	movlw	1
  8100  001DD0  6E0E               	movwf	___fladd@aexp^0,c
  8101  001DD2  EFF4  F00E         	goto	l1374
  8102  001DD6                     l1375:
  8103  001DD6  A001               	btfss	___fladd@b^0,0,c
  8104  001DD8  EFF0  F00E         	goto	u3771
  8105  001DDC  EFF2  F00E         	goto	u3770
  8106  001DE0                     u3771:
  8107  001DE0  EFF4  F00E         	goto	l1374
  8108  001DE4                     u3770:
  8109  001DE4  EFE7  F00E         	goto	l4096
  8110  001DE8                     l1374:
  8111  001DE8  500E               	movf	___fladd@aexp^0,w,c
  8112  001DEA  B4D8               	btfsc	status,2,c
  8113  001DEC  EFFA  F00E         	goto	u3781
  8114  001DF0  EFFC  F00E         	goto	u3780
  8115  001DF4                     u3781:
  8116  001DF4  EF27  F00F         	goto	l4108
  8117  001DF8                     u3780:
  8118  001DF8  0E01               	movlw	1
  8119  001DFA  2601               	addwf	___fladd@b^0,f,c
  8120  001DFC  0E00               	movlw	0
  8121  001DFE  2202               	addwfc	(___fladd@b+1)^0,f,c
  8122  001E00  2203               	addwfc	(___fladd@b+2)^0,f,c
  8123  001E02  2204               	addwfc	(___fladd@b+3)^0,f,c
  8124  001E04  A004               	btfss	(___fladd@b+3)^0,0,c
  8125  001E06  EF07  F00F         	goto	u3791
  8126  001E0A  EF09  F00F         	goto	u3790
  8127  001E0E                     u3791:
  8128  001E0E  EF27  F00F         	goto	l4108
  8129  001E12                     u3790:
  8130  001E12  C001  F009         	movff	___fladd@b,??___fladd
  8131  001E16  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8132  001E1A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8133  001E1E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8134  001E22  340C               	rlcf	(??___fladd+3)^0,w,c
  8135  001E24  320C               	rrcf	(??___fladd+3)^0,f,c
  8136  001E26  320B               	rrcf	(??___fladd+2)^0,f,c
  8137  001E28  320A               	rrcf	(??___fladd+1)^0,f,c
  8138  001E2A  3209               	rrcf	??___fladd^0,f,c
  8139  001E2C  C009  F001         	movff	??___fladd,___fladd@b
  8140  001E30  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8141  001E34  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8142  001E38  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8143  001E3C  280F               	incf	___fladd@bexp^0,w,c
  8144  001E3E  B4D8               	btfsc	status,2,c
  8145  001E40  EF24  F00F         	goto	u3801
  8146  001E44  EF26  F00F         	goto	u3800
  8147  001E48                     u3801:
  8148  001E48  EF27  F00F         	goto	l4108
  8149  001E4C                     u3800:
  8150  001E4C  2A0F               	incf	___fladd@bexp^0,f,c
  8151  001E4E                     l4108:
  8152  001E4E  280F               	incf	___fladd@bexp^0,w,c
  8153  001E50  B4D8               	btfsc	status,2,c
  8154  001E52  EF2D  F00F         	goto	u3811
  8155  001E56  EF2F  F00F         	goto	u3810
  8156  001E5A                     u3811:
  8157  001E5A  EF37  F00F         	goto	l4112
  8158  001E5E                     u3810:
  8159  001E5E  500F               	movf	___fladd@bexp^0,w,c
  8160  001E60  A4D8               	btfss	status,2,c
  8161  001E62  EF35  F00F         	goto	u3821
  8162  001E66  EF37  F00F         	goto	u3820
  8163  001E6A                     u3821:
  8164  001E6A  EF49  F00F         	goto	l4116
  8165  001E6E                     u3820:
  8166  001E6E                     l4112:
  8167  001E6E  0E00               	movlw	0
  8168  001E70  6E01               	movwf	___fladd@b^0,c
  8169  001E72  0E00               	movlw	0
  8170  001E74  6E02               	movwf	(___fladd@b+1)^0,c
  8171  001E76  0E00               	movlw	0
  8172  001E78  6E03               	movwf	(___fladd@b+2)^0,c
  8173  001E7A  0E00               	movlw	0
  8174  001E7C  6E04               	movwf	(___fladd@b+3)^0,c
  8175  001E7E  500F               	movf	___fladd@bexp^0,w,c
  8176  001E80  A4D8               	btfss	status,2,c
  8177  001E82  EF45  F00F         	goto	u3831
  8178  001E86  EF47  F00F         	goto	u3830
  8179  001E8A                     u3831:
  8180  001E8A  EF49  F00F         	goto	l4116
  8181  001E8E                     u3830:
  8182  001E8E  0E00               	movlw	0
  8183  001E90  6E0D               	movwf	___fladd@signs^0,c
  8184  001E92                     l4116:
  8185  001E92  A00F               	btfss	___fladd@bexp^0,0,c
  8186  001E94  EF4E  F00F         	goto	u3841
  8187  001E98  EF50  F00F         	goto	u3840
  8188  001E9C                     u3841:
  8189  001E9C  EF53  F00F         	goto	l4120
  8190  001EA0                     u3840:
  8191  001EA0  8E03               	bsf	(___fladd@b+2)^0,7,c
  8192  001EA2  EF54  F00F         	goto	l4122
  8193  001EA6                     l4120:
  8194  001EA6  9E03               	bcf	(___fladd@b+2)^0,7,c
  8195  001EA8                     l4122:
  8196  001EA8  90D8               	bcf	status,0,c
  8197  001EAA  300F               	rrcf	___fladd@bexp^0,w,c
  8198  001EAC  6E04               	movwf	(___fladd@b+3)^0,c
  8199  001EAE  AE0D               	btfss	___fladd@signs^0,7,c
  8200  001EB0  EF5C  F00F         	goto	u3851
  8201  001EB4  EF5E  F00F         	goto	u3850
  8202  001EB8                     u3851:
  8203  001EB8  EF5F  F00F         	goto	l4128
  8204  001EBC                     u3850:
  8205  001EBC  8E04               	bsf	(___fladd@b+3)^0,7,c
  8206  001EBE                     l4128:
  8207  001EBE  C001  F001         	movff	___fladd@b,?___fladd
  8208  001EC2  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8209  001EC6  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8210  001ECA  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8211  001ECE                     l1357:
  8212  001ECE  0012               	return		;funcret
  8213  001ED0                     __end_of___fladd:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function ___flneg *****************
  8217 ;; Defined at:
  8218 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  f1              4    0[COMRAM] unsigned char 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  4    0[COMRAM] unsigned char 
  8225 ;; Registers used:
  8226 ;;		wreg, status,2, status,0
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8235 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8236 ;;Total ram usage:        4 bytes
  8237 ;; Hardware stack levels used: 1
  8238 ;; Hardware stack levels required when called: 1
  8239 ;; This function calls:
  8240 ;;		Nothing
  8241 ;; This function is called by:
  8242 ;;		_roundf
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           	psect	text37
  8247  005AA0                     __ptext37:
  8248                           	callstack 0
  8249  005AA0                     ___flneg:
  8250                           	callstack 25
  8251  005AA0  5001               	movf	___flneg@f1^0,w,c
  8252  005AA2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8253  005AA4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8254  005AA6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8255  005AA8  B4D8               	btfsc	status,2,c
  8256  005AAA  EF59  F02D         	goto	u4211
  8257  005AAE  EF5B  F02D         	goto	u4210
  8258  005AB2                     u4211:
  8259  005AB2  EF63  F02D         	goto	l4392
  8260  005AB6                     u4210:
  8261  005AB6  0E00               	movlw	0
  8262  005AB8  1A01               	xorwf	___flneg@f1^0,f,c
  8263  005ABA  0E00               	movlw	0
  8264  005ABC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8265  005ABE  0E00               	movlw	0
  8266  005AC0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8267  005AC2  0E80               	movlw	128
  8268  005AC4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8269  005AC6                     l4392:
  8270  005AC6  C001  F001         	movff	___flneg@f1,?___flneg
  8271  005ACA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8272  005ACE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8273  005AD2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8274  005AD6  0012               	return		;funcret
  8275  005AD8                     __end_of___flneg:
  8276                           	callstack 0
  8277                           
  8278 ;; *************** function ___flmul *****************
  8279 ;; Defined at:
  8280 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;  b               4   39[COMRAM] unsigned char 
  8283 ;;  a               4   43[COMRAM] unsigned char 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  prod            4   58[COMRAM] struct .
  8286 ;;  grs             4   52[COMRAM] unsigned long 
  8287 ;;  temp            2   62[COMRAM] struct .
  8288 ;;  bexp            1   57[COMRAM] unsigned char 
  8289 ;;  aexp            1   56[COMRAM] unsigned char 
  8290 ;;  sign            1   51[COMRAM] unsigned char 
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  4   39[COMRAM] unsigned char 
  8293 ;; Registers used:
  8294 ;;		wreg, status,2, status,0, prodl, prodh
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8300 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8301 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;Total ram usage:       25 bytes
  8305 ;; Hardware stack levels used: 1
  8306 ;; Hardware stack levels required when called: 1
  8307 ;; This function calls:
  8308 ;;		Nothing
  8309 ;; This function is called by:
  8310 ;;		_detect_color
  8311 ;;		_distance_measure
  8312 ;;		_roundf
  8313 ;;		_check_color_reading
  8314 ;; This function uses a non-reentrant model
  8315 ;;
  8316                           
  8317                           	psect	text38
  8318  001ED0                     __ptext38:
  8319                           	callstack 0
  8320  001ED0                     ___flmul:
  8321                           	callstack 25
  8322  001ED0  502B               	movf	(___flmul@b+3)^0,w,c
  8323  001ED2  0B80               	andlw	128
  8324  001ED4  6E34               	movwf	___flmul@sign^0,c
  8325  001ED6  502B               	movf	(___flmul@b+3)^0,w,c
  8326  001ED8  242B               	addwf	(___flmul@b+3)^0,w,c
  8327  001EDA  6E3A               	movwf	___flmul@bexp^0,c
  8328  001EDC  AE2A               	btfss	(___flmul@b+2)^0,7,c
  8329  001EDE  EF73  F00F         	goto	u3971
  8330  001EE2  EF75  F00F         	goto	u3970
  8331  001EE6                     u3971:
  8332  001EE6  EF76  F00F         	goto	l4236
  8333  001EEA                     u3970:
  8334  001EEA  803A               	bsf	___flmul@bexp^0,0,c
  8335  001EEC                     l4236:
  8336  001EEC  503A               	movf	___flmul@bexp^0,w,c
  8337  001EEE  B4D8               	btfsc	status,2,c
  8338  001EF0  EF7C  F00F         	goto	u3981
  8339  001EF4  EF7E  F00F         	goto	u3980
  8340  001EF8                     u3981:
  8341  001EF8  EF91  F00F         	goto	l4244
  8342  001EFC                     u3980:
  8343  001EFC  283A               	incf	___flmul@bexp^0,w,c
  8344  001EFE  A4D8               	btfss	status,2,c
  8345  001F00  EF84  F00F         	goto	u3991
  8346  001F04  EF86  F00F         	goto	u3990
  8347  001F08                     u3991:
  8348  001F08  EF8E  F00F         	goto	l4242
  8349  001F0C                     u3990:
  8350  001F0C  0E00               	movlw	0
  8351  001F0E  6E28               	movwf	___flmul@b^0,c
  8352  001F10  0E00               	movlw	0
  8353  001F12  6E29               	movwf	(___flmul@b+1)^0,c
  8354  001F14  0E00               	movlw	0
  8355  001F16  6E2A               	movwf	(___flmul@b+2)^0,c
  8356  001F18  0E00               	movlw	0
  8357  001F1A  6E2B               	movwf	(___flmul@b+3)^0,c
  8358  001F1C                     l4242:
  8359  001F1C  8E2A               	bsf	(___flmul@b+2)^0,7,c
  8360  001F1E  EF99  F00F         	goto	l4246
  8361  001F22                     l4244:
  8362  001F22  0E00               	movlw	0
  8363  001F24  6E28               	movwf	___flmul@b^0,c
  8364  001F26  0E00               	movlw	0
  8365  001F28  6E29               	movwf	(___flmul@b+1)^0,c
  8366  001F2A  0E00               	movlw	0
  8367  001F2C  6E2A               	movwf	(___flmul@b+2)^0,c
  8368  001F2E  0E00               	movlw	0
  8369  001F30  6E2B               	movwf	(___flmul@b+3)^0,c
  8370  001F32                     l4246:
  8371  001F32  502F               	movf	(___flmul@a+3)^0,w,c
  8372  001F34  0B80               	andlw	128
  8373  001F36  1A34               	xorwf	___flmul@sign^0,f,c
  8374  001F38  502F               	movf	(___flmul@a+3)^0,w,c
  8375  001F3A  242F               	addwf	(___flmul@a+3)^0,w,c
  8376  001F3C  6E39               	movwf	___flmul@aexp^0,c
  8377  001F3E  AE2E               	btfss	(___flmul@a+2)^0,7,c
  8378  001F40  EFA4  F00F         	goto	u4001
  8379  001F44  EFA6  F00F         	goto	u4000
  8380  001F48                     u4001:
  8381  001F48  EFA7  F00F         	goto	l4254
  8382  001F4C                     u4000:
  8383  001F4C  8039               	bsf	___flmul@aexp^0,0,c
  8384  001F4E                     l4254:
  8385  001F4E  5039               	movf	___flmul@aexp^0,w,c
  8386  001F50  B4D8               	btfsc	status,2,c
  8387  001F52  EFAD  F00F         	goto	u4011
  8388  001F56  EFAF  F00F         	goto	u4010
  8389  001F5A                     u4011:
  8390  001F5A  EFC2  F00F         	goto	l4262
  8391  001F5E                     u4010:
  8392  001F5E  2839               	incf	___flmul@aexp^0,w,c
  8393  001F60  A4D8               	btfss	status,2,c
  8394  001F62  EFB5  F00F         	goto	u4021
  8395  001F66  EFB7  F00F         	goto	u4020
  8396  001F6A                     u4021:
  8397  001F6A  EFBF  F00F         	goto	l4260
  8398  001F6E                     u4020:
  8399  001F6E  0E00               	movlw	0
  8400  001F70  6E2C               	movwf	___flmul@a^0,c
  8401  001F72  0E00               	movlw	0
  8402  001F74  6E2D               	movwf	(___flmul@a+1)^0,c
  8403  001F76  0E00               	movlw	0
  8404  001F78  6E2E               	movwf	(___flmul@a+2)^0,c
  8405  001F7A  0E00               	movlw	0
  8406  001F7C  6E2F               	movwf	(___flmul@a+3)^0,c
  8407  001F7E                     l4260:
  8408  001F7E  8E2E               	bsf	(___flmul@a+2)^0,7,c
  8409  001F80  EFCA  F00F         	goto	l1434
  8410  001F84                     l4262:
  8411  001F84  0E00               	movlw	0
  8412  001F86  6E2C               	movwf	___flmul@a^0,c
  8413  001F88  0E00               	movlw	0
  8414  001F8A  6E2D               	movwf	(___flmul@a+1)^0,c
  8415  001F8C  0E00               	movlw	0
  8416  001F8E  6E2E               	movwf	(___flmul@a+2)^0,c
  8417  001F90  0E00               	movlw	0
  8418  001F92  6E2F               	movwf	(___flmul@a+3)^0,c
  8419  001F94                     l1434:
  8420  001F94  5039               	movf	___flmul@aexp^0,w,c
  8421  001F96  B4D8               	btfsc	status,2,c
  8422  001F98  EFD0  F00F         	goto	u4031
  8423  001F9C  EFD2  F00F         	goto	u4030
  8424  001FA0                     u4031:
  8425  001FA0  EFDA  F00F         	goto	l4266
  8426  001FA4                     u4030:
  8427  001FA4  503A               	movf	___flmul@bexp^0,w,c
  8428  001FA6  A4D8               	btfss	status,2,c
  8429  001FA8  EFD8  F00F         	goto	u4041
  8430  001FAC  EFDA  F00F         	goto	u4040
  8431  001FB0                     u4041:
  8432  001FB0  EFE4  F00F         	goto	l4270
  8433  001FB4                     u4040:
  8434  001FB4                     l4266:
  8435  001FB4  0E00               	movlw	0
  8436  001FB6  6E28               	movwf	?___flmul^0,c
  8437  001FB8  0E00               	movlw	0
  8438  001FBA  6E29               	movwf	(?___flmul+1)^0,c
  8439  001FBC  0E00               	movlw	0
  8440  001FBE  6E2A               	movwf	(?___flmul+2)^0,c
  8441  001FC0  0E00               	movlw	0
  8442  001FC2  6E2B               	movwf	(?___flmul+3)^0,c
  8443  001FC4  EF7C  F011         	goto	l1438
  8444  001FC8                     l4270:
  8445  001FC8  502E               	movf	(___flmul@a+2)^0,w,c
  8446  001FCA  0228               	mulwf	___flmul@b^0,c
  8447  001FCC  CFF3 F03F          	movff	prodl,___flmul@temp
  8448  001FD0  CFF4 F040          	movff	prodh,___flmul@temp+1
  8449  001FD4  503F               	movf	___flmul@temp^0,w,c
  8450  001FD6  6E35               	movwf	___flmul@grs^0,c
  8451  001FD8  6A36               	clrf	(___flmul@grs+1)^0,c
  8452  001FDA  6A37               	clrf	(___flmul@grs+2)^0,c
  8453  001FDC  6A38               	clrf	(___flmul@grs+3)^0,c
  8454  001FDE  5040               	movf	(___flmul@temp+1)^0,w,c
  8455  001FE0  6E3B               	movwf	___flmul@prod^0,c
  8456  001FE2  6A3C               	clrf	(___flmul@prod+1)^0,c
  8457  001FE4  6A3D               	clrf	(___flmul@prod+2)^0,c
  8458  001FE6  6A3E               	clrf	(___flmul@prod+3)^0,c
  8459  001FE8  502D               	movf	(___flmul@a+1)^0,w,c
  8460  001FEA  0229               	mulwf	(___flmul@b+1)^0,c
  8461  001FEC  CFF3 F03F          	movff	prodl,___flmul@temp
  8462  001FF0  CFF4 F040          	movff	prodh,___flmul@temp+1
  8463  001FF4  503F               	movf	___flmul@temp^0,w,c
  8464  001FF6  2635               	addwf	___flmul@grs^0,f,c
  8465  001FF8  0E00               	movlw	0
  8466  001FFA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8467  001FFC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8468  001FFE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8469  002000  5040               	movf	(___flmul@temp+1)^0,w,c
  8470  002002  263B               	addwf	___flmul@prod^0,f,c
  8471  002004  0E00               	movlw	0
  8472  002006  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8473  002008  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8474  00200A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8475  00200C  502C               	movf	___flmul@a^0,w,c
  8476  00200E  022A               	mulwf	(___flmul@b+2)^0,c
  8477  002010  CFF3 F03F          	movff	prodl,___flmul@temp
  8478  002014  CFF4 F040          	movff	prodh,___flmul@temp+1
  8479  002018  503F               	movf	___flmul@temp^0,w,c
  8480  00201A  2635               	addwf	___flmul@grs^0,f,c
  8481  00201C  0E00               	movlw	0
  8482  00201E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8483  002020  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8484  002022  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8485  002024  5040               	movf	(___flmul@temp+1)^0,w,c
  8486  002026  263B               	addwf	___flmul@prod^0,f,c
  8487  002028  0E00               	movlw	0
  8488  00202A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8489  00202C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8490  00202E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8491  002030  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8492  002034  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8493  002038  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8494  00203C  6A35               	clrf	___flmul@grs^0,c
  8495  00203E  502C               	movf	___flmul@a^0,w,c
  8496  002040  0229               	mulwf	(___flmul@b+1)^0,c
  8497  002042  CFF3 F03F          	movff	prodl,___flmul@temp
  8498  002046  CFF4 F040          	movff	prodh,___flmul@temp+1
  8499  00204A  503F               	movf	___flmul@temp^0,w,c
  8500  00204C  2635               	addwf	___flmul@grs^0,f,c
  8501  00204E  5040               	movf	(___flmul@temp+1)^0,w,c
  8502  002050  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8503  002052  0E00               	movlw	0
  8504  002054  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8505  002056  0E00               	movlw	0
  8506  002058  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8507  00205A  502D               	movf	(___flmul@a+1)^0,w,c
  8508  00205C  0228               	mulwf	___flmul@b^0,c
  8509  00205E  CFF3 F03F          	movff	prodl,___flmul@temp
  8510  002062  CFF4 F040          	movff	prodh,___flmul@temp+1
  8511  002066  503F               	movf	___flmul@temp^0,w,c
  8512  002068  2635               	addwf	___flmul@grs^0,f,c
  8513  00206A  5040               	movf	(___flmul@temp+1)^0,w,c
  8514  00206C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8515  00206E  0E00               	movlw	0
  8516  002070  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8517  002072  0E00               	movlw	0
  8518  002074  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8519  002076  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8520  00207A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8521  00207E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8522  002082  6A35               	clrf	___flmul@grs^0,c
  8523  002084  502C               	movf	___flmul@a^0,w,c
  8524  002086  0228               	mulwf	___flmul@b^0,c
  8525  002088  CFF3 F03F          	movff	prodl,___flmul@temp
  8526  00208C  CFF4 F040          	movff	prodh,___flmul@temp+1
  8527  002090  503F               	movf	___flmul@temp^0,w,c
  8528  002092  2635               	addwf	___flmul@grs^0,f,c
  8529  002094  5040               	movf	(___flmul@temp+1)^0,w,c
  8530  002096  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8531  002098  0E00               	movlw	0
  8532  00209A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8533  00209C  0E00               	movlw	0
  8534  00209E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8535  0020A0  502E               	movf	(___flmul@a+2)^0,w,c
  8536  0020A2  0229               	mulwf	(___flmul@b+1)^0,c
  8537  0020A4  CFF3 F03F          	movff	prodl,___flmul@temp
  8538  0020A8  CFF4 F040          	movff	prodh,___flmul@temp+1
  8539  0020AC  503F               	movf	___flmul@temp^0,w,c
  8540  0020AE  263B               	addwf	___flmul@prod^0,f,c
  8541  0020B0  5040               	movf	(___flmul@temp+1)^0,w,c
  8542  0020B2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8543  0020B4  0E00               	movlw	0
  8544  0020B6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8545  0020B8  0E00               	movlw	0
  8546  0020BA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8547  0020BC  502D               	movf	(___flmul@a+1)^0,w,c
  8548  0020BE  022A               	mulwf	(___flmul@b+2)^0,c
  8549  0020C0  CFF3 F03F          	movff	prodl,___flmul@temp
  8550  0020C4  CFF4 F040          	movff	prodh,___flmul@temp+1
  8551  0020C8  503F               	movf	___flmul@temp^0,w,c
  8552  0020CA  263B               	addwf	___flmul@prod^0,f,c
  8553  0020CC  5040               	movf	(___flmul@temp+1)^0,w,c
  8554  0020CE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8555  0020D0  0E00               	movlw	0
  8556  0020D2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8557  0020D4  0E00               	movlw	0
  8558  0020D6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8559  0020D8  502E               	movf	(___flmul@a+2)^0,w,c
  8560  0020DA  022A               	mulwf	(___flmul@b+2)^0,c
  8561  0020DC  CFF3 F03F          	movff	prodl,___flmul@temp
  8562  0020E0  CFF4 F040          	movff	prodh,___flmul@temp+1
  8563  0020E4  503F               	movf	___flmul@temp^0,w,c
  8564  0020E6  6E30               	movwf	??___flmul^0,c
  8565  0020E8  5040               	movf	(___flmul@temp+1)^0,w,c
  8566  0020EA  6E31               	movwf	(??___flmul+1)^0,c
  8567  0020EC  6A32               	clrf	(??___flmul+2)^0,c
  8568  0020EE  6A33               	clrf	(??___flmul+3)^0,c
  8569  0020F0  C032  F033         	movff	??___flmul+2,??___flmul+3
  8570  0020F4  C031  F032         	movff	??___flmul+1,??___flmul+2
  8571  0020F8  C030  F031         	movff	??___flmul,??___flmul+1
  8572  0020FC  6A30               	clrf	??___flmul^0,c
  8573  0020FE  5030               	movf	??___flmul^0,w,c
  8574  002100  263B               	addwf	___flmul@prod^0,f,c
  8575  002102  5031               	movf	(??___flmul+1)^0,w,c
  8576  002104  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8577  002106  5032               	movf	(??___flmul+2)^0,w,c
  8578  002108  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8579  00210A  5033               	movf	(??___flmul+3)^0,w,c
  8580  00210C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8581  00210E  C035  F030         	movff	___flmul@grs,??___flmul
  8582  002112  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  8583  002116  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  8584  00211A  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  8585  00211E  0E19               	movlw	25
  8586  002120  EF97  F010         	goto	u4050
  8587  002124                     u4055:
  8588  002124  90D8               	bcf	status,0,c
  8589  002126  3233               	rrcf	(??___flmul+3)^0,f,c
  8590  002128  3232               	rrcf	(??___flmul+2)^0,f,c
  8591  00212A  3231               	rrcf	(??___flmul+1)^0,f,c
  8592  00212C  3230               	rrcf	??___flmul^0,f,c
  8593  00212E                     u4050:
  8594  00212E  2EE8               	decfsz	wreg,f,c
  8595  002130  EF92  F010         	goto	u4055
  8596  002134  5030               	movf	??___flmul^0,w,c
  8597  002136  263B               	addwf	___flmul@prod^0,f,c
  8598  002138  5031               	movf	(??___flmul+1)^0,w,c
  8599  00213A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8600  00213C  5032               	movf	(??___flmul+2)^0,w,c
  8601  00213E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8602  002140  5033               	movf	(??___flmul+3)^0,w,c
  8603  002142  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8604  002144  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8605  002148  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8606  00214C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8607  002150  6A35               	clrf	___flmul@grs^0,c
  8608  002152  5039               	movf	___flmul@aexp^0,w,c
  8609  002154  C03A  F030         	movff	___flmul@bexp,??___flmul
  8610  002158  6A31               	clrf	(??___flmul+1)^0,c
  8611  00215A  2630               	addwf	??___flmul^0,f,c
  8612  00215C  0E00               	movlw	0
  8613  00215E  2231               	addwfc	(??___flmul+1)^0,f,c
  8614  002160  0E82               	movlw	130
  8615  002162  2430               	addwf	??___flmul^0,w,c
  8616  002164  6E3F               	movwf	___flmul@temp^0,c
  8617  002166  0EFF               	movlw	255
  8618  002168  2031               	addwfc	(??___flmul+1)^0,w,c
  8619  00216A  6E40               	movwf	(___flmul@temp+1)^0,c
  8620  00216C  EFCD  F010         	goto	l4318
  8621  002170                     l4312:
  8622  002170  90D8               	bcf	status,0,c
  8623  002172  363B               	rlcf	___flmul@prod^0,f,c
  8624  002174  363C               	rlcf	(___flmul@prod+1)^0,f,c
  8625  002176  363D               	rlcf	(___flmul@prod+2)^0,f,c
  8626  002178  363E               	rlcf	(___flmul@prod+3)^0,f,c
  8627  00217A  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8628  00217C  EFC2  F010         	goto	u4061
  8629  002180  EFC4  F010         	goto	u4060
  8630  002184                     u4061:
  8631  002184  EFC5  F010         	goto	l1441
  8632  002188                     u4060:
  8633  002188  803B               	bsf	___flmul@prod^0,0,c
  8634  00218A                     l1441:
  8635  00218A  90D8               	bcf	status,0,c
  8636  00218C  3635               	rlcf	___flmul@grs^0,f,c
  8637  00218E  3636               	rlcf	(___flmul@grs+1)^0,f,c
  8638  002190  3637               	rlcf	(___flmul@grs+2)^0,f,c
  8639  002192  3638               	rlcf	(___flmul@grs+3)^0,f,c
  8640  002194  063F               	decf	___flmul@temp^0,f,c
  8641  002196  A0D8               	btfss	status,0,c
  8642  002198  0640               	decf	(___flmul@temp+1)^0,f,c
  8643  00219A                     l4318:
  8644  00219A  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  8645  00219C  EFD2  F010         	goto	u4071
  8646  0021A0  EFD4  F010         	goto	u4070
  8647  0021A4                     u4071:
  8648  0021A4  EFB8  F010         	goto	l4312
  8649  0021A8                     u4070:
  8650  0021A8  0E00               	movlw	0
  8651  0021AA  6E39               	movwf	___flmul@aexp^0,c
  8652  0021AC  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8653  0021AE  EFDB  F010         	goto	u4081
  8654  0021B2  EFDD  F010         	goto	u4080
  8655  0021B6                     u4081:
  8656  0021B6  EF01  F011         	goto	l1443
  8657  0021BA                     u4080:
  8658  0021BA  0EFF               	movlw	255
  8659  0021BC  1435               	andwf	___flmul@grs^0,w,c
  8660  0021BE  6E30               	movwf	??___flmul^0,c
  8661  0021C0  0EFF               	movlw	255
  8662  0021C2  1436               	andwf	(___flmul@grs+1)^0,w,c
  8663  0021C4  6E31               	movwf	(??___flmul+1)^0,c
  8664  0021C6  0EFF               	movlw	255
  8665  0021C8  1437               	andwf	(___flmul@grs+2)^0,w,c
  8666  0021CA  6E32               	movwf	(??___flmul+2)^0,c
  8667  0021CC  0E7F               	movlw	127
  8668  0021CE  1438               	andwf	(___flmul@grs+3)^0,w,c
  8669  0021D0  6E33               	movwf	(??___flmul+3)^0,c
  8670  0021D2  5030               	movf	??___flmul^0,w,c
  8671  0021D4  1031               	iorwf	(??___flmul+1)^0,w,c
  8672  0021D6  1032               	iorwf	(??___flmul+2)^0,w,c
  8673  0021D8  1033               	iorwf	(??___flmul+3)^0,w,c
  8674  0021DA  B4D8               	btfsc	status,2,c
  8675  0021DC  EFF2  F010         	goto	u4091
  8676  0021E0  EFF4  F010         	goto	u4090
  8677  0021E4                     u4091:
  8678  0021E4  EFF8  F010         	goto	l1444
  8679  0021E8                     u4090:
  8680  0021E8                     l4326:
  8681  0021E8  0E01               	movlw	1
  8682  0021EA  6E39               	movwf	___flmul@aexp^0,c
  8683  0021EC  EF01  F011         	goto	l1443
  8684  0021F0                     l1444:
  8685  0021F0  A03B               	btfss	___flmul@prod^0,0,c
  8686  0021F2  EFFD  F010         	goto	u4101
  8687  0021F6  EFFF  F010         	goto	u4100
  8688  0021FA                     u4101:
  8689  0021FA  EF01  F011         	goto	l1443
  8690  0021FE                     u4100:
  8691  0021FE  EFF4  F010         	goto	l4326
  8692  002202                     l1443:
  8693  002202  5039               	movf	___flmul@aexp^0,w,c
  8694  002204  B4D8               	btfsc	status,2,c
  8695  002206  EF07  F011         	goto	u4111
  8696  00220A  EF09  F011         	goto	u4110
  8697  00220E                     u4111:
  8698  00220E  EF2D  F011         	goto	l4338
  8699  002212                     u4110:
  8700  002212  0E01               	movlw	1
  8701  002214  263B               	addwf	___flmul@prod^0,f,c
  8702  002216  0E00               	movlw	0
  8703  002218  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8704  00221A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8705  00221C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8706  00221E  A03E               	btfss	(___flmul@prod+3)^0,0,c
  8707  002220  EF14  F011         	goto	u4121
  8708  002224  EF16  F011         	goto	u4120
  8709  002228                     u4121:
  8710  002228  EF2D  F011         	goto	l4338
  8711  00222C                     u4120:
  8712  00222C  C03B  F030         	movff	___flmul@prod,??___flmul
  8713  002230  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  8714  002234  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  8715  002238  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  8716  00223C  3433               	rlcf	(??___flmul+3)^0,w,c
  8717  00223E  3233               	rrcf	(??___flmul+3)^0,f,c
  8718  002240  3232               	rrcf	(??___flmul+2)^0,f,c
  8719  002242  3231               	rrcf	(??___flmul+1)^0,f,c
  8720  002244  3230               	rrcf	??___flmul^0,f,c
  8721  002246  C030  F03B         	movff	??___flmul,___flmul@prod
  8722  00224A  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  8723  00224E  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  8724  002252  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  8725  002256  4A3F               	infsnz	___flmul@temp^0,f,c
  8726  002258  2A40               	incf	(___flmul@temp+1)^0,f,c
  8727  00225A                     l4338:
  8728  00225A  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8729  00225C  EF38  F011         	goto	u4131
  8730  002260  5040               	movf	(___flmul@temp+1)^0,w,c
  8731  002262  E108               	bnz	u4130
  8732  002264  283F               	incf	___flmul@temp^0,w,c
  8733  002266  A0D8               	btfss	status,0,c
  8734  002268  EF38  F011         	goto	u4131
  8735  00226C  EF3A  F011         	goto	u4130
  8736  002270                     u4131:
  8737  002270  EF44  F011         	goto	l4342
  8738  002274                     u4130:
  8739  002274  0E00               	movlw	0
  8740  002276  6E3B               	movwf	___flmul@prod^0,c
  8741  002278  0E00               	movlw	0
  8742  00227A  6E3C               	movwf	(___flmul@prod+1)^0,c
  8743  00227C  0E80               	movlw	128
  8744  00227E  6E3D               	movwf	(___flmul@prod+2)^0,c
  8745  002280  0E7F               	movlw	127
  8746  002282  6E3E               	movwf	(___flmul@prod+3)^0,c
  8747  002284  EF72  F011         	goto	l4354
  8748  002288                     l4342:
  8749  002288  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8750  00228A  EF51  F011         	goto	u4140
  8751  00228E  5040               	movf	(___flmul@temp+1)^0,w,c
  8752  002290  E106               	bnz	u4141
  8753  002292  043F               	decf	___flmul@temp^0,w,c
  8754  002294  B0D8               	btfsc	status,0,c
  8755  002296  EF4F  F011         	goto	u4141
  8756  00229A  EF51  F011         	goto	u4140
  8757  00229E                     u4141:
  8758  00229E  EF5D  F011         	goto	l1451
  8759  0022A2                     u4140:
  8760  0022A2  0E00               	movlw	0
  8761  0022A4  6E3B               	movwf	___flmul@prod^0,c
  8762  0022A6  0E00               	movlw	0
  8763  0022A8  6E3C               	movwf	(___flmul@prod+1)^0,c
  8764  0022AA  0E00               	movlw	0
  8765  0022AC  6E3D               	movwf	(___flmul@prod+2)^0,c
  8766  0022AE  0E00               	movlw	0
  8767  0022B0  6E3E               	movwf	(___flmul@prod+3)^0,c
  8768  0022B2  0E00               	movlw	0
  8769  0022B4  6E34               	movwf	___flmul@sign^0,c
  8770  0022B6  EF72  F011         	goto	l4354
  8771  0022BA                     l1451:
  8772  0022BA  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  8773  0022BE  0EFF               	movlw	255
  8774  0022C0  163B               	andwf	___flmul@prod^0,f,c
  8775  0022C2  0EFF               	movlw	255
  8776  0022C4  163C               	andwf	(___flmul@prod+1)^0,f,c
  8777  0022C6  0E7F               	movlw	127
  8778  0022C8  163D               	andwf	(___flmul@prod+2)^0,f,c
  8779  0022CA  0E00               	movlw	0
  8780  0022CC  163E               	andwf	(___flmul@prod+3)^0,f,c
  8781  0022CE  A03A               	btfss	___flmul@bexp^0,0,c
  8782  0022D0  EF6C  F011         	goto	u4151
  8783  0022D4  EF6E  F011         	goto	u4150
  8784  0022D8                     u4151:
  8785  0022D8  EF6F  F011         	goto	l4352
  8786  0022DC                     u4150:
  8787  0022DC  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  8788  0022DE                     l4352:
  8789  0022DE  90D8               	bcf	status,0,c
  8790  0022E0  303A               	rrcf	___flmul@bexp^0,w,c
  8791  0022E2  6E3E               	movwf	(___flmul@prod+3)^0,c
  8792  0022E4                     l4354:
  8793  0022E4  5034               	movf	___flmul@sign^0,w,c
  8794  0022E6  123E               	iorwf	(___flmul@prod+3)^0,f,c
  8795  0022E8  C03B  F028         	movff	___flmul@prod,?___flmul
  8796  0022EC  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  8797  0022F0  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  8798  0022F4  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  8799  0022F8                     l1438:
  8800  0022F8  0012               	return		;funcret
  8801  0022FA                     __end_of___flmul:
  8802                           	callstack 0
  8803                           
  8804 ;; *************** function ___flge *****************
  8805 ;; Defined at:
  8806 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  8807 ;; Parameters:    Size  Location     Type
  8808 ;;  ff1             4    0[COMRAM] unsigned char 
  8809 ;;  ff2             4    4[COMRAM] unsigned char 
  8810 ;; Auto vars:     Size  Location     Type
  8811 ;;		None
  8812 ;; Return value:  Size  Location     Type
  8813 ;;		None               void
  8814 ;; Registers used:
  8815 ;;		wreg, status,2, status,0
  8816 ;; Tracked objects:
  8817 ;;		On entry : 0/0
  8818 ;;		On exit  : 0/0
  8819 ;;		Unchanged: 0/0
  8820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8821 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8825 ;;Total ram usage:       12 bytes
  8826 ;; Hardware stack levels used: 1
  8827 ;; Hardware stack levels required when called: 1
  8828 ;; This function calls:
  8829 ;;		Nothing
  8830 ;; This function is called by:
  8831 ;;		_roundf
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text39
  8836  004C62                     __ptext39:
  8837                           	callstack 0
  8838  004C62                     ___flge:
  8839                           	callstack 25
  8840  004C62  0E00               	movlw	0
  8841  004C64  1401               	andwf	___flge@ff1^0,w,c
  8842  004C66  6E09               	movwf	??___flge^0,c
  8843  004C68  0E00               	movlw	0
  8844  004C6A  1402               	andwf	(___flge@ff1+1)^0,w,c
  8845  004C6C  6E0A               	movwf	(??___flge+1)^0,c
  8846  004C6E  0E80               	movlw	128
  8847  004C70  1403               	andwf	(___flge@ff1+2)^0,w,c
  8848  004C72  6E0B               	movwf	(??___flge+2)^0,c
  8849  004C74  0E7F               	movlw	127
  8850  004C76  1404               	andwf	(___flge@ff1+3)^0,w,c
  8851  004C78  6E0C               	movwf	(??___flge+3)^0,c
  8852  004C7A  5009               	movf	??___flge^0,w,c
  8853  004C7C  100A               	iorwf	(??___flge+1)^0,w,c
  8854  004C7E  100B               	iorwf	(??___flge+2)^0,w,c
  8855  004C80  100C               	iorwf	(??___flge+3)^0,w,c
  8856  004C82  A4D8               	btfss	status,2,c
  8857  004C84  EF46  F026         	goto	u4161
  8858  004C88  EF48  F026         	goto	u4160
  8859  004C8C                     u4161:
  8860  004C8C  EF50  F026         	goto	l4370
  8861  004C90                     u4160:
  8862  004C90  0E00               	movlw	0
  8863  004C92  6E01               	movwf	___flge@ff1^0,c
  8864  004C94  0E00               	movlw	0
  8865  004C96  6E02               	movwf	(___flge@ff1+1)^0,c
  8866  004C98  0E00               	movlw	0
  8867  004C9A  6E03               	movwf	(___flge@ff1+2)^0,c
  8868  004C9C  0E00               	movlw	0
  8869  004C9E  6E04               	movwf	(___flge@ff1+3)^0,c
  8870  004CA0                     l4370:
  8871  004CA0  0E00               	movlw	0
  8872  004CA2  1405               	andwf	___flge@ff2^0,w,c
  8873  004CA4  6E09               	movwf	??___flge^0,c
  8874  004CA6  0E00               	movlw	0
  8875  004CA8  1406               	andwf	(___flge@ff2+1)^0,w,c
  8876  004CAA  6E0A               	movwf	(??___flge+1)^0,c
  8877  004CAC  0E80               	movlw	128
  8878  004CAE  1407               	andwf	(___flge@ff2+2)^0,w,c
  8879  004CB0  6E0B               	movwf	(??___flge+2)^0,c
  8880  004CB2  0E7F               	movlw	127
  8881  004CB4  1408               	andwf	(___flge@ff2+3)^0,w,c
  8882  004CB6  6E0C               	movwf	(??___flge+3)^0,c
  8883  004CB8  5009               	movf	??___flge^0,w,c
  8884  004CBA  100A               	iorwf	(??___flge+1)^0,w,c
  8885  004CBC  100B               	iorwf	(??___flge+2)^0,w,c
  8886  004CBE  100C               	iorwf	(??___flge+3)^0,w,c
  8887  004CC0  A4D8               	btfss	status,2,c
  8888  004CC2  EF65  F026         	goto	u4171
  8889  004CC6  EF67  F026         	goto	u4170
  8890  004CCA                     u4171:
  8891  004CCA  EF6F  F026         	goto	l4374
  8892  004CCE                     u4170:
  8893  004CCE  0E00               	movlw	0
  8894  004CD0  6E05               	movwf	___flge@ff2^0,c
  8895  004CD2  0E00               	movlw	0
  8896  004CD4  6E06               	movwf	(___flge@ff2+1)^0,c
  8897  004CD6  0E00               	movlw	0
  8898  004CD8  6E07               	movwf	(___flge@ff2+2)^0,c
  8899  004CDA  0E00               	movlw	0
  8900  004CDC  6E08               	movwf	(___flge@ff2+3)^0,c
  8901  004CDE                     l4374:
  8902  004CDE  AE04               	btfss	(___flge@ff1+3)^0,7,c
  8903  004CE0  EF74  F026         	goto	u4181
  8904  004CE4  EF76  F026         	goto	u4180
  8905  004CE8                     u4181:
  8906  004CE8  EF7F  F026         	goto	l4378
  8907  004CEC                     u4180:
  8908  004CEC  6C01               	negf	___flge@ff1^0,c
  8909  004CEE  1E02               	comf	(___flge@ff1+1)^0,f,c
  8910  004CF0  B0D8               	btfsc	status,0,c
  8911  004CF2  2A02               	incf	(___flge@ff1+1)^0,f,c
  8912  004CF4  1E03               	comf	(___flge@ff1+2)^0,f,c
  8913  004CF6  B0D8               	btfsc	status,0,c
  8914  004CF8  2A03               	incf	(___flge@ff1+2)^0,f,c
  8915  004CFA  0E80               	movlw	128
  8916  004CFC  5604               	subfwb	(___flge@ff1+3)^0,f,c
  8917  004CFE                     l4378:
  8918  004CFE  AE08               	btfss	(___flge@ff2+3)^0,7,c
  8919  004D00  EF84  F026         	goto	u4191
  8920  004D04  EF86  F026         	goto	u4190
  8921  004D08                     u4191:
  8922  004D08  EF8F  F026         	goto	l1085
  8923  004D0C                     u4190:
  8924  004D0C  6C05               	negf	___flge@ff2^0,c
  8925  004D0E  1E06               	comf	(___flge@ff2+1)^0,f,c
  8926  004D10  B0D8               	btfsc	status,0,c
  8927  004D12  2A06               	incf	(___flge@ff2+1)^0,f,c
  8928  004D14  1E07               	comf	(___flge@ff2+2)^0,f,c
  8929  004D16  B0D8               	btfsc	status,0,c
  8930  004D18  2A07               	incf	(___flge@ff2+2)^0,f,c
  8931  004D1A  0E80               	movlw	128
  8932  004D1C  5608               	subfwb	(___flge@ff2+3)^0,f,c
  8933  004D1E                     l1085:
  8934  004D1E  0E00               	movlw	0
  8935  004D20  1A01               	xorwf	___flge@ff1^0,f,c
  8936  004D22  0E00               	movlw	0
  8937  004D24  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  8938  004D26  0E00               	movlw	0
  8939  004D28  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  8940  004D2A  0E80               	movlw	128
  8941  004D2C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  8942  004D2E  0E00               	movlw	0
  8943  004D30  1A05               	xorwf	___flge@ff2^0,f,c
  8944  004D32  0E00               	movlw	0
  8945  004D34  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  8946  004D36  0E00               	movlw	0
  8947  004D38  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  8948  004D3A  0E80               	movlw	128
  8949  004D3C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  8950  004D3E  5005               	movf	___flge@ff2^0,w,c
  8951  004D40  5C01               	subwf	___flge@ff1^0,w,c
  8952  004D42  5006               	movf	(___flge@ff2+1)^0,w,c
  8953  004D44  5802               	subwfb	(___flge@ff1+1)^0,w,c
  8954  004D46  5007               	movf	(___flge@ff2+2)^0,w,c
  8955  004D48  5803               	subwfb	(___flge@ff1+2)^0,w,c
  8956  004D4A  5008               	movf	(___flge@ff2+3)^0,w,c
  8957  004D4C  5804               	subwfb	(___flge@ff1+3)^0,w,c
  8958  004D4E  B0D8               	btfsc	status,0,c
  8959  004D50  EFAC  F026         	goto	u4201
  8960  004D54  EFAE  F026         	goto	u4200
  8961  004D58                     u4201:
  8962  004D58  EFB1  F026         	goto	l4384
  8963  004D5C                     u4200:
  8964  004D5C  90D8               	bcf	status,0,c
  8965  004D5E  EFB2  F026         	goto	l1090
  8966  004D62                     l4384:
  8967  004D62  80D8               	bsf	status,0,c
  8968  004D64                     l1090:
  8969  004D64  0012               	return		;funcret
  8970  004D66                     __end_of___flge:
  8971                           	callstack 0
  8972                           
  8973 ;; *************** function ___fltol *****************
  8974 ;; Defined at:
  8975 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  f1              4   90[COMRAM] unsigned char 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;  exp1            1    5[BANK0 ] unsigned char 
  8980 ;;  sign1           1    4[BANK0 ] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  4   90[COMRAM] long 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;Total ram usage:       10 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; Hardware stack levels required when called: 1
  8997 ;; This function calls:
  8998 ;;		Nothing
  8999 ;; This function is called by:
  9000 ;;		_lroundf
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text40
  9005  004B5A                     __ptext40:
  9006                           	callstack 0
  9007  004B5A                     ___fltol:
  9008                           	callstack 26
  9009  004B5A  345D               	rlcf	(___fltol@f1+2)^0,w,c
  9010  004B5C  345E               	rlcf	(___fltol@f1+3)^0,w,c
  9011  004B5E  0100               	movlb	0	; () banked
  9012  004B60  6F65               	movwf	___fltol@exp1& (0+255),b
  9013  004B62  5165               	movf	___fltol@exp1& (0+255),w,b
  9014  004B64  A4D8               	btfss	status,2,c
  9015  004B66  EFB7  F025         	goto	u4281
  9016  004B6A  EFB9  F025         	goto	u4280
  9017  004B6E                     u4281:
  9018  004B6E  EFC3  F025         	goto	l4486
  9019  004B72                     u4280:
  9020  004B72                     l4482:
  9021                           
  9022                           ; BSR set to: 0
  9023  004B72  0E00               	movlw	0
  9024  004B74  6E5B               	movwf	?___fltol^0,c
  9025  004B76  0E00               	movlw	0
  9026  004B78  6E5C               	movwf	(?___fltol+1)^0,c
  9027  004B7A  0E00               	movlw	0
  9028  004B7C  6E5D               	movwf	(?___fltol+2)^0,c
  9029  004B7E  0E00               	movlw	0
  9030  004B80  6E5E               	movwf	(?___fltol+3)^0,c
  9031  004B82  EF30  F026         	goto	l1117
  9032  004B86                     l4486:
  9033                           
  9034                           ; BSR set to: 0
  9035  004B86  C05B  F060         	movff	___fltol@f1,??___fltol
  9036  004B8A  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  9037  004B8E  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  9038  004B92  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  9039  004B96  0E20               	movlw	32
  9040  004B98  EFD3  F025         	goto	u4290
  9041  004B9C                     u4295:
  9042  004B9C  90D8               	bcf	status,0,c
  9043  004B9E  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  9044  004BA0  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  9045  004BA2  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  9046  004BA4  3360               	rrcf	??___fltol& (0+255),f,b
  9047  004BA6                     u4290:
  9048  004BA6  2EE8               	decfsz	wreg,f,c
  9049  004BA8  EFCE  F025         	goto	u4295
  9050  004BAC  5160               	movf	??___fltol& (0+255),w,b
  9051  004BAE  6F64               	movwf	___fltol@sign1& (0+255),b
  9052  004BB0                     
  9053                           ; BSR set to: 0
  9054  004BB0  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  9055  004BB2                     
  9056                           ; BSR set to: 0
  9057  004BB2  0EFF               	movlw	255
  9058  004BB4  165B               	andwf	___fltol@f1^0,f,c
  9059  004BB6  0EFF               	movlw	255
  9060  004BB8  165C               	andwf	(___fltol@f1+1)^0,f,c
  9061  004BBA  0EFF               	movlw	255
  9062  004BBC  165D               	andwf	(___fltol@f1+2)^0,f,c
  9063  004BBE  0E00               	movlw	0
  9064  004BC0  165E               	andwf	(___fltol@f1+3)^0,f,c
  9065  004BC2                     
  9066                           ; BSR set to: 0
  9067  004BC2  0E96               	movlw	150
  9068  004BC4  5F65               	subwf	___fltol@exp1& (0+255),f,b
  9069  004BC6                     
  9070                           ; BSR set to: 0
  9071  004BC6  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  9072  004BC8  EFEA  F025         	goto	u4300
  9073  004BCC  EFE8  F025         	goto	u4301
  9074  004BD0                     u4301:
  9075  004BD0  EF00  F026         	goto	l4506
  9076  004BD4                     u4300:
  9077  004BD4                     
  9078                           ; BSR set to: 0
  9079  004BD4  5165               	movf	___fltol@exp1& (0+255),w,b
  9080  004BD6  0A80               	xorlw	128
  9081  004BD8  0F97               	addlw	151
  9082  004BDA  B0D8               	btfsc	status,0,c
  9083  004BDC  EFF2  F025         	goto	u4311
  9084  004BE0  EFF4  F025         	goto	u4310
  9085  004BE4                     u4311:
  9086  004BE4  EFF6  F025         	goto	l4502
  9087  004BE8                     u4310:
  9088  004BE8  EFB9  F025         	goto	l4482
  9089  004BEC                     l4502:
  9090                           
  9091                           ; BSR set to: 0
  9092  004BEC  90D8               	bcf	status,0,c
  9093  004BEE  325E               	rrcf	(___fltol@f1+3)^0,f,c
  9094  004BF0  325D               	rrcf	(___fltol@f1+2)^0,f,c
  9095  004BF2  325C               	rrcf	(___fltol@f1+1)^0,f,c
  9096  004BF4  325B               	rrcf	___fltol@f1^0,f,c
  9097  004BF6                     
  9098                           ; BSR set to: 0
  9099  004BF6  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  9100  004BF8  EFF6  F025         	goto	l4502
  9101  004BFC  EF18  F026         	goto	l4516
  9102  004C00                     l4506:
  9103                           
  9104                           ; BSR set to: 0
  9105  004C00  0E1F               	movlw	31
  9106  004C02  6565               	cpfsgt	___fltol@exp1& (0+255),b
  9107  004C04  EF06  F026         	goto	u4321
  9108  004C08  EF08  F026         	goto	u4320
  9109  004C0C                     u4321:
  9110  004C0C  EF10  F026         	goto	l4514
  9111  004C10                     u4320:
  9112  004C10  EFB9  F025         	goto	l4482
  9113  004C14                     l4512:
  9114                           
  9115                           ; BSR set to: 0
  9116  004C14  90D8               	bcf	status,0,c
  9117  004C16  365B               	rlcf	___fltol@f1^0,f,c
  9118  004C18  365C               	rlcf	(___fltol@f1+1)^0,f,c
  9119  004C1A  365D               	rlcf	(___fltol@f1+2)^0,f,c
  9120  004C1C  365E               	rlcf	(___fltol@f1+3)^0,f,c
  9121  004C1E  0765               	decf	___fltol@exp1& (0+255),f,b
  9122  004C20                     l4514:
  9123                           
  9124                           ; BSR set to: 0
  9125  004C20  5165               	movf	___fltol@exp1& (0+255),w,b
  9126  004C22  A4D8               	btfss	status,2,c
  9127  004C24  EF16  F026         	goto	u4331
  9128  004C28  EF18  F026         	goto	u4330
  9129  004C2C                     u4331:
  9130  004C2C  EF0A  F026         	goto	l4512
  9131  004C30                     u4330:
  9132  004C30                     l4516:
  9133                           
  9134                           ; BSR set to: 0
  9135  004C30  5164               	movf	___fltol@sign1& (0+255),w,b
  9136  004C32  B4D8               	btfsc	status,2,c
  9137  004C34  EF1E  F026         	goto	u4341
  9138  004C38  EF20  F026         	goto	u4340
  9139  004C3C                     u4341:
  9140  004C3C  EF28  F026         	goto	l4520
  9141  004C40                     u4340:
  9142  004C40                     
  9143                           ; BSR set to: 0
  9144  004C40  1E5E               	comf	(___fltol@f1+3)^0,f,c
  9145  004C42  1E5D               	comf	(___fltol@f1+2)^0,f,c
  9146  004C44  1E5C               	comf	(___fltol@f1+1)^0,f,c
  9147  004C46  6C5B               	negf	___fltol@f1^0,c
  9148  004C48  0E00               	movlw	0
  9149  004C4A  225C               	addwfc	(___fltol@f1+1)^0,f,c
  9150  004C4C  225D               	addwfc	(___fltol@f1+2)^0,f,c
  9151  004C4E  225E               	addwfc	(___fltol@f1+3)^0,f,c
  9152  004C50                     l4520:
  9153                           
  9154                           ; BSR set to: 0
  9155  004C50  C05B  F05B         	movff	___fltol@f1,?___fltol
  9156  004C54  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  9157  004C58  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  9158  004C5C  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  9159  004C60                     l1117:
  9160                           
  9161                           ; BSR set to: 0
  9162  004C60  0012               	return		;funcret
  9163  004C62                     __end_of___fltol:
  9164                           	callstack 0
  9165                           
  9166 ;; *************** function _color_read_Clear *****************
  9167 ;; Defined at:
  9168 ;;		line 133 in file "color.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;		None
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;  tmp             2    9[COMRAM] unsigned int 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  2    4[COMRAM] unsigned int 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9184 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9185 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9186 ;;Total ram usage:        7 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 3
  9189 ;; This function calls:
  9190 ;;		_I2C_2_Master_Read
  9191 ;;		_I2C_2_Master_RepStart
  9192 ;;		_I2C_2_Master_Start
  9193 ;;		_I2C_2_Master_Stop
  9194 ;;		_I2C_2_Master_Write
  9195 ;; This function is called by:
  9196 ;;		_read_color
  9197 ;;		_calibrate_white
  9198 ;;		_amb_light_measure
  9199 ;;		_distance_measure
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text41
  9204  00578C                     __ptext41:
  9205                           	callstack 0
  9206  00578C                     _color_read_Clear:
  9207                           	callstack 24
  9208  00578C                     
  9209                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  9210  00578C  ECD1  F02E         	call	_I2C_2_Master_Start	;wreg free
  9211                           
  9212                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  9213  005790  0E52               	movlw	82
  9214  005792  ECBB  F02E         	call	_I2C_2_Master_Write
  9215                           
  9216                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  9217  005796  0EB4               	movlw	180
  9218  005798  ECBB  F02E         	call	_I2C_2_Master_Write
  9219                           
  9220                           ;color.c: 139:  I2C_2_Master_RepStart();
  9221  00579C  ECC7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9222                           
  9223                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  9224  0057A0  0E53               	movlw	83
  9225  0057A2  ECBB  F02E         	call	_I2C_2_Master_Write
  9226                           
  9227                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  9228  0057A6  0E01               	movlw	1
  9229  0057A8  EC33  F02C         	call	_I2C_2_Master_Read
  9230  0057AC  6E07               	movwf	??_color_read_Clear^0,c
  9231  0057AE  5007               	movf	??_color_read_Clear^0,w,c
  9232  0057B0  6E0A               	movwf	color_read_Clear@tmp^0,c
  9233  0057B2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  9234                           
  9235                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9236  0057B4  0E00               	movlw	0
  9237  0057B6  EC33  F02C         	call	_I2C_2_Master_Read
  9238  0057BA  6E07               	movwf	??_color_read_Clear^0,c
  9239  0057BC  5007               	movf	??_color_read_Clear^0,w,c
  9240  0057BE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  9241  0057C0  6A08               	clrf	(??_color_read_Clear+1)^0,c
  9242  0057C2  500A               	movf	color_read_Clear@tmp^0,w,c
  9243  0057C4  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  9244  0057C6  6E0A               	movwf	color_read_Clear@tmp^0,c
  9245  0057C8  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  9246  0057CA  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  9247  0057CC  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  9248                           
  9249                           ;color.c: 143:  I2C_2_Master_Stop();
  9250  0057CE  ECCC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9251  0057D2                     
  9252                           ;color.c: 144:  return tmp;
  9253  0057D2  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  9254  0057D6  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9255  0057DA  0012               	return		;funcret
  9256  0057DC                     __end_of_color_read_Clear:
  9257                           	callstack 0
  9258                           
  9259 ;; *************** function _I2C_2_Master_RepStart *****************
  9260 ;; Defined at:
  9261 ;;		line 33 in file "i2c.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;		None
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;		None
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, status,2, status,0, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9279 ;;Total ram usage:        0 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 2
  9282 ;; This function calls:
  9283 ;;		_I2C_2_Master_Idle
  9284 ;; This function is called by:
  9285 ;;		_color_read_Red
  9286 ;;		_color_read_Blue
  9287 ;;		_color_read_Green
  9288 ;;		_color_read_Clear
  9289 ;; This function uses a non-reentrant model
  9290 ;;
  9291                           
  9292                           	psect	text42
  9293  005D8E                     __ptext42:
  9294                           	callstack 0
  9295  005D8E                     _I2C_2_Master_RepStart:
  9296                           	callstack 24
  9297  005D8E                     
  9298                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9299  005D8E  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9300  005D92                     
  9301                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9302  005D92  010E               	movlb	14	; () banked
  9303  005D94  83DA               	bsf	218,1,b	;volatile
  9304  005D96                     
  9305                           ; BSR set to: 14
  9306  005D96  0012               	return		;funcret
  9307  005D98                     __end_of_I2C_2_Master_RepStart:
  9308                           	callstack 0
  9309                           
  9310 ;; *************** function _I2C_2_Master_Read *****************
  9311 ;; Defined at:
  9312 ;;		line 51 in file "i2c.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  ack             1    wreg     unsigned char 
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  ack             1    2[COMRAM] unsigned char 
  9317 ;;  tmp             1    3[COMRAM] unsigned char 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  1    wreg      unsigned char 
  9320 ;; Registers used:
  9321 ;;		wreg, status,2, status,0, cstack
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;Total ram usage:        3 bytes
  9332 ;; Hardware stack levels used: 1
  9333 ;; Hardware stack levels required when called: 2
  9334 ;; This function calls:
  9335 ;;		_I2C_2_Master_Idle
  9336 ;; This function is called by:
  9337 ;;		_color_read_Red
  9338 ;;		_color_read_Blue
  9339 ;;		_color_read_Green
  9340 ;;		_color_read_Clear
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text43
  9345  005866                     __ptext43:
  9346                           	callstack 0
  9347  005866                     _I2C_2_Master_Read:
  9348                           	callstack 24
  9349                           
  9350                           ; BSR set to: 14
  9351                           ;incstack = 0
  9352                           ;I2C_2_Master_Read@ack stored from wreg
  9353  005866  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9354  005868                     
  9355                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9356  005868  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9357  00586C                     
  9358                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9359  00586C  010E               	movlb	14	; () banked
  9360  00586E  87DA               	bsf	218,3,b	;volatile
  9361                           
  9362                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9363  005870  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9364  005874                     
  9365                           ;i2c.c: 57:   tmp = SSP2BUF;
  9366  005874  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9367                           
  9368                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9369  005878  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9370  00587C                     
  9371                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9372  00587C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9373  00587E  B4D8               	btfsc	status,2,c
  9374  005880  EF44  F02C         	goto	u3901
  9375  005884  EF48  F02C         	goto	u3900
  9376  005888                     u3901:
  9377  005888  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9378  00588A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9379  00588C  EF49  F02C         	goto	u3918
  9380  005890                     u3900:
  9381  005890  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9382  005892                     u3918:
  9383  005892  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9384  005894  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9385  005896  010E               	movlb	14	; () banked
  9386  005898  51DA               	movf	218,w,b	;volatile
  9387  00589A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9388  00589C  0BDF               	andlw	-33
  9389  00589E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9390  0058A0  6FDA               	movwf	218,b	;volatile
  9391  0058A2                     
  9392                           ; BSR set to: 14
  9393                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9394  0058A2  89DA               	bsf	218,4,b	;volatile
  9395  0058A4                     
  9396                           ; BSR set to: 14
  9397                           ;i2c.c: 61:   return tmp;
  9398  0058A4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9399  0058A6                     
  9400                           ; BSR set to: 14
  9401  0058A6  0012               	return		;funcret
  9402  0058A8                     __end_of_I2C_2_Master_Read:
  9403                           	callstack 0
  9404                           
  9405 ;; *************** function ___xxtofl *****************
  9406 ;; Defined at:
  9407 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  sign            1    wreg     unsigned char 
  9410 ;;  val             4    0[COMRAM] long 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  sign            1    8[COMRAM] unsigned char 
  9413 ;;  arg             4   10[COMRAM] unsigned long 
  9414 ;;  exp             1    9[COMRAM] unsigned char 
  9415 ;; Return value:  Size  Location     Type
  9416 ;;                  4    0[COMRAM] unsigned char 
  9417 ;; Registers used:
  9418 ;;		wreg, status,2, status,0
  9419 ;; Tracked objects:
  9420 ;;		On entry : 0/0
  9421 ;;		On exit  : 0/0
  9422 ;;		Unchanged: 0/0
  9423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9425 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9427 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9428 ;;Total ram usage:       14 bytes
  9429 ;; Hardware stack levels used: 1
  9430 ;; Hardware stack levels required when called: 1
  9431 ;; This function calls:
  9432 ;;		Nothing
  9433 ;; This function is called by:
  9434 ;;		_detect_color
  9435 ;;		_amb_light_measure
  9436 ;;		_distance_measure
  9437 ;;		_check_color_reading
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441                           	psect	text44
  9442  003F56                     __ptext44:
  9443                           	callstack 0
  9444  003F56                     ___xxtofl:
  9445                           	callstack 27
  9446                           
  9447                           ; BSR set to: 14
  9448                           ;incstack = 0
  9449                           ;___xxtofl@sign stored from wreg
  9450  003F56  6E09               	movwf	___xxtofl@sign^0,c
  9451  003F58  5009               	movf	___xxtofl@sign^0,w,c
  9452  003F5A  B4D8               	btfsc	status,2,c
  9453  003F5C  EFB2  F01F         	goto	u5091
  9454  003F60  EFB4  F01F         	goto	u5090
  9455  003F64                     u5091:
  9456  003F64  EFD6  F01F         	goto	l1475
  9457  003F68                     u5090:
  9458  003F68  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9459  003F6A  EFBB  F01F         	goto	u5100
  9460  003F6E  EFB9  F01F         	goto	u5101
  9461  003F72                     u5101:
  9462  003F72  EFD6  F01F         	goto	l1475
  9463  003F76                     u5100:
  9464  003F76  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9465  003F7A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9466  003F7E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9467  003F82  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9468  003F86  1E05               	comf	??___xxtofl^0,f,c
  9469  003F88  1E06               	comf	(??___xxtofl+1)^0,f,c
  9470  003F8A  1E07               	comf	(??___xxtofl+2)^0,f,c
  9471  003F8C  1E08               	comf	(??___xxtofl+3)^0,f,c
  9472  003F8E  2A05               	incf	??___xxtofl^0,f,c
  9473  003F90  0E00               	movlw	0
  9474  003F92  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9475  003F94  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9476  003F96  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9477  003F98  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9478  003F9C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9479  003FA0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9480  003FA4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9481  003FA8  EFDE  F01F         	goto	l4890
  9482  003FAC                     l1475:
  9483  003FAC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9484  003FB0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9485  003FB4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9486  003FB8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9487  003FBC                     l4890:
  9488  003FBC  5001               	movf	___xxtofl@val^0,w,c
  9489  003FBE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9490  003FC0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9491  003FC2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9492  003FC4  A4D8               	btfss	status,2,c
  9493  003FC6  EFE7  F01F         	goto	u5111
  9494  003FCA  EFE9  F01F         	goto	u5110
  9495  003FCE                     u5111:
  9496  003FCE  EFF3  F01F         	goto	l4896
  9497  003FD2                     u5110:
  9498  003FD2  0E00               	movlw	0
  9499  003FD4  6E01               	movwf	?___xxtofl^0,c
  9500  003FD6  0E00               	movlw	0
  9501  003FD8  6E02               	movwf	(?___xxtofl+1)^0,c
  9502  003FDA  0E00               	movlw	0
  9503  003FDC  6E03               	movwf	(?___xxtofl+2)^0,c
  9504  003FDE  0E00               	movlw	0
  9505  003FE0  6E04               	movwf	(?___xxtofl+3)^0,c
  9506  003FE2  EF84  F020         	goto	l1478
  9507  003FE6                     l4896:
  9508  003FE6  0E96               	movlw	150
  9509  003FE8  6E0A               	movwf	___xxtofl@exp^0,c
  9510  003FEA  EFFD  F01F         	goto	l4900
  9511  003FEE                     l4898:
  9512  003FEE  2A0A               	incf	___xxtofl@exp^0,f,c
  9513  003FF0  90D8               	bcf	status,0,c
  9514  003FF2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9515  003FF4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9516  003FF6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9517  003FF8  320B               	rrcf	___xxtofl@arg^0,f,c
  9518  003FFA                     l4900:
  9519  003FFA  0E00               	movlw	0
  9520  003FFC  140B               	andwf	___xxtofl@arg^0,w,c
  9521  003FFE  6E05               	movwf	??___xxtofl^0,c
  9522  004000  0E00               	movlw	0
  9523  004002  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9524  004004  6E06               	movwf	(??___xxtofl+1)^0,c
  9525  004006  0E00               	movlw	0
  9526  004008  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9527  00400A  6E07               	movwf	(??___xxtofl+2)^0,c
  9528  00400C  0EFE               	movlw	254
  9529  00400E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9530  004010  6E08               	movwf	(??___xxtofl+3)^0,c
  9531  004012  5005               	movf	??___xxtofl^0,w,c
  9532  004014  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9533  004016  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9534  004018  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9535  00401A  A4D8               	btfss	status,2,c
  9536  00401C  EF12  F020         	goto	u5121
  9537  004020  EF14  F020         	goto	u5120
  9538  004024                     u5121:
  9539  004024  EFF7  F01F         	goto	l4898
  9540  004028                     u5120:
  9541  004028  EF22  F020         	goto	l1482
  9542  00402C                     l4902:
  9543  00402C  2A0A               	incf	___xxtofl@exp^0,f,c
  9544  00402E  0E01               	movlw	1
  9545  004030  260B               	addwf	___xxtofl@arg^0,f,c
  9546  004032  0E00               	movlw	0
  9547  004034  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9548  004036  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9549  004038  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9550  00403A  90D8               	bcf	status,0,c
  9551  00403C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9552  00403E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9553  004040  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9554  004042  320B               	rrcf	___xxtofl@arg^0,f,c
  9555  004044                     l1482:
  9556  004044  0E00               	movlw	0
  9557  004046  140B               	andwf	___xxtofl@arg^0,w,c
  9558  004048  6E05               	movwf	??___xxtofl^0,c
  9559  00404A  0E00               	movlw	0
  9560  00404C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9561  00404E  6E06               	movwf	(??___xxtofl+1)^0,c
  9562  004050  0E00               	movlw	0
  9563  004052  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9564  004054  6E07               	movwf	(??___xxtofl+2)^0,c
  9565  004056  0EFF               	movlw	255
  9566  004058  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9567  00405A  6E08               	movwf	(??___xxtofl+3)^0,c
  9568  00405C  5005               	movf	??___xxtofl^0,w,c
  9569  00405E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9570  004060  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9571  004062  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9572  004064  A4D8               	btfss	status,2,c
  9573  004066  EF37  F020         	goto	u5131
  9574  00406A  EF39  F020         	goto	u5130
  9575  00406E                     u5131:
  9576  00406E  EF16  F020         	goto	l4902
  9577  004072                     u5130:
  9578  004072  EF41  F020         	goto	l4910
  9579  004076                     l4908:
  9580  004076  060A               	decf	___xxtofl@exp^0,f,c
  9581  004078  90D8               	bcf	status,0,c
  9582  00407A  360B               	rlcf	___xxtofl@arg^0,f,c
  9583  00407C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9584  00407E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9585  004080  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9586  004082                     l4910:
  9587  004082  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9588  004084  EF46  F020         	goto	u5141
  9589  004088  EF48  F020         	goto	u5140
  9590  00408C                     u5141:
  9591  00408C  EF50  F020         	goto	l1489
  9592  004090                     u5140:
  9593  004090  0E02               	movlw	2
  9594  004092  600A               	cpfslt	___xxtofl@exp^0,c
  9595  004094  EF4E  F020         	goto	u5151
  9596  004098  EF50  F020         	goto	u5150
  9597  00409C                     u5151:
  9598  00409C  EF3B  F020         	goto	l4908
  9599  0040A0                     u5150:
  9600  0040A0                     l1489:
  9601  0040A0  B00A               	btfsc	___xxtofl@exp^0,0,c
  9602  0040A2  EF55  F020         	goto	u5161
  9603  0040A6  EF57  F020         	goto	u5160
  9604  0040AA                     u5161:
  9605  0040AA  EF58  F020         	goto	l4916
  9606  0040AE                     u5160:
  9607  0040AE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9608  0040B0                     l4916:
  9609  0040B0  90D8               	bcf	status,0,c
  9610  0040B2  320A               	rrcf	___xxtofl@exp^0,f,c
  9611  0040B4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9612  0040B8  6A06               	clrf	(??___xxtofl+1)^0,c
  9613  0040BA  6A07               	clrf	(??___xxtofl+2)^0,c
  9614  0040BC  6A08               	clrf	(??___xxtofl+3)^0,c
  9615  0040BE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9616  0040C2  6A07               	clrf	(??___xxtofl+2)^0,c
  9617  0040C4  6A06               	clrf	(??___xxtofl+1)^0,c
  9618  0040C6  6A05               	clrf	??___xxtofl^0,c
  9619  0040C8  5005               	movf	??___xxtofl^0,w,c
  9620  0040CA  120B               	iorwf	___xxtofl@arg^0,f,c
  9621  0040CC  5006               	movf	(??___xxtofl+1)^0,w,c
  9622  0040CE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9623  0040D0  5007               	movf	(??___xxtofl+2)^0,w,c
  9624  0040D2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9625  0040D4  5008               	movf	(??___xxtofl+3)^0,w,c
  9626  0040D6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9627  0040D8  5009               	movf	___xxtofl@sign^0,w,c
  9628  0040DA  B4D8               	btfsc	status,2,c
  9629  0040DC  EF72  F020         	goto	u5171
  9630  0040E0  EF74  F020         	goto	u5170
  9631  0040E4                     u5171:
  9632  0040E4  EF7C  F020         	goto	l4926
  9633  0040E8                     u5170:
  9634  0040E8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9635  0040EA  EF7B  F020         	goto	u5180
  9636  0040EE  EF79  F020         	goto	u5181
  9637  0040F2                     u5181:
  9638  0040F2  EF7C  F020         	goto	l4926
  9639  0040F6                     u5180:
  9640  0040F6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9641  0040F8                     l4926:
  9642  0040F8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9643  0040FC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9644  004100  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9645  004104  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9646  004108                     l1478:
  9647  004108  0012               	return		;funcret
  9648  00410A                     __end_of___xxtofl:
  9649                           	callstack 0
  9650                           
  9651 ;; *************** function ___fldiv *****************
  9652 ;; Defined at:
  9653 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;  b               4   14[COMRAM] unsigned char 
  9656 ;;  a               4   18[COMRAM] unsigned char 
  9657 ;; Auto vars:     Size  Location     Type
  9658 ;;  grs             4   33[COMRAM] unsigned long 
  9659 ;;  rem             4   26[COMRAM] unsigned long 
  9660 ;;  new_exp         2   31[COMRAM] short 
  9661 ;;  aexp            1   38[COMRAM] unsigned char 
  9662 ;;  bexp            1   37[COMRAM] unsigned char 
  9663 ;;  sign            1   30[COMRAM] unsigned char 
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  4   14[COMRAM] unsigned char 
  9666 ;; Registers used:
  9667 ;;		wreg, status,2, status,0
  9668 ;; Tracked objects:
  9669 ;;		On entry : 0/0
  9670 ;;		On exit  : 0/0
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9673 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9674 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9675 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9676 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9677 ;;Total ram usage:       25 bytes
  9678 ;; Hardware stack levels used: 1
  9679 ;; Hardware stack levels required when called: 1
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_detect_color
  9684 ;;		_amb_light_measure
  9685 ;;		_check_color_reading
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text45
  9690  0026A8                     __ptext45:
  9691                           	callstack 0
  9692  0026A8                     ___fldiv:
  9693                           	callstack 27
  9694  0026A8  5012               	movf	(___fldiv@b+3)^0,w,c
  9695  0026AA  0B80               	andlw	128
  9696  0026AC  6E1F               	movwf	___fldiv@sign^0,c
  9697  0026AE  5012               	movf	(___fldiv@b+3)^0,w,c
  9698  0026B0  2412               	addwf	(___fldiv@b+3)^0,w,c
  9699  0026B2  6E26               	movwf	___fldiv@bexp^0,c
  9700  0026B4  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9701  0026B6  EF5F  F013         	goto	u4861
  9702  0026BA  EF61  F013         	goto	u4860
  9703  0026BE                     u4861:
  9704  0026BE  EF62  F013         	goto	l4752
  9705  0026C2                     u4860:
  9706  0026C2  8026               	bsf	___fldiv@bexp^0,0,c
  9707  0026C4                     l4752:
  9708  0026C4  5026               	movf	___fldiv@bexp^0,w,c
  9709  0026C6  B4D8               	btfsc	status,2,c
  9710  0026C8  EF68  F013         	goto	u4871
  9711  0026CC  EF6A  F013         	goto	u4870
  9712  0026D0                     u4871:
  9713  0026D0  EF7F  F013         	goto	l4762
  9714  0026D4                     u4870:
  9715  0026D4  2826               	incf	___fldiv@bexp^0,w,c
  9716  0026D6  A4D8               	btfss	status,2,c
  9717  0026D8  EF70  F013         	goto	u4881
  9718  0026DC  EF72  F013         	goto	u4880
  9719  0026E0                     u4881:
  9720  0026E0  EF7A  F013         	goto	l4758
  9721  0026E4                     u4880:
  9722  0026E4  0E00               	movlw	0
  9723  0026E6  6E0F               	movwf	___fldiv@b^0,c
  9724  0026E8  0E00               	movlw	0
  9725  0026EA  6E10               	movwf	(___fldiv@b+1)^0,c
  9726  0026EC  0E00               	movlw	0
  9727  0026EE  6E11               	movwf	(___fldiv@b+2)^0,c
  9728  0026F0  0E00               	movlw	0
  9729  0026F2  6E12               	movwf	(___fldiv@b+3)^0,c
  9730  0026F4                     l4758:
  9731  0026F4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9732  0026F6  0E00               	movlw	0
  9733  0026F8  6E12               	movwf	(___fldiv@b+3)^0,c
  9734  0026FA  EF87  F013         	goto	l4764
  9735  0026FE                     l4762:
  9736  0026FE  0E00               	movlw	0
  9737  002700  6E0F               	movwf	___fldiv@b^0,c
  9738  002702  0E00               	movlw	0
  9739  002704  6E10               	movwf	(___fldiv@b+1)^0,c
  9740  002706  0E00               	movlw	0
  9741  002708  6E11               	movwf	(___fldiv@b+2)^0,c
  9742  00270A  0E00               	movlw	0
  9743  00270C  6E12               	movwf	(___fldiv@b+3)^0,c
  9744  00270E                     l4764:
  9745  00270E  5016               	movf	(___fldiv@a+3)^0,w,c
  9746  002710  0B80               	andlw	128
  9747  002712  1A1F               	xorwf	___fldiv@sign^0,f,c
  9748  002714  5016               	movf	(___fldiv@a+3)^0,w,c
  9749  002716  2416               	addwf	(___fldiv@a+3)^0,w,c
  9750  002718  6E27               	movwf	___fldiv@aexp^0,c
  9751  00271A  AE15               	btfss	(___fldiv@a+2)^0,7,c
  9752  00271C  EF92  F013         	goto	u4891
  9753  002720  EF94  F013         	goto	u4890
  9754  002724                     u4891:
  9755  002724  EF95  F013         	goto	l4772
  9756  002728                     u4890:
  9757  002728  8027               	bsf	___fldiv@aexp^0,0,c
  9758  00272A                     l4772:
  9759  00272A  5027               	movf	___fldiv@aexp^0,w,c
  9760  00272C  B4D8               	btfsc	status,2,c
  9761  00272E  EF9B  F013         	goto	u4901
  9762  002732  EF9D  F013         	goto	u4900
  9763  002736                     u4901:
  9764  002736  EFB2  F013         	goto	l4782
  9765  00273A                     u4900:
  9766  00273A  2827               	incf	___fldiv@aexp^0,w,c
  9767  00273C  A4D8               	btfss	status,2,c
  9768  00273E  EFA3  F013         	goto	u4911
  9769  002742  EFA5  F013         	goto	u4910
  9770  002746                     u4911:
  9771  002746  EFAD  F013         	goto	l4778
  9772  00274A                     u4910:
  9773  00274A  0E00               	movlw	0
  9774  00274C  6E13               	movwf	___fldiv@a^0,c
  9775  00274E  0E00               	movlw	0
  9776  002750  6E14               	movwf	(___fldiv@a+1)^0,c
  9777  002752  0E00               	movlw	0
  9778  002754  6E15               	movwf	(___fldiv@a+2)^0,c
  9779  002756  0E00               	movlw	0
  9780  002758  6E16               	movwf	(___fldiv@a+3)^0,c
  9781  00275A                     l4778:
  9782  00275A  8E15               	bsf	(___fldiv@a+2)^0,7,c
  9783  00275C  0E00               	movlw	0
  9784  00275E  6E16               	movwf	(___fldiv@a+3)^0,c
  9785  002760  EFBA  F013         	goto	l4784
  9786  002764                     l4782:
  9787  002764  0E00               	movlw	0
  9788  002766  6E13               	movwf	___fldiv@a^0,c
  9789  002768  0E00               	movlw	0
  9790  00276A  6E14               	movwf	(___fldiv@a+1)^0,c
  9791  00276C  0E00               	movlw	0
  9792  00276E  6E15               	movwf	(___fldiv@a+2)^0,c
  9793  002770  0E00               	movlw	0
  9794  002772  6E16               	movwf	(___fldiv@a+3)^0,c
  9795  002774                     l4784:
  9796  002774  5013               	movf	___fldiv@a^0,w,c
  9797  002776  1014               	iorwf	(___fldiv@a+1)^0,w,c
  9798  002778  1015               	iorwf	(___fldiv@a+2)^0,w,c
  9799  00277A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  9800  00277C  A4D8               	btfss	status,2,c
  9801  00277E  EFC3  F013         	goto	u4921
  9802  002782  EFC5  F013         	goto	u4920
  9803  002786                     u4921:
  9804  002786  EFDD  F013         	goto	l4796
  9805  00278A                     u4920:
  9806  00278A  0E00               	movlw	0
  9807  00278C  6E0F               	movwf	___fldiv@b^0,c
  9808  00278E  0E00               	movlw	0
  9809  002790  6E10               	movwf	(___fldiv@b+1)^0,c
  9810  002792  0E00               	movlw	0
  9811  002794  6E11               	movwf	(___fldiv@b+2)^0,c
  9812  002796  0E00               	movlw	0
  9813  002798  6E12               	movwf	(___fldiv@b+3)^0,c
  9814  00279A  0E80               	movlw	128
  9815  00279C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  9816  00279E  0E7F               	movlw	127
  9817  0027A0  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9818  0027A2                     l4790:
  9819  0027A2  501F               	movf	___fldiv@sign^0,w,c
  9820  0027A4  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9821  0027A6  C00F  F00F         	movff	___fldiv@b,?___fldiv
  9822  0027AA  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  9823  0027AE  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  9824  0027B2  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  9825  0027B6  EF20  F015         	goto	l1402
  9826  0027BA                     l4796:
  9827  0027BA  5026               	movf	___fldiv@bexp^0,w,c
  9828  0027BC  A4D8               	btfss	status,2,c
  9829  0027BE  EFE3  F013         	goto	u4931
  9830  0027C2  EFE5  F013         	goto	u4930
  9831  0027C6                     u4931:
  9832  0027C6  EFEF  F013         	goto	l4804
  9833  0027CA                     u4930:
  9834  0027CA  0E00               	movlw	0
  9835  0027CC  6E0F               	movwf	?___fldiv^0,c
  9836  0027CE  0E00               	movlw	0
  9837  0027D0  6E10               	movwf	(?___fldiv+1)^0,c
  9838  0027D2  0E00               	movlw	0
  9839  0027D4  6E11               	movwf	(?___fldiv+2)^0,c
  9840  0027D6  0E00               	movlw	0
  9841  0027D8  6E12               	movwf	(?___fldiv+3)^0,c
  9842  0027DA  EF20  F015         	goto	l1402
  9843  0027DE                     l4804:
  9844  0027DE  5027               	movf	___fldiv@aexp^0,w,c
  9845  0027E0  C026  F017         	movff	___fldiv@bexp,??___fldiv
  9846  0027E4  6A18               	clrf	(??___fldiv+1)^0,c
  9847  0027E6  5E17               	subwf	??___fldiv^0,f,c
  9848  0027E8  0E00               	movlw	0
  9849  0027EA  5A18               	subwfb	(??___fldiv+1)^0,f,c
  9850  0027EC  0E7F               	movlw	127
  9851  0027EE  2417               	addwf	??___fldiv^0,w,c
  9852  0027F0  6E20               	movwf	___fldiv@new_exp^0,c
  9853  0027F2  0E00               	movlw	0
  9854  0027F4  2018               	addwfc	(??___fldiv+1)^0,w,c
  9855  0027F6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9856  0027F8  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  9857  0027FC  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  9858  002800  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  9859  002804  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  9860  002808  0E00               	movlw	0
  9861  00280A  6E0F               	movwf	___fldiv@b^0,c
  9862  00280C  0E00               	movlw	0
  9863  00280E  6E10               	movwf	(___fldiv@b+1)^0,c
  9864  002810  0E00               	movlw	0
  9865  002812  6E11               	movwf	(___fldiv@b+2)^0,c
  9866  002814  0E00               	movlw	0
  9867  002816  6E12               	movwf	(___fldiv@b+3)^0,c
  9868  002818  0E00               	movlw	0
  9869  00281A  6E22               	movwf	___fldiv@grs^0,c
  9870  00281C  0E00               	movlw	0
  9871  00281E  6E23               	movwf	(___fldiv@grs+1)^0,c
  9872  002820  0E00               	movlw	0
  9873  002822  6E24               	movwf	(___fldiv@grs+2)^0,c
  9874  002824  0E00               	movlw	0
  9875  002826  6E25               	movwf	(___fldiv@grs+3)^0,c
  9876  002828  0E00               	movlw	0
  9877  00282A  6E27               	movwf	___fldiv@aexp^0,c
  9878  00282C  EF50  F014         	goto	l1404
  9879  002830                     l4814:
  9880  002830  5027               	movf	___fldiv@aexp^0,w,c
  9881  002832  B4D8               	btfsc	status,2,c
  9882  002834  EF1E  F014         	goto	u4941
  9883  002838  EF20  F014         	goto	u4940
  9884  00283C                     u4941:
  9885  00283C  EF37  F014         	goto	l4822
  9886  002840                     u4940:
  9887  002840  90D8               	bcf	status,0,c
  9888  002842  361B               	rlcf	___fldiv@rem^0,f,c
  9889  002844  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  9890  002846  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  9891  002848  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  9892  00284A  90D8               	bcf	status,0,c
  9893  00284C  360F               	rlcf	___fldiv@b^0,f,c
  9894  00284E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9895  002850  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9896  002852  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9897  002854  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9898  002856  EF2F  F014         	goto	u4951
  9899  00285A  EF31  F014         	goto	u4950
  9900  00285E                     u4951:
  9901  00285E  EF32  F014         	goto	l1407
  9902  002862                     u4950:
  9903  002862  800F               	bsf	___fldiv@b^0,0,c
  9904  002864                     l1407:
  9905  002864  90D8               	bcf	status,0,c
  9906  002866  3622               	rlcf	___fldiv@grs^0,f,c
  9907  002868  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9908  00286A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9909  00286C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9910  00286E                     l4822:
  9911  00286E  5013               	movf	___fldiv@a^0,w,c
  9912  002870  5C1B               	subwf	___fldiv@rem^0,w,c
  9913  002872  5014               	movf	(___fldiv@a+1)^0,w,c
  9914  002874  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  9915  002876  5015               	movf	(___fldiv@a+2)^0,w,c
  9916  002878  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  9917  00287A  5016               	movf	(___fldiv@a+3)^0,w,c
  9918  00287C  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  9919  00287E  A0D8               	btfss	status,0,c
  9920  002880  EF44  F014         	goto	u4961
  9921  002884  EF46  F014         	goto	u4960
  9922  002888                     u4961:
  9923  002888  EF4F  F014         	goto	l4828
  9924  00288C                     u4960:
  9925  00288C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  9926  00288E  5013               	movf	___fldiv@a^0,w,c
  9927  002890  5E1B               	subwf	___fldiv@rem^0,f,c
  9928  002892  5014               	movf	(___fldiv@a+1)^0,w,c
  9929  002894  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  9930  002896  5015               	movf	(___fldiv@a+2)^0,w,c
  9931  002898  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  9932  00289A  5016               	movf	(___fldiv@a+3)^0,w,c
  9933  00289C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  9934  00289E                     l4828:
  9935  00289E  2A27               	incf	___fldiv@aexp^0,f,c
  9936  0028A0                     l1404:
  9937  0028A0  0E19               	movlw	25
  9938  0028A2  6427               	cpfsgt	___fldiv@aexp^0,c
  9939  0028A4  EF56  F014         	goto	u4971
  9940  0028A8  EF58  F014         	goto	u4970
  9941  0028AC                     u4971:
  9942  0028AC  EF18  F014         	goto	l4814
  9943  0028B0                     u4970:
  9944  0028B0  501B               	movf	___fldiv@rem^0,w,c
  9945  0028B2  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  9946  0028B4  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  9947  0028B6  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  9948  0028B8  B4D8               	btfsc	status,2,c
  9949  0028BA  EF61  F014         	goto	u4981
  9950  0028BE  EF63  F014         	goto	u4980
  9951  0028C2                     u4981:
  9952  0028C2  EF7B  F014         	goto	l4840
  9953  0028C6                     u4980:
  9954  0028C6  8022               	bsf	___fldiv@grs^0,0,c
  9955  0028C8  EF7B  F014         	goto	l4840
  9956  0028CC                     l4834:
  9957  0028CC  90D8               	bcf	status,0,c
  9958  0028CE  360F               	rlcf	___fldiv@b^0,f,c
  9959  0028D0  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9960  0028D2  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9961  0028D4  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9962  0028D6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9963  0028D8  EF70  F014         	goto	u4991
  9964  0028DC  EF72  F014         	goto	u4990
  9965  0028E0                     u4991:
  9966  0028E0  EF73  F014         	goto	l1413
  9967  0028E4                     u4990:
  9968  0028E4  800F               	bsf	___fldiv@b^0,0,c
  9969  0028E6                     l1413:
  9970  0028E6  90D8               	bcf	status,0,c
  9971  0028E8  3622               	rlcf	___fldiv@grs^0,f,c
  9972  0028EA  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9973  0028EC  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9974  0028EE  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9975  0028F0  0620               	decf	___fldiv@new_exp^0,f,c
  9976  0028F2  A0D8               	btfss	status,0,c
  9977  0028F4  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  9978  0028F6                     l4840:
  9979  0028F6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9980  0028F8  EF80  F014         	goto	u5001
  9981  0028FC  EF82  F014         	goto	u5000
  9982  002900                     u5001:
  9983  002900  EF66  F014         	goto	l4834
  9984  002904                     u5000:
  9985  002904  0E00               	movlw	0
  9986  002906  6E27               	movwf	___fldiv@aexp^0,c
  9987  002908  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9988  00290A  EF89  F014         	goto	u5011
  9989  00290E  EF8B  F014         	goto	u5010
  9990  002912                     u5011:
  9991  002912  EFAF  F014         	goto	l1415
  9992  002916                     u5010:
  9993  002916  0EFF               	movlw	255
  9994  002918  1422               	andwf	___fldiv@grs^0,w,c
  9995  00291A  6E17               	movwf	??___fldiv^0,c
  9996  00291C  0EFF               	movlw	255
  9997  00291E  1423               	andwf	(___fldiv@grs+1)^0,w,c
  9998  002920  6E18               	movwf	(??___fldiv+1)^0,c
  9999  002922  0EFF               	movlw	255
 10000  002924  1424               	andwf	(___fldiv@grs+2)^0,w,c
 10001  002926  6E19               	movwf	(??___fldiv+2)^0,c
 10002  002928  0E7F               	movlw	127
 10003  00292A  1425               	andwf	(___fldiv@grs+3)^0,w,c
 10004  00292C  6E1A               	movwf	(??___fldiv+3)^0,c
 10005  00292E  5017               	movf	??___fldiv^0,w,c
 10006  002930  1018               	iorwf	(??___fldiv+1)^0,w,c
 10007  002932  1019               	iorwf	(??___fldiv+2)^0,w,c
 10008  002934  101A               	iorwf	(??___fldiv+3)^0,w,c
 10009  002936  B4D8               	btfsc	status,2,c
 10010  002938  EFA0  F014         	goto	u5021
 10011  00293C  EFA2  F014         	goto	u5020
 10012  002940                     u5021:
 10013  002940  EFA6  F014         	goto	l1416
 10014  002944                     u5020:
 10015  002944                     l4848:
 10016  002944  0E01               	movlw	1
 10017  002946  6E27               	movwf	___fldiv@aexp^0,c
 10018  002948  EFAF  F014         	goto	l1415
 10019  00294C                     l1416:
 10020  00294C  A00F               	btfss	___fldiv@b^0,0,c
 10021  00294E  EFAB  F014         	goto	u5031
 10022  002952  EFAD  F014         	goto	u5030
 10023  002956                     u5031:
 10024  002956  EFAF  F014         	goto	l1415
 10025  00295A                     u5030:
 10026  00295A  EFA2  F014         	goto	l4848
 10027  00295E                     l1415:
 10028  00295E  5027               	movf	___fldiv@aexp^0,w,c
 10029  002960  B4D8               	btfsc	status,2,c
 10030  002962  EFB5  F014         	goto	u5041
 10031  002966  EFB7  F014         	goto	u5040
 10032  00296A                     u5041:
 10033  00296A  EFDB  F014         	goto	l4860
 10034  00296E                     u5040:
 10035  00296E  0E01               	movlw	1
 10036  002970  260F               	addwf	___fldiv@b^0,f,c
 10037  002972  0E00               	movlw	0
 10038  002974  2210               	addwfc	(___fldiv@b+1)^0,f,c
 10039  002976  2211               	addwfc	(___fldiv@b+2)^0,f,c
 10040  002978  2212               	addwfc	(___fldiv@b+3)^0,f,c
 10041  00297A  A012               	btfss	(___fldiv@b+3)^0,0,c
 10042  00297C  EFC2  F014         	goto	u5051
 10043  002980  EFC4  F014         	goto	u5050
 10044  002984                     u5051:
 10045  002984  EFDB  F014         	goto	l4860
 10046  002988                     u5050:
 10047  002988  C00F  F017         	movff	___fldiv@b,??___fldiv
 10048  00298C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 10049  002990  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 10050  002994  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 10051  002998  341A               	rlcf	(??___fldiv+3)^0,w,c
 10052  00299A  321A               	rrcf	(??___fldiv+3)^0,f,c
 10053  00299C  3219               	rrcf	(??___fldiv+2)^0,f,c
 10054  00299E  3218               	rrcf	(??___fldiv+1)^0,f,c
 10055  0029A0  3217               	rrcf	??___fldiv^0,f,c
 10056  0029A2  C017  F00F         	movff	??___fldiv,___fldiv@b
 10057  0029A6  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 10058  0029AA  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 10059  0029AE  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 10060  0029B2  4A20               	infsnz	___fldiv@new_exp^0,f,c
 10061  0029B4  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 10062  0029B6                     l4860:
 10063  0029B6  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10064  0029B8  EFE6  F014         	goto	u5061
 10065  0029BC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 10066  0029BE  E108               	bnz	u5060
 10067  0029C0  2820               	incf	___fldiv@new_exp^0,w,c
 10068  0029C2  A0D8               	btfss	status,0,c
 10069  0029C4  EFE6  F014         	goto	u5061
 10070  0029C8  EFE8  F014         	goto	u5060
 10071  0029CC                     u5061:
 10072  0029CC  EFF3  F014         	goto	l4864
 10073  0029D0                     u5060:
 10074  0029D0  0E00               	movlw	0
 10075  0029D2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 10076  0029D4  6820               	setf	___fldiv@new_exp^0,c
 10077  0029D6  0E00               	movlw	0
 10078  0029D8  6E0F               	movwf	___fldiv@b^0,c
 10079  0029DA  0E00               	movlw	0
 10080  0029DC  6E10               	movwf	(___fldiv@b+1)^0,c
 10081  0029DE  0E00               	movlw	0
 10082  0029E0  6E11               	movwf	(___fldiv@b+2)^0,c
 10083  0029E2  0E00               	movlw	0
 10084  0029E4  6E12               	movwf	(___fldiv@b+3)^0,c
 10085  0029E6                     l4864:
 10086  0029E6  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10087  0029E8  EF00  F015         	goto	u5070
 10088  0029EC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 10089  0029EE  E106               	bnz	u5071
 10090  0029F0  0420               	decf	___fldiv@new_exp^0,w,c
 10091  0029F2  B0D8               	btfsc	status,0,c
 10092  0029F4  EFFE  F014         	goto	u5071
 10093  0029F8  EF00  F015         	goto	u5070
 10094  0029FC                     u5071:
 10095  0029FC  EF0E  F015         	goto	l4868
 10096  002A00                     u5070:
 10097  002A00  0E00               	movlw	0
 10098  002A02  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 10099  002A04  0E00               	movlw	0
 10100  002A06  6E20               	movwf	___fldiv@new_exp^0,c
 10101  002A08  0E00               	movlw	0
 10102  002A0A  6E0F               	movwf	___fldiv@b^0,c
 10103  002A0C  0E00               	movlw	0
 10104  002A0E  6E10               	movwf	(___fldiv@b+1)^0,c
 10105  002A10  0E00               	movlw	0
 10106  002A12  6E11               	movwf	(___fldiv@b+2)^0,c
 10107  002A14  0E00               	movlw	0
 10108  002A16  6E12               	movwf	(___fldiv@b+3)^0,c
 10109  002A18  0E00               	movlw	0
 10110  002A1A  6E1F               	movwf	___fldiv@sign^0,c
 10111  002A1C                     l4868:
 10112  002A1C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 10113  002A20  A026               	btfss	___fldiv@bexp^0,0,c
 10114  002A22  EF15  F015         	goto	u5081
 10115  002A26  EF17  F015         	goto	u5080
 10116  002A2A                     u5081:
 10117  002A2A  EF1A  F015         	goto	l4874
 10118  002A2E                     u5080:
 10119  002A2E  8E11               	bsf	(___fldiv@b+2)^0,7,c
 10120  002A30  EF1B  F015         	goto	l4876
 10121  002A34                     l4874:
 10122  002A34  9E11               	bcf	(___fldiv@b+2)^0,7,c
 10123  002A36                     l4876:
 10124  002A36  90D8               	bcf	status,0,c
 10125  002A38  3026               	rrcf	___fldiv@bexp^0,w,c
 10126  002A3A  6E12               	movwf	(___fldiv@b+3)^0,c
 10127  002A3C  EFD1  F013         	goto	l4790
 10128  002A40                     l1402:
 10129  002A40  0012               	return		;funcret
 10130  002A42                     __end_of___fldiv:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function _LED_C *****************
 10134 ;; Defined at:
 10135 ;;		line 173 in file "color.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;		None
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1    wreg      void 
 10142 ;; Registers used:
 10143 ;;		wreg
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;Total ram usage:        2 bytes
 10154 ;; Hardware stack levels used: 1
 10155 ;; Hardware stack levels required when called: 1
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_color_data_collection
 10160 ;;		_calibrate_white
 10161 ;;		_amb_light_measure
 10162 ;;		_distance_measure
 10163 ;;		_test_function
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text46
 10168  005C98                     __ptext46:
 10169                           	callstack 0
 10170  005C98                     _LED_C:
 10171                           	callstack 27
 10172  005C98                     
 10173                           ;color.c: 175:     LATGbits.LATG1 = 1;
 10174  005C98  827F               	bsf	127,1,c	;volatile
 10175                           
 10176                           ;color.c: 176:     LATFbits.LATF7 = 1;
 10177  005C9A  8E7E               	bsf	126,7,c	;volatile
 10178                           
 10179                           ;color.c: 177:     LATAbits.LATA4 = 1;
 10180  005C9C  8879               	bsf	121,4,c	;volatile
 10181  005C9E                     
 10182                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10183  005C9E  0E11               	movlw	17
 10184  005CA0  6E02               	movwf	(??_LED_C+1)^0,c
 10185  005CA2  0E3C               	movlw	60
 10186  005CA4  6E01               	movwf	??_LED_C^0,c
 10187  005CA6  0ECB               	movlw	203
 10188  005CA8                     u6207:
 10189  005CA8  2EE8               	decfsz	wreg,f,c
 10190  005CAA  D7FE               	bra	u6207
 10191  005CAC  2E01               	decfsz	??_LED_C^0,f,c
 10192  005CAE  D7FC               	bra	u6207
 10193  005CB0  2E02               	decfsz	(??_LED_C+1)^0,f,c
 10194  005CB2  D7FA               	bra	u6207
 10195  005CB4  F000               	nop	
 10196  005CB6  0012               	return		;funcret
 10197  005CB8                     __end_of_LED_C:
 10198                           	callstack 0
 10199                           
 10200 ;; *************** function _short_burst_back *****************
 10201 ;; Defined at:
 10202 ;;		line 10 in file "movement.c"
 10203 ;; Parameters:    Size  Location     Type
 10204 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10205 ;;		 -> main@motorL(9), 
 10206 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10207 ;;		 -> main@motorR(9), 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10223 ;;Total ram usage:        6 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 4
 10226 ;; This function calls:
 10227 ;;		_fullSpeedAhead
 10228 ;;		_stop
 10229 ;; This function is called by:
 10230 ;;		_main
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text47
 10235  00596C                     __ptext47:
 10236                           	callstack 0
 10237  00596C                     _short_burst_back:
 10238                           	callstack 26
 10239  00596C                     
 10240                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
 10241  00596C  C020  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
 10242  005970  C021  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
 10243  005974  C022  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
 10244  005978  C023  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
 10245  00597C  ECDA  F029         	call	_fullSpeedAhead	;wreg free
 10246  005980                     
 10247                           ;movement.c: 13:     _delay((unsigned long)((600)*(64000000/4000.0)));
 10248  005980  0E31               	movlw	49
 10249  005982  6E25               	movwf	(??_short_burst_back+1)^0,c
 10250  005984  0EB4               	movlw	180
 10251  005986  6E24               	movwf	??_short_burst_back^0,c
 10252  005988  0E66               	movlw	102
 10253  00598A                     u6217:
 10254  00598A  2EE8               	decfsz	wreg,f,c
 10255  00598C  D7FE               	bra	u6217
 10256  00598E  2E24               	decfsz	??_short_burst_back^0,f,c
 10257  005990  D7FC               	bra	u6217
 10258  005992  2E25               	decfsz	(??_short_burst_back+1)^0,f,c
 10259  005994  D7FA               	bra	u6217
 10260  005996                     
 10261                           ;movement.c: 14:     stop(mL,mR);
 10262  005996  C020  F01A         	movff	short_burst_back@mL,stop@mL
 10263  00599A  C021  F01B         	movff	short_burst_back@mL+1,stop@mL+1
 10264  00599E  C022  F01C         	movff	short_burst_back@mR,stop@mR
 10265  0059A2  C023  F01D         	movff	short_burst_back@mR+1,stop@mR+1
 10266  0059A6  EC7C  F029         	call	_stop	;wreg free
 10267  0059AA  0012               	return		;funcret
 10268  0059AC                     __end_of_short_burst_back:
 10269                           	callstack 0
 10270                           
 10271 ;; *************** function _setup_init *****************
 10272 ;; Defined at:
 10273 ;;		line 16 in file "test_and_calibration.c"
 10274 ;; Parameters:    Size  Location     Type
 10275 ;;		None
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		None
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10291 ;;Total ram usage:        0 bytes
 10292 ;; Hardware stack levels used: 1
 10293 ;; Hardware stack levels required when called: 1
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_main
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           	psect	text48
 10302  005D62                     __ptext48:
 10303                           	callstack 0
 10304  005D62                     _setup_init:
 10305                           	callstack 29
 10306  005D62                     
 10307                           ;test_and_calibration.c: 18:     LATDbits.LATD7=0;
 10308  005D62  9E7C               	bcf	124,7,c	;volatile
 10309                           
 10310                           ;test_and_calibration.c: 19:     TRISDbits.TRISD7=0;
 10311  005D64  9E84               	bcf	132,7,c	;volatile
 10312                           
 10313                           ;test_and_calibration.c: 22:     LATHbits.LATH3=0;
 10314  005D66  9680               	bcf	128,3,c	;volatile
 10315                           
 10316                           ;test_and_calibration.c: 23:     TRISHbits.TRISH3=0;
 10317  005D68  9688               	bcf	136,3,c	;volatile
 10318                           
 10319                           ;test_and_calibration.c: 26:     TRISFbits.TRISF2=1;
 10320  005D6A  8486               	bsf	134,2,c	;volatile
 10321                           
 10322                           ;test_and_calibration.c: 27:     ANSELFbits.ANSELF2=0;
 10323  005D6C  010E               	movlb	14	; () banked
 10324  005D6E  95B4               	bcf	180,2,b	;volatile
 10325                           
 10326                           ;test_and_calibration.c: 30:     TRISFbits.TRISF3=1;
 10327  005D70  8686               	bsf	134,3,c	;volatile
 10328                           
 10329                           ;test_and_calibration.c: 31:     ANSELFbits.ANSELF3=0;
 10330  005D72  97B4               	bcf	180,3,b	;volatile
 10331  005D74                     
 10332                           ; BSR set to: 14
 10333  005D74  0012               	return		;funcret
 10334  005D76                     __end_of_setup_init:
 10335                           	callstack 0
 10336                           
 10337 ;; *************** function _pin_init *****************
 10338 ;; Defined at:
 10339 ;;		line 91 in file "movement.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;		None
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  1    wreg      void 
 10346 ;; Registers used:
 10347 ;;		None
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10357 ;;Total ram usage:        0 bytes
 10358 ;; Hardware stack levels used: 1
 10359 ;; Hardware stack levels required when called: 1
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_main
 10364 ;; This function uses a non-reentrant model
 10365 ;;
 10366                           
 10367                           	psect	text49
 10368  005CB8                     __ptext49:
 10369                           	callstack 0
 10370  005CB8                     _pin_init:
 10371                           	callstack 29
 10372  005CB8  8486               	bsf	134,2,c	;volatile
 10373                           
 10374                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
 10375  005CBA  010E               	movlb	14	; () banked
 10376  005CBC  95B4               	bcf	180,2,b	;volatile
 10377                           
 10378                           ;movement.c: 94:     TRISFbits.TRISF3=1;
 10379  005CBE  8686               	bsf	134,3,c	;volatile
 10380                           
 10381                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
 10382  005CC0  97B4               	bcf	180,3,b	;volatile
 10383                           
 10384                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
 10385  005CC2  9287               	bcf	135,1,c	;volatile
 10386                           
 10387                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
 10388  005CC4  9E86               	bcf	134,7,c	;volatile
 10389                           
 10390                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
 10391  005CC6  9881               	bcf	129,4,c	;volatile
 10392                           
 10393                           ;movement.c: 103:     LATGbits.LATG1 = 1;
 10394  005CC8  827F               	bsf	127,1,c	;volatile
 10395                           
 10396                           ;movement.c: 104:     LATFbits.LATF7 = 1;
 10397  005CCA  8E7E               	bsf	126,7,c	;volatile
 10398                           
 10399                           ;movement.c: 105:     LATAbits.LATA4 = 1;
 10400  005CCC  8879               	bsf	121,4,c	;volatile
 10401                           
 10402                           ;movement.c: 108:     TRISDbits.TRISD7 = 0;
 10403  005CCE  9E84               	bcf	132,7,c	;volatile
 10404                           
 10405                           ;movement.c: 109:     LATDbits.LATD7 = 0;
 10406  005CD0  9E7C               	bcf	124,7,c	;volatile
 10407                           
 10408                           ;movement.c: 110:     TRISHbits.TRISH3 = 0;
 10409  005CD2  9688               	bcf	136,3,c	;volatile
 10410                           
 10411                           ;movement.c: 111:     LATHbits.LATH3 = 0;
 10412  005CD4  9680               	bcf	128,3,c	;volatile
 10413  005CD6                     
 10414                           ; BSR set to: 14
 10415  005CD6  0012               	return		;funcret
 10416  005CD8                     __end_of_pin_init:
 10417                           	callstack 0
 10418                           
 10419 ;; *************** function _initUSART4 *****************
 10420 ;; Defined at:
 10421 ;;		line 4 in file "serial.c"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;		None
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;		None
 10426 ;; Return value:  Size  Location     Type
 10427 ;;                  1    wreg      void 
 10428 ;; Registers used:
 10429 ;;		wreg, status,2
 10430 ;; Tracked objects:
 10431 ;;		On entry : 0/0
 10432 ;;		On exit  : 0/0
 10433 ;;		Unchanged: 0/0
 10434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;Total ram usage:        0 bytes
 10440 ;; Hardware stack levels used: 1
 10441 ;; Hardware stack levels required when called: 1
 10442 ;; This function calls:
 10443 ;;		Nothing
 10444 ;; This function is called by:
 10445 ;;		_main
 10446 ;; This function uses a non-reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text50
 10450  005CF8                     __ptext50:
 10451                           	callstack 0
 10452  005CF8                     _initUSART4:
 10453                           	callstack 29
 10454  005CF8                     
 10455                           ;serial.c: 8:     RC0PPS = 0x12;
 10456  005CF8  0E12               	movlw	18
 10457  005CFA  010E               	movlb	14	; () banked
 10458  005CFC  6F62               	movwf	98,b	;volatile
 10459                           
 10460                           ;serial.c: 9:     RX4PPS = 0x11;
 10461  005CFE  0E11               	movlw	17
 10462  005D00  6F15               	movwf	21,b	;volatile
 10463  005D02                     
 10464                           ; BSR set to: 14
 10465                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 10466  005D02  97E9               	bcf	233,3,b	;volatile
 10467  005D04                     
 10468                           ; BSR set to: 14
 10469                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 10470  005D04  95E8               	bcf	232,2,b	;volatile
 10471                           
 10472                           ;serial.c: 13:     SP4BRGL = 51;
 10473  005D06  0E33               	movlw	51
 10474  005D08  6FE5               	movwf	229,b	;volatile
 10475                           
 10476                           ;serial.c: 15:     SP4BRGH = 0;
 10477  005D0A  0E00               	movlw	0
 10478  005D0C  6FE6               	movwf	230,b	;volatile
 10479  005D0E                     
 10480                           ; BSR set to: 14
 10481                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 10482  005D0E  89E7               	bsf	231,4,b	;volatile
 10483  005D10                     
 10484                           ; BSR set to: 14
 10485                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 10486  005D10  8BE8               	bsf	232,5,b	;volatile
 10487  005D12                     
 10488                           ; BSR set to: 14
 10489                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 10490  005D12  8FE7               	bsf	231,7,b	;volatile
 10491  005D14                     
 10492                           ; BSR set to: 14
 10493  005D14  0012               	return		;funcret
 10494  005D16                     __end_of_initUSART4:
 10495                           	callstack 0
 10496                           
 10497 ;; *************** function _initDCmotors_parameter *****************
 10498 ;; Defined at:
 10499 ;;		line 40 in file "dc_motor.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 10502 ;;		 -> main@motorL(9), 
 10503 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 10504 ;;		 -> main@motorR(9), 
 10505 ;; Auto vars:     Size  Location     Type
 10506 ;;		None
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      void 
 10509 ;; Registers used:
 10510 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10519 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10520 ;;Total ram usage:        4 bytes
 10521 ;; Hardware stack levels used: 1
 10522 ;; Hardware stack levels required when called: 1
 10523 ;; This function calls:
 10524 ;;		Nothing
 10525 ;; This function is called by:
 10526 ;;		_main
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text51
 10531  004E4C                     __ptext51:
 10532                           	callstack 0
 10533  004E4C                     _initDCmotors_parameter:
 10534                           	callstack 29
 10535  004E4C                     
 10536                           ;dc_motor.c: 42:     motorL->power = 0;
 10537  004E4C  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 10538  004E50  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 10539  004E54  0E00               	movlw	0
 10540  004E56  6EDF               	movwf	indf2,c
 10541  004E58                     
 10542                           ;dc_motor.c: 43:     motorL->direction = 1;
 10543  004E58  EE20 F001          	lfsr	2,1
 10544  004E5C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10545  004E5E  26D9               	addwf	fsr2l,f,c
 10546  004E60  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10547  004E62  22DA               	addwfc	fsr2h,f,c
 10548  004E64  0E01               	movlw	1
 10549  004E66  6EDF               	movwf	indf2,c
 10550  004E68                     
 10551                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 10552  004E68  EE20 F002          	lfsr	2,2
 10553  004E6C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10554  004E6E  26D9               	addwf	fsr2l,f,c
 10555  004E70  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10556  004E72  22DA               	addwfc	fsr2h,f,c
 10557  004E74  0EA3               	movlw	163
 10558  004E76  6EDE               	movwf	postinc2,c
 10559  004E78  0E0F               	movlw	15
 10560  004E7A  6EDD               	movwf	postdec2,c
 10561  004E7C                     
 10562                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
 10563  004E7C  EE20 F004          	lfsr	2,4
 10564  004E80  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10565  004E82  26D9               	addwf	fsr2l,f,c
 10566  004E84  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10567  004E86  22DA               	addwfc	fsr2h,f,c
 10568  004E88  0E7D               	movlw	125
 10569  004E8A  6EDE               	movwf	postinc2,c
 10570  004E8C  0E0F               	movlw	15
 10571  004E8E  6EDD               	movwf	postdec2,c
 10572  004E90                     
 10573                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
 10574  004E90  EE20 F006          	lfsr	2,6
 10575  004E94  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10576  004E96  26D9               	addwf	fsr2l,f,c
 10577  004E98  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10578  004E9A  22DA               	addwfc	fsr2h,f,c
 10579  004E9C  0E04               	movlw	4
 10580  004E9E  6EDF               	movwf	indf2,c
 10581  004EA0                     
 10582                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
 10583  004EA0  EE20 F007          	lfsr	2,7
 10584  004EA4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10585  004EA6  26D9               	addwf	fsr2l,f,c
 10586  004EA8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10587  004EAA  22DA               	addwfc	fsr2h,f,c
 10588  004EAC  0EC7               	movlw	199
 10589  004EAE  6EDE               	movwf	postinc2,c
 10590  004EB0  0E00               	movlw	0
 10591  004EB2  6EDD               	movwf	postdec2,c
 10592  004EB4                     
 10593                           ;dc_motor.c: 50:     motorR->power = 0;
 10594  004EB4  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 10595  004EB8  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 10596  004EBC  0E00               	movlw	0
 10597  004EBE  6EDF               	movwf	indf2,c
 10598                           
 10599                           ;dc_motor.c: 51:     motorR->direction = 1;
 10600  004EC0  EE20 F001          	lfsr	2,1
 10601  004EC4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10602  004EC6  26D9               	addwf	fsr2l,f,c
 10603  004EC8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10604  004ECA  22DA               	addwfc	fsr2h,f,c
 10605  004ECC  0E01               	movlw	1
 10606  004ECE  6EDF               	movwf	indf2,c
 10607                           
 10608                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 10609  004ED0  EE20 F002          	lfsr	2,2
 10610  004ED4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10611  004ED6  26D9               	addwf	fsr2l,f,c
 10612  004ED8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10613  004EDA  22DA               	addwfc	fsr2h,f,c
 10614  004EDC  0EA0               	movlw	160
 10615  004EDE  6EDE               	movwf	postinc2,c
 10616  004EE0  0E0F               	movlw	15
 10617  004EE2  6EDD               	movwf	postdec2,c
 10618                           
 10619                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
 10620  004EE4  EE20 F004          	lfsr	2,4
 10621  004EE8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10622  004EEA  26D9               	addwf	fsr2l,f,c
 10623  004EEC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10624  004EEE  22DA               	addwfc	fsr2h,f,c
 10625  004EF0  0E7F               	movlw	127
 10626  004EF2  6EDE               	movwf	postinc2,c
 10627  004EF4  0E0F               	movlw	15
 10628  004EF6  6EDD               	movwf	postdec2,c
 10629                           
 10630                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
 10631  004EF8  EE20 F006          	lfsr	2,6
 10632  004EFC  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10633  004EFE  26D9               	addwf	fsr2l,f,c
 10634  004F00  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10635  004F02  22DA               	addwfc	fsr2h,f,c
 10636  004F04  0E06               	movlw	6
 10637  004F06  6EDF               	movwf	indf2,c
 10638                           
 10639                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
 10640  004F08  EE20 F007          	lfsr	2,7
 10641  004F0C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10642  004F0E  26D9               	addwf	fsr2l,f,c
 10643  004F10  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10644  004F12  22DA               	addwfc	fsr2h,f,c
 10645  004F14  0EC7               	movlw	199
 10646  004F16  6EDE               	movwf	postinc2,c
 10647  004F18  0E00               	movlw	0
 10648  004F1A  6EDD               	movwf	postdec2,c
 10649  004F1C  0012               	return		;funcret
 10650  004F1E                     __end_of_initDCmotors_parameter:
 10651                           	callstack 0
 10652                           
 10653 ;; *************** function _initDCmotorsPWM *****************
 10654 ;; Defined at:
 10655 ;;		line 10 in file "dc_motor.c"
 10656 ;; Parameters:    Size  Location     Type
 10657 ;;  PWMperiod       2    0[COMRAM] int 
 10658 ;; Auto vars:     Size  Location     Type
 10659 ;;		None
 10660 ;; Return value:  Size  Location     Type
 10661 ;;                  1    wreg      void 
 10662 ;; Registers used:
 10663 ;;		wreg, status,2
 10664 ;; Tracked objects:
 10665 ;;		On entry : 0/0
 10666 ;;		On exit  : 0/0
 10667 ;;		Unchanged: 0/0
 10668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;Total ram usage:        2 bytes
 10674 ;; Hardware stack levels used: 1
 10675 ;; Hardware stack levels required when called: 1
 10676 ;; This function calls:
 10677 ;;		Nothing
 10678 ;; This function is called by:
 10679 ;;		_main
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           	psect	text52
 10684  0058A8                     __ptext52:
 10685                           	callstack 0
 10686  0058A8                     _initDCmotorsPWM:
 10687                           	callstack 29
 10688  0058A8                     
 10689                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
 10690  0058A8  9485               	bcf	133,2,c	;volatile
 10691                           
 10692                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
 10693  0058AA  9E83               	bcf	131,7,c	;volatile
 10694                           
 10695                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
 10696  0058AC  9C87               	bcf	135,6,c	;volatile
 10697                           
 10698                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
 10699  0058AE  9885               	bcf	133,4,c	;volatile
 10700                           
 10701                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
 10702  0058B0  947D               	bcf	125,2,c	;volatile
 10703                           
 10704                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
 10705  0058B2  9E7B               	bcf	123,7,c	;volatile
 10706                           
 10707                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
 10708  0058B4  9C7F               	bcf	127,6,c	;volatile
 10709                           
 10710                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
 10711  0058B6  987D               	bcf	125,4,c	;volatile
 10712  0058B8                     
 10713                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
 10714  0058B8  50BD               	movf	189,w,c	;volatile
 10715  0058BA  0B8F               	andlw	-113
 10716  0058BC  0930               	iorlw	48
 10717  0058BE  6EBD               	movwf	189,c	;volatile
 10718                           
 10719                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
 10720  0058C0  0EE0               	movlw	-32
 10721  0058C2  16BE               	andwf	190,f,c	;volatile
 10722                           
 10723                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
 10724  0058C4  50BF               	movf	191,w,c	;volatile
 10725  0058C6  0BF0               	andlw	-16
 10726  0058C8  0901               	iorlw	1
 10727  0058CA  6EBF               	movwf	191,c	;volatile
 10728                           
 10729                           ;dc_motor.c: 28:     T2PR=200-1;
 10730  0058CC  0EC7               	movlw	199
 10731  0058CE  6EBC               	movwf	188,c	;volatile
 10732  0058D0                     
 10733                           ;dc_motor.c: 29:     T2CONbits.ON=1;
 10734  0058D0  8EBD               	bsf	189,7,c	;volatile
 10735                           
 10736                           ;dc_motor.c: 31:     RE2PPS=0x0A;
 10737  0058D2  0E0A               	movlw	10
 10738  0058D4  010E               	movlb	14	; () banked
 10739  0058D6  6F74               	movwf	116,b	;volatile
 10740                           
 10741                           ;dc_motor.c: 32:     RC7PPS=0x0B;
 10742  0058D8  0E0B               	movlw	11
 10743  0058DA  6F69               	movwf	105,b	;volatile
 10744                           
 10745                           ;dc_motor.c: 34:     PWM6DCH=0;
 10746  0058DC  0E00               	movlw	0
 10747  0058DE  6EA3               	movwf	163,c	;volatile
 10748                           
 10749                           ;dc_motor.c: 35:     PWM7DCH=0;
 10750  0058E0  0E00               	movlw	0
 10751  0058E2  6EA0               	movwf	160,c	;volatile
 10752  0058E4                     
 10753                           ; BSR set to: 14
 10754                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
 10755  0058E4  8EA4               	bsf	164,7,c	;volatile
 10756  0058E6                     
 10757                           ; BSR set to: 14
 10758                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
 10759  0058E6  8EA1               	bsf	161,7,c	;volatile
 10760  0058E8                     
 10761                           ; BSR set to: 14
 10762  0058E8  0012               	return		;funcret
 10763  0058EA                     __end_of_initDCmotorsPWM:
 10764                           	callstack 0
 10765                           
 10766 ;; *************** function _color_click_init *****************
 10767 ;; Defined at:
 10768 ;;		line 67 in file "color.c"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;		None
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;		None
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10784 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10786 ;;Total ram usage:        1 bytes
 10787 ;; Hardware stack levels used: 1
 10788 ;; Hardware stack levels required when called: 4
 10789 ;; This function calls:
 10790 ;;		_I2C_2_Master_Init
 10791 ;;		_color_writetoaddr
 10792 ;; This function is called by:
 10793 ;;		_main
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           	psect	text53
 10798  005B0E                     __ptext53:
 10799                           	callstack 0
 10800  005B0E                     _color_click_init:
 10801                           	callstack 26
 10802  005B0E                     
 10803                           ;color.c: 70:     I2C_2_Master_Init();
 10804  005B0E  ECD0  F02D         	call	_I2C_2_Master_Init	;wreg free
 10805  005B12                     
 10806                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
 10807  005B12  0E01               	movlw	1
 10808  005B14  6E03               	movwf	color_writetoaddr@value^0,c
 10809  005B16  0E00               	movlw	0
 10810  005B18  EC6C  F02E         	call	_color_writetoaddr
 10811  005B1C                     
 10812                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10813  005B1C  0E3F               	movlw	63
 10814  005B1E  6E05               	movwf	??_color_click_init^0,c
 10815  005B20  0E55               	movlw	85
 10816  005B22                     u6227:
 10817  005B22  2EE8               	decfsz	wreg,f,c
 10818  005B24  D7FE               	bra	u6227
 10819  005B26  2E05               	decfsz	??_color_click_init^0,f,c
 10820  005B28  D7FC               	bra	u6227
 10821  005B2A  F000               	nop	
 10822  005B2C                     
 10823                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
 10824  005B2C  0E03               	movlw	3
 10825  005B2E  6E03               	movwf	color_writetoaddr@value^0,c
 10826  005B30  0E00               	movlw	0
 10827  005B32  EC6C  F02E         	call	_color_writetoaddr
 10828  005B36                     
 10829                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
 10830  005B36  0ED5               	movlw	213
 10831  005B38  6E03               	movwf	color_writetoaddr@value^0,c
 10832  005B3A  0E01               	movlw	1
 10833  005B3C  EC6C  F02E         	call	_color_writetoaddr
 10834  005B40  0012               	return		;funcret
 10835  005B42                     __end_of_color_click_init:
 10836                           	callstack 0
 10837                           
 10838 ;; *************** function _color_writetoaddr *****************
 10839 ;; Defined at:
 10840 ;;		line 83 in file "color.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;  address         1    wreg     unsigned char 
 10843 ;;  value           1    2[COMRAM] unsigned char 
 10844 ;; Auto vars:     Size  Location     Type
 10845 ;;  address         1    3[COMRAM] unsigned char 
 10846 ;; Return value:  Size  Location     Type
 10847 ;;                  1    wreg      void 
 10848 ;; Registers used:
 10849 ;;		wreg, status,2, status,0, cstack
 10850 ;; Tracked objects:
 10851 ;;		On entry : 0/0
 10852 ;;		On exit  : 0/0
 10853 ;;		Unchanged: 0/0
 10854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10855 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10859 ;;Total ram usage:        2 bytes
 10860 ;; Hardware stack levels used: 1
 10861 ;; Hardware stack levels required when called: 3
 10862 ;; This function calls:
 10863 ;;		_I2C_2_Master_Start
 10864 ;;		_I2C_2_Master_Stop
 10865 ;;		_I2C_2_Master_Write
 10866 ;; This function is called by:
 10867 ;;		_color_click_init
 10868 ;; This function uses a non-reentrant model
 10869 ;;
 10870                           
 10871                           	psect	text54
 10872  005CD8                     __ptext54:
 10873                           	callstack 0
 10874  005CD8                     _color_writetoaddr:
 10875                           	callstack 26
 10876                           
 10877                           ;incstack = 0
 10878                           ;color_writetoaddr@address stored from wreg
 10879  005CD8  6E04               	movwf	color_writetoaddr@address^0,c
 10880  005CDA                     
 10881                           ;color.c: 84:     I2C_2_Master_Start();
 10882  005CDA  ECD1  F02E         	call	_I2C_2_Master_Start	;wreg free
 10883                           
 10884                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
 10885  005CDE  0E52               	movlw	82
 10886  005CE0  ECBB  F02E         	call	_I2C_2_Master_Write
 10887                           
 10888                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
 10889  005CE4  5004               	movf	color_writetoaddr@address^0,w,c
 10890  005CE6  0980               	iorlw	128
 10891  005CE8  ECBB  F02E         	call	_I2C_2_Master_Write
 10892                           
 10893                           ;color.c: 87:     I2C_2_Master_Write(value);
 10894  005CEC  5003               	movf	color_writetoaddr@value^0,w,c
 10895  005CEE  ECBB  F02E         	call	_I2C_2_Master_Write
 10896                           
 10897                           ;color.c: 88:     I2C_2_Master_Stop();
 10898  005CF2  ECCC  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10899  005CF6  0012               	return		;funcret
 10900  005CF8                     __end_of_color_writetoaddr:
 10901                           	callstack 0
 10902                           
 10903 ;; *************** function _I2C_2_Master_Write *****************
 10904 ;; Defined at:
 10905 ;;		line 45 in file "i2c.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;  data_byte       1    wreg     unsigned char 
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;  data_byte       1    1[COMRAM] unsigned char 
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, status,2, status,0, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;Total ram usage:        1 bytes
 10924 ;; Hardware stack levels used: 1
 10925 ;; Hardware stack levels required when called: 2
 10926 ;; This function calls:
 10927 ;;		_I2C_2_Master_Idle
 10928 ;; This function is called by:
 10929 ;;		_color_writetoaddr
 10930 ;;		_color_read_Red
 10931 ;;		_color_read_Blue
 10932 ;;		_color_read_Green
 10933 ;;		_color_read_Clear
 10934 ;; This function uses a non-reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text55
 10938  005D76                     __ptext55:
 10939                           	callstack 0
 10940  005D76                     _I2C_2_Master_Write:
 10941                           	callstack 24
 10942                           
 10943                           ;incstack = 0
 10944                           ;I2C_2_Master_Write@data_byte stored from wreg
 10945  005D76  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10946  005D78                     
 10947                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10948  005D78  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10949  005D7C                     
 10950                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10951  005D7C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10952  005D80  0012               	return		;funcret
 10953  005D82                     __end_of_I2C_2_Master_Write:
 10954                           	callstack 0
 10955                           
 10956 ;; *************** function _I2C_2_Master_Stop *****************
 10957 ;; Defined at:
 10958 ;;		line 39 in file "i2c.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;		None
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;		None
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  1    wreg      void 
 10965 ;; Registers used:
 10966 ;;		wreg, status,2, status,0, cstack
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10976 ;;Total ram usage:        0 bytes
 10977 ;; Hardware stack levels used: 1
 10978 ;; Hardware stack levels required when called: 2
 10979 ;; This function calls:
 10980 ;;		_I2C_2_Master_Idle
 10981 ;; This function is called by:
 10982 ;;		_color_writetoaddr
 10983 ;;		_color_read_Red
 10984 ;;		_color_read_Blue
 10985 ;;		_color_read_Green
 10986 ;;		_color_read_Clear
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text56
 10991  005D98                     __ptext56:
 10992                           	callstack 0
 10993  005D98                     _I2C_2_Master_Stop:
 10994                           	callstack 24
 10995  005D98                     
 10996                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10997  005D98  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10998  005D9C                     
 10999                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11000  005D9C  010E               	movlb	14	; () banked
 11001  005D9E  85DA               	bsf	218,2,b	;volatile
 11002  005DA0                     
 11003                           ; BSR set to: 14
 11004  005DA0  0012               	return		;funcret
 11005  005DA2                     __end_of_I2C_2_Master_Stop:
 11006                           	callstack 0
 11007                           
 11008 ;; *************** function _I2C_2_Master_Start *****************
 11009 ;; Defined at:
 11010 ;;		line 27 in file "i2c.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;		None
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;                  1    wreg      void 
 11017 ;; Registers used:
 11018 ;;		wreg, status,2, status,0, cstack
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;Total ram usage:        0 bytes
 11029 ;; Hardware stack levels used: 1
 11030 ;; Hardware stack levels required when called: 2
 11031 ;; This function calls:
 11032 ;;		_I2C_2_Master_Idle
 11033 ;; This function is called by:
 11034 ;;		_color_writetoaddr
 11035 ;;		_color_read_Red
 11036 ;;		_color_read_Blue
 11037 ;;		_color_read_Green
 11038 ;;		_color_read_Clear
 11039 ;; This function uses a non-reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text57
 11043  005DA2                     __ptext57:
 11044                           	callstack 0
 11045  005DA2                     _I2C_2_Master_Start:
 11046                           	callstack 24
 11047  005DA2                     
 11048                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11049  005DA2  ECE5  F02D         	call	_I2C_2_Master_Idle	;wreg free
 11050  005DA6                     
 11051                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11052  005DA6  010E               	movlb	14	; () banked
 11053  005DA8  81DA               	bsf	218,0,b	;volatile
 11054  005DAA                     
 11055                           ; BSR set to: 14
 11056  005DAA  0012               	return		;funcret
 11057  005DAC                     __end_of_I2C_2_Master_Start:
 11058                           	callstack 0
 11059                           
 11060 ;; *************** function _I2C_2_Master_Idle *****************
 11061 ;; Defined at:
 11062 ;;		line 22 in file "i2c.c"
 11063 ;; Parameters:    Size  Location     Type
 11064 ;;		None
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      void 
 11069 ;; Registers used:
 11070 ;;		wreg, status,2, status,0
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;Total ram usage:        1 bytes
 11081 ;; Hardware stack levels used: 1
 11082 ;; Hardware stack levels required when called: 1
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_I2C_2_Master_Start
 11087 ;;		_I2C_2_Master_RepStart
 11088 ;;		_I2C_2_Master_Stop
 11089 ;;		_I2C_2_Master_Write
 11090 ;;		_I2C_2_Master_Read
 11091 ;; This function uses a non-reentrant model
 11092 ;;
 11093                           
 11094                           	psect	text58
 11095  005BCA                     __ptext58:
 11096                           	callstack 0
 11097  005BCA                     _I2C_2_Master_Idle:
 11098                           	callstack 24
 11099  005BCA                     l206:
 11100  005BCA  010E               	movlb	14	; () banked
 11101  005BCC  B5D8               	btfsc	216,2,b	;volatile
 11102  005BCE  EFEB  F02D         	goto	u3411
 11103  005BD2  EFED  F02D         	goto	u3410
 11104  005BD6                     u3411:
 11105  005BD6  EFE5  F02D         	goto	l206
 11106  005BDA                     u3410:
 11107  005BDA                     
 11108                           ; BSR set to: 14
 11109  005BDA  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11110  005BDE  0E1F               	movlw	31
 11111  005BE0  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11112  005BE2  A4D8               	btfss	status,2,c
 11113  005BE4  EFF6  F02D         	goto	u3421
 11114  005BE8  EFF8  F02D         	goto	u3420
 11115  005BEC                     u3421:
 11116  005BEC  EFE5  F02D         	goto	l206
 11117  005BF0                     u3420:
 11118  005BF0                     
 11119                           ; BSR set to: 14
 11120  005BF0  0012               	return		;funcret
 11121  005BF2                     __end_of_I2C_2_Master_Idle:
 11122                           	callstack 0
 11123                           
 11124 ;; *************** function _I2C_2_Master_Init *****************
 11125 ;; Defined at:
 11126 ;;		line 4 in file "i2c.c"
 11127 ;; Parameters:    Size  Location     Type
 11128 ;;		None
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;		None
 11131 ;; Return value:  Size  Location     Type
 11132 ;;                  1    wreg      void 
 11133 ;; Registers used:
 11134 ;;		wreg, status,2
 11135 ;; Tracked objects:
 11136 ;;		On entry : 0/0
 11137 ;;		On exit  : 0/0
 11138 ;;		Unchanged: 0/0
 11139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11144 ;;Total ram usage:        0 bytes
 11145 ;; Hardware stack levels used: 1
 11146 ;; Hardware stack levels required when called: 1
 11147 ;; This function calls:
 11148 ;;		Nothing
 11149 ;; This function is called by:
 11150 ;;		_color_click_init
 11151 ;;		_main
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           	psect	text59
 11156  005BA0                     __ptext59:
 11157                           	callstack 0
 11158  005BA0                     _I2C_2_Master_Init:
 11159                           	callstack 28
 11160  005BA0                     
 11161                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11162  005BA0  010E               	movlb	14	; () banked
 11163  005BA2  51D9               	movf	217,w,b	;volatile
 11164  005BA4  0BF0               	andlw	-16
 11165  005BA6  0908               	iorlw	8
 11166  005BA8  6FD9               	movwf	217,b	;volatile
 11167  005BAA                     
 11168                           ; BSR set to: 14
 11169                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11170  005BAA  8BD9               	bsf	217,5,b	;volatile
 11171                           
 11172                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11173  005BAC  0E9F               	movlw	159
 11174  005BAE  6FD6               	movwf	214,b	;volatile
 11175  005BB0                     
 11176                           ; BSR set to: 14
 11177                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11178  005BB0  8A84               	bsf	132,5,c	;volatile
 11179  005BB2                     
 11180                           ; BSR set to: 14
 11181                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11182  005BB2  8C84               	bsf	132,6,c	;volatile
 11183  005BB4                     
 11184                           ; BSR set to: 14
 11185                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11186  005BB4  9BA7               	bcf	167,5,b	;volatile
 11187  005BB6                     
 11188                           ; BSR set to: 14
 11189                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11190  005BB6  9DA7               	bcf	167,6,b	;volatile
 11191                           
 11192                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11193  005BB8  0E1D               	movlw	29
 11194  005BBA  6F1D               	movwf	29,b	;volatile
 11195                           
 11196                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11197  005BBC  0E1E               	movlw	30
 11198  005BBE  6F1C               	movwf	28,b	;volatile
 11199                           
 11200                           ;i2c.c: 18:   RD5PPS=0x1C;
 11201  005BC0  0E1C               	movlw	28
 11202  005BC2  6F6F               	movwf	111,b	;volatile
 11203                           
 11204                           ;i2c.c: 19:   RD6PPS=0x1B;
 11205  005BC4  0E1B               	movlw	27
 11206  005BC6  6F70               	movwf	112,b	;volatile
 11207  005BC8                     
 11208                           ; BSR set to: 14
 11209  005BC8  0012               	return		;funcret
 11210  005BCA                     __end_of_I2C_2_Master_Init:
 11211                           	callstack 0
 11212                           
 11213 ;; *************** function _calibration_motor *****************
 11214 ;; Defined at:
 11215 ;;		line 77 in file "test_and_calibration.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  mL              2   53[COMRAM] PTR struct DC_motor
 11218 ;;		 -> main@motorL(9), 
 11219 ;;  mR              2   55[COMRAM] PTR struct DC_motor
 11220 ;;		 -> main@motorR(9), 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;		None
 11223 ;; Return value:  Size  Location     Type
 11224 ;;                  1    wreg      void 
 11225 ;; Registers used:
 11226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11234 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11236 ;;Total ram usage:        6 bytes
 11237 ;; Hardware stack levels used: 1
 11238 ;; Hardware stack levels required when called: 6
 11239 ;; This function calls:
 11240 ;;		_test_action
 11241 ;; This function is called by:
 11242 ;;		_main
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           	psect	text60
 11247  004D66                     __ptext60:
 11248                           	callstack 0
 11249  004D66                     _calibration_motor:
 11250                           	callstack 24
 11251  004D66                     l808:
 11252                           
 11253                           ;test_and_calibration.c: 80:         LATDbits.LATD7 = 1;
 11254  004D66  8E7C               	bsf	124,7,c	;volatile
 11255                           
 11256                           ;test_and_calibration.c: 81:         LATHbits.LATH3 = 1;
 11257  004D68  8680               	bsf	128,3,c	;volatile
 11258                           
 11259                           ;test_and_calibration.c: 83:         if (!PORTFbits.RF2) {
 11260  004D6A  B48E               	btfsc	142,2,c	;volatile
 11261  004D6C  EFBA  F026         	goto	u5511
 11262  004D70  EFBC  F026         	goto	u5510
 11263  004D74                     u5511:
 11264  004D74  EFE6  F026         	goto	l809
 11265  004D78                     u5510:
 11266  004D78                     
 11267                           ;test_and_calibration.c: 84:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
 11268  004D78  0E19               	movlw	25
 11269  004D7A  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11270  004D7C  0E5A               	movlw	90
 11271  004D7E  6E3A               	movwf	??_calibration_motor^0,c
 11272  004D80  0EB2               	movlw	178
 11273  004D82                     u6237:
 11274  004D82  2EE8               	decfsz	wreg,f,c
 11275  004D84  D7FE               	bra	u6237
 11276  004D86  2E3A               	decfsz	??_calibration_motor^0,f,c
 11277  004D88  D7FC               	bra	u6237
 11278  004D8A  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11279  004D8C  D7FA               	bra	u6237
 11280  004D8E                     
 11281                           ;test_and_calibration.c: 85:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
 11282  004D8E  B48E               	btfsc	142,2,c	;volatile
 11283  004D90  EFCC  F026         	goto	u5521
 11284  004D94  EFCE  F026         	goto	u5520
 11285  004D98                     u5521:
 11286  004D98  EFDD  F026         	goto	l5404
 11287  004D9C                     u5520:
 11288  004D9C  9E7C               	bcf	124,7,c	;volatile
 11289  004D9E  0E19               	movlw	25
 11290  004DA0  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11291  004DA2  0E5A               	movlw	90
 11292  004DA4  6E3A               	movwf	??_calibration_motor^0,c
 11293  004DA6  0EB2               	movlw	178
 11294  004DA8                     u6247:
 11295  004DA8  2EE8               	decfsz	wreg,f,c
 11296  004DAA  D7FE               	bra	u6247
 11297  004DAC  2E3A               	decfsz	??_calibration_motor^0,f,c
 11298  004DAE  D7FC               	bra	u6247
 11299  004DB0  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11300  004DB2  D7FA               	bra	u6247
 11301  004DB4  0E05               	movlw	5
 11302  004DB6  0100               	movlb	0	; () banked
 11303  004DB8  27FE               	addwf	_SENSITIVITY& (0+255),f,b
 11304  004DBA                     l5404:
 11305                           
 11306                           ;test_and_calibration.c: 86:             if (!PORTFbits.RF3){break;}
 11307  004DBA  B68E               	btfsc	142,3,c	;volatile
 11308  004DBC  EFE2  F026         	goto	u5531
 11309  004DC0  EFE4  F026         	goto	u5530
 11310  004DC4                     u5531:
 11311  004DC4  EFE6  F026         	goto	l809
 11312  004DC8                     u5530:
 11313  004DC8  EF19  F027         	goto	l812
 11314  004DCC                     l809:
 11315                           
 11316                           ;test_and_calibration.c: 88:         if (!PORTFbits.RF3) {
 11317  004DCC  B68E               	btfsc	142,3,c	;volatile
 11318  004DCE  EFEB  F026         	goto	u5541
 11319  004DD2  EFED  F026         	goto	u5540
 11320  004DD6                     u5541:
 11321  004DD6  EFB3  F026         	goto	l808
 11322  004DDA                     u5540:
 11323  004DDA                     
 11324                           ;test_and_calibration.c: 89:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
 11325  004DDA  0E19               	movlw	25
 11326  004DDC  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11327  004DDE  0E5A               	movlw	90
 11328  004DE0  6E3A               	movwf	??_calibration_motor^0,c
 11329  004DE2  0EB2               	movlw	178
 11330  004DE4                     u6257:
 11331  004DE4  2EE8               	decfsz	wreg,f,c
 11332  004DE6  D7FE               	bra	u6257
 11333  004DE8  2E3A               	decfsz	??_calibration_motor^0,f,c
 11334  004DEA  D7FC               	bra	u6257
 11335  004DEC  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11336  004DEE  D7FA               	bra	u6257
 11337  004DF0                     
 11338                           ;test_and_calibration.c: 90:             if (!PORTFbits.RF2){break;}
 11339  004DF0  B48E               	btfsc	142,2,c	;volatile
 11340  004DF2  EFFD  F026         	goto	u5551
 11341  004DF6  EFFF  F026         	goto	u5550
 11342  004DFA                     u5551:
 11343  004DFA  EF01  F027         	goto	l814
 11344  004DFE                     u5550:
 11345  004DFE  EF19  F027         	goto	l812
 11346  004E02                     l814:
 11347                           
 11348                           ;test_and_calibration.c: 91:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
 11349  004E02  B68E               	btfsc	142,3,c	;volatile
 11350  004E04  EF06  F027         	goto	u5561
 11351  004E08  EF08  F027         	goto	u5560
 11352  004E0C                     u5561:
 11353  004E0C  EFB3  F026         	goto	l808
 11354  004E10                     u5560:
 11355  004E10  9680               	bcf	128,3,c	;volatile
 11356  004E12  0E19               	movlw	25
 11357  004E14  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11358  004E16  0E5A               	movlw	90
 11359  004E18  6E3A               	movwf	??_calibration_motor^0,c
 11360  004E1A  0EB2               	movlw	178
 11361  004E1C                     u6267:
 11362  004E1C  2EE8               	decfsz	wreg,f,c
 11363  004E1E  D7FE               	bra	u6267
 11364  004E20  2E3A               	decfsz	??_calibration_motor^0,f,c
 11365  004E22  D7FC               	bra	u6267
 11366  004E24  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11367  004E26  D7FA               	bra	u6267
 11368  004E28  0E05               	movlw	5
 11369  004E2A  0100               	movlb	0	; () banked
 11370  004E2C  5FFE               	subwf	_SENSITIVITY& (0+255),f,b
 11371  004E2E  EFB3  F026         	goto	l808
 11372  004E32                     l812:
 11373                           
 11374                           ;test_and_calibration.c: 94:     LATDbits.LATD7 = 0;
 11375  004E32  9E7C               	bcf	124,7,c	;volatile
 11376                           
 11377                           ;test_and_calibration.c: 95:     LATHbits.LATH3 = 0;
 11378  004E34  9680               	bcf	128,3,c	;volatile
 11379  004E36                     
 11380                           ;test_and_calibration.c: 96:     test_action(mL, mR);
 11381  004E36  C036  F032         	movff	calibration_motor@mL,test_action@mL
 11382  004E3A  C037  F033         	movff	calibration_motor@mL+1,test_action@mL+1
 11383  004E3E  C038  F034         	movff	calibration_motor@mR,test_action@mR
 11384  004E42  C039  F035         	movff	calibration_motor@mR+1,test_action@mR+1
 11385  004E46  ECF4  F01D         	call	_test_action	;wreg free
 11386  004E4A  0012               	return		;funcret
 11387  004E4C                     __end_of_calibration_motor:
 11388                           	callstack 0
 11389                           
 11390 ;; *************** function _test_action *****************
 11391 ;; Defined at:
 11392 ;;		line 69 in file "movement.c"
 11393 ;; Parameters:    Size  Location     Type
 11394 ;;  mL              2   49[COMRAM] PTR struct DC_motor
 11395 ;;		 -> main@motorL(9), 
 11396 ;;  mR              2   51[COMRAM] PTR struct DC_motor
 11397 ;;		 -> main@motorR(9), 
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      void 
 11402 ;; Registers used:
 11403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11412 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11413 ;;Total ram usage:        4 bytes
 11414 ;; Hardware stack levels used: 1
 11415 ;; Hardware stack levels required when called: 5
 11416 ;; This function calls:
 11417 ;;		_fullSpeedAhead_test
 11418 ;;		_turnLeft
 11419 ;;		_turnRight
 11420 ;; This function is called by:
 11421 ;;		_calibration_motor
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           	psect	text61
 11426  003BE8                     __ptext61:
 11427                           	callstack 0
 11428  003BE8                     _test_action:
 11429                           	callstack 24
 11430  003BE8                     
 11431                           ;movement.c: 69: void test_action (struct DC_motor *mL, struct DC_motor *mR);movement.c:
      +                           70: { fullSpeedAhead_test(mL,mR);
 11432  003BE8  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11433  003BEC  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11434  003BF0  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11435  003BF4  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11436  003BF8  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11437                           
 11438                           ;movement.c: 71:     turnLeft(mL,mR,90);
 11439  003BFC  C032  F020         	movff	test_action@mL,turnLeft@mL
 11440  003C00  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11441  003C04  C034  F022         	movff	test_action@mR,turnLeft@mR
 11442  003C08  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11443  003C0C  0E5A               	movlw	90
 11444  003C0E  6E24               	movwf	turnLeft@angle_left^0,c
 11445  003C10  EC17  F022         	call	_turnLeft	;wreg free
 11446                           
 11447                           ;movement.c: 72:     fullSpeedAhead_test(mL,mR);
 11448  003C14  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11449  003C18  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11450  003C1C  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11451  003C20  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11452  003C24  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11453                           
 11454                           ;movement.c: 73:     turnLeft(mL,mR,90);
 11455  003C28  C032  F020         	movff	test_action@mL,turnLeft@mL
 11456  003C2C  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11457  003C30  C034  F022         	movff	test_action@mR,turnLeft@mR
 11458  003C34  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11459  003C38  0E5A               	movlw	90
 11460  003C3A  6E24               	movwf	turnLeft@angle_left^0,c
 11461  003C3C  EC17  F022         	call	_turnLeft	;wreg free
 11462                           
 11463                           ;movement.c: 74:     fullSpeedAhead_test(mL,mR);
 11464  003C40  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11465  003C44  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11466  003C48  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11467  003C4C  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11468  003C50  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11469                           
 11470                           ;movement.c: 75:     turnLeft(mL,mR,180);
 11471  003C54  C032  F020         	movff	test_action@mL,turnLeft@mL
 11472  003C58  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11473  003C5C  C034  F022         	movff	test_action@mR,turnLeft@mR
 11474  003C60  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11475  003C64  0EB4               	movlw	180
 11476  003C66  6E24               	movwf	turnLeft@angle_left^0,c
 11477  003C68  EC17  F022         	call	_turnLeft	;wreg free
 11478                           
 11479                           ;movement.c: 76:     fullSpeedAhead_test(mL,mR);
 11480  003C6C  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11481  003C70  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11482  003C74  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11483  003C78  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11484  003C7C  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11485                           
 11486                           ;movement.c: 77:     turnRight(mL,mR,90);
 11487  003C80  C032  F020         	movff	test_action@mL,turnRight@mL
 11488  003C84  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11489  003C88  C034  F022         	movff	test_action@mR,turnRight@mR
 11490  003C8C  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11491  003C90  0E5A               	movlw	90
 11492  003C92  6E24               	movwf	turnRight@angle_right^0,c
 11493  003C94  EC50  F021         	call	_turnRight	;wreg free
 11494                           
 11495                           ;movement.c: 78:     fullSpeedAhead_test(mL,mR);
 11496  003C98  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11497  003C9C  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11498  003CA0  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11499  003CA4  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11500  003CA8  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11501                           
 11502                           ;movement.c: 79:     turnRight(mL,mR,90);
 11503  003CAC  C032  F020         	movff	test_action@mL,turnRight@mL
 11504  003CB0  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11505  003CB4  C034  F022         	movff	test_action@mR,turnRight@mR
 11506  003CB8  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11507  003CBC  0E5A               	movlw	90
 11508  003CBE  6E24               	movwf	turnRight@angle_right^0,c
 11509  003CC0  EC50  F021         	call	_turnRight	;wreg free
 11510                           
 11511                           ;movement.c: 80:     fullSpeedAhead_test(mL,mR);
 11512  003CC4  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11513  003CC8  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11514  003CCC  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11515  003CD0  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11516  003CD4  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11517                           
 11518                           ;movement.c: 81:     turnLeft(mL,mR,180);
 11519  003CD8  C032  F020         	movff	test_action@mL,turnLeft@mL
 11520  003CDC  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11521  003CE0  C034  F022         	movff	test_action@mR,turnLeft@mR
 11522  003CE4  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11523  003CE8  0EB4               	movlw	180
 11524  003CEA  6E24               	movwf	turnLeft@angle_left^0,c
 11525  003CEC  EC17  F022         	call	_turnLeft	;wreg free
 11526                           
 11527                           ;movement.c: 82:     fullSpeedAhead_test(mL,mR);
 11528  003CF0  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11529  003CF4  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11530  003CF8  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11531  003CFC  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11532  003D00  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11533                           
 11534                           ;movement.c: 83:     turnLeft(mL,mR,135);
 11535  003D04  C032  F020         	movff	test_action@mL,turnLeft@mL
 11536  003D08  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11537  003D0C  C034  F022         	movff	test_action@mR,turnLeft@mR
 11538  003D10  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11539  003D14  0E87               	movlw	135
 11540  003D16  6E24               	movwf	turnLeft@angle_left^0,c
 11541  003D18  EC17  F022         	call	_turnLeft	;wreg free
 11542                           
 11543                           ;movement.c: 84:     fullSpeedAhead_test(mL,mR);
 11544  003D1C  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11545  003D20  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11546  003D24  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11547  003D28  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11548  003D2C  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11549                           
 11550                           ;movement.c: 85:     turnRight(mL,mR,135);
 11551  003D30  C032  F020         	movff	test_action@mL,turnRight@mL
 11552  003D34  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11553  003D38  C034  F022         	movff	test_action@mR,turnRight@mR
 11554  003D3C  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11555  003D40  0E87               	movlw	135
 11556  003D42  6E24               	movwf	turnRight@angle_right^0,c
 11557  003D44  EC50  F021         	call	_turnRight	;wreg free
 11558                           
 11559                           ;movement.c: 86:     fullSpeedAhead_test(mL,mR);
 11560  003D48  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11561  003D4C  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11562  003D50  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11563  003D54  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11564  003D58  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11565                           
 11566                           ;movement.c: 87:     turnLeft(mL,mR,135);
 11567  003D5C  C032  F020         	movff	test_action@mL,turnLeft@mL
 11568  003D60  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11569  003D64  C034  F022         	movff	test_action@mR,turnLeft@mR
 11570  003D68  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11571  003D6C  0E87               	movlw	135
 11572  003D6E  6E24               	movwf	turnLeft@angle_left^0,c
 11573  003D70  EC17  F022         	call	_turnLeft	;wreg free
 11574                           
 11575                           ;movement.c: 88:     fullSpeedAhead_test(mL,mR);
 11576  003D74  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11577  003D78  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11578  003D7C  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11579  003D80  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11580  003D84  EC75  F02C         	call	_fullSpeedAhead_test	;wreg free
 11581                           
 11582                           ;movement.c: 89:     turnRight(mL,mR,135);
 11583  003D88  C032  F020         	movff	test_action@mL,turnRight@mL
 11584  003D8C  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11585  003D90  C034  F022         	movff	test_action@mR,turnRight@mR
 11586  003D94  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11587  003D98  0E87               	movlw	135
 11588  003D9A  6E24               	movwf	turnRight@angle_right^0,c
 11589  003D9C  EC50  F021         	call	_turnRight	;wreg free
 11590  003DA0  0012               	return		;funcret
 11591  003DA2                     __end_of_test_action:
 11592                           	callstack 0
 11593                           
 11594 ;; *************** function _fullSpeedAhead_test *****************
 11595 ;; Defined at:
 11596 ;;		line 162 in file "dc_motor.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11599 ;;		 -> main@motorL(9), 
 11600 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11601 ;;		 -> main@motorR(9), 
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      void 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11615 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11617 ;;Total ram usage:        6 bytes
 11618 ;; Hardware stack levels used: 1
 11619 ;; Hardware stack levels required when called: 4
 11620 ;; This function calls:
 11621 ;;		_fullSpeedAhead
 11622 ;;		_stop
 11623 ;; This function is called by:
 11624 ;;		_test_action
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text62
 11629  0058EA                     __ptext62:
 11630                           	callstack 0
 11631  0058EA                     _fullSpeedAhead_test:
 11632                           	callstack 24
 11633  0058EA                     
 11634                           ;dc_motor.c: 162: void fullSpeedAhead_test(struct DC_motor *mL, struct DC_motor *mR);dc_
      +                          motor.c: 163: { fullSpeedAhead(mL, mR);
 11635  0058EA  C020  F01A         	movff	fullSpeedAhead_test@mL,fullSpeedAhead@mL
 11636  0058EE  C021  F01B         	movff	fullSpeedAhead_test@mL+1,fullSpeedAhead@mL+1
 11637  0058F2  C022  F01C         	movff	fullSpeedAhead_test@mR,fullSpeedAhead@mR
 11638  0058F6  C023  F01D         	movff	fullSpeedAhead_test@mR+1,fullSpeedAhead@mR+1
 11639  0058FA  ECDA  F029         	call	_fullSpeedAhead	;wreg free
 11640  0058FE                     
 11641                           ;dc_motor.c: 164:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 11642  0058FE  0E52               	movlw	82
 11643  005900  6E25               	movwf	(??_fullSpeedAhead_test+1)^0,c
 11644  005902  0E2B               	movlw	43
 11645  005904  6E24               	movwf	??_fullSpeedAhead_test^0,c
 11646  005906  0E00               	movlw	0
 11647  005908                     u6277:
 11648  005908  2EE8               	decfsz	wreg,f,c
 11649  00590A  D7FE               	bra	u6277
 11650  00590C  2E24               	decfsz	??_fullSpeedAhead_test^0,f,c
 11651  00590E  D7FC               	bra	u6277
 11652  005910  2E25               	decfsz	(??_fullSpeedAhead_test+1)^0,f,c
 11653  005912  D7FA               	bra	u6277
 11654  005914  D000               	nop2	
 11655  005916                     
 11656                           ;dc_motor.c: 165:     stop(mL,mR);
 11657  005916  C020  F01A         	movff	fullSpeedAhead_test@mL,stop@mL
 11658  00591A  C021  F01B         	movff	fullSpeedAhead_test@mL+1,stop@mL+1
 11659  00591E  C022  F01C         	movff	fullSpeedAhead_test@mR,stop@mR
 11660  005922  C023  F01D         	movff	fullSpeedAhead_test@mR+1,stop@mR+1
 11661  005926  EC7C  F029         	call	_stop	;wreg free
 11662  00592A  0012               	return		;funcret
 11663  00592C                     __end_of_fullSpeedAhead_test:
 11664                           	callstack 0
 11665                           
 11666 ;; *************** function _buggylight_init *****************
 11667 ;; Defined at:
 11668 ;;		line 13 in file "color.c"
 11669 ;; Parameters:    Size  Location     Type
 11670 ;;		None
 11671 ;; Auto vars:     Size  Location     Type
 11672 ;;		None
 11673 ;; Return value:  Size  Location     Type
 11674 ;;                  1    wreg      void 
 11675 ;; Registers used:
 11676 ;;		None
 11677 ;; Tracked objects:
 11678 ;;		On entry : 0/0
 11679 ;;		On exit  : 0/0
 11680 ;;		Unchanged: 0/0
 11681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11686 ;;Total ram usage:        0 bytes
 11687 ;; Hardware stack levels used: 1
 11688 ;; Hardware stack levels required when called: 1
 11689 ;; This function calls:
 11690 ;;		Nothing
 11691 ;; This function is called by:
 11692 ;;		_main
 11693 ;; This function uses a non-reentrant model
 11694 ;;
 11695                           
 11696                           	psect	text63
 11697  005D4C                     __ptext63:
 11698                           	callstack 0
 11699  005D4C                     _buggylight_init:
 11700                           	callstack 29
 11701  005D4C                     
 11702                           ;color.c: 15:     TRISHbits.TRISH1=0;
 11703  005D4C  9288               	bcf	136,1,c	;volatile
 11704                           
 11705                           ;color.c: 16:     TRISDbits.TRISD4=0;
 11706  005D4E  9884               	bcf	132,4,c	;volatile
 11707                           
 11708                           ;color.c: 17:     TRISDbits.TRISD3=0;
 11709  005D50  9684               	bcf	132,3,c	;volatile
 11710                           
 11711                           ;color.c: 18:     TRISFbits.TRISF0=0;
 11712  005D52  9086               	bcf	134,0,c	;volatile
 11713                           
 11714                           ;color.c: 19:     TRISHbits.TRISH0=0;
 11715  005D54  9088               	bcf	136,0,c	;volatile
 11716                           
 11717                           ;color.c: 21:     LATHbits.LATH1 = 0;
 11718  005D56  9280               	bcf	128,1,c	;volatile
 11719                           
 11720                           ;color.c: 22:     LATDbits.LATD4 = 0;
 11721  005D58  987C               	bcf	124,4,c	;volatile
 11722                           
 11723                           ;color.c: 23:     LATDbits.LATD3 = 0;
 11724  005D5A  967C               	bcf	124,3,c	;volatile
 11725                           
 11726                           ;color.c: 24:     LATFbits.LATF0 = 0;
 11727  005D5C  907E               	bcf	126,0,c	;volatile
 11728                           
 11729                           ;color.c: 25:     LATHbits.LATH0 = 0;
 11730  005D5E  9080               	bcf	128,0,c	;volatile
 11731  005D60  0012               	return		;funcret
 11732  005D62                     __end_of_buggylight_init:
 11733                           	callstack 0
 11734                           
 11735 ;; *************** function _action *****************
 11736 ;; Defined at:
 11737 ;;		line 17 in file "movement.c"
 11738 ;; Parameters:    Size  Location     Type
 11739 ;;  color           1    wreg     unsigned char 
 11740 ;;  mL              2   57[COMRAM] PTR struct DC_motor
 11741 ;;		 -> main@motorL(9), 
 11742 ;;  mR              2   59[COMRAM] PTR struct DC_motor
 11743 ;;		 -> main@motorR(9), 
 11744 ;; Auto vars:     Size  Location     Type
 11745 ;;  color           1   61[COMRAM] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  1    wreg      void 
 11748 ;; Registers used:
 11749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11758 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11759 ;;Total ram usage:        5 bytes
 11760 ;; Hardware stack levels used: 1
 11761 ;; Hardware stack levels required when called: 7
 11762 ;; This function calls:
 11763 ;;		_goback
 11764 ;;		_reverse_square
 11765 ;;		_short_reverse
 11766 ;;		_toggle_light
 11767 ;;		_turnLeft
 11768 ;;		_turnRight
 11769 ;; This function is called by:
 11770 ;;		_main
 11771 ;; This function uses a non-reentrant model
 11772 ;;
 11773                           
 11774                           	psect	text64
 11775  002D2C                     __ptext64:
 11776                           	callstack 0
 11777  002D2C                     _action:
 11778                           	callstack 23
 11779                           
 11780                           ;incstack = 0
 11781                           ;action@color stored from wreg
 11782  002D2C  6E3E               	movwf	action@color^0,c
 11783  002D2E                     
 11784                           ;movement.c: 17: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 18: { if (color != 0){
 11785  002D2E  503E               	movf	action@color^0,w,c
 11786  002D30  B4D8               	btfsc	status,2,c
 11787  002D32  EF9D  F016         	goto	u5651
 11788  002D36  EF9F  F016         	goto	u5650
 11789  002D3A                     u5651:
 11790  002D3A  EFFB  F017         	goto	l652
 11791  002D3E                     u5650:
 11792  002D3E                     
 11793                           ;movement.c: 19:         if (color == 1){
 11794  002D3E  043E               	decf	action@color^0,w,c
 11795  002D40  A4D8               	btfss	status,2,c
 11796  002D42  EFA5  F016         	goto	u5661
 11797  002D46  EFA7  F016         	goto	u5660
 11798  002D4A                     u5661:
 11799  002D4A  EFCB  F016         	goto	l5488
 11800  002D4E                     u5660:
 11801  002D4E                     
 11802                           ;movement.c: 20:             short_reverse(mL,mR);
 11803  002D4E  C03A  F026         	movff	action@mL,short_reverse@mL
 11804  002D52  C03B  F027         	movff	action@mL+1,short_reverse@mL+1
 11805  002D56  C03C  F028         	movff	action@mR,short_reverse@mR
 11806  002D5A  C03D  F029         	movff	action@mR+1,short_reverse@mR+1
 11807  002D5E  ECD6  F02C         	call	_short_reverse	;wreg free
 11808                           
 11809                           ;movement.c: 21:             turnRight(mL,mR,90);
 11810  002D62  C03A  F020         	movff	action@mL,turnRight@mL
 11811  002D66  C03B  F021         	movff	action@mL+1,turnRight@mL+1
 11812  002D6A  C03C  F022         	movff	action@mR,turnRight@mR
 11813  002D6E  C03D  F023         	movff	action@mR+1,turnRight@mR+1
 11814  002D72  0E5A               	movlw	90
 11815  002D74  6E24               	movwf	turnRight@angle_right^0,c
 11816  002D76  EC50  F021         	call	_turnRight	;wreg free
 11817  002D7A                     
 11818                           ;movement.c: 22:             memory[array_index] = 1;
 11819  002D7A  0101               	movlb	1	; () banked
 11820  002D7C  519B               	movf	_array_index& (0+255),w,b
 11821  002D7E  0D02               	mullw	2
 11822  002D80  0E3C               	movlw	low _memory
 11823  002D82  24F3               	addwf	243,w,c
 11824  002D84  6ED9               	movwf	fsr2l,c
 11825  002D86  0E01               	movlw	high _memory
 11826  002D88  20F4               	addwfc	prodh,w,c
 11827  002D8A  6EDA               	movwf	fsr2h,c
 11828  002D8C  0E01               	movlw	1
 11829  002D8E  6EDE               	movwf	postinc2,c
 11830  002D90  0E00               	movlw	0
 11831  002D92  6EDD               	movwf	postdec2,c
 11832  002D94                     
 11833                           ; BSR set to: 1
 11834                           ;movement.c: 23:             array_index++;
 11835  002D94  2B9B               	incf	_array_index& (0+255),f,b
 11836  002D96                     l5488:
 11837                           
 11838                           ;movement.c: 25:         if (color == 2){
 11839  002D96  0E02               	movlw	2
 11840  002D98  183E               	xorwf	action@color^0,w,c
 11841  002D9A  A4D8               	btfss	status,2,c
 11842  002D9C  EFD2  F016         	goto	u5671
 11843  002DA0  EFD4  F016         	goto	u5670
 11844  002DA4                     u5671:
 11845  002DA4  EFF8  F016         	goto	l5496
 11846  002DA8                     u5670:
 11847  002DA8                     
 11848                           ;movement.c: 26:             short_reverse(mL,mR);
 11849  002DA8  C03A  F026         	movff	action@mL,short_reverse@mL
 11850  002DAC  C03B  F027         	movff	action@mL+1,short_reverse@mL+1
 11851  002DB0  C03C  F028         	movff	action@mR,short_reverse@mR
 11852  002DB4  C03D  F029         	movff	action@mR+1,short_reverse@mR+1
 11853  002DB8  ECD6  F02C         	call	_short_reverse	;wreg free
 11854                           
 11855                           ;movement.c: 27:             turnLeft(mL,mR,90);
 11856  002DBC  C03A  F020         	movff	action@mL,turnLeft@mL
 11857  002DC0  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 11858  002DC4  C03C  F022         	movff	action@mR,turnLeft@mR
 11859  002DC8  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 11860  002DCC  0E5A               	movlw	90
 11861  002DCE  6E24               	movwf	turnLeft@angle_left^0,c
 11862  002DD0  EC17  F022         	call	_turnLeft	;wreg free
 11863  002DD4                     
 11864                           ;movement.c: 28:             memory[array_index] = 2;
 11865  002DD4  0101               	movlb	1	; () banked
 11866  002DD6  519B               	movf	_array_index& (0+255),w,b
 11867  002DD8  0D02               	mullw	2
 11868  002DDA  0E3C               	movlw	low _memory
 11869  002DDC  24F3               	addwf	243,w,c
 11870  002DDE  6ED9               	movwf	fsr2l,c
 11871  002DE0  0E01               	movlw	high _memory
 11872  002DE2  20F4               	addwfc	prodh,w,c
 11873  002DE4  6EDA               	movwf	fsr2h,c
 11874  002DE6  0E02               	movlw	2
 11875  002DE8  6EDE               	movwf	postinc2,c
 11876  002DEA  0E00               	movlw	0
 11877  002DEC  6EDD               	movwf	postdec2,c
 11878  002DEE                     
 11879                           ; BSR set to: 1
 11880                           ;movement.c: 29:             array_index++;
 11881  002DEE  2B9B               	incf	_array_index& (0+255),f,b
 11882  002DF0                     l5496:
 11883                           
 11884                           ;movement.c: 31:         if (color == 3){
 11885  002DF0  0E03               	movlw	3
 11886  002DF2  183E               	xorwf	action@color^0,w,c
 11887  002DF4  A4D8               	btfss	status,2,c
 11888  002DF6  EFFF  F016         	goto	u5681
 11889  002DFA  EF01  F017         	goto	u5680
 11890  002DFE                     u5681:
 11891  002DFE  EF25  F017         	goto	l5504
 11892  002E02                     u5680:
 11893  002E02                     
 11894                           ;movement.c: 32:             short_reverse(mL,mR);
 11895  002E02  C03A  F026         	movff	action@mL,short_reverse@mL
 11896  002E06  C03B  F027         	movff	action@mL+1,short_reverse@mL+1
 11897  002E0A  C03C  F028         	movff	action@mR,short_reverse@mR
 11898  002E0E  C03D  F029         	movff	action@mR+1,short_reverse@mR+1
 11899  002E12  ECD6  F02C         	call	_short_reverse	;wreg free
 11900                           
 11901                           ;movement.c: 33:             turnLeft(mL,mR,180);
 11902  002E16  C03A  F020         	movff	action@mL,turnLeft@mL
 11903  002E1A  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 11904  002E1E  C03C  F022         	movff	action@mR,turnLeft@mR
 11905  002E22  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 11906  002E26  0EB4               	movlw	180
 11907  002E28  6E24               	movwf	turnLeft@angle_left^0,c
 11908  002E2A  EC17  F022         	call	_turnLeft	;wreg free
 11909  002E2E                     
 11910                           ;movement.c: 34:             memory[array_index] = 3;
 11911  002E2E  0101               	movlb	1	; () banked
 11912  002E30  519B               	movf	_array_index& (0+255),w,b
 11913  002E32  0D02               	mullw	2
 11914  002E34  0E3C               	movlw	low _memory
 11915  002E36  24F3               	addwf	243,w,c
 11916  002E38  6ED9               	movwf	fsr2l,c
 11917  002E3A  0E01               	movlw	high _memory
 11918  002E3C  20F4               	addwfc	prodh,w,c
 11919  002E3E  6EDA               	movwf	fsr2h,c
 11920  002E40  0E03               	movlw	3
 11921  002E42  6EDE               	movwf	postinc2,c
 11922  002E44  0E00               	movlw	0
 11923  002E46  6EDD               	movwf	postdec2,c
 11924  002E48                     
 11925                           ; BSR set to: 1
 11926                           ;movement.c: 35:             array_index++;
 11927  002E48  2B9B               	incf	_array_index& (0+255),f,b
 11928  002E4A                     l5504:
 11929                           
 11930                           ;movement.c: 37:         if (color == 4){
 11931  002E4A  0E04               	movlw	4
 11932  002E4C  183E               	xorwf	action@color^0,w,c
 11933  002E4E  A4D8               	btfss	status,2,c
 11934  002E50  EF2C  F017         	goto	u5691
 11935  002E54  EF2E  F017         	goto	u5690
 11936  002E58                     u5691:
 11937  002E58  EF52  F017         	goto	l5512
 11938  002E5C                     u5690:
 11939  002E5C                     
 11940                           ;movement.c: 38:             reverse_square(mL,mR);
 11941  002E5C  C03A  F026         	movff	action@mL,reverse_square@mL
 11942  002E60  C03B  F027         	movff	action@mL+1,reverse_square@mL+1
 11943  002E64  C03C  F028         	movff	action@mR,reverse_square@mR
 11944  002E68  C03D  F029         	movff	action@mR+1,reverse_square@mR+1
 11945  002E6C  ECF6  F02C         	call	_reverse_square	;wreg free
 11946                           
 11947                           ;movement.c: 39:             turnRight(mL,mR,90);
 11948  002E70  C03A  F020         	movff	action@mL,turnRight@mL
 11949  002E74  C03B  F021         	movff	action@mL+1,turnRight@mL+1
 11950  002E78  C03C  F022         	movff	action@mR,turnRight@mR
 11951  002E7C  C03D  F023         	movff	action@mR+1,turnRight@mR+1
 11952  002E80  0E5A               	movlw	90
 11953  002E82  6E24               	movwf	turnRight@angle_right^0,c
 11954  002E84  EC50  F021         	call	_turnRight	;wreg free
 11955  002E88                     
 11956                           ;movement.c: 40:             memory[array_index] = 4;
 11957  002E88  0101               	movlb	1	; () banked
 11958  002E8A  519B               	movf	_array_index& (0+255),w,b
 11959  002E8C  0D02               	mullw	2
 11960  002E8E  0E3C               	movlw	low _memory
 11961  002E90  24F3               	addwf	243,w,c
 11962  002E92  6ED9               	movwf	fsr2l,c
 11963  002E94  0E01               	movlw	high _memory
 11964  002E96  20F4               	addwfc	prodh,w,c
 11965  002E98  6EDA               	movwf	fsr2h,c
 11966  002E9A  0E04               	movlw	4
 11967  002E9C  6EDE               	movwf	postinc2,c
 11968  002E9E  0E00               	movlw	0
 11969  002EA0  6EDD               	movwf	postdec2,c
 11970  002EA2                     
 11971                           ; BSR set to: 1
 11972                           ;movement.c: 41:             array_index++;
 11973  002EA2  2B9B               	incf	_array_index& (0+255),f,b
 11974  002EA4                     l5512:
 11975                           
 11976                           ;movement.c: 43:         if (color == 5){
 11977  002EA4  0E05               	movlw	5
 11978  002EA6  183E               	xorwf	action@color^0,w,c
 11979  002EA8  A4D8               	btfss	status,2,c
 11980  002EAA  EF59  F017         	goto	u5701
 11981  002EAE  EF5B  F017         	goto	u5700
 11982  002EB2                     u5701:
 11983  002EB2  EF7F  F017         	goto	l5520
 11984  002EB6                     u5700:
 11985  002EB6                     
 11986                           ;movement.c: 44:             reverse_square(mL,mR);
 11987  002EB6  C03A  F026         	movff	action@mL,reverse_square@mL
 11988  002EBA  C03B  F027         	movff	action@mL+1,reverse_square@mL+1
 11989  002EBE  C03C  F028         	movff	action@mR,reverse_square@mR
 11990  002EC2  C03D  F029         	movff	action@mR+1,reverse_square@mR+1
 11991  002EC6  ECF6  F02C         	call	_reverse_square	;wreg free
 11992                           
 11993                           ;movement.c: 45:             turnLeft(mL,mR,90);
 11994  002ECA  C03A  F020         	movff	action@mL,turnLeft@mL
 11995  002ECE  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 11996  002ED2  C03C  F022         	movff	action@mR,turnLeft@mR
 11997  002ED6  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 11998  002EDA  0E5A               	movlw	90
 11999  002EDC  6E24               	movwf	turnLeft@angle_left^0,c
 12000  002EDE  EC17  F022         	call	_turnLeft	;wreg free
 12001  002EE2                     
 12002                           ;movement.c: 46:             memory[array_index] = 5;
 12003  002EE2  0101               	movlb	1	; () banked
 12004  002EE4  519B               	movf	_array_index& (0+255),w,b
 12005  002EE6  0D02               	mullw	2
 12006  002EE8  0E3C               	movlw	low _memory
 12007  002EEA  24F3               	addwf	243,w,c
 12008  002EEC  6ED9               	movwf	fsr2l,c
 12009  002EEE  0E01               	movlw	high _memory
 12010  002EF0  20F4               	addwfc	prodh,w,c
 12011  002EF2  6EDA               	movwf	fsr2h,c
 12012  002EF4  0E05               	movlw	5
 12013  002EF6  6EDE               	movwf	postinc2,c
 12014  002EF8  0E00               	movlw	0
 12015  002EFA  6EDD               	movwf	postdec2,c
 12016  002EFC                     
 12017                           ; BSR set to: 1
 12018                           ;movement.c: 47:             array_index++;
 12019  002EFC  2B9B               	incf	_array_index& (0+255),f,b
 12020  002EFE                     l5520:
 12021                           
 12022                           ;movement.c: 49:         if (color == 6){
 12023  002EFE  0E06               	movlw	6
 12024  002F00  183E               	xorwf	action@color^0,w,c
 12025  002F02  A4D8               	btfss	status,2,c
 12026  002F04  EF86  F017         	goto	u5711
 12027  002F08  EF88  F017         	goto	u5710
 12028  002F0C                     u5711:
 12029  002F0C  EFAC  F017         	goto	l5528
 12030  002F10                     u5710:
 12031  002F10                     
 12032                           ;movement.c: 50:             short_reverse(mL,mR);
 12033  002F10  C03A  F026         	movff	action@mL,short_reverse@mL
 12034  002F14  C03B  F027         	movff	action@mL+1,short_reverse@mL+1
 12035  002F18  C03C  F028         	movff	action@mR,short_reverse@mR
 12036  002F1C  C03D  F029         	movff	action@mR+1,short_reverse@mR+1
 12037  002F20  ECD6  F02C         	call	_short_reverse	;wreg free
 12038                           
 12039                           ;movement.c: 51:             turnRight(mL,mR,135);
 12040  002F24  C03A  F020         	movff	action@mL,turnRight@mL
 12041  002F28  C03B  F021         	movff	action@mL+1,turnRight@mL+1
 12042  002F2C  C03C  F022         	movff	action@mR,turnRight@mR
 12043  002F30  C03D  F023         	movff	action@mR+1,turnRight@mR+1
 12044  002F34  0E87               	movlw	135
 12045  002F36  6E24               	movwf	turnRight@angle_right^0,c
 12046  002F38  EC50  F021         	call	_turnRight	;wreg free
 12047  002F3C                     
 12048                           ;movement.c: 52:             memory[array_index] = 6;
 12049  002F3C  0101               	movlb	1	; () banked
 12050  002F3E  519B               	movf	_array_index& (0+255),w,b
 12051  002F40  0D02               	mullw	2
 12052  002F42  0E3C               	movlw	low _memory
 12053  002F44  24F3               	addwf	243,w,c
 12054  002F46  6ED9               	movwf	fsr2l,c
 12055  002F48  0E01               	movlw	high _memory
 12056  002F4A  20F4               	addwfc	prodh,w,c
 12057  002F4C  6EDA               	movwf	fsr2h,c
 12058  002F4E  0E06               	movlw	6
 12059  002F50  6EDE               	movwf	postinc2,c
 12060  002F52  0E00               	movlw	0
 12061  002F54  6EDD               	movwf	postdec2,c
 12062  002F56                     
 12063                           ; BSR set to: 1
 12064                           ;movement.c: 53:             array_index++;
 12065  002F56  2B9B               	incf	_array_index& (0+255),f,b
 12066  002F58                     l5528:
 12067                           
 12068                           ;movement.c: 55:         if (color == 7){
 12069  002F58  0E07               	movlw	7
 12070  002F5A  183E               	xorwf	action@color^0,w,c
 12071  002F5C  A4D8               	btfss	status,2,c
 12072  002F5E  EFB3  F017         	goto	u5721
 12073  002F62  EFB5  F017         	goto	u5720
 12074  002F66                     u5721:
 12075  002F66  EFD9  F017         	goto	l5536
 12076  002F6A                     u5720:
 12077  002F6A                     
 12078                           ;movement.c: 56:             short_reverse(mL,mR);
 12079  002F6A  C03A  F026         	movff	action@mL,short_reverse@mL
 12080  002F6E  C03B  F027         	movff	action@mL+1,short_reverse@mL+1
 12081  002F72  C03C  F028         	movff	action@mR,short_reverse@mR
 12082  002F76  C03D  F029         	movff	action@mR+1,short_reverse@mR+1
 12083  002F7A  ECD6  F02C         	call	_short_reverse	;wreg free
 12084                           
 12085                           ;movement.c: 57:             turnLeft(mL,mR,135);
 12086  002F7E  C03A  F020         	movff	action@mL,turnLeft@mL
 12087  002F82  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 12088  002F86  C03C  F022         	movff	action@mR,turnLeft@mR
 12089  002F8A  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 12090  002F8E  0E87               	movlw	135
 12091  002F90  6E24               	movwf	turnLeft@angle_left^0,c
 12092  002F92  EC17  F022         	call	_turnLeft	;wreg free
 12093  002F96                     
 12094                           ;movement.c: 58:             memory[array_index] = 7;
 12095  002F96  0101               	movlb	1	; () banked
 12096  002F98  519B               	movf	_array_index& (0+255),w,b
 12097  002F9A  0D02               	mullw	2
 12098  002F9C  0E3C               	movlw	low _memory
 12099  002F9E  24F3               	addwf	243,w,c
 12100  002FA0  6ED9               	movwf	fsr2l,c
 12101  002FA2  0E01               	movlw	high _memory
 12102  002FA4  20F4               	addwfc	prodh,w,c
 12103  002FA6  6EDA               	movwf	fsr2h,c
 12104  002FA8  0E07               	movlw	7
 12105  002FAA  6EDE               	movwf	postinc2,c
 12106  002FAC  0E00               	movlw	0
 12107  002FAE  6EDD               	movwf	postdec2,c
 12108  002FB0                     
 12109                           ; BSR set to: 1
 12110                           ;movement.c: 59:             array_index++;
 12111  002FB0  2B9B               	incf	_array_index& (0+255),f,b
 12112  002FB2                     l5536:
 12113                           
 12114                           ;movement.c: 61:         if (color == 8){
 12115  002FB2  0E08               	movlw	8
 12116  002FB4  183E               	xorwf	action@color^0,w,c
 12117  002FB6  A4D8               	btfss	status,2,c
 12118  002FB8  EFE0  F017         	goto	u5731
 12119  002FBC  EFE2  F017         	goto	u5730
 12120  002FC0                     u5731:
 12121  002FC0  EFFB  F017         	goto	l652
 12122  002FC4                     u5730:
 12123  002FC4                     
 12124                           ;movement.c: 62:             toggle_light(2,1);
 12125  002FC4  0E01               	movlw	1
 12126  002FC6  6E01               	movwf	toggle_light@toggletime^0,c
 12127  002FC8  0E02               	movlw	2
 12128  002FCA  ECAF  F01A         	call	_toggle_light
 12129  002FCE                     
 12130                           ;movement.c: 63:             short_reverse(mL,mR);
 12131  002FCE  C03A  F026         	movff	action@mL,short_reverse@mL
 12132  002FD2  C03B  F027         	movff	action@mL+1,short_reverse@mL+1
 12133  002FD6  C03C  F028         	movff	action@mR,short_reverse@mR
 12134  002FDA  C03D  F029         	movff	action@mR+1,short_reverse@mR+1
 12135  002FDE  ECD6  F02C         	call	_short_reverse	;wreg free
 12136  002FE2                     
 12137                           ;movement.c: 64:             goback(mL,mR);
 12138  002FE2  C03A  F032         	movff	action@mL,goback@mL
 12139  002FE6  C03B  F033         	movff	action@mL+1,goback@mL+1
 12140  002FEA  C03C  F034         	movff	action@mR,goback@mR
 12141  002FEE  C03D  F035         	movff	action@mR+1,goback@mR+1
 12142  002FF2  EC57  F019         	call	_goback	;wreg free
 12143  002FF6                     l652:
 12144  002FF6  0012               	return		;funcret
 12145  002FF8                     __end_of_action:
 12146                           	callstack 0
 12147                           
 12148 ;; *************** function _toggle_light *****************
 12149 ;; Defined at:
 12150 ;;		line 29 in file "color.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  lightnumber     1    wreg     unsigned char 
 12153 ;;  toggletime      1    0[COMRAM] unsigned char 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  lightnumber     1    4[COMRAM] unsigned char 
 12156 ;;  i               1    3[COMRAM] unsigned char 
 12157 ;; Return value:  Size  Location     Type
 12158 ;;                  1    wreg      void 
 12159 ;; Registers used:
 12160 ;;		wreg, status,2, status,0
 12161 ;; Tracked objects:
 12162 ;;		On entry : 0/0
 12163 ;;		On exit  : 0/0
 12164 ;;		Unchanged: 0/0
 12165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12169 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12170 ;;Total ram usage:        5 bytes
 12171 ;; Hardware stack levels used: 1
 12172 ;; Hardware stack levels required when called: 1
 12173 ;; This function calls:
 12174 ;;		Nothing
 12175 ;; This function is called by:
 12176 ;;		_calibrate_white
 12177 ;;		_detect_color
 12178 ;;		_amb_light_measure
 12179 ;;		_action
 12180 ;; This function uses a non-reentrant model
 12181 ;;
 12182                           
 12183                           	psect	text65
 12184  00355E                     __ptext65:
 12185                           	callstack 0
 12186  00355E                     _toggle_light:
 12187                           	callstack 27
 12188                           
 12189                           ;incstack = 0
 12190                           ;toggle_light@lightnumber stored from wreg
 12191  00355E  6E05               	movwf	toggle_light@lightnumber^0,c
 12192  003560                     
 12193                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
 12194  003560  0E00               	movlw	0
 12195  003562  6E04               	movwf	toggle_light@i^0,c
 12196                           
 12197                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
 12198  003564  0E00               	movlw	0
 12199  003566  6E04               	movwf	toggle_light@i^0,c
 12200  003568  EFFB  F01B         	goto	l74
 12201  00356C                     l4560:
 12202                           
 12203                           ;color.c: 34:         if (lightnumber == 1){
 12204  00356C  0405               	decf	toggle_light@lightnumber^0,w,c
 12205  00356E  A4D8               	btfss	status,2,c
 12206  003570  EFBC  F01A         	goto	u4441
 12207  003574  EFBE  F01A         	goto	u4440
 12208  003578                     u4441:
 12209  003578  EFF6  F01A         	goto	l4568
 12210  00357C                     u4440:
 12211  00357C                     
 12212                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
 12213  00357C  A280               	btfss	128,1,c	;volatile
 12214  00357E  EFC3  F01A         	goto	u4451
 12215  003582  EFC7  F01A         	goto	u4450
 12216  003586                     u4451:
 12217  003586  6A02               	clrf	??_toggle_light^0,c
 12218  003588  2A02               	incf	??_toggle_light^0,f,c
 12219  00358A  EFC8  F01A         	goto	u4468
 12220  00358E                     u4450:
 12221  00358E  6A02               	clrf	??_toggle_light^0,c
 12222  003590                     u4468:
 12223  003590  4602               	rlncf	??_toggle_light^0,f,c
 12224  003592  5080               	movf	128,w,c	;volatile
 12225  003594  1802               	xorwf	??_toggle_light^0,w,c
 12226  003596  0BFD               	andlw	-3
 12227  003598  1802               	xorwf	??_toggle_light^0,w,c
 12228  00359A  6E80               	movwf	128,c	;volatile
 12229  00359C                     
 12230                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12231  00359C  0E29               	movlw	41
 12232  00359E  6E03               	movwf	(??_toggle_light+1)^0,c
 12233  0035A0  0E96               	movlw	150
 12234  0035A2  6E02               	movwf	??_toggle_light^0,c
 12235  0035A4  0E7F               	movlw	127
 12236  0035A6                     u6287:
 12237  0035A6  2EE8               	decfsz	wreg,f,c
 12238  0035A8  D7FE               	bra	u6287
 12239  0035AA  2E02               	decfsz	??_toggle_light^0,f,c
 12240  0035AC  D7FC               	bra	u6287
 12241  0035AE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12242  0035B0  D7FA               	bra	u6287
 12243  0035B2  F000               	nop	
 12244  0035B4                     
 12245                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
 12246  0035B4  A280               	btfss	128,1,c	;volatile
 12247  0035B6  EFDF  F01A         	goto	u4471
 12248  0035BA  EFE3  F01A         	goto	u4470
 12249  0035BE                     u4471:
 12250  0035BE  6A02               	clrf	??_toggle_light^0,c
 12251  0035C0  2A02               	incf	??_toggle_light^0,f,c
 12252  0035C2  EFE4  F01A         	goto	u4488
 12253  0035C6                     u4470:
 12254  0035C6  6A02               	clrf	??_toggle_light^0,c
 12255  0035C8                     u4488:
 12256  0035C8  4602               	rlncf	??_toggle_light^0,f,c
 12257  0035CA  5080               	movf	128,w,c	;volatile
 12258  0035CC  1802               	xorwf	??_toggle_light^0,w,c
 12259  0035CE  0BFD               	andlw	-3
 12260  0035D0  1802               	xorwf	??_toggle_light^0,w,c
 12261  0035D2  6E80               	movwf	128,c	;volatile
 12262                           
 12263                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12264  0035D4  0E29               	movlw	41
 12265  0035D6  6E03               	movwf	(??_toggle_light+1)^0,c
 12266  0035D8  0E96               	movlw	150
 12267  0035DA  6E02               	movwf	??_toggle_light^0,c
 12268  0035DC  0E7F               	movlw	127
 12269  0035DE                     u6297:
 12270  0035DE  2EE8               	decfsz	wreg,f,c
 12271  0035E0  D7FE               	bra	u6297
 12272  0035E2  2E02               	decfsz	??_toggle_light^0,f,c
 12273  0035E4  D7FC               	bra	u6297
 12274  0035E6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12275  0035E8  D7FA               	bra	u6297
 12276  0035EA  F000               	nop	
 12277  0035EC                     l4568:
 12278                           
 12279                           ;color.c: 40:         if (lightnumber == 2){
 12280  0035EC  0E02               	movlw	2
 12281  0035EE  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12282  0035F0  A4D8               	btfss	status,2,c
 12283  0035F2  EFFD  F01A         	goto	u4491
 12284  0035F6  EFFF  F01A         	goto	u4490
 12285  0035FA                     u4491:
 12286  0035FA  EF37  F01B         	goto	l4576
 12287  0035FE                     u4490:
 12288  0035FE                     
 12289                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
 12290  0035FE  A87C               	btfss	124,4,c	;volatile
 12291  003600  EF04  F01B         	goto	u4501
 12292  003604  EF08  F01B         	goto	u4500
 12293  003608                     u4501:
 12294  003608  6A02               	clrf	??_toggle_light^0,c
 12295  00360A  2A02               	incf	??_toggle_light^0,f,c
 12296  00360C  EF09  F01B         	goto	u4518
 12297  003610                     u4500:
 12298  003610  6A02               	clrf	??_toggle_light^0,c
 12299  003612                     u4518:
 12300  003612  3A02               	swapf	??_toggle_light^0,f,c
 12301  003614  507C               	movf	124,w,c	;volatile
 12302  003616  1802               	xorwf	??_toggle_light^0,w,c
 12303  003618  0BEF               	andlw	-17
 12304  00361A  1802               	xorwf	??_toggle_light^0,w,c
 12305  00361C  6E7C               	movwf	124,c	;volatile
 12306  00361E                     
 12307                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12308  00361E  0E29               	movlw	41
 12309  003620  6E03               	movwf	(??_toggle_light+1)^0,c
 12310  003622  0E96               	movlw	150
 12311  003624  6E02               	movwf	??_toggle_light^0,c
 12312  003626  0E7F               	movlw	127
 12313  003628                     u6307:
 12314  003628  2EE8               	decfsz	wreg,f,c
 12315  00362A  D7FE               	bra	u6307
 12316  00362C  2E02               	decfsz	??_toggle_light^0,f,c
 12317  00362E  D7FC               	bra	u6307
 12318  003630  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12319  003632  D7FA               	bra	u6307
 12320  003634  F000               	nop	
 12321  003636                     
 12322                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
 12323  003636  A87C               	btfss	124,4,c	;volatile
 12324  003638  EF20  F01B         	goto	u4521
 12325  00363C  EF24  F01B         	goto	u4520
 12326  003640                     u4521:
 12327  003640  6A02               	clrf	??_toggle_light^0,c
 12328  003642  2A02               	incf	??_toggle_light^0,f,c
 12329  003644  EF25  F01B         	goto	u4538
 12330  003648                     u4520:
 12331  003648  6A02               	clrf	??_toggle_light^0,c
 12332  00364A                     u4538:
 12333  00364A  3A02               	swapf	??_toggle_light^0,f,c
 12334  00364C  507C               	movf	124,w,c	;volatile
 12335  00364E  1802               	xorwf	??_toggle_light^0,w,c
 12336  003650  0BEF               	andlw	-17
 12337  003652  1802               	xorwf	??_toggle_light^0,w,c
 12338  003654  6E7C               	movwf	124,c	;volatile
 12339                           
 12340                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12341  003656  0E29               	movlw	41
 12342  003658  6E03               	movwf	(??_toggle_light+1)^0,c
 12343  00365A  0E96               	movlw	150
 12344  00365C  6E02               	movwf	??_toggle_light^0,c
 12345  00365E  0E7F               	movlw	127
 12346  003660                     u6317:
 12347  003660  2EE8               	decfsz	wreg,f,c
 12348  003662  D7FE               	bra	u6317
 12349  003664  2E02               	decfsz	??_toggle_light^0,f,c
 12350  003666  D7FC               	bra	u6317
 12351  003668  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12352  00366A  D7FA               	bra	u6317
 12353  00366C  F000               	nop	
 12354  00366E                     l4576:
 12355                           
 12356                           ;color.c: 46:         if (lightnumber == 3){
 12357  00366E  0E03               	movlw	3
 12358  003670  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12359  003672  A4D8               	btfss	status,2,c
 12360  003674  EF3E  F01B         	goto	u4541
 12361  003678  EF40  F01B         	goto	u4540
 12362  00367C                     u4541:
 12363  00367C  EF7C  F01B         	goto	l4584
 12364  003680                     u4540:
 12365  003680                     
 12366                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
 12367  003680  A67C               	btfss	124,3,c	;volatile
 12368  003682  EF45  F01B         	goto	u4551
 12369  003686  EF49  F01B         	goto	u4550
 12370  00368A                     u4551:
 12371  00368A  6A02               	clrf	??_toggle_light^0,c
 12372  00368C  2A02               	incf	??_toggle_light^0,f,c
 12373  00368E  EF4A  F01B         	goto	u4568
 12374  003692                     u4550:
 12375  003692  6A02               	clrf	??_toggle_light^0,c
 12376  003694                     u4568:
 12377  003694  4602               	rlncf	??_toggle_light^0,f,c
 12378  003696  4602               	rlncf	??_toggle_light^0,f,c
 12379  003698  4602               	rlncf	??_toggle_light^0,f,c
 12380  00369A  507C               	movf	124,w,c	;volatile
 12381  00369C  1802               	xorwf	??_toggle_light^0,w,c
 12382  00369E  0BF7               	andlw	-9
 12383  0036A0  1802               	xorwf	??_toggle_light^0,w,c
 12384  0036A2  6E7C               	movwf	124,c	;volatile
 12385  0036A4                     
 12386                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12387  0036A4  0E29               	movlw	41
 12388  0036A6  6E03               	movwf	(??_toggle_light+1)^0,c
 12389  0036A8  0E96               	movlw	150
 12390  0036AA  6E02               	movwf	??_toggle_light^0,c
 12391  0036AC  0E7F               	movlw	127
 12392  0036AE                     u6327:
 12393  0036AE  2EE8               	decfsz	wreg,f,c
 12394  0036B0  D7FE               	bra	u6327
 12395  0036B2  2E02               	decfsz	??_toggle_light^0,f,c
 12396  0036B4  D7FC               	bra	u6327
 12397  0036B6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12398  0036B8  D7FA               	bra	u6327
 12399  0036BA  F000               	nop	
 12400  0036BC                     
 12401                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
 12402  0036BC  A67C               	btfss	124,3,c	;volatile
 12403  0036BE  EF63  F01B         	goto	u4571
 12404  0036C2  EF67  F01B         	goto	u4570
 12405  0036C6                     u4571:
 12406  0036C6  6A02               	clrf	??_toggle_light^0,c
 12407  0036C8  2A02               	incf	??_toggle_light^0,f,c
 12408  0036CA  EF68  F01B         	goto	u4588
 12409  0036CE                     u4570:
 12410  0036CE  6A02               	clrf	??_toggle_light^0,c
 12411  0036D0                     u4588:
 12412  0036D0  4602               	rlncf	??_toggle_light^0,f,c
 12413  0036D2  4602               	rlncf	??_toggle_light^0,f,c
 12414  0036D4  4602               	rlncf	??_toggle_light^0,f,c
 12415  0036D6  507C               	movf	124,w,c	;volatile
 12416  0036D8  1802               	xorwf	??_toggle_light^0,w,c
 12417  0036DA  0BF7               	andlw	-9
 12418  0036DC  1802               	xorwf	??_toggle_light^0,w,c
 12419  0036DE  6E7C               	movwf	124,c	;volatile
 12420                           
 12421                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12422  0036E0  0E29               	movlw	41
 12423  0036E2  6E03               	movwf	(??_toggle_light+1)^0,c
 12424  0036E4  0E96               	movlw	150
 12425  0036E6  6E02               	movwf	??_toggle_light^0,c
 12426  0036E8  0E7F               	movlw	127
 12427  0036EA                     u6337:
 12428  0036EA  2EE8               	decfsz	wreg,f,c
 12429  0036EC  D7FE               	bra	u6337
 12430  0036EE  2E02               	decfsz	??_toggle_light^0,f,c
 12431  0036F0  D7FC               	bra	u6337
 12432  0036F2  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12433  0036F4  D7FA               	bra	u6337
 12434  0036F6  F000               	nop	
 12435  0036F8                     l4584:
 12436                           
 12437                           ;color.c: 52:         if (lightnumber == 4){
 12438  0036F8  0E04               	movlw	4
 12439  0036FA  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12440  0036FC  A4D8               	btfss	status,2,c
 12441  0036FE  EF83  F01B         	goto	u4591
 12442  003702  EF85  F01B         	goto	u4590
 12443  003706                     u4591:
 12444  003706  EFBB  F01B         	goto	l4592
 12445  00370A                     u4590:
 12446  00370A                     
 12447                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
 12448  00370A  A07E               	btfss	126,0,c	;volatile
 12449  00370C  EF8A  F01B         	goto	u4601
 12450  003710  EF8E  F01B         	goto	u4600
 12451  003714                     u4601:
 12452  003714  6A02               	clrf	??_toggle_light^0,c
 12453  003716  2A02               	incf	??_toggle_light^0,f,c
 12454  003718  EF8F  F01B         	goto	u4618
 12455  00371C                     u4600:
 12456  00371C  6A02               	clrf	??_toggle_light^0,c
 12457  00371E                     u4618:
 12458  00371E  507E               	movf	126,w,c	;volatile
 12459  003720  1802               	xorwf	??_toggle_light^0,w,c
 12460  003722  0BFE               	andlw	-2
 12461  003724  1802               	xorwf	??_toggle_light^0,w,c
 12462  003726  6E7E               	movwf	126,c	;volatile
 12463  003728                     
 12464                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12465  003728  0E29               	movlw	41
 12466  00372A  6E03               	movwf	(??_toggle_light+1)^0,c
 12467  00372C  0E96               	movlw	150
 12468  00372E  6E02               	movwf	??_toggle_light^0,c
 12469  003730  0E7F               	movlw	127
 12470  003732                     u6347:
 12471  003732  2EE8               	decfsz	wreg,f,c
 12472  003734  D7FE               	bra	u6347
 12473  003736  2E02               	decfsz	??_toggle_light^0,f,c
 12474  003738  D7FC               	bra	u6347
 12475  00373A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12476  00373C  D7FA               	bra	u6347
 12477  00373E  F000               	nop	
 12478  003740                     
 12479                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
 12480  003740  A07E               	btfss	126,0,c	;volatile
 12481  003742  EFA5  F01B         	goto	u4621
 12482  003746  EFA9  F01B         	goto	u4620
 12483  00374A                     u4621:
 12484  00374A  6A02               	clrf	??_toggle_light^0,c
 12485  00374C  2A02               	incf	??_toggle_light^0,f,c
 12486  00374E  EFAA  F01B         	goto	u4638
 12487  003752                     u4620:
 12488  003752  6A02               	clrf	??_toggle_light^0,c
 12489  003754                     u4638:
 12490  003754  507E               	movf	126,w,c	;volatile
 12491  003756  1802               	xorwf	??_toggle_light^0,w,c
 12492  003758  0BFE               	andlw	-2
 12493  00375A  1802               	xorwf	??_toggle_light^0,w,c
 12494  00375C  6E7E               	movwf	126,c	;volatile
 12495                           
 12496                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12497  00375E  0E29               	movlw	41
 12498  003760  6E03               	movwf	(??_toggle_light+1)^0,c
 12499  003762  0E96               	movlw	150
 12500  003764  6E02               	movwf	??_toggle_light^0,c
 12501  003766  0E7F               	movlw	127
 12502  003768                     u6357:
 12503  003768  2EE8               	decfsz	wreg,f,c
 12504  00376A  D7FE               	bra	u6357
 12505  00376C  2E02               	decfsz	??_toggle_light^0,f,c
 12506  00376E  D7FC               	bra	u6357
 12507  003770  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12508  003772  D7FA               	bra	u6357
 12509  003774  F000               	nop	
 12510  003776                     l4592:
 12511                           
 12512                           ;color.c: 58:         if (lightnumber == 3){
 12513  003776  0E03               	movlw	3
 12514  003778  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12515  00377A  A4D8               	btfss	status,2,c
 12516  00377C  EFC2  F01B         	goto	u4641
 12517  003780  EFC4  F01B         	goto	u4640
 12518  003784                     u4641:
 12519  003784  EFFA  F01B         	goto	l4600
 12520  003788                     u4640:
 12521  003788                     
 12522                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 12523  003788  A080               	btfss	128,0,c	;volatile
 12524  00378A  EFC9  F01B         	goto	u4651
 12525  00378E  EFCD  F01B         	goto	u4650
 12526  003792                     u4651:
 12527  003792  6A02               	clrf	??_toggle_light^0,c
 12528  003794  2A02               	incf	??_toggle_light^0,f,c
 12529  003796  EFCE  F01B         	goto	u4668
 12530  00379A                     u4650:
 12531  00379A  6A02               	clrf	??_toggle_light^0,c
 12532  00379C                     u4668:
 12533  00379C  5080               	movf	128,w,c	;volatile
 12534  00379E  1802               	xorwf	??_toggle_light^0,w,c
 12535  0037A0  0BFE               	andlw	-2
 12536  0037A2  1802               	xorwf	??_toggle_light^0,w,c
 12537  0037A4  6E80               	movwf	128,c	;volatile
 12538  0037A6                     
 12539                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12540  0037A6  0E29               	movlw	41
 12541  0037A8  6E03               	movwf	(??_toggle_light+1)^0,c
 12542  0037AA  0E96               	movlw	150
 12543  0037AC  6E02               	movwf	??_toggle_light^0,c
 12544  0037AE  0E7F               	movlw	127
 12545  0037B0                     u6367:
 12546  0037B0  2EE8               	decfsz	wreg,f,c
 12547  0037B2  D7FE               	bra	u6367
 12548  0037B4  2E02               	decfsz	??_toggle_light^0,f,c
 12549  0037B6  D7FC               	bra	u6367
 12550  0037B8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12551  0037BA  D7FA               	bra	u6367
 12552  0037BC  F000               	nop	
 12553  0037BE                     
 12554                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 12555  0037BE  A080               	btfss	128,0,c	;volatile
 12556  0037C0  EFE4  F01B         	goto	u4671
 12557  0037C4  EFE8  F01B         	goto	u4670
 12558  0037C8                     u4671:
 12559  0037C8  6A02               	clrf	??_toggle_light^0,c
 12560  0037CA  2A02               	incf	??_toggle_light^0,f,c
 12561  0037CC  EFE9  F01B         	goto	u4688
 12562  0037D0                     u4670:
 12563  0037D0  6A02               	clrf	??_toggle_light^0,c
 12564  0037D2                     u4688:
 12565  0037D2  5080               	movf	128,w,c	;volatile
 12566  0037D4  1802               	xorwf	??_toggle_light^0,w,c
 12567  0037D6  0BFE               	andlw	-2
 12568  0037D8  1802               	xorwf	??_toggle_light^0,w,c
 12569  0037DA  6E80               	movwf	128,c	;volatile
 12570                           
 12571                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12572  0037DC  0E29               	movlw	41
 12573  0037DE  6E03               	movwf	(??_toggle_light+1)^0,c
 12574  0037E0  0E96               	movlw	150
 12575  0037E2  6E02               	movwf	??_toggle_light^0,c
 12576  0037E4  0E7F               	movlw	127
 12577  0037E6                     u6377:
 12578  0037E6  2EE8               	decfsz	wreg,f,c
 12579  0037E8  D7FE               	bra	u6377
 12580  0037EA  2E02               	decfsz	??_toggle_light^0,f,c
 12581  0037EC  D7FC               	bra	u6377
 12582  0037EE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12583  0037F0  D7FA               	bra	u6377
 12584  0037F2  F000               	nop	
 12585  0037F4                     l4600:
 12586                           
 12587                           ;color.c: 64:     }
 12588  0037F4  2A04               	incf	toggle_light@i^0,f,c
 12589  0037F6                     l74:
 12590  0037F6  5001               	movf	toggle_light@toggletime^0,w,c
 12591  0037F8  5C04               	subwf	toggle_light@i^0,w,c
 12592  0037FA  A0D8               	btfss	status,0,c
 12593  0037FC  EF02  F01C         	goto	u4691
 12594  003800  EF04  F01C         	goto	u4690
 12595  003804                     u4691:
 12596  003804  EFB6  F01A         	goto	l4560
 12597  003808                     u4690:
 12598  003808  0012               	return		;funcret
 12599  00380A                     __end_of_toggle_light:
 12600                           	callstack 0
 12601                           
 12602 ;; *************** function _short_reverse *****************
 12603 ;; Defined at:
 12604 ;;		line 183 in file "dc_motor.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 12607 ;;		 -> main@motorL(9), 
 12608 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 12609 ;;		 -> main@motorR(9), 
 12610 ;; Auto vars:     Size  Location     Type
 12611 ;;		None
 12612 ;; Return value:  Size  Location     Type
 12613 ;;                  1    wreg      void 
 12614 ;; Registers used:
 12615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12616 ;; Tracked objects:
 12617 ;;		On entry : 0/0
 12618 ;;		On exit  : 0/0
 12619 ;;		Unchanged: 0/0
 12620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12623 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12624 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12625 ;;Total ram usage:        6 bytes
 12626 ;; Hardware stack levels used: 1
 12627 ;; Hardware stack levels required when called: 5
 12628 ;; This function calls:
 12629 ;;		_fullSpeedBack
 12630 ;;		_stop
 12631 ;; This function is called by:
 12632 ;;		_action
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           
 12636                           	psect	text66
 12637  0059AC                     __ptext66:
 12638                           	callstack 0
 12639  0059AC                     _short_reverse:
 12640                           	callstack 24
 12641  0059AC                     
 12642                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
 12643  0059AC  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 12644  0059B0  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 12645  0059B4  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 12646  0059B8  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 12647  0059BC  EC1C  F029         	call	_fullSpeedBack	;wreg free
 12648  0059C0                     
 12649                           ;dc_motor.c: 185:     _delay((unsigned long)((300)*(64000000/4000.0)));
 12650  0059C0  0E19               	movlw	25
 12651  0059C2  6E2B               	movwf	(??_short_reverse+1)^0,c
 12652  0059C4  0E5A               	movlw	90
 12653  0059C6  6E2A               	movwf	??_short_reverse^0,c
 12654  0059C8  0EB2               	movlw	178
 12655  0059CA                     u6387:
 12656  0059CA  2EE8               	decfsz	wreg,f,c
 12657  0059CC  D7FE               	bra	u6387
 12658  0059CE  2E2A               	decfsz	??_short_reverse^0,f,c
 12659  0059D0  D7FC               	bra	u6387
 12660  0059D2  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 12661  0059D4  D7FA               	bra	u6387
 12662  0059D6                     
 12663                           ;dc_motor.c: 186:     stop(mL,mR);
 12664  0059D6  C026  F01A         	movff	short_reverse@mL,stop@mL
 12665  0059DA  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 12666  0059DE  C028  F01C         	movff	short_reverse@mR,stop@mR
 12667  0059E2  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 12668  0059E6  EC7C  F029         	call	_stop	;wreg free
 12669  0059EA  0012               	return		;funcret
 12670  0059EC                     __end_of_short_reverse:
 12671                           	callstack 0
 12672                           
 12673 ;; *************** function _goback *****************
 12674 ;; Defined at:
 12675 ;;		line 114 in file "movement.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;  mL              2   49[COMRAM] PTR struct DC_motor
 12678 ;;		 -> main@motorL(9), 
 12679 ;;  mR              2   51[COMRAM] PTR struct DC_motor
 12680 ;;		 -> main@motorR(9), 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  i               2   55[COMRAM] unsigned int 
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  1    wreg      void 
 12685 ;; Registers used:
 12686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12695 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12696 ;;Total ram usage:        8 bytes
 12697 ;; Hardware stack levels used: 1
 12698 ;; Hardware stack levels required when called: 6
 12699 ;; This function calls:
 12700 ;;		_fullSpeedAhead
 12701 ;;		_reverse_square
 12702 ;;		_stop
 12703 ;;		_turnLeft
 12704 ;;		_turnRight
 12705 ;; This function is called by:
 12706 ;;		_action
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text67
 12711  0032AE                     __ptext67:
 12712                           	callstack 0
 12713  0032AE                     _goback:
 12714                           	callstack 23
 12715  0032AE                     
 12716                           ;movement.c: 114: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 115:
      +                           { turnRight(mL,mR,180);
 12717  0032AE  C032  F020         	movff	goback@mL,turnRight@mL
 12718  0032B2  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12719  0032B6  C034  F022         	movff	goback@mR,turnRight@mR
 12720  0032BA  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 12721  0032BE  0EB4               	movlw	180
 12722  0032C0  6E24               	movwf	turnRight@angle_right^0,c
 12723  0032C2  EC50  F021         	call	_turnRight	;wreg free
 12724  0032C6                     l5246:
 12725                           
 12726                           ;movement.c: 116:     array_index--;
 12727  0032C6  0101               	movlb	1	; () banked
 12728  0032C8  079B               	decf	_array_index& (0+255),f,b
 12729  0032CA                     l5248:
 12730                           
 12731                           ; BSR set to: 1
 12732                           ;movement.c: 118:         fullSpeedAhead(mL,mR);
 12733  0032CA  C032  F01A         	movff	goback@mL,fullSpeedAhead@mL
 12734  0032CE  C033  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 12735  0032D2  C034  F01C         	movff	goback@mR,fullSpeedAhead@mR
 12736  0032D6  C035  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 12737  0032DA  ECDA  F029         	call	_fullSpeedAhead	;wreg free
 12738  0032DE                     
 12739                           ;movement.c: 119:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
 12740  0032DE  0E00               	movlw	0
 12741  0032E0  6E39               	movwf	(goback@i+1)^0,c
 12742  0032E2  0E00               	movlw	0
 12743  0032E4  6E38               	movwf	goback@i^0,c
 12744  0032E6  EF83  F019         	goto	l5256
 12745  0032EA                     l5252:
 12746                           
 12747                           ; BSR set to: 1
 12748  0032EA  0E09               	movlw	9
 12749  0032EC  6E37               	movwf	(??_goback+1)^0,c
 12750  0032EE  0E1E               	movlw	30
 12751  0032F0  6E36               	movwf	??_goback^0,c
 12752  0032F2  0EE4               	movlw	228
 12753  0032F4                     u6397:
 12754  0032F4  2EE8               	decfsz	wreg,f,c
 12755  0032F6  D7FE               	bra	u6397
 12756  0032F8  2E36               	decfsz	??_goback^0,f,c
 12757  0032FA  D7FC               	bra	u6397
 12758  0032FC  2E37               	decfsz	(??_goback+1)^0,f,c
 12759  0032FE  D7FA               	bra	u6397
 12760  003300  D000               	nop2	
 12761  003302  4A38               	infsnz	goback@i^0,f,c
 12762  003304  2A39               	incf	(goback@i+1)^0,f,c
 12763  003306                     l5256:
 12764  003306  0101               	movlb	1	; () banked
 12765  003308  519B               	movf	_array_index& (0+255),w,b
 12766  00330A  0D02               	mullw	2
 12767  00330C  0E3C               	movlw	low _memory
 12768  00330E  24F3               	addwf	243,w,c
 12769  003310  6ED9               	movwf	fsr2l,c
 12770  003312  0E01               	movlw	high _memory
 12771  003314  20F4               	addwfc	prodh,w,c
 12772  003316  6EDA               	movwf	fsr2h,c
 12773  003318  50DE               	movf	postinc2,w,c
 12774  00331A  5C38               	subwf	goback@i^0,w,c
 12775  00331C  50DE               	movf	postinc2,w,c
 12776  00331E  5839               	subwfb	(goback@i+1)^0,w,c
 12777  003320  A0D8               	btfss	status,0,c
 12778  003322  EF95  F019         	goto	u5391
 12779  003326  EF97  F019         	goto	u5390
 12780  00332A                     u5391:
 12781  00332A  EF75  F019         	goto	l5252
 12782  00332E                     u5390:
 12783  00332E                     
 12784                           ; BSR set to: 1
 12785                           ;movement.c: 120:         stop(mL,mR);
 12786  00332E  C032  F01A         	movff	goback@mL,stop@mL
 12787  003332  C033  F01B         	movff	goback@mL+1,stop@mL+1
 12788  003336  C034  F01C         	movff	goback@mR,stop@mR
 12789  00333A  C035  F01D         	movff	goback@mR+1,stop@mR+1
 12790  00333E  EC7C  F029         	call	_stop	;wreg free
 12791  003342                     
 12792                           ;movement.c: 121:         if (array_index == 0){break;}
 12793  003342  0101               	movlb	1	; () banked
 12794  003344  519B               	movf	_array_index& (0+255),w,b
 12795  003346  A4D8               	btfss	status,2,c
 12796  003348  EFA8  F019         	goto	u5401
 12797  00334C  EFAA  F019         	goto	u5400
 12798  003350                     u5401:
 12799  003350  EFAC  F019         	goto	l5264
 12800  003354                     u5400:
 12801  003354  EFA2  F01A         	goto	l5308
 12802  003358                     l5264:
 12803                           
 12804                           ; BSR set to: 1
 12805                           ;movement.c: 122:         array_index--;
 12806  003358  079B               	decf	_array_index& (0+255),f,b
 12807  00335A                     
 12808                           ; BSR set to: 1
 12809                           ;movement.c: 123:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 12810  00335A  519B               	movf	_array_index& (0+255),w,b
 12811  00335C  0D02               	mullw	2
 12812  00335E  0E3C               	movlw	low _memory
 12813  003360  24F3               	addwf	243,w,c
 12814  003362  6ED9               	movwf	fsr2l,c
 12815  003364  0E01               	movlw	high _memory
 12816  003366  20F4               	addwfc	prodh,w,c
 12817  003368  6EDA               	movwf	fsr2h,c
 12818  00336A  04DE               	decf	postinc2,w,c
 12819  00336C  10DE               	iorwf	postinc2,w,c
 12820  00336E  A4D8               	btfss	status,2,c
 12821  003370  EFBC  F019         	goto	u5411
 12822  003374  EFBE  F019         	goto	u5410
 12823  003378                     u5411:
 12824  003378  EFCC  F019         	goto	l5272
 12825  00337C                     u5410:
 12826  00337C                     
 12827                           ; BSR set to: 1
 12828  00337C  C032  F020         	movff	goback@mL,turnLeft@mL
 12829  003380  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12830  003384  C034  F022         	movff	goback@mR,turnLeft@mR
 12831  003388  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12832  00338C  0E5A               	movlw	90
 12833  00338E  6E24               	movwf	turnLeft@angle_left^0,c
 12834  003390  EC17  F022         	call	_turnLeft	;wreg free
 12835  003394  EF63  F019         	goto	l5246
 12836  003398                     l5272:
 12837                           
 12838                           ; BSR set to: 1
 12839  003398  519B               	movf	_array_index& (0+255),w,b
 12840  00339A  0D02               	mullw	2
 12841  00339C  0E3C               	movlw	low _memory
 12842  00339E  24F3               	addwf	243,w,c
 12843  0033A0  6ED9               	movwf	fsr2l,c
 12844  0033A2  0E01               	movlw	high _memory
 12845  0033A4  20F4               	addwfc	prodh,w,c
 12846  0033A6  6EDA               	movwf	fsr2h,c
 12847  0033A8  0E02               	movlw	2
 12848  0033AA  18DE               	xorwf	postinc2,w,c
 12849  0033AC  10DE               	iorwf	postinc2,w,c
 12850  0033AE  A4D8               	btfss	status,2,c
 12851  0033B0  EFDC  F019         	goto	u5421
 12852  0033B4  EFDE  F019         	goto	u5420
 12853  0033B8                     u5421:
 12854  0033B8  EFEC  F019         	goto	l5278
 12855  0033BC                     u5420:
 12856  0033BC                     
 12857                           ; BSR set to: 1
 12858  0033BC  C032  F020         	movff	goback@mL,turnRight@mL
 12859  0033C0  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12860  0033C4  C034  F022         	movff	goback@mR,turnRight@mR
 12861  0033C8  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 12862  0033CC  0E5A               	movlw	90
 12863  0033CE  6E24               	movwf	turnRight@angle_right^0,c
 12864  0033D0  EC50  F021         	call	_turnRight	;wreg free
 12865  0033D4  EF63  F019         	goto	l5246
 12866  0033D8                     l5278:
 12867                           
 12868                           ; BSR set to: 1
 12869  0033D8  519B               	movf	_array_index& (0+255),w,b
 12870  0033DA  0D02               	mullw	2
 12871  0033DC  0E3C               	movlw	low _memory
 12872  0033DE  24F3               	addwf	243,w,c
 12873  0033E0  6ED9               	movwf	fsr2l,c
 12874  0033E2  0E01               	movlw	high _memory
 12875  0033E4  20F4               	addwfc	prodh,w,c
 12876  0033E6  6EDA               	movwf	fsr2h,c
 12877  0033E8  0E03               	movlw	3
 12878  0033EA  18DE               	xorwf	postinc2,w,c
 12879  0033EC  10DE               	iorwf	postinc2,w,c
 12880  0033EE  A4D8               	btfss	status,2,c
 12881  0033F0  EFFC  F019         	goto	u5431
 12882  0033F4  EFFE  F019         	goto	u5430
 12883  0033F8                     u5431:
 12884  0033F8  EF0C  F01A         	goto	l5284
 12885  0033FC                     u5430:
 12886  0033FC                     
 12887                           ; BSR set to: 1
 12888  0033FC  C032  F020         	movff	goback@mL,turnLeft@mL
 12889  003400  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12890  003404  C034  F022         	movff	goback@mR,turnLeft@mR
 12891  003408  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12892  00340C  0EB4               	movlw	180
 12893  00340E  6E24               	movwf	turnLeft@angle_left^0,c
 12894  003410  EC17  F022         	call	_turnLeft	;wreg free
 12895  003414  EF63  F019         	goto	l5246
 12896  003418                     l5284:
 12897                           
 12898                           ; BSR set to: 1
 12899  003418  519B               	movf	_array_index& (0+255),w,b
 12900  00341A  0D02               	mullw	2
 12901  00341C  0E3C               	movlw	low _memory
 12902  00341E  24F3               	addwf	243,w,c
 12903  003420  6ED9               	movwf	fsr2l,c
 12904  003422  0E01               	movlw	high _memory
 12905  003424  20F4               	addwfc	prodh,w,c
 12906  003426  6EDA               	movwf	fsr2h,c
 12907  003428  0E04               	movlw	4
 12908  00342A  18DE               	xorwf	postinc2,w,c
 12909  00342C  10DE               	iorwf	postinc2,w,c
 12910  00342E  A4D8               	btfss	status,2,c
 12911  003430  EF1C  F01A         	goto	u5441
 12912  003434  EF1E  F01A         	goto	u5440
 12913  003438                     u5441:
 12914  003438  EF36  F01A         	goto	l5290
 12915  00343C                     u5440:
 12916  00343C                     
 12917                           ; BSR set to: 1
 12918  00343C  C032  F020         	movff	goback@mL,turnLeft@mL
 12919  003440  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12920  003444  C034  F022         	movff	goback@mR,turnLeft@mR
 12921  003448  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12922  00344C  0E5A               	movlw	90
 12923  00344E  6E24               	movwf	turnLeft@angle_left^0,c
 12924  003450  EC17  F022         	call	_turnLeft	;wreg free
 12925  003454  C032  F026         	movff	goback@mL,reverse_square@mL
 12926  003458  C033  F027         	movff	goback@mL+1,reverse_square@mL+1
 12927  00345C  C034  F028         	movff	goback@mR,reverse_square@mR
 12928  003460  C035  F029         	movff	goback@mR+1,reverse_square@mR+1
 12929  003464  ECF6  F02C         	call	_reverse_square	;wreg free
 12930  003468  EF63  F019         	goto	l5246
 12931  00346C                     l5290:
 12932                           
 12933                           ; BSR set to: 1
 12934  00346C  519B               	movf	_array_index& (0+255),w,b
 12935  00346E  0D02               	mullw	2
 12936  003470  0E3C               	movlw	low _memory
 12937  003472  24F3               	addwf	243,w,c
 12938  003474  6ED9               	movwf	fsr2l,c
 12939  003476  0E01               	movlw	high _memory
 12940  003478  20F4               	addwfc	prodh,w,c
 12941  00347A  6EDA               	movwf	fsr2h,c
 12942  00347C  0E05               	movlw	5
 12943  00347E  18DE               	xorwf	postinc2,w,c
 12944  003480  10DE               	iorwf	postinc2,w,c
 12945  003482  A4D8               	btfss	status,2,c
 12946  003484  EF46  F01A         	goto	u5451
 12947  003488  EF48  F01A         	goto	u5450
 12948  00348C                     u5451:
 12949  00348C  EF60  F01A         	goto	l5296
 12950  003490                     u5450:
 12951  003490                     
 12952                           ; BSR set to: 1
 12953  003490  C032  F020         	movff	goback@mL,turnRight@mL
 12954  003494  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12955  003498  C034  F022         	movff	goback@mR,turnRight@mR
 12956  00349C  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 12957  0034A0  0E5A               	movlw	90
 12958  0034A2  6E24               	movwf	turnRight@angle_right^0,c
 12959  0034A4  EC50  F021         	call	_turnRight	;wreg free
 12960  0034A8  C032  F026         	movff	goback@mL,reverse_square@mL
 12961  0034AC  C033  F027         	movff	goback@mL+1,reverse_square@mL+1
 12962  0034B0  C034  F028         	movff	goback@mR,reverse_square@mR
 12963  0034B4  C035  F029         	movff	goback@mR+1,reverse_square@mR+1
 12964  0034B8  ECF6  F02C         	call	_reverse_square	;wreg free
 12965  0034BC  EF63  F019         	goto	l5246
 12966  0034C0                     l5296:
 12967                           
 12968                           ; BSR set to: 1
 12969  0034C0  519B               	movf	_array_index& (0+255),w,b
 12970  0034C2  0D02               	mullw	2
 12971  0034C4  0E3C               	movlw	low _memory
 12972  0034C6  24F3               	addwf	243,w,c
 12973  0034C8  6ED9               	movwf	fsr2l,c
 12974  0034CA  0E01               	movlw	high _memory
 12975  0034CC  20F4               	addwfc	prodh,w,c
 12976  0034CE  6EDA               	movwf	fsr2h,c
 12977  0034D0  0E06               	movlw	6
 12978  0034D2  18DE               	xorwf	postinc2,w,c
 12979  0034D4  10DE               	iorwf	postinc2,w,c
 12980  0034D6  A4D8               	btfss	status,2,c
 12981  0034D8  EF70  F01A         	goto	u5461
 12982  0034DC  EF72  F01A         	goto	u5460
 12983  0034E0                     u5461:
 12984  0034E0  EF80  F01A         	goto	l5302
 12985  0034E4                     u5460:
 12986  0034E4                     
 12987                           ; BSR set to: 1
 12988  0034E4  C032  F020         	movff	goback@mL,turnLeft@mL
 12989  0034E8  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12990  0034EC  C034  F022         	movff	goback@mR,turnLeft@mR
 12991  0034F0  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12992  0034F4  0E87               	movlw	135
 12993  0034F6  6E24               	movwf	turnLeft@angle_left^0,c
 12994  0034F8  EC17  F022         	call	_turnLeft	;wreg free
 12995  0034FC  EF63  F019         	goto	l5246
 12996  003500                     l5302:
 12997                           
 12998                           ; BSR set to: 1
 12999  003500  519B               	movf	_array_index& (0+255),w,b
 13000  003502  0D02               	mullw	2
 13001  003504  0E3C               	movlw	low _memory
 13002  003506  24F3               	addwf	243,w,c
 13003  003508  6ED9               	movwf	fsr2l,c
 13004  00350A  0E01               	movlw	high _memory
 13005  00350C  20F4               	addwfc	prodh,w,c
 13006  00350E  6EDA               	movwf	fsr2h,c
 13007  003510  0E07               	movlw	7
 13008  003512  18DE               	xorwf	postinc2,w,c
 13009  003514  10DE               	iorwf	postinc2,w,c
 13010  003516  A4D8               	btfss	status,2,c
 13011  003518  EF90  F01A         	goto	u5471
 13012  00351C  EF92  F01A         	goto	u5470
 13013  003520                     u5471:
 13014  003520  EFA0  F01A         	goto	l675
 13015  003524                     u5470:
 13016  003524                     
 13017                           ; BSR set to: 1
 13018  003524  C032  F020         	movff	goback@mL,turnRight@mL
 13019  003528  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 13020  00352C  C034  F022         	movff	goback@mR,turnRight@mR
 13021  003530  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 13022  003534  0E87               	movlw	135
 13023  003536  6E24               	movwf	turnRight@angle_right^0,c
 13024  003538  EC50  F021         	call	_turnRight	;wreg free
 13025  00353C  EF63  F019         	goto	l5246
 13026  003540                     l675:
 13027                           
 13028                           ; BSR set to: 1
 13029  003540  EF65  F019         	goto	l5248
 13030  003544                     l5308:
 13031  003544  C032  F01A         	movff	goback@mL,stop@mL
 13032  003548  C033  F01B         	movff	goback@mL+1,stop@mL+1
 13033  00354C  C034  F01C         	movff	goback@mR,stop@mR
 13034  003550  C035  F01D         	movff	goback@mR+1,stop@mR+1
 13035  003554  EC7C  F029         	call	_stop	;wreg free
 13036  003558  EFA2  F01A         	goto	l5308
 13037  00355C  0012               	return		;funcret
 13038  00355E                     __end_of_goback:
 13039                           	callstack 0
 13040                           
 13041 ;; *************** function _turnRight *****************
 13042 ;; Defined at:
 13043 ;;		line 122 in file "dc_motor.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13046 ;;		 -> main@motorL(9), 
 13047 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13048 ;;		 -> main@motorR(9), 
 13049 ;;  angle_right     1   35[COMRAM] unsigned char 
 13050 ;; Auto vars:     Size  Location     Type
 13051 ;;  i               2   45[COMRAM] unsigned int 
 13052 ;;  i               2   43[COMRAM] unsigned int 
 13053 ;;  i               2   41[COMRAM] unsigned int 
 13054 ;;  delay           2   47[COMRAM] unsigned int 
 13055 ;;  delay_180       2   39[COMRAM] unsigned int 
 13056 ;;  delay_135       2   37[COMRAM] unsigned int 
 13057 ;; Return value:  Size  Location     Type
 13058 ;;                  1    wreg      void 
 13059 ;; Registers used:
 13060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13061 ;; Tracked objects:
 13062 ;;		On entry : 0/0
 13063 ;;		On exit  : 0/0
 13064 ;;		Unchanged: 0/0
 13065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13066 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13067 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13069 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13070 ;;Total ram usage:       18 bytes
 13071 ;; Hardware stack levels used: 1
 13072 ;; Hardware stack levels required when called: 4
 13073 ;; This function calls:
 13074 ;;		_setMotorPWM
 13075 ;;		_stop
 13076 ;; This function is called by:
 13077 ;;		_action
 13078 ;;		_test_action
 13079 ;;		_goback
 13080 ;; This function uses a non-reentrant model
 13081 ;;
 13082                           
 13083                           	psect	text68
 13084  0042A0                     __ptext68:
 13085                           	callstack 0
 13086  0042A0                     _turnRight:
 13087                           	callstack 24
 13088  0042A0                     
 13089                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 13090  0042A0  EE20 F001          	lfsr	2,1
 13091  0042A4  5020               	movf	turnRight@mL^0,w,c
 13092  0042A6  26D9               	addwf	fsr2l,f,c
 13093  0042A8  5021               	movf	(turnRight@mL+1)^0,w,c
 13094  0042AA  22DA               	addwfc	fsr2h,f,c
 13095  0042AC  0E01               	movlw	1
 13096  0042AE  6EDF               	movwf	indf2,c
 13097                           
 13098                           ;dc_motor.c: 125:     mR->direction=1;
 13099  0042B0  EE20 F001          	lfsr	2,1
 13100  0042B4  5022               	movf	turnRight@mR^0,w,c
 13101  0042B6  26D9               	addwf	fsr2l,f,c
 13102  0042B8  5023               	movf	(turnRight@mR+1)^0,w,c
 13103  0042BA  22DA               	addwfc	fsr2h,f,c
 13104  0042BC  0E01               	movlw	1
 13105  0042BE  6EDF               	movwf	indf2,c
 13106                           
 13107                           ;dc_motor.c: 126:     while (mL->power <25){
 13108  0042C0  EF81  F021         	goto	l4700
 13109  0042C4                     l4692:
 13110                           
 13111                           ;dc_motor.c: 127:         mL->power += 5;
 13112  0042C4  C020  FFD9         	movff	turnRight@mL,fsr2l
 13113  0042C8  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 13114  0042CC  0E05               	movlw	5
 13115  0042CE  26DF               	addwf	indf2,f,c
 13116                           
 13117                           ;dc_motor.c: 128:         mR->power = 0;
 13118  0042D0  C022  FFD9         	movff	turnRight@mR,fsr2l
 13119  0042D4  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 13120  0042D8  0E00               	movlw	0
 13121  0042DA  6EDF               	movwf	indf2,c
 13122  0042DC                     
 13123                           ;dc_motor.c: 129:         setMotorPWM(mL);
 13124  0042DC  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 13125  0042E0  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 13126  0042E4  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13127  0042E8                     
 13128                           ;dc_motor.c: 130:         setMotorPWM(mR);
 13129  0042E8  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 13130  0042EC  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 13131  0042F0  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13132  0042F4                     
 13133                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13134  0042F4  0ED0               	movlw	208
 13135  0042F6  6E25               	movwf	??_turnRight^0,c
 13136  0042F8  0ECA               	movlw	202
 13137  0042FA                     u6407:
 13138  0042FA  2EE8               	decfsz	wreg,f,c
 13139  0042FC  D7FE               	bra	u6407
 13140  0042FE  2E25               	decfsz	??_turnRight^0,f,c
 13141  004300  D7FC               	bra	u6407
 13142  004302                     l4700:
 13143                           
 13144                           ;dc_motor.c: 126:     while (mL->power <25){
 13145  004302  C020  FFD9         	movff	turnRight@mL,fsr2l
 13146  004306  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 13147  00430A  0E18               	movlw	24
 13148  00430C  64DF               	cpfsgt	indf2,c
 13149  00430E  EF8B  F021         	goto	u4791
 13150  004312  EF8D  F021         	goto	u4790
 13151  004316                     u4791:
 13152  004316  EF62  F021         	goto	l4692
 13153  00431A                     u4790:
 13154  00431A                     
 13155                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 13156  00431A  5024               	movf	turnRight@angle_right^0,w,c
 13157  00431C  0100               	movlb	0	; () banked
 13158  00431E  03FE               	mulwf	_SENSITIVITY& (0+255),b
 13159  004320  CFF3 F030          	movff	prodl,turnRight@delay
 13160  004324  CFF4 F031          	movff	prodh,turnRight@delay+1
 13161  004328                     
 13162                           ; BSR set to: 0
 13163  004328  0E0F               	movlw	15
 13164  00432A  2430               	addwf	turnRight@delay^0,w,c
 13165  00432C  6E26               	movwf	turnRight@delay_135^0,c
 13166  00432E  0E00               	movlw	0
 13167  004330  2031               	addwfc	(turnRight@delay+1)^0,w,c
 13168  004332  6E27               	movwf	(turnRight@delay_135+1)^0,c
 13169  004334                     
 13170                           ; BSR set to: 0
 13171  004334  0E0A               	movlw	10
 13172  004336  2430               	addwf	turnRight@delay^0,w,c
 13173  004338  6E28               	movwf	turnRight@delay_180^0,c
 13174  00433A  0E00               	movlw	0
 13175  00433C  2031               	addwfc	(turnRight@delay+1)^0,w,c
 13176  00433E  6E29               	movwf	(turnRight@delay_180+1)^0,c
 13177  004340                     
 13178                           ; BSR set to: 0
 13179                           ;dc_motor.c: 136:     if (angle_right == 180){
 13180  004340  0EB4               	movlw	180
 13181  004342  1824               	xorwf	turnRight@angle_right^0,w,c
 13182  004344  A4D8               	btfss	status,2,c
 13183  004346  EFA7  F021         	goto	u4801
 13184  00434A  EFA9  F021         	goto	u4800
 13185  00434E                     u4801:
 13186  00434E  EFC4  F021         	goto	l4716
 13187  004352                     u4800:
 13188  004352                     
 13189                           ; BSR set to: 0
 13190                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13191  004352  0E00               	movlw	0
 13192  004354  6E2B               	movwf	(turnRight@i+1)^0,c
 13193  004356  0E00               	movlw	0
 13194  004358  6E2A               	movwf	turnRight@i^0,c
 13195  00435A  EFB9  F021         	goto	l336
 13196  00435E                     l4712:
 13197  00435E  0E15               	movlw	21
 13198  004360  6E25               	movwf	??_turnRight^0,c
 13199  004362  0EC6               	movlw	198
 13200  004364                     u6417:
 13201  004364  2EE8               	decfsz	wreg,f,c
 13202  004366  D7FE               	bra	u6417
 13203  004368  2E25               	decfsz	??_turnRight^0,f,c
 13204  00436A  D7FC               	bra	u6417
 13205  00436C  D000               	nop2	
 13206  00436E  4A2A               	infsnz	turnRight@i^0,f,c
 13207  004370  2A2B               	incf	(turnRight@i+1)^0,f,c
 13208  004372                     l336:
 13209  004372  5028               	movf	turnRight@delay_180^0,w,c
 13210  004374  5C2A               	subwf	turnRight@i^0,w,c
 13211  004376  5029               	movf	(turnRight@delay_180+1)^0,w,c
 13212  004378  582B               	subwfb	(turnRight@i+1)^0,w,c
 13213  00437A  A0D8               	btfss	status,0,c
 13214  00437C  EFC2  F021         	goto	u4811
 13215  004380  EFC4  F021         	goto	u4810
 13216  004384                     u4811:
 13217  004384  EFAF  F021         	goto	l4712
 13218  004388                     u4810:
 13219  004388                     l4716:
 13220                           
 13221                           ;dc_motor.c: 139:     if (angle_right == 135){
 13222  004388  0E87               	movlw	135
 13223  00438A  1824               	xorwf	turnRight@angle_right^0,w,c
 13224  00438C  A4D8               	btfss	status,2,c
 13225  00438E  EFCB  F021         	goto	u4821
 13226  004392  EFCD  F021         	goto	u4820
 13227  004396                     u4821:
 13228  004396  EFE8  F021         	goto	l4724
 13229  00439A                     u4820:
 13230  00439A                     
 13231                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13232  00439A  0E00               	movlw	0
 13233  00439C  6E2D               	movwf	(turnRight@i_1344+1)^0,c
 13234  00439E  0E00               	movlw	0
 13235  0043A0  6E2C               	movwf	turnRight@i_1344^0,c
 13236  0043A2  EFDD  F021         	goto	l340
 13237  0043A6                     l4720:
 13238  0043A6  0E15               	movlw	21
 13239  0043A8  6E25               	movwf	??_turnRight^0,c
 13240  0043AA  0EC6               	movlw	198
 13241  0043AC                     u6427:
 13242  0043AC  2EE8               	decfsz	wreg,f,c
 13243  0043AE  D7FE               	bra	u6427
 13244  0043B0  2E25               	decfsz	??_turnRight^0,f,c
 13245  0043B2  D7FC               	bra	u6427
 13246  0043B4  D000               	nop2	
 13247  0043B6  4A2C               	infsnz	turnRight@i_1344^0,f,c
 13248  0043B8  2A2D               	incf	(turnRight@i_1344+1)^0,f,c
 13249  0043BA                     l340:
 13250  0043BA  5026               	movf	turnRight@delay_135^0,w,c
 13251  0043BC  5C2C               	subwf	turnRight@i_1344^0,w,c
 13252  0043BE  5027               	movf	(turnRight@delay_135+1)^0,w,c
 13253  0043C0  582D               	subwfb	(turnRight@i_1344+1)^0,w,c
 13254  0043C2  A0D8               	btfss	status,0,c
 13255  0043C4  EFE6  F021         	goto	u4831
 13256  0043C8  EFE8  F021         	goto	u4830
 13257  0043CC                     u4831:
 13258  0043CC  EFD3  F021         	goto	l4720
 13259  0043D0                     u4830:
 13260  0043D0                     l4724:
 13261                           
 13262                           ;dc_motor.c: 142:     if (angle_right == 90){
 13263  0043D0  0E5A               	movlw	90
 13264  0043D2  1824               	xorwf	turnRight@angle_right^0,w,c
 13265  0043D4  A4D8               	btfss	status,2,c
 13266  0043D6  EFEF  F021         	goto	u4841
 13267  0043DA  EFF1  F021         	goto	u4840
 13268  0043DE                     u4841:
 13269  0043DE  EF0C  F022         	goto	l4732
 13270  0043E2                     u4840:
 13271  0043E2                     
 13272                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 13273  0043E2  0E00               	movlw	0
 13274  0043E4  6E2F               	movwf	(turnRight@i_1345+1)^0,c
 13275  0043E6  0E00               	movlw	0
 13276  0043E8  6E2E               	movwf	turnRight@i_1345^0,c
 13277  0043EA  EF01  F022         	goto	l344
 13278  0043EE                     l4728:
 13279  0043EE  0E15               	movlw	21
 13280  0043F0  6E25               	movwf	??_turnRight^0,c
 13281  0043F2  0EC6               	movlw	198
 13282  0043F4                     u6437:
 13283  0043F4  2EE8               	decfsz	wreg,f,c
 13284  0043F6  D7FE               	bra	u6437
 13285  0043F8  2E25               	decfsz	??_turnRight^0,f,c
 13286  0043FA  D7FC               	bra	u6437
 13287  0043FC  D000               	nop2	
 13288  0043FE  4A2E               	infsnz	turnRight@i_1345^0,f,c
 13289  004400  2A2F               	incf	(turnRight@i_1345+1)^0,f,c
 13290  004402                     l344:
 13291  004402  5030               	movf	turnRight@delay^0,w,c
 13292  004404  5C2E               	subwf	turnRight@i_1345^0,w,c
 13293  004406  5031               	movf	(turnRight@delay+1)^0,w,c
 13294  004408  582F               	subwfb	(turnRight@i_1345+1)^0,w,c
 13295  00440A  A0D8               	btfss	status,0,c
 13296  00440C  EF0A  F022         	goto	u4851
 13297  004410  EF0C  F022         	goto	u4850
 13298  004414                     u4851:
 13299  004414  EFF7  F021         	goto	l4728
 13300  004418                     u4850:
 13301  004418                     l4732:
 13302                           
 13303                           ;dc_motor.c: 145:     stop(mL,mR);
 13304  004418  C020  F01A         	movff	turnRight@mL,stop@mL
 13305  00441C  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 13306  004420  C022  F01C         	movff	turnRight@mR,stop@mR
 13307  004424  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 13308  004428  EC7C  F029         	call	_stop	;wreg free
 13309  00442C  0012               	return		;funcret
 13310  00442E                     __end_of_turnRight:
 13311                           	callstack 0
 13312                           
 13313 ;; *************** function _turnLeft *****************
 13314 ;; Defined at:
 13315 ;;		line 95 in file "dc_motor.c"
 13316 ;; Parameters:    Size  Location     Type
 13317 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13318 ;;		 -> main@motorL(9), 
 13319 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13320 ;;		 -> main@motorR(9), 
 13321 ;;  angle_left      1   35[COMRAM] unsigned char 
 13322 ;; Auto vars:     Size  Location     Type
 13323 ;;  i               2   45[COMRAM] unsigned int 
 13324 ;;  i               2   43[COMRAM] unsigned int 
 13325 ;;  i               2   41[COMRAM] unsigned int 
 13326 ;;  delay           2   47[COMRAM] unsigned int 
 13327 ;;  delay_180       2   39[COMRAM] unsigned int 
 13328 ;;  delay_135       2   37[COMRAM] unsigned int 
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  1    wreg      void 
 13331 ;; Registers used:
 13332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13338 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13339 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13340 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13341 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13342 ;;Total ram usage:       18 bytes
 13343 ;; Hardware stack levels used: 1
 13344 ;; Hardware stack levels required when called: 4
 13345 ;; This function calls:
 13346 ;;		_setMotorPWM
 13347 ;;		_stop
 13348 ;; This function is called by:
 13349 ;;		_action
 13350 ;;		_test_action
 13351 ;;		_goback
 13352 ;; This function uses a non-reentrant model
 13353 ;;
 13354                           
 13355                           	psect	text69
 13356  00442E                     __ptext69:
 13357                           	callstack 0
 13358  00442E                     _turnLeft:
 13359                           	callstack 24
 13360  00442E                     
 13361                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 13362  00442E  EE20 F001          	lfsr	2,1
 13363  004432  5020               	movf	turnLeft@mL^0,w,c
 13364  004434  26D9               	addwf	fsr2l,f,c
 13365  004436  5021               	movf	(turnLeft@mL+1)^0,w,c
 13366  004438  22DA               	addwfc	fsr2h,f,c
 13367  00443A  0E01               	movlw	1
 13368  00443C  6EDF               	movwf	indf2,c
 13369                           
 13370                           ;dc_motor.c: 98:       mR->direction=1;
 13371  00443E  EE20 F001          	lfsr	2,1
 13372  004442  5022               	movf	turnLeft@mR^0,w,c
 13373  004444  26D9               	addwf	fsr2l,f,c
 13374  004446  5023               	movf	(turnLeft@mR+1)^0,w,c
 13375  004448  22DA               	addwfc	fsr2h,f,c
 13376  00444A  0E01               	movlw	1
 13377  00444C  6EDF               	movwf	indf2,c
 13378                           
 13379                           ;dc_motor.c: 99:       while (mR->power <25){
 13380  00444E  EF48  F022         	goto	l4656
 13381  004452                     l4648:
 13382                           
 13383                           ;dc_motor.c: 100:         mR->power += 5;
 13384  004452  C022  FFD9         	movff	turnLeft@mR,fsr2l
 13385  004456  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 13386  00445A  0E05               	movlw	5
 13387  00445C  26DF               	addwf	indf2,f,c
 13388                           
 13389                           ;dc_motor.c: 101:         mL->power = 0;
 13390  00445E  C020  FFD9         	movff	turnLeft@mL,fsr2l
 13391  004462  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 13392  004466  0E00               	movlw	0
 13393  004468  6EDF               	movwf	indf2,c
 13394  00446A                     
 13395                           ;dc_motor.c: 102:         setMotorPWM(mL);
 13396  00446A  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 13397  00446E  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 13398  004472  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13399  004476                     
 13400                           ;dc_motor.c: 103:         setMotorPWM(mR);
 13401  004476  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 13402  00447A  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 13403  00447E  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13404  004482                     
 13405                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13406  004482  0ED0               	movlw	208
 13407  004484  6E25               	movwf	??_turnLeft^0,c
 13408  004486  0ECA               	movlw	202
 13409  004488                     u6447:
 13410  004488  2EE8               	decfsz	wreg,f,c
 13411  00448A  D7FE               	bra	u6447
 13412  00448C  2E25               	decfsz	??_turnLeft^0,f,c
 13413  00448E  D7FC               	bra	u6447
 13414  004490                     l4656:
 13415                           
 13416                           ;dc_motor.c: 99:       while (mR->power <25){
 13417  004490  C022  FFD9         	movff	turnLeft@mR,fsr2l
 13418  004494  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 13419  004498  0E18               	movlw	24
 13420  00449A  64DF               	cpfsgt	indf2,c
 13421  00449C  EF52  F022         	goto	u4721
 13422  0044A0  EF54  F022         	goto	u4720
 13423  0044A4                     u4721:
 13424  0044A4  EF29  F022         	goto	l4648
 13425  0044A8                     u4720:
 13426  0044A8                     
 13427                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 13428  0044A8  5024               	movf	turnLeft@angle_left^0,w,c
 13429  0044AA  0100               	movlb	0	; () banked
 13430  0044AC  03FE               	mulwf	_SENSITIVITY& (0+255),b
 13431  0044AE  CFF3 F030          	movff	prodl,turnLeft@delay
 13432  0044B2  CFF4 F031          	movff	prodh,turnLeft@delay+1
 13433  0044B6                     
 13434                           ; BSR set to: 0
 13435  0044B6  0E0F               	movlw	15
 13436  0044B8  2430               	addwf	turnLeft@delay^0,w,c
 13437  0044BA  6E26               	movwf	turnLeft@delay_135^0,c
 13438  0044BC  0E00               	movlw	0
 13439  0044BE  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 13440  0044C0  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 13441  0044C2                     
 13442                           ; BSR set to: 0
 13443  0044C2  0E0A               	movlw	10
 13444  0044C4  2430               	addwf	turnLeft@delay^0,w,c
 13445  0044C6  6E28               	movwf	turnLeft@delay_180^0,c
 13446  0044C8  0E00               	movlw	0
 13447  0044CA  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 13448  0044CC  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 13449  0044CE                     
 13450                           ; BSR set to: 0
 13451                           ;dc_motor.c: 109:     if (angle_left == 180){
 13452  0044CE  0EB4               	movlw	180
 13453  0044D0  1824               	xorwf	turnLeft@angle_left^0,w,c
 13454  0044D2  A4D8               	btfss	status,2,c
 13455  0044D4  EF6E  F022         	goto	u4731
 13456  0044D8  EF70  F022         	goto	u4730
 13457  0044DC                     u4731:
 13458  0044DC  EF8B  F022         	goto	l4672
 13459  0044E0                     u4730:
 13460  0044E0                     
 13461                           ; BSR set to: 0
 13462                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13463  0044E0  0E00               	movlw	0
 13464  0044E2  6E2B               	movwf	(turnLeft@i+1)^0,c
 13465  0044E4  0E00               	movlw	0
 13466  0044E6  6E2A               	movwf	turnLeft@i^0,c
 13467  0044E8  EF80  F022         	goto	l318
 13468  0044EC                     l4668:
 13469  0044EC  0E15               	movlw	21
 13470  0044EE  6E25               	movwf	??_turnLeft^0,c
 13471  0044F0  0EC6               	movlw	198
 13472  0044F2                     u6457:
 13473  0044F2  2EE8               	decfsz	wreg,f,c
 13474  0044F4  D7FE               	bra	u6457
 13475  0044F6  2E25               	decfsz	??_turnLeft^0,f,c
 13476  0044F8  D7FC               	bra	u6457
 13477  0044FA  D000               	nop2	
 13478  0044FC  4A2A               	infsnz	turnLeft@i^0,f,c
 13479  0044FE  2A2B               	incf	(turnLeft@i+1)^0,f,c
 13480  004500                     l318:
 13481  004500  5028               	movf	turnLeft@delay_180^0,w,c
 13482  004502  5C2A               	subwf	turnLeft@i^0,w,c
 13483  004504  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 13484  004506  582B               	subwfb	(turnLeft@i+1)^0,w,c
 13485  004508  A0D8               	btfss	status,0,c
 13486  00450A  EF89  F022         	goto	u4741
 13487  00450E  EF8B  F022         	goto	u4740
 13488  004512                     u4741:
 13489  004512  EF76  F022         	goto	l4668
 13490  004516                     u4740:
 13491  004516                     l4672:
 13492                           
 13493                           ;dc_motor.c: 112:     if (angle_left == 135){
 13494  004516  0E87               	movlw	135
 13495  004518  1824               	xorwf	turnLeft@angle_left^0,w,c
 13496  00451A  A4D8               	btfss	status,2,c
 13497  00451C  EF92  F022         	goto	u4751
 13498  004520  EF94  F022         	goto	u4750
 13499  004524                     u4751:
 13500  004524  EFAF  F022         	goto	l4680
 13501  004528                     u4750:
 13502  004528                     
 13503                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13504  004528  0E00               	movlw	0
 13505  00452A  6E2D               	movwf	(turnLeft@i_1321+1)^0,c
 13506  00452C  0E00               	movlw	0
 13507  00452E  6E2C               	movwf	turnLeft@i_1321^0,c
 13508  004530  EFA4  F022         	goto	l322
 13509  004534                     l4676:
 13510  004534  0E15               	movlw	21
 13511  004536  6E25               	movwf	??_turnLeft^0,c
 13512  004538  0EC6               	movlw	198
 13513  00453A                     u6467:
 13514  00453A  2EE8               	decfsz	wreg,f,c
 13515  00453C  D7FE               	bra	u6467
 13516  00453E  2E25               	decfsz	??_turnLeft^0,f,c
 13517  004540  D7FC               	bra	u6467
 13518  004542  D000               	nop2	
 13519  004544  4A2C               	infsnz	turnLeft@i_1321^0,f,c
 13520  004546  2A2D               	incf	(turnLeft@i_1321+1)^0,f,c
 13521  004548                     l322:
 13522  004548  5026               	movf	turnLeft@delay_135^0,w,c
 13523  00454A  5C2C               	subwf	turnLeft@i_1321^0,w,c
 13524  00454C  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 13525  00454E  582D               	subwfb	(turnLeft@i_1321+1)^0,w,c
 13526  004550  A0D8               	btfss	status,0,c
 13527  004552  EFAD  F022         	goto	u4761
 13528  004556  EFAF  F022         	goto	u4760
 13529  00455A                     u4761:
 13530  00455A  EF9A  F022         	goto	l4676
 13531  00455E                     u4760:
 13532  00455E                     l4680:
 13533                           
 13534                           ;dc_motor.c: 115:     if (angle_left == 90){
 13535  00455E  0E5A               	movlw	90
 13536  004560  1824               	xorwf	turnLeft@angle_left^0,w,c
 13537  004562  A4D8               	btfss	status,2,c
 13538  004564  EFB6  F022         	goto	u4771
 13539  004568  EFB8  F022         	goto	u4770
 13540  00456C                     u4771:
 13541  00456C  EFD3  F022         	goto	l4688
 13542  004570                     u4770:
 13543  004570                     
 13544                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 13545  004570  0E00               	movlw	0
 13546  004572  6E2F               	movwf	(turnLeft@i_1322+1)^0,c
 13547  004574  0E00               	movlw	0
 13548  004576  6E2E               	movwf	turnLeft@i_1322^0,c
 13549  004578  EFC8  F022         	goto	l326
 13550  00457C                     l4684:
 13551  00457C  0E15               	movlw	21
 13552  00457E  6E25               	movwf	??_turnLeft^0,c
 13553  004580  0EC6               	movlw	198
 13554  004582                     u6477:
 13555  004582  2EE8               	decfsz	wreg,f,c
 13556  004584  D7FE               	bra	u6477
 13557  004586  2E25               	decfsz	??_turnLeft^0,f,c
 13558  004588  D7FC               	bra	u6477
 13559  00458A  D000               	nop2	
 13560  00458C  4A2E               	infsnz	turnLeft@i_1322^0,f,c
 13561  00458E  2A2F               	incf	(turnLeft@i_1322+1)^0,f,c
 13562  004590                     l326:
 13563  004590  5030               	movf	turnLeft@delay^0,w,c
 13564  004592  5C2E               	subwf	turnLeft@i_1322^0,w,c
 13565  004594  5031               	movf	(turnLeft@delay+1)^0,w,c
 13566  004596  582F               	subwfb	(turnLeft@i_1322+1)^0,w,c
 13567  004598  A0D8               	btfss	status,0,c
 13568  00459A  EFD1  F022         	goto	u4781
 13569  00459E  EFD3  F022         	goto	u4780
 13570  0045A2                     u4781:
 13571  0045A2  EFBE  F022         	goto	l4684
 13572  0045A6                     u4780:
 13573  0045A6                     l4688:
 13574                           
 13575                           ;dc_motor.c: 118:     stop(mL,mR);
 13576  0045A6  C020  F01A         	movff	turnLeft@mL,stop@mL
 13577  0045AA  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 13578  0045AE  C022  F01C         	movff	turnLeft@mR,stop@mR
 13579  0045B2  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 13580  0045B6  EC7C  F029         	call	_stop	;wreg free
 13581  0045BA  0012               	return		;funcret
 13582  0045BC                     __end_of_turnLeft:
 13583                           	callstack 0
 13584                           
 13585 ;; *************** function _reverse_square *****************
 13586 ;; Defined at:
 13587 ;;		line 189 in file "dc_motor.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 13590 ;;		 -> main@motorL(9), 
 13591 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 13592 ;;		 -> main@motorR(9), 
 13593 ;; Auto vars:     Size  Location     Type
 13594 ;;		None
 13595 ;; Return value:  Size  Location     Type
 13596 ;;                  1    wreg      void 
 13597 ;; Registers used:
 13598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13599 ;; Tracked objects:
 13600 ;;		On entry : 0/0
 13601 ;;		On exit  : 0/0
 13602 ;;		Unchanged: 0/0
 13603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13604 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13607 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13608 ;;Total ram usage:        6 bytes
 13609 ;; Hardware stack levels used: 1
 13610 ;; Hardware stack levels required when called: 5
 13611 ;; This function calls:
 13612 ;;		_fullSpeedBack
 13613 ;;		_stop
 13614 ;; This function is called by:
 13615 ;;		_action
 13616 ;;		_goback
 13617 ;; This function uses a non-reentrant model
 13618 ;;
 13619                           
 13620                           	psect	text70
 13621  0059EC                     __ptext70:
 13622                           	callstack 0
 13623  0059EC                     _reverse_square:
 13624                           	callstack 24
 13625  0059EC                     
 13626                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 13627  0059EC  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 13628  0059F0  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 13629  0059F4  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 13630  0059F8  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 13631  0059FC  EC1C  F029         	call	_fullSpeedBack	;wreg free
 13632  005A00                     
 13633                           ;dc_motor.c: 191:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 13634  005A00  0E7A               	movlw	122
 13635  005A02  6E2B               	movwf	(??_reverse_square+1)^0,c
 13636  005A04  0EC1               	movlw	193
 13637  005A06  6E2A               	movwf	??_reverse_square^0,c
 13638  005A08  0E82               	movlw	130
 13639  005A0A                     u6487:
 13640  005A0A  2EE8               	decfsz	wreg,f,c
 13641  005A0C  D7FE               	bra	u6487
 13642  005A0E  2E2A               	decfsz	??_reverse_square^0,f,c
 13643  005A10  D7FC               	bra	u6487
 13644  005A12  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 13645  005A14  D7FA               	bra	u6487
 13646  005A16                     
 13647                           ;dc_motor.c: 192:     stop(mL,mR);
 13648  005A16  C026  F01A         	movff	reverse_square@mL,stop@mL
 13649  005A1A  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 13650  005A1E  C028  F01C         	movff	reverse_square@mR,stop@mR
 13651  005A22  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 13652  005A26  EC7C  F029         	call	_stop	;wreg free
 13653  005A2A  0012               	return		;funcret
 13654  005A2C                     __end_of_reverse_square:
 13655                           	callstack 0
 13656                           
 13657 ;; *************** function _fullSpeedBack *****************
 13658 ;; Defined at:
 13659 ;;		line 168 in file "dc_motor.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13662 ;;		 -> main@motorL(9), 
 13663 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13664 ;;		 -> main@motorR(9), 
 13665 ;; Auto vars:     Size  Location     Type
 13666 ;;		None
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  1    wreg      void 
 13669 ;; Registers used:
 13670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13679 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13680 ;;Total ram usage:        6 bytes
 13681 ;; Hardware stack levels used: 1
 13682 ;; Hardware stack levels required when called: 4
 13683 ;; This function calls:
 13684 ;;		_setMotorPWM
 13685 ;;		_stop
 13686 ;; This function is called by:
 13687 ;;		_short_reverse
 13688 ;;		_reverse_square
 13689 ;; This function uses a non-reentrant model
 13690 ;;
 13691                           
 13692                           	psect	text71
 13693  005238                     __ptext71:
 13694                           	callstack 0
 13695  005238                     _fullSpeedBack:
 13696                           	callstack 24
 13697  005238                     
 13698                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 13699  005238  EE20 F001          	lfsr	2,1
 13700  00523C  5020               	movf	fullSpeedBack@mL^0,w,c
 13701  00523E  26D9               	addwf	fsr2l,f,c
 13702  005240  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 13703  005242  22DA               	addwfc	fsr2h,f,c
 13704  005244  0E00               	movlw	0
 13705  005246  6EDF               	movwf	indf2,c
 13706                           
 13707                           ;dc_motor.c: 171:     mR->direction=0;
 13708  005248  EE20 F001          	lfsr	2,1
 13709  00524C  5022               	movf	fullSpeedBack@mR^0,w,c
 13710  00524E  26D9               	addwf	fsr2l,f,c
 13711  005250  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 13712  005252  22DA               	addwfc	fsr2h,f,c
 13713  005254  0E00               	movlw	0
 13714  005256  6EDF               	movwf	indf2,c
 13715                           
 13716                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 13717  005258  EF4D  F029         	goto	l4472
 13718  00525C                     l4464:
 13719                           
 13720                           ;dc_motor.c: 173:         mL->power += 10;
 13721  00525C  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13722  005260  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13723  005264  0E0A               	movlw	10
 13724  005266  26DF               	addwf	indf2,f,c
 13725                           
 13726                           ;dc_motor.c: 174:         mR->power += 10;
 13727  005268  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13728  00526C  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13729  005270  0E0A               	movlw	10
 13730  005272  26DF               	addwf	indf2,f,c
 13731  005274                     
 13732                           ;dc_motor.c: 175:         setMotorPWM(mL);
 13733  005274  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 13734  005278  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 13735  00527C  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13736  005280                     
 13737                           ;dc_motor.c: 176:         setMotorPWM(mR);
 13738  005280  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 13739  005284  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 13740  005288  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13741  00528C                     
 13742                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13743  00528C  0ED0               	movlw	208
 13744  00528E  6E24               	movwf	??_fullSpeedBack^0,c
 13745  005290  0ECA               	movlw	202
 13746  005292                     u6497:
 13747  005292  2EE8               	decfsz	wreg,f,c
 13748  005294  D7FE               	bra	u6497
 13749  005296  2E24               	decfsz	??_fullSpeedBack^0,f,c
 13750  005298  D7FC               	bra	u6497
 13751  00529A                     l4472:
 13752                           
 13753                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 13754  00529A  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13755  00529E  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13756  0052A2  0E32               	movlw	50
 13757  0052A4  60DF               	cpfslt	indf2,c
 13758  0052A6  EF57  F029         	goto	u4261
 13759  0052AA  EF59  F029         	goto	u4260
 13760  0052AE                     u4261:
 13761  0052AE  EF65  F029         	goto	l4476
 13762  0052B2                     u4260:
 13763  0052B2  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13764  0052B6  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13765  0052BA  0E31               	movlw	49
 13766  0052BC  64DF               	cpfsgt	indf2,c
 13767  0052BE  EF63  F029         	goto	u4271
 13768  0052C2  EF65  F029         	goto	u4270
 13769  0052C6                     u4271:
 13770  0052C6  EF2E  F029         	goto	l4464
 13771  0052CA                     u4270:
 13772  0052CA                     l4476:
 13773                           
 13774                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 13775  0052CA  0E29               	movlw	41
 13776  0052CC  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 13777  0052CE  0E96               	movlw	150
 13778  0052D0  6E24               	movwf	??_fullSpeedBack^0,c
 13779  0052D2  0E7F               	movlw	127
 13780  0052D4                     u6507:
 13781  0052D4  2EE8               	decfsz	wreg,f,c
 13782  0052D6  D7FE               	bra	u6507
 13783  0052D8  2E24               	decfsz	??_fullSpeedBack^0,f,c
 13784  0052DA  D7FC               	bra	u6507
 13785  0052DC  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 13786  0052DE  D7FA               	bra	u6507
 13787  0052E0  F000               	nop	
 13788  0052E2                     
 13789                           ;dc_motor.c: 180:     stop(mL,mR);
 13790  0052E2  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 13791  0052E6  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 13792  0052EA  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 13793  0052EE  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 13794  0052F2  EC7C  F029         	call	_stop	;wreg free
 13795  0052F6  0012               	return		;funcret
 13796  0052F8                     __end_of_fullSpeedBack:
 13797                           	callstack 0
 13798                           
 13799 ;; *************** function _stop *****************
 13800 ;; Defined at:
 13801 ;;		line 82 in file "dc_motor.c"
 13802 ;; Parameters:    Size  Location     Type
 13803 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13804 ;;		 -> main@motorL(9), 
 13805 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13806 ;;		 -> main@motorR(9), 
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;		None
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1    wreg      void 
 13811 ;; Registers used:
 13812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/0
 13815 ;;		On exit  : 0/0
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13821 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13822 ;;Total ram usage:        6 bytes
 13823 ;; Hardware stack levels used: 1
 13824 ;; Hardware stack levels required when called: 3
 13825 ;; This function calls:
 13826 ;;		_setMotorPWM
 13827 ;; This function is called by:
 13828 ;;		_turnLeft
 13829 ;;		_turnRight
 13830 ;;		_fullSpeedAhead_test
 13831 ;;		_fullSpeedBack
 13832 ;;		_short_reverse
 13833 ;;		_reverse_square
 13834 ;;		_main
 13835 ;;		_short_burst_back
 13836 ;;		_goback
 13837 ;;		_test_function
 13838 ;; This function uses a non-reentrant model
 13839 ;;
 13840                           
 13841                           	psect	text72
 13842  0052F8                     __ptext72:
 13843                           	callstack 0
 13844  0052F8                     _stop:
 13845                           	callstack 26
 13846  0052F8                     
 13847                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13848  0052F8  EFB5  F029         	goto	l4220
 13849  0052FC                     l4206:
 13850                           
 13851                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 13852  0052FC  C01A  FFD9         	movff	stop@mL,fsr2l
 13853  005300  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13854  005304  50DF               	movf	indf2,w,c
 13855  005306  B4D8               	btfsc	status,2,c
 13856  005308  EF88  F029         	goto	u3921
 13857  00530C  EF8A  F029         	goto	u3920
 13858  005310                     u3921:
 13859  005310  EF90  F029         	goto	l4210
 13860  005314                     u3920:
 13861  005314  C01A  FFD9         	movff	stop@mL,fsr2l
 13862  005318  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13863  00531C  0E05               	movlw	5
 13864  00531E  5EDF               	subwf	indf2,f,c
 13865  005320                     l4210:
 13866                           
 13867                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 13868  005320  C01C  FFD9         	movff	stop@mR,fsr2l
 13869  005324  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13870  005328  50DF               	movf	indf2,w,c
 13871  00532A  B4D8               	btfsc	status,2,c
 13872  00532C  EF9A  F029         	goto	u3931
 13873  005330  EF9C  F029         	goto	u3930
 13874  005334                     u3931:
 13875  005334  EFA2  F029         	goto	l4214
 13876  005338                     u3930:
 13877  005338  C01C  FFD9         	movff	stop@mR,fsr2l
 13878  00533C  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13879  005340  0E05               	movlw	5
 13880  005342  5EDF               	subwf	indf2,f,c
 13881  005344                     l4214:
 13882                           
 13883                           ;dc_motor.c: 87:         setMotorPWM(mL);
 13884  005344  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 13885  005348  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 13886  00534C  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13887  005350                     
 13888                           ;dc_motor.c: 88:         setMotorPWM(mR);
 13889  005350  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 13890  005354  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 13891  005358  EC0A  F01D         	call	_setMotorPWM	;wreg free
 13892  00535C                     
 13893                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13894  00535C  0ED0               	movlw	208
 13895  00535E  6E1E               	movwf	??_stop^0,c
 13896  005360  0ECA               	movlw	202
 13897  005362                     u6517:
 13898  005362  2EE8               	decfsz	wreg,f,c
 13899  005364  D7FE               	bra	u6517
 13900  005366  2E1E               	decfsz	??_stop^0,f,c
 13901  005368  D7FC               	bra	u6517
 13902  00536A                     l4220:
 13903                           
 13904                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13905  00536A  C01A  FFD9         	movff	stop@mL,fsr2l
 13906  00536E  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13907  005372  50DF               	movf	indf2,w,c
 13908  005374  A4D8               	btfss	status,2,c
 13909  005376  EFBF  F029         	goto	u3941
 13910  00537A  EFC1  F029         	goto	u3940
 13911  00537E                     u3941:
 13912  00537E  EF7E  F029         	goto	l4206
 13913  005382                     u3940:
 13914  005382  C01C  FFD9         	movff	stop@mR,fsr2l
 13915  005386  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13916  00538A  50DF               	movf	indf2,w,c
 13917  00538C  A4D8               	btfss	status,2,c
 13918  00538E  EFCB  F029         	goto	u3951
 13919  005392  EFCD  F029         	goto	u3950
 13920  005396                     u3951:
 13921  005396  EF7E  F029         	goto	l4206
 13922  00539A                     u3950:
 13923  00539A                     
 13924                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 13925  00539A  0E29               	movlw	41
 13926  00539C  6E1F               	movwf	(??_stop+1)^0,c
 13927  00539E  0E96               	movlw	150
 13928  0053A0  6E1E               	movwf	??_stop^0,c
 13929  0053A2  0E7F               	movlw	127
 13930  0053A4                     u6527:
 13931  0053A4  2EE8               	decfsz	wreg,f,c
 13932  0053A6  D7FE               	bra	u6527
 13933  0053A8  2E1E               	decfsz	??_stop^0,f,c
 13934  0053AA  D7FC               	bra	u6527
 13935  0053AC  2E1F               	decfsz	(??_stop+1)^0,f,c
 13936  0053AE  D7FA               	bra	u6527
 13937  0053B0  F000               	nop	
 13938  0053B2  0012               	return		;funcret
 13939  0053B4                     __end_of_stop:
 13940                           	callstack 0
 13941                           
 13942 ;; *************** function _fullSpeedAhead *****************
 13943 ;; Defined at:
 13944 ;;		line 149 in file "dc_motor.c"
 13945 ;; Parameters:    Size  Location     Type
 13946 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13947 ;;		 -> main@motorL(9), 
 13948 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13949 ;;		 -> main@motorR(9), 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;		None
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  1    wreg      void 
 13954 ;; Registers used:
 13955 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13963 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13964 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13965 ;;Total ram usage:        5 bytes
 13966 ;; Hardware stack levels used: 1
 13967 ;; Hardware stack levels required when called: 3
 13968 ;; This function calls:
 13969 ;;		_setMotorPWM
 13970 ;; This function is called by:
 13971 ;;		_fullSpeedAhead_test
 13972 ;;		_main
 13973 ;;		_short_burst_back
 13974 ;;		_goback
 13975 ;;		_test_function
 13976 ;; This function uses a non-reentrant model
 13977 ;;
 13978                           
 13979                           	psect	text73
 13980  0053B4                     __ptext73:
 13981                           	callstack 0
 13982  0053B4                     _fullSpeedAhead:
 13983                           	callstack 26
 13984  0053B4                     
 13985                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 13986  0053B4  EE20 F001          	lfsr	2,1
 13987  0053B8  501A               	movf	fullSpeedAhead@mL^0,w,c
 13988  0053BA  26D9               	addwf	fsr2l,f,c
 13989  0053BC  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 13990  0053BE  22DA               	addwfc	fsr2h,f,c
 13991  0053C0  0E01               	movlw	1
 13992  0053C2  6EDF               	movwf	indf2,c
 13993                           
 13994                           ;dc_motor.c: 152:     mR->direction=1;
 13995  0053C4  EE20 F001          	lfsr	2,1
 13996  0053C8  501C               	movf	fullSpeedAhead@mR^0,w,c
 13997  0053CA  26D9               	addwf	fsr2l,f,c
 13998  0053CC  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 13999  0053CE  22DA               	addwfc	fsr2h,f,c
 14000  0053D0  0E01               	movlw	1
 14001  0053D2  6EDF               	movwf	indf2,c
 14002                           
 14003                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 14004  0053D4  EF0B  F02A         	goto	l4458
 14005  0053D8                     l4450:
 14006                           
 14007                           ;dc_motor.c: 154:         mL->power += 10;
 14008  0053D8  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 14009  0053DC  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 14010  0053E0  0E0A               	movlw	10
 14011  0053E2  26DF               	addwf	indf2,f,c
 14012                           
 14013                           ;dc_motor.c: 155:         mR->power += 10;
 14014  0053E4  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 14015  0053E8  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 14016  0053EC  0E0A               	movlw	10
 14017  0053EE  26DF               	addwf	indf2,f,c
 14018  0053F0                     
 14019                           ;dc_motor.c: 156:         setMotorPWM(mL);
 14020  0053F0  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 14021  0053F4  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 14022  0053F8  EC0A  F01D         	call	_setMotorPWM	;wreg free
 14023  0053FC                     
 14024                           ;dc_motor.c: 157:         setMotorPWM(mR);
 14025  0053FC  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 14026  005400  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 14027  005404  EC0A  F01D         	call	_setMotorPWM	;wreg free
 14028  005408                     
 14029                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 14030  005408  0ED0               	movlw	208
 14031  00540A  6E1E               	movwf	??_fullSpeedAhead^0,c
 14032  00540C  0ECA               	movlw	202
 14033  00540E                     u6537:
 14034  00540E  2EE8               	decfsz	wreg,f,c
 14035  005410  D7FE               	bra	u6537
 14036  005412  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 14037  005414  D7FC               	bra	u6537
 14038  005416                     l4458:
 14039                           
 14040                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 14041  005416  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 14042  00541A  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 14043  00541E  0E14               	movlw	20
 14044  005420  60DF               	cpfslt	indf2,c
 14045  005422  EF15  F02A         	goto	u4241
 14046  005426  EF17  F02A         	goto	u4240
 14047  00542A                     u4241:
 14048  00542A  EF23  F02A         	goto	l355
 14049  00542E                     u4240:
 14050  00542E  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 14051  005432  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 14052  005436  0E13               	movlw	19
 14053  005438  64DF               	cpfsgt	indf2,c
 14054  00543A  EF21  F02A         	goto	u4251
 14055  00543E  EF23  F02A         	goto	u4250
 14056  005442                     u4251:
 14057  005442  EFEC  F029         	goto	l4450
 14058  005446                     u4250:
 14059  005446                     l355:
 14060  005446  0012               	return		;funcret
 14061  005448                     __end_of_fullSpeedAhead:
 14062                           	callstack 0
 14063                           
 14064 ;; *************** function _setMotorPWM *****************
 14065 ;; Defined at:
 14066 ;;		line 59 in file "dc_motor.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;  m               2   14[COMRAM] PTR struct DC_motor
 14069 ;;		 -> main@motorR(9), main@motorL(9), 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  PWMduty         2   23[COMRAM] int 
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1    wreg      void 
 14074 ;; Registers used:
 14075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14083 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14084 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14085 ;;Total ram usage:       11 bytes
 14086 ;; Hardware stack levels used: 1
 14087 ;; Hardware stack levels required when called: 2
 14088 ;; This function calls:
 14089 ;;		___awdiv
 14090 ;;		___wmul
 14091 ;; This function is called by:
 14092 ;;		_stop
 14093 ;;		_turnLeft
 14094 ;;		_turnRight
 14095 ;;		_fullSpeedAhead
 14096 ;;		_fullSpeedBack
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text74
 14101  003A14                     __ptext74:
 14102                           	callstack 0
 14103  003A14                     _setMotorPWM:
 14104                           	callstack 26
 14105  003A14                     
 14106                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 14107  003A14  EE20 F001          	lfsr	2,1
 14108  003A18  500F               	movf	setMotorPWM@m^0,w,c
 14109  003A1A  26D9               	addwf	fsr2l,f,c
 14110  003A1C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14111  003A1E  22DA               	addwfc	fsr2h,f,c
 14112  003A20  50DF               	movf	indf2,w,c
 14113  003A22  B4D8               	btfsc	status,2,c
 14114  003A24  EF16  F01D         	goto	u3431
 14115  003A28  EF18  F01D         	goto	u3430
 14116  003A2C                     u3431:
 14117  003A2C  EF49  F01D         	goto	l3920
 14118  003A30                     u3430:
 14119  003A30                     
 14120                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 14121  003A30  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 14122  003A34  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 14123  003A38  50DF               	movf	indf2,w,c
 14124  003A3A  6E11               	movwf	??_setMotorPWM^0,c
 14125  003A3C  5011               	movf	??_setMotorPWM^0,w,c
 14126  003A3E  6E01               	movwf	___wmul@multiplier^0,c
 14127  003A40  6A02               	clrf	(___wmul@multiplier+1)^0,c
 14128  003A42  EE20 F007          	lfsr	2,7
 14129  003A46  500F               	movf	setMotorPWM@m^0,w,c
 14130  003A48  26D9               	addwf	fsr2l,f,c
 14131  003A4A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14132  003A4C  22DA               	addwfc	fsr2h,f,c
 14133  003A4E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 14134  003A52  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 14135  003A56  ECF9  F02D         	call	___wmul	;wreg free
 14136  003A5A  C001  F007         	movff	?___wmul,___awdiv@dividend
 14137  003A5E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 14138  003A62  0E00               	movlw	0
 14139  003A64  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 14140  003A66  0E64               	movlw	100
 14141  003A68  6E09               	movwf	___awdiv@divisor^0,c
 14142  003A6A  ECBA  F028         	call	___awdiv	;wreg free
 14143  003A6E  EE20 F007          	lfsr	2,7
 14144  003A72  500F               	movf	setMotorPWM@m^0,w,c
 14145  003A74  26D9               	addwf	fsr2l,f,c
 14146  003A76  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14147  003A78  22DA               	addwfc	fsr2h,f,c
 14148  003A7A  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 14149  003A7E  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 14150  003A82  5007               	movf	?___awdiv^0,w,c
 14151  003A84  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 14152  003A86  6E18               	movwf	setMotorPWM@PWMduty^0,c
 14153  003A88  5008               	movf	(?___awdiv+1)^0,w,c
 14154  003A8A  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 14155  003A8C  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 14156                           
 14157                           ;dc_motor.c: 66:  }
 14158  003A8E  EF6C  F01D         	goto	l3922
 14159  003A92                     l3920:
 14160                           
 14161                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 14162  003A92  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 14163  003A96  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 14164  003A9A  50DF               	movf	indf2,w,c
 14165  003A9C  6E11               	movwf	??_setMotorPWM^0,c
 14166  003A9E  5011               	movf	??_setMotorPWM^0,w,c
 14167  003AA0  6E01               	movwf	___wmul@multiplier^0,c
 14168  003AA2  6A02               	clrf	(___wmul@multiplier+1)^0,c
 14169  003AA4  EE20 F007          	lfsr	2,7
 14170  003AA8  500F               	movf	setMotorPWM@m^0,w,c
 14171  003AAA  26D9               	addwf	fsr2l,f,c
 14172  003AAC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14173  003AAE  22DA               	addwfc	fsr2h,f,c
 14174  003AB0  CFDE F003          	movff	postinc2,___wmul@multiplicand
 14175  003AB4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 14176  003AB8  ECF9  F02D         	call	___wmul	;wreg free
 14177  003ABC  C001  F007         	movff	?___wmul,___awdiv@dividend
 14178  003AC0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 14179  003AC4  0E00               	movlw	0
 14180  003AC6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 14181  003AC8  0E64               	movlw	100
 14182  003ACA  6E09               	movwf	___awdiv@divisor^0,c
 14183  003ACC  ECBA  F028         	call	___awdiv	;wreg free
 14184  003AD0  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 14185  003AD4  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 14186  003AD8                     l3922:
 14187                           
 14188                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 14189  003AD8  EE20 F002          	lfsr	2,2
 14190  003ADC  500F               	movf	setMotorPWM@m^0,w,c
 14191  003ADE  26D9               	addwf	fsr2l,f,c
 14192  003AE0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14193  003AE2  22DA               	addwfc	fsr2h,f,c
 14194  003AE4  CFDE F011          	movff	postinc2,??_setMotorPWM
 14195  003AE8  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 14196  003AEC  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 14197  003AF0  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 14198  003AF4  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 14199  003AF8                     
 14200                           ;dc_motor.c: 74:  if (m->direction){
 14201  003AF8  EE20 F001          	lfsr	2,1
 14202  003AFC  500F               	movf	setMotorPWM@m^0,w,c
 14203  003AFE  26D9               	addwf	fsr2l,f,c
 14204  003B00  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14205  003B02  22DA               	addwfc	fsr2h,f,c
 14206  003B04  50DF               	movf	indf2,w,c
 14207  003B06  B4D8               	btfsc	status,2,c
 14208  003B08  EF88  F01D         	goto	u3441
 14209  003B0C  EF8A  F01D         	goto	u3440
 14210  003B10                     u3441:
 14211  003B10  EFBF  F01D         	goto	l3928
 14212  003B14                     u3440:
 14213  003B14                     
 14214                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 14215  003B14  EE20 F004          	lfsr	2,4
 14216  003B18  500F               	movf	setMotorPWM@m^0,w,c
 14217  003B1A  26D9               	addwf	fsr2l,f,c
 14218  003B1C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14219  003B1E  22DA               	addwfc	fsr2h,f,c
 14220  003B20  CFDE F011          	movff	postinc2,??_setMotorPWM
 14221  003B24  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 14222  003B28  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 14223  003B2C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 14224  003B30  EE10 F004          	lfsr	1,4
 14225  003B34  500F               	movf	setMotorPWM@m^0,w,c
 14226  003B36  26E1               	addwf	fsr1l,f,c
 14227  003B38  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14228  003B3A  22E2               	addwfc	fsr1h,f,c
 14229  003B3C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 14230  003B40  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 14231  003B44  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 14232  003B48  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 14233  003B4C  50E7               	movf	indf1,w,c
 14234  003B4E  6E15               	movwf	(??_setMotorPWM+4)^0,c
 14235  003B50  EE10 F006          	lfsr	1,6
 14236  003B54  500F               	movf	setMotorPWM@m^0,w,c
 14237  003B56  26E1               	addwf	fsr1l,f,c
 14238  003B58  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14239  003B5A  22E2               	addwfc	fsr1h,f,c
 14240  003B5C  50E7               	movf	indf1,w,c
 14241  003B5E  6E16               	movwf	(??_setMotorPWM+5)^0,c
 14242  003B60  0E01               	movlw	1
 14243  003B62  6E17               	movwf	(??_setMotorPWM+6)^0,c
 14244  003B64  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 14245  003B66  EFB7  F01D         	goto	u3454
 14246  003B6A                     u3455:
 14247  003B6A  90D8               	bcf	status,0,c
 14248  003B6C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 14249  003B6E                     u3454:
 14250  003B6E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 14251  003B70  EFB5  F01D         	goto	u3455
 14252  003B74  5017               	movf	(??_setMotorPWM+6)^0,w,c
 14253  003B76  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 14254  003B78  6EDF               	movwf	indf2,c
 14255                           
 14256                           ;dc_motor.c: 76:  } else {
 14257  003B7A  EFF3  F01D         	goto	l303
 14258  003B7E                     l3928:
 14259                           
 14260                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 14261  003B7E  EE20 F004          	lfsr	2,4
 14262  003B82  500F               	movf	setMotorPWM@m^0,w,c
 14263  003B84  26D9               	addwf	fsr2l,f,c
 14264  003B86  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14265  003B88  22DA               	addwfc	fsr2h,f,c
 14266  003B8A  CFDE F011          	movff	postinc2,??_setMotorPWM
 14267  003B8E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 14268  003B92  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 14269  003B96  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 14270  003B9A  EE10 F004          	lfsr	1,4
 14271  003B9E  500F               	movf	setMotorPWM@m^0,w,c
 14272  003BA0  26E1               	addwf	fsr1l,f,c
 14273  003BA2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14274  003BA4  22E2               	addwfc	fsr1h,f,c
 14275  003BA6  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 14276  003BAA  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 14277  003BAE  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 14278  003BB2  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 14279  003BB6  50E7               	movf	indf1,w,c
 14280  003BB8  6E15               	movwf	(??_setMotorPWM+4)^0,c
 14281  003BBA  EE10 F006          	lfsr	1,6
 14282  003BBE  500F               	movf	setMotorPWM@m^0,w,c
 14283  003BC0  26E1               	addwf	fsr1l,f,c
 14284  003BC2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14285  003BC4  22E2               	addwfc	fsr1h,f,c
 14286  003BC6  50E7               	movf	indf1,w,c
 14287  003BC8  6E16               	movwf	(??_setMotorPWM+5)^0,c
 14288  003BCA  0E01               	movlw	1
 14289  003BCC  6E17               	movwf	(??_setMotorPWM+6)^0,c
 14290  003BCE  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 14291  003BD0  EFEC  F01D         	goto	u3464
 14292  003BD4                     u3465:
 14293  003BD4  90D8               	bcf	status,0,c
 14294  003BD6  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 14295  003BD8                     u3464:
 14296  003BD8  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 14297  003BDA  EFEA  F01D         	goto	u3465
 14298  003BDE  5017               	movf	(??_setMotorPWM+6)^0,w,c
 14299  003BE0  0AFF               	xorlw	255
 14300  003BE2  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 14301  003BE4  6EDF               	movwf	indf2,c
 14302  003BE6                     l303:
 14303  003BE6  0012               	return		;funcret
 14304  003BE8                     __end_of_setMotorPWM:
 14305                           	callstack 0
 14306                           
 14307 ;; *************** function ___wmul *****************
 14308 ;; Defined at:
 14309 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 14310 ;; Parameters:    Size  Location     Type
 14311 ;;  multiplier      2    0[COMRAM] unsigned int 
 14312 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14313 ;; Auto vars:     Size  Location     Type
 14314 ;;  product         2    4[COMRAM] unsigned int 
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  2    0[COMRAM] unsigned int 
 14317 ;; Registers used:
 14318 ;;		wreg, status,2, status,0, prodl, prodh
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14328 ;;Total ram usage:        6 bytes
 14329 ;; Hardware stack levels used: 1
 14330 ;; Hardware stack levels required when called: 1
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_setMotorPWM
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text75
 14339  005BF2                     __ptext75:
 14340                           	callstack 0
 14341  005BF2                     ___wmul:
 14342                           	callstack 26
 14343  005BF2  5001               	movf	___wmul@multiplier^0,w,c
 14344  005BF4  0203               	mulwf	___wmul@multiplicand^0,c
 14345  005BF6  CFF3 F005          	movff	prodl,___wmul@product
 14346  005BFA  CFF4 F006          	movff	prodh,___wmul@product+1
 14347  005BFE  5001               	movf	___wmul@multiplier^0,w,c
 14348  005C00  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14349  005C02  50F3               	movf	243,w,c
 14350  005C04  2606               	addwf	(___wmul@product+1)^0,f,c
 14351  005C06  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14352  005C08  0203               	mulwf	___wmul@multiplicand^0,c
 14353  005C0A  50F3               	movf	243,w,c
 14354  005C0C  2606               	addwf	(___wmul@product+1)^0,f,c
 14355  005C0E  C005  F001         	movff	___wmul@product,?___wmul
 14356  005C12  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14357  005C16  0012               	return		;funcret
 14358  005C18                     __end_of___wmul:
 14359                           	callstack 0
 14360                           
 14361 ;; *************** function ___awdiv *****************
 14362 ;; Defined at:
 14363 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 14364 ;; Parameters:    Size  Location     Type
 14365 ;;  dividend        2    6[COMRAM] int 
 14366 ;;  divisor         2    8[COMRAM] int 
 14367 ;; Auto vars:     Size  Location     Type
 14368 ;;  quotient        2   12[COMRAM] int 
 14369 ;;  sign            1   11[COMRAM] unsigned char 
 14370 ;;  counter         1   10[COMRAM] unsigned char 
 14371 ;; Return value:  Size  Location     Type
 14372 ;;                  2    6[COMRAM] int 
 14373 ;; Registers used:
 14374 ;;		wreg, status,2, status,0
 14375 ;; Tracked objects:
 14376 ;;		On entry : 0/0
 14377 ;;		On exit  : 0/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14381 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14383 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14384 ;;Total ram usage:        8 bytes
 14385 ;; Hardware stack levels used: 1
 14386 ;; Hardware stack levels required when called: 1
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_setMotorPWM
 14391 ;; This function uses a non-reentrant model
 14392 ;;
 14393                           
 14394                           	psect	text76
 14395  005174                     __ptext76:
 14396                           	callstack 0
 14397  005174                     ___awdiv:
 14398                           	callstack 26
 14399  005174  0E00               	movlw	0
 14400  005176  6E0C               	movwf	___awdiv@sign^0,c
 14401  005178  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 14402  00517A  EFC3  F028         	goto	u3200
 14403  00517E  EFC1  F028         	goto	u3201
 14404  005182                     u3201:
 14405  005182  EFC9  F028         	goto	l3814
 14406  005186                     u3200:
 14407  005186  6C09               	negf	___awdiv@divisor^0,c
 14408  005188  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 14409  00518A  B0D8               	btfsc	status,0,c
 14410  00518C  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 14411  00518E  0E01               	movlw	1
 14412  005190  6E0C               	movwf	___awdiv@sign^0,c
 14413  005192                     l3814:
 14414  005192  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 14415  005194  EFD0  F028         	goto	u3210
 14416  005198  EFCE  F028         	goto	u3211
 14417  00519C                     u3211:
 14418  00519C  EFD6  F028         	goto	l3820
 14419  0051A0                     u3210:
 14420  0051A0  6C07               	negf	___awdiv@dividend^0,c
 14421  0051A2  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 14422  0051A4  B0D8               	btfsc	status,0,c
 14423  0051A6  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 14424  0051A8  0E01               	movlw	1
 14425  0051AA  1A0C               	xorwf	___awdiv@sign^0,f,c
 14426  0051AC                     l3820:
 14427  0051AC  0E00               	movlw	0
 14428  0051AE  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 14429  0051B0  0E00               	movlw	0
 14430  0051B2  6E0D               	movwf	___awdiv@quotient^0,c
 14431  0051B4  5009               	movf	___awdiv@divisor^0,w,c
 14432  0051B6  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 14433  0051B8  B4D8               	btfsc	status,2,c
 14434  0051BA  EFE1  F028         	goto	u3221
 14435  0051BE  EFE3  F028         	goto	u3220
 14436  0051C2                     u3221:
 14437  0051C2  EF0B  F029         	goto	l3842
 14438  0051C6                     u3220:
 14439  0051C6  0E01               	movlw	1
 14440  0051C8  6E0B               	movwf	___awdiv@counter^0,c
 14441  0051CA  EFEB  F028         	goto	l3828
 14442  0051CE                     l3826:
 14443  0051CE  90D8               	bcf	status,0,c
 14444  0051D0  3609               	rlcf	___awdiv@divisor^0,f,c
 14445  0051D2  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 14446  0051D4  2A0B               	incf	___awdiv@counter^0,f,c
 14447  0051D6                     l3828:
 14448  0051D6  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 14449  0051D8  EFF0  F028         	goto	u3231
 14450  0051DC  EFF2  F028         	goto	u3230
 14451  0051E0                     u3231:
 14452  0051E0  EFE7  F028         	goto	l3826
 14453  0051E4                     u3230:
 14454  0051E4                     l3830:
 14455  0051E4  90D8               	bcf	status,0,c
 14456  0051E6  360D               	rlcf	___awdiv@quotient^0,f,c
 14457  0051E8  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 14458  0051EA  5009               	movf	___awdiv@divisor^0,w,c
 14459  0051EC  5C07               	subwf	___awdiv@dividend^0,w,c
 14460  0051EE  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14461  0051F0  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 14462  0051F2  A0D8               	btfss	status,0,c
 14463  0051F4  EFFE  F028         	goto	u3241
 14464  0051F8  EF00  F029         	goto	u3240
 14465  0051FC                     u3241:
 14466  0051FC  EF05  F029         	goto	l3838
 14467  005200                     u3240:
 14468  005200  5009               	movf	___awdiv@divisor^0,w,c
 14469  005202  5E07               	subwf	___awdiv@dividend^0,f,c
 14470  005204  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14471  005206  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 14472  005208  800D               	bsf	___awdiv@quotient^0,0,c
 14473  00520A                     l3838:
 14474  00520A  90D8               	bcf	status,0,c
 14475  00520C  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 14476  00520E  3209               	rrcf	___awdiv@divisor^0,f,c
 14477  005210  2E0B               	decfsz	___awdiv@counter^0,f,c
 14478  005212  EFF2  F028         	goto	l3830
 14479  005216                     l3842:
 14480  005216  500C               	movf	___awdiv@sign^0,w,c
 14481  005218  B4D8               	btfsc	status,2,c
 14482  00521A  EF11  F029         	goto	u3251
 14483  00521E  EF13  F029         	goto	u3250
 14484  005222                     u3251:
 14485  005222  EF17  F029         	goto	l3846
 14486  005226                     u3250:
 14487  005226  6C0D               	negf	___awdiv@quotient^0,c
 14488  005228  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 14489  00522A  B0D8               	btfsc	status,0,c
 14490  00522C  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 14491  00522E                     l3846:
 14492  00522E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 14493  005232  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 14494  005236  0012               	return		;funcret
 14495  005238                     __end_of___awdiv:
 14496                           	callstack 0
 14497                           
 14498 ;; *************** function _Timer0_init *****************
 14499 ;; Defined at:
 14500 ;;		line 7 in file "timers.c"
 14501 ;; Parameters:    Size  Location     Type
 14502 ;;		None
 14503 ;; Auto vars:     Size  Location     Type
 14504 ;;		None
 14505 ;; Return value:  Size  Location     Type
 14506 ;;                  1    wreg      void 
 14507 ;; Registers used:
 14508 ;;		wreg, status,2
 14509 ;; Tracked objects:
 14510 ;;		On entry : 0/0
 14511 ;;		On exit  : 0/0
 14512 ;;		Unchanged: 0/0
 14513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14518 ;;Total ram usage:        0 bytes
 14519 ;; Hardware stack levels used: 1
 14520 ;; Hardware stack levels required when called: 1
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		_main
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           	psect	text77
 14529  005D16                     __ptext77:
 14530                           	callstack 0
 14531  005D16                     _Timer0_init:
 14532                           	callstack 29
 14533  005D16                     
 14534                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14535  005D16  50D6               	movf	214,w,c	;volatile
 14536  005D18  0B1F               	andlw	-225
 14537  005D1A  0940               	iorlw	64
 14538  005D1C  6ED6               	movwf	214,c	;volatile
 14539  005D1E                     
 14540                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14541  005D1E  88D6               	bsf	214,4,c	;volatile
 14542                           
 14543                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14544  005D20  50D6               	movf	214,w,c	;volatile
 14545  005D22  0BF0               	andlw	-16
 14546  005D24  0905               	iorlw	5
 14547  005D26  6ED6               	movwf	214,c	;volatile
 14548  005D28                     
 14549                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14550  005D28  88D5               	bsf	213,4,c	;volatile
 14551                           
 14552                           ;timers.c: 16:     TMR0H=0b00111100;
 14553  005D2A  0E3C               	movlw	60
 14554  005D2C  6ED4               	movwf	212,c	;volatile
 14555                           
 14556                           ;timers.c: 17:     TMR0L=0b10101111;
 14557  005D2E  0EAF               	movlw	175
 14558  005D30  6ED3               	movwf	211,c	;volatile
 14559  005D32  0012               	return		;funcret
 14560  005D34                     __end_of_Timer0_init:
 14561                           	callstack 0
 14562                           
 14563 ;; *************** function _Interrupts_init *****************
 14564 ;; Defined at:
 14565 ;;		line 9 in file "interrupts.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;		None
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  1    wreg      void 
 14572 ;; Registers used:
 14573 ;;		None
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14583 ;;Total ram usage:        0 bytes
 14584 ;; Hardware stack levels used: 1
 14585 ;; Hardware stack levels required when called: 1
 14586 ;; This function calls:
 14587 ;;		Nothing
 14588 ;; This function is called by:
 14589 ;;		_main
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text78
 14594  005D82                     __ptext78:
 14595                           	callstack 0
 14596  005D82                     _Interrupts_init:
 14597                           	callstack 29
 14598  005D82  8EF2               	bsf	242,7,c	;volatile
 14599                           
 14600                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14601  005D84  8AF2               	bsf	242,5,c	;volatile
 14602                           
 14603                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14604  005D86  8CF2               	bsf	242,6,c	;volatile
 14605                           
 14606                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14607  005D88  010E               	movlb	14	; () banked
 14608  005D8A  8B29               	bsf	41,5,b	;volatile
 14609  005D8C                     
 14610                           ; BSR set to: 14
 14611  005D8C  0012               	return		;funcret
 14612  005D8E                     __end_of_Interrupts_init:
 14613                           	callstack 0
 14614                           
 14615 ;; *************** function _HighISR *****************
 14616 ;; Defined at:
 14617 ;;		line 21 in file "interrupts.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;		None
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;		None
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  1    wreg      void 
 14624 ;; Registers used:
 14625 ;;		wreg, status,2, status,0
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14635 ;;Total ram usage:        0 bytes
 14636 ;; Hardware stack levels used: 1
 14637 ;; This function calls:
 14638 ;;		Nothing
 14639 ;; This function is called by:
 14640 ;;		Interrupt level 2
 14641 ;; This function uses a non-reentrant model
 14642 ;;
 14643                           
 14644                           	psect	intcode
 14645  000008                     __pintcode:
 14646                           	callstack 0
 14647  000008                     _HighISR:
 14648                           	callstack 19
 14649                           
 14650                           ; BSR set to: 14
 14651                           ;incstack = 0
 14652  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14653  00000A                     
 14654                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14655  00000A  010E               	movlb	14	; () banked
 14656  00000C  AB33               	btfss	51,5,b	;volatile
 14657  00000E  EF0B  F000         	goto	i2u589_41
 14658  000012  EF0D  F000         	goto	i2u589_40
 14659  000016                     i2u589_41:
 14660  000016  EF16  F000         	goto	i2l709
 14661  00001A                     i2u589_40:
 14662  00001A                     
 14663                           ; BSR set to: 14
 14664                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14665  00001A  0E3C               	movlw	60
 14666  00001C  6ED4               	movwf	212,c	;volatile
 14667                           
 14668                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14669  00001E  0EAF               	movlw	175
 14670  000020  6ED3               	movwf	211,c	;volatile
 14671  000022                     
 14672                           ; BSR set to: 14
 14673                           ;interrupts.c: 26:         centisecond ++;
 14674  000022  0101               	movlb	1	; () banked
 14675  000024  4B98               	infsnz	_centisecond& (0+255),f,b
 14676  000026  2B99               	incf	(_centisecond+1)& (0+255),f,b
 14677  000028                     
 14678                           ; BSR set to: 1
 14679                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14680  000028  010E               	movlb	14	; () banked
 14681  00002A  9B33               	bcf	51,5,b	;volatile
 14682  00002C                     i2l709:
 14683                           
 14684                           ; BSR set to: 14
 14685  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14686  00002E  0011               	retfie		f
 14687  000030                     __end_of_HighISR:
 14688                           	callstack 0
 14689                           
 14690                           	psect	rparam
 14691  0000                     
 14692                           	psect	temp
 14693  00005F                     btemp:
 14694                           	callstack 0
 14695  00005F                     	ds	1
 14696  0000                     int$flags	set	btemp
 14697  0000                     wtemp8	set	btemp+1
 14698  0000                     ttemp5	set	btemp+1
 14699  0000                     ttemp6	set	btemp+4
 14700  0000                     ttemp7	set	btemp+8
 14701                           
 14702                           	psect	idloc
 14703                           
 14704                           ;Config register IDLOC0 @ 0x200000
 14705                           ;	unspecified, using default values
 14706  200000                     	org	2097152
 14707  200000  0FFF               	dw	4095
 14708                           
 14709                           ;Config register IDLOC1 @ 0x200002
 14710                           ;	unspecified, using default values
 14711  200002                     	org	2097154
 14712  200002  0FFF               	dw	4095
 14713                           
 14714                           ;Config register IDLOC2 @ 0x200004
 14715                           ;	unspecified, using default values
 14716  200004                     	org	2097156
 14717  200004  0FFF               	dw	4095
 14718                           
 14719                           ;Config register IDLOC3 @ 0x200006
 14720                           ;	unspecified, using default values
 14721  200006                     	org	2097158
 14722  200006  0FFF               	dw	4095
 14723                           
 14724                           ;Config register IDLOC4 @ 0x200008
 14725                           ;	unspecified, using default values
 14726  200008                     	org	2097160
 14727  200008  0FFF               	dw	4095
 14728                           
 14729                           ;Config register IDLOC5 @ 0x20000A
 14730                           ;	unspecified, using default values
 14731  20000A                     	org	2097162
 14732  20000A  0FFF               	dw	4095
 14733                           
 14734                           ;Config register IDLOC6 @ 0x20000C
 14735                           ;	unspecified, using default values
 14736  20000C                     	org	2097164
 14737  20000C  0FFF               	dw	4095
 14738                           
 14739                           ;Config register IDLOC7 @ 0x20000E
 14740                           ;	unspecified, using default values
 14741  20000E                     	org	2097166
 14742  20000E  0FFF               	dw	4095
 14743                           
 14744                           	psect	config
 14745                           
 14746                           ;Config register CONFIG1L @ 0x300000
 14747                           ;	External Oscillator mode Selection bits
 14748                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14749                           ;	Power-up default value for COSC bits
 14750                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14751  300000                     	org	3145728
 14752  300000  AA                 	db	170
 14753                           
 14754                           ;Config register CONFIG1H @ 0x300001
 14755                           ;	unspecified, using default values
 14756                           ;	Clock Out Enable bit
 14757                           ;	CLKOUTEN = 0x1, unprogrammed default
 14758                           ;	Clock Switch Enable bit
 14759                           ;	CSWEN = 0x1, unprogrammed default
 14760                           ;	Fail-Safe Clock Monitor Enable bit
 14761                           ;	FCMEN = 0x1, unprogrammed default
 14762  300001                     	org	3145729
 14763  300001  FF                 	db	255
 14764                           
 14765                           ;Config register CONFIG2L @ 0x300002
 14766                           ;	unspecified, using default values
 14767                           ;	Master Clear Enable bit
 14768                           ;	MCLRE = 0x1, unprogrammed default
 14769                           ;	Power-up Timer Enable bit
 14770                           ;	PWRTE = 0x1, unprogrammed default
 14771                           ;	Low-power BOR enable bit
 14772                           ;	LPBOREN = 0x1, unprogrammed default
 14773                           ;	Brown-out Reset Enable bits
 14774                           ;	BOREN = 0x3, unprogrammed default
 14775  300002                     	org	3145730
 14776  300002  FF                 	db	255
 14777                           
 14778                           ;Config register CONFIG2H @ 0x300003
 14779                           ;	unspecified, using default values
 14780                           ;	Brown Out Reset Voltage selection bits
 14781                           ;	BORV = 0x3, unprogrammed default
 14782                           ;	ZCD Disable bit
 14783                           ;	ZCD = 0x1, unprogrammed default
 14784                           ;	PPSLOCK bit One-Way Set Enable bit
 14785                           ;	PPS1WAY = 0x1, unprogrammed default
 14786                           ;	Stack Full/Underflow Reset Enable bit
 14787                           ;	STVREN = 0x1, unprogrammed default
 14788                           ;	Debugger Enable bit
 14789                           ;	DEBUG = 0x1, unprogrammed default
 14790                           ;	Extended Instruction Set Enable bit
 14791                           ;	XINST = 0x1, unprogrammed default
 14792  300003                     	org	3145731
 14793  300003  FF                 	db	255
 14794                           
 14795                           ;Config register CONFIG3L @ 0x300004
 14796                           ;	WDT Period Select bits
 14797                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14798                           ;	WDT operating mode
 14799                           ;	WDTE = OFF, WDT Disabled
 14800  300004                     	org	3145732
 14801  300004  9F                 	db	159
 14802                           
 14803                           ;Config register CONFIG3H @ 0x300005
 14804                           ;	unspecified, using default values
 14805                           ;	WDT Window Select bits
 14806                           ;	WDTCWS = 0x7, unprogrammed default
 14807                           ;	WDT input clock selector
 14808                           ;	WDTCCS = 0x7, unprogrammed default
 14809  300005                     	org	3145733
 14810  300005  FF                 	db	255
 14811                           
 14812                           ;Config register CONFIG4L @ 0x300006
 14813                           ;	unspecified, using default values
 14814                           ;	Write Protection Block 0
 14815                           ;	WRT0 = 0x1, unprogrammed default
 14816                           ;	Write Protection Block 1
 14817                           ;	WRT1 = 0x1, unprogrammed default
 14818                           ;	Write Protection Block 2
 14819                           ;	WRT2 = 0x1, unprogrammed default
 14820                           ;	Write Protection Block 3
 14821                           ;	WRT3 = 0x1, unprogrammed default
 14822                           ;	Write Protection Block 3
 14823                           ;	WRT4 = 0x1, unprogrammed default
 14824                           ;	Write Protection Block 3
 14825                           ;	WRT5 = 0x1, unprogrammed default
 14826                           ;	Write Protection Block 3
 14827                           ;	WRT6 = 0x1, unprogrammed default
 14828                           ;	Write Protection Block 3
 14829                           ;	WRT7 = 0x1, unprogrammed default
 14830  300006                     	org	3145734
 14831  300006  FF                 	db	255
 14832                           
 14833                           ;Config register CONFIG4H @ 0x300007
 14834                           ;	unspecified, using default values
 14835                           ;	Configuration Register Write Protection bit
 14836                           ;	WRTC = 0x1, unprogrammed default
 14837                           ;	Boot Block Write Protection bit
 14838                           ;	WRTB = 0x1, unprogrammed default
 14839                           ;	Data EEPROM Write Protection bit
 14840                           ;	WRTD = 0x1, unprogrammed default
 14841                           ;	Scanner Enable bit
 14842                           ;	SCANE = 0x1, unprogrammed default
 14843                           ;	Low Voltage Programming Enable bit
 14844                           ;	LVP = 0x1, unprogrammed default
 14845  300007                     	org	3145735
 14846  300007  FF                 	db	255
 14847                           
 14848                           ;Config register CONFIG5L @ 0x300008
 14849                           ;	unspecified, using default values
 14850                           ;	UserNVM Program Memory Code Protection bit
 14851                           ;	CP = 0x1, unprogrammed default
 14852                           ;	DataNVM Memory Code Protection bit
 14853                           ;	CPD = 0x1, unprogrammed default
 14854  300008                     	org	3145736
 14855  300008  FF                 	db	255
 14856                           
 14857                           ;Config register CONFIG5H @ 0x300009
 14858                           ;	unspecified, using default values
 14859  300009                     	org	3145737
 14860  300009  FF                 	db	255
 14861                           
 14862                           ;Config register CONFIG6L @ 0x30000A
 14863                           ;	unspecified, using default values
 14864                           ;	Table Read Protection Block 0
 14865                           ;	EBTR0 = 0x1, unprogrammed default
 14866                           ;	Table Read Protection Block 1
 14867                           ;	EBTR1 = 0x1, unprogrammed default
 14868                           ;	Table Read Protection Block 2
 14869                           ;	EBTR2 = 0x1, unprogrammed default
 14870                           ;	Table Read Protection Block 3
 14871                           ;	EBTR3 = 0x1, unprogrammed default
 14872                           ;	Table Read Protection Block 4
 14873                           ;	EBTR4 = 0x1, unprogrammed default
 14874                           ;	Table Read Protection Block 5
 14875                           ;	EBTR5 = 0x1, unprogrammed default
 14876                           ;	Table Read Protection Block 6
 14877                           ;	EBTR6 = 0x1, unprogrammed default
 14878                           ;	Table Read Protection Block 7
 14879                           ;	EBTR7 = 0x1, unprogrammed default
 14880  30000A                     	org	3145738
 14881  30000A  FF                 	db	255
 14882                           
 14883                           ;Config register CONFIG6H @ 0x30000B
 14884                           ;	unspecified, using default values
 14885                           ;	Boot Block Table Read Protection bit
 14886                           ;	EBTRB = 0x1, unprogrammed default
 14887  30000B                     	org	3145739
 14888  30000B  FF                 	db	255
 14889                           tosu	equ	0xFFF
 14890                           tosh	equ	0xFFE
 14891                           tosl	equ	0xFFD
 14892                           stkptr	equ	0xFFC
 14893                           pclatu	equ	0xFFB
 14894                           pclath	equ	0xFFA
 14895                           pcl	equ	0xFF9
 14896                           tblptru	equ	0xFF8
 14897                           tblptrh	equ	0xFF7
 14898                           tblptrl	equ	0xFF6
 14899                           tablat	equ	0xFF5
 14900                           prodh	equ	0xFF4
 14901                           prodl	equ	0xFF3
 14902                           indf0	equ	0xFEF
 14903                           postinc0	equ	0xFEE
 14904                           postdec0	equ	0xFED
 14905                           preinc0	equ	0xFEC
 14906                           plusw0	equ	0xFEB
 14907                           fsr0h	equ	0xFEA
 14908                           fsr0l	equ	0xFE9
 14909                           wreg	equ	0xFE8
 14910                           indf1	equ	0xFE7
 14911                           postinc1	equ	0xFE6
 14912                           postdec1	equ	0xFE5
 14913                           preinc1	equ	0xFE4
 14914                           plusw1	equ	0xFE3
 14915                           fsr1h	equ	0xFE2
 14916                           fsr1l	equ	0xFE1
 14917                           bsr	equ	0xFE0
 14918                           indf2	equ	0xFDF
 14919                           postinc2	equ	0xFDE
 14920                           postdec2	equ	0xFDD
 14921                           preinc2	equ	0xFDC
 14922                           plusw2	equ	0xFDB
 14923                           fsr2h	equ	0xFDA
 14924                           fsr2l	equ	0xFD9
 14925                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         194
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     160
    BANK1           256     66     255
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2905$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2905$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead_test@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead_test@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _calibration_motor->_test_action
    _test_action->_turnLeft
    _test_action->_turnRight
    _fullSpeedAhead_test->_stop
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0  321326
                                            150 BANK0      2     2      0
                                              0 BANK1     66    66      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                            _LED_OFF
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                  _calibration_motor
                   _color_click_init
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _setup_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26930
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  105020
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19139
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26644
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   15832
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7345
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18815
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13096
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11629
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3332
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4    7094
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_motor                                    6     2      4   28168
                                             53 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          4     0      4   27972
                                             49 COMRAM     4     0      4
                _fullSpeedAhead_test
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead_test                                  6     2      4    8462
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   79592
                                             57 COMRAM     5     1      4
                             _goback
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11325
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   37101
                                             49 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                           18    13      5    8897
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                            18    13      5    9581
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11021
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6442
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3883
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_OFF
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _calibration_motor
     _test_action
       _fullSpeedAhead_test
         _fullSpeedAhead
         _stop
       _turnLeft
       _turnRight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup_init
   _short_burst_back
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     42      FF       7       99.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD      57        0.0%
DATA                 0      0     1FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 22:41:32 2022

                ?_short_reverse 0026                  _color_read_Red 569C                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 573C  
                 _color_predict 5B72                              l71 5D60                              l82 3808  
                            l74 37F6                              l91 56EA                              l85 5B40  
                            l94 578A                              l88 5CF6                              l97 573A  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 578C  
              _color_read_Green 56EC               ??_Interrupts_init 0001                             l100 57DA  
                           l103 55F2                             l112 5CB6                             l106 5C56  
                           l203 5BC8                             l115 5C96                             l212 5DAA  
                           l132 5532                             l221 5D80                             l109 5C36  
                           l141 3A12                             l206 5BCA                             l118 5C76  
                           l303 3BE6                             l311 53B2                             l215 5D96  
                           l224 58A6                             l160 1A0E                             l209 5BF0  
                           l129 429E                             l322 4548                             l218 5DA0  
                           l138 5B9E                             l163 5A62                             l340 43BA  
                           l172 4B58                             l164 5A64                             l421 5D4A  
                           l326 4590                             l318 4500                             l175 50AA  
                           l344 4402                             l336 4372                             l176 50AC  
                           l168 54C2                             l329 45BA                             l409 5D14  
                           l418 5D36                             l355 5446                             l347 442C  
                           l427 5B70                             l372 5A2A                             l293 58E8  
                           l366 52F6                             l358 592A                             l550 3064  
                           l703 5D8C                             l720 5D32                             l296 4F1C  
                           l640 59AA                             l552 3098                             l369 59EA  
                           l554 30A6                             l820 5C16                             l652 2FF6  
                           l812 4E32                             l548 3056                             l557 3108  
                           l814 4E02                             l655 3DA0                             l567 31AA  
                           l559 3116                             l808 4D66                             l817 4E4A  
                           l809 4DCC                             l658 5CD6                             l675 3540  
                           l934 48CC                             l787 5D74                             l947 4A30  
             verify_color@color 009A                ?_calibrate_white 000C        __end_of_distance_measure 50AE  
                           _abs 592C                             _pad 50AE                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
               __end_of_LED_OFF 5C58                    ___fltol@exp1 0065                            l1051 5236  
                          ?_abs 0013                            l1117 4C60                            l1402 2A40  
                          l1090 4D64                            l1404 28A0                            l1413 28E6  
                          l1085 4D1E                            l1094 5AD6                            l1350 1BB2  
                          l1415 295E                            l1407 2864                            l1503 569A  
                          l1416 294C                            l4000 1B40                            l1441 218A  
                          l1434 1F94                            l4010 1B54                            l4002 1B44  
                          l1602 5864                            l1530 50F4                            l1451 22BA  
                          l1443 2202                            l1444 21F0                            l4100 1DF8  
                          l4020 1BCC                            l1348 1BFE                            l4012 1B7E  
                          l4004 1B48                            l1365 1D18                            l1357 1ECE  
                          l1349 1BEC                            l1613 26A6                            l1605 5DAE  
                          l1533 5136                            l1541 2AE6                            l1438 22F8  
                          l4110 1E5E                            l4102 1E04                            l1374 1DE8  
                          l4030 1C0C                            l4022 1BD0                            l4014 1B9A  
                          l4006 1B4C                            l1390 5820                            l1375 1DD6  
                          l1535 5172                            l1543 2AEE                            l4200 58A4  
                          l4120 1EA6                            l4112 1E6E                            l4104 1E12  
                          l4040 1C4E                            l4032 1C1C                            l4024 1BDE  
                          l4016 1BAA                            l4008 1B50                            l1561 2D2A  
                          l4210 5320                            l1482 4044                            l4122 1EA8  
                          l4114 1E8E                            l4106 1E4C                            l4050 1C7C  
                          l4042 1C5C                            l4026 1BE0                            l4018 1BC0  
                          l1626 5B0C                            l5010 4268                            l1475 3FAC  
                          l4212 5338                            l4220 536A                            l4204 52F8  
                          l4300 20BC                            l4124 1EAE                            l4116 1E92  
                          l4108 1E4E                            l4060 1CE8                            l4052 1C86  
                          l4044 1C68                            l4036 1C30                            l4028 1BEA  
                          l5020 380A                            l4140 3DEA                            l4132 3DA2  
                          l5012 4274                            l5004 4240                            l5100 10FA  
                          l4222 5382                            l4214 5344                            l4206 52FC  
                          l1478 4108                            l4310 2152                            l4302 20C8  
                          l4230 1ED0                            l4126 1EBC                            l4118 1EA0  
                          l4062 1CF8                            l4046 1C6C                            l4038 1C40  
                          l4054 1C8C                            l5030 384C                            l5022 380E  
                          l1582 596A                            l4150 3EB2                            l4142 3E0E  
                          l4134 3DC6                            l1574 558C                            l5014 427A  
                          l5006 4244                            l5110 1288                            l5102 1106  
                          l1575 5594                            l4224 539A                            l4216 5350  
                          l4208 5314                            l4320 21A8                            l4312 2170  
                          l4304 20E4                            l4240 1F0C                            l4232 1EDC  
                          l4128 1EBE                            l4080 1D7A                            l4072 1D52  
                          l4056 1CB2                            l4064 1D08                            l4048 1C7A  
                          l1496 5A9E                            l5200 4A7E                            l5040 38AC  
                          l5032 3860                            l5024 3818                            l4152 3ED6  
                          l4160 3F04                            l1568 3F54                            l4144 3E32  
                          l4136 3DD4                            l4400 554A                            l5016 4294  
                          l5008 425C                            l5120 1376                            l5112 1330  
                          l5104 11A8                            l1489 40A0                            l4218 535C  
                          l4330 2212                            l4322 21AC                            l4314 217A  
                          l4306 210E                            l4250 1F3E                            l4242 1F1C  
                          l4234 1EEA                            l4082 1D82                            l4074 1D5C  
                          l4066 1D2E                            l4058 1CE6                            l4090 1DA6  
                          l5210 4ADE                            l5202 4A96                            l4410 573C  
                          l5050 3910                            l5042 38C4                            l5034 3878  
                          l5026 3830                            l4226 5D36                            l1594 4FE6  
                          l4162 3F12                            l4154 3EE4                            l4146 3E7A  
                          l4138 3DE6                            l4402 5570                            l5018 429A  
                          l5130 15A0                            l5122 1418                            l5114 134C  
                          l5106 11C4                            l1579 5962                            l4180 5D7C  
                          l4340 2274                            l4332 221E                            l4324 21BA  
                          l4316 2188                            l4308 2144                            l4260 1F7E  
                          l4252 1F4C                            l4244 1F22                            l4236 1EEC  
                          l4092 1DAA                            l4084 1D86                            l4076 1D6A  
                          l4068 1D3E                            l5212 4B46                            l5204 4AA2  
                          l4412 5782                            l4404 569C                            l5060 3974  
                          l5052 3928                            l5044 38DC                            l5036 3890  
                          l5028 3834                            l4228 5D46                            l3700 4778  
                          l4156 3EF8                            l5140 1774                            l5132 15BC  
                          l5124 1434                            l5116 1350                            l5108 126C  
                          l5220 4FFE                            l5302 3500                            l5310 3BE8  
                          l4174 5DA2                            l4182 5D98                            l4190 5868  
                          l4422 578C                            l4502 4BEC                            l4350 22DC  
                          l4342 2288                            l4334 222C                            l4326 21E8  
                          l4318 219A                            l4270 1FC8                            l4262 1F84  
                          l4254 1F4E                            l4246 1F32                            l4238 1EFC  
                          l4094 1DB8                            l4086 1D96                            l4078 1D6C  
                          l5214 4B50                            l5206 4ABA                            l4406 56E2  
                          l5070 39EC                            l5062 398C                            l5054 3940  
                          l5046 38F4                            l5038 3894                            l3710 47BA  
                          l3702 477C                            l4166 3F1E                            l4430 565C  
                          l5150 1876                            l5142 177E                            l5134 1664  
                          l5126 14DC                            l5118 136A                            l5230 5072  
                          l5222 5002                            l3800 5BF2                            l5304 3524  
                          l5240 59C0                            l4600 37F4                            l5312 5D4C  
                          l5400 4D9E                            l4176 5DA6                            l4184 5D9C  
                          l5320 5B2C                            l4192 586C                            l4424 57D2  
                          l4520 4C50                            l4512 4C14                            l4504 4BF6  
                          l4352 22DE                            l4344 22A2                            l4336 2256  
                          l4280 2018                            l4272 1FD4                            l4264 1FA4  
                          l4256 1F5E                            l4248 1F38                            l4096 1DCE  
                          l4088 1D98                            l4360 57DC                            l5208 4AC6  
                          l4416 56EC                            l5072 39F0                            l5064 39A4  
                          l5056 3958                            l5048 38F8                            l4440 5B42  
                          l3720 4814                            l3712 47D8                            l3704 478A  
                          l4168 3F42                            l4432 5664                            l5160 18CC  
                          l5152 1880                            l5144 1788                            l5136 1678  
                          l5128 14F8                            l5080 0E80                            l5232 508E  
                          l5224 501C                            l3810 5186                            l3802 5C0E  
                          l4450 53D8                            l5250 32DE                            l5242 59D6  
                          l5410 4DF0                            l5402 4DB4                            l4178 5D78  
                          l5322 5B36                            l5314 5B0E                            l4194 5874  
                          l4186 5D8E                            l4514 4C20                            l4506 4C00  
                          l4370 4CA0                            l4346 22BE                            l4354 22E4  
                          l4338 225A                            l4290 205A                            l4282 2024  
                          l4274 1FDE                            l4266 1FB4                            l4258 1F6E  
                          l4362 57EC                            l4530 2376                            l4610 5C1E  
                          l4418 5732                            l5066 39BC                            l5058 3970  
                          l4442 5B46                            l3722 4842                            l3714 47E0  
                          l3730 487C                            l3706 47AA                            l4434 566C  
                          l4602 5596                            l5170 1924                            l5162 18D4  
                          l5146 17A0                            l5154 188A                            l5138 16A6  
                          l5090 1000                            l5082 0E8C                            l5074 0E14  
                          l5234 50A6                            l5226 5028                            l5218 4FE8  
                          l5330 549A                            l3820 51AC                            l3812 518E  
                          l4460 542E                            l4452 53F0                            l4700 4302  
                          l5308 3544                            l5260 3342                            l5252 32EA  
                          l5244 32AE                            l5500 2E2E                            l5420 4E36  
                          l5404 4DBA                            l5316 5B12                            l4612 5C98  
                          l4196 587C                            l4188 5D92                            l4516 4C30  
                          l4380 4D0C                            l4372 4CCE                            l4356 22E8  
                          l4348 22CE                            l4292 2066                            l4284 2030  
                          l4276 1FF4                            l4540 242A                            l4532 23B2  
                          l4524 22FA                            l4620 5C58                            l4604 5C38  
                          l5068 39D4                            l4444 5B54                            l3732 488C  
                          l3724 4862                            l3716 47F4                            l3708 47AE  
                          l3740 48D2                            l3900 2CCC                            l4436 5688  
                          l4428 564A                            l5180 19E6                            l5172 1954  
                          l5164 18EA                            l5156 18A0                            l5148 17B6  
                          l5092 10A8                            l5084 0F28                            l5076 0E62  
                          l5228 502C                            l5332 54BA                            l5324 544C  
                          l3830 51E4                            l3822 51B4                            l3814 5192  
                          l3806 5174                            l4454 53FC                            l4470 528C  
                          l4462 5238                            l4710 4352                            l4702 431A  
                          l5254 3302                            l5246 32C6                            l5238 59AC  
                          l5510 2EA2                            l5502 2E48                            l5414 4E10  
                          l5318 5B1C                            l5350 58E6                            l5342 58A8  
                          l4614 5C9E                            l4198 58A2                            l4518 4C40  
                          l4382 4D5C                            l4374 4CDE                            l4366 4C62  
                          l4294 2076                            l4286 203E                            l4278 2000  
                          l4390 5AB6                            l4550 2636                            l4542 24F8  
                          l4534 23D6                            l4526 231A                            l5190 4A32  
                          l4622 5C5E                            l4606 5C3E                            l4446 5B58  
                          l3734 48AC                            l3726 4864                            l3718 4802  
                          l3750 4932                            l3742 48E0                            l3670 4F6A  
                          l3662 4F1E                            l3902 2CDE                            l4630 5B92  
                          l5182 19EC                            l5174 1984                            l5166 18F2  
                          l5158 18B6                            l5094 10C4                            l5086 0F44  
                          l5078 0E66                            l5430 4604                            l5422 45C0  
                          l5326 5464                            ?_pad 0011                            l3840 5210  
                          l3832 51EA                            l3824 51C6                            l3816 51A0  
                          l3808 5178                            l3920 3A92                            l4456 5408  
                          l4448 53B4                            l4464 525C                            l4472 529A  
                          l4720 43A6                            l4712 435E                            l4704 4328  
                          l5280 33FC                            l5272 3398                            l5264 3358  
                          l5256 3306                            l5248 32CA                            l4560 356C  
                          l5520 2EFE                            l5512 2EA4                            l5504 2E4A  
                          l5416 4E12                            l5408 4DDA                            l3912 5BCA  
                          l5344 58B8                            l5360 4E90                            l5352 4E4C  
                          l4800 27CA                            l4480 4B5A                            l4384 4D62  
                          l4376 4CEC                            l4368 4C90                            l4296 2090  
                          l4288 204A                            l4392 5AC6                            l4552 2672  
                          l4544 2564                            l4536 23F2                            l4528 2362  
                          l4632 5A66                            l5192 4A4C                            l4616 5C78  
                          l4608 5C18                            l3728 4876                            l3760 49A8  
                          l3752 4950                            l3744 4900                            l3672 4FA0  
                          l3664 4F30                            l3680 5840                            l3904 2CEA  
                          l4624 54C4                            l4640 5A48                            l5184 1A00  
                          l5176 198A                            l5168 18F6                            l5096 10DC  
                          l5088 0FEC                            l5440 4646                            l5432 4618  
                          l5424 45D2                            l5328 5482                            l5600 3018  
                          l3834 5200                            l3826 51CE                            l3842 5216  
                          l3818 51A8                            l3922 3AD8                            l4458 5416  
                          l4474 52B2                            l4466 5274                            l4650 446A  
                          l4730 43FE                            l4722 43B6                            l4714 436E  
                          l4706 4334                            l5290 346C                            l5274 33BC  
                          l5266 335A                            l5258 332E                            l4570 35FE  
                          l4562 357C                            l5530 2F6A                            l5522 2F10  
                          l5514 2EB6                            l5506 2E5C                            l5418 4E28  
                          l3914 5BDA                            l5346 58D0                            l5362 4EA0  
                          l5354 4E58                            l5370 5D04                            l4810 2818  
                          l4490 4BB2                            l4482 4B72                            l4378 4CFE  
                          l4298 20A0                            l3930 1A10                            l4554 2696  
                          l4546 2596                            l5194 4A56                            l4618 5C7E  
                          l3770 4A10                            l3762 49C8                            l3754 4958  
                          l3746 4904                            l3738 48CE                            l3666 4F42  
                          l3682 5844                            l3690 5B00                            l3906 2CF2  
                          l3850 2A42                            l4626 5526                            l4642 5A5E  
                          l5186 1A0A                            l5178 19B8                            l5098 10E0  
                          l5450 4690                            l5442 465A                            l5434 462A  
                          l5426 45E4                            l5338 54C0                            l5610 303E  
                          l5602 301C                            l3844 5226                            l3836 5208  
                          l3828 51D6                            l3924 3AF8                            l3916 3A14  
                          l4476 52CA                            l4468 5280                            l4740 59EC  
                          l4660 44B6                            l4652 4476                            l4732 4418  
                          l4724 43D0                            l4716 4388                            l4708 4340  
                          l5292 3490                            l5284 3418                            l5268 337C  
                          l4580 36A4                            l4572 361E                            l4564 359C  
                          l5540 2FCE                            l5532 2F96                            l5524 2F3C  
                          l5516 2EE2                            l5508 2E88                            l5348 58E4  
                          l5364 4EB4                            l5356 4E68                            l5372 5D0E  
                          l4820 2862                            l4812 2828                            l4804 27DE  
                          l4900 3FFA                            l4492 4BC2                            l4388 5AA0  
                          l3940 1A4C                            l3932 1A1C                            l4548 2602  
                          l5196 4A5A                            l3764 49DA                            l3756 496C  
                          l3748 4912                            l3668 4F4C                            l3676 5822  
                          l3684 5AD8                            l3780 50E0                            l3908 2D02  
                          l3860 2ABE                            l3852 2A62                            l4396 5534  
                          l4628 5B76                            l4636 5A2C                            l5460 46C8  
                          l5452 469C                            l5444 4672                            l5436 462E  
                          l5428 45F0                            l5620 3072                            l5612 3046  
                          l5604 3020                            l5382 5D16                            l3846 522E  
                          l3838 520A                            l3926 3B14                            l3918 3A30  
                          l4478 52E2                            l4742 5A00                            l4670 44FC  
                          l4662 44C2                            l4654 4482                            l4646 442E  
                          l4726 43E2                            l4718 439A                            l5286 343C  
                          l5278 33D8                            l4590 3740                            l4582 36BC  
                          l4574 3636                            l4566 35B4                            l4558 3560  
                          l5542 2FE2                            l5534 2FB0                            l5526 2F56  
                          l5518 2EFC                            l4734 58EA                            l5358 4E7C  
                          l5374 5D10                            l5366 5CF8                            l5390 5D62  
                          l4830 28B0                            l4822 286E                            l4814 2830  
                          l4806 27F8                            l4750 26C2                            l4910 4082  
                          l4902 402C                            l4494 4BC6                            l4486 4B86  
                          l3950 1A7C                            l3942 1A5C                            l3934 1A2A  
                          l5198 4A72                            l3694 4746                            l3758 497A  
                          l3766 49E0                            l3678 582E                            l3686 5AE4  
                          l3790 5146                            l3782 50EC                            l3774 50AE  
                          l3870 2B1E                            l3862 2ADA                            l3854 2A8A  
                          l4398 553C                            l4638 5A32                            l5470 473A  
                          l5462 46DC                            l5454 46A2                            l5446 4678  
                          l5438 463A                            l5630 30CC                            l5622 307E  
                          l5614 304E                            l5606 3024                            l5384 5D1E  
                          l3928 3B7E                            l4744 5A16                            l4680 455E  
                          l4672 4516                            l4664 44CE                            l4648 4452  
                          l4656 4490                            l4728 43EE                            l5296 34C0  
                          l4592 3776                            l4584 36F8                            l4576 366E  
                          l4568 35EC                            l5536 2FB2                            l5528 2F58  
                          l5480 2D3E                            l4736 58FE                            l5376 5D12  
                          l5368 5D02                            l5392 5CB8                            l5472 596C  
                          l4832 28C6                            l4840 28F6                            l4824 288C  
                          l4816 2840                            l4808 2808                            l4760 26F6  
                          l4752 26C4                            l4920 40D8                            l4912 4090  
                          l4904 402E                            l4496 4BD4                            l4488 4BB0  
                          l3960 1AA6                            l3952 1A8E                            l3944 1A5E  
                          l3936 1A2C                            l3696 474A                            l3768 49F0  
                          l3688 5AE8                            l3792 515A                            l3784 5100  
                          l3776 50BE                            l3880 2BBE                            l3872 2B26  
                          l3864 2AF6                            l3856 2AAA                            l5464 46FC  
                          l5456 46B2                            l5640 3126                            l5632 30E4  
                          l5624 3080                            l5616 3052                            l5608 3038  
                          l5386 5D28                            l4682 4570                            l4674 4528  
                          l4666 44E0                            l4658 44A8                            l4690 42A0  
                          l5298 34E4                            l4594 3788                            l4586 370A  
                          l4578 3680                            l5538 2FC4                            l5490 2DA8  
                          l5482 2D4E                            l4738 5916                            l5394 4D78  
                          l4930 5BA0                            l5474 5980                            l4842 2904  
                          l4834 28CC                            l4826 288E                            l4818 2854  
                          l4770 2728                            l4754 26D4                            l4762 26FE  
                          l4746 26A8                            l4922 40E8                            l4914 40AE  
                          l4906 403A                            l3962 1AB6                            l3970 1AE0  
                          l3954 1A90                            l3938 1A3C                            l3946 1A66  
                          l3698 4758                            l3786 5114                            l3778 50D2  
                          l3890 2C7A                            l3882 2BC4                            l3874 2B30  
                          l3866 2B08                            l3858 2ABA                            l5466 470C  
                          l5650 3158                            l5642 312C                            l5634 30E6  
                          l5626 30B4                            l5618 3054                            l5388 5D82  
                          l4684 457C                            l4676 4534                            l4668 44EC  
                          l4692 42C4                            l4596 37A6                            l4588 3728  
                          l5492 2DD4                            l5484 2D7A                            l5396 4D8E  
                          l4940 5BB6                            l4932 5BAA                            l5476 5996  
                          l4852 296E                            l4860 29B6                            l4844 2908  
                          l4836 28D6                            l4828 289E                            l4780 275C  
                          l4772 272A                            l4764 270E                            l4756 26E4  
                          l4748 26B4                            l4924 40F6                            l4916 40B0  
                          l4908 4076                            l3980 1B18                            l3972 1AF0  
                          l3964 1AC6                            l3956 1A96                            l3948 1A76  
                          l3796 592C                            l3788 5118                            l3892 2C94  
                          l3876 2B36                            l3884 2C28                            l3868 2B18  
                          l5468 4720                            l5660 31DC                            l5652 3164  
                          l5636 30F4                            l5628 30CA                            l5644 3144  
                          l4686 458C                            l4678 4544                            l4694 42DC  
                          l4598 37BE                            l5494 2DEE                            l5486 2D94  
                          l5478 2D2E                            l5398 4D9C                            l4934 5BB0  
                          l4942 5CDA                            l4870 2A20                            l4862 29D0  
                          l4854 297A                            l4846 2916                            l4838 28E4  
                          l4790 27A2                            l4774 273A                            l4782 2764  
                          l4766 2714                            l4758 26F4                            l4926 40F8  
                          l4918 40B4                            l3990 1B2C                            l3982 1B1C  
                          l3974 1B02                            l3966 1AD6                            l3958 1AA4  
                          l3798 5946                            l3886 2C42                            l3894 2CA4  
                          l3878 2BB8                            l4950 412C                            l5670 324E  
                          l5662 320A                            l5654 3178                            l5638 3124  
                          l5590 2FFC                            l4688 45A6                            l4696 42E8  
                          l5496 2DF0                            l5488 2D96                            l4936 5BB2  
                          l4872 2A2E                            l4864 29E6                            l4856 2988  
                          l4848 2944                            l4792 27A6                            l4784 2774  
                          l4776 274A                            l4768 271A                            l3992 1B30  
                          l3984 1B20                            l3976 1B10                            l3968 1AD8  
                          l3896 2CB6                            l3888 2C60                            l4960 4166  
                          l4952 4130                            l4944 410A                            l5672 3268  
                          l5664 320C                            l5656 319A                            l5648 3156  
                          l5592 3000                            l4698 42F4                            l5498 2E02  
                          l4938 5BB4                            l4874 2A34                            l4866 2A00  
                          l4858 29B2                            l4786 278A                            l4778 275A  
                          l4890 3FBC                            l3994 1B34                            l3986 1B24  
                          l3978 1B14                            l3898 2CC6                            l4970 418C  
                          l4962 4180                            l4954 4148                            l5674 3286  
                          l5666 3220                            l5658 31B4                            l5594 300C  
                          l4876 2A36                            l4868 2A1C                            l4788 279A  
                          l4796 27BA                            l4892 3FD2                            l4884 3F58  
                          l3996 1B38                            l3988 1B28                            l4980 41DC  
                          l4972 41A4                            l4956 4154                            l5676 329C  
                          l5668 323A                            l5596 3010                            l5588 2FF8  
                          l4798 27CA                            l4886 3F68                            l3998 1B3C  
                          l4990 4200                            l4974 41B0                            l4958 4160  
                          l5678 32A2                            l5598 3014                            l4896 3FE6  
                          l4888 3F76                            l4992 420C                            l4976 41BC  
                          l4968 4188                            l4898 3FEE                            l4994 4218  
                          l4986 41E4                            l4978 41C2                            l4996 421E  
                          l4988 41E8                            l4998 4238                            STR_1 0E05  
                          STR_2 0E0D                            u3000 5864                            u3001 5860  
                          u3010 5B00                            u3011 5AFC                            u3020 4758  
                          u3100 4912                            u3021 4754                            u3101 490E  
                          u3030 478A                            u3110 4950                            u3031 4786  
                          u3111 494C                            u3200 5186                            u4000 1F4C  
                          u3120 497A                    _BAUD4CONbits 000EE9                            u3201 5182  
                          u4001 1F48                            u3041 47B4                            u3121 4976  
                          _LATE 000F7D                            u3210 51A0                            u4010 1F5E  
                          u3050 47D8                            u3130 49A8                            u3211 519C  
                          u4011 1F5A                            u3051 47D4                            u3131 49A4  
                          _LATG 000F7F                            u3220 51C6                            u4100 21FE  
                          u4020 1F6E                            u3060 4802                            u3140 49F0  
                          u3300 2ADA                            u3221 51C2                            u4101 21FA  
                          u4021 1F6A                            u3061 47FE                            u3141 49EC  
                          u3301 2AD6                            u3230 51E4                            u4110 2212  
                          u4030 1FA4                            u3070 4842                            u3150 50BE  
                          u3310 2B08                            u3231 51E0                            u4111 220E  
                          u4031 1FA0                            u3071 483E                            u3151 50BA  
                          u3311 2B04                            u3240 5200                            u5000 2904  
                          u4200 4D5C                            u4120 222C                            u4040 1FB4  
                          u3080 488C                            u3160 50E0                            u3400 2CDE  
                          u3320 2B18                            u3241 51FC                            u5001 2900  
                          u4201 4D58                            u4121 2228                            u4041 1FB0  
                          u3081 4888                            u3161 50DC                            u3401 2CDA  
                          u3321 2B14                            u3250 5226                            u3410 5BDA  
                          u5010 2916                            u4130 2274                            u4050 212E  
                          u4210 5AB6                            u3090 48E0                            u3170 5136  
                          u3330 2C42                            _T2PR 000FBC                            u3251 5222  
                          u3411 5BD6                            u5011 2912                            u4131 2270  
                          u4211 5AB2                            u3091 48DC                            u3171 5132  
                          u3331 2C3E                            u3420 5BF0                            u5020 2944  
                          u5100 3F76                            u4300 4BD4                            u4140 22A2  
                          u4060 2188                            u3500 1A8E                            u3180 5146  
                          u3340 2C60                            u3260 2A72                            u4220 558C  
                          u3421 5BEC                            u5021 2940                            u5101 3F72  
                          u4301 4BD0                            u4141 229E                            u4061 2184  
                          u3501 1A8A                            u3181 5142                            u3341 2C5C  
                          u3261 2A6C                            u4221 5588                            u3430 3A30  
                          u5030 295A                            u5110 3FD2                            u4310 4BE8  
                          u4150 22DC                            u4070 21A8                            u3510 1AA4  
                          u4230 5B70                            u3190 5946                            u3350 2C7A  
                          u3270 2A74                            u3431 3A2C                            u5031 2956  
                          u5111 3FCE                            u4311 4BE4                            u4151 22D8  
                          u4071 21A4                            u4055 2124                            u3511 1AA0  
                          u4231 5B6C                            u3191 5942                            u3351 2C76  
                          u3440 3B14                            u4240 542E                            u5040 296E  
                          u5120 4028                            u4320 4C10                            u4160 4C90  
                          u4080 21BA                            u3600 1BDE                            u3520 1AB6  
                          u4400 24F8                            u3360 2C94                            u3280 2A8A  
                          u5200 41DC                            u3441 3B10                            u4241 542A  
                          u5041 296A                            u5121 4024                            u4321 4C0C  
                          u4161 4C8C                            u4081 21B6                            u3601 1BDA  
                          u3521 1AB2                            u4401 24F4                            u3361 2C90  
                          u3281 2A86                            u5201 41D8                            u4250 5446  
                          u5050 2988                            u5130 4072                            u4330 4C30  
                          u4170 4CCE                            u4090 21E8                            u3610 1BFE  
                          u3530 1AC6                            u4410 2596                            u3370 2CA4  
                          u3290 2ABA                            u5210 4238                            u4251 5442  
                          u5051 2984                            u5131 406E                            u4331 4C2C  
                          u4171 4CCA                            u4091 21E4                            u3611 1BFA  
                          u3531 1AC2                            u4411 2592                            u3371 2CA0  
                          u3291 2AB6                            u5211 4234                            u4260 52B2  
                          u4500 3610                            u5060 29D0                            u5140 4090  
                          u4340 4C40                            u4180 4CEC                            u3700 1D3E  
                          u3620 1C0C                            u3540 1B02                            u4420 2656  
                          u3380 2CB6                            u5220 4294                            u5300 18CC  
                          u4261 52AE                            u4501 3608                            u5061 29CC  
                          u5141 408C                            u4341 4C3C                            u4181 4CE8  
                          u3701 1D3A                            u3621 1C08                            u3541 1AFE  
                          u3381 2CB2                            u5221 4290                            u5301 18C8  
                          u3454 3B6E                            u4270 52CA                            u5070 2A00  
                          u5150 40A0                            u4190 4D0C                            u3710 1D6A  
                          u3630 1C1C                            u3550 1B10                            u3470 1A2A  
                          u4430 2672                            u4350 233A                            u3390 2CC6  
                          u5310 18EA                            u5230 16A6                            u3455 3B6A  
                          u4271 52C6                            u5071 29FC                            u5151 409C  
                          u4191 4D08                            u3711 1D66                            u3631 1C18  
                          u3551 1B0C                            u3471 1A26                            u4431 266E  
                          u3391 2CC2                            u5311 18E6                            u5231 16A2  
                          u6007 10EC                            u3464 3BD8                            u5400 3354  
                          u4600 371C                            u4520 3648                            u4440 357C  
                          u5080 2A2E                            u5160 40AE                            u4280 4B72  
                          u3800 1E4C                            u3720 1D7A                            u3640 1C4E  
                          u3560 1B7E                            u3480 1A3C                            u4360 2362  
                          u5320 1924                            u5240 1774                            u3465 3BD4  
                          u5401 3350                            u4601 3714                            u4521 3640  
                          u4441 3578                            u5081 2A2A                            u5161 40AA  
                          u4281 4B6E                            u3801 1E48                            u3721 1D76  
                          u3641 1C4A                            u3561 1B7A                            u3481 1A38  
                          u4425 264C                            u4361 235E                            u5321 1920  
                          u5241 1770                            u6017 135C                            u5410 337C  
                          u4450 358E                            u5170 40E8                            u5090 3F68  
                          u4290 4BA6                            u3810 1E5E                            u3730 1D96  
                          u3650 1C5C                            u3570 1B96                            u3490 1A4C  
                          u4370 2396                            u5330 1954                            u5250 17A0  
            verify_color@color2 0098                            u5411 3378                            u4451 3586  
                          u5171 40E4                            u5091 3F64                            u3811 1E5A  
                          u3731 1D92                            u3651 1C58                            u3571 1B90  
                          u3491 1A48                            u4355 2330                            u6107 397E  
                          u6027 413A                            u5331 1950                            u5251 179C  
                          u5420 33BC                            u4620 3752                            u4540 3680  
                          u5180 40F6                            u3900 5890                            u3820 1E6E  
                          u3740 1DA6                            u3660 1C7A                            u3580 1B98  
                          u4380 23B2                            u4700 5A48                            u5340 1984  
                          u5260 17B6                            u5421 33B8                            u4621 374A  
                          u4541 367C                            u5181 40F2                            u3901 5888  
                          u3821 1E6A                            u3741 1DA2                            u3661 1C76  
                          u4381 23AE                            u6117 39FA                            u6037 4196  
                          u4701 5A44                            u5341 1980                            u5261 17B2  
                          u5430 33FC                            u4550 3692                            u4518 3612  
                          u4470 35C6                            u5510 4D78                            u3830 1E8E  
                          u3750 1DB8                            u3670 1CB2                            u3590 1BC0  
                          u4390 23F2                            u5190 4180                            u4710 5A5E  
                          u5350 19B8                            u5270 1876                            u5431 33F8  
                          u4551 368A                            u4471 35BE                            u5511 4D74  
                          u6207 5CA8                            u4295 4B9C                            u3831 1E8A  
                          u3751 1DB4                            u3671 1CAE                            u3591 1BBC  
                          u4391 23EE                            u4375 238C                            u6127 5C28  
                          u6047 41F2                            u5191 417C                            u4711 5A5A  
                          u5351 19B4                            u5271 1872                            u3920 5314  
                          u4720 44A8                            u4800 4352                            u5440 343C  
                          u4640 3788                            u5520 4D9C                            u3840 1EA0  
                          u3760 1DCE                            u3680 1CF8                            u2960 4F30  
                          u5360 19E6                            u5280 18A0                            u5600 465A  
                          u3921 5310                            u4721 44A4                            u4801 434E  
                          u5441 3438                            u4641 3784                            u5521 4D98  
                          u6217 598A                            u3841 1E9C                            u3761 1DCA  
                          u3681 1CF4                            u6137 5C48                            u2961 4F2C  
                          u6057 424E                            u5361 19E2                            u5281 189C  
                          u5601 4656                            u3930 5338                            u4730 44E0  
                          u4810 4388                            u5450 3490                            u4650 379A  
                          u4618 371E                            u4570 36CE                            u4538 364A  
                          u4490 35FE                            u5530 4DC8                            u3850 1EBC  
                          u3770 1DE4                            u3690 1D2E                            u2970 4F42  
                          u5370 1A00                            u5290 18B6                            u5610 468C  
                          u3931 5334                            u4731 44DC                            u4811 4384  
                          u5451 348C                            u4651 3792                            u4571 36C6  
                          u6307 3628                            u4491 35FA                            u5531 4DC4  
                          u6227 5B22                            u3851 1EB8                            u3771 1DE0  
                          u3691 1D2A                            u6147 5C68                            u6067 3822  
                          u2971 4F3E                            u5371 19FC                            u5291 18B2  
                          u5611 4688                            u3940 5382                            u4740 4516  
                          u4820 439A                            u5460 34E4                            u4468 3590  
                          u5700 2EB6                            u5540 4DDA                            u4900 273A  
                          u3780 1DF8                            u2980 4F6A                            u3860 3DC6  
                          u5380 50A6                            u5620 46B2                            u3941 537E  
                          u4741 4512                            u4821 4396                            u5461 34E0  
                          u6317 3660                            u5701 2EB2                            u5541 4DD6  
                          u6237 4D82                            u4901 2736                            u3781 1DF4  
                          u6157 5C88                            u6077 383E                            u2981 4F66  
                          u3861 3DC2                            u5381 50A2                            u5621 46AE  
                          u3950 539A                            u4750 4528                            u4830 43D0  
                          u5470 3524                            u5390 332E                            u4670 37D0  
                          u4638 3754                            u4590 370A                            u5710 2F10  
                          u5550 4DFE                            u4910 274A                            u3918 5892  
                          u3790 1E12                            u2990 4FA0                            u3870 3E0E  
                          u5630 46C4                            u3951 5396                            u4751 4524  
                          u4831 43CC                            u6407 42FA                            u5471 3520  
                          u5391 332A                            u4671 37C8                            u4591 3706  
                          u6327 36AE                            u5711 2F0C                            u5551 4DFA  
                          u6247 4DA8                            u4911 2746                            u3791 1E0E  
                          u6167 4A66                            u6087 389E                            u2991 4F9C  
                          u3871 3E0A                            u5631 46C0                            u4760 455E  
                          u4840 43E2                            u4568 3694                            u4488 35C8  
                          u5720 2F6A                            u5560 4E10                            u4920 278A  
                          u3960 5D46                            u3880 3E32                            u5640 470C  
                          u5480 54BA                            u5800 3072                            u4761 455A  
                          u4841 43DE                            u6417 4364                            u6337 36EA  
                          u5721 2F66                            u5561 4E0C                            u6257 4DE4  
                          u4921 2786                            u6177 4A8A                            u6097 3902  
                          u3961 5D42                            u3881 3E2E                            u5641 4708  
                          u5481 54B6                            u5801 306E                            u4770 4570  
                          u4850 4418                            u4690 3808                            u5730 2FC4  
                          u5650 2D3E                            u4930 27CA                            u3970 1EEA  
                          u3890 3ED6                            u5570 45E4                            u5810 30A6  
                          u6507 52D4                            u4771 456C                            u4851 4414  
                          u6427 43AC                            u4691 3804                            u6347 3732  
                          u5731 2FC0                            u5651 2D3A                            u6267 4E1C  
                          u4931 27C6                            u3971 1EE6                            u6187 4AAE  
                          u3891 3ED2                            u5571 45E0                            u5811 30A2  
                          u4780 45A6                            u4668 379C                            u4588 36D0  
                          u5660 2D4E                            u4940 2840                            u4860 26C2  
                          u3980 1EFC                            u5580 4604                            u5820 30B4  
                          u6517 5362                            u4781 45A2                            u6437 43F4  
                          u6357 3768                            u5661 2D4A                            u6277 5908  
                          u4941 283C                            u4861 26BE                            u3981 1EF8  
                          u6197 4AD2                            u5581 4600                            u5821 30B0  
                          u4790 431A                            u5670 2DA8                            u4950 2862  
                          u4870 26D4                            u3990 1F0C                            u5590 462A  
                          u5830 30F4                            u6527 53A4                            u6447 4488  
                          u4791 4316                            u6367 37B0                            u6287 35A6  
                          u5671 2DA4                            u4951 285E                            u4871 26D0  
                          u3991 1F08                            u5591 4626                            u5831 30F0  
                          u4688 37D2                            u5680 2E02                            u4960 288C  
                          u4880 26E4                            u5840 3116                            u6537 540E  
                          u6457 44F2                            u6377 37E6                            u6297 35DE  
                          u5681 2DFE                            u4961 2888                            u4881 26E0  
                          u5841 3112                            u5690 2E5C                            u4970 28B0  
                          u4890 2728                            u5850 3124                            u6467 453A  
                          u6387 59CA                            u5691 2E58                            u4971 28AC  
                          u4891 2724                            u5851 3120                            u5907 308C  
                          u4980 28C6                            u5860 3156                            u6477 4582  
                          u6397 32F4                            u4981 28C2                            u5861 3152  
                          u5917 30D8                            u4990 28E4                            u5870 31AA  
                          u5790 3064                            u6487 5A0A                            u4991 28E0  
                          u5871 31A6                            u5927 3138                            u5791 3060  
                          u5880 31DC                            u6497 5292                            u5937 322C  
                          u5881 31D8                            u5947 5458                            u5957 548E  
                          u5967 472C                            u5977 500E                            u5987 0E72  
                          u5997 10D0                            abs@a 0013                            _dbuf 019C  
                          _main 2FF8                            _dtoa 2A42                            _prec 0192  
                          _nout 018E                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            btemp 005F                            _stop 52F8  
                          prodh 000FF4                            prodl 000FF3                            start 0030  
                ?_color_display 0058                   test_action@mL 0032                   test_action@mR 0034  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 56EC                 __end_of_HighISR 0030  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 48CE  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1ED0                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 4A32                 __end_of___fldiv 2A42                 __end_of___awdiv 5238  
               __end_of___flneg 5AD8                 __end_of___flmul 22FA                 __end_of___flsub 5822  
               __end_of___fltol 4C62                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5C78                           _LED_C 5C98                           _LED_G 5C58  
                         _LED_R 5C18                           i2l709 002C                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5D4C      __end_of_I2C_2_Master_Start 5DAC         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5D82                 __end_of_compare 5A66                    compare@lower 006A  
                         _flags 00F8                           _color 019A                    compare@upper 006E  
                         _fputc 4F1E                           _fputs 5822                           pad@fp 0011  
                         _width 0190                           _putch 5DAE                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 5AA0                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 569C                color_display@buf 0079         __end_of_color_read_Blue 578C  
         _I2C_2_Master_RepStart 5D8E               _calibration_motor 4D66                 ??_short_reverse 002A  
               ?_color_read_Red 0005                 __initialization 55F4              ?_calibration_motor 0036  
                  __end_of_main 32AE                    __end_of_dtoa 2D2C                   main@amb_light 01C4  
          __end_of_detect_color 1A10                    __end_of_stop 53B4          color_data_collection@i 00DE  
        color_data_collection@j 00E0          color_data_collection@k 00E2          color_data_collection@m 005A  
        color_data_collection@x 00E4             ??_calibration_motor 003A                          ??_main 00F6  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 5D4C                       ??_LED_OFF 0001  
        _initDCmotors_parameter 4E4C                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5680 000A                          i2l5682 001A                          i2l5684 0022  
            turnLeft@angle_left 0024                          i2l5686 0028                       ??_HighISR 0001  
      __end_of_color_click_init 5B42                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A       __end_of_calibration_motor 4E4C                __end_of___xxtofl 410A  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 4C62                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5BF2                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                        _action 2D2C                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 32AE                   compare@result 0070                          _memory 013C  
                        clear_0 5624                ___awdiv@quotient 000D                          _motorL 0181  
                        _motorR 0178                          isa$std 000001                          pad@buf 0013  
                        _roundf 22FA                          dtoa@fp 001C                          _strlen 5AD8  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5CD8  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E6  
                test_function@w 00E8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 5596                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                    ?_test_action 0032                       ??_sprintf 0058  
              __end_of_turnLeft 45BC                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
              calibrate_white@w 000C                 fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022  
                    __accesstop 0060         __end_of__initialization 5638                   verify_color@m 0092  
                 verify_color@w 0094        __end_of_color_read_Clear 57DC                      ___flneg@f1 0001  
      __end_of_color_read_Green 573C          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 5C98                   __end_of_LED_C 5CB8  
                 __end_of_LED_G 5C78                   __end_of_LED_R 5C38                ?_color_read_Blue 0005  
               _Interrupts_init 5D82                  __pcstackCOMRAM 0001                   _fullSpeedBack 5238  
                  __pidataBANK0 5DAC                    __pidataBANK1 5DB0         __end_of_buggylight_init 5D62  
          turnRight@angle_right 0024           _distance_measure$3347 0074                   __end_of_fputc 4FE8  
             detect_color@color 0089                   __end_of_fputs 5866                   __end_of_putch 5DB0  
                 __end_of_toint 0E05             __end_of_Timer0_init 5D34                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A           fullSpeedAhead_test@mL 0020           fullSpeedAhead_test@mR 0022  
            ??_distance_measure 0070                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00F8                      __pbssBANK1 0100  
           calibration_motor@mL 0036             calibration_motor@mR 0038                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 5CD8                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 003A                         ?_goback 0032  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 5C38                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
            short_burst_back@mL 0020              short_burst_back@mR 0022                    _detect_color 0E14  
 __end_of_color_data_collection 42A0         __end_of_Interrupts_init 5D8E          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5CF8  
            _I2C_2_Master_Start 5DA2                      _initUSART4 5CF8              _I2C_2_Master_Write 5D76  
           _fullSpeedAhead_test 58EA                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 00F2                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 5D16         sendStringSerial4@string 0002                         ___aodiv 4746  
                       ___fladd 1A10                         ___aomod 48CE                         ___fldiv 26A8  
                       ___awdiv 5174                         ___flneg 5AA0                         ___flmul 1ED0  
                       ___flsub 57DC                         ___fltol 4B5A             ?_I2C_2_Master_Start 0001  
              ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00       distance_measure@threshold 007A                         __pcinit 55F4  
                       __ramtop 0E00                      _read_color 5596                       ?_turnLeft 0020  
                       __ptext0 2FF8                         __ptext1 5448                         __ptext2 45BC  
                       __ptext3 4FE8                         __ptext4 0E14                         __ptext5 5A2C  
                       __ptext6 410A                         __ptext7 5596                         __ptext8 5B72  
                       __ptext9 54C4                         _compare 5A2C         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD            ?_fullSpeedAhead_test 0020                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 5A66                   _RxBufWriteCnt 00FD  
                       goback@i 0038          distance_measure@CC_amb 0078                         main@amb 01BC  
        distance_measure@CG_amb 0072                         _sprintf 564A                         main@rgb 01C8  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 5638  
            setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF                 _CALIBRATION_180 01FE  
                       fputc@fp 0003           __end_of_test_function 4746                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 00EA                 test_function@mR 00EC  
               ??_fullSpeedBack 0024                      ??_pin_init 0001              ??_color_click_init 0005  
              _short_burst_back 596C               __end_of_vfpfcnvrt 3F56           __end_of_short_reverse 59EC  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 58A8                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4F1E  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4           ??_fullSpeedAhead_test 0024  
                    _setup_init 5D62               __end_of_turnRight 442E                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                      _start_move 0196  
              ?_Interrupts_init 0001                     ___flmul@grs 0035                   ?_toggle_light 0001  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 0164                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0092           __end_of_color_display 5534                      main@motorL 01EC  
                    main@motorR 01F5     amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 007F                  detect_color@BC 007B                  detect_color@BG 008C  
                detect_color@GB 0083                  detect_color@GG 0087                  detect_color@BR 0085  
                detect_color@GR 007D                  detect_color@RB 0081                  detect_color@RG 0079  
                detect_color@RR 008A           __end_of_color_predict 5BA0                  __end_of___flge 4D66  
                _fullSpeedAhead 53B4                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5C18                  __end_of_action 2FF8  
                   ?_read_color 000C                  __end_of_goback 355E                  __end_of_roundf 26A8  
            turnRight@delay_135 0026              turnRight@delay_180 0028                  __end_of_strlen 5B0E  
           color_read_Clear@tmp 000A             start_initialization 55F4                     __end_of_abs 596C  
                   __end_of_pad 5174                   _TxBufWriteCnt 00FB               turnLeft@delay_135 0026  
             turnLeft@delay_180 0028                  ??_toggle_light 0002                  ??_verify_color 0096  
           color_read_Green@tmp 000A                  _reverse_square 59EC         __end_of_initDCmotorsPWM 58EA  
                   vfprintf@fmt 0052          __end_of_fullSpeedAhead 5448                        ??___flge 0009  
                      ??___wmul 0005                        ??_action 003E                        ??_goback 0036  
               short_reverse@mL 0026                 short_reverse@mR 0028                     __pdataBANK0 00FE  
                   __pdataBANK1 01FE                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                     ?_setup_init 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 01BC  
              ___aodiv@dividend 0001                        ?_HighISR 0001          __end_of_reverse_square 5A2C  
                     _dtoa$2987 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B              test_function@color 00F3  
               turnRight@i_1344 002C                 turnRight@i_1345 002E                     _centisecond 0198  
                turnLeft@i_1321 002C                  turnLeft@i_1322 002E            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 006A                     __smallconst 0E00  
             _I2C_2_Master_Idle 5BCA               _I2C_2_Master_Init 5BA0               _I2C_2_Master_Read 5866  
             _I2C_2_Master_Stop 5D98          toggle_light@toggletime 0001                    _RxBufReadCnt 00FC  
      __end_of_short_burst_back 59AC                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 5B42           _color_data_collection 410A             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0026  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                   turnRight@mL 0020                     turnRight@mR 0022                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u589_40 001A                        i2u589_41 0016  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                     _array_index 019B  
                     _vfpfcnvrt 3DA2       __end_of_I2C_2_Master_Idle 5BF2            __end_of_toggle_light 380A  
     __end_of_I2C_2_Master_Init 5BCA       __end_of_I2C_2_Master_Read 58A8               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 5DA2                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 54C4          test_function@amb_light 00F0                       main@setup 01C6  
                     main@white 01D0               ??_color_read_Blue 0007                       _stop_move 0194  
                 detect_color@m 0071                   detect_color@w 0073                    _TxBufReadCnt 00FA  
                     _turnRight 42A0                   ??_test_action 0036                 _calibrate_white 380A  
     __end_of_sendStringSerial4 5B72               _amb_light_measure 4A32   __end_of_I2C_2_Master_RepStart 5D98  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 3BE8                      roundf@F527 018A  
              _distance_measure 4FE8                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 52F8                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C     __end_of_fullSpeedAhead_test 592C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 003E                      sprintf@fmt 0062                        ___xxtofl 3F56  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5D16  
                    ?_turnRight 0020                        __ptext10 564A                        __ptext11 5534  
                      __ptext20 48CE                        __ptext12 3DA2                        __ptext21 4746  
                      __ptext13 2A42                        __ptext30 5C58                        __ptext22 5B42  
                      __ptext14 50AE                        __ptext31 5C78                        __ptext23 5D34  
                      __ptext15 5AD8                        __ptext40 4B5A                        __ptext32 4A32  
                      __ptext24 380A                        __ptext16 5822                        __ptext41 578C  
                      __ptext33 5A66                        __ptext25 569C                        __ptext17 4F1E  
                      __ptext50 5CF8                        __ptext42 5D8E                        __ptext34 22FA  
                      __ptext26 56EC                        __ptext18 5DAE                        __ptext51 4E4C  
                      __ptext43 5866                        __ptext35 57DC                        __ptext27 573C  
                      __ptext19 592C                        __ptext60 4D66                        __ptext52 58A8  
                      __ptext44 3F56                        __ptext36 1A10                        __ptext28 5C18  
                      __ptext61 3BE8                        __ptext53 5B0E                        __ptext45 26A8  
                      __ptext37 5AA0                        __ptext29 5C38                        __ptext70 59EC  
                      __ptext62 58EA                        __ptext54 5CD8                        __ptext46 5C98  
                      __ptext38 1ED0                        __ptext71 5238                        __ptext63 5D4C  
                      __ptext55 5D76                        __ptext47 596C                        __ptext39 4C62  
                      __ptext72 52F8                        __ptext64 2D2C                        __ptext56 5D98  
                      __ptext48 5D62                        __ptext73 53B4                        __ptext65 355E  
                      __ptext57 5DA2                        __ptext49 5CB8                        __ptext74 3A14  
                      __ptext66 59AC                        __ptext58 5BCA                        __ptext75 5BF2  
                      __ptext67 32AE                        __ptext59 5BA0                        __ptext76 5174  
                      __ptext68 42A0                        __ptext77 5D16                        __ptext69 442E  
                      __ptext78 5D82       __end_of_amb_light_measure 4B5A                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A                  turnRight@delay 0030  
        test_function@test_code 00F5                   turnLeft@delay 0030                        action@mL 003A  
                      action@mR 003C                      turnLeft@mL 0020                      turnLeft@mR 0022  
           __end_of_test_action 3DA2              __end_of_read_color 55F4                        _pin_init 5CB8  
                    turnRight@i 002A                        isa$xinst 000000            distance_measure@stop 007C  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 00FE  
                      goback@mL 0032                        goback@mR 0034                        _vfprintf 5534  
                      _turnLeft 442E                ___aomod@dividend 0001                    ??_setup_init 0001  
       __end_of_calibrate_white 3A14                      _INTCONbits 000FF2                     _setMotorPWM 3A14  
                 ?_detect_color 0071                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006C               ??_buggylight_init 0001  
              ??_fullSpeedAhead 001E                   _test_function 45BC                       turnLeft@i 002A  
              reverse_square@mL 0026                reverse_square@mR 0028              __end_of_setup_init 5D76  
                      lroundf@x 0066        ??_initDCmotors_parameter 0005                   _short_reverse 59AC  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 5B0E                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$3346 008E                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
            distance_measure@mL 006A              distance_measure@mR 006C                  ??_detect_color 0075  
                   ??_turnRight 0025               ?_short_burst_back 0020                     _test_action 3BE8  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012              ??_short_burst_back 0024                 _sendCharSerial4 5D34  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                  ?_test_function 00E6  
                  _toggle_light 355E                    ___aomod@sign 0012                    _verify_color 5448  
                   _roundf$3348 004F                     _roundf$3349 0049                   _color_display 54C4  
               main@stop_signal 01C7  
