

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Mar 13 16:43:15 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96  0000                     
    97                           ; Version 2.35
    98                           ; Generated 05/05/2021 GMT
    99                           ; 
   100                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution. Publication is not required when
   114                           ;        this file is used in an embedded application.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F67K40 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataBANK0
   134  0058CC                     __pidataBANK0:
   135                           	callstack 0
   136                           
   137                           ;initializer for _SENSITIVITY
   138  0058CC  0A                 	db	10
   139                           
   140                           ;initializer for _CALIBRATION_135
   141  0058CD  0A                 	db	10
   142                           
   143                           	psect	idataBANK1
   144  0058D0                     __pidataBANK1:
   145                           	callstack 0
   146                           
   147                           ;initializer for _CALIBRATION_180
   148  0058D0  14                 	db	20
   149                           
   150                           	psect	smallconst
   151  000E00                     __psmallconst:
   152                           	callstack 0
   153  000E00  00                 	db	0
   154  000E01  0000               	dw	0
   155  000E03  4B00               	dw	19200
   156  000E05                     __end_of_toint:
   157                           	callstack 0
   158  0000                     _TX4REG	set	3812
   159  0000                     _RC4STAbits	set	3815
   160  0000                     _SP4BRGH	set	3814
   161  0000                     _LATEbits	set	3965
   162  0000                     _TRISGbits	set	3975
   163  0000                     _TRISEbits	set	3973
   164  0000                     _LATGbits	set	3967
   165  0000                     _LATFbits	set	3966
   166  0000                     _TRISFbits	set	3974
   167  0000                     _SSP2CON2bits	set	3802
   168  0000                     _LATG	set	3967
   169  0000                     _LATE	set	3965
   170  0000                     _RX4PPS	set	3605
   171  0000                     _SSP2CLKPPS	set	3612
   172  0000                     _SSP2DATPPS	set	3613
   173  0000                     _ANSELDbits	set	3751
   174  0000                     _SSP2ADD	set	3798
   175  0000                     _SSP2CON1bits	set	3801
   176  0000                     _LATAbits	set	3961
   177  0000                     _LATDbits	set	3964
   178  0000                     _LATHbits	set	3968
   179  0000                     _TRISDbits	set	3972
   180  0000                     _TRISHbits	set	3976
   181  0000                     _PORTFbits	set	3982
   182  0000                     _T2PR	set	4028
   183  0000                     _T2CONbits	set	4029
   184  0000                     _PWM7DCH	set	4000
   185  0000                     _PWM6DCH	set	4003
   186  0000                     _TRISAbits	set	3969
   187  0000                     _TRISCbits	set	3971
   188  0000                     _LATCbits	set	3963
   189  0000                     _RC4REG	set	3811
   190  0000                     _SP4BRGL	set	3813
   191  0000                     _TX4STAbits	set	3816
   192  0000                     _BAUD4CONbits	set	3817
   193  0000                     _SSP2CON2	set	3802
   194  0000                     _SSP2STAT	set	3800
   195  0000                     _ANSELFbits	set	3764
   196  0000                     _SSP2BUF	set	3797
   197  0000                     _PIE0bits	set	3625
   198  0000                     _PIE4bits	set	3629
   199  0000                     _PIR4bits	set	3639
   200  0000                     _RC0PPS	set	3682
   201  0000                     _RC7PPS	set	3689
   202  0000                     _RD5PPS	set	3695
   203  0000                     _RE2PPS	set	3700
   204  0000                     _RD6PPS	set	3696
   205  0000                     _TMR0L	set	4051
   206  0000                     _TMR0H	set	4052
   207  0000                     _T0CON0bits	set	4053
   208  0000                     _T2CLKCONbits	set	4031
   209  0000                     _T2HLTbits	set	4030
   210  0000                     _PWM6CONbits	set	4004
   211  0000                     _PWM7CONbits	set	4001
   212  0000                     _PIR0bits	set	3635
   213  0000                     _T0CON1bits	set	4054
   214  0000                     _INTCONbits	set	4082
   215  000E05                     STR_1:
   216                           
   217                           ; BSR set to: 14
   218  000E05  25                 	db	37
   219  000E06  64                 	db	100	;'d'
   220  000E07  09                 	db	9
   221  000E08  25                 	db	37
   222  000E09  64                 	db	100	;'d'
   223  000E0A  09                 	db	9
   224  000E0B  25                 	db	37
   225  000E0C  64                 	db	100	;'d'
   226  000E0D  09                 	db	9
   227  000E0E  25                 	db	37
   228  000E0F  64                 	db	100	;'d'
   229  000E10  0D                 	db	13
   230  000E11  0A                 	db	10
   231  000E12  00                 	db	0
   232  000E13  00                 	db	0	; dummy byte at the end
   233  0000                     
   234                           ; #config settings
   235                           
   236                           	psect	cinit
   237  0051A6                     __pcinit:
   238                           	callstack 0
   239  0051A6                     start_initialization:
   240                           	callstack 0
   241  0051A6                     __initialization:
   242                           	callstack 0
   243                           
   244                           ; Initialize objects allocated to BANK1 (1 bytes)
   245                           ; load TBLPTR registers with __pidataBANK1
   246  0051A6  0ED0               	movlw	low __pidataBANK1
   247  0051A8  6EF6               	movwf	tblptrl,c
   248  0051AA  0E58               	movlw	high __pidataBANK1
   249  0051AC  6EF7               	movwf	tblptrh,c
   250  0051AE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   251  0051B0  6EF8               	movwf	tblptru,c
   252  0051B2  0009               	tblrd		*+	;fetch initializer
   253  0051B4  CFF5 F1FF          	movff	tablat,__pdataBANK1
   254                           
   255                           ; Initialize objects allocated to BANK0 (2 bytes)
   256                           ; load TBLPTR registers with __pidataBANK0
   257  0051B8  0ECC               	movlw	low __pidataBANK0
   258  0051BA  6EF6               	movwf	tblptrl,c
   259  0051BC  0E58               	movlw	high __pidataBANK0
   260  0051BE  6EF7               	movwf	tblptrh,c
   261  0051C0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   262  0051C2  6EF8               	movwf	tblptru,c
   263  0051C4  0009               	tblrd		*+	;fetch initializer
   264  0051C6  CFF5 F0FE          	movff	tablat,__pdataBANK0
   265  0051CA  0009               	tblrd		*+	;fetch initializer
   266  0051CC  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   267                           
   268                           ; Clear objects allocated to BANK1 (190 bytes)
   269  0051D0  EE01  F000         	lfsr	0,__pbssBANK1
   270  0051D4  0EBE               	movlw	190
   271  0051D6                     clear_0:
   272  0051D6  6AEE               	clrf	postinc0,c
   273  0051D8  06E8               	decf	wreg,f,c
   274  0051DA  E1FD               	bnz	clear_0
   275                           
   276                           ; Clear objects allocated to BANK0 (6 bytes)
   277  0051DC  0100               	movlb	0
   278  0051DE  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   279  0051E0  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   280  0051E2  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   281  0051E4  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   282  0051E6  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   283  0051E8  6BF8               	clrf	__pbssBANK0& (0+255),b
   284  0051EA                     end_of_initialization:
   285                           	callstack 0
   286  0051EA                     __end_of__initialization:
   287                           	callstack 0
   288  0051EA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   289  0051EC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   290  0051EE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   291  0051F0  6EF8               	movwf	tblptru,c
   292  0051F2  0E0E               	movlw	high __Lsmallconst
   293  0051F4  6EF7               	movwf	tblptrh,c
   294  0051F6  0100               	movlb	0
   295  0051F8  EFDD  F01E         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssBANK0
   298  0000F8                     __pbssBANK0:
   299                           	callstack 0
   300  0000F8                     _flags:
   301                           	callstack 0
   302  0000F8                     	ds	2
   303  0000FA                     _TxBufReadCnt:
   304                           	callstack 0
   305  0000FA                     	ds	1
   306  0000FB                     _TxBufWriteCnt:
   307                           	callstack 0
   308  0000FB                     	ds	1
   309  0000FC                     _RxBufReadCnt:
   310                           	callstack 0
   311  0000FC                     	ds	1
   312  0000FD                     _RxBufWriteCnt:
   313                           	callstack 0
   314  0000FD                     	ds	1
   315                           
   316                           	psect	dataBANK0
   317  0000FE                     __pdataBANK0:
   318                           	callstack 0
   319  0000FE                     _SENSITIVITY:
   320                           	callstack 0
   321  0000FE                     	ds	1
   322  0000FF                     _CALIBRATION_135:
   323                           	callstack 0
   324  0000FF                     	ds	1
   325                           
   326                           	psect	bssBANK1
   327  000100                     __pbssBANK1:
   328                           	callstack 0
   329  000100                     _EUSART4TXbuf:
   330                           	callstack 0
   331  000100                     	ds	60
   332  00013C                     _memory:
   333                           	callstack 0
   334  00013C                     	ds	40
   335  000164                     _EUSART4RXbuf:
   336                           	callstack 0
   337  000164                     	ds	20
   338  000178                     _motorR:
   339                           	callstack 0
   340  000178                     	ds	10
   341  000182                     _motorL:
   342                           	callstack 0
   343  000182                     	ds	10
   344  00018C                     roundf@F527:
   345                           	callstack 0
   346  00018C                     	ds	4
   347  000190                     _nout:
   348                           	callstack 0
   349  000190                     	ds	2
   350  000192                     _width:
   351                           	callstack 0
   352  000192                     	ds	2
   353  000194                     _prec:
   354                           	callstack 0
   355  000194                     	ds	2
   356  000196                     _stop_move:
   357                           	callstack 0
   358  000196                     	ds	2
   359  000198                     _start_move:
   360                           	callstack 0
   361  000198                     	ds	2
   362  00019A                     _second:
   363                           	callstack 0
   364  00019A                     	ds	2
   365  00019C                     _color:
   366                           	callstack 0
   367  00019C                     	ds	1
   368  00019D                     _array_index:
   369                           	callstack 0
   370  00019D                     	ds	1
   371  00019E                     _dbuf:
   372                           	callstack 0
   373  00019E                     	ds	32
   374                           
   375                           	psect	dataBANK1
   376  0001FF                     __pdataBANK1:
   377                           	callstack 0
   378  0001FF                     _CALIBRATION_180:
   379                           	callstack 0
   380  0001FF                     	ds	1
   381                           
   382                           	psect	cstackBANK1
   383  0001BE                     __pcstackBANK1:
   384                           	callstack 0
   385  0001BE                     main@amb:
   386                           	callstack 0
   387                           
   388                           ; 8 bytes @ 0x0
   389  0001BE                     	ds	8
   390  0001C6                     main@amb_light:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x8
   394  0001C6                     	ds	2
   395  0001C8                     main@stop_signal:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xA
   399  0001C8                     	ds	1
   400  0001C9                     main@rgb:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0xB
   404  0001C9                     	ds	8
   405  0001D1                     main@white:
   406                           	callstack 0
   407                           
   408                           ; 26 bytes @ 0x13
   409  0001D1                     	ds	26
   410  0001EB                     main@motorL:
   411                           	callstack 0
   412                           
   413                           ; 10 bytes @ 0x2D
   414  0001EB                     	ds	10
   415  0001F5                     main@motorR:
   416                           	callstack 0
   417                           
   418                           ; 10 bytes @ 0x37
   419  0001F5                     	ds	10
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	callstack 0
   424  000060                     ??___fltol:
   425  000060                     ?_sprintf:
   426                           	callstack 0
   427  000060                     sprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000060                     	ds	2
   432  000062                     sprintf@fmt:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000062                     	ds	2
   437  000064                     ___fltol@sign1:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441  000064                     	ds	1
   442  000065                     ___fltol@exp1:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446  000065                     	ds	1
   447  000066                     ?_lroundf:
   448                           	callstack 0
   449  000066                     lroundf@x:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x6
   453  000066                     	ds	4
   454  00006A                     ?_amb_light_measure:
   455                           	callstack 0
   456  00006A                     compare@lower:
   457                           	callstack 0
   458  00006A                     amb_light_measure@amb:
   459                           	callstack 0
   460  00006A                     distance_measure@mL:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xA
   464  00006A                     	ds	2
   465  00006C                     ??_amb_light_measure:
   466  00006C                     compare@value2compare:
   467                           	callstack 0
   468  00006C                     distance_measure@mR:
   469                           	callstack 0
   470  00006C                     sprintf@ap:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xC
   474  00006C                     	ds	2
   475  00006E                     compare@upper:
   476                           	callstack 0
   477  00006E                     amb_light_measure@upper_bound:
   478                           	callstack 0
   479  00006E                     distance_measure@amb_light:
   480                           	callstack 0
   481  00006E                     sprintf@f:
   482                           	callstack 0
   483                           
   484                           ; 11 bytes @ 0xE
   485  00006E                     	ds	2
   486  000070                     ??_distance_measure:
   487  000070                     compare@result:
   488                           	callstack 0
   489  000070                     amb_light_measure@CC_amb_ave:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x10
   493  000070                     	ds	1
   494  000071                     detect_color@m:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x11
   498  000071                     	ds	1
   499  000072                     amb_light_measure@CC_amb_1:
   500                           	callstack 0
   501  000072                     distance_measure@CG_amb:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x12
   505  000072                     	ds	1
   506  000073                     detect_color@w:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x13
   510  000073                     	ds	1
   511  000074                     amb_light_measure@CC_amb_2:
   512                           	callstack 0
   513  000074                     _distance_measure$3236:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x14
   517  000074                     	ds	1
   518  000075                     ??_detect_color:
   519                           
   520                           ; 1 bytes @ 0x15
   521  000075                     	ds	1
   522  000076                     amb_light_measure@CC_amb_3:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x16
   526  000076                     	ds	2
   527  000078                     distance_measure@CC_amb:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x18
   531  000078                     	ds	1
   532  000079                     detect_color@RB:
   533                           	callstack 0
   534  000079                     color_display@buf:
   535                           	callstack 0
   536  000079                     color_predict@buf:
   537                           	callstack 0
   538                           
   539                           ; 100 bytes @ 0x19
   540  000079                     	ds	1
   541  00007A                     distance_measure@threshold:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x1A
   545  00007A                     	ds	1
   546  00007B                     detect_color@GB:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1B
   550  00007B                     	ds	1
   551  00007C                     distance_measure@stop:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x1C
   555  00007C                     	ds	1
   556  00007D                     detect_color@RG:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1D
   560  00007D                     	ds	2
   561  00007F                     detect_color@GR:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x1F
   565  00007F                     	ds	2
   566  000081                     detect_color@GG:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x21
   570  000081                     	ds	2
   571  000083                     detect_color@RR:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x23
   575  000083                     	ds	2
   576  000085                     detect_color@BR:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x25
   580  000085                     	ds	2
   581  000087                     detect_color@BB:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x27
   585  000087                     	ds	2
   586  000089                     detect_color@BG:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x29
   590  000089                     	ds	2
   591  00008B                     detect_color@color:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x2B
   595  00008B                     	ds	1
   596  00008C                     _detect_color$3235:
   597                           	callstack 0
   598                           
   599                           ; 4 bytes @ 0x2C
   600  00008C                     	ds	4
   601  000090                     verify_color@m:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x30
   605  000090                     	ds	2
   606  000092                     verify_color@w:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0x32
   610  000092                     	ds	2
   611  000094                     ??_verify_color:
   612                           
   613                           ; 1 bytes @ 0x34
   614  000094                     	ds	2
   615  000096                     verify_color@color2:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x36
   619  000096                     	ds	2
   620  000098                     verify_color@color:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x38
   624  000098                     	ds	69
   625  0000DD                     color_predict@color:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x7D
   629  0000DD                     	ds	1
   630  0000DE                     color_data_collection@i:
   631                           	callstack 0
   632  0000DE                     goback@i:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x7E
   636  0000DE                     	ds	2
   637  0000E0                     color_data_collection@j:
   638                           	callstack 0
   639  0000E0                     action@mL:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x80
   643  0000E0                     	ds	2
   644  0000E2                     color_data_collection@k:
   645                           	callstack 0
   646  0000E2                     action@mR:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x82
   650  0000E2                     	ds	2
   651  0000E4                     color_data_collection@x:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x84
   655  0000E4                     	ds	2
   656  0000E6                     test_function@m:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x86
   660  0000E6                     	ds	2
   661  0000E8                     test_function@w:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x88
   665  0000E8                     	ds	2
   666  0000EA                     test_function@mL:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x8A
   670  0000EA                     	ds	2
   671  0000EC                     test_function@mR:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x8C
   675  0000EC                     	ds	2
   676  0000EE                     ??_test_function:
   677                           
   678                           ; 1 bytes @ 0x8E
   679  0000EE                     	ds	2
   680  0000F0                     test_function@amb_light:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x90
   684  0000F0                     	ds	2
   685  0000F2                     test_function@complete:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x92
   689  0000F2                     	ds	1
   690  0000F3                     test_function@color:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x93
   694  0000F3                     	ds	1
   695  0000F4                     test_function@stop_signal:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x94
   699  0000F4                     	ds	1
   700  0000F5                     test_function@test_code:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x95
   704  0000F5                     	ds	1
   705  0000F6                     ??_main:
   706                           
   707                           ; 1 bytes @ 0x96
   708  0000F6                     	ds	2
   709                           
   710                           	psect	cstackCOMRAM
   711  000001                     __pcstackCOMRAM:
   712                           	callstack 0
   713  000001                     ??_LED_OFF:
   714  000001                     ??_LED_R:
   715  000001                     ??_LED_C:
   716  000001                     ??_LED_B:
   717  000001                     ??_LED_G:
   718  000001                     ??_I2C_2_Master_Idle:
   719  000001                     ?_strlen:
   720                           	callstack 0
   721  000001                     ?___wmul:
   722                           	callstack 0
   723  000001                     ?___fladd:
   724                           	callstack 0
   725  000001                     ?___flneg:
   726                           	callstack 0
   727  000001                     ?___xxtofl:
   728                           	callstack 0
   729  000001                     ?___aodiv:
   730                           	callstack 0
   731  000001                     ?___aomod:
   732                           	callstack 0
   733  000001                     toggle_light@toggletime:
   734                           	callstack 0
   735  000001                     sendCharSerial4@charToSend:
   736                           	callstack 0
   737  000001                     initDCmotorsPWM@PWMperiod:
   738                           	callstack 0
   739  000001                     initDCmotors_parameter@motorL:
   740                           	callstack 0
   741  000001                     ___wmul@multiplier:
   742                           	callstack 0
   743  000001                     fputc@c:
   744                           	callstack 0
   745  000001                     strlen@s:
   746                           	callstack 0
   747  000001                     ___flge@ff1:
   748                           	callstack 0
   749  000001                     ___flneg@f1:
   750                           	callstack 0
   751  000001                     ___fladd@b:
   752                           	callstack 0
   753  000001                     ___xxtofl@val:
   754                           	callstack 0
   755  000001                     ___aodiv@dividend:
   756                           	callstack 0
   757  000001                     ___aomod@dividend:
   758                           	callstack 0
   759                           
   760                           ; 8 bytes @ 0x0
   761  000001                     	ds	1
   762  000002                     ??_I2C_2_Master_Read:
   763  000002                     ??_toggle_light:
   764  000002                     I2C_2_Master_Write@data_byte:
   765                           	callstack 0
   766  000002                     sendStringSerial4@string:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x1
   770  000002                     	ds	1
   771  000003                     color_writetoaddr@value:
   772                           	callstack 0
   773  000003                     I2C_2_Master_Read@ack:
   774                           	callstack 0
   775  000003                     initDCmotors_parameter@motorR:
   776                           	callstack 0
   777  000003                     ___wmul@multiplicand:
   778                           	callstack 0
   779  000003                     fputc@fp:
   780                           	callstack 0
   781  000003                     strlen@a:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x2
   785  000003                     	ds	1
   786  000004                     toggle_light@i:
   787                           	callstack 0
   788  000004                     color_writetoaddr@address:
   789                           	callstack 0
   790  000004                     I2C_2_Master_Read@tmp:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x3
   794  000004                     	ds	1
   795  000005                     ??_fputc:
   796  000005                     ??_color_click_init:
   797  000005                     ??___xxtofl:
   798  000005                     ?_color_read_Red:
   799                           	callstack 0
   800  000005                     ?_color_read_Blue:
   801                           	callstack 0
   802  000005                     ?_color_read_Green:
   803                           	callstack 0
   804  000005                     ?_color_read_Clear:
   805                           	callstack 0
   806  000005                     toggle_light@lightnumber:
   807                           	callstack 0
   808  000005                     ___wmul@product:
   809                           	callstack 0
   810  000005                     ___flge@ff2:
   811                           	callstack 0
   812  000005                     ___fladd@a:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x4
   816  000005                     	ds	2
   817  000007                     ??_color_read_Red:
   818  000007                     ??_color_read_Blue:
   819  000007                     ??_color_read_Green:
   820  000007                     ??_color_read_Clear:
   821  000007                     ?___awdiv:
   822                           	callstack 0
   823  000007                     ___awdiv@dividend:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x6
   827  000007                     	ds	2
   828  000009                     ??___fladd:
   829  000009                     ??___flge:
   830  000009                     ___xxtofl@sign:
   831                           	callstack 0
   832  000009                     ___awdiv@divisor:
   833                           	callstack 0
   834  000009                     ___aodiv@divisor:
   835                           	callstack 0
   836  000009                     ___aomod@divisor:
   837                           	callstack 0
   838                           
   839                           ; 8 bytes @ 0x8
   840  000009                     	ds	1
   841  00000A                     ___xxtofl@exp:
   842                           	callstack 0
   843  00000A                     color_read_Red@tmp:
   844                           	callstack 0
   845  00000A                     color_read_Blue@tmp:
   846                           	callstack 0
   847  00000A                     color_read_Green@tmp:
   848                           	callstack 0
   849  00000A                     color_read_Clear@tmp:
   850                           	callstack 0
   851  00000A                     fputs@s:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x9
   855  00000A                     	ds	1
   856  00000B                     ___awdiv@counter:
   857                           	callstack 0
   858  00000B                     ___xxtofl@arg:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0xA
   862  00000B                     	ds	1
   863  00000C                     ___awdiv@sign:
   864                           	callstack 0
   865  00000C                     read_color@m:
   866                           	callstack 0
   867  00000C                     calibrate_white@w:
   868                           	callstack 0
   869  00000C                     fputs@fp:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0xB
   873  00000C                     	ds	1
   874  00000D                     ___fladd@signs:
   875                           	callstack 0
   876  00000D                     ___awdiv@quotient:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xC
   880  00000D                     	ds	1
   881  00000E                     ??_calibrate_white:
   882  00000E                     ___fladd@aexp:
   883                           	callstack 0
   884  00000E                     fputs@c:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0xD
   888  00000E                     	ds	1
   889  00000F                     ?___fldiv:
   890                           	callstack 0
   891  00000F                     ___fladd@bexp:
   892                           	callstack 0
   893  00000F                     setMotorPWM@m:
   894                           	callstack 0
   895  00000F                     fputs@i:
   896                           	callstack 0
   897  00000F                     ___fldiv@b:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0xE
   901  00000F                     	ds	1
   902  000010                     ___fladd@grs:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0xF
   906  000010                     	ds	1
   907  000011                     ??_setMotorPWM:
   908  000011                     ?_pad:
   909                           	callstack 0
   910  000011                     ?___flsub:
   911                           	callstack 0
   912  000011                     ___aodiv@counter:
   913                           	callstack 0
   914  000011                     ___aomod@counter:
   915                           	callstack 0
   916  000011                     pad@fp:
   917                           	callstack 0
   918  000011                     ___flsub@b:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x10
   922  000011                     	ds	1
   923  000012                     ___aodiv@sign:
   924                           	callstack 0
   925  000012                     ___aomod@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x11
   929  000012                     	ds	1
   930  000013                     ?_abs:
   931                           	callstack 0
   932  000013                     pad@buf:
   933                           	callstack 0
   934  000013                     abs@a:
   935                           	callstack 0
   936  000013                     ___fldiv@a:
   937                           	callstack 0
   938  000013                     ___aodiv@quotient:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x12
   942  000013                     	ds	2
   943  000015                     ??_abs:
   944  000015                     pad@p:
   945                           	callstack 0
   946  000015                     ___flsub@a:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x14
   950  000015                     	ds	2
   951  000017                     ??___fldiv:
   952  000017                     ??_pad:
   953                           
   954                           ; 1 bytes @ 0x16
   955  000017                     	ds	1
   956  000018                     setMotorPWM@PWMduty:
   957                           	callstack 0
   958  000018                     pad@i:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x17
   962  000018                     	ds	1
   963  000019                     
   964                           ; 1 bytes @ 0x18
   965  000019                     	ds	1
   966  00001A                     stop@mL:
   967                           	callstack 0
   968  00001A                     fullSpeedAhead@mL:
   969                           	callstack 0
   970  00001A                     pad@w:
   971                           	callstack 0
   972                           
   973                           ; 2 bytes @ 0x19
   974  00001A                     	ds	1
   975  00001B                     ___fldiv@rem:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x1A
   979  00001B                     	ds	1
   980  00001C                     ?_dtoa:
   981                           	callstack 0
   982  00001C                     stop@mR:
   983                           	callstack 0
   984  00001C                     fullSpeedAhead@mR:
   985                           	callstack 0
   986  00001C                     dtoa@fp:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1B
   990  00001C                     	ds	2
   991  00001E                     ??_stop:
   992  00001E                     ??_fullSpeedAhead:
   993  00001E                     dtoa@d:
   994                           	callstack 0
   995                           
   996                           ; 8 bytes @ 0x1D
   997  00001E                     	ds	1
   998  00001F                     ___fldiv@sign:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x1E
  1002  00001F                     	ds	1
  1003  000020                     turnLeft@mL:
  1004                           	callstack 0
  1005  000020                     turnRight@mL:
  1006                           	callstack 0
  1007  000020                     fullSpeedBack@mL:
  1008                           	callstack 0
  1009  000020                     ___fldiv@new_exp:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x1F
  1013  000020                     	ds	2
  1014  000022                     turnLeft@mR:
  1015                           	callstack 0
  1016  000022                     turnRight@mR:
  1017                           	callstack 0
  1018  000022                     fullSpeedBack@mR:
  1019                           	callstack 0
  1020  000022                     ___fldiv@grs:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x21
  1024  000022                     	ds	2
  1025  000024                     ??_fullSpeedBack:
  1026  000024                     turnLeft@angle_left:
  1027                           	callstack 0
  1028  000024                     turnRight@angle_right:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x23
  1032  000024                     	ds	1
  1033  000025                     ??_turnLeft:
  1034  000025                     ??_turnRight:
  1035                           
  1036                           ; 1 bytes @ 0x24
  1037  000025                     	ds	1
  1038  000026                     ??_dtoa:
  1039  000026                     ___fldiv@bexp:
  1040                           	callstack 0
  1041  000026                     turnLeft@delay_135:
  1042                           	callstack 0
  1043  000026                     turnRight@delay_135:
  1044                           	callstack 0
  1045  000026                     short_reverse@mL:
  1046                           	callstack 0
  1047  000026                     reverse_square@mL:
  1048                           	callstack 0
  1049                           
  1050                           ; 2 bytes @ 0x25
  1051  000026                     	ds	1
  1052  000027                     ___fldiv@aexp:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x26
  1056  000027                     	ds	1
  1057  000028                     ?___flmul:
  1058                           	callstack 0
  1059  000028                     turnLeft@delay_180:
  1060                           	callstack 0
  1061  000028                     turnRight@delay_180:
  1062                           	callstack 0
  1063  000028                     short_reverse@mR:
  1064                           	callstack 0
  1065  000028                     reverse_square@mR:
  1066                           	callstack 0
  1067  000028                     ___flmul@b:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x27
  1071  000028                     	ds	2
  1072  00002A                     ??_short_reverse:
  1073  00002A                     ??_reverse_square:
  1074  00002A                     turnLeft@i:
  1075                           	callstack 0
  1076  00002A                     turnRight@i:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x29
  1080  00002A                     	ds	2
  1081  00002C                     turnLeft@i_1328:
  1082                           	callstack 0
  1083  00002C                     turnRight@i_1353:
  1084                           	callstack 0
  1085  00002C                     ___flmul@a:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0x2B
  1089  00002C                     	ds	2
  1090  00002E                     turnLeft@i_1329:
  1091                           	callstack 0
  1092  00002E                     turnRight@i_1354:
  1093                           	callstack 0
  1094  00002E                     _dtoa$2870:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x2D
  1098  00002E                     	ds	2
  1099  000030                     ??___flmul:
  1100  000030                     turnLeft@delay:
  1101                           	callstack 0
  1102  000030                     turnRight@delay:
  1103                           	callstack 0
  1104  000030                     dtoa@p:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x2F
  1108  000030                     	ds	2
  1109  000032                     dtoa@w:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x31
  1113  000032                     	ds	2
  1114  000034                     ___flmul@sign:
  1115                           	callstack 0
  1116  000034                     dtoa@s:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x33
  1120  000034                     	ds	1
  1121  000035                     ___flmul@grs:
  1122                           	callstack 0
  1123                           
  1124                           ; 4 bytes @ 0x34
  1125  000035                     	ds	1
  1126  000036                     dtoa@n:
  1127                           	callstack 0
  1128                           
  1129                           ; 8 bytes @ 0x35
  1130  000036                     	ds	3
  1131  000039                     ___flmul@aexp:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x38
  1135  000039                     	ds	1
  1136  00003A                     ___flmul@bexp:
  1137                           	callstack 0
  1138                           
  1139                           ; 1 bytes @ 0x39
  1140  00003A                     	ds	1
  1141  00003B                     ___flmul@prod:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x3A
  1145  00003B                     	ds	3
  1146  00003E                     dtoa@i:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x3D
  1150  00003E                     	ds	1
  1151  00003F                     ___flmul@temp:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x3E
  1155  00003F                     	ds	1
  1156  000040                     ?_vfpfcnvrt:
  1157                           	callstack 0
  1158  000040                     vfpfcnvrt@fp:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3F
  1162  000040                     	ds	1
  1163  000041                     ?_roundf:
  1164                           	callstack 0
  1165  000041                     roundf@x:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x40
  1169  000041                     	ds	1
  1170  000042                     vfpfcnvrt@fmt:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x41
  1174  000042                     	ds	2
  1175  000044                     vfpfcnvrt@ap:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x43
  1179  000044                     	ds	1
  1180  000045                     ??_roundf:
  1181                           
  1182                           ; 1 bytes @ 0x44
  1183  000045                     	ds	1
  1184  000046                     ??_vfpfcnvrt:
  1185                           
  1186                           ; 1 bytes @ 0x45
  1187  000046                     	ds	2
  1188  000048                     vfpfcnvrt@ll:
  1189                           	callstack 0
  1190                           
  1191                           ; 8 bytes @ 0x47
  1192  000048                     	ds	1
  1193  000049                     _roundf$3238:
  1194                           	callstack 0
  1195                           
  1196                           ; 4 bytes @ 0x48
  1197  000049                     	ds	4
  1198  00004D                     roundf@e:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x4C
  1202  00004D                     	ds	2
  1203  00004F                     _roundf$3237:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x4E
  1207  00004F                     	ds	1
  1208  000050                     ?_vfprintf:
  1209                           	callstack 0
  1210  000050                     vfprintf@fp:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x4F
  1214  000050                     	ds	2
  1215  000052                     vfprintf@fmt:
  1216                           	callstack 0
  1217                           
  1218                           ; 2 bytes @ 0x51
  1219  000052                     	ds	1
  1220  000053                     roundf@u:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x52
  1224  000053                     	ds	1
  1225  000054                     vfprintf@ap:
  1226                           	callstack 0
  1227                           
  1228                           ; 2 bytes @ 0x53
  1229  000054                     	ds	2
  1230  000056                     vfprintf@cfmt:
  1231                           	callstack 0
  1232                           
  1233                           ; 2 bytes @ 0x55
  1234  000056                     	ds	1
  1235  000057                     roundf@y:
  1236                           	callstack 0
  1237                           
  1238                           ; 4 bytes @ 0x56
  1239  000057                     	ds	1
  1240  000058                     color_display@m:
  1241                           	callstack 0
  1242  000058                     goback@mL:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x57
  1246  000058                     	ds	2
  1247  00005A                     color_data_collection@m:
  1248                           	callstack 0
  1249  00005A                     goback@mR:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x59
  1253  00005A                     	ds	1
  1254  00005B                     ?___fltol:
  1255                           	callstack 0
  1256  00005B                     ___fltol@f1:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x5A
  1260  00005B                     	ds	1
  1261  00005C                     ??_goback:
  1262  00005C                     ??_color_data_collection:
  1263                           
  1264                           ; 1 bytes @ 0x5B
  1265  00005C                     	ds	2
  1266  00005E                     action@color:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x5D
  1270  00005E                     	ds	1
  1271  00005F                     
  1272                           ; 1 bytes @ 0x5E
  1273 ;;
  1274 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1275 ;;
  1276 ;; *************** function _main *****************
  1277 ;; Defined at:
  1278 ;;		line 29 in file "main.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  white          26   19[BANK1 ] struct white_card
  1283 ;;  motorR         10   55[BANK1 ] struct DC_motor
  1284 ;;  motorL         10   45[BANK1 ] struct DC_motor
  1285 ;;  rgb             8   11[BANK1 ] struct color_rgb
  1286 ;;  amb             8    0[BANK1 ] struct color_rgb
  1287 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1288 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Locals:         0       0      65       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Totals:         0       2      65       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;Total ram usage:       67 bytes
  1303 ;; Hardware stack levels required when called: 12
  1304 ;; This function calls:
  1305 ;;		_I2C_2_Master_Init
  1306 ;;		_Interrupts_init
  1307 ;;		_Timer0_init
  1308 ;;		_action
  1309 ;;		_amb_light_measure
  1310 ;;		_buggylight_init
  1311 ;;		_calibrate_white
  1312 ;;		_color_click_init
  1313 ;;		_color_predict
  1314 ;;		_detect_color
  1315 ;;		_distance_measure
  1316 ;;		_fullSpeedAhead
  1317 ;;		_initDCmotorsPWM
  1318 ;;		_initDCmotors_parameter
  1319 ;;		_initUSART4
  1320 ;;		_pin_init
  1321 ;;		_stop
  1322 ;;		_test_function
  1323 ;;		_verify_color
  1324 ;; This function is called by:
  1325 ;;		Startup code after reset
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text0
  1330  003DBA                     __ptext0:
  1331                           	callstack 0
  1332  003DBA                     _main:
  1333                           	callstack 19
  1334  003DBA                     
  1335                           ;main.c: 32:     I2C_2_Master_Init();
  1336  003DBA  EC6A  F02B         	call	_I2C_2_Master_Init	;wreg free
  1337  003DBE                     
  1338                           ;main.c: 33:     color_click_init();
  1339  003DBE  EC21  F02B         	call	_color_click_init	;wreg free
  1340  003DC2                     
  1341                           ;main.c: 34:     initDCmotorsPWM(199);
  1342  003DC2  0E00               	movlw	0
  1343  003DC4  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1344  003DC6  0EC7               	movlw	199
  1345  003DC8  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1346  003DCA  EC2D  F02A         	call	_initDCmotorsPWM	;wreg free
  1347  003DCE                     
  1348                           ;main.c: 35:     buggylight_init();
  1349  003DCE  EC40  F02C         	call	_buggylight_init	;wreg free
  1350  003DD2                     
  1351                           ;main.c: 36:     initUSART4();
  1352  003DD2  EC16  F02C         	call	_initUSART4	;wreg free
  1353  003DD6                     
  1354                           ;main.c: 37:     Timer0_init();
  1355  003DD6  EC25  F02C         	call	_Timer0_init	;wreg free
  1356  003DDA                     
  1357                           ;main.c: 38:     Interrupts_init();
  1358  003DDA  EC51  F02C         	call	_Interrupts_init	;wreg free
  1359  003DDE                     
  1360                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1361  003DDE  ECF6  F02B         	call	_pin_init	;wreg free
  1362  003DE2                     
  1363                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1364  003DE2  0EEB               	movlw	low main@motorL
  1365  003DE4  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1366  003DE6  0E01               	movlw	high main@motorL
  1367  003DE8  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1368  003DEA  0EF5               	movlw	low main@motorR
  1369  003DEC  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1370  003DEE  0E01               	movlw	high main@motorR
  1371  003DF0  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1372  003DF2  ECFF  F024         	call	_initDCmotors_parameter	;wreg free
  1373  003DF6                     
  1374                           ;main.c: 49:     unsigned char stop_signal = 0;
  1375  003DF6  0E00               	movlw	0
  1376  003DF8  0101               	movlb	1	; () banked
  1377  003DFA  6FC8               	movwf	main@stop_signal& (0+255),b
  1378  003DFC                     
  1379                           ; BSR set to: 1
  1380                           ;main.c: 54:         calibrate_white(&white);
  1381  003DFC  0ED1               	movlw	low main@white
  1382  003DFE  6E0C               	movwf	calibrate_white@w^0,c
  1383  003E00  0E01               	movlw	high main@white
  1384  003E02  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1385  003E04  EC6B  F01A         	call	_calibrate_white	;wreg free
  1386  003E08                     
  1387                           ;main.c: 55:         amb_light = amb_light_measure(&amb);
  1388  003E08  0EBE               	movlw	low main@amb
  1389  003E0A  0100               	movlb	0	; () banked
  1390  003E0C  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1391  003E0E  0E01               	movlw	high main@amb
  1392  003E10  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1393  003E12  EC65  F023         	call	_amb_light_measure	;wreg free
  1394  003E16  C06A  F1C6         	movff	?_amb_light_measure,main@amb_light
  1395  003E1A  C06B  F1C7         	movff	?_amb_light_measure+1,main@amb_light+1
  1396  003E1E                     l5531:
  1397                           
  1398                           ;main.c: 66:             T0CON0bits.T0EN=1;
  1399  003E1E  8ED5               	bsf	213,7,c	;volatile
  1400  003E20                     
  1401                           ;main.c: 67:             start_move = second;
  1402  003E20  C19A  F198         	movff	_second,_start_move
  1403  003E24  C19B  F199         	movff	_second+1,_start_move+1
  1404                           
  1405                           ;main.c: 68:             while (stop_signal == 0){
  1406  003E28  EF31  F01F         	goto	l5539
  1407  003E2C                     l5535:
  1408                           
  1409                           ; BSR set to: 1
  1410                           ;main.c: 69:                 fullSpeedAhead(&motorL, &motorR);
  1411  003E2C  0EEB               	movlw	low main@motorL
  1412  003E2E  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1413  003E30  0E01               	movlw	high main@motorL
  1414  003E32  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1415  003E34  0EF5               	movlw	low main@motorR
  1416  003E36  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1417  003E38  0E01               	movlw	high main@motorR
  1418  003E3A  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1419  003E3C  ECB3  F027         	call	_fullSpeedAhead	;wreg free
  1420  003E40                     
  1421                           ;main.c: 70:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1422  003E40  0EEB               	movlw	low main@motorL
  1423  003E42  0100               	movlb	0	; () banked
  1424  003E44  6F6A               	movwf	distance_measure@mL& (0+255),b
  1425  003E46  0E01               	movlw	high main@motorL
  1426  003E48  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1427  003E4A  0EF5               	movlw	low main@motorR
  1428  003E4C  6F6C               	movwf	distance_measure@mR& (0+255),b
  1429  003E4E  0E01               	movlw	high main@motorR
  1430  003E50  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1431  003E52  C1C6  F06E         	movff	main@amb_light,distance_measure@amb_light
  1432  003E56  C1C7  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1433  003E5A  ECCD  F025         	call	_distance_measure	;wreg free
  1434  003E5E  0101               	movlb	1	; () banked
  1435  003E60  6FC8               	movwf	main@stop_signal& (0+255),b
  1436  003E62                     l5539:
  1437                           
  1438                           ;main.c: 68:             while (stop_signal == 0){
  1439  003E62  0101               	movlb	1	; () banked
  1440  003E64  51C8               	movf	main@stop_signal& (0+255),w,b
  1441  003E66  B4D8               	btfsc	status,2,c
  1442  003E68  EF38  F01F         	goto	u5601
  1443  003E6C  EF3A  F01F         	goto	u5600
  1444  003E70                     u5601:
  1445  003E70  EF16  F01F         	goto	l5535
  1446  003E74                     u5600:
  1447  003E74                     
  1448                           ; BSR set to: 1
  1449                           ;main.c: 72:             T0CON0bits.T0EN=0;
  1450  003E74  9ED5               	bcf	213,7,c	;volatile
  1451                           
  1452                           ;main.c: 73:             stop_move = second;
  1453  003E76  C19A  F196         	movff	_second,_stop_move
  1454  003E7A  C19B  F197         	movff	_second+1,_stop_move+1
  1455  003E7E                     
  1456                           ; BSR set to: 1
  1457                           ;main.c: 74:             memory[array_index] = (stop_move-start_move);
  1458  003E7E  5198               	movf	_start_move& (0+255),w,b
  1459  003E80  5D96               	subwf	_stop_move& (0+255),w,b
  1460  003E82  0100               	movlb	0	; () banked
  1461  003E84  6FF6               	movwf	??_main& (0+255),b
  1462  003E86  0101               	movlb	1	; () banked
  1463  003E88  5199               	movf	(_start_move+1)& (0+255),w,b
  1464  003E8A  5997               	subwfb	(_stop_move+1)& (0+255),w,b
  1465  003E8C  0100               	movlb	0	; () banked
  1466  003E8E  6FF7               	movwf	(??_main+1)& (0+255),b
  1467  003E90  0101               	movlb	1	; () banked
  1468  003E92  519D               	movf	_array_index& (0+255),w,b
  1469  003E94  0D02               	mullw	2
  1470  003E96  0E3C               	movlw	low _memory
  1471  003E98  24F3               	addwf	243,w,c
  1472  003E9A  6ED9               	movwf	fsr2l,c
  1473  003E9C  0E01               	movlw	high _memory
  1474  003E9E  20F4               	addwfc	prodh,w,c
  1475  003EA0  6EDA               	movwf	fsr2h,c
  1476  003EA2  C0F6  FFDE         	movff	??_main,postinc2
  1477  003EA6  C0F7  FFDD         	movff	??_main+1,postdec2
  1478  003EAA                     
  1479                           ; BSR set to: 1
  1480                           ;main.c: 75:             array_index++;
  1481  003EAA  2B9D               	incf	_array_index& (0+255),f,b
  1482  003EAC                     
  1483                           ; BSR set to: 1
  1484                           ;main.c: 76:             color_predict(stop_move-start_move);
  1485  003EAC  5198               	movf	_start_move& (0+255),w,b
  1486  003EAE  5D96               	subwf	_stop_move& (0+255),w,b
  1487  003EB0  EC53  F02B         	call	_color_predict
  1488  003EB4                     
  1489                           ;main.c: 77:             color_predict(array_index);
  1490  003EB4  0101               	movlb	1	; () banked
  1491  003EB6  519D               	movf	_array_index& (0+255),w,b
  1492  003EB8  EC53  F02B         	call	_color_predict
  1493  003EBC                     
  1494                           ;main.c: 78:             color_predict(200);
  1495  003EBC  0EC8               	movlw	200
  1496  003EBE  EC53  F02B         	call	_color_predict
  1497  003EC2                     
  1498                           ;main.c: 80:             stop(&motorL, &motorR);
  1499  003EC2  0EEB               	movlw	low main@motorL
  1500  003EC4  6E1A               	movwf	stop@mL^0,c
  1501  003EC6  0E01               	movlw	high main@motorL
  1502  003EC8  6E1B               	movwf	(stop@mL+1)^0,c
  1503  003ECA  0EF5               	movlw	low main@motorR
  1504  003ECC  6E1C               	movwf	stop@mR^0,c
  1505  003ECE  0E01               	movlw	high main@motorR
  1506  003ED0  6E1D               	movwf	(stop@mR+1)^0,c
  1507  003ED2  EC55  F027         	call	_stop	;wreg free
  1508  003ED6                     
  1509                           ;main.c: 81:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1510  003ED6  0E52               	movlw	82
  1511  003ED8  0100               	movlb	0	; () banked
  1512  003EDA  6FF7               	movwf	(??_main+1)& (0+255),b
  1513  003EDC  0E2B               	movlw	43
  1514  003EDE  6FF6               	movwf	??_main& (0+255),b
  1515  003EE0  0E00               	movlw	0
  1516  003EE2                     u5687:
  1517  003EE2  2EE8               	decfsz	wreg,f,c
  1518  003EE4  D7FE               	bra	u5687
  1519  003EE6  2FF6               	decfsz	??_main& (0+255),f,b
  1520  003EE8  D7FC               	bra	u5687
  1521  003EEA  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1522  003EEC  D7FA               	bra	u5687
  1523  003EEE  F000               	nop	
  1524  003EF0                     
  1525                           ;main.c: 82:             color = detect_color(&rgb, &white);
  1526  003EF0  0EC9               	movlw	low main@rgb
  1527  003EF2  0100               	movlb	0	; () banked
  1528  003EF4  6F71               	movwf	detect_color@m& (0+255),b
  1529  003EF6  0E01               	movlw	high main@rgb
  1530  003EF8  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1531  003EFA  0ED1               	movlw	low main@white
  1532  003EFC  6F73               	movwf	detect_color@w& (0+255),b
  1533  003EFE  0E01               	movlw	high main@white
  1534  003F00  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1535  003F02  EC0A  F007         	call	_detect_color	;wreg free
  1536  003F06  0101               	movlb	1	; () banked
  1537  003F08  6F9C               	movwf	_color& (0+255),b
  1538  003F0A                     
  1539                           ; BSR set to: 1
  1540                           ;main.c: 83:             color = verify_color(color, &rgb, &white);
  1541  003F0A  0EC9               	movlw	low main@rgb
  1542  003F0C  0100               	movlb	0	; () banked
  1543  003F0E  6F90               	movwf	verify_color@m& (0+255),b
  1544  003F10  0E01               	movlw	high main@rgb
  1545  003F12  6F91               	movwf	(verify_color@m+1)& (0+255),b
  1546  003F14  0ED1               	movlw	low main@white
  1547  003F16  6F92               	movwf	verify_color@w& (0+255),b
  1548  003F18  0E01               	movlw	high main@white
  1549  003F1A  6F93               	movwf	(verify_color@w+1)& (0+255),b
  1550  003F1C  0101               	movlb	1	; () banked
  1551  003F1E  519C               	movf	_color& (0+255),w,b
  1552  003F20  ECFD  F027         	call	_verify_color
  1553  003F24  0101               	movlb	1	; () banked
  1554  003F26  6F9C               	movwf	_color& (0+255),b
  1555  003F28                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 86:             action(color, &motorL, &motorR);
  1558  003F28  0EEB               	movlw	low main@motorL
  1559  003F2A  0100               	movlb	0	; () banked
  1560  003F2C  6FE0               	movwf	action@mL& (0+255),b
  1561  003F2E  0E01               	movlw	high main@motorL
  1562  003F30  6FE1               	movwf	(action@mL+1)& (0+255),b
  1563  003F32  0EF5               	movlw	low main@motorR
  1564  003F34  6FE2               	movwf	action@mR& (0+255),b
  1565  003F36  0E01               	movlw	high main@motorR
  1566  003F38  6FE3               	movwf	(action@mR+1)& (0+255),b
  1567  003F3A  0101               	movlb	1	; () banked
  1568  003F3C  519C               	movf	_color& (0+255),w,b
  1569  003F3E  ECAF  F017         	call	_action
  1570  003F42                     
  1571                           ;main.c: 87:             color = 0;
  1572  003F42  0E00               	movlw	0
  1573  003F44  0101               	movlb	1	; () banked
  1574  003F46  6F9C               	movwf	_color& (0+255),b
  1575  003F48                     
  1576                           ; BSR set to: 1
  1577                           ;main.c: 88:             stop_signal = 0;
  1578  003F48  0E00               	movlw	0
  1579  003F4A  6FC8               	movwf	main@stop_signal& (0+255),b
  1580  003F4C  EF0F  F01F         	goto	l5531
  1581  003F50  EF14  F000         	goto	start
  1582  003F54                     __end_of_main:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _verify_color *****************
  1586 ;; Defined at:
  1587 ;;		line 359 in file "color.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  color           1    wreg     unsigned char 
  1590 ;;  m               2   48[BANK0 ] PTR struct color_rgb
  1591 ;;		 -> main@rgb(8), 
  1592 ;;  w               2   50[BANK0 ] PTR struct white_card
  1593 ;;		 -> main@white(26), 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  color           1   56[BANK0 ] unsigned char 
  1596 ;;  color2          2   54[BANK0 ] unsigned int 
  1597 ;;  color3          2    0        unsigned int 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      unsigned char 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;Total ram usage:        9 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 6
  1614 ;; This function calls:
  1615 ;;		_detect_color
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text1
  1622  004FFA                     __ptext1:
  1623                           	callstack 0
  1624  004FFA                     _verify_color:
  1625                           	callstack 24
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;incstack = 0
  1629                           ;verify_color@color stored from wreg
  1630  004FFA  0100               	movlb	0	; () banked
  1631  004FFC  6F98               	movwf	verify_color@color& (0+255),b
  1632  004FFE                     
  1633                           ;color.c: 359: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 360: {;color.c: 361:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1634  004FFE  0E05               	movlw	5
  1635  005000  0100               	movlb	0	; () banked
  1636  005002  6F95               	movwf	(??_verify_color+1)& (0+255),b
  1637  005004  0E0F               	movlw	15
  1638  005006  6F94               	movwf	??_verify_color& (0+255),b
  1639  005008  0EF1               	movlw	241
  1640  00500A                     u5697:
  1641  00500A  2EE8               	decfsz	wreg,f,c
  1642  00500C  D7FE               	bra	u5697
  1643  00500E  2F94               	decfsz	??_verify_color& (0+255),f,b
  1644  005010  D7FC               	bra	u5697
  1645  005012  2F95               	decfsz	(??_verify_color+1)& (0+255),f,b
  1646  005014  D7FA               	bra	u5697
  1647  005016                     
  1648                           ;color.c: 362:     unsigned int color2, color3;;color.c: 363:     color2 = detect_color(
      +                          m,w);
  1649  005016  C090  F071         	movff	verify_color@m,detect_color@m
  1650  00501A  C091  F072         	movff	verify_color@m+1,detect_color@m+1
  1651  00501E  C092  F073         	movff	verify_color@w,detect_color@w
  1652  005022  C093  F074         	movff	verify_color@w+1,detect_color@w+1
  1653  005026  EC0A  F007         	call	_detect_color	;wreg free
  1654  00502A  0100               	movlb	0	; () banked
  1655  00502C  6F94               	movwf	??_verify_color& (0+255),b
  1656  00502E  5194               	movf	??_verify_color& (0+255),w,b
  1657  005030  6F96               	movwf	verify_color@color2& (0+255),b
  1658  005032  6B97               	clrf	(verify_color@color2+1)& (0+255),b
  1659  005034                     
  1660                           ; BSR set to: 0
  1661                           ;color.c: 364:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1662  005034  0E05               	movlw	5
  1663  005036  0100               	movlb	0	; () banked
  1664  005038  6F95               	movwf	(??_verify_color+1)& (0+255),b
  1665  00503A  0E0F               	movlw	15
  1666  00503C  6F94               	movwf	??_verify_color& (0+255),b
  1667  00503E  0EF1               	movlw	241
  1668  005040                     u5707:
  1669  005040  2EE8               	decfsz	wreg,f,c
  1670  005042  D7FE               	bra	u5707
  1671  005044  2F94               	decfsz	??_verify_color& (0+255),f,b
  1672  005046  D7FC               	bra	u5707
  1673  005048  2F95               	decfsz	(??_verify_color+1)& (0+255),f,b
  1674  00504A  D7FA               	bra	u5707
  1675  00504C                     
  1676                           ;color.c: 366:     if (color == color2){return color;}
  1677  00504C  0100               	movlb	0	; () banked
  1678  00504E  5198               	movf	verify_color@color& (0+255),w,b
  1679  005050  6F94               	movwf	??_verify_color& (0+255),b
  1680  005052  6B95               	clrf	(??_verify_color+1)& (0+255),b
  1681  005054  5196               	movf	verify_color@color2& (0+255),w,b
  1682  005056  1994               	xorwf	??_verify_color& (0+255),w,b
  1683  005058  E107               	bnz	u5351
  1684  00505A  5197               	movf	(verify_color@color2+1)& (0+255),w,b
  1685  00505C  1995               	xorwf	(??_verify_color+1)& (0+255),w,b
  1686  00505E  A4D8               	btfss	status,2,c
  1687  005060  EF34  F028         	goto	u5351
  1688  005064  EF36  F028         	goto	u5350
  1689  005068                     u5351:
  1690  005068  EF39  F028         	goto	l5283
  1691  00506C                     u5350:
  1692  00506C                     
  1693                           ; BSR set to: 0
  1694  00506C  5198               	movf	verify_color@color& (0+255),w,b
  1695  00506E  EF3A  F028         	goto	l173
  1696  005072                     l5283:
  1697                           
  1698                           ; BSR set to: 0
  1699                           ;color.c: 369:         return color;}
  1700  005072  0E00               	movlw	0
  1701  005074                     l173:
  1702                           
  1703                           ; BSR set to: 0
  1704  005074  0012               	return		;funcret
  1705  005076                     __end_of_verify_color:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _test_function *****************
  1709 ;; Defined at:
  1710 ;;		line 16 in file "test_and_calibration.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;  test_code       1    wreg     unsigned char 
  1713 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1714 ;;		 -> main@rgb(8), 
  1715 ;;  w               2  136[BANK0 ] PTR struct white_card
  1716 ;;		 -> main@white(26), 
  1717 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1718 ;;		 -> main@motorL(10), 
  1719 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1720 ;;		 -> main@motorR(10), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  test_code       1  149[BANK0 ] unsigned char 
  1723 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1724 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1725 ;;  color           1  147[BANK0 ] unsigned char 
  1726 ;;  complete        1  146[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1736 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1737 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;Total ram usage:       16 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 11
  1743 ;; This function calls:
  1744 ;;		_LED_C
  1745 ;;		_amb_light_measure
  1746 ;;		_calibrate_white
  1747 ;;		_color_data_collection
  1748 ;;		_color_display
  1749 ;;		_color_predict
  1750 ;;		_detect_color
  1751 ;;		_distance_measure
  1752 ;;		_fullSpeedAhead
  1753 ;;		_read_color
  1754 ;;		_stop
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text2
  1761  003F54                     __ptext2:
  1762                           	callstack 0
  1763  003F54                     _test_function:
  1764                           	callstack 19
  1765                           
  1766                           ; BSR set to: 0
  1767                           ;incstack = 0
  1768                           ;test_function@test_code stored from wreg
  1769  003F54  0100               	movlb	0	; () banked
  1770  003F56  6FF5               	movwf	test_function@test_code& (0+255),b
  1771  003F58                     
  1772                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1773  003F58  0E00               	movlw	0
  1774  003F5A  0100               	movlb	0	; () banked
  1775  003F5C  6FF2               	movwf	test_function@complete& (0+255),b
  1776                           
  1777                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1778  003F5E  0E00               	movlw	0
  1779  003F60  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1780                           
  1781                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1782  003F62  0E00               	movlw	0
  1783  003F64  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1784  003F66  0E00               	movlw	0
  1785  003F68  6FF0               	movwf	test_function@amb_light& (0+255),b
  1786  003F6A                     
  1787                           ; BSR set to: 0
  1788                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1789  003F6A  0E02               	movlw	2
  1790  003F6C  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1791  003F6E  A4D8               	btfss	status,2,c
  1792  003F70  EFBC  F01F         	goto	u5381
  1793  003F74  EFBE  F01F         	goto	u5380
  1794  003F78                     u5381:
  1795  003F78  EFC4  F01F         	goto	l5343
  1796  003F7C                     u5380:
  1797  003F7C                     
  1798                           ; BSR set to: 0
  1799  003F7C  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1800  003F80  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1801  003F84  EC6B  F01A         	call	_calibrate_white	;wreg free
  1802  003F88                     l5343:
  1803                           
  1804                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1805  003F88  0E04               	movlw	4
  1806  003F8A  0100               	movlb	0	; () banked
  1807  003F8C  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1808  003F8E  A4D8               	btfss	status,2,c
  1809  003F90  EFCC  F01F         	goto	u5391
  1810  003F94  EFCE  F01F         	goto	u5390
  1811  003F98                     u5391:
  1812  003F98  EFD8  F01F         	goto	l5347
  1813  003F9C                     u5390:
  1814  003F9C                     
  1815                           ; BSR set to: 0
  1816  003F9C  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1817  003FA0  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1818  003FA4  EC65  F023         	call	_amb_light_measure	;wreg free
  1819  003FA8  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1820  003FAC  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1821  003FB0                     l5347:
  1822                           
  1823                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1824  003FB0  0100               	movlb	0	; () banked
  1825  003FB2  05F5               	decf	test_function@test_code& (0+255),w,b
  1826  003FB4  A4D8               	btfss	status,2,c
  1827  003FB6  EFDF  F01F         	goto	u5401
  1828  003FBA  EFE1  F01F         	goto	u5400
  1829  003FBE                     u5401:
  1830  003FBE  EFEF  F01F         	goto	l5355
  1831  003FC2                     u5400:
  1832  003FC2                     
  1833                           ; BSR set to: 0
  1834                           ;test_and_calibration.c: 29:             LED_C();
  1835  003FC2  ECE6  F02B         	call	_LED_C	;wreg free
  1836  003FC6                     
  1837                           ;test_and_calibration.c: 30:             read_color(m);
  1838  003FC6  C0E6  F00C         	movff	test_function@m,read_color@m
  1839  003FCA  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  1840  003FCE  ECA4  F028         	call	_read_color	;wreg free
  1841  003FD2                     
  1842                           ;test_and_calibration.c: 31:             color_display(m);
  1843  003FD2  C0E6  F058         	movff	test_function@m,color_display@m
  1844  003FD6  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  1845  003FDA  EC3B  F028         	call	_color_display	;wreg free
  1846  003FDE                     l5355:
  1847                           
  1848                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1849  003FDE  0E02               	movlw	2
  1850  003FE0  0100               	movlb	0	; () banked
  1851  003FE2  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1852  003FE4  A4D8               	btfss	status,2,c
  1853  003FE6  EFF7  F01F         	goto	u5411
  1854  003FEA  EFF9  F01F         	goto	u5410
  1855  003FEE                     u5411:
  1856  003FEE  EF08  F020         	goto	l5361
  1857  003FF2                     u5410:
  1858  003FF2                     
  1859                           ; BSR set to: 0
  1860                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1861  003FF2  C0E6  F071         	movff	test_function@m,detect_color@m
  1862  003FF6  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  1863  003FFA  C0E8  F073         	movff	test_function@w,detect_color@w
  1864  003FFE  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  1865  004002  EC0A  F007         	call	_detect_color	;wreg free
  1866  004006  0100               	movlb	0	; () banked
  1867  004008  6FF3               	movwf	test_function@color& (0+255),b
  1868  00400A                     
  1869                           ; BSR set to: 0
  1870                           ;test_and_calibration.c: 36:             color_predict(color);
  1871  00400A  51F3               	movf	test_function@color& (0+255),w,b
  1872  00400C  EC53  F02B         	call	_color_predict
  1873  004010                     l5361:
  1874                           
  1875                           ;test_and_calibration.c: 39:         if (test_code == 3){
  1876  004010  0E03               	movlw	3
  1877  004012  0100               	movlb	0	; () banked
  1878  004014  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1879  004016  A4D8               	btfss	status,2,c
  1880  004018  EF10  F020         	goto	u5421
  1881  00401C  EF12  F020         	goto	u5420
  1882  004020                     u5421:
  1883  004020  EF25  F020         	goto	l5371
  1884  004024                     u5420:
  1885  004024  EF1D  F020         	goto	l5369
  1886  004028                     l5365:
  1887                           
  1888                           ; BSR set to: 0
  1889                           ;test_and_calibration.c: 41:                 color_data_collection(m);
  1890  004028  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  1891  00402C  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1892  004030  EC4E  F01C         	call	_color_data_collection	;wreg free
  1893  004034                     
  1894                           ;test_and_calibration.c: 42:                 complete = 1;
  1895  004034  0E01               	movlw	1
  1896  004036  0100               	movlb	0	; () banked
  1897  004038  6FF2               	movwf	test_function@complete& (0+255),b
  1898  00403A                     l5369:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;test_and_calibration.c: 40:             while (complete == 0){
  1902  00403A  51F2               	movf	test_function@complete& (0+255),w,b
  1903  00403C  B4D8               	btfsc	status,2,c
  1904  00403E  EF23  F020         	goto	u5431
  1905  004042  EF25  F020         	goto	u5430
  1906  004046                     u5431:
  1907  004046  EF14  F020         	goto	l5365
  1908  00404A                     u5430:
  1909  00404A                     l5371:
  1910                           
  1911                           ; BSR set to: 0
  1912                           ;test_and_calibration.c: 46:         if (test_code == 4){
  1913  00404A  0E04               	movlw	4
  1914  00404C  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1915  00404E  A4D8               	btfss	status,2,c
  1916  004050  EF2C  F020         	goto	u5441
  1917  004054  EF2E  F020         	goto	u5440
  1918  004058                     u5441:
  1919  004058  EFD8  F01F         	goto	l5347
  1920  00405C                     u5440:
  1921  00405C  EF4A  F020         	goto	l5379
  1922  004060                     l5375:
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;test_and_calibration.c: 48:                 fullSpeedAhead(mL, mR);
  1926  004060  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1927  004064  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1928  004068  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1929  00406C  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1930  004070  ECB3  F027         	call	_fullSpeedAhead	;wreg free
  1931  004074                     
  1932                           ;test_and_calibration.c: 49:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1933  004074  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  1934  004078  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1935  00407C  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  1936  004080  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1937  004084  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1938  004088  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1939  00408C  ECCD  F025         	call	_distance_measure	;wreg free
  1940  004090  0100               	movlb	0	; () banked
  1941  004092  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1942  004094                     l5379:
  1943                           
  1944                           ; BSR set to: 0
  1945                           ;test_and_calibration.c: 47:             while (stop_signal == 0){
  1946  004094  51F4               	movf	test_function@stop_signal& (0+255),w,b
  1947  004096  B4D8               	btfsc	status,2,c
  1948  004098  EF50  F020         	goto	u5451
  1949  00409C  EF52  F020         	goto	u5450
  1950  0040A0                     u5451:
  1951  0040A0  EF30  F020         	goto	l5375
  1952  0040A4                     u5450:
  1953  0040A4                     
  1954                           ; BSR set to: 0
  1955                           ;test_and_calibration.c: 51:             stop(mL, mR);
  1956  0040A4  C0EA  F01A         	movff	test_function@mL,stop@mL
  1957  0040A8  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  1958  0040AC  C0EC  F01C         	movff	test_function@mR,stop@mR
  1959  0040B0  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  1960  0040B4  EC55  F027         	call	_stop	;wreg free
  1961  0040B8                     
  1962                           ;test_and_calibration.c: 52:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1963  0040B8  0E52               	movlw	82
  1964  0040BA  0100               	movlb	0	; () banked
  1965  0040BC  6FEF               	movwf	(??_test_function+1)& (0+255),b
  1966  0040BE  0E2B               	movlw	43
  1967  0040C0  6FEE               	movwf	??_test_function& (0+255),b
  1968  0040C2  0E00               	movlw	0
  1969  0040C4                     u5717:
  1970  0040C4  2EE8               	decfsz	wreg,f,c
  1971  0040C6  D7FE               	bra	u5717
  1972  0040C8  2FEE               	decfsz	??_test_function& (0+255),f,b
  1973  0040CA  D7FC               	bra	u5717
  1974  0040CC  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  1975  0040CE  D7FA               	bra	u5717
  1976  0040D0  F000               	nop	
  1977  0040D2                     
  1978                           ;test_and_calibration.c: 53:             stop_signal = 0;
  1979  0040D2  0E00               	movlw	0
  1980  0040D4  0100               	movlb	0	; () banked
  1981  0040D6  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1982  0040D8  EFD8  F01F         	goto	l5347
  1983  0040DC  0012               	return		;funcret
  1984  0040DE                     __end_of_test_function:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _distance_measure *****************
  1988 ;; Defined at:
  1989 ;;		line 395 in file "color.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  1992 ;;		 -> main@motorL(10), 
  1993 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  1994 ;;		 -> main@motorR(10), 
  1995 ;;  amb_light       2   14[BANK0 ] unsigned int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  threshold       2   26[BANK0 ] unsigned int 
  1998 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  1999 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2000 ;;  stop            1   28[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      unsigned char 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2010 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2013 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2014 ;;Total ram usage:       19 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 5
  2017 ;; This function calls:
  2018 ;;		_LED_C
  2019 ;;		___flmul
  2020 ;;		___xxtofl
  2021 ;;		_color_read_Clear
  2022 ;;		_color_read_Green
  2023 ;;		_lroundf
  2024 ;; This function is called by:
  2025 ;;		_main
  2026 ;;		_test_function
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text3
  2031  004B9A                     __ptext3:
  2032                           	callstack 0
  2033  004B9A                     _distance_measure:
  2034                           	callstack 24
  2035  004B9A  0E00               	movlw	0
  2036  004B9C  0100               	movlb	0	; () banked
  2037  004B9E  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2038  004BA0  0E00               	movlw	0
  2039  004BA2  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2040                           
  2041                           ;color.c: 398:     unsigned char stop = 0;
  2042  004BA4  0E00               	movlw	0
  2043  004BA6  6F7C               	movwf	distance_measure@stop& (0+255),b
  2044                           
  2045                           ;color.c: 399:     unsigned int threshold = 0;
  2046  004BA8  0E00               	movlw	0
  2047  004BAA  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2048  004BAC  0E00               	movlw	0
  2049  004BAE  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2050  004BB0                     
  2051                           ; BSR set to: 0
  2052                           ;color.c: 400:     LED_C();
  2053  004BB0  ECE6  F02B         	call	_LED_C	;wreg free
  2054  004BB4                     
  2055                           ;color.c: 401:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2056  004BB4  0E09               	movlw	9
  2057  004BB6  0100               	movlb	0	; () banked
  2058  004BB8  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2059  004BBA  0E1E               	movlw	30
  2060  004BBC  6F70               	movwf	??_distance_measure& (0+255),b
  2061  004BBE  0EE4               	movlw	228
  2062  004BC0                     u5727:
  2063  004BC0  2EE8               	decfsz	wreg,f,c
  2064  004BC2  D7FE               	bra	u5727
  2065  004BC4  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2066  004BC6  D7FC               	bra	u5727
  2067  004BC8  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2068  004BCA  D7FA               	bra	u5727
  2069  004BCC  F000               	nop	
  2070  004BCE                     
  2071                           ;color.c: 402:     CC_amb = color_read_Clear();
  2072  004BCE  EC9F  F029         	call	_color_read_Clear	;wreg free
  2073  004BD2  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2074  004BD6  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2075  004BDA  EC4F  F029         	call	_color_read_Green	;wreg free
  2076  004BDE                     
  2077                           ;color.c: 404:     threshold = lroundf((float)amb_light * 1.05);
  2078  004BDE  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2079  004BE2  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2080  004BE6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2081  004BE8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2082  004BEA  0E00               	movlw	0
  2083  004BEC  EC29  F01D         	call	___xxtofl
  2084  004BF0  C001  F028         	movff	?___xxtofl,___flmul@b
  2085  004BF4  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2086  004BF8  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2087  004BFC  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2088  004C00  0E66               	movlw	102
  2089  004C02  6E2C               	movwf	___flmul@a^0,c
  2090  004C04  0E66               	movlw	102
  2091  004C06  6E2D               	movwf	(___flmul@a+1)^0,c
  2092  004C08  0E86               	movlw	134
  2093  004C0A  6E2E               	movwf	(___flmul@a+2)^0,c
  2094  004C0C  0E3F               	movlw	63
  2095  004C0E  6E2F               	movwf	(___flmul@a+3)^0,c
  2096  004C10  EC1A  F00F         	call	___flmul	;wreg free
  2097  004C14  C028  F074         	movff	?___flmul,_distance_measure$3236
  2098  004C18  C029  F075         	movff	?___flmul+1,_distance_measure$3236+1
  2099  004C1C  C02A  F076         	movff	?___flmul+2,_distance_measure$3236+2
  2100  004C20  C02B  F077         	movff	?___flmul+3,_distance_measure$3236+3
  2101  004C24                     
  2102                           ;color.c: 404:     threshold = lroundf((float)amb_light * 1.05);
  2103  004C24  C074  F066         	movff	_distance_measure$3236,lroundf@x
  2104  004C28  C075  F067         	movff	_distance_measure$3236+1,lroundf@x+1
  2105  004C2C  C076  F068         	movff	_distance_measure$3236+2,lroundf@x+2
  2106  004C30  C077  F069         	movff	_distance_measure$3236+3,lroundf@x+3
  2107  004C34  ECCD  F02A         	call	_lroundf	;wreg free
  2108  004C38  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2109  004C3C  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2110  004C40                     
  2111                           ;color.c: 407:     if (CC_amb >= threshold){stop = 1;}
  2112  004C40  0100               	movlb	0	; () banked
  2113  004C42  517A               	movf	distance_measure@threshold& (0+255),w,b
  2114  004C44  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2115  004C46  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2116  004C48  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2117  004C4A  A0D8               	btfss	status,0,c
  2118  004C4C  EF2A  F026         	goto	u5251
  2119  004C50  EF2C  F026         	goto	u5250
  2120  004C54                     u5251:
  2121  004C54  EF2E  F026         	goto	l180
  2122  004C58                     u5250:
  2123  004C58                     
  2124                           ; BSR set to: 0
  2125  004C58  0E01               	movlw	1
  2126  004C5A  6F7C               	movwf	distance_measure@stop& (0+255),b
  2127  004C5C                     l180:
  2128                           
  2129                           ; BSR set to: 0
  2130                           ;color.c: 408:     return stop;
  2131  004C5C  517C               	movf	distance_measure@stop& (0+255),w,b
  2132  004C5E                     
  2133                           ; BSR set to: 0
  2134  004C5E  0012               	return		;funcret
  2135  004C60                     __end_of_distance_measure:
  2136                           	callstack 0
  2137                           
  2138 ;; *************** function _detect_color *****************
  2139 ;; Defined at:
  2140 ;;		line 287 in file "color.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2143 ;;		 -> main@rgb(8), 
  2144 ;;  w               2   19[BANK0 ] PTR struct white_card
  2145 ;;		 -> main@white(26), 
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  BG              2   41[BANK0 ] unsigned int 
  2148 ;;  BB              2   39[BANK0 ] unsigned int 
  2149 ;;  BR              2   37[BANK0 ] unsigned int 
  2150 ;;  RR              2   35[BANK0 ] unsigned int 
  2151 ;;  GG              2   33[BANK0 ] unsigned int 
  2152 ;;  GR              2   31[BANK0 ] unsigned int 
  2153 ;;  RG              2   29[BANK0 ] unsigned int 
  2154 ;;  GB              2   27[BANK0 ] unsigned int 
  2155 ;;  RB              2   25[BANK0 ] unsigned int 
  2156 ;;  color           1   43[BANK0 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      unsigned char 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2166 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2167 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2168 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2169 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2170 ;;Total ram usage:       31 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 5
  2173 ;; This function calls:
  2174 ;;		_LED_B
  2175 ;;		_LED_G
  2176 ;;		_LED_R
  2177 ;;		___fldiv
  2178 ;;		___flmul
  2179 ;;		___xxtofl
  2180 ;;		_compare
  2181 ;;		_lroundf
  2182 ;;		_read_color
  2183 ;;		_toggle_light
  2184 ;; This function is called by:
  2185 ;;		_verify_color
  2186 ;;		_main
  2187 ;;		_test_function
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text4
  2192  000E14                     __ptext4:
  2193                           	callstack 0
  2194  000E14                     _detect_color:
  2195                           	callstack 24
  2196  000E14  0E00               	movlw	0
  2197  000E16  0100               	movlb	0	; () banked
  2198  000E18  6F7E               	movwf	(detect_color@RG+1)& (0+255),b
  2199  000E1A  0E00               	movlw	0
  2200  000E1C  6F7D               	movwf	detect_color@RG& (0+255),b
  2201  000E1E  0E00               	movlw	0
  2202  000E20  6F7A               	movwf	(detect_color@RB+1)& (0+255),b
  2203  000E22  0E00               	movlw	0
  2204  000E24  6F79               	movwf	detect_color@RB& (0+255),b
  2205  000E26  0E00               	movlw	0
  2206  000E28  6F80               	movwf	(detect_color@GR+1)& (0+255),b
  2207  000E2A  0E00               	movlw	0
  2208  000E2C  6F7F               	movwf	detect_color@GR& (0+255),b
  2209  000E2E  0E00               	movlw	0
  2210  000E30  6F82               	movwf	(detect_color@GG+1)& (0+255),b
  2211  000E32  0E00               	movlw	0
  2212  000E34  6F81               	movwf	detect_color@GG& (0+255),b
  2213  000E36  0E00               	movlw	0
  2214  000E38  6F7C               	movwf	(detect_color@GB+1)& (0+255),b
  2215  000E3A  0E00               	movlw	0
  2216  000E3C  6F7B               	movwf	detect_color@GB& (0+255),b
  2217  000E3E  0E00               	movlw	0
  2218  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  2219  000E42  0E00               	movlw	0
  2220  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  2221  000E46  0E00               	movlw	0
  2222  000E48  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  2223  000E4A  0E00               	movlw	0
  2224  000E4C  6F89               	movwf	detect_color@BG& (0+255),b
  2225  000E4E  0E00               	movlw	0
  2226  000E50  6F88               	movwf	(detect_color@BB+1)& (0+255),b
  2227  000E52  0E00               	movlw	0
  2228  000E54  6F87               	movwf	detect_color@BB& (0+255),b
  2229                           
  2230                           ;color.c: 292:     unsigned char color = 0;
  2231  000E56  0E00               	movlw	0
  2232  000E58  6F8B               	movwf	detect_color@color& (0+255),b
  2233  000E5A                     
  2234                           ; BSR set to: 0
  2235                           ;color.c: 294:     LED_R();
  2236  000E5A  ECA6  F02B         	call	_LED_R	;wreg free
  2237  000E5E                     
  2238                           ;color.c: 295:     read_color(m);
  2239  000E5E  C071  F00C         	movff	detect_color@m,read_color@m
  2240  000E62  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2241  000E66  ECA4  F028         	call	_read_color	;wreg free
  2242  000E6A                     
  2243                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2244  000E6A  C073  FFD9         	movff	detect_color@w,fsr2l
  2245  000E6E  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2246  000E72  CFDE F075          	movff	postinc2,??_detect_color
  2247  000E76  CFDD F076          	movff	postdec2,??_detect_color+1
  2248  000E7A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2249  000E7E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2250  000E82  6A03               	clrf	(___xxtofl@val+2)^0,c
  2251  000E84  6A04               	clrf	(___xxtofl@val+3)^0,c
  2252  000E86  0E00               	movlw	0
  2253  000E88  EC29  F01D         	call	___xxtofl
  2254  000E8C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2255  000E90  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2256  000E94  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2257  000E98  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2258  000E9C  C071  FFD9         	movff	detect_color@m,fsr2l
  2259  000EA0  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2260  000EA4  CFDE F077          	movff	postinc2,??_detect_color+2
  2261  000EA8  CFDD F078          	movff	postdec2,??_detect_color+3
  2262  000EAC  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2263  000EB0  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2264  000EB4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2265  000EB6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2266  000EB8  0E00               	movlw	0
  2267  000EBA  EC29  F01D         	call	___xxtofl
  2268  000EBE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2269  000EC2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2270  000EC6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2271  000ECA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2272  000ECE  EC06  F013         	call	___fldiv	;wreg free
  2273  000ED2  C00F  F028         	movff	?___fldiv,___flmul@b
  2274  000ED6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2275  000EDA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2276  000EDE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2277  000EE2  0E00               	movlw	0
  2278  000EE4  6E2C               	movwf	___flmul@a^0,c
  2279  000EE6  0E00               	movlw	0
  2280  000EE8  6E2D               	movwf	(___flmul@a+1)^0,c
  2281  000EEA  0EC8               	movlw	200
  2282  000EEC  6E2E               	movwf	(___flmul@a+2)^0,c
  2283  000EEE  0E42               	movlw	66
  2284  000EF0  6E2F               	movwf	(___flmul@a+3)^0,c
  2285  000EF2  EC1A  F00F         	call	___flmul	;wreg free
  2286  000EF6  C028  F08C         	movff	?___flmul,_detect_color$3235
  2287  000EFA  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2288  000EFE  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2289  000F02  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2290  000F06                     
  2291                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2292  000F06  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2293  000F0A  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2294  000F0E  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2295  000F12  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2296  000F16  ECCD  F02A         	call	_lroundf	;wreg free
  2297  000F1A  C066  F083         	movff	?_lroundf,detect_color@RR
  2298  000F1E  C067  F084         	movff	?_lroundf+1,detect_color@RR+1
  2299  000F22  0100               	movlb	0	; () banked
  2300  000F24  EE20 F002          	lfsr	2,2
  2301  000F28  5173               	movf	detect_color@w& (0+255),w,b
  2302  000F2A  26D9               	addwf	fsr2l,f,c
  2303  000F2C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2304  000F2E  22DA               	addwfc	fsr2h,f,c
  2305  000F30  CFDE F075          	movff	postinc2,??_detect_color
  2306  000F34  CFDD F076          	movff	postdec2,??_detect_color+1
  2307  000F38  C075  F001         	movff	??_detect_color,___xxtofl@val
  2308  000F3C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2309  000F40  6A03               	clrf	(___xxtofl@val+2)^0,c
  2310  000F42  6A04               	clrf	(___xxtofl@val+3)^0,c
  2311  000F44  0E00               	movlw	0
  2312  000F46  EC29  F01D         	call	___xxtofl
  2313  000F4A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2314  000F4E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2315  000F52  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2316  000F56  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2317  000F5A  0100               	movlb	0	; () banked
  2318  000F5C  EE20 F002          	lfsr	2,2
  2319  000F60  5171               	movf	detect_color@m& (0+255),w,b
  2320  000F62  26D9               	addwf	fsr2l,f,c
  2321  000F64  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2322  000F66  22DA               	addwfc	fsr2h,f,c
  2323  000F68  CFDE F077          	movff	postinc2,??_detect_color+2
  2324  000F6C  CFDD F078          	movff	postdec2,??_detect_color+3
  2325  000F70  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2326  000F74  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2327  000F78  6A03               	clrf	(___xxtofl@val+2)^0,c
  2328  000F7A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2329  000F7C  0E00               	movlw	0
  2330  000F7E  EC29  F01D         	call	___xxtofl
  2331  000F82  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2332  000F86  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2333  000F8A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2334  000F8E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2335  000F92  EC06  F013         	call	___fldiv	;wreg free
  2336  000F96  C00F  F028         	movff	?___fldiv,___flmul@b
  2337  000F9A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2338  000F9E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2339  000FA2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2340  000FA6  0E00               	movlw	0
  2341  000FA8  6E2C               	movwf	___flmul@a^0,c
  2342  000FAA  0E00               	movlw	0
  2343  000FAC  6E2D               	movwf	(___flmul@a+1)^0,c
  2344  000FAE  0EC8               	movlw	200
  2345  000FB0  6E2E               	movwf	(___flmul@a+2)^0,c
  2346  000FB2  0E42               	movlw	66
  2347  000FB4  6E2F               	movwf	(___flmul@a+3)^0,c
  2348  000FB6  EC1A  F00F         	call	___flmul	;wreg free
  2349  000FBA  C028  F08C         	movff	?___flmul,_detect_color$3235
  2350  000FBE  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2351  000FC2  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2352  000FC6  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2353  000FCA  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2354  000FCE  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2355  000FD2  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2356  000FD6  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2357  000FDA  ECCD  F02A         	call	_lroundf	;wreg free
  2358  000FDE  C066  F07D         	movff	?_lroundf,detect_color@RG
  2359  000FE2  C067  F07E         	movff	?_lroundf+1,detect_color@RG+1
  2360  000FE6  0100               	movlb	0	; () banked
  2361  000FE8  EE20 F004          	lfsr	2,4
  2362  000FEC  5173               	movf	detect_color@w& (0+255),w,b
  2363  000FEE  26D9               	addwf	fsr2l,f,c
  2364  000FF0  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2365  000FF2  22DA               	addwfc	fsr2h,f,c
  2366  000FF4  CFDE F075          	movff	postinc2,??_detect_color
  2367  000FF8  CFDD F076          	movff	postdec2,??_detect_color+1
  2368  000FFC  C075  F001         	movff	??_detect_color,___xxtofl@val
  2369  001000  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2370  001004  6A03               	clrf	(___xxtofl@val+2)^0,c
  2371  001006  6A04               	clrf	(___xxtofl@val+3)^0,c
  2372  001008  0E00               	movlw	0
  2373  00100A  EC29  F01D         	call	___xxtofl
  2374  00100E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2375  001012  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2376  001016  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2377  00101A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2378  00101E  0100               	movlb	0	; () banked
  2379  001020  EE20 F004          	lfsr	2,4
  2380  001024  5171               	movf	detect_color@m& (0+255),w,b
  2381  001026  26D9               	addwf	fsr2l,f,c
  2382  001028  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2383  00102A  22DA               	addwfc	fsr2h,f,c
  2384  00102C  CFDE F077          	movff	postinc2,??_detect_color+2
  2385  001030  CFDD F078          	movff	postdec2,??_detect_color+3
  2386  001034  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2387  001038  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2388  00103C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2389  00103E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2390  001040  0E00               	movlw	0
  2391  001042  EC29  F01D         	call	___xxtofl
  2392  001046  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2393  00104A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2394  00104E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2395  001052  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2396  001056  EC06  F013         	call	___fldiv	;wreg free
  2397  00105A  C00F  F028         	movff	?___fldiv,___flmul@b
  2398  00105E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2399  001062  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2400  001066  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2401  00106A  0E00               	movlw	0
  2402  00106C  6E2C               	movwf	___flmul@a^0,c
  2403  00106E  0E00               	movlw	0
  2404  001070  6E2D               	movwf	(___flmul@a+1)^0,c
  2405  001072  0EC8               	movlw	200
  2406  001074  6E2E               	movwf	(___flmul@a+2)^0,c
  2407  001076  0E42               	movlw	66
  2408  001078  6E2F               	movwf	(___flmul@a+3)^0,c
  2409  00107A  EC1A  F00F         	call	___flmul	;wreg free
  2410  00107E  C028  F08C         	movff	?___flmul,_detect_color$3235
  2411  001082  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2412  001086  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2413  00108A  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2414  00108E  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2415  001092  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2416  001096  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2417  00109A  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2418  00109E  ECCD  F02A         	call	_lroundf	;wreg free
  2419  0010A2                     
  2420                           ;color.c: 298:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2421  0010A2  0E05               	movlw	5
  2422  0010A4  0100               	movlb	0	; () banked
  2423  0010A6  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2424  0010A8  0E0F               	movlw	15
  2425  0010AA  6F75               	movwf	??_detect_color& (0+255),b
  2426  0010AC  0EF1               	movlw	241
  2427  0010AE                     u5737:
  2428  0010AE  2EE8               	decfsz	wreg,f,c
  2429  0010B0  D7FE               	bra	u5737
  2430  0010B2  2F75               	decfsz	??_detect_color& (0+255),f,b
  2431  0010B4  D7FC               	bra	u5737
  2432  0010B6  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2433  0010B8  D7FA               	bra	u5737
  2434  0010BA                     
  2435                           ;color.c: 300:     LED_G();
  2436  0010BA  ECC6  F02B         	call	_LED_G	;wreg free
  2437  0010BE                     
  2438                           ;color.c: 301:     read_color(m);
  2439  0010BE  C071  F00C         	movff	detect_color@m,read_color@m
  2440  0010C2  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2441  0010C6  ECA4  F028         	call	_read_color	;wreg free
  2442  0010CA                     
  2443                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2444  0010CA  0100               	movlb	0	; () banked
  2445  0010CC  EE20 F006          	lfsr	2,6
  2446  0010D0  5173               	movf	detect_color@w& (0+255),w,b
  2447  0010D2  26D9               	addwf	fsr2l,f,c
  2448  0010D4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2449  0010D6  22DA               	addwfc	fsr2h,f,c
  2450  0010D8  CFDE F075          	movff	postinc2,??_detect_color
  2451  0010DC  CFDD F076          	movff	postdec2,??_detect_color+1
  2452  0010E0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2453  0010E4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2454  0010E8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2455  0010EA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2456  0010EC  0E00               	movlw	0
  2457  0010EE  EC29  F01D         	call	___xxtofl
  2458  0010F2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2459  0010F6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2460  0010FA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2461  0010FE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2462  001102  C071  FFD9         	movff	detect_color@m,fsr2l
  2463  001106  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2464  00110A  CFDE F077          	movff	postinc2,??_detect_color+2
  2465  00110E  CFDD F078          	movff	postdec2,??_detect_color+3
  2466  001112  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2467  001116  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2468  00111A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2469  00111C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2470  00111E  0E00               	movlw	0
  2471  001120  EC29  F01D         	call	___xxtofl
  2472  001124  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2473  001128  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2474  00112C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2475  001130  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2476  001134  EC06  F013         	call	___fldiv	;wreg free
  2477  001138  C00F  F028         	movff	?___fldiv,___flmul@b
  2478  00113C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2479  001140  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2480  001144  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2481  001148  0E00               	movlw	0
  2482  00114A  6E2C               	movwf	___flmul@a^0,c
  2483  00114C  0E00               	movlw	0
  2484  00114E  6E2D               	movwf	(___flmul@a+1)^0,c
  2485  001150  0EC8               	movlw	200
  2486  001152  6E2E               	movwf	(___flmul@a+2)^0,c
  2487  001154  0E42               	movlw	66
  2488  001156  6E2F               	movwf	(___flmul@a+3)^0,c
  2489  001158  EC1A  F00F         	call	___flmul	;wreg free
  2490  00115C  C028  F08C         	movff	?___flmul,_detect_color$3235
  2491  001160  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2492  001164  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2493  001168  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2494  00116C                     
  2495                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2496  00116C  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2497  001170  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2498  001174  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2499  001178  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2500  00117C  ECCD  F02A         	call	_lroundf	;wreg free
  2501  001180  C066  F07F         	movff	?_lroundf,detect_color@GR
  2502  001184  C067  F080         	movff	?_lroundf+1,detect_color@GR+1
  2503  001188  0100               	movlb	0	; () banked
  2504  00118A  EE20 F008          	lfsr	2,8
  2505  00118E  5173               	movf	detect_color@w& (0+255),w,b
  2506  001190  26D9               	addwf	fsr2l,f,c
  2507  001192  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2508  001194  22DA               	addwfc	fsr2h,f,c
  2509  001196  CFDE F075          	movff	postinc2,??_detect_color
  2510  00119A  CFDD F076          	movff	postdec2,??_detect_color+1
  2511  00119E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2512  0011A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2513  0011A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2514  0011A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2515  0011AA  0E00               	movlw	0
  2516  0011AC  EC29  F01D         	call	___xxtofl
  2517  0011B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2518  0011B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2519  0011B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2520  0011BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2521  0011C0  0100               	movlb	0	; () banked
  2522  0011C2  EE20 F002          	lfsr	2,2
  2523  0011C6  5171               	movf	detect_color@m& (0+255),w,b
  2524  0011C8  26D9               	addwf	fsr2l,f,c
  2525  0011CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2526  0011CC  22DA               	addwfc	fsr2h,f,c
  2527  0011CE  CFDE F077          	movff	postinc2,??_detect_color+2
  2528  0011D2  CFDD F078          	movff	postdec2,??_detect_color+3
  2529  0011D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2530  0011DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2531  0011DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2532  0011E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2533  0011E2  0E00               	movlw	0
  2534  0011E4  EC29  F01D         	call	___xxtofl
  2535  0011E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2536  0011EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2537  0011F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2538  0011F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2539  0011F8  EC06  F013         	call	___fldiv	;wreg free
  2540  0011FC  C00F  F028         	movff	?___fldiv,___flmul@b
  2541  001200  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2542  001204  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2543  001208  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2544  00120C  0E00               	movlw	0
  2545  00120E  6E2C               	movwf	___flmul@a^0,c
  2546  001210  0E00               	movlw	0
  2547  001212  6E2D               	movwf	(___flmul@a+1)^0,c
  2548  001214  0EC8               	movlw	200
  2549  001216  6E2E               	movwf	(___flmul@a+2)^0,c
  2550  001218  0E42               	movlw	66
  2551  00121A  6E2F               	movwf	(___flmul@a+3)^0,c
  2552  00121C  EC1A  F00F         	call	___flmul	;wreg free
  2553  001220  C028  F08C         	movff	?___flmul,_detect_color$3235
  2554  001224  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2555  001228  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2556  00122C  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2557  001230  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2558  001234  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2559  001238  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2560  00123C  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2561  001240  ECCD  F02A         	call	_lroundf	;wreg free
  2562  001244  C066  F081         	movff	?_lroundf,detect_color@GG
  2563  001248  C067  F082         	movff	?_lroundf+1,detect_color@GG+1
  2564  00124C  0100               	movlb	0	; () banked
  2565  00124E  EE20 F00A          	lfsr	2,10
  2566  001252  5173               	movf	detect_color@w& (0+255),w,b
  2567  001254  26D9               	addwf	fsr2l,f,c
  2568  001256  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2569  001258  22DA               	addwfc	fsr2h,f,c
  2570  00125A  CFDE F075          	movff	postinc2,??_detect_color
  2571  00125E  CFDD F076          	movff	postdec2,??_detect_color+1
  2572  001262  C075  F001         	movff	??_detect_color,___xxtofl@val
  2573  001266  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2574  00126A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2575  00126C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2576  00126E  0E00               	movlw	0
  2577  001270  EC29  F01D         	call	___xxtofl
  2578  001274  C001  F013         	movff	?___xxtofl,___fldiv@a
  2579  001278  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2580  00127C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2581  001280  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2582  001284  0100               	movlb	0	; () banked
  2583  001286  EE20 F004          	lfsr	2,4
  2584  00128A  5171               	movf	detect_color@m& (0+255),w,b
  2585  00128C  26D9               	addwf	fsr2l,f,c
  2586  00128E  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2587  001290  22DA               	addwfc	fsr2h,f,c
  2588  001292  CFDE F077          	movff	postinc2,??_detect_color+2
  2589  001296  CFDD F078          	movff	postdec2,??_detect_color+3
  2590  00129A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2591  00129E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2592  0012A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2593  0012A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2594  0012A6  0E00               	movlw	0
  2595  0012A8  EC29  F01D         	call	___xxtofl
  2596  0012AC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2597  0012B0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2598  0012B4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2599  0012B8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2600  0012BC  EC06  F013         	call	___fldiv	;wreg free
  2601  0012C0  C00F  F028         	movff	?___fldiv,___flmul@b
  2602  0012C4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2603  0012C8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2604  0012CC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2605  0012D0  0E00               	movlw	0
  2606  0012D2  6E2C               	movwf	___flmul@a^0,c
  2607  0012D4  0E00               	movlw	0
  2608  0012D6  6E2D               	movwf	(___flmul@a+1)^0,c
  2609  0012D8  0EC8               	movlw	200
  2610  0012DA  6E2E               	movwf	(___flmul@a+2)^0,c
  2611  0012DC  0E42               	movlw	66
  2612  0012DE  6E2F               	movwf	(___flmul@a+3)^0,c
  2613  0012E0  EC1A  F00F         	call	___flmul	;wreg free
  2614  0012E4  C028  F08C         	movff	?___flmul,_detect_color$3235
  2615  0012E8  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2616  0012EC  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2617  0012F0  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2618  0012F4  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2619  0012F8  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2620  0012FC  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2621  001300  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2622  001304  ECCD  F02A         	call	_lroundf	;wreg free
  2623  001308                     
  2624                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2625  001308  0E05               	movlw	5
  2626  00130A  0100               	movlb	0	; () banked
  2627  00130C  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2628  00130E  0E0F               	movlw	15
  2629  001310  6F75               	movwf	??_detect_color& (0+255),b
  2630  001312  0EF1               	movlw	241
  2631  001314                     u5747:
  2632  001314  2EE8               	decfsz	wreg,f,c
  2633  001316  D7FE               	bra	u5747
  2634  001318  2F75               	decfsz	??_detect_color& (0+255),f,b
  2635  00131A  D7FC               	bra	u5747
  2636  00131C  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2637  00131E  D7FA               	bra	u5747
  2638  001320                     
  2639                           ;color.c: 308:     LED_B();
  2640  001320  ECD6  F02B         	call	_LED_B	;wreg free
  2641  001324                     
  2642                           ;color.c: 309:     read_color(m);
  2643  001324  C071  F00C         	movff	detect_color@m,read_color@m
  2644  001328  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2645  00132C  ECA4  F028         	call	_read_color	;wreg free
  2646  001330                     
  2647                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2648  001330  0100               	movlb	0	; () banked
  2649  001332  EE20 F00C          	lfsr	2,12
  2650  001336  5173               	movf	detect_color@w& (0+255),w,b
  2651  001338  26D9               	addwf	fsr2l,f,c
  2652  00133A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2653  00133C  22DA               	addwfc	fsr2h,f,c
  2654  00133E  CFDE F075          	movff	postinc2,??_detect_color
  2655  001342  CFDD F076          	movff	postdec2,??_detect_color+1
  2656  001346  C075  F001         	movff	??_detect_color,___xxtofl@val
  2657  00134A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2658  00134E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2659  001350  6A04               	clrf	(___xxtofl@val+3)^0,c
  2660  001352  0E00               	movlw	0
  2661  001354  EC29  F01D         	call	___xxtofl
  2662  001358  C001  F013         	movff	?___xxtofl,___fldiv@a
  2663  00135C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2664  001360  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2665  001364  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2666  001368  C071  FFD9         	movff	detect_color@m,fsr2l
  2667  00136C  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2668  001370  CFDE F077          	movff	postinc2,??_detect_color+2
  2669  001374  CFDD F078          	movff	postdec2,??_detect_color+3
  2670  001378  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2671  00137C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2672  001380  6A03               	clrf	(___xxtofl@val+2)^0,c
  2673  001382  6A04               	clrf	(___xxtofl@val+3)^0,c
  2674  001384  0E00               	movlw	0
  2675  001386  EC29  F01D         	call	___xxtofl
  2676  00138A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2677  00138E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2678  001392  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2679  001396  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2680  00139A  EC06  F013         	call	___fldiv	;wreg free
  2681  00139E  C00F  F028         	movff	?___fldiv,___flmul@b
  2682  0013A2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2683  0013A6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2684  0013AA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2685  0013AE  0E00               	movlw	0
  2686  0013B0  6E2C               	movwf	___flmul@a^0,c
  2687  0013B2  0E00               	movlw	0
  2688  0013B4  6E2D               	movwf	(___flmul@a+1)^0,c
  2689  0013B6  0EC8               	movlw	200
  2690  0013B8  6E2E               	movwf	(___flmul@a+2)^0,c
  2691  0013BA  0E42               	movlw	66
  2692  0013BC  6E2F               	movwf	(___flmul@a+3)^0,c
  2693  0013BE  EC1A  F00F         	call	___flmul	;wreg free
  2694  0013C2  C028  F08C         	movff	?___flmul,_detect_color$3235
  2695  0013C6  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2696  0013CA  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2697  0013CE  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2698  0013D2                     
  2699                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2700  0013D2  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2701  0013D6  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2702  0013DA  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2703  0013DE  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2704  0013E2  ECCD  F02A         	call	_lroundf	;wreg free
  2705  0013E6  C066  F085         	movff	?_lroundf,detect_color@BR
  2706  0013EA  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  2707  0013EE  0100               	movlb	0	; () banked
  2708  0013F0  EE20 F00E          	lfsr	2,14
  2709  0013F4  5173               	movf	detect_color@w& (0+255),w,b
  2710  0013F6  26D9               	addwf	fsr2l,f,c
  2711  0013F8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2712  0013FA  22DA               	addwfc	fsr2h,f,c
  2713  0013FC  CFDE F075          	movff	postinc2,??_detect_color
  2714  001400  CFDD F076          	movff	postdec2,??_detect_color+1
  2715  001404  C075  F001         	movff	??_detect_color,___xxtofl@val
  2716  001408  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2717  00140C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2718  00140E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2719  001410  0E00               	movlw	0
  2720  001412  EC29  F01D         	call	___xxtofl
  2721  001416  C001  F013         	movff	?___xxtofl,___fldiv@a
  2722  00141A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2723  00141E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2724  001422  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2725  001426  0100               	movlb	0	; () banked
  2726  001428  EE20 F002          	lfsr	2,2
  2727  00142C  5171               	movf	detect_color@m& (0+255),w,b
  2728  00142E  26D9               	addwf	fsr2l,f,c
  2729  001430  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2730  001432  22DA               	addwfc	fsr2h,f,c
  2731  001434  CFDE F077          	movff	postinc2,??_detect_color+2
  2732  001438  CFDD F078          	movff	postdec2,??_detect_color+3
  2733  00143C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2734  001440  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2735  001444  6A03               	clrf	(___xxtofl@val+2)^0,c
  2736  001446  6A04               	clrf	(___xxtofl@val+3)^0,c
  2737  001448  0E00               	movlw	0
  2738  00144A  EC29  F01D         	call	___xxtofl
  2739  00144E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2740  001452  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2741  001456  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2742  00145A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2743  00145E  EC06  F013         	call	___fldiv	;wreg free
  2744  001462  C00F  F028         	movff	?___fldiv,___flmul@b
  2745  001466  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2746  00146A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2747  00146E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2748  001472  0E00               	movlw	0
  2749  001474  6E2C               	movwf	___flmul@a^0,c
  2750  001476  0E00               	movlw	0
  2751  001478  6E2D               	movwf	(___flmul@a+1)^0,c
  2752  00147A  0EC8               	movlw	200
  2753  00147C  6E2E               	movwf	(___flmul@a+2)^0,c
  2754  00147E  0E42               	movlw	66
  2755  001480  6E2F               	movwf	(___flmul@a+3)^0,c
  2756  001482  EC1A  F00F         	call	___flmul	;wreg free
  2757  001486  C028  F08C         	movff	?___flmul,_detect_color$3235
  2758  00148A  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2759  00148E  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2760  001492  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2761  001496  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2762  00149A  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2763  00149E  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2764  0014A2  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2765  0014A6  ECCD  F02A         	call	_lroundf	;wreg free
  2766  0014AA  C066  F089         	movff	?_lroundf,detect_color@BG
  2767  0014AE  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2768  0014B2  0100               	movlb	0	; () banked
  2769  0014B4  EE20 F010          	lfsr	2,16
  2770  0014B8  5173               	movf	detect_color@w& (0+255),w,b
  2771  0014BA  26D9               	addwf	fsr2l,f,c
  2772  0014BC  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2773  0014BE  22DA               	addwfc	fsr2h,f,c
  2774  0014C0  CFDE F075          	movff	postinc2,??_detect_color
  2775  0014C4  CFDD F076          	movff	postdec2,??_detect_color+1
  2776  0014C8  C075  F001         	movff	??_detect_color,___xxtofl@val
  2777  0014CC  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2778  0014D0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2779  0014D2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2780  0014D4  0E00               	movlw	0
  2781  0014D6  EC29  F01D         	call	___xxtofl
  2782  0014DA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2783  0014DE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2784  0014E2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2785  0014E6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2786  0014EA  0100               	movlb	0	; () banked
  2787  0014EC  EE20 F004          	lfsr	2,4
  2788  0014F0  5171               	movf	detect_color@m& (0+255),w,b
  2789  0014F2  26D9               	addwf	fsr2l,f,c
  2790  0014F4  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2791  0014F6  22DA               	addwfc	fsr2h,f,c
  2792  0014F8  CFDE F077          	movff	postinc2,??_detect_color+2
  2793  0014FC  CFDD F078          	movff	postdec2,??_detect_color+3
  2794  001500  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2795  001504  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2796  001508  6A03               	clrf	(___xxtofl@val+2)^0,c
  2797  00150A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2798  00150C  0E00               	movlw	0
  2799  00150E  EC29  F01D         	call	___xxtofl
  2800  001512  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2801  001516  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2802  00151A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2803  00151E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2804  001522  EC06  F013         	call	___fldiv	;wreg free
  2805  001526  C00F  F028         	movff	?___fldiv,___flmul@b
  2806  00152A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2807  00152E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2808  001532  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2809  001536  0E00               	movlw	0
  2810  001538  6E2C               	movwf	___flmul@a^0,c
  2811  00153A  0E00               	movlw	0
  2812  00153C  6E2D               	movwf	(___flmul@a+1)^0,c
  2813  00153E  0EC8               	movlw	200
  2814  001540  6E2E               	movwf	(___flmul@a+2)^0,c
  2815  001542  0E42               	movlw	66
  2816  001544  6E2F               	movwf	(___flmul@a+3)^0,c
  2817  001546  EC1A  F00F         	call	___flmul	;wreg free
  2818  00154A  C028  F08C         	movff	?___flmul,_detect_color$3235
  2819  00154E  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2820  001552  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2821  001556  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2822  00155A  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2823  00155E  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2824  001562  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2825  001566  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2826  00156A  ECCD  F02A         	call	_lroundf	;wreg free
  2827  00156E  C066  F087         	movff	?_lroundf,detect_color@BB
  2828  001572  C067  F088         	movff	?_lroundf+1,detect_color@BB+1
  2829  001576                     
  2830                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2831  001576  0E05               	movlw	5
  2832  001578  0100               	movlb	0	; () banked
  2833  00157A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2834  00157C  0E0F               	movlw	15
  2835  00157E  6F75               	movwf	??_detect_color& (0+255),b
  2836  001580  0EF1               	movlw	241
  2837  001582                     u5757:
  2838  001582  2EE8               	decfsz	wreg,f,c
  2839  001584  D7FE               	bra	u5757
  2840  001586  2F75               	decfsz	??_detect_color& (0+255),f,b
  2841  001588  D7FC               	bra	u5757
  2842  00158A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2843  00158C  D7FA               	bra	u5757
  2844  00158E                     
  2845                           ;color.c: 314:     if (compare(0, BR, 70)){
  2846  00158E  0E00               	movlw	0
  2847  001590  0100               	movlb	0	; () banked
  2848  001592  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2849  001594  0E00               	movlw	0
  2850  001596  6F6A               	movwf	compare@lower& (0+255),b
  2851  001598  C085  F06C         	movff	detect_color@BR,compare@value2compare
  2852  00159C  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2853  0015A0  0E00               	movlw	0
  2854  0015A2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2855  0015A4  0E46               	movlw	70
  2856  0015A6  6F6E               	movwf	compare@upper& (0+255),b
  2857  0015A8  ECB0  F02A         	call	_compare	;wreg free
  2858  0015AC  0900               	iorlw	0
  2859  0015AE  B4D8               	btfsc	status,2,c
  2860  0015B0  EFDC  F00A         	goto	u5101
  2861  0015B4  EFDE  F00A         	goto	u5100
  2862  0015B8                     u5101:
  2863  0015B8  EF4F  F00B         	goto	l5071
  2864  0015BC                     u5100:
  2865  0015BC                     
  2866                           ;color.c: 316:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2867  0015BC  C087  F001         	movff	detect_color@BB,___xxtofl@val
  2868  0015C0  C088  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2869  0015C4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2870  0015C6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2871  0015C8  0E00               	movlw	0
  2872  0015CA  EC29  F01D         	call	___xxtofl
  2873  0015CE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2874  0015D2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2875  0015D6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2876  0015DA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2877  0015DE  0100               	movlb	0	; () banked
  2878  0015E0  5189               	movf	detect_color@BG& (0+255),w,b
  2879  0015E2  2581               	addwf	detect_color@GG& (0+255),w,b
  2880  0015E4  6F75               	movwf	??_detect_color& (0+255),b
  2881  0015E6  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  2882  0015E8  2182               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2883  0015EA  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2884  0015EC  C075  F001         	movff	??_detect_color,___xxtofl@val
  2885  0015F0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2886  0015F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2887  0015F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2888  0015F8  0E00               	movlw	0
  2889  0015FA  EC29  F01D         	call	___xxtofl
  2890  0015FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2891  001602  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2892  001606  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2893  00160A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2894  00160E  EC06  F013         	call	___fldiv	;wreg free
  2895  001612  C00F  F028         	movff	?___fldiv,___flmul@b
  2896  001616  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2897  00161A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2898  00161E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2899  001622  0E00               	movlw	0
  2900  001624  6E2C               	movwf	___flmul@a^0,c
  2901  001626  0E00               	movlw	0
  2902  001628  6E2D               	movwf	(___flmul@a+1)^0,c
  2903  00162A  0E48               	movlw	72
  2904  00162C  6E2E               	movwf	(___flmul@a+2)^0,c
  2905  00162E  0E43               	movlw	67
  2906  001630  6E2F               	movwf	(___flmul@a+3)^0,c
  2907  001632  EC1A  F00F         	call	___flmul	;wreg free
  2908  001636  C028  F08C         	movff	?___flmul,_detect_color$3235
  2909  00163A  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  2910  00163E  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  2911  001642  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  2912                           
  2913                           ;color.c: 316:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2914  001646  0E00               	movlw	0
  2915  001648  0100               	movlb	0	; () banked
  2916  00164A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2917  00164C  0E00               	movlw	0
  2918  00164E  6F6A               	movwf	compare@lower& (0+255),b
  2919  001650  C08C  F066         	movff	_detect_color$3235,lroundf@x
  2920  001654  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  2921  001658  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  2922  00165C  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  2923  001660  ECCD  F02A         	call	_lroundf	;wreg free
  2924  001664  C066  F06C         	movff	?_lroundf,compare@value2compare
  2925  001668  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2926  00166C  0E01               	movlw	1
  2927  00166E  0100               	movlb	0	; () banked
  2928  001670  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2929  001672  0E9E               	movlw	158
  2930  001674  6F6E               	movwf	compare@upper& (0+255),b
  2931  001676  ECB0  F02A         	call	_compare	;wreg free
  2932  00167A  0900               	iorlw	0
  2933  00167C  B4D8               	btfsc	status,2,c
  2934  00167E  EF43  F00B         	goto	u5111
  2935  001682  EF45  F00B         	goto	u5110
  2936  001686                     u5111:
  2937  001686  EF4A  F00B         	goto	l5069
  2938  00168A                     u5110:
  2939  00168A  0E03               	movlw	3
  2940  00168C  0100               	movlb	0	; () banked
  2941  00168E  6F8B               	movwf	detect_color@color& (0+255),b
  2942  001690  EF30  F00C         	goto	l5101
  2943  001694                     l5069:
  2944  001694  0E02               	movlw	2
  2945  001696  0100               	movlb	0	; () banked
  2946  001698  6F8B               	movwf	detect_color@color& (0+255),b
  2947  00169A  EF30  F00C         	goto	l5101
  2948  00169E                     l5071:
  2949                           
  2950                           ;color.c: 320:         if (compare(0, BG, 75)){
  2951  00169E  0E00               	movlw	0
  2952  0016A0  0100               	movlb	0	; () banked
  2953  0016A2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2954  0016A4  0E00               	movlw	0
  2955  0016A6  6F6A               	movwf	compare@lower& (0+255),b
  2956  0016A8  C089  F06C         	movff	detect_color@BG,compare@value2compare
  2957  0016AC  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2958  0016B0  0E00               	movlw	0
  2959  0016B2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2960  0016B4  0E4B               	movlw	75
  2961  0016B6  6F6E               	movwf	compare@upper& (0+255),b
  2962  0016B8  ECB0  F02A         	call	_compare	;wreg free
  2963  0016BC  0900               	iorlw	0
  2964  0016BE  B4D8               	btfsc	status,2,c
  2965  0016C0  EF64  F00B         	goto	u5121
  2966  0016C4  EF66  F00B         	goto	u5120
  2967  0016C8                     u5121:
  2968  0016C8  EFE0  F00B         	goto	l5083
  2969  0016CC                     u5120:
  2970  0016CC                     
  2971                           ;color.c: 322:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2972  0016CC  C07D  F001         	movff	detect_color@RG,___xxtofl@val
  2973  0016D0  C07E  F002         	movff	detect_color@RG+1,___xxtofl@val+1
  2974  0016D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2975  0016D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2976  0016D8  0E00               	movlw	0
  2977  0016DA  EC29  F01D         	call	___xxtofl
  2978  0016DE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2979  0016E2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2980  0016E6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2981  0016EA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2982  0016EE  C083  F001         	movff	detect_color@RR,___xxtofl@val
  2983  0016F2  C084  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2984  0016F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2985  0016F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2986  0016FA  0E00               	movlw	0
  2987  0016FC  EC29  F01D         	call	___xxtofl
  2988  001700  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2989  001704  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2990  001708  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2991  00170C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2992  001710  EC06  F013         	call	___fldiv	;wreg free
  2993  001714  C00F  F028         	movff	?___fldiv,___flmul@b
  2994  001718  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2995  00171C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2996  001720  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2997  001724  0E00               	movlw	0
  2998  001726  6E2C               	movwf	___flmul@a^0,c
  2999  001728  0E00               	movlw	0
  3000  00172A  6E2D               	movwf	(___flmul@a+1)^0,c
  3001  00172C  0EFA               	movlw	250
  3002  00172E  6E2E               	movwf	(___flmul@a+2)^0,c
  3003  001730  0E43               	movlw	67
  3004  001732  6E2F               	movwf	(___flmul@a+3)^0,c
  3005  001734  EC1A  F00F         	call	___flmul	;wreg free
  3006  001738  C028  F08C         	movff	?___flmul,_detect_color$3235
  3007  00173C  C029  F08D         	movff	?___flmul+1,_detect_color$3235+1
  3008  001740  C02A  F08E         	movff	?___flmul+2,_detect_color$3235+2
  3009  001744  C02B  F08F         	movff	?___flmul+3,_detect_color$3235+3
  3010                           
  3011                           ;color.c: 322:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  3012  001748  0E00               	movlw	0
  3013  00174A  0100               	movlb	0	; () banked
  3014  00174C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3015  00174E  0E00               	movlw	0
  3016  001750  6F6A               	movwf	compare@lower& (0+255),b
  3017  001752  C08C  F066         	movff	_detect_color$3235,lroundf@x
  3018  001756  C08D  F067         	movff	_detect_color$3235+1,lroundf@x+1
  3019  00175A  C08E  F068         	movff	_detect_color$3235+2,lroundf@x+2
  3020  00175E  C08F  F069         	movff	_detect_color$3235+3,lroundf@x+3
  3021  001762  ECCD  F02A         	call	_lroundf	;wreg free
  3022  001766  C066  F06C         	movff	?_lroundf,compare@value2compare
  3023  00176A  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3024  00176E  0E02               	movlw	2
  3025  001770  0100               	movlb	0	; () banked
  3026  001772  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3027  001774  0E9E               	movlw	158
  3028  001776  6F6E               	movwf	compare@upper& (0+255),b
  3029  001778  ECB0  F02A         	call	_compare	;wreg free
  3030  00177C  0900               	iorlw	0
  3031  00177E  B4D8               	btfsc	status,2,c
  3032  001780  EFC4  F00B         	goto	u5131
  3033  001784  EFC6  F00B         	goto	u5130
  3034  001788                     u5131:
  3035  001788  EFDB  F00B         	goto	l5081
  3036  00178C                     u5130:
  3037  00178C                     
  3038                           ;color.c: 323:                 if (GR > 90){color = 6;}
  3039  00178C  0100               	movlb	0	; () banked
  3040  00178E  5180               	movf	(detect_color@GR+1)& (0+255),w,b
  3041  001790  E109               	bnz	u5140
  3042  001792  0E5B               	movlw	91
  3043  001794  5D7F               	subwf	detect_color@GR& (0+255),w,b
  3044  001796  A0D8               	btfss	status,0,c
  3045  001798  EFD0  F00B         	goto	u5141
  3046  00179C  EFD2  F00B         	goto	u5140
  3047  0017A0                     u5141:
  3048  0017A0  EFD6  F00B         	goto	l5079
  3049  0017A4                     u5140:
  3050  0017A4                     
  3051                           ; BSR set to: 0
  3052  0017A4  0E06               	movlw	6
  3053  0017A6  6F8B               	movwf	detect_color@color& (0+255),b
  3054  0017A8  EF30  F00C         	goto	l5101
  3055  0017AC                     l5079:
  3056  0017AC  0E00               	movlw	0
  3057  0017AE  0100               	movlb	0	; () banked
  3058  0017B0  6F8B               	movwf	detect_color@color& (0+255),b
  3059  0017B2  EF30  F00C         	goto	l5101
  3060  0017B6                     l5081:
  3061  0017B6  0E01               	movlw	1
  3062  0017B8  0100               	movlb	0	; () banked
  3063  0017BA  6F8B               	movwf	detect_color@color& (0+255),b
  3064  0017BC  EF30  F00C         	goto	l5101
  3065  0017C0                     l5083:
  3066                           
  3067                           ;color.c: 329:             if (compare(0, BR, 90)){
  3068  0017C0  0E00               	movlw	0
  3069  0017C2  0100               	movlb	0	; () banked
  3070  0017C4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3071  0017C6  0E00               	movlw	0
  3072  0017C8  6F6A               	movwf	compare@lower& (0+255),b
  3073  0017CA  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3074  0017CE  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3075  0017D2  0E00               	movlw	0
  3076  0017D4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3077  0017D6  0E5A               	movlw	90
  3078  0017D8  6F6E               	movwf	compare@upper& (0+255),b
  3079  0017DA  ECB0  F02A         	call	_compare	;wreg free
  3080  0017DE  0900               	iorlw	0
  3081  0017E0  B4D8               	btfsc	status,2,c
  3082  0017E2  EFF5  F00B         	goto	u5151
  3083  0017E6  EFF7  F00B         	goto	u5150
  3084  0017EA                     u5151:
  3085  0017EA  EF07  F00C         	goto	l5091
  3086  0017EE                     u5150:
  3087  0017EE                     
  3088                           ;color.c: 330:                 if (BG > 90){color = 7;}
  3089  0017EE  0100               	movlb	0	; () banked
  3090  0017F0  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3091  0017F2  E109               	bnz	u5160
  3092  0017F4  0E5B               	movlw	91
  3093  0017F6  5D89               	subwf	detect_color@BG& (0+255),w,b
  3094  0017F8  A0D8               	btfss	status,0,c
  3095  0017FA  EF01  F00C         	goto	u5161
  3096  0017FE  EF03  F00C         	goto	u5160
  3097  001802                     u5161:
  3098  001802  EFD6  F00B         	goto	l5079
  3099  001806                     u5160:
  3100  001806                     
  3101                           ; BSR set to: 0
  3102  001806  0E07               	movlw	7
  3103  001808  6F8B               	movwf	detect_color@color& (0+255),b
  3104  00180A  EF30  F00C         	goto	l5101
  3105  00180E                     l5091:
  3106                           
  3107                           ;color.c: 334:                 if (BG < BB){color = 5;}
  3108  00180E  0100               	movlb	0	; () banked
  3109  001810  5187               	movf	detect_color@BB& (0+255),w,b
  3110  001812  5D89               	subwf	detect_color@BG& (0+255),w,b
  3111  001814  5188               	movf	(detect_color@BB+1)& (0+255),w,b
  3112  001816  598A               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3113  001818  B0D8               	btfsc	status,0,c
  3114  00181A  EF11  F00C         	goto	u5171
  3115  00181E  EF13  F00C         	goto	u5170
  3116  001822                     u5171:
  3117  001822  EF17  F00C         	goto	l5095
  3118  001826                     u5170:
  3119  001826                     
  3120                           ; BSR set to: 0
  3121  001826  0E05               	movlw	5
  3122  001828  6F8B               	movwf	detect_color@color& (0+255),b
  3123  00182A  EF30  F00C         	goto	l5101
  3124  00182E                     l5095:
  3125                           
  3126                           ; BSR set to: 0
  3127                           ;color.c: 336:                     if (compare(0, BB, 90)){color = 4;}
  3128  00182E  0E00               	movlw	0
  3129  001830  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3130  001832  0E00               	movlw	0
  3131  001834  6F6A               	movwf	compare@lower& (0+255),b
  3132  001836  C087  F06C         	movff	detect_color@BB,compare@value2compare
  3133  00183A  C088  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  3134  00183E  0E00               	movlw	0
  3135  001840  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3136  001842  0E5A               	movlw	90
  3137  001844  6F6E               	movwf	compare@upper& (0+255),b
  3138  001846  ECB0  F02A         	call	_compare	;wreg free
  3139  00184A  0900               	iorlw	0
  3140  00184C  B4D8               	btfsc	status,2,c
  3141  00184E  EF2B  F00C         	goto	u5181
  3142  001852  EF2D  F00C         	goto	u5180
  3143  001856                     u5181:
  3144  001856  EFD6  F00B         	goto	l5079
  3145  00185A                     u5180:
  3146  00185A  0E04               	movlw	4
  3147  00185C  0100               	movlb	0	; () banked
  3148  00185E  6F8B               	movwf	detect_color@color& (0+255),b
  3149  001860                     l5101:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;color.c: 343:     if (compare(90, BR, 110) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  3153  001860  0E00               	movlw	0
  3154  001862  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3155  001864  0E5A               	movlw	90
  3156  001866  6F6A               	movwf	compare@lower& (0+255),b
  3157  001868  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3158  00186C  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3159  001870  0E00               	movlw	0
  3160  001872  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3161  001874  0E6E               	movlw	110
  3162  001876  6F6E               	movwf	compare@upper& (0+255),b
  3163  001878  ECB0  F02A         	call	_compare	;wreg free
  3164  00187C  0900               	iorlw	0
  3165  00187E  B4D8               	btfsc	status,2,c
  3166  001880  EF44  F00C         	goto	u5191
  3167  001884  EF46  F00C         	goto	u5190
  3168  001888                     u5191:
  3169  001888  EF77  F00C         	goto	l5109
  3170  00188C                     u5190:
  3171  00188C  0E00               	movlw	0
  3172  00188E  0100               	movlb	0	; () banked
  3173  001890  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3174  001892  0E5F               	movlw	95
  3175  001894  6F6A               	movwf	compare@lower& (0+255),b
  3176  001896  C089  F06C         	movff	detect_color@BG,compare@value2compare
  3177  00189A  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3178  00189E  0E00               	movlw	0
  3179  0018A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3180  0018A2  0E69               	movlw	105
  3181  0018A4  6F6E               	movwf	compare@upper& (0+255),b
  3182  0018A6  ECB0  F02A         	call	_compare	;wreg free
  3183  0018AA  0900               	iorlw	0
  3184  0018AC  B4D8               	btfsc	status,2,c
  3185  0018AE  EF5B  F00C         	goto	u5201
  3186  0018B2  EF5D  F00C         	goto	u5200
  3187  0018B6                     u5201:
  3188  0018B6  EF77  F00C         	goto	l5109
  3189  0018BA                     u5200:
  3190  0018BA  0E00               	movlw	0
  3191  0018BC  0100               	movlb	0	; () banked
  3192  0018BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3193  0018C0  0E5F               	movlw	95
  3194  0018C2  6F6A               	movwf	compare@lower& (0+255),b
  3195  0018C4  C087  F06C         	movff	detect_color@BB,compare@value2compare
  3196  0018C8  C088  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  3197  0018CC  0E00               	movlw	0
  3198  0018CE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3199  0018D0  0E69               	movlw	105
  3200  0018D2  6F6E               	movwf	compare@upper& (0+255),b
  3201  0018D4  ECB0  F02A         	call	_compare	;wreg free
  3202  0018D8  0900               	iorlw	0
  3203  0018DA  B4D8               	btfsc	status,2,c
  3204  0018DC  EF72  F00C         	goto	u5211
  3205  0018E0  EF74  F00C         	goto	u5210
  3206  0018E4                     u5211:
  3207  0018E4  EF77  F00C         	goto	l5109
  3208  0018E8                     u5210:
  3209  0018E8  0E08               	movlw	8
  3210  0018EA  0100               	movlb	0	; () banked
  3211  0018EC  6F8B               	movwf	detect_color@color& (0+255),b
  3212  0018EE                     l5109:
  3213                           
  3214                           ;color.c: 344:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3215  0018EE  0E00               	movlw	0
  3216  0018F0  0100               	movlb	0	; () banked
  3217  0018F2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3218  0018F4  0E00               	movlw	0
  3219  0018F6  6F6A               	movwf	compare@lower& (0+255),b
  3220  0018F8  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3221  0018FC  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3222  001900  0E00               	movlw	0
  3223  001902  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3224  001904  0E19               	movlw	25
  3225  001906  6F6E               	movwf	compare@upper& (0+255),b
  3226  001908  ECB0  F02A         	call	_compare	;wreg free
  3227  00190C  0900               	iorlw	0
  3228  00190E  B4D8               	btfsc	status,2,c
  3229  001910  EF8C  F00C         	goto	u5221
  3230  001914  EF8E  F00C         	goto	u5220
  3231  001918                     u5221:
  3232  001918  EFA8  F00C         	goto	l5115
  3233  00191C                     u5220:
  3234  00191C  0E00               	movlw	0
  3235  00191E  0100               	movlb	0	; () banked
  3236  001920  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3237  001922  0E00               	movlw	0
  3238  001924  6F6A               	movwf	compare@lower& (0+255),b
  3239  001926  C083  F06C         	movff	detect_color@RR,compare@value2compare
  3240  00192A  C084  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3241  00192E  0E00               	movlw	0
  3242  001930  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3243  001932  0E5A               	movlw	90
  3244  001934  6F6E               	movwf	compare@upper& (0+255),b
  3245  001936  ECB0  F02A         	call	_compare	;wreg free
  3246  00193A  0900               	iorlw	0
  3247  00193C  B4D8               	btfsc	status,2,c
  3248  00193E  EFA3  F00C         	goto	u5231
  3249  001942  EFA5  F00C         	goto	u5230
  3250  001946                     u5231:
  3251  001946  EFA8  F00C         	goto	l5115
  3252  00194A                     u5230:
  3253  00194A  0E00               	movlw	0
  3254  00194C  0100               	movlb	0	; () banked
  3255  00194E  6F8B               	movwf	detect_color@color& (0+255),b
  3256  001950                     l5115:
  3257                           
  3258                           ;color.c: 346:     if (color == 8) {toggle_light(2,1);}
  3259  001950  0E08               	movlw	8
  3260  001952  0100               	movlb	0	; () banked
  3261  001954  198B               	xorwf	detect_color@color& (0+255),w,b
  3262  001956  A4D8               	btfss	status,2,c
  3263  001958  EFB0  F00C         	goto	u5241
  3264  00195C  EFB2  F00C         	goto	u5240
  3265  001960                     u5241:
  3266  001960  EFB7  F00C         	goto	l5119
  3267  001964                     u5240:
  3268  001964                     
  3269                           ; BSR set to: 0
  3270  001964  0E01               	movlw	1
  3271  001966  6E01               	movwf	toggle_light@toggletime^0,c
  3272  001968  0E02               	movlw	2
  3273  00196A  EC15  F019         	call	_toggle_light
  3274  00196E                     l5119:
  3275                           
  3276                           ;color.c: 348:     return color;
  3277  00196E  0100               	movlb	0	; () banked
  3278  001970  518B               	movf	detect_color@color& (0+255),w,b
  3279  001972                     
  3280                           ; BSR set to: 0
  3281  001972  0012               	return		;funcret
  3282  001974                     __end_of_detect_color:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _compare *****************
  3286 ;; Defined at:
  3287 ;;		line 351 in file "color.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  lower           2   10[BANK0 ] unsigned int 
  3290 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3291 ;;  upper           2   14[BANK0 ] unsigned int 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  result          1   16[BANK0 ] unsigned char 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      unsigned char 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3303 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3306 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3307 ;;Total ram usage:        7 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_detect_color
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text5
  3318  005560                     __ptext5:
  3319                           	callstack 0
  3320  005560                     _compare:
  3321                           	callstack 27
  3322  005560                     
  3323                           ;color.c: 351: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 352: {;color.c: 353:     unsigned char result = 0;
  3324  005560  0E00               	movlw	0
  3325  005562  0100               	movlb	0	; () banked
  3326  005564  6F70               	movwf	compare@result& (0+255),b
  3327  005566                     
  3328                           ; BSR set to: 0
  3329                           ;color.c: 354:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3330  005566  516C               	movf	compare@value2compare& (0+255),w,b
  3331  005568  5D6A               	subwf	compare@lower& (0+255),w,b
  3332  00556A  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3333  00556C  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3334  00556E  B0D8               	btfsc	status,0,c
  3335  005570  EFBC  F02A         	goto	u4571
  3336  005574  EFBE  F02A         	goto	u4570
  3337  005578                     u4571:
  3338  005578  EFCB  F02A         	goto	l168
  3339  00557C                     u4570:
  3340  00557C                     
  3341                           ; BSR set to: 0
  3342  00557C  516C               	movf	compare@value2compare& (0+255),w,b
  3343  00557E  5D6E               	subwf	compare@upper& (0+255),w,b
  3344  005580  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3345  005582  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3346  005584  A0D8               	btfss	status,0,c
  3347  005586  EFC7  F02A         	goto	u4581
  3348  00558A  EFC9  F02A         	goto	u4580
  3349  00558E                     u4581:
  3350  00558E  EFCB  F02A         	goto	l168
  3351  005592                     u4580:
  3352  005592                     
  3353                           ; BSR set to: 0
  3354  005592  0E01               	movlw	1
  3355  005594  6F70               	movwf	compare@result& (0+255),b
  3356  005596                     l168:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;color.c: 355:     return result;
  3360  005596  5170               	movf	compare@result& (0+255),w,b
  3361  005598                     
  3362                           ; BSR set to: 0
  3363  005598  0012               	return		;funcret
  3364  00559A                     __end_of_compare:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _color_data_collection *****************
  3368 ;; Defined at:
  3369 ;;		line 200 in file "color.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3372 ;;		 -> main@rgb(8), 
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  x               2  132[BANK0 ] int 
  3375 ;;  k               2  130[BANK0 ] int 
  3376 ;;  j               2  128[BANK0 ] int 
  3377 ;;  i               2  126[BANK0 ] int 
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3388 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;Total ram usage:       12 bytes
  3392 ;; Hardware stack levels used: 1
  3393 ;; Hardware stack levels required when called: 10
  3394 ;; This function calls:
  3395 ;;		_LED_B
  3396 ;;		_LED_C
  3397 ;;		_LED_G
  3398 ;;		_LED_R
  3399 ;;		_color_display
  3400 ;;		_color_predict
  3401 ;;		_read_color
  3402 ;; This function is called by:
  3403 ;;		_test_function
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           	psect	text6
  3408  00389C                     __ptext6:
  3409                           	callstack 0
  3410  00389C                     _color_data_collection:
  3411                           	callstack 19
  3412  00389C                     
  3413                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3414  00389C  0E00               	movlw	0
  3415  00389E  0100               	movlb	0	; () banked
  3416  0038A0  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3417  0038A2  0E00               	movlw	0
  3418  0038A4  6FDE               	movwf	color_data_collection@i& (0+255),b
  3419  0038A6  0E00               	movlw	0
  3420  0038A8  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3421  0038AA  0E00               	movlw	0
  3422  0038AC  6FE2               	movwf	color_data_collection@k& (0+255),b
  3423  0038AE  0E00               	movlw	0
  3424  0038B0  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3425  0038B2  0E00               	movlw	0
  3426  0038B4  6FE4               	movwf	color_data_collection@x& (0+255),b
  3427                           
  3428                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3429  0038B6  0E00               	movlw	0
  3430  0038B8  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3431  0038BA  0E00               	movlw	0
  3432  0038BC  6FDE               	movwf	color_data_collection@i& (0+255),b
  3433  0038BE                     l4877:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;color.c: 204:         LED_C();
  3437  0038BE  ECE6  F02B         	call	_LED_C	;wreg free
  3438  0038C2                     
  3439                           ;color.c: 205:         read_color(m);
  3440  0038C2  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3441  0038C6  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3442  0038CA  ECA4  F028         	call	_read_color	;wreg free
  3443  0038CE                     
  3444                           ;color.c: 206:         color_display(m);
  3445  0038CE  C05A  F058         	movff	color_data_collection@m,color_display@m
  3446  0038D2  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3447  0038D6  EC3B  F028         	call	_color_display	;wreg free
  3448  0038DA                     
  3449                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3450  0038DA  0E09               	movlw	9
  3451  0038DC  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3452  0038DE  0E1E               	movlw	30
  3453  0038E0  6E5C               	movwf	??_color_data_collection^0,c
  3454  0038E2  0EE4               	movlw	228
  3455  0038E4                     u5767:
  3456  0038E4  2EE8               	decfsz	wreg,f,c
  3457  0038E6  D7FE               	bra	u5767
  3458  0038E8  2E5C               	decfsz	??_color_data_collection^0,f,c
  3459  0038EA  D7FC               	bra	u5767
  3460  0038EC  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3461  0038EE  D7FA               	bra	u5767
  3462  0038F0  D000               	nop2	
  3463  0038F2                     
  3464                           ;color.c: 208:     }
  3465  0038F2  0100               	movlb	0	; () banked
  3466  0038F4  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3467  0038F6  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3468  0038F8                     
  3469                           ; BSR set to: 0
  3470  0038F8  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3471  0038FA  EF88  F01C         	goto	u5061
  3472  0038FE  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3473  003900  E109               	bnz	u5060
  3474  003902  0E05               	movlw	5
  3475  003904  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3476  003906  A0D8               	btfss	status,0,c
  3477  003908  EF88  F01C         	goto	u5061
  3478  00390C  EF8A  F01C         	goto	u5060
  3479  003910                     u5061:
  3480  003910  EF5F  F01C         	goto	l4877
  3481  003914                     u5060:
  3482  003914                     
  3483                           ; BSR set to: 0
  3484                           ;color.c: 209:     color_predict(00000);
  3485  003914  0E00               	movlw	0
  3486  003916  EC53  F02B         	call	_color_predict
  3487  00391A                     
  3488                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3489  00391A  0E00               	movlw	0
  3490  00391C  0100               	movlb	0	; () banked
  3491  00391E  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3492  003920  0E00               	movlw	0
  3493  003922  6FE0               	movwf	color_data_collection@j& (0+255),b
  3494  003924                     l4897:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;color.c: 211:         LED_R();
  3498  003924  ECA6  F02B         	call	_LED_R	;wreg free
  3499  003928                     
  3500                           ;color.c: 212:         read_color(m);
  3501  003928  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3502  00392C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3503  003930  ECA4  F028         	call	_read_color	;wreg free
  3504  003934                     
  3505                           ;color.c: 213:         color_display(m);
  3506  003934  C05A  F058         	movff	color_data_collection@m,color_display@m
  3507  003938  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3508  00393C  EC3B  F028         	call	_color_display	;wreg free
  3509  003940                     
  3510                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3511  003940  0E09               	movlw	9
  3512  003942  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3513  003944  0E1E               	movlw	30
  3514  003946  6E5C               	movwf	??_color_data_collection^0,c
  3515  003948  0EE4               	movlw	228
  3516  00394A                     u5777:
  3517  00394A  2EE8               	decfsz	wreg,f,c
  3518  00394C  D7FE               	bra	u5777
  3519  00394E  2E5C               	decfsz	??_color_data_collection^0,f,c
  3520  003950  D7FC               	bra	u5777
  3521  003952  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3522  003954  D7FA               	bra	u5777
  3523  003956  D000               	nop2	
  3524  003958                     
  3525                           ;color.c: 215:     }
  3526  003958  0100               	movlb	0	; () banked
  3527  00395A  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3528  00395C  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3529  00395E                     
  3530                           ; BSR set to: 0
  3531  00395E  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3532  003960  EFBB  F01C         	goto	u5071
  3533  003964  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3534  003966  E109               	bnz	u5070
  3535  003968  0E05               	movlw	5
  3536  00396A  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3537  00396C  A0D8               	btfss	status,0,c
  3538  00396E  EFBB  F01C         	goto	u5071
  3539  003972  EFBD  F01C         	goto	u5070
  3540  003976                     u5071:
  3541  003976  EF92  F01C         	goto	l4897
  3542  00397A                     u5070:
  3543  00397A                     
  3544                           ; BSR set to: 0
  3545                           ;color.c: 216:     color_predict(00000);
  3546  00397A  0E00               	movlw	0
  3547  00397C  EC53  F02B         	call	_color_predict
  3548  003980                     
  3549                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3550  003980  0E00               	movlw	0
  3551  003982  0100               	movlb	0	; () banked
  3552  003984  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3553  003986  0E00               	movlw	0
  3554  003988  6FE2               	movwf	color_data_collection@k& (0+255),b
  3555  00398A                     l4917:
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;color.c: 218:         LED_G();
  3559  00398A  ECC6  F02B         	call	_LED_G	;wreg free
  3560  00398E                     
  3561                           ;color.c: 219:         read_color(m);
  3562  00398E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3563  003992  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3564  003996  ECA4  F028         	call	_read_color	;wreg free
  3565  00399A                     
  3566                           ;color.c: 220:         color_display(m);
  3567  00399A  C05A  F058         	movff	color_data_collection@m,color_display@m
  3568  00399E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3569  0039A2  EC3B  F028         	call	_color_display	;wreg free
  3570  0039A6                     
  3571                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3572  0039A6  0E09               	movlw	9
  3573  0039A8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3574  0039AA  0E1E               	movlw	30
  3575  0039AC  6E5C               	movwf	??_color_data_collection^0,c
  3576  0039AE  0EE4               	movlw	228
  3577  0039B0                     u5787:
  3578  0039B0  2EE8               	decfsz	wreg,f,c
  3579  0039B2  D7FE               	bra	u5787
  3580  0039B4  2E5C               	decfsz	??_color_data_collection^0,f,c
  3581  0039B6  D7FC               	bra	u5787
  3582  0039B8  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3583  0039BA  D7FA               	bra	u5787
  3584  0039BC  D000               	nop2	
  3585  0039BE                     
  3586                           ;color.c: 222:     }
  3587  0039BE  0100               	movlb	0	; () banked
  3588  0039C0  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3589  0039C2  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3590  0039C4                     
  3591                           ; BSR set to: 0
  3592  0039C4  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3593  0039C6  EFEE  F01C         	goto	u5081
  3594  0039CA  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3595  0039CC  E109               	bnz	u5080
  3596  0039CE  0E05               	movlw	5
  3597  0039D0  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3598  0039D2  A0D8               	btfss	status,0,c
  3599  0039D4  EFEE  F01C         	goto	u5081
  3600  0039D8  EFF0  F01C         	goto	u5080
  3601  0039DC                     u5081:
  3602  0039DC  EFC5  F01C         	goto	l4917
  3603  0039E0                     u5080:
  3604  0039E0                     
  3605                           ; BSR set to: 0
  3606                           ;color.c: 223:     color_predict(00000);
  3607  0039E0  0E00               	movlw	0
  3608  0039E2  EC53  F02B         	call	_color_predict
  3609  0039E6                     
  3610                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3611  0039E6  0E00               	movlw	0
  3612  0039E8  0100               	movlb	0	; () banked
  3613  0039EA  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3614  0039EC  0E00               	movlw	0
  3615  0039EE  6FE4               	movwf	color_data_collection@x& (0+255),b
  3616  0039F0                     l4937:
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;color.c: 225:         LED_B();
  3620  0039F0  ECD6  F02B         	call	_LED_B	;wreg free
  3621  0039F4                     
  3622                           ;color.c: 226:         read_color(m);
  3623  0039F4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3624  0039F8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3625  0039FC  ECA4  F028         	call	_read_color	;wreg free
  3626  003A00                     
  3627                           ;color.c: 227:         color_display(m);
  3628  003A00  C05A  F058         	movff	color_data_collection@m,color_display@m
  3629  003A04  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3630  003A08  EC3B  F028         	call	_color_display	;wreg free
  3631  003A0C                     
  3632                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3633  003A0C  0E09               	movlw	9
  3634  003A0E  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3635  003A10  0E1E               	movlw	30
  3636  003A12  6E5C               	movwf	??_color_data_collection^0,c
  3637  003A14  0EE4               	movlw	228
  3638  003A16                     u5797:
  3639  003A16  2EE8               	decfsz	wreg,f,c
  3640  003A18  D7FE               	bra	u5797
  3641  003A1A  2E5C               	decfsz	??_color_data_collection^0,f,c
  3642  003A1C  D7FC               	bra	u5797
  3643  003A1E  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3644  003A20  D7FA               	bra	u5797
  3645  003A22  D000               	nop2	
  3646  003A24                     
  3647                           ;color.c: 229:     }
  3648  003A24  0100               	movlb	0	; () banked
  3649  003A26  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3650  003A28  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3651  003A2A                     
  3652                           ; BSR set to: 0
  3653  003A2A  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3654  003A2C  EF21  F01D         	goto	u5091
  3655  003A30  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3656  003A32  E109               	bnz	u5090
  3657  003A34  0E05               	movlw	5
  3658  003A36  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3659  003A38  A0D8               	btfss	status,0,c
  3660  003A3A  EF21  F01D         	goto	u5091
  3661  003A3E  EF23  F01D         	goto	u5090
  3662  003A42                     u5091:
  3663  003A42  EFF8  F01C         	goto	l4937
  3664  003A46                     u5090:
  3665  003A46                     
  3666                           ; BSR set to: 0
  3667                           ;color.c: 230:     color_predict(1);
  3668  003A46  0E01               	movlw	1
  3669  003A48  EC53  F02B         	call	_color_predict
  3670  003A4C                     
  3671                           ;color.c: 231:     LED_C();
  3672  003A4C  ECE6  F02B         	call	_LED_C	;wreg free
  3673  003A50  0012               	return		;funcret
  3674  003A52                     __end_of_color_data_collection:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _read_color *****************
  3678 ;; Defined at:
  3679 ;;		line 147 in file "color.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3682 ;;		 -> main@rgb(8), 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      void 
  3687 ;; Registers used:
  3688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;Total ram usage:        2 bytes
  3699 ;; Hardware stack levels used: 1
  3700 ;; Hardware stack levels required when called: 4
  3701 ;; This function calls:
  3702 ;;		_color_read_Blue
  3703 ;;		_color_read_Clear
  3704 ;;		_color_read_Green
  3705 ;;		_color_read_Red
  3706 ;; This function is called by:
  3707 ;;		_color_data_collection
  3708 ;;		_detect_color
  3709 ;;		_test_function
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text7
  3714  005148                     __ptext7:
  3715                           	callstack 0
  3716  005148                     _read_color:
  3717                           	callstack 24
  3718  005148                     
  3719                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3720  005148  EC27  F029         	call	_color_read_Red	;wreg free
  3721  00514C  C00C  FFD9         	movff	read_color@m,fsr2l
  3722  005150  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3723  005154  C005  FFDE         	movff	?_color_read_Red,postinc2
  3724  005158  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3725                           
  3726                           ;color.c: 150:     m->B = color_read_Blue();
  3727  00515C  EC77  F029         	call	_color_read_Blue	;wreg free
  3728  005160  EE20 F004          	lfsr	2,4
  3729  005164  500C               	movf	read_color@m^0,w,c
  3730  005166  26D9               	addwf	fsr2l,f,c
  3731  005168  500D               	movf	(read_color@m+1)^0,w,c
  3732  00516A  22DA               	addwfc	fsr2h,f,c
  3733  00516C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3734  005170  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3735                           
  3736                           ;color.c: 151:     m->G = color_read_Green();
  3737  005174  EC4F  F029         	call	_color_read_Green	;wreg free
  3738  005178  EE20 F002          	lfsr	2,2
  3739  00517C  500C               	movf	read_color@m^0,w,c
  3740  00517E  26D9               	addwf	fsr2l,f,c
  3741  005180  500D               	movf	(read_color@m+1)^0,w,c
  3742  005182  22DA               	addwfc	fsr2h,f,c
  3743  005184  C005  FFDE         	movff	?_color_read_Green,postinc2
  3744  005188  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3745                           
  3746                           ;color.c: 152:     m->C = color_read_Clear();
  3747  00518C  EC9F  F029         	call	_color_read_Clear	;wreg free
  3748  005190  EE20 F006          	lfsr	2,6
  3749  005194  500C               	movf	read_color@m^0,w,c
  3750  005196  26D9               	addwf	fsr2l,f,c
  3751  005198  500D               	movf	(read_color@m+1)^0,w,c
  3752  00519A  22DA               	addwfc	fsr2h,f,c
  3753  00519C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3754  0051A0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3755  0051A4  0012               	return		;funcret
  3756  0051A6                     __end_of_read_color:
  3757                           	callstack 0
  3758                           
  3759 ;; *************** function _color_display *****************
  3760 ;; Defined at:
  3761 ;;		line 234 in file "color.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3764 ;;		 -> main@rgb(8), 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3779 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;Total ram usage:      102 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 9
  3783 ;; This function calls:
  3784 ;;		_sendStringSerial4
  3785 ;;		_sprintf
  3786 ;; This function is called by:
  3787 ;;		_color_data_collection
  3788 ;;		_test_function
  3789 ;; This function uses a non-reentrant model
  3790 ;;
  3791                           
  3792                           	psect	text8
  3793  005076                     __ptext8:
  3794                           	callstack 0
  3795  005076                     _color_display:
  3796                           	callstack 20
  3797  005076                     
  3798                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3799  005076  0E79               	movlw	low color_display@buf
  3800  005078  0100               	movlb	0	; () banked
  3801  00507A  6F60               	movwf	sprintf@s& (0+255),b
  3802  00507C  0E00               	movlw	high color_display@buf
  3803  00507E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3804  005080  0E05               	movlw	low STR_1
  3805  005082  6F62               	movwf	sprintf@fmt& (0+255),b
  3806  005084  0E0E               	movlw	high STR_1
  3807  005086  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3808  005088  C058  FFD9         	movff	color_display@m,fsr2l
  3809  00508C  C059  FFDA         	movff	color_display@m+1,fsr2h
  3810  005090  CFDE F064          	movff	postinc2,?_sprintf+4
  3811  005094  CFDD F065          	movff	postdec2,?_sprintf+5
  3812  005098  EE20 F002          	lfsr	2,2
  3813  00509C  5058               	movf	color_display@m^0,w,c
  3814  00509E  26D9               	addwf	fsr2l,f,c
  3815  0050A0  5059               	movf	(color_display@m+1)^0,w,c
  3816  0050A2  22DA               	addwfc	fsr2h,f,c
  3817  0050A4  CFDE F066          	movff	postinc2,?_sprintf+6
  3818  0050A8  CFDD F067          	movff	postdec2,?_sprintf+7
  3819  0050AC  EE20 F004          	lfsr	2,4
  3820  0050B0  5058               	movf	color_display@m^0,w,c
  3821  0050B2  26D9               	addwf	fsr2l,f,c
  3822  0050B4  5059               	movf	(color_display@m+1)^0,w,c
  3823  0050B6  22DA               	addwfc	fsr2h,f,c
  3824  0050B8  CFDE F068          	movff	postinc2,?_sprintf+8
  3825  0050BC  CFDD F069          	movff	postdec2,?_sprintf+9
  3826  0050C0  EE20 F006          	lfsr	2,6
  3827  0050C4  5058               	movf	color_display@m^0,w,c
  3828  0050C6  26D9               	addwf	fsr2l,f,c
  3829  0050C8  5059               	movf	(color_display@m+1)^0,w,c
  3830  0050CA  22DA               	addwfc	fsr2h,f,c
  3831  0050CC  CFDE F06A          	movff	postinc2,?_sprintf+10
  3832  0050D0  CFDD F06B          	movff	postdec2,?_sprintf+11
  3833  0050D4  ECFE  F028         	call	_sprintf	;wreg free
  3834  0050D8                     
  3835                           ;color.c: 238:     sendStringSerial4(buf);
  3836  0050D8  0E79               	movlw	low color_display@buf
  3837  0050DA  6E02               	movwf	sendStringSerial4@string^0,c
  3838  0050DC  0E00               	movlw	high color_display@buf
  3839  0050DE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3840  0050E0  EC3B  F02B         	call	_sendStringSerial4	;wreg free
  3841  0050E4  0012               	return		;funcret
  3842  0050E6                     __end_of_color_display:
  3843                           	callstack 0
  3844                           
  3845 ;; *************** function _calibrate_white *****************
  3846 ;; Defined at:
  3847 ;;		line 258 in file "color.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  w               2   11[COMRAM] PTR struct white_card
  3850 ;;		 -> main@white(26), 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3862 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;Total ram usage:        4 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 4
  3869 ;; This function calls:
  3870 ;;		_LED_B
  3871 ;;		_LED_C
  3872 ;;		_LED_G
  3873 ;;		_LED_OFF
  3874 ;;		_LED_R
  3875 ;;		_color_read_Blue
  3876 ;;		_color_read_Clear
  3877 ;;		_color_read_Green
  3878 ;;		_color_read_Red
  3879 ;;		_toggle_light
  3880 ;; This function is called by:
  3881 ;;		_main
  3882 ;;		_test_function
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text9
  3887  0034D6                     __ptext9:
  3888                           	callstack 0
  3889  0034D6                     _calibrate_white:
  3890                           	callstack 25
  3891  0034D6                     
  3892                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  3893  0034D6  ECB6  F02B         	call	_LED_OFF	;wreg free
  3894  0034DA                     
  3895                           ;color.c: 261:     toggle_light(1,2);
  3896  0034DA  0E02               	movlw	2
  3897  0034DC  6E01               	movwf	toggle_light@toggletime^0,c
  3898  0034DE  0E01               	movlw	1
  3899  0034E0  EC15  F019         	call	_toggle_light
  3900  0034E4                     
  3901                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3902  0034E4  0E29               	movlw	41
  3903  0034E6  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3904  0034E8  0E96               	movlw	150
  3905  0034EA  6E0E               	movwf	??_calibrate_white^0,c
  3906  0034EC  0E7F               	movlw	127
  3907  0034EE                     u5807:
  3908  0034EE  2EE8               	decfsz	wreg,f,c
  3909  0034F0  D7FE               	bra	u5807
  3910  0034F2  2E0E               	decfsz	??_calibrate_white^0,f,c
  3911  0034F4  D7FC               	bra	u5807
  3912  0034F6  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3913  0034F8  D7FA               	bra	u5807
  3914  0034FA  F000               	nop	
  3915  0034FC                     
  3916                           ;color.c: 264:     LED_R();
  3917  0034FC  ECA6  F02B         	call	_LED_R	;wreg free
  3918  003500                     
  3919                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  3920  003500  EC27  F029         	call	_color_read_Red	;wreg free
  3921  003504  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  3922  003508  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  3923  00350C  C005  FFDE         	movff	?_color_read_Red,postinc2
  3924  003510  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3925  003514  EC4F  F029         	call	_color_read_Green	;wreg free
  3926  003518  EE20 F002          	lfsr	2,2
  3927  00351C  500C               	movf	calibrate_white@w^0,w,c
  3928  00351E  26D9               	addwf	fsr2l,f,c
  3929  003520  500D               	movf	(calibrate_white@w+1)^0,w,c
  3930  003522  22DA               	addwfc	fsr2h,f,c
  3931  003524  C005  FFDE         	movff	?_color_read_Green,postinc2
  3932  003528  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3933  00352C  EC77  F029         	call	_color_read_Blue	;wreg free
  3934  003530  EE20 F004          	lfsr	2,4
  3935  003534  500C               	movf	calibrate_white@w^0,w,c
  3936  003536  26D9               	addwf	fsr2l,f,c
  3937  003538  500D               	movf	(calibrate_white@w+1)^0,w,c
  3938  00353A  22DA               	addwfc	fsr2h,f,c
  3939  00353C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3940  003540  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3941  003544                     
  3942                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3943  003544  0E09               	movlw	9
  3944  003546  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3945  003548  0E1E               	movlw	30
  3946  00354A  6E0E               	movwf	??_calibrate_white^0,c
  3947  00354C  0EE4               	movlw	228
  3948  00354E                     u5817:
  3949  00354E  2EE8               	decfsz	wreg,f,c
  3950  003550  D7FE               	bra	u5817
  3951  003552  2E0E               	decfsz	??_calibrate_white^0,f,c
  3952  003554  D7FC               	bra	u5817
  3953  003556  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3954  003558  D7FA               	bra	u5817
  3955  00355A  D000               	nop2	
  3956  00355C                     
  3957                           ;color.c: 268:     LED_G();
  3958  00355C  ECC6  F02B         	call	_LED_G	;wreg free
  3959  003560                     
  3960                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  3961  003560  EC27  F029         	call	_color_read_Red	;wreg free
  3962  003564  EE20 F006          	lfsr	2,6
  3963  003568  500C               	movf	calibrate_white@w^0,w,c
  3964  00356A  26D9               	addwf	fsr2l,f,c
  3965  00356C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3966  00356E  22DA               	addwfc	fsr2h,f,c
  3967  003570  C005  FFDE         	movff	?_color_read_Red,postinc2
  3968  003574  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3969  003578  EC4F  F029         	call	_color_read_Green	;wreg free
  3970  00357C  EE20 F008          	lfsr	2,8
  3971  003580  500C               	movf	calibrate_white@w^0,w,c
  3972  003582  26D9               	addwf	fsr2l,f,c
  3973  003584  500D               	movf	(calibrate_white@w+1)^0,w,c
  3974  003586  22DA               	addwfc	fsr2h,f,c
  3975  003588  C005  FFDE         	movff	?_color_read_Green,postinc2
  3976  00358C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3977  003590  EC77  F029         	call	_color_read_Blue	;wreg free
  3978  003594  EE20 F00A          	lfsr	2,10
  3979  003598  500C               	movf	calibrate_white@w^0,w,c
  3980  00359A  26D9               	addwf	fsr2l,f,c
  3981  00359C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3982  00359E  22DA               	addwfc	fsr2h,f,c
  3983  0035A0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3984  0035A4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3985  0035A8                     
  3986                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3987  0035A8  0E09               	movlw	9
  3988  0035AA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3989  0035AC  0E1E               	movlw	30
  3990  0035AE  6E0E               	movwf	??_calibrate_white^0,c
  3991  0035B0  0EE4               	movlw	228
  3992  0035B2                     u5827:
  3993  0035B2  2EE8               	decfsz	wreg,f,c
  3994  0035B4  D7FE               	bra	u5827
  3995  0035B6  2E0E               	decfsz	??_calibrate_white^0,f,c
  3996  0035B8  D7FC               	bra	u5827
  3997  0035BA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3998  0035BC  D7FA               	bra	u5827
  3999  0035BE  D000               	nop2	
  4000  0035C0                     
  4001                           ;color.c: 273:     LED_B();
  4002  0035C0  ECD6  F02B         	call	_LED_B	;wreg free
  4003  0035C4                     
  4004                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  4005  0035C4  EC27  F029         	call	_color_read_Red	;wreg free
  4006  0035C8  EE20 F00C          	lfsr	2,12
  4007  0035CC  500C               	movf	calibrate_white@w^0,w,c
  4008  0035CE  26D9               	addwf	fsr2l,f,c
  4009  0035D0  500D               	movf	(calibrate_white@w+1)^0,w,c
  4010  0035D2  22DA               	addwfc	fsr2h,f,c
  4011  0035D4  C005  FFDE         	movff	?_color_read_Red,postinc2
  4012  0035D8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4013  0035DC  EC4F  F029         	call	_color_read_Green	;wreg free
  4014  0035E0  EE20 F00E          	lfsr	2,14
  4015  0035E4  500C               	movf	calibrate_white@w^0,w,c
  4016  0035E6  26D9               	addwf	fsr2l,f,c
  4017  0035E8  500D               	movf	(calibrate_white@w+1)^0,w,c
  4018  0035EA  22DA               	addwfc	fsr2h,f,c
  4019  0035EC  C005  FFDE         	movff	?_color_read_Green,postinc2
  4020  0035F0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4021  0035F4  EC77  F029         	call	_color_read_Blue	;wreg free
  4022  0035F8  EE20 F010          	lfsr	2,16
  4023  0035FC  500C               	movf	calibrate_white@w^0,w,c
  4024  0035FE  26D9               	addwf	fsr2l,f,c
  4025  003600  500D               	movf	(calibrate_white@w+1)^0,w,c
  4026  003602  22DA               	addwfc	fsr2h,f,c
  4027  003604  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4028  003608  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4029  00360C                     
  4030                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4031  00360C  0E09               	movlw	9
  4032  00360E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4033  003610  0E1E               	movlw	30
  4034  003612  6E0E               	movwf	??_calibrate_white^0,c
  4035  003614  0EE4               	movlw	228
  4036  003616                     u5837:
  4037  003616  2EE8               	decfsz	wreg,f,c
  4038  003618  D7FE               	bra	u5837
  4039  00361A  2E0E               	decfsz	??_calibrate_white^0,f,c
  4040  00361C  D7FC               	bra	u5837
  4041  00361E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4042  003620  D7FA               	bra	u5837
  4043  003622  D000               	nop2	
  4044  003624                     
  4045                           ;color.c: 277:     LED_C();
  4046  003624  ECE6  F02B         	call	_LED_C	;wreg free
  4047  003628                     
  4048                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4049  003628  EC27  F029         	call	_color_read_Red	;wreg free
  4050  00362C  EE20 F012          	lfsr	2,18
  4051  003630  500C               	movf	calibrate_white@w^0,w,c
  4052  003632  26D9               	addwf	fsr2l,f,c
  4053  003634  500D               	movf	(calibrate_white@w+1)^0,w,c
  4054  003636  22DA               	addwfc	fsr2h,f,c
  4055  003638  C005  FFDE         	movff	?_color_read_Red,postinc2
  4056  00363C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4057  003640  EC4F  F029         	call	_color_read_Green	;wreg free
  4058  003644  EE20 F014          	lfsr	2,20
  4059  003648  500C               	movf	calibrate_white@w^0,w,c
  4060  00364A  26D9               	addwf	fsr2l,f,c
  4061  00364C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4062  00364E  22DA               	addwfc	fsr2h,f,c
  4063  003650  C005  FFDE         	movff	?_color_read_Green,postinc2
  4064  003654  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4065  003658  EC77  F029         	call	_color_read_Blue	;wreg free
  4066  00365C  EE20 F016          	lfsr	2,22
  4067  003660  500C               	movf	calibrate_white@w^0,w,c
  4068  003662  26D9               	addwf	fsr2l,f,c
  4069  003664  500D               	movf	(calibrate_white@w+1)^0,w,c
  4070  003666  22DA               	addwfc	fsr2h,f,c
  4071  003668  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4072  00366C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4073  003670  EC9F  F029         	call	_color_read_Clear	;wreg free
  4074  003674  EE20 F018          	lfsr	2,24
  4075  003678  500C               	movf	calibrate_white@w^0,w,c
  4076  00367A  26D9               	addwf	fsr2l,f,c
  4077  00367C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4078  00367E  22DA               	addwfc	fsr2h,f,c
  4079  003680  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4080  003684  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4081  003688                     
  4082                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4083  003688  0E29               	movlw	41
  4084  00368A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4085  00368C  0E96               	movlw	150
  4086  00368E  6E0E               	movwf	??_calibrate_white^0,c
  4087  003690  0E7F               	movlw	127
  4088  003692                     u5847:
  4089  003692  2EE8               	decfsz	wreg,f,c
  4090  003694  D7FE               	bra	u5847
  4091  003696  2E0E               	decfsz	??_calibrate_white^0,f,c
  4092  003698  D7FC               	bra	u5847
  4093  00369A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4094  00369C  D7FA               	bra	u5847
  4095  00369E  F000               	nop	
  4096  0036A0                     
  4097                           ;color.c: 281:     LED_OFF();
  4098  0036A0  ECB6  F02B         	call	_LED_OFF	;wreg free
  4099  0036A4                     
  4100                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4101  0036A4  0E29               	movlw	41
  4102  0036A6  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4103  0036A8  0E96               	movlw	150
  4104  0036AA  6E0E               	movwf	??_calibrate_white^0,c
  4105  0036AC  0E7F               	movlw	127
  4106  0036AE                     u5857:
  4107  0036AE  2EE8               	decfsz	wreg,f,c
  4108  0036B0  D7FE               	bra	u5857
  4109  0036B2  2E0E               	decfsz	??_calibrate_white^0,f,c
  4110  0036B4  D7FC               	bra	u5857
  4111  0036B6  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4112  0036B8  D7FA               	bra	u5857
  4113  0036BA  F000               	nop	
  4114  0036BC                     
  4115                           ;color.c: 283:     toggle_light(1,2);
  4116  0036BC  0E02               	movlw	2
  4117  0036BE  6E01               	movwf	toggle_light@toggletime^0,c
  4118  0036C0  0E01               	movlw	1
  4119  0036C2  EC15  F019         	call	_toggle_light
  4120  0036C6  0012               	return		;funcret
  4121  0036C8                     __end_of_calibrate_white:
  4122                           	callstack 0
  4123                           
  4124 ;; *************** function _color_read_Red *****************
  4125 ;; Defined at:
  4126 ;;		line 91 in file "color.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  tmp             2    9[COMRAM] unsigned int 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  2    4[COMRAM] unsigned int 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4140 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4142 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;Total ram usage:        7 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 3
  4147 ;; This function calls:
  4148 ;;		_I2C_2_Master_Read
  4149 ;;		_I2C_2_Master_RepStart
  4150 ;;		_I2C_2_Master_Start
  4151 ;;		_I2C_2_Master_Stop
  4152 ;;		_I2C_2_Master_Write
  4153 ;; This function is called by:
  4154 ;;		_read_color
  4155 ;;		_calibrate_white
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           	psect	text10
  4160  00524E                     __ptext10:
  4161                           	callstack 0
  4162  00524E                     _color_read_Red:
  4163                           	callstack 24
  4164  00524E                     
  4165                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4166  00524E  EC61  F02C         	call	_I2C_2_Master_Start	;wreg free
  4167                           
  4168                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4169  005252  0E52               	movlw	82
  4170  005254  EC4B  F02C         	call	_I2C_2_Master_Write
  4171                           
  4172                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4173  005258  0EB6               	movlw	182
  4174  00525A  EC4B  F02C         	call	_I2C_2_Master_Write
  4175                           
  4176                           ;color.c: 97:  I2C_2_Master_RepStart();
  4177  00525E  EC57  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4178                           
  4179                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4180  005262  0E53               	movlw	83
  4181  005264  EC4B  F02C         	call	_I2C_2_Master_Write
  4182                           
  4183                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4184  005268  0E01               	movlw	1
  4185  00526A  EC0C  F02A         	call	_I2C_2_Master_Read
  4186  00526E  6E07               	movwf	??_color_read_Red^0,c
  4187  005270  5007               	movf	??_color_read_Red^0,w,c
  4188  005272  6E0A               	movwf	color_read_Red@tmp^0,c
  4189  005274  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4190                           
  4191                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4192  005276  0E00               	movlw	0
  4193  005278  EC0C  F02A         	call	_I2C_2_Master_Read
  4194  00527C  6E07               	movwf	??_color_read_Red^0,c
  4195  00527E  5007               	movf	??_color_read_Red^0,w,c
  4196  005280  6E09               	movwf	(??_color_read_Red+2)^0,c
  4197  005282  6A08               	clrf	(??_color_read_Red+1)^0,c
  4198  005284  500A               	movf	color_read_Red@tmp^0,w,c
  4199  005286  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4200  005288  6E0A               	movwf	color_read_Red@tmp^0,c
  4201  00528A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4202  00528C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4203  00528E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4204                           
  4205                           ;color.c: 101:  I2C_2_Master_Stop();
  4206  005290  EC5C  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4207  005294                     
  4208                           ;color.c: 102:  return tmp;
  4209  005294  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4210  005298  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4211  00529C  0012               	return		;funcret
  4212  00529E                     __end_of_color_read_Red:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _color_read_Green *****************
  4216 ;; Defined at:
  4217 ;;		line 119 in file "color.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  tmp             2    9[COMRAM] unsigned int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  2    4[COMRAM] unsigned int 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4231 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;Total ram usage:        7 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 3
  4238 ;; This function calls:
  4239 ;;		_I2C_2_Master_Read
  4240 ;;		_I2C_2_Master_RepStart
  4241 ;;		_I2C_2_Master_Start
  4242 ;;		_I2C_2_Master_Stop
  4243 ;;		_I2C_2_Master_Write
  4244 ;; This function is called by:
  4245 ;;		_read_color
  4246 ;;		_calibrate_white
  4247 ;;		_distance_measure
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text11
  4252  00529E                     __ptext11:
  4253                           	callstack 0
  4254  00529E                     _color_read_Green:
  4255                           	callstack 24
  4256  00529E                     
  4257                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4258  00529E  EC61  F02C         	call	_I2C_2_Master_Start	;wreg free
  4259                           
  4260                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4261  0052A2  0E52               	movlw	82
  4262  0052A4  EC4B  F02C         	call	_I2C_2_Master_Write
  4263                           
  4264                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4265  0052A8  0EB8               	movlw	184
  4266  0052AA  EC4B  F02C         	call	_I2C_2_Master_Write
  4267                           
  4268                           ;color.c: 125:  I2C_2_Master_RepStart();
  4269  0052AE  EC57  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4270                           
  4271                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4272  0052B2  0E53               	movlw	83
  4273  0052B4  EC4B  F02C         	call	_I2C_2_Master_Write
  4274                           
  4275                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4276  0052B8  0E01               	movlw	1
  4277  0052BA  EC0C  F02A         	call	_I2C_2_Master_Read
  4278  0052BE  6E07               	movwf	??_color_read_Green^0,c
  4279  0052C0  5007               	movf	??_color_read_Green^0,w,c
  4280  0052C2  6E0A               	movwf	color_read_Green@tmp^0,c
  4281  0052C4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4282                           
  4283                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4284  0052C6  0E00               	movlw	0
  4285  0052C8  EC0C  F02A         	call	_I2C_2_Master_Read
  4286  0052CC  6E07               	movwf	??_color_read_Green^0,c
  4287  0052CE  5007               	movf	??_color_read_Green^0,w,c
  4288  0052D0  6E09               	movwf	(??_color_read_Green+2)^0,c
  4289  0052D2  6A08               	clrf	(??_color_read_Green+1)^0,c
  4290  0052D4  500A               	movf	color_read_Green@tmp^0,w,c
  4291  0052D6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4292  0052D8  6E0A               	movwf	color_read_Green@tmp^0,c
  4293  0052DA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4294  0052DC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4295  0052DE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4296                           
  4297                           ;color.c: 129:  I2C_2_Master_Stop();
  4298  0052E0  EC5C  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4299  0052E4                     
  4300                           ;color.c: 130:  return tmp;
  4301  0052E4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4302  0052E8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4303  0052EC  0012               	return		;funcret
  4304  0052EE                     __end_of_color_read_Green:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _color_read_Blue *****************
  4308 ;; Defined at:
  4309 ;;		line 105 in file "color.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  tmp             2    9[COMRAM] unsigned int 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  2    4[COMRAM] unsigned int 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;Total ram usage:        7 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 3
  4330 ;; This function calls:
  4331 ;;		_I2C_2_Master_Read
  4332 ;;		_I2C_2_Master_RepStart
  4333 ;;		_I2C_2_Master_Start
  4334 ;;		_I2C_2_Master_Stop
  4335 ;;		_I2C_2_Master_Write
  4336 ;; This function is called by:
  4337 ;;		_read_color
  4338 ;;		_calibrate_white
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text12
  4343  0052EE                     __ptext12:
  4344                           	callstack 0
  4345  0052EE                     _color_read_Blue:
  4346                           	callstack 24
  4347  0052EE                     
  4348                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4349  0052EE  EC61  F02C         	call	_I2C_2_Master_Start	;wreg free
  4350                           
  4351                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4352  0052F2  0E52               	movlw	82
  4353  0052F4  EC4B  F02C         	call	_I2C_2_Master_Write
  4354                           
  4355                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4356  0052F8  0EBA               	movlw	186
  4357  0052FA  EC4B  F02C         	call	_I2C_2_Master_Write
  4358                           
  4359                           ;color.c: 111:  I2C_2_Master_RepStart();
  4360  0052FE  EC57  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  4361                           
  4362                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4363  005302  0E53               	movlw	83
  4364  005304  EC4B  F02C         	call	_I2C_2_Master_Write
  4365                           
  4366                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4367  005308  0E01               	movlw	1
  4368  00530A  EC0C  F02A         	call	_I2C_2_Master_Read
  4369  00530E  6E07               	movwf	??_color_read_Blue^0,c
  4370  005310  5007               	movf	??_color_read_Blue^0,w,c
  4371  005312  6E0A               	movwf	color_read_Blue@tmp^0,c
  4372  005314  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4373                           
  4374                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4375  005316  0E00               	movlw	0
  4376  005318  EC0C  F02A         	call	_I2C_2_Master_Read
  4377  00531C  6E07               	movwf	??_color_read_Blue^0,c
  4378  00531E  5007               	movf	??_color_read_Blue^0,w,c
  4379  005320  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4380  005322  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4381  005324  500A               	movf	color_read_Blue@tmp^0,w,c
  4382  005326  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4383  005328  6E0A               	movwf	color_read_Blue@tmp^0,c
  4384  00532A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4385  00532C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4386  00532E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4387                           
  4388                           ;color.c: 115:  I2C_2_Master_Stop();
  4389  005330  EC5C  F02C         	call	_I2C_2_Master_Stop	;wreg free
  4390  005334                     
  4391                           ;color.c: 116:  return tmp;
  4392  005334  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4393  005338  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4394  00533C  0012               	return		;funcret
  4395  00533E                     __end_of_color_read_Blue:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _LED_R *****************
  4399 ;; Defined at:
  4400 ;;		line 164 in file "color.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;		None
  4403 ;; Auto vars:     Size  Location     Type
  4404 ;;		None
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;Total ram usage:        2 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 1
  4421 ;; This function calls:
  4422 ;;		Nothing
  4423 ;; This function is called by:
  4424 ;;		_color_data_collection
  4425 ;;		_calibrate_white
  4426 ;;		_detect_color
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           	psect	text13
  4431  00574C                     __ptext13:
  4432                           	callstack 0
  4433  00574C                     _LED_R:
  4434                           	callstack 27
  4435  00574C                     
  4436                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4437  00574C  827F               	bsf	127,1,c	;volatile
  4438                           
  4439                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4440  00574E  9E7E               	bcf	126,7,c	;volatile
  4441                           
  4442                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4443  005750  9879               	bcf	121,4,c	;volatile
  4444  005752                     
  4445                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4446  005752  0E11               	movlw	17
  4447  005754  6E02               	movwf	(??_LED_R+1)^0,c
  4448  005756  0E3C               	movlw	60
  4449  005758  6E01               	movwf	??_LED_R^0,c
  4450  00575A  0ECB               	movlw	203
  4451  00575C                     u5867:
  4452  00575C  2EE8               	decfsz	wreg,f,c
  4453  00575E  D7FE               	bra	u5867
  4454  005760  2E01               	decfsz	??_LED_R^0,f,c
  4455  005762  D7FC               	bra	u5867
  4456  005764  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4457  005766  D7FA               	bra	u5867
  4458  005768  F000               	nop	
  4459  00576A  0012               	return		;funcret
  4460  00576C                     __end_of_LED_R:
  4461                           	callstack 0
  4462                           
  4463 ;; *************** function _LED_OFF *****************
  4464 ;; Defined at:
  4465 ;;		line 155 in file "color.c"
  4466 ;; Parameters:    Size  Location     Type
  4467 ;;		None
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  1    wreg      void 
  4472 ;; Registers used:
  4473 ;;		wreg
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;Total ram usage:        2 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 1
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_calibrate_white
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text14
  4494  00576C                     __ptext14:
  4495                           	callstack 0
  4496  00576C                     _LED_OFF:
  4497                           	callstack 27
  4498  00576C                     
  4499                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4500  00576C  927F               	bcf	127,1,c	;volatile
  4501                           
  4502                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4503  00576E  9E7E               	bcf	126,7,c	;volatile
  4504                           
  4505                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4506  005770  9879               	bcf	121,4,c	;volatile
  4507  005772                     
  4508                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4509  005772  0E11               	movlw	17
  4510  005774  6E02               	movwf	(??_LED_OFF+1)^0,c
  4511  005776  0E3C               	movlw	60
  4512  005778  6E01               	movwf	??_LED_OFF^0,c
  4513  00577A  0ECB               	movlw	203
  4514  00577C                     u5877:
  4515  00577C  2EE8               	decfsz	wreg,f,c
  4516  00577E  D7FE               	bra	u5877
  4517  005780  2E01               	decfsz	??_LED_OFF^0,f,c
  4518  005782  D7FC               	bra	u5877
  4519  005784  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4520  005786  D7FA               	bra	u5877
  4521  005788  F000               	nop	
  4522  00578A  0012               	return		;funcret
  4523  00578C                     __end_of_LED_OFF:
  4524                           	callstack 0
  4525                           
  4526 ;; *************** function _LED_G *****************
  4527 ;; Defined at:
  4528 ;;		line 191 in file "color.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4546 ;;Total ram usage:        2 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 1
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_color_data_collection
  4553 ;;		_calibrate_white
  4554 ;;		_detect_color
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text15
  4559  00578C                     __ptext15:
  4560                           	callstack 0
  4561  00578C                     _LED_G:
  4562                           	callstack 27
  4563  00578C                     
  4564                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4565  00578C  927F               	bcf	127,1,c	;volatile
  4566                           
  4567                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4568  00578E  9E7E               	bcf	126,7,c	;volatile
  4569                           
  4570                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4571  005790  8879               	bsf	121,4,c	;volatile
  4572  005792                     
  4573                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4574  005792  0E11               	movlw	17
  4575  005794  6E02               	movwf	(??_LED_G+1)^0,c
  4576  005796  0E3C               	movlw	60
  4577  005798  6E01               	movwf	??_LED_G^0,c
  4578  00579A  0ECB               	movlw	203
  4579  00579C                     u5887:
  4580  00579C  2EE8               	decfsz	wreg,f,c
  4581  00579E  D7FE               	bra	u5887
  4582  0057A0  2E01               	decfsz	??_LED_G^0,f,c
  4583  0057A2  D7FC               	bra	u5887
  4584  0057A4  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4585  0057A6  D7FA               	bra	u5887
  4586  0057A8  F000               	nop	
  4587  0057AA  0012               	return		;funcret
  4588  0057AC                     __end_of_LED_G:
  4589                           	callstack 0
  4590                           
  4591 ;; *************** function _LED_B *****************
  4592 ;; Defined at:
  4593 ;;		line 182 in file "color.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4611 ;;Total ram usage:        2 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_color_data_collection
  4618 ;;		_calibrate_white
  4619 ;;		_detect_color
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text16
  4624  0057AC                     __ptext16:
  4625                           	callstack 0
  4626  0057AC                     _LED_B:
  4627                           	callstack 27
  4628  0057AC                     
  4629                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4630  0057AC  927F               	bcf	127,1,c	;volatile
  4631                           
  4632                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4633  0057AE  8E7E               	bsf	126,7,c	;volatile
  4634                           
  4635                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4636  0057B0  9879               	bcf	121,4,c	;volatile
  4637  0057B2                     
  4638                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4639  0057B2  0E11               	movlw	17
  4640  0057B4  6E02               	movwf	(??_LED_B+1)^0,c
  4641  0057B6  0E3C               	movlw	60
  4642  0057B8  6E01               	movwf	??_LED_B^0,c
  4643  0057BA  0ECB               	movlw	203
  4644  0057BC                     u5897:
  4645  0057BC  2EE8               	decfsz	wreg,f,c
  4646  0057BE  D7FE               	bra	u5897
  4647  0057C0  2E01               	decfsz	??_LED_B^0,f,c
  4648  0057C2  D7FC               	bra	u5897
  4649  0057C4  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4650  0057C6  D7FA               	bra	u5897
  4651  0057C8  F000               	nop	
  4652  0057CA  0012               	return		;funcret
  4653  0057CC                     __end_of_LED_B:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _amb_light_measure *****************
  4657 ;; Defined at:
  4658 ;;		line 372 in file "color.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4661 ;;		 -> main@rgb(8), main@amb(8), 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4664 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4665 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4666 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4667 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  2   10[BANK0 ] unsigned int 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:       14 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 5
  4684 ;; This function calls:
  4685 ;;		_LED_C
  4686 ;;		___fldiv
  4687 ;;		___xxtofl
  4688 ;;		_color_read_Clear
  4689 ;;		_lroundf
  4690 ;;		_toggle_light
  4691 ;; This function is called by:
  4692 ;;		_main
  4693 ;;		_test_function
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text17
  4698  0046CA                     __ptext17:
  4699                           	callstack 0
  4700  0046CA                     _amb_light_measure:
  4701                           	callstack 24
  4702  0046CA  0E00               	movlw	0
  4703  0046CC  0100               	movlb	0	; () banked
  4704  0046CE  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4705  0046D0  0E00               	movlw	0
  4706  0046D2  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4707  0046D4  0E00               	movlw	0
  4708  0046D6  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4709  0046D8  0E00               	movlw	0
  4710  0046DA  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4711  0046DC  0E00               	movlw	0
  4712  0046DE  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4713  0046E0  0E00               	movlw	0
  4714  0046E2  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4715  0046E4                     
  4716                           ; BSR set to: 0
  4717                           ;color.c: 375:     toggle_light(2,2);
  4718  0046E4  0E02               	movlw	2
  4719  0046E6  6E01               	movwf	toggle_light@toggletime^0,c
  4720  0046E8  0E02               	movlw	2
  4721  0046EA  EC15  F019         	call	_toggle_light
  4722  0046EE                     
  4723                           ;color.c: 376:     LED_C();
  4724  0046EE  ECE6  F02B         	call	_LED_C	;wreg free
  4725  0046F2                     
  4726                           ;color.c: 377:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4727  0046F2  0E29               	movlw	41
  4728  0046F4  0100               	movlb	0	; () banked
  4729  0046F6  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4730  0046F8  0E96               	movlw	150
  4731  0046FA  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4732  0046FC  0E7F               	movlw	127
  4733  0046FE                     u5907:
  4734  0046FE  2EE8               	decfsz	wreg,f,c
  4735  004700  D7FE               	bra	u5907
  4736  004702  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4737  004704  D7FC               	bra	u5907
  4738  004706  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4739  004708  D7FA               	bra	u5907
  4740  00470A                     
  4741                           ;color.c: 379:     CC_amb_1 = color_read_Clear();
  4742  00470A  EC9F  F029         	call	_color_read_Clear	;wreg free
  4743  00470E  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4744  004712  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4745  004716                     
  4746                           ;color.c: 380:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4747  004716  0E11               	movlw	17
  4748  004718  0100               	movlb	0	; () banked
  4749  00471A  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4750  00471C  0E3C               	movlw	60
  4751  00471E  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4752  004720  0ECB               	movlw	203
  4753  004722                     u5917:
  4754  004722  2EE8               	decfsz	wreg,f,c
  4755  004724  D7FE               	bra	u5917
  4756  004726  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4757  004728  D7FC               	bra	u5917
  4758  00472A  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4759  00472C  D7FA               	bra	u5917
  4760  00472E                     
  4761                           ;color.c: 382:     CC_amb_2 = color_read_Clear();
  4762  00472E  EC9F  F029         	call	_color_read_Clear	;wreg free
  4763  004732  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4764  004736  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4765  00473A                     
  4766                           ;color.c: 383:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4767  00473A  0E11               	movlw	17
  4768  00473C  0100               	movlb	0	; () banked
  4769  00473E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4770  004740  0E3C               	movlw	60
  4771  004742  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4772  004744  0ECB               	movlw	203
  4773  004746                     u5927:
  4774  004746  2EE8               	decfsz	wreg,f,c
  4775  004748  D7FE               	bra	u5927
  4776  00474A  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4777  00474C  D7FC               	bra	u5927
  4778  00474E  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4779  004750  D7FA               	bra	u5927
  4780  004752                     
  4781                           ;color.c: 385:     CC_amb_3 = color_read_Clear();
  4782  004752  EC9F  F029         	call	_color_read_Clear	;wreg free
  4783  004756  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  4784  00475A  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  4785  00475E                     
  4786                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4787  00475E  0E11               	movlw	17
  4788  004760  0100               	movlb	0	; () banked
  4789  004762  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4790  004764  0E3C               	movlw	60
  4791  004766  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4792  004768  0ECB               	movlw	203
  4793  00476A                     u5937:
  4794  00476A  2EE8               	decfsz	wreg,f,c
  4795  00476C  D7FE               	bra	u5937
  4796  00476E  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4797  004770  D7FC               	bra	u5937
  4798  004772  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4799  004774  D7FA               	bra	u5937
  4800  004776                     
  4801                           ;color.c: 388:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  4802  004776  0100               	movlb	0	; () banked
  4803  004778  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  4804  00477A  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  4805  00477C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4806  00477E  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  4807  004780  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  4808  004782  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4809  004784  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  4810  004786  276C               	addwf	??_amb_light_measure& (0+255),f,b
  4811  004788  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  4812  00478A  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  4813  00478C  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  4814  004790  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  4815  004794  6A03               	clrf	(___xxtofl@val+2)^0,c
  4816  004796  6A04               	clrf	(___xxtofl@val+3)^0,c
  4817  004798  0E00               	movlw	0
  4818  00479A  EC29  F01D         	call	___xxtofl
  4819  00479E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4820  0047A2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4821  0047A6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4822  0047AA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4823  0047AE  0E00               	movlw	0
  4824  0047B0  6E13               	movwf	___fldiv@a^0,c
  4825  0047B2  0E00               	movlw	0
  4826  0047B4  6E14               	movwf	(___fldiv@a+1)^0,c
  4827  0047B6  0E40               	movlw	64
  4828  0047B8  6E15               	movwf	(___fldiv@a+2)^0,c
  4829  0047BA  0E40               	movlw	64
  4830  0047BC  6E16               	movwf	(___fldiv@a+3)^0,c
  4831  0047BE  EC06  F013         	call	___fldiv	;wreg free
  4832  0047C2  C00F  F066         	movff	?___fldiv,lroundf@x
  4833  0047C6  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  4834  0047CA  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  4835  0047CE  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  4836  0047D2  ECCD  F02A         	call	_lroundf	;wreg free
  4837  0047D6  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  4838  0047DA  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  4839  0047DE                     
  4840                           ;color.c: 390:     toggle_light(2,2);
  4841  0047DE  0E02               	movlw	2
  4842  0047E0  6E01               	movwf	toggle_light@toggletime^0,c
  4843  0047E2  0E02               	movlw	2
  4844  0047E4  EC15  F019         	call	_toggle_light
  4845  0047E8                     
  4846                           ;color.c: 392:     return CC_amb_ave;
  4847  0047E8  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  4848  0047EC  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  4849  0047F0  0012               	return		;funcret
  4850  0047F2                     __end_of_amb_light_measure:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _lroundf *****************
  4854 ;; Defined at:
  4855 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  x               4    6[BANK0 ] float 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  4    6[BANK0 ] long 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;Total ram usage:        4 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 4
  4876 ;; This function calls:
  4877 ;;		___fltol
  4878 ;;		_roundf
  4879 ;; This function is called by:
  4880 ;;		_detect_color
  4881 ;;		_amb_light_measure
  4882 ;;		_distance_measure
  4883 ;;		_check_color_reading
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text18
  4888  00559A                     __ptext18:
  4889                           	callstack 0
  4890  00559A                     _lroundf:
  4891                           	callstack 24
  4892  00559A  C066  F041         	movff	lroundf@x,roundf@x
  4893  00559E  C067  F042         	movff	lroundf@x+1,roundf@x+1
  4894  0055A2  C068  F043         	movff	lroundf@x+2,roundf@x+2
  4895  0055A6  C069  F044         	movff	lroundf@x+3,roundf@x+3
  4896  0055AA  EC2F  F011         	call	_roundf	;wreg free
  4897  0055AE  C041  F05B         	movff	?_roundf,___fltol@f1
  4898  0055B2  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  4899  0055B6  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  4900  0055BA  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  4901  0055BE  ECF9  F023         	call	___fltol	;wreg free
  4902  0055C2  C05B  F066         	movff	?___fltol,?_lroundf
  4903  0055C6  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  4904  0055CA  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  4905  0055CE  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  4906  0055D2  0012               	return		;funcret
  4907  0055D4                     __end_of_lroundf:
  4908                           	callstack 0
  4909                           
  4910 ;; *************** function _roundf *****************
  4911 ;; Defined at:
  4912 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  x               4   64[COMRAM] float 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  y               4   86[COMRAM] float 
  4917 ;;  u               4   82[COMRAM] struct .
  4918 ;;  e               2   76[COMRAM] int 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  4   64[COMRAM] float 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;Total ram usage:       26 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 3
  4935 ;; This function calls:
  4936 ;;		___fladd
  4937 ;;		___flge
  4938 ;;		___flmul
  4939 ;;		___flneg
  4940 ;;		___flsub
  4941 ;; This function is called by:
  4942 ;;		_lroundf
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text19
  4947  00225E                     __ptext19:
  4948                           	callstack 0
  4949  00225E                     _roundf:
  4950                           	callstack 24
  4951  00225E  C18C  F053         	movff	roundf@F527,roundf@u
  4952  002262  C18D  F054         	movff	roundf@F527+1,roundf@u+1
  4953  002266  C18E  F055         	movff	roundf@F527+2,roundf@u+2
  4954  00226A  C18F  F056         	movff	roundf@F527+3,roundf@u+3
  4955  00226E  C041  F053         	movff	roundf@x,roundf@u
  4956  002272  C042  F054         	movff	roundf@x+1,roundf@u+1
  4957  002276  C043  F055         	movff	roundf@x+2,roundf@u+2
  4958  00227A  C044  F056         	movff	roundf@x+3,roundf@u+3
  4959  00227E  C053  F045         	movff	roundf@u,??_roundf
  4960  002282  C054  F046         	movff	roundf@u+1,??_roundf+1
  4961  002286  C055  F047         	movff	roundf@u+2,??_roundf+2
  4962  00228A  C056  F048         	movff	roundf@u+3,??_roundf+3
  4963  00228E  0E18               	movlw	24
  4964  002290  EF4F  F011         	goto	u4220
  4965  002294                     u4225:
  4966  002294  90D8               	bcf	status,0,c
  4967  002296  3248               	rrcf	(??_roundf+3)^0,f,c
  4968  002298  3247               	rrcf	(??_roundf+2)^0,f,c
  4969  00229A  3246               	rrcf	(??_roundf+1)^0,f,c
  4970  00229C  3245               	rrcf	??_roundf^0,f,c
  4971  00229E                     u4220:
  4972  00229E  2EE8               	decfsz	wreg,f,c
  4973  0022A0  EF4A  F011         	goto	u4225
  4974  0022A4  5045               	movf	??_roundf^0,w,c
  4975  0022A6  6E4D               	movwf	roundf@e^0,c
  4976  0022A8  6A4E               	clrf	(roundf@e+1)^0,c
  4977  0022AA  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4978  0022AC  EF61  F011         	goto	u4231
  4979  0022B0  504E               	movf	(roundf@e+1)^0,w,c
  4980  0022B2  E109               	bnz	u4230
  4981  0022B4  0E96               	movlw	150
  4982  0022B6  5C4D               	subwf	roundf@e^0,w,c
  4983  0022B8  A0D8               	btfss	status,0,c
  4984  0022BA  EF61  F011         	goto	u4231
  4985  0022BE  EF63  F011         	goto	u4230
  4986  0022C2                     u4231:
  4987  0022C2  EF6D  F011         	goto	l4453
  4988  0022C6                     u4230:
  4989  0022C6  C041  F041         	movff	roundf@x,?_roundf
  4990  0022CA  C042  F042         	movff	roundf@x+1,?_roundf+1
  4991  0022CE  C043  F043         	movff	roundf@x+2,?_roundf+2
  4992  0022D2  C044  F044         	movff	roundf@x+3,?_roundf+3
  4993  0022D6  EF05  F013         	goto	l1570
  4994  0022DA                     l4453:
  4995  0022DA  C053  F045         	movff	roundf@u,??_roundf
  4996  0022DE  C054  F046         	movff	roundf@u+1,??_roundf+1
  4997  0022E2  C055  F047         	movff	roundf@u+2,??_roundf+2
  4998  0022E6  C056  F048         	movff	roundf@u+3,??_roundf+3
  4999  0022EA  0E20               	movlw	32
  5000  0022EC  EF7D  F011         	goto	u4240
  5001  0022F0                     u4245:
  5002  0022F0  90D8               	bcf	status,0,c
  5003  0022F2  3248               	rrcf	(??_roundf+3)^0,f,c
  5004  0022F4  3247               	rrcf	(??_roundf+2)^0,f,c
  5005  0022F6  3246               	rrcf	(??_roundf+1)^0,f,c
  5006  0022F8  3245               	rrcf	??_roundf^0,f,c
  5007  0022FA                     u4240:
  5008  0022FA  2EE8               	decfsz	wreg,f,c
  5009  0022FC  EF78  F011         	goto	u4245
  5010  002300  5045               	movf	??_roundf^0,w,c
  5011  002302  1046               	iorwf	(??_roundf+1)^0,w,c
  5012  002304  1047               	iorwf	(??_roundf+2)^0,w,c
  5013  002306  1048               	iorwf	(??_roundf+3)^0,w,c
  5014  002308  B4D8               	btfsc	status,2,c
  5015  00230A  EF89  F011         	goto	u4251
  5016  00230E  EF8B  F011         	goto	u4250
  5017  002312                     u4251:
  5018  002312  EF9D  F011         	goto	l4457
  5019  002316                     u4250:
  5020  002316  C041  F001         	movff	roundf@x,___flneg@f1
  5021  00231A  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  5022  00231E  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  5023  002322  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  5024  002326  ECEA  F02A         	call	___flneg	;wreg free
  5025  00232A  C001  F041         	movff	?___flneg,roundf@x
  5026  00232E  C002  F042         	movff	?___flneg+1,roundf@x+1
  5027  002332  C003  F043         	movff	?___flneg+2,roundf@x+2
  5028  002336  C004  F044         	movff	?___flneg+3,roundf@x+3
  5029  00233A                     l4457:
  5030  00233A  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5031  00233C  EFAB  F011         	goto	u4260
  5032  002340  504E               	movf	(roundf@e+1)^0,w,c
  5033  002342  E107               	bnz	u4261
  5034  002344  0E7E               	movlw	126
  5035  002346  5C4D               	subwf	roundf@e^0,w,c
  5036  002348  B0D8               	btfsc	status,0,c
  5037  00234A  EFA9  F011         	goto	u4261
  5038  00234E  EFAB  F011         	goto	u4260
  5039  002352                     u4261:
  5040  002352  EFC7  F011         	goto	l4463
  5041  002356                     u4260:
  5042  002356  C053  F028         	movff	roundf@u,___flmul@b
  5043  00235A  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5044  00235E  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5045  002362  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5046  002366  0E00               	movlw	0
  5047  002368  6E2C               	movwf	___flmul@a^0,c
  5048  00236A  0E00               	movlw	0
  5049  00236C  6E2D               	movwf	(___flmul@a+1)^0,c
  5050  00236E  0E00               	movlw	0
  5051  002370  6E2E               	movwf	(___flmul@a+2)^0,c
  5052  002372  0E00               	movlw	0
  5053  002374  6E2F               	movwf	(___flmul@a+3)^0,c
  5054  002376  EC1A  F00F         	call	___flmul	;wreg free
  5055  00237A  C028  F041         	movff	?___flmul,?_roundf
  5056  00237E  C029  F042         	movff	?___flmul+1,?_roundf+1
  5057  002382  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5058  002386  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5059  00238A  EF05  F013         	goto	l1570
  5060  00238E                     l4463:
  5061  00238E  0E00               	movlw	0
  5062  002390  6E05               	movwf	___fladd@a^0,c
  5063  002392  0E00               	movlw	0
  5064  002394  6E06               	movwf	(___fladd@a+1)^0,c
  5065  002396  0E00               	movlw	0
  5066  002398  6E07               	movwf	(___fladd@a+2)^0,c
  5067  00239A  0E4B               	movlw	75
  5068  00239C  6E08               	movwf	(___fladd@a+3)^0,c
  5069  00239E  C041  F001         	movff	roundf@x,___fladd@b
  5070  0023A2  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5071  0023A6  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5072  0023AA  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5073  0023AE  ECBA  F00C         	call	___fladd	;wreg free
  5074  0023B2  C001  F04F         	movff	?___fladd,_roundf$3237
  5075  0023B6  C002  F050         	movff	?___fladd+1,_roundf$3237+1
  5076  0023BA  C003  F051         	movff	?___fladd+2,_roundf$3237+2
  5077  0023BE  C004  F052         	movff	?___fladd+3,_roundf$3237+3
  5078  0023C2  0E00               	movlw	0
  5079  0023C4  6E05               	movwf	___fladd@a^0,c
  5080  0023C6  0E00               	movlw	0
  5081  0023C8  6E06               	movwf	(___fladd@a+1)^0,c
  5082  0023CA  0E00               	movlw	0
  5083  0023CC  6E07               	movwf	(___fladd@a+2)^0,c
  5084  0023CE  0ECB               	movlw	203
  5085  0023D0  6E08               	movwf	(___fladd@a+3)^0,c
  5086  0023D2  C04F  F001         	movff	_roundf$3237,___fladd@b
  5087  0023D6  C050  F002         	movff	_roundf$3237+1,___fladd@b+1
  5088  0023DA  C051  F003         	movff	_roundf$3237+2,___fladd@b+2
  5089  0023DE  C052  F004         	movff	_roundf$3237+3,___fladd@b+3
  5090  0023E2  ECBA  F00C         	call	___fladd	;wreg free
  5091  0023E6  C001  F049         	movff	?___fladd,_roundf$3238
  5092  0023EA  C002  F04A         	movff	?___fladd+1,_roundf$3238+1
  5093  0023EE  C003  F04B         	movff	?___fladd+2,_roundf$3238+2
  5094  0023F2  C004  F04C         	movff	?___fladd+3,_roundf$3238+3
  5095  0023F6  C049  F011         	movff	_roundf$3238,___flsub@b
  5096  0023FA  C04A  F012         	movff	_roundf$3238+1,___flsub@b+1
  5097  0023FE  C04B  F013         	movff	_roundf$3238+2,___flsub@b+2
  5098  002402  C04C  F014         	movff	_roundf$3238+3,___flsub@b+3
  5099  002406  C041  F015         	movff	roundf@x,___flsub@a
  5100  00240A  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5101  00240E  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5102  002412  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5103  002416  ECC7  F029         	call	___flsub	;wreg free
  5104  00241A  C011  F057         	movff	?___flsub,roundf@y
  5105  00241E  C012  F058         	movff	?___flsub+1,roundf@y+1
  5106  002422  C013  F059         	movff	?___flsub+2,roundf@y+2
  5107  002426  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5108  00242A  0E00               	movlw	0
  5109  00242C  6E01               	movwf	___flge@ff1^0,c
  5110  00242E  0E00               	movlw	0
  5111  002430  6E02               	movwf	(___flge@ff1+1)^0,c
  5112  002432  0E00               	movlw	0
  5113  002434  6E03               	movwf	(___flge@ff1+2)^0,c
  5114  002436  0E3F               	movlw	63
  5115  002438  6E04               	movwf	(___flge@ff1+3)^0,c
  5116  00243A  C057  F005         	movff	roundf@y,___flge@ff2
  5117  00243E  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5118  002442  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5119  002446  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5120  00244A  EC7D  F024         	call	___flge	;wreg free
  5121  00244E  B0D8               	btfsc	status,0,c
  5122  002450  EF2C  F012         	goto	u4271
  5123  002454  EF2E  F012         	goto	u4270
  5124  002458                     u4271:
  5125  002458  EF64  F012         	goto	l4467
  5126  00245C                     u4270:
  5127  00245C  C041  F005         	movff	roundf@x,___fladd@a
  5128  002460  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5129  002464  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5130  002468  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5131  00246C  C057  F001         	movff	roundf@y,___fladd@b
  5132  002470  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5133  002474  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5134  002478  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5135  00247C  ECBA  F00C         	call	___fladd	;wreg free
  5136  002480  C001  F04F         	movff	?___fladd,_roundf$3237
  5137  002484  C002  F050         	movff	?___fladd+1,_roundf$3237+1
  5138  002488  C003  F051         	movff	?___fladd+2,_roundf$3237+2
  5139  00248C  C004  F052         	movff	?___fladd+3,_roundf$3237+3
  5140  002490  C04F  F001         	movff	_roundf$3237,___fladd@b
  5141  002494  C050  F002         	movff	_roundf$3237+1,___fladd@b+1
  5142  002498  C051  F003         	movff	_roundf$3237+2,___fladd@b+2
  5143  00249C  C052  F004         	movff	_roundf$3237+3,___fladd@b+3
  5144  0024A0  0E00               	movlw	0
  5145  0024A2  6E05               	movwf	___fladd@a^0,c
  5146  0024A4  0E00               	movlw	0
  5147  0024A6  6E06               	movwf	(___fladd@a+1)^0,c
  5148  0024A8  0E80               	movlw	128
  5149  0024AA  6E07               	movwf	(___fladd@a+2)^0,c
  5150  0024AC  0EBF               	movlw	191
  5151  0024AE  6E08               	movwf	(___fladd@a+3)^0,c
  5152  0024B0  ECBA  F00C         	call	___fladd	;wreg free
  5153  0024B4  C001  F057         	movff	?___fladd,roundf@y
  5154  0024B8  C002  F058         	movff	?___fladd+1,roundf@y+1
  5155  0024BC  C003  F059         	movff	?___fladd+2,roundf@y+2
  5156  0024C0  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5157  0024C4  EFCD  F012         	goto	l4473
  5158  0024C8                     l4467:
  5159  0024C8  0E00               	movlw	0
  5160  0024CA  6E01               	movwf	___flge@ff1^0,c
  5161  0024CC  0E00               	movlw	0
  5162  0024CE  6E02               	movwf	(___flge@ff1+1)^0,c
  5163  0024D0  0E00               	movlw	0
  5164  0024D2  6E03               	movwf	(___flge@ff1+2)^0,c
  5165  0024D4  0EBF               	movlw	191
  5166  0024D6  6E04               	movwf	(___flge@ff1+3)^0,c
  5167  0024D8  C057  F005         	movff	roundf@y,___flge@ff2
  5168  0024DC  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5169  0024E0  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5170  0024E4  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5171  0024E8  EC7D  F024         	call	___flge	;wreg free
  5172  0024EC  A0D8               	btfss	status,0,c
  5173  0024EE  EF7B  F012         	goto	u4281
  5174  0024F2  EF7D  F012         	goto	u4280
  5175  0024F6                     u4281:
  5176  0024F6  EFB3  F012         	goto	l4471
  5177  0024FA                     u4280:
  5178  0024FA  C041  F005         	movff	roundf@x,___fladd@a
  5179  0024FE  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5180  002502  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5181  002506  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5182  00250A  C057  F001         	movff	roundf@y,___fladd@b
  5183  00250E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5184  002512  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5185  002516  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5186  00251A  ECBA  F00C         	call	___fladd	;wreg free
  5187  00251E  C001  F04F         	movff	?___fladd,_roundf$3237
  5188  002522  C002  F050         	movff	?___fladd+1,_roundf$3237+1
  5189  002526  C003  F051         	movff	?___fladd+2,_roundf$3237+2
  5190  00252A  C004  F052         	movff	?___fladd+3,_roundf$3237+3
  5191  00252E  C04F  F001         	movff	_roundf$3237,___fladd@b
  5192  002532  C050  F002         	movff	_roundf$3237+1,___fladd@b+1
  5193  002536  C051  F003         	movff	_roundf$3237+2,___fladd@b+2
  5194  00253A  C052  F004         	movff	_roundf$3237+3,___fladd@b+3
  5195  00253E  0E00               	movlw	0
  5196  002540  6E05               	movwf	___fladd@a^0,c
  5197  002542  0E00               	movlw	0
  5198  002544  6E06               	movwf	(___fladd@a+1)^0,c
  5199  002546  0E80               	movlw	128
  5200  002548  6E07               	movwf	(___fladd@a+2)^0,c
  5201  00254A  0E3F               	movlw	63
  5202  00254C  6E08               	movwf	(___fladd@a+3)^0,c
  5203  00254E  ECBA  F00C         	call	___fladd	;wreg free
  5204  002552  C001  F057         	movff	?___fladd,roundf@y
  5205  002556  C002  F058         	movff	?___fladd+1,roundf@y+1
  5206  00255A  C003  F059         	movff	?___fladd+2,roundf@y+2
  5207  00255E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5208  002562  EFCD  F012         	goto	l4473
  5209  002566                     l4471:
  5210  002566  C057  F001         	movff	roundf@y,___fladd@b
  5211  00256A  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5212  00256E  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5213  002572  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5214  002576  C041  F005         	movff	roundf@x,___fladd@a
  5215  00257A  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5216  00257E  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5217  002582  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5218  002586  ECBA  F00C         	call	___fladd	;wreg free
  5219  00258A  C001  F057         	movff	?___fladd,roundf@y
  5220  00258E  C002  F058         	movff	?___fladd+1,roundf@y+1
  5221  002592  C003  F059         	movff	?___fladd+2,roundf@y+2
  5222  002596  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5223  00259A                     l4473:
  5224  00259A  C053  F045         	movff	roundf@u,??_roundf
  5225  00259E  C054  F046         	movff	roundf@u+1,??_roundf+1
  5226  0025A2  C055  F047         	movff	roundf@u+2,??_roundf+2
  5227  0025A6  C056  F048         	movff	roundf@u+3,??_roundf+3
  5228  0025AA  0E20               	movlw	32
  5229  0025AC  EFDD  F012         	goto	u4290
  5230  0025B0                     u4295:
  5231  0025B0  90D8               	bcf	status,0,c
  5232  0025B2  3248               	rrcf	(??_roundf+3)^0,f,c
  5233  0025B4  3247               	rrcf	(??_roundf+2)^0,f,c
  5234  0025B6  3246               	rrcf	(??_roundf+1)^0,f,c
  5235  0025B8  3245               	rrcf	??_roundf^0,f,c
  5236  0025BA                     u4290:
  5237  0025BA  2EE8               	decfsz	wreg,f,c
  5238  0025BC  EFD8  F012         	goto	u4295
  5239  0025C0  5045               	movf	??_roundf^0,w,c
  5240  0025C2  1046               	iorwf	(??_roundf+1)^0,w,c
  5241  0025C4  1047               	iorwf	(??_roundf+2)^0,w,c
  5242  0025C6  1048               	iorwf	(??_roundf+3)^0,w,c
  5243  0025C8  B4D8               	btfsc	status,2,c
  5244  0025CA  EFE9  F012         	goto	u4301
  5245  0025CE  EFEB  F012         	goto	u4300
  5246  0025D2                     u4301:
  5247  0025D2  EFFD  F012         	goto	l4477
  5248  0025D6                     u4300:
  5249  0025D6  C057  F001         	movff	roundf@y,___flneg@f1
  5250  0025DA  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5251  0025DE  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5252  0025E2  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5253  0025E6  ECEA  F02A         	call	___flneg	;wreg free
  5254  0025EA  C001  F057         	movff	?___flneg,roundf@y
  5255  0025EE  C002  F058         	movff	?___flneg+1,roundf@y+1
  5256  0025F2  C003  F059         	movff	?___flneg+2,roundf@y+2
  5257  0025F6  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5258  0025FA                     l4477:
  5259  0025FA  C057  F041         	movff	roundf@y,?_roundf
  5260  0025FE  C058  F042         	movff	roundf@y+1,?_roundf+1
  5261  002602  C059  F043         	movff	roundf@y+2,?_roundf+2
  5262  002606  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5263  00260A                     l1570:
  5264  00260A  0012               	return		;funcret
  5265  00260C                     __end_of_roundf:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function ___flsub *****************
  5269 ;; Defined at:
  5270 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  b               4   16[COMRAM] float 
  5273 ;;  a               4   20[COMRAM] float 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  4   16[COMRAM] float 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5285 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;Total ram usage:        8 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 2
  5292 ;; This function calls:
  5293 ;;		___fladd
  5294 ;; This function is called by:
  5295 ;;		_roundf
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text20
  5300  00538E                     __ptext20:
  5301                           	callstack 0
  5302  00538E                     ___flsub:
  5303                           	callstack 24
  5304  00538E  0E00               	movlw	0
  5305  005390  1A15               	xorwf	___flsub@a^0,f,c
  5306  005392  0E00               	movlw	0
  5307  005394  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5308  005396  0E00               	movlw	0
  5309  005398  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5310  00539A  0E80               	movlw	128
  5311  00539C  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5312  00539E  C011  F001         	movff	___flsub@b,___fladd@b
  5313  0053A2  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5314  0053A6  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5315  0053AA  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5316  0053AE  C015  F005         	movff	___flsub@a,___fladd@a
  5317  0053B2  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5318  0053B6  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5319  0053BA  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5320  0053BE  ECBA  F00C         	call	___fladd	;wreg free
  5321  0053C2  C001  F011         	movff	?___fladd,?___flsub
  5322  0053C6  C002  F012         	movff	?___fladd+1,?___flsub+1
  5323  0053CA  C003  F013         	movff	?___fladd+2,?___flsub+2
  5324  0053CE  C004  F014         	movff	?___fladd+3,?___flsub+3
  5325  0053D2  0012               	return		;funcret
  5326  0053D4                     __end_of___flsub:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function ___fladd *****************
  5330 ;; Defined at:
  5331 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  b               4    0[COMRAM] float 
  5334 ;;  a               4    4[COMRAM] float 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  grs             1   15[COMRAM] unsigned char 
  5337 ;;  bexp            1   14[COMRAM] unsigned char 
  5338 ;;  aexp            1   13[COMRAM] unsigned char 
  5339 ;;  signs           1   12[COMRAM] unsigned char 
  5340 ;; Return value:  Size  Location     Type
  5341 ;;                  4    0[COMRAM] unsigned char 
  5342 ;; Registers used:
  5343 ;;		wreg, status,2, status,0
  5344 ;; Tracked objects:
  5345 ;;		On entry : 0/0
  5346 ;;		On exit  : 0/0
  5347 ;;		Unchanged: 0/0
  5348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5349 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5350 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5351 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;Total ram usage:       16 bytes
  5354 ;; Hardware stack levels used: 1
  5355 ;; Hardware stack levels required when called: 1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		___flsub
  5360 ;;		_roundf
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text21
  5365  001974                     __ptext21:
  5366                           	callstack 0
  5367  001974                     ___fladd:
  5368                           	callstack 24
  5369  001974  5004               	movf	(___fladd@b+3)^0,w,c
  5370  001976  0B80               	andlw	128
  5371  001978  6E0D               	movwf	___fladd@signs^0,c
  5372  00197A  5004               	movf	(___fladd@b+3)^0,w,c
  5373  00197C  2404               	addwf	(___fladd@b+3)^0,w,c
  5374  00197E  6E0F               	movwf	___fladd@bexp^0,c
  5375  001980  AE03               	btfss	(___fladd@b+2)^0,7,c
  5376  001982  EFC5  F00C         	goto	u3361
  5377  001986  EFC7  F00C         	goto	u3360
  5378  00198A                     u3361:
  5379  00198A  EFC8  F00C         	goto	l3873
  5380  00198E                     u3360:
  5381  00198E  800F               	bsf	___fladd@bexp^0,0,c
  5382  001990                     l3873:
  5383  001990  500F               	movf	___fladd@bexp^0,w,c
  5384  001992  B4D8               	btfsc	status,2,c
  5385  001994  EFCE  F00C         	goto	u3371
  5386  001998  EFD0  F00C         	goto	u3370
  5387  00199C                     u3371:
  5388  00199C  EFE5  F00C         	goto	l3883
  5389  0019A0                     u3370:
  5390  0019A0  280F               	incf	___fladd@bexp^0,w,c
  5391  0019A2  A4D8               	btfss	status,2,c
  5392  0019A4  EFD6  F00C         	goto	u3381
  5393  0019A8  EFD8  F00C         	goto	u3380
  5394  0019AC                     u3381:
  5395  0019AC  EFE0  F00C         	goto	l3879
  5396  0019B0                     u3380:
  5397  0019B0  0E00               	movlw	0
  5398  0019B2  6E01               	movwf	___fladd@b^0,c
  5399  0019B4  0E00               	movlw	0
  5400  0019B6  6E02               	movwf	(___fladd@b+1)^0,c
  5401  0019B8  0E00               	movlw	0
  5402  0019BA  6E03               	movwf	(___fladd@b+2)^0,c
  5403  0019BC  0E00               	movlw	0
  5404  0019BE  6E04               	movwf	(___fladd@b+3)^0,c
  5405  0019C0                     l3879:
  5406  0019C0  8E03               	bsf	(___fladd@b+2)^0,7,c
  5407  0019C2  0E00               	movlw	0
  5408  0019C4  6E04               	movwf	(___fladd@b+3)^0,c
  5409  0019C6  EFED  F00C         	goto	l3885
  5410  0019CA                     l3883:
  5411  0019CA  0E00               	movlw	0
  5412  0019CC  6E01               	movwf	___fladd@b^0,c
  5413  0019CE  0E00               	movlw	0
  5414  0019D0  6E02               	movwf	(___fladd@b+1)^0,c
  5415  0019D2  0E00               	movlw	0
  5416  0019D4  6E03               	movwf	(___fladd@b+2)^0,c
  5417  0019D6  0E00               	movlw	0
  5418  0019D8  6E04               	movwf	(___fladd@b+3)^0,c
  5419  0019DA                     l3885:
  5420  0019DA  5008               	movf	(___fladd@a+3)^0,w,c
  5421  0019DC  0B80               	andlw	128
  5422  0019DE  6E0E               	movwf	___fladd@aexp^0,c
  5423  0019E0  500D               	movf	___fladd@signs^0,w,c
  5424  0019E2  180E               	xorwf	___fladd@aexp^0,w,c
  5425  0019E4  B4D8               	btfsc	status,2,c
  5426  0019E6  EFF7  F00C         	goto	u3391
  5427  0019EA  EFF9  F00C         	goto	u3390
  5428  0019EE                     u3391:
  5429  0019EE  EFFA  F00C         	goto	l3891
  5430  0019F2                     u3390:
  5431  0019F2  8C0D               	bsf	___fladd@signs^0,6,c
  5432  0019F4                     l3891:
  5433  0019F4  5008               	movf	(___fladd@a+3)^0,w,c
  5434  0019F6  2408               	addwf	(___fladd@a+3)^0,w,c
  5435  0019F8  6E0E               	movwf	___fladd@aexp^0,c
  5436  0019FA  AE07               	btfss	(___fladd@a+2)^0,7,c
  5437  0019FC  EF02  F00D         	goto	u3401
  5438  001A00  EF04  F00D         	goto	u3400
  5439  001A04                     u3401:
  5440  001A04  EF05  F00D         	goto	l3897
  5441  001A08                     u3400:
  5442  001A08  800E               	bsf	___fladd@aexp^0,0,c
  5443  001A0A                     l3897:
  5444  001A0A  500E               	movf	___fladd@aexp^0,w,c
  5445  001A0C  B4D8               	btfsc	status,2,c
  5446  001A0E  EF0B  F00D         	goto	u3411
  5447  001A12  EF0D  F00D         	goto	u3410
  5448  001A16                     u3411:
  5449  001A16  EF22  F00D         	goto	l3907
  5450  001A1A                     u3410:
  5451  001A1A  280E               	incf	___fladd@aexp^0,w,c
  5452  001A1C  A4D8               	btfss	status,2,c
  5453  001A1E  EF13  F00D         	goto	u3421
  5454  001A22  EF15  F00D         	goto	u3420
  5455  001A26                     u3421:
  5456  001A26  EF1D  F00D         	goto	l3903
  5457  001A2A                     u3420:
  5458  001A2A  0E00               	movlw	0
  5459  001A2C  6E05               	movwf	___fladd@a^0,c
  5460  001A2E  0E00               	movlw	0
  5461  001A30  6E06               	movwf	(___fladd@a+1)^0,c
  5462  001A32  0E00               	movlw	0
  5463  001A34  6E07               	movwf	(___fladd@a+2)^0,c
  5464  001A36  0E00               	movlw	0
  5465  001A38  6E08               	movwf	(___fladd@a+3)^0,c
  5466  001A3A                     l3903:
  5467  001A3A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5468  001A3C  0E00               	movlw	0
  5469  001A3E  6E08               	movwf	(___fladd@a+3)^0,c
  5470  001A40  EF2A  F00D         	goto	l3909
  5471  001A44                     l3907:
  5472  001A44  0E00               	movlw	0
  5473  001A46  6E05               	movwf	___fladd@a^0,c
  5474  001A48  0E00               	movlw	0
  5475  001A4A  6E06               	movwf	(___fladd@a+1)^0,c
  5476  001A4C  0E00               	movlw	0
  5477  001A4E  6E07               	movwf	(___fladd@a+2)^0,c
  5478  001A50  0E00               	movlw	0
  5479  001A52  6E08               	movwf	(___fladd@a+3)^0,c
  5480  001A54                     l3909:
  5481  001A54  500F               	movf	___fladd@bexp^0,w,c
  5482  001A56  5C0E               	subwf	___fladd@aexp^0,w,c
  5483  001A58  B0D8               	btfsc	status,0,c
  5484  001A5A  EF31  F00D         	goto	u3431
  5485  001A5E  EF33  F00D         	goto	u3430
  5486  001A62                     u3431:
  5487  001A62  EF5A  F00D         	goto	l3945
  5488  001A66                     u3430:
  5489  001A66  AC0D               	btfss	___fladd@signs^0,6,c
  5490  001A68  EF38  F00D         	goto	u3441
  5491  001A6C  EF3A  F00D         	goto	u3440
  5492  001A70                     u3441:
  5493  001A70  EF3C  F00D         	goto	l3915
  5494  001A74                     u3440:
  5495  001A74  0E80               	movlw	128
  5496  001A76  1A0D               	xorwf	___fladd@signs^0,f,c
  5497  001A78                     l3915:
  5498  001A78  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5499  001A7C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5500  001A80  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5501  001A84  C001  F010         	movff	___fladd@b,___fladd@grs
  5502  001A88  C005  F001         	movff	___fladd@a,___fladd@b
  5503  001A8C  C010  F005         	movff	___fladd@grs,___fladd@a
  5504  001A90  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5505  001A94  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5506  001A98  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5507  001A9C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5508  001AA0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5509  001AA4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5510  001AA8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5511  001AAC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5512  001AB0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5513  001AB4                     l3945:
  5514  001AB4  0E00               	movlw	0
  5515  001AB6  6E10               	movwf	___fladd@grs^0,c
  5516  001AB8  500F               	movf	___fladd@bexp^0,w,c
  5517  001ABA  C00E  F009         	movff	___fladd@aexp,??___fladd
  5518  001ABE  6A0A               	clrf	(??___fladd+1)^0,c
  5519  001AC0  5E09               	subwf	??___fladd^0,f,c
  5520  001AC2  0E00               	movlw	0
  5521  001AC4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5522  001AC6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5523  001AC8  EF6F  F00D         	goto	u3451
  5524  001ACC  500A               	movf	(??___fladd+1)^0,w,c
  5525  001ACE  E109               	bnz	u3450
  5526  001AD0  0E1A               	movlw	26
  5527  001AD2  5C09               	subwf	??___fladd^0,w,c
  5528  001AD4  A0D8               	btfss	status,0,c
  5529  001AD6  EF6F  F00D         	goto	u3451
  5530  001ADA  EF71  F00D         	goto	u3450
  5531  001ADE                     u3451:
  5532  001ADE  EFA8  F00D         	goto	l1306
  5533  001AE2                     u3450:
  5534  001AE2  5001               	movf	___fladd@b^0,w,c
  5535  001AE4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5536  001AE6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5537  001AE8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5538  001AEA  A4D8               	btfss	status,2,c
  5539  001AEC  EF7A  F00D         	goto	u3461
  5540  001AF0  EF7D  F00D         	goto	u3460
  5541  001AF4                     u3461:
  5542  001AF4  0E01               	movlw	1
  5543  001AF6  EF7E  F00D         	goto	u3470
  5544  001AFA                     u3460:
  5545  001AFA  0E00               	movlw	0
  5546  001AFC                     u3470:
  5547  001AFC  6E10               	movwf	___fladd@grs^0,c
  5548  001AFE  0E00               	movlw	0
  5549  001B00  6E01               	movwf	___fladd@b^0,c
  5550  001B02  0E00               	movlw	0
  5551  001B04  6E02               	movwf	(___fladd@b+1)^0,c
  5552  001B06  0E00               	movlw	0
  5553  001B08  6E03               	movwf	(___fladd@b+2)^0,c
  5554  001B0A  0E00               	movlw	0
  5555  001B0C  6E04               	movwf	(___fladd@b+3)^0,c
  5556  001B0E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5557  001B12  EFB1  F00D         	goto	l1305
  5558  001B16                     l1307:
  5559  001B16  A010               	btfss	___fladd@grs^0,0,c
  5560  001B18  EF90  F00D         	goto	u3481
  5561  001B1C  EF92  F00D         	goto	u3480
  5562  001B20                     u3481:
  5563  001B20  EF98  F00D         	goto	l3957
  5564  001B24                     u3480:
  5565  001B24  90D8               	bcf	status,0,c
  5566  001B26  3010               	rrcf	___fladd@grs^0,w,c
  5567  001B28  0901               	iorlw	1
  5568  001B2A  6E10               	movwf	___fladd@grs^0,c
  5569  001B2C  EF9A  F00D         	goto	l3959
  5570  001B30                     l3957:
  5571  001B30  90D8               	bcf	status,0,c
  5572  001B32  3210               	rrcf	___fladd@grs^0,f,c
  5573  001B34                     l3959:
  5574  001B34  A001               	btfss	___fladd@b^0,0,c
  5575  001B36  EF9F  F00D         	goto	u3491
  5576  001B3A  EFA1  F00D         	goto	u3490
  5577  001B3E                     u3491:
  5578  001B3E  EFA2  F00D         	goto	l3963
  5579  001B42                     u3490:
  5580  001B42  8E10               	bsf	___fladd@grs^0,7,c
  5581  001B44                     l3963:
  5582  001B44  3404               	rlcf	(___fladd@b+3)^0,w,c
  5583  001B46  3204               	rrcf	(___fladd@b+3)^0,f,c
  5584  001B48  3203               	rrcf	(___fladd@b+2)^0,f,c
  5585  001B4A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5586  001B4C  3201               	rrcf	___fladd@b^0,f,c
  5587  001B4E  2A0F               	incf	___fladd@bexp^0,f,c
  5588  001B50                     l1306:
  5589  001B50  500E               	movf	___fladd@aexp^0,w,c
  5590  001B52  5C0F               	subwf	___fladd@bexp^0,w,c
  5591  001B54  A0D8               	btfss	status,0,c
  5592  001B56  EFAF  F00D         	goto	u3501
  5593  001B5A  EFB1  F00D         	goto	u3500
  5594  001B5E                     u3501:
  5595  001B5E  EF8B  F00D         	goto	l1307
  5596  001B62                     u3500:
  5597  001B62                     l1305:
  5598  001B62  BC0D               	btfsc	___fladd@signs^0,6,c
  5599  001B64  EFB6  F00D         	goto	u3511
  5600  001B68  EFB8  F00D         	goto	u3510
  5601  001B6C                     u3511:
  5602  001B6C  EFF8  F00D         	goto	l3991
  5603  001B70                     u3510:
  5604  001B70  500F               	movf	___fladd@bexp^0,w,c
  5605  001B72  A4D8               	btfss	status,2,c
  5606  001B74  EFBE  F00D         	goto	u3521
  5607  001B78  EFC0  F00D         	goto	u3520
  5608  001B7C                     u3521:
  5609  001B7C  EFCA  F00D         	goto	l3973
  5610  001B80                     u3520:
  5611  001B80  0E00               	movlw	0
  5612  001B82  6E01               	movwf	?___fladd^0,c
  5613  001B84  0E00               	movlw	0
  5614  001B86  6E02               	movwf	(?___fladd+1)^0,c
  5615  001B88  0E00               	movlw	0
  5616  001B8A  6E03               	movwf	(?___fladd+2)^0,c
  5617  001B8C  0E00               	movlw	0
  5618  001B8E  6E04               	movwf	(?___fladd+3)^0,c
  5619  001B90  EF19  F00F         	goto	l1314
  5620  001B94                     l3973:
  5621  001B94  5005               	movf	___fladd@a^0,w,c
  5622  001B96  2601               	addwf	___fladd@b^0,f,c
  5623  001B98  5006               	movf	(___fladd@a+1)^0,w,c
  5624  001B9A  2202               	addwfc	(___fladd@b+1)^0,f,c
  5625  001B9C  5007               	movf	(___fladd@a+2)^0,w,c
  5626  001B9E  2203               	addwfc	(___fladd@b+2)^0,f,c
  5627  001BA0  5008               	movf	(___fladd@a+3)^0,w,c
  5628  001BA2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5629  001BA4  A004               	btfss	(___fladd@b+3)^0,0,c
  5630  001BA6  EFD7  F00D         	goto	u3531
  5631  001BAA  EFD9  F00D         	goto	u3530
  5632  001BAE                     u3531:
  5633  001BAE  EF85  F00E         	goto	l4027
  5634  001BB2                     u3530:
  5635  001BB2  A010               	btfss	___fladd@grs^0,0,c
  5636  001BB4  EFDE  F00D         	goto	u3541
  5637  001BB8  EFE0  F00D         	goto	u3540
  5638  001BBC                     u3541:
  5639  001BBC  EFE6  F00D         	goto	l3981
  5640  001BC0                     u3540:
  5641  001BC0  90D8               	bcf	status,0,c
  5642  001BC2  3010               	rrcf	___fladd@grs^0,w,c
  5643  001BC4  0901               	iorlw	1
  5644  001BC6  6E10               	movwf	___fladd@grs^0,c
  5645  001BC8  EFE8  F00D         	goto	l3983
  5646  001BCC                     l3981:
  5647  001BCC  90D8               	bcf	status,0,c
  5648  001BCE  3210               	rrcf	___fladd@grs^0,f,c
  5649  001BD0                     l3983:
  5650  001BD0  A001               	btfss	___fladd@b^0,0,c
  5651  001BD2  EFED  F00D         	goto	u3551
  5652  001BD6  EFEF  F00D         	goto	u3550
  5653  001BDA                     u3551:
  5654  001BDA  EFF0  F00D         	goto	l3987
  5655  001BDE                     u3550:
  5656  001BDE  8E10               	bsf	___fladd@grs^0,7,c
  5657  001BE0                     l3987:
  5658  001BE0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5659  001BE2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5660  001BE4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5661  001BE6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5662  001BE8  3201               	rrcf	___fladd@b^0,f,c
  5663  001BEA  2A0F               	incf	___fladd@bexp^0,f,c
  5664  001BEC  EF85  F00E         	goto	l4027
  5665  001BF0                     l3991:
  5666  001BF0  5005               	movf	___fladd@a^0,w,c
  5667  001BF2  5C01               	subwf	___fladd@b^0,w,c
  5668  001BF4  5006               	movf	(___fladd@a+1)^0,w,c
  5669  001BF6  5802               	subwfb	(___fladd@b+1)^0,w,c
  5670  001BF8  5007               	movf	(___fladd@a+2)^0,w,c
  5671  001BFA  5803               	subwfb	(___fladd@b+2)^0,w,c
  5672  001BFC  5004               	movf	(___fladd@b+3)^0,w,c
  5673  001BFE  0A80               	xorlw	128
  5674  001C00  6E09               	movwf	??___fladd^0,c
  5675  001C02  5008               	movf	(___fladd@a+3)^0,w,c
  5676  001C04  0A80               	xorlw	128
  5677  001C06  5809               	subwfb	??___fladd^0,w,c
  5678  001C08  B0D8               	btfsc	status,0,c
  5679  001C0A  EF09  F00E         	goto	u3561
  5680  001C0E  EF0B  F00E         	goto	u3560
  5681  001C12                     u3561:
  5682  001C12  EF36  F00E         	goto	l4001
  5683  001C16                     u3560:
  5684  001C16  5001               	movf	___fladd@b^0,w,c
  5685  001C18  5C05               	subwf	___fladd@a^0,w,c
  5686  001C1A  6E09               	movwf	??___fladd^0,c
  5687  001C1C  5002               	movf	(___fladd@b+1)^0,w,c
  5688  001C1E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5689  001C20  6E0A               	movwf	(??___fladd+1)^0,c
  5690  001C22  5003               	movf	(___fladd@b+2)^0,w,c
  5691  001C24  5807               	subwfb	(___fladd@a+2)^0,w,c
  5692  001C26  6E0B               	movwf	(??___fladd+2)^0,c
  5693  001C28  5004               	movf	(___fladd@b+3)^0,w,c
  5694  001C2A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5695  001C2C  6E0C               	movwf	(??___fladd+3)^0,c
  5696  001C2E  0EFF               	movlw	255
  5697  001C30  2409               	addwf	??___fladd^0,w,c
  5698  001C32  6E01               	movwf	___fladd@b^0,c
  5699  001C34  0EFF               	movlw	255
  5700  001C36  200A               	addwfc	(??___fladd+1)^0,w,c
  5701  001C38  6E02               	movwf	(___fladd@b+1)^0,c
  5702  001C3A  0EFF               	movlw	255
  5703  001C3C  200B               	addwfc	(??___fladd+2)^0,w,c
  5704  001C3E  6E03               	movwf	(___fladd@b+2)^0,c
  5705  001C40  0EFF               	movlw	255
  5706  001C42  200C               	addwfc	(??___fladd+3)^0,w,c
  5707  001C44  6E04               	movwf	(___fladd@b+3)^0,c
  5708  001C46  0E80               	movlw	128
  5709  001C48  1A0D               	xorwf	___fladd@signs^0,f,c
  5710  001C4A  6C10               	negf	___fladd@grs^0,c
  5711  001C4C  5010               	movf	___fladd@grs^0,w,c
  5712  001C4E  A4D8               	btfss	status,2,c
  5713  001C50  EF2C  F00E         	goto	u3571
  5714  001C54  EF2E  F00E         	goto	u3570
  5715  001C58                     u3571:
  5716  001C58  EF3E  F00E         	goto	l1322
  5717  001C5C                     u3570:
  5718  001C5C  0E01               	movlw	1
  5719  001C5E  2601               	addwf	___fladd@b^0,f,c
  5720  001C60  0E00               	movlw	0
  5721  001C62  2202               	addwfc	(___fladd@b+1)^0,f,c
  5722  001C64  2203               	addwfc	(___fladd@b+2)^0,f,c
  5723  001C66  2204               	addwfc	(___fladd@b+3)^0,f,c
  5724  001C68  EF3E  F00E         	goto	l1322
  5725  001C6C                     l4001:
  5726  001C6C  5005               	movf	___fladd@a^0,w,c
  5727  001C6E  5E01               	subwf	___fladd@b^0,f,c
  5728  001C70  5006               	movf	(___fladd@a+1)^0,w,c
  5729  001C72  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5730  001C74  5007               	movf	(___fladd@a+2)^0,w,c
  5731  001C76  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5732  001C78  5008               	movf	(___fladd@a+3)^0,w,c
  5733  001C7A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5734  001C7C                     l1322:
  5735  001C7C  5001               	movf	___fladd@b^0,w,c
  5736  001C7E  1002               	iorwf	(___fladd@b+1)^0,w,c
  5737  001C80  1003               	iorwf	(___fladd@b+2)^0,w,c
  5738  001C82  1004               	iorwf	(___fladd@b+3)^0,w,c
  5739  001C84  A4D8               	btfss	status,2,c
  5740  001C86  EF47  F00E         	goto	u3581
  5741  001C8A  EF49  F00E         	goto	u3580
  5742  001C8E                     u3581:
  5743  001C8E  EF7E  F00E         	goto	l4025
  5744  001C92                     u3580:
  5745  001C92  5010               	movf	___fladd@grs^0,w,c
  5746  001C94  A4D8               	btfss	status,2,c
  5747  001C96  EF4F  F00E         	goto	u3591
  5748  001C9A  EF51  F00E         	goto	u3590
  5749  001C9E                     u3591:
  5750  001C9E  EF7E  F00E         	goto	l4025
  5751  001CA2                     u3590:
  5752  001CA2  0E00               	movlw	0
  5753  001CA4  6E01               	movwf	?___fladd^0,c
  5754  001CA6  0E00               	movlw	0
  5755  001CA8  6E02               	movwf	(?___fladd+1)^0,c
  5756  001CAA  0E00               	movlw	0
  5757  001CAC  6E03               	movwf	(?___fladd+2)^0,c
  5758  001CAE  0E00               	movlw	0
  5759  001CB0  6E04               	movwf	(?___fladd+3)^0,c
  5760  001CB2  EF19  F00F         	goto	l1314
  5761  001CB6                     l4009:
  5762  001CB6  90D8               	bcf	status,0,c
  5763  001CB8  3601               	rlcf	___fladd@b^0,f,c
  5764  001CBA  3602               	rlcf	(___fladd@b+1)^0,f,c
  5765  001CBC  3603               	rlcf	(___fladd@b+2)^0,f,c
  5766  001CBE  3604               	rlcf	(___fladd@b+3)^0,f,c
  5767  001CC0  AE10               	btfss	___fladd@grs^0,7,c
  5768  001CC2  EF65  F00E         	goto	u3601
  5769  001CC6  EF67  F00E         	goto	u3600
  5770  001CCA                     u3601:
  5771  001CCA  EF68  F00E         	goto	l4015
  5772  001CCE                     u3600:
  5773  001CCE  8001               	bsf	___fladd@b^0,0,c
  5774  001CD0                     l4015:
  5775  001CD0  A010               	btfss	___fladd@grs^0,0,c
  5776  001CD2  EF6D  F00E         	goto	u3611
  5777  001CD6  EF6F  F00E         	goto	u3610
  5778  001CDA                     u3611:
  5779  001CDA  EF73  F00E         	goto	l4019
  5780  001CDE                     u3610:
  5781  001CDE  80D8               	bsf	status,0,c
  5782  001CE0  3610               	rlcf	___fladd@grs^0,f,c
  5783  001CE2  EF75  F00E         	goto	l4021
  5784  001CE6                     l4019:
  5785  001CE6  90D8               	bcf	status,0,c
  5786  001CE8  3610               	rlcf	___fladd@grs^0,f,c
  5787  001CEA                     l4021:
  5788  001CEA  500F               	movf	___fladd@bexp^0,w,c
  5789  001CEC  B4D8               	btfsc	status,2,c
  5790  001CEE  EF7B  F00E         	goto	u3621
  5791  001CF2  EF7D  F00E         	goto	u3620
  5792  001CF6                     u3621:
  5793  001CF6  EF7E  F00E         	goto	l4025
  5794  001CFA                     u3620:
  5795  001CFA  060F               	decf	___fladd@bexp^0,f,c
  5796  001CFC                     l4025:
  5797  001CFC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5798  001CFE  EF83  F00E         	goto	u3631
  5799  001D02  EF85  F00E         	goto	u3630
  5800  001D06                     u3631:
  5801  001D06  EF5B  F00E         	goto	l4009
  5802  001D0A                     u3630:
  5803  001D0A                     l4027:
  5804  001D0A  0E00               	movlw	0
  5805  001D0C  6E0E               	movwf	___fladd@aexp^0,c
  5806  001D0E  AE10               	btfss	___fladd@grs^0,7,c
  5807  001D10  EF8C  F00E         	goto	u3641
  5808  001D14  EF8E  F00E         	goto	u3640
  5809  001D18                     u3641:
  5810  001D18  EFA6  F00E         	goto	l1331
  5811  001D1C                     u3640:
  5812  001D1C  C010  F009         	movff	___fladd@grs,??___fladd
  5813  001D20  0E7F               	movlw	127
  5814  001D22  1609               	andwf	??___fladd^0,f,c
  5815  001D24  B4D8               	btfsc	status,2,c
  5816  001D26  EF97  F00E         	goto	u3651
  5817  001D2A  EF99  F00E         	goto	u3650
  5818  001D2E                     u3651:
  5819  001D2E  EF9D  F00E         	goto	l1332
  5820  001D32                     u3650:
  5821  001D32                     l4033:
  5822  001D32  0E01               	movlw	1
  5823  001D34  6E0E               	movwf	___fladd@aexp^0,c
  5824  001D36  EFA6  F00E         	goto	l1331
  5825  001D3A                     l1332:
  5826  001D3A  A001               	btfss	___fladd@b^0,0,c
  5827  001D3C  EFA2  F00E         	goto	u3661
  5828  001D40  EFA4  F00E         	goto	u3660
  5829  001D44                     u3661:
  5830  001D44  EFA6  F00E         	goto	l1331
  5831  001D48                     u3660:
  5832  001D48  EF99  F00E         	goto	l4033
  5833  001D4C                     l1331:
  5834  001D4C  500E               	movf	___fladd@aexp^0,w,c
  5835  001D4E  B4D8               	btfsc	status,2,c
  5836  001D50  EFAC  F00E         	goto	u3671
  5837  001D54  EFAE  F00E         	goto	u3670
  5838  001D58                     u3671:
  5839  001D58  EFD9  F00E         	goto	l4045
  5840  001D5C                     u3670:
  5841  001D5C  0E01               	movlw	1
  5842  001D5E  2601               	addwf	___fladd@b^0,f,c
  5843  001D60  0E00               	movlw	0
  5844  001D62  2202               	addwfc	(___fladd@b+1)^0,f,c
  5845  001D64  2203               	addwfc	(___fladd@b+2)^0,f,c
  5846  001D66  2204               	addwfc	(___fladd@b+3)^0,f,c
  5847  001D68  A004               	btfss	(___fladd@b+3)^0,0,c
  5848  001D6A  EFB9  F00E         	goto	u3681
  5849  001D6E  EFBB  F00E         	goto	u3680
  5850  001D72                     u3681:
  5851  001D72  EFD9  F00E         	goto	l4045
  5852  001D76                     u3680:
  5853  001D76  C001  F009         	movff	___fladd@b,??___fladd
  5854  001D7A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5855  001D7E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5856  001D82  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5857  001D86  340C               	rlcf	(??___fladd+3)^0,w,c
  5858  001D88  320C               	rrcf	(??___fladd+3)^0,f,c
  5859  001D8A  320B               	rrcf	(??___fladd+2)^0,f,c
  5860  001D8C  320A               	rrcf	(??___fladd+1)^0,f,c
  5861  001D8E  3209               	rrcf	??___fladd^0,f,c
  5862  001D90  C009  F001         	movff	??___fladd,___fladd@b
  5863  001D94  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5864  001D98  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5865  001D9C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5866  001DA0  280F               	incf	___fladd@bexp^0,w,c
  5867  001DA2  B4D8               	btfsc	status,2,c
  5868  001DA4  EFD6  F00E         	goto	u3691
  5869  001DA8  EFD8  F00E         	goto	u3690
  5870  001DAC                     u3691:
  5871  001DAC  EFD9  F00E         	goto	l4045
  5872  001DB0                     u3690:
  5873  001DB0  2A0F               	incf	___fladd@bexp^0,f,c
  5874  001DB2                     l4045:
  5875  001DB2  280F               	incf	___fladd@bexp^0,w,c
  5876  001DB4  B4D8               	btfsc	status,2,c
  5877  001DB6  EFDF  F00E         	goto	u3701
  5878  001DBA  EFE1  F00E         	goto	u3700
  5879  001DBE                     u3701:
  5880  001DBE  EFE9  F00E         	goto	l4049
  5881  001DC2                     u3700:
  5882  001DC2  500F               	movf	___fladd@bexp^0,w,c
  5883  001DC4  A4D8               	btfss	status,2,c
  5884  001DC6  EFE7  F00E         	goto	u3711
  5885  001DCA  EFE9  F00E         	goto	u3710
  5886  001DCE                     u3711:
  5887  001DCE  EFFB  F00E         	goto	l4053
  5888  001DD2                     u3710:
  5889  001DD2                     l4049:
  5890  001DD2  0E00               	movlw	0
  5891  001DD4  6E01               	movwf	___fladd@b^0,c
  5892  001DD6  0E00               	movlw	0
  5893  001DD8  6E02               	movwf	(___fladd@b+1)^0,c
  5894  001DDA  0E00               	movlw	0
  5895  001DDC  6E03               	movwf	(___fladd@b+2)^0,c
  5896  001DDE  0E00               	movlw	0
  5897  001DE0  6E04               	movwf	(___fladd@b+3)^0,c
  5898  001DE2  500F               	movf	___fladd@bexp^0,w,c
  5899  001DE4  A4D8               	btfss	status,2,c
  5900  001DE6  EFF7  F00E         	goto	u3721
  5901  001DEA  EFF9  F00E         	goto	u3720
  5902  001DEE                     u3721:
  5903  001DEE  EFFB  F00E         	goto	l4053
  5904  001DF2                     u3720:
  5905  001DF2  0E00               	movlw	0
  5906  001DF4  6E0D               	movwf	___fladd@signs^0,c
  5907  001DF6                     l4053:
  5908  001DF6  A00F               	btfss	___fladd@bexp^0,0,c
  5909  001DF8  EF00  F00F         	goto	u3731
  5910  001DFC  EF02  F00F         	goto	u3730
  5911  001E00                     u3731:
  5912  001E00  EF05  F00F         	goto	l4057
  5913  001E04                     u3730:
  5914  001E04  8E03               	bsf	(___fladd@b+2)^0,7,c
  5915  001E06  EF06  F00F         	goto	l4059
  5916  001E0A                     l4057:
  5917  001E0A  9E03               	bcf	(___fladd@b+2)^0,7,c
  5918  001E0C                     l4059:
  5919  001E0C  90D8               	bcf	status,0,c
  5920  001E0E  300F               	rrcf	___fladd@bexp^0,w,c
  5921  001E10  6E04               	movwf	(___fladd@b+3)^0,c
  5922  001E12  AE0D               	btfss	___fladd@signs^0,7,c
  5923  001E14  EF0E  F00F         	goto	u3741
  5924  001E18  EF10  F00F         	goto	u3740
  5925  001E1C                     u3741:
  5926  001E1C  EF11  F00F         	goto	l4065
  5927  001E20                     u3740:
  5928  001E20  8E04               	bsf	(___fladd@b+3)^0,7,c
  5929  001E22                     l4065:
  5930  001E22  C001  F001         	movff	___fladd@b,?___fladd
  5931  001E26  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5932  001E2A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5933  001E2E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5934  001E32                     l1314:
  5935  001E32  0012               	return		;funcret
  5936  001E34                     __end_of___fladd:
  5937                           	callstack 0
  5938                           
  5939 ;; *************** function ___flneg *****************
  5940 ;; Defined at:
  5941 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  f1              4    0[COMRAM] unsigned char 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;		None
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  4    0[COMRAM] unsigned char 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;Total ram usage:        4 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 1
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_roundf
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text22
  5970  0055D4                     __ptext22:
  5971                           	callstack 0
  5972  0055D4                     ___flneg:
  5973                           	callstack 25
  5974  0055D4  5001               	movf	___flneg@f1^0,w,c
  5975  0055D6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5976  0055D8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5977  0055DA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5978  0055DC  B4D8               	btfsc	status,2,c
  5979  0055DE  EFF3  F02A         	goto	u4101
  5980  0055E2  EFF5  F02A         	goto	u4100
  5981  0055E6                     u4101:
  5982  0055E6  EFFD  F02A         	goto	l4329
  5983  0055EA                     u4100:
  5984  0055EA  0E00               	movlw	0
  5985  0055EC  1A01               	xorwf	___flneg@f1^0,f,c
  5986  0055EE  0E00               	movlw	0
  5987  0055F0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5988  0055F2  0E00               	movlw	0
  5989  0055F4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5990  0055F6  0E80               	movlw	128
  5991  0055F8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5992  0055FA                     l4329:
  5993  0055FA  C001  F001         	movff	___flneg@f1,?___flneg
  5994  0055FE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5995  005602  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5996  005606  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5997  00560A  0012               	return		;funcret
  5998  00560C                     __end_of___flneg:
  5999                           	callstack 0
  6000                           
  6001 ;; *************** function ___flmul *****************
  6002 ;; Defined at:
  6003 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  b               4   39[COMRAM] unsigned char 
  6006 ;;  a               4   43[COMRAM] unsigned char 
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;  prod            4   58[COMRAM] struct .
  6009 ;;  grs             4   52[COMRAM] unsigned long 
  6010 ;;  temp            2   62[COMRAM] struct .
  6011 ;;  bexp            1   57[COMRAM] unsigned char 
  6012 ;;  aexp            1   56[COMRAM] unsigned char 
  6013 ;;  sign            1   51[COMRAM] unsigned char 
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  4   39[COMRAM] unsigned char 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2, status,0, prodl, prodh
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6023 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6024 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;Total ram usage:       25 bytes
  6028 ;; Hardware stack levels used: 1
  6029 ;; Hardware stack levels required when called: 1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_detect_color
  6034 ;;		_distance_measure
  6035 ;;		_roundf
  6036 ;;		_check_color_reading
  6037 ;; This function uses a non-reentrant model
  6038 ;;
  6039                           
  6040                           	psect	text23
  6041  001E34                     __ptext23:
  6042                           	callstack 0
  6043  001E34                     ___flmul:
  6044                           	callstack 25
  6045  001E34  502B               	movf	(___flmul@b+3)^0,w,c
  6046  001E36  0B80               	andlw	128
  6047  001E38  6E34               	movwf	___flmul@sign^0,c
  6048  001E3A  502B               	movf	(___flmul@b+3)^0,w,c
  6049  001E3C  242B               	addwf	(___flmul@b+3)^0,w,c
  6050  001E3E  6E3A               	movwf	___flmul@bexp^0,c
  6051  001E40  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6052  001E42  EF25  F00F         	goto	u3861
  6053  001E46  EF27  F00F         	goto	u3860
  6054  001E4A                     u3861:
  6055  001E4A  EF28  F00F         	goto	l4173
  6056  001E4E                     u3860:
  6057  001E4E  803A               	bsf	___flmul@bexp^0,0,c
  6058  001E50                     l4173:
  6059  001E50  503A               	movf	___flmul@bexp^0,w,c
  6060  001E52  B4D8               	btfsc	status,2,c
  6061  001E54  EF2E  F00F         	goto	u3871
  6062  001E58  EF30  F00F         	goto	u3870
  6063  001E5C                     u3871:
  6064  001E5C  EF43  F00F         	goto	l4181
  6065  001E60                     u3870:
  6066  001E60  283A               	incf	___flmul@bexp^0,w,c
  6067  001E62  A4D8               	btfss	status,2,c
  6068  001E64  EF36  F00F         	goto	u3881
  6069  001E68  EF38  F00F         	goto	u3880
  6070  001E6C                     u3881:
  6071  001E6C  EF40  F00F         	goto	l4179
  6072  001E70                     u3880:
  6073  001E70  0E00               	movlw	0
  6074  001E72  6E28               	movwf	___flmul@b^0,c
  6075  001E74  0E00               	movlw	0
  6076  001E76  6E29               	movwf	(___flmul@b+1)^0,c
  6077  001E78  0E00               	movlw	0
  6078  001E7A  6E2A               	movwf	(___flmul@b+2)^0,c
  6079  001E7C  0E00               	movlw	0
  6080  001E7E  6E2B               	movwf	(___flmul@b+3)^0,c
  6081  001E80                     l4179:
  6082  001E80  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6083  001E82  EF4B  F00F         	goto	l4183
  6084  001E86                     l4181:
  6085  001E86  0E00               	movlw	0
  6086  001E88  6E28               	movwf	___flmul@b^0,c
  6087  001E8A  0E00               	movlw	0
  6088  001E8C  6E29               	movwf	(___flmul@b+1)^0,c
  6089  001E8E  0E00               	movlw	0
  6090  001E90  6E2A               	movwf	(___flmul@b+2)^0,c
  6091  001E92  0E00               	movlw	0
  6092  001E94  6E2B               	movwf	(___flmul@b+3)^0,c
  6093  001E96                     l4183:
  6094  001E96  502F               	movf	(___flmul@a+3)^0,w,c
  6095  001E98  0B80               	andlw	128
  6096  001E9A  1A34               	xorwf	___flmul@sign^0,f,c
  6097  001E9C  502F               	movf	(___flmul@a+3)^0,w,c
  6098  001E9E  242F               	addwf	(___flmul@a+3)^0,w,c
  6099  001EA0  6E39               	movwf	___flmul@aexp^0,c
  6100  001EA2  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6101  001EA4  EF56  F00F         	goto	u3891
  6102  001EA8  EF58  F00F         	goto	u3890
  6103  001EAC                     u3891:
  6104  001EAC  EF59  F00F         	goto	l4191
  6105  001EB0                     u3890:
  6106  001EB0  8039               	bsf	___flmul@aexp^0,0,c
  6107  001EB2                     l4191:
  6108  001EB2  5039               	movf	___flmul@aexp^0,w,c
  6109  001EB4  B4D8               	btfsc	status,2,c
  6110  001EB6  EF5F  F00F         	goto	u3901
  6111  001EBA  EF61  F00F         	goto	u3900
  6112  001EBE                     u3901:
  6113  001EBE  EF74  F00F         	goto	l4199
  6114  001EC2                     u3900:
  6115  001EC2  2839               	incf	___flmul@aexp^0,w,c
  6116  001EC4  A4D8               	btfss	status,2,c
  6117  001EC6  EF67  F00F         	goto	u3911
  6118  001ECA  EF69  F00F         	goto	u3910
  6119  001ECE                     u3911:
  6120  001ECE  EF71  F00F         	goto	l4197
  6121  001ED2                     u3910:
  6122  001ED2  0E00               	movlw	0
  6123  001ED4  6E2C               	movwf	___flmul@a^0,c
  6124  001ED6  0E00               	movlw	0
  6125  001ED8  6E2D               	movwf	(___flmul@a+1)^0,c
  6126  001EDA  0E00               	movlw	0
  6127  001EDC  6E2E               	movwf	(___flmul@a+2)^0,c
  6128  001EDE  0E00               	movlw	0
  6129  001EE0  6E2F               	movwf	(___flmul@a+3)^0,c
  6130  001EE2                     l4197:
  6131  001EE2  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6132  001EE4  EF7C  F00F         	goto	l1391
  6133  001EE8                     l4199:
  6134  001EE8  0E00               	movlw	0
  6135  001EEA  6E2C               	movwf	___flmul@a^0,c
  6136  001EEC  0E00               	movlw	0
  6137  001EEE  6E2D               	movwf	(___flmul@a+1)^0,c
  6138  001EF0  0E00               	movlw	0
  6139  001EF2  6E2E               	movwf	(___flmul@a+2)^0,c
  6140  001EF4  0E00               	movlw	0
  6141  001EF6  6E2F               	movwf	(___flmul@a+3)^0,c
  6142  001EF8                     l1391:
  6143  001EF8  5039               	movf	___flmul@aexp^0,w,c
  6144  001EFA  B4D8               	btfsc	status,2,c
  6145  001EFC  EF82  F00F         	goto	u3921
  6146  001F00  EF84  F00F         	goto	u3920
  6147  001F04                     u3921:
  6148  001F04  EF8C  F00F         	goto	l4203
  6149  001F08                     u3920:
  6150  001F08  503A               	movf	___flmul@bexp^0,w,c
  6151  001F0A  A4D8               	btfss	status,2,c
  6152  001F0C  EF8A  F00F         	goto	u3931
  6153  001F10  EF8C  F00F         	goto	u3930
  6154  001F14                     u3931:
  6155  001F14  EF96  F00F         	goto	l4207
  6156  001F18                     u3930:
  6157  001F18                     l4203:
  6158  001F18  0E00               	movlw	0
  6159  001F1A  6E28               	movwf	?___flmul^0,c
  6160  001F1C  0E00               	movlw	0
  6161  001F1E  6E29               	movwf	(?___flmul+1)^0,c
  6162  001F20  0E00               	movlw	0
  6163  001F22  6E2A               	movwf	(?___flmul+2)^0,c
  6164  001F24  0E00               	movlw	0
  6165  001F26  6E2B               	movwf	(?___flmul+3)^0,c
  6166  001F28  EF2E  F011         	goto	l1395
  6167  001F2C                     l4207:
  6168  001F2C  502E               	movf	(___flmul@a+2)^0,w,c
  6169  001F2E  0228               	mulwf	___flmul@b^0,c
  6170  001F30  CFF3 F03F          	movff	prodl,___flmul@temp
  6171  001F34  CFF4 F040          	movff	prodh,___flmul@temp+1
  6172  001F38  503F               	movf	___flmul@temp^0,w,c
  6173  001F3A  6E35               	movwf	___flmul@grs^0,c
  6174  001F3C  6A36               	clrf	(___flmul@grs+1)^0,c
  6175  001F3E  6A37               	clrf	(___flmul@grs+2)^0,c
  6176  001F40  6A38               	clrf	(___flmul@grs+3)^0,c
  6177  001F42  5040               	movf	(___flmul@temp+1)^0,w,c
  6178  001F44  6E3B               	movwf	___flmul@prod^0,c
  6179  001F46  6A3C               	clrf	(___flmul@prod+1)^0,c
  6180  001F48  6A3D               	clrf	(___flmul@prod+2)^0,c
  6181  001F4A  6A3E               	clrf	(___flmul@prod+3)^0,c
  6182  001F4C  502D               	movf	(___flmul@a+1)^0,w,c
  6183  001F4E  0229               	mulwf	(___flmul@b+1)^0,c
  6184  001F50  CFF3 F03F          	movff	prodl,___flmul@temp
  6185  001F54  CFF4 F040          	movff	prodh,___flmul@temp+1
  6186  001F58  503F               	movf	___flmul@temp^0,w,c
  6187  001F5A  2635               	addwf	___flmul@grs^0,f,c
  6188  001F5C  0E00               	movlw	0
  6189  001F5E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6190  001F60  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6191  001F62  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6192  001F64  5040               	movf	(___flmul@temp+1)^0,w,c
  6193  001F66  263B               	addwf	___flmul@prod^0,f,c
  6194  001F68  0E00               	movlw	0
  6195  001F6A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6196  001F6C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6197  001F6E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6198  001F70  502C               	movf	___flmul@a^0,w,c
  6199  001F72  022A               	mulwf	(___flmul@b+2)^0,c
  6200  001F74  CFF3 F03F          	movff	prodl,___flmul@temp
  6201  001F78  CFF4 F040          	movff	prodh,___flmul@temp+1
  6202  001F7C  503F               	movf	___flmul@temp^0,w,c
  6203  001F7E  2635               	addwf	___flmul@grs^0,f,c
  6204  001F80  0E00               	movlw	0
  6205  001F82  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6206  001F84  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6207  001F86  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6208  001F88  5040               	movf	(___flmul@temp+1)^0,w,c
  6209  001F8A  263B               	addwf	___flmul@prod^0,f,c
  6210  001F8C  0E00               	movlw	0
  6211  001F8E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6212  001F90  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6213  001F92  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6214  001F94  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6215  001F98  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6216  001F9C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6217  001FA0  6A35               	clrf	___flmul@grs^0,c
  6218  001FA2  502C               	movf	___flmul@a^0,w,c
  6219  001FA4  0229               	mulwf	(___flmul@b+1)^0,c
  6220  001FA6  CFF3 F03F          	movff	prodl,___flmul@temp
  6221  001FAA  CFF4 F040          	movff	prodh,___flmul@temp+1
  6222  001FAE  503F               	movf	___flmul@temp^0,w,c
  6223  001FB0  2635               	addwf	___flmul@grs^0,f,c
  6224  001FB2  5040               	movf	(___flmul@temp+1)^0,w,c
  6225  001FB4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6226  001FB6  0E00               	movlw	0
  6227  001FB8  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6228  001FBA  0E00               	movlw	0
  6229  001FBC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6230  001FBE  502D               	movf	(___flmul@a+1)^0,w,c
  6231  001FC0  0228               	mulwf	___flmul@b^0,c
  6232  001FC2  CFF3 F03F          	movff	prodl,___flmul@temp
  6233  001FC6  CFF4 F040          	movff	prodh,___flmul@temp+1
  6234  001FCA  503F               	movf	___flmul@temp^0,w,c
  6235  001FCC  2635               	addwf	___flmul@grs^0,f,c
  6236  001FCE  5040               	movf	(___flmul@temp+1)^0,w,c
  6237  001FD0  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6238  001FD2  0E00               	movlw	0
  6239  001FD4  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6240  001FD6  0E00               	movlw	0
  6241  001FD8  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6242  001FDA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6243  001FDE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6244  001FE2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6245  001FE6  6A35               	clrf	___flmul@grs^0,c
  6246  001FE8  502C               	movf	___flmul@a^0,w,c
  6247  001FEA  0228               	mulwf	___flmul@b^0,c
  6248  001FEC  CFF3 F03F          	movff	prodl,___flmul@temp
  6249  001FF0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6250  001FF4  503F               	movf	___flmul@temp^0,w,c
  6251  001FF6  2635               	addwf	___flmul@grs^0,f,c
  6252  001FF8  5040               	movf	(___flmul@temp+1)^0,w,c
  6253  001FFA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6254  001FFC  0E00               	movlw	0
  6255  001FFE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6256  002000  0E00               	movlw	0
  6257  002002  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6258  002004  502E               	movf	(___flmul@a+2)^0,w,c
  6259  002006  0229               	mulwf	(___flmul@b+1)^0,c
  6260  002008  CFF3 F03F          	movff	prodl,___flmul@temp
  6261  00200C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6262  002010  503F               	movf	___flmul@temp^0,w,c
  6263  002012  263B               	addwf	___flmul@prod^0,f,c
  6264  002014  5040               	movf	(___flmul@temp+1)^0,w,c
  6265  002016  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6266  002018  0E00               	movlw	0
  6267  00201A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6268  00201C  0E00               	movlw	0
  6269  00201E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6270  002020  502D               	movf	(___flmul@a+1)^0,w,c
  6271  002022  022A               	mulwf	(___flmul@b+2)^0,c
  6272  002024  CFF3 F03F          	movff	prodl,___flmul@temp
  6273  002028  CFF4 F040          	movff	prodh,___flmul@temp+1
  6274  00202C  503F               	movf	___flmul@temp^0,w,c
  6275  00202E  263B               	addwf	___flmul@prod^0,f,c
  6276  002030  5040               	movf	(___flmul@temp+1)^0,w,c
  6277  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6278  002034  0E00               	movlw	0
  6279  002036  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6280  002038  0E00               	movlw	0
  6281  00203A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6282  00203C  502E               	movf	(___flmul@a+2)^0,w,c
  6283  00203E  022A               	mulwf	(___flmul@b+2)^0,c
  6284  002040  CFF3 F03F          	movff	prodl,___flmul@temp
  6285  002044  CFF4 F040          	movff	prodh,___flmul@temp+1
  6286  002048  503F               	movf	___flmul@temp^0,w,c
  6287  00204A  6E30               	movwf	??___flmul^0,c
  6288  00204C  5040               	movf	(___flmul@temp+1)^0,w,c
  6289  00204E  6E31               	movwf	(??___flmul+1)^0,c
  6290  002050  6A32               	clrf	(??___flmul+2)^0,c
  6291  002052  6A33               	clrf	(??___flmul+3)^0,c
  6292  002054  C032  F033         	movff	??___flmul+2,??___flmul+3
  6293  002058  C031  F032         	movff	??___flmul+1,??___flmul+2
  6294  00205C  C030  F031         	movff	??___flmul,??___flmul+1
  6295  002060  6A30               	clrf	??___flmul^0,c
  6296  002062  5030               	movf	??___flmul^0,w,c
  6297  002064  263B               	addwf	___flmul@prod^0,f,c
  6298  002066  5031               	movf	(??___flmul+1)^0,w,c
  6299  002068  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6300  00206A  5032               	movf	(??___flmul+2)^0,w,c
  6301  00206C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6302  00206E  5033               	movf	(??___flmul+3)^0,w,c
  6303  002070  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6304  002072  C035  F030         	movff	___flmul@grs,??___flmul
  6305  002076  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6306  00207A  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6307  00207E  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6308  002082  0E19               	movlw	25
  6309  002084  EF49  F010         	goto	u3940
  6310  002088                     u3945:
  6311  002088  90D8               	bcf	status,0,c
  6312  00208A  3233               	rrcf	(??___flmul+3)^0,f,c
  6313  00208C  3232               	rrcf	(??___flmul+2)^0,f,c
  6314  00208E  3231               	rrcf	(??___flmul+1)^0,f,c
  6315  002090  3230               	rrcf	??___flmul^0,f,c
  6316  002092                     u3940:
  6317  002092  2EE8               	decfsz	wreg,f,c
  6318  002094  EF44  F010         	goto	u3945
  6319  002098  5030               	movf	??___flmul^0,w,c
  6320  00209A  263B               	addwf	___flmul@prod^0,f,c
  6321  00209C  5031               	movf	(??___flmul+1)^0,w,c
  6322  00209E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6323  0020A0  5032               	movf	(??___flmul+2)^0,w,c
  6324  0020A2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6325  0020A4  5033               	movf	(??___flmul+3)^0,w,c
  6326  0020A6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6327  0020A8  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6328  0020AC  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6329  0020B0  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6330  0020B4  6A35               	clrf	___flmul@grs^0,c
  6331  0020B6  5039               	movf	___flmul@aexp^0,w,c
  6332  0020B8  C03A  F030         	movff	___flmul@bexp,??___flmul
  6333  0020BC  6A31               	clrf	(??___flmul+1)^0,c
  6334  0020BE  2630               	addwf	??___flmul^0,f,c
  6335  0020C0  0E00               	movlw	0
  6336  0020C2  2231               	addwfc	(??___flmul+1)^0,f,c
  6337  0020C4  0E82               	movlw	130
  6338  0020C6  2430               	addwf	??___flmul^0,w,c
  6339  0020C8  6E3F               	movwf	___flmul@temp^0,c
  6340  0020CA  0EFF               	movlw	255
  6341  0020CC  2031               	addwfc	(??___flmul+1)^0,w,c
  6342  0020CE  6E40               	movwf	(___flmul@temp+1)^0,c
  6343  0020D0  EF7F  F010         	goto	l4255
  6344  0020D4                     l4249:
  6345  0020D4  90D8               	bcf	status,0,c
  6346  0020D6  363B               	rlcf	___flmul@prod^0,f,c
  6347  0020D8  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6348  0020DA  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6349  0020DC  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6350  0020DE  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6351  0020E0  EF74  F010         	goto	u3951
  6352  0020E4  EF76  F010         	goto	u3950
  6353  0020E8                     u3951:
  6354  0020E8  EF77  F010         	goto	l1398
  6355  0020EC                     u3950:
  6356  0020EC  803B               	bsf	___flmul@prod^0,0,c
  6357  0020EE                     l1398:
  6358  0020EE  90D8               	bcf	status,0,c
  6359  0020F0  3635               	rlcf	___flmul@grs^0,f,c
  6360  0020F2  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6361  0020F4  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6362  0020F6  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6363  0020F8  063F               	decf	___flmul@temp^0,f,c
  6364  0020FA  A0D8               	btfss	status,0,c
  6365  0020FC  0640               	decf	(___flmul@temp+1)^0,f,c
  6366  0020FE                     l4255:
  6367  0020FE  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6368  002100  EF84  F010         	goto	u3961
  6369  002104  EF86  F010         	goto	u3960
  6370  002108                     u3961:
  6371  002108  EF6A  F010         	goto	l4249
  6372  00210C                     u3960:
  6373  00210C  0E00               	movlw	0
  6374  00210E  6E39               	movwf	___flmul@aexp^0,c
  6375  002110  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6376  002112  EF8D  F010         	goto	u3971
  6377  002116  EF8F  F010         	goto	u3970
  6378  00211A                     u3971:
  6379  00211A  EFB3  F010         	goto	l1400
  6380  00211E                     u3970:
  6381  00211E  0EFF               	movlw	255
  6382  002120  1435               	andwf	___flmul@grs^0,w,c
  6383  002122  6E30               	movwf	??___flmul^0,c
  6384  002124  0EFF               	movlw	255
  6385  002126  1436               	andwf	(___flmul@grs+1)^0,w,c
  6386  002128  6E31               	movwf	(??___flmul+1)^0,c
  6387  00212A  0EFF               	movlw	255
  6388  00212C  1437               	andwf	(___flmul@grs+2)^0,w,c
  6389  00212E  6E32               	movwf	(??___flmul+2)^0,c
  6390  002130  0E7F               	movlw	127
  6391  002132  1438               	andwf	(___flmul@grs+3)^0,w,c
  6392  002134  6E33               	movwf	(??___flmul+3)^0,c
  6393  002136  5030               	movf	??___flmul^0,w,c
  6394  002138  1031               	iorwf	(??___flmul+1)^0,w,c
  6395  00213A  1032               	iorwf	(??___flmul+2)^0,w,c
  6396  00213C  1033               	iorwf	(??___flmul+3)^0,w,c
  6397  00213E  B4D8               	btfsc	status,2,c
  6398  002140  EFA4  F010         	goto	u3981
  6399  002144  EFA6  F010         	goto	u3980
  6400  002148                     u3981:
  6401  002148  EFAA  F010         	goto	l1401
  6402  00214C                     u3980:
  6403  00214C                     l4263:
  6404  00214C  0E01               	movlw	1
  6405  00214E  6E39               	movwf	___flmul@aexp^0,c
  6406  002150  EFB3  F010         	goto	l1400
  6407  002154                     l1401:
  6408  002154  A03B               	btfss	___flmul@prod^0,0,c
  6409  002156  EFAF  F010         	goto	u3991
  6410  00215A  EFB1  F010         	goto	u3990
  6411  00215E                     u3991:
  6412  00215E  EFB3  F010         	goto	l1400
  6413  002162                     u3990:
  6414  002162  EFA6  F010         	goto	l4263
  6415  002166                     l1400:
  6416  002166  5039               	movf	___flmul@aexp^0,w,c
  6417  002168  B4D8               	btfsc	status,2,c
  6418  00216A  EFB9  F010         	goto	u4001
  6419  00216E  EFBB  F010         	goto	u4000
  6420  002172                     u4001:
  6421  002172  EFDF  F010         	goto	l4275
  6422  002176                     u4000:
  6423  002176  0E01               	movlw	1
  6424  002178  263B               	addwf	___flmul@prod^0,f,c
  6425  00217A  0E00               	movlw	0
  6426  00217C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6427  00217E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6428  002180  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6429  002182  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6430  002184  EFC6  F010         	goto	u4011
  6431  002188  EFC8  F010         	goto	u4010
  6432  00218C                     u4011:
  6433  00218C  EFDF  F010         	goto	l4275
  6434  002190                     u4010:
  6435  002190  C03B  F030         	movff	___flmul@prod,??___flmul
  6436  002194  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6437  002198  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6438  00219C  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6439  0021A0  3433               	rlcf	(??___flmul+3)^0,w,c
  6440  0021A2  3233               	rrcf	(??___flmul+3)^0,f,c
  6441  0021A4  3232               	rrcf	(??___flmul+2)^0,f,c
  6442  0021A6  3231               	rrcf	(??___flmul+1)^0,f,c
  6443  0021A8  3230               	rrcf	??___flmul^0,f,c
  6444  0021AA  C030  F03B         	movff	??___flmul,___flmul@prod
  6445  0021AE  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6446  0021B2  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6447  0021B6  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6448  0021BA  4A3F               	infsnz	___flmul@temp^0,f,c
  6449  0021BC  2A40               	incf	(___flmul@temp+1)^0,f,c
  6450  0021BE                     l4275:
  6451  0021BE  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6452  0021C0  EFEA  F010         	goto	u4021
  6453  0021C4  5040               	movf	(___flmul@temp+1)^0,w,c
  6454  0021C6  E108               	bnz	u4020
  6455  0021C8  283F               	incf	___flmul@temp^0,w,c
  6456  0021CA  A0D8               	btfss	status,0,c
  6457  0021CC  EFEA  F010         	goto	u4021
  6458  0021D0  EFEC  F010         	goto	u4020
  6459  0021D4                     u4021:
  6460  0021D4  EFF6  F010         	goto	l4279
  6461  0021D8                     u4020:
  6462  0021D8  0E00               	movlw	0
  6463  0021DA  6E3B               	movwf	___flmul@prod^0,c
  6464  0021DC  0E00               	movlw	0
  6465  0021DE  6E3C               	movwf	(___flmul@prod+1)^0,c
  6466  0021E0  0E80               	movlw	128
  6467  0021E2  6E3D               	movwf	(___flmul@prod+2)^0,c
  6468  0021E4  0E7F               	movlw	127
  6469  0021E6  6E3E               	movwf	(___flmul@prod+3)^0,c
  6470  0021E8  EF24  F011         	goto	l4291
  6471  0021EC                     l4279:
  6472  0021EC  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6473  0021EE  EF03  F011         	goto	u4030
  6474  0021F2  5040               	movf	(___flmul@temp+1)^0,w,c
  6475  0021F4  E106               	bnz	u4031
  6476  0021F6  043F               	decf	___flmul@temp^0,w,c
  6477  0021F8  B0D8               	btfsc	status,0,c
  6478  0021FA  EF01  F011         	goto	u4031
  6479  0021FE  EF03  F011         	goto	u4030
  6480  002202                     u4031:
  6481  002202  EF0F  F011         	goto	l1408
  6482  002206                     u4030:
  6483  002206  0E00               	movlw	0
  6484  002208  6E3B               	movwf	___flmul@prod^0,c
  6485  00220A  0E00               	movlw	0
  6486  00220C  6E3C               	movwf	(___flmul@prod+1)^0,c
  6487  00220E  0E00               	movlw	0
  6488  002210  6E3D               	movwf	(___flmul@prod+2)^0,c
  6489  002212  0E00               	movlw	0
  6490  002214  6E3E               	movwf	(___flmul@prod+3)^0,c
  6491  002216  0E00               	movlw	0
  6492  002218  6E34               	movwf	___flmul@sign^0,c
  6493  00221A  EF24  F011         	goto	l4291
  6494  00221E                     l1408:
  6495  00221E  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6496  002222  0EFF               	movlw	255
  6497  002224  163B               	andwf	___flmul@prod^0,f,c
  6498  002226  0EFF               	movlw	255
  6499  002228  163C               	andwf	(___flmul@prod+1)^0,f,c
  6500  00222A  0E7F               	movlw	127
  6501  00222C  163D               	andwf	(___flmul@prod+2)^0,f,c
  6502  00222E  0E00               	movlw	0
  6503  002230  163E               	andwf	(___flmul@prod+3)^0,f,c
  6504  002232  A03A               	btfss	___flmul@bexp^0,0,c
  6505  002234  EF1E  F011         	goto	u4041
  6506  002238  EF20  F011         	goto	u4040
  6507  00223C                     u4041:
  6508  00223C  EF21  F011         	goto	l4289
  6509  002240                     u4040:
  6510  002240  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6511  002242                     l4289:
  6512  002242  90D8               	bcf	status,0,c
  6513  002244  303A               	rrcf	___flmul@bexp^0,w,c
  6514  002246  6E3E               	movwf	(___flmul@prod+3)^0,c
  6515  002248                     l4291:
  6516  002248  5034               	movf	___flmul@sign^0,w,c
  6517  00224A  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6518  00224C  C03B  F028         	movff	___flmul@prod,?___flmul
  6519  002250  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6520  002254  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6521  002258  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6522  00225C                     l1395:
  6523  00225C  0012               	return		;funcret
  6524  00225E                     __end_of___flmul:
  6525                           	callstack 0
  6526                           
  6527 ;; *************** function ___flge *****************
  6528 ;; Defined at:
  6529 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  ff1             4    0[COMRAM] unsigned char 
  6532 ;;  ff2             4    4[COMRAM] unsigned char 
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;		None               void
  6537 ;; Registers used:
  6538 ;;		wreg, status,2, status,0
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6544 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6547 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6548 ;;Total ram usage:       12 bytes
  6549 ;; Hardware stack levels used: 1
  6550 ;; Hardware stack levels required when called: 1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_roundf
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558                           	psect	text24
  6559  0048FA                     __ptext24:
  6560                           	callstack 0
  6561  0048FA                     ___flge:
  6562                           	callstack 25
  6563  0048FA  0E00               	movlw	0
  6564  0048FC  1401               	andwf	___flge@ff1^0,w,c
  6565  0048FE  6E09               	movwf	??___flge^0,c
  6566  004900  0E00               	movlw	0
  6567  004902  1402               	andwf	(___flge@ff1+1)^0,w,c
  6568  004904  6E0A               	movwf	(??___flge+1)^0,c
  6569  004906  0E80               	movlw	128
  6570  004908  1403               	andwf	(___flge@ff1+2)^0,w,c
  6571  00490A  6E0B               	movwf	(??___flge+2)^0,c
  6572  00490C  0E7F               	movlw	127
  6573  00490E  1404               	andwf	(___flge@ff1+3)^0,w,c
  6574  004910  6E0C               	movwf	(??___flge+3)^0,c
  6575  004912  5009               	movf	??___flge^0,w,c
  6576  004914  100A               	iorwf	(??___flge+1)^0,w,c
  6577  004916  100B               	iorwf	(??___flge+2)^0,w,c
  6578  004918  100C               	iorwf	(??___flge+3)^0,w,c
  6579  00491A  A4D8               	btfss	status,2,c
  6580  00491C  EF92  F024         	goto	u4051
  6581  004920  EF94  F024         	goto	u4050
  6582  004924                     u4051:
  6583  004924  EF9C  F024         	goto	l4307
  6584  004928                     u4050:
  6585  004928  0E00               	movlw	0
  6586  00492A  6E01               	movwf	___flge@ff1^0,c
  6587  00492C  0E00               	movlw	0
  6588  00492E  6E02               	movwf	(___flge@ff1+1)^0,c
  6589  004930  0E00               	movlw	0
  6590  004932  6E03               	movwf	(___flge@ff1+2)^0,c
  6591  004934  0E00               	movlw	0
  6592  004936  6E04               	movwf	(___flge@ff1+3)^0,c
  6593  004938                     l4307:
  6594  004938  0E00               	movlw	0
  6595  00493A  1405               	andwf	___flge@ff2^0,w,c
  6596  00493C  6E09               	movwf	??___flge^0,c
  6597  00493E  0E00               	movlw	0
  6598  004940  1406               	andwf	(___flge@ff2+1)^0,w,c
  6599  004942  6E0A               	movwf	(??___flge+1)^0,c
  6600  004944  0E80               	movlw	128
  6601  004946  1407               	andwf	(___flge@ff2+2)^0,w,c
  6602  004948  6E0B               	movwf	(??___flge+2)^0,c
  6603  00494A  0E7F               	movlw	127
  6604  00494C  1408               	andwf	(___flge@ff2+3)^0,w,c
  6605  00494E  6E0C               	movwf	(??___flge+3)^0,c
  6606  004950  5009               	movf	??___flge^0,w,c
  6607  004952  100A               	iorwf	(??___flge+1)^0,w,c
  6608  004954  100B               	iorwf	(??___flge+2)^0,w,c
  6609  004956  100C               	iorwf	(??___flge+3)^0,w,c
  6610  004958  A4D8               	btfss	status,2,c
  6611  00495A  EFB1  F024         	goto	u4061
  6612  00495E  EFB3  F024         	goto	u4060
  6613  004962                     u4061:
  6614  004962  EFBB  F024         	goto	l4311
  6615  004966                     u4060:
  6616  004966  0E00               	movlw	0
  6617  004968  6E05               	movwf	___flge@ff2^0,c
  6618  00496A  0E00               	movlw	0
  6619  00496C  6E06               	movwf	(___flge@ff2+1)^0,c
  6620  00496E  0E00               	movlw	0
  6621  004970  6E07               	movwf	(___flge@ff2+2)^0,c
  6622  004972  0E00               	movlw	0
  6623  004974  6E08               	movwf	(___flge@ff2+3)^0,c
  6624  004976                     l4311:
  6625  004976  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6626  004978  EFC0  F024         	goto	u4071
  6627  00497C  EFC2  F024         	goto	u4070
  6628  004980                     u4071:
  6629  004980  EFCB  F024         	goto	l4315
  6630  004984                     u4070:
  6631  004984  6C01               	negf	___flge@ff1^0,c
  6632  004986  1E02               	comf	(___flge@ff1+1)^0,f,c
  6633  004988  B0D8               	btfsc	status,0,c
  6634  00498A  2A02               	incf	(___flge@ff1+1)^0,f,c
  6635  00498C  1E03               	comf	(___flge@ff1+2)^0,f,c
  6636  00498E  B0D8               	btfsc	status,0,c
  6637  004990  2A03               	incf	(___flge@ff1+2)^0,f,c
  6638  004992  0E80               	movlw	128
  6639  004994  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6640  004996                     l4315:
  6641  004996  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6642  004998  EFD0  F024         	goto	u4081
  6643  00499C  EFD2  F024         	goto	u4080
  6644  0049A0                     u4081:
  6645  0049A0  EFDB  F024         	goto	l1042
  6646  0049A4                     u4080:
  6647  0049A4  6C05               	negf	___flge@ff2^0,c
  6648  0049A6  1E06               	comf	(___flge@ff2+1)^0,f,c
  6649  0049A8  B0D8               	btfsc	status,0,c
  6650  0049AA  2A06               	incf	(___flge@ff2+1)^0,f,c
  6651  0049AC  1E07               	comf	(___flge@ff2+2)^0,f,c
  6652  0049AE  B0D8               	btfsc	status,0,c
  6653  0049B0  2A07               	incf	(___flge@ff2+2)^0,f,c
  6654  0049B2  0E80               	movlw	128
  6655  0049B4  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6656  0049B6                     l1042:
  6657  0049B6  0E00               	movlw	0
  6658  0049B8  1A01               	xorwf	___flge@ff1^0,f,c
  6659  0049BA  0E00               	movlw	0
  6660  0049BC  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6661  0049BE  0E00               	movlw	0
  6662  0049C0  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6663  0049C2  0E80               	movlw	128
  6664  0049C4  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6665  0049C6  0E00               	movlw	0
  6666  0049C8  1A05               	xorwf	___flge@ff2^0,f,c
  6667  0049CA  0E00               	movlw	0
  6668  0049CC  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6669  0049CE  0E00               	movlw	0
  6670  0049D0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6671  0049D2  0E80               	movlw	128
  6672  0049D4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6673  0049D6  5005               	movf	___flge@ff2^0,w,c
  6674  0049D8  5C01               	subwf	___flge@ff1^0,w,c
  6675  0049DA  5006               	movf	(___flge@ff2+1)^0,w,c
  6676  0049DC  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6677  0049DE  5007               	movf	(___flge@ff2+2)^0,w,c
  6678  0049E0  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6679  0049E2  5008               	movf	(___flge@ff2+3)^0,w,c
  6680  0049E4  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6681  0049E6  B0D8               	btfsc	status,0,c
  6682  0049E8  EFF8  F024         	goto	u4091
  6683  0049EC  EFFA  F024         	goto	u4090
  6684  0049F0                     u4091:
  6685  0049F0  EFFD  F024         	goto	l4321
  6686  0049F4                     u4090:
  6687  0049F4  90D8               	bcf	status,0,c
  6688  0049F6  EFFE  F024         	goto	l1047
  6689  0049FA                     l4321:
  6690  0049FA  80D8               	bsf	status,0,c
  6691  0049FC                     l1047:
  6692  0049FC  0012               	return		;funcret
  6693  0049FE                     __end_of___flge:
  6694                           	callstack 0
  6695                           
  6696 ;; *************** function ___fltol *****************
  6697 ;; Defined at:
  6698 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  f1              4   90[COMRAM] unsigned char 
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;  exp1            1    5[BANK0 ] unsigned char 
  6703 ;;  sign1           1    4[BANK0 ] unsigned char 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  4   90[COMRAM] long 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;Total ram usage:       10 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 1
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_lroundf
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text25
  6728  0047F2                     __ptext25:
  6729                           	callstack 0
  6730  0047F2                     ___fltol:
  6731                           	callstack 26
  6732  0047F2  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6733  0047F4  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6734  0047F6  0100               	movlb	0	; () banked
  6735  0047F8  6F65               	movwf	___fltol@exp1& (0+255),b
  6736  0047FA  5165               	movf	___fltol@exp1& (0+255),w,b
  6737  0047FC  A4D8               	btfss	status,2,c
  6738  0047FE  EF03  F024         	goto	u4151
  6739  004802  EF05  F024         	goto	u4150
  6740  004806                     u4151:
  6741  004806  EF0F  F024         	goto	l4409
  6742  00480A                     u4150:
  6743  00480A                     l4405:
  6744                           
  6745                           ; BSR set to: 0
  6746  00480A  0E00               	movlw	0
  6747  00480C  6E5B               	movwf	?___fltol^0,c
  6748  00480E  0E00               	movlw	0
  6749  004810  6E5C               	movwf	(?___fltol+1)^0,c
  6750  004812  0E00               	movlw	0
  6751  004814  6E5D               	movwf	(?___fltol+2)^0,c
  6752  004816  0E00               	movlw	0
  6753  004818  6E5E               	movwf	(?___fltol+3)^0,c
  6754  00481A  EF7C  F024         	goto	l1074
  6755  00481E                     l4409:
  6756                           
  6757                           ; BSR set to: 0
  6758  00481E  C05B  F060         	movff	___fltol@f1,??___fltol
  6759  004822  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6760  004826  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6761  00482A  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6762  00482E  0E20               	movlw	32
  6763  004830  EF1F  F024         	goto	u4160
  6764  004834                     u4165:
  6765  004834  90D8               	bcf	status,0,c
  6766  004836  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6767  004838  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6768  00483A  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6769  00483C  3360               	rrcf	??___fltol& (0+255),f,b
  6770  00483E                     u4160:
  6771  00483E  2EE8               	decfsz	wreg,f,c
  6772  004840  EF1A  F024         	goto	u4165
  6773  004844  5160               	movf	??___fltol& (0+255),w,b
  6774  004846  6F64               	movwf	___fltol@sign1& (0+255),b
  6775  004848                     
  6776                           ; BSR set to: 0
  6777  004848  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6778  00484A                     
  6779                           ; BSR set to: 0
  6780  00484A  0EFF               	movlw	255
  6781  00484C  165B               	andwf	___fltol@f1^0,f,c
  6782  00484E  0EFF               	movlw	255
  6783  004850  165C               	andwf	(___fltol@f1+1)^0,f,c
  6784  004852  0EFF               	movlw	255
  6785  004854  165D               	andwf	(___fltol@f1+2)^0,f,c
  6786  004856  0E00               	movlw	0
  6787  004858  165E               	andwf	(___fltol@f1+3)^0,f,c
  6788  00485A                     
  6789                           ; BSR set to: 0
  6790  00485A  0E96               	movlw	150
  6791  00485C  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6792  00485E                     
  6793                           ; BSR set to: 0
  6794  00485E  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  6795  004860  EF36  F024         	goto	u4170
  6796  004864  EF34  F024         	goto	u4171
  6797  004868                     u4171:
  6798  004868  EF4C  F024         	goto	l4429
  6799  00486C                     u4170:
  6800  00486C                     
  6801                           ; BSR set to: 0
  6802  00486C  5165               	movf	___fltol@exp1& (0+255),w,b
  6803  00486E  0A80               	xorlw	128
  6804  004870  0F97               	addlw	151
  6805  004872  B0D8               	btfsc	status,0,c
  6806  004874  EF3E  F024         	goto	u4181
  6807  004878  EF40  F024         	goto	u4180
  6808  00487C                     u4181:
  6809  00487C  EF42  F024         	goto	l4425
  6810  004880                     u4180:
  6811  004880  EF05  F024         	goto	l4405
  6812  004884                     l4425:
  6813                           
  6814                           ; BSR set to: 0
  6815  004884  90D8               	bcf	status,0,c
  6816  004886  325E               	rrcf	(___fltol@f1+3)^0,f,c
  6817  004888  325D               	rrcf	(___fltol@f1+2)^0,f,c
  6818  00488A  325C               	rrcf	(___fltol@f1+1)^0,f,c
  6819  00488C  325B               	rrcf	___fltol@f1^0,f,c
  6820  00488E                     
  6821                           ; BSR set to: 0
  6822  00488E  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6823  004890  EF42  F024         	goto	l4425
  6824  004894  EF64  F024         	goto	l4439
  6825  004898                     l4429:
  6826                           
  6827                           ; BSR set to: 0
  6828  004898  0E1F               	movlw	31
  6829  00489A  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6830  00489C  EF52  F024         	goto	u4191
  6831  0048A0  EF54  F024         	goto	u4190
  6832  0048A4                     u4191:
  6833  0048A4  EF5C  F024         	goto	l4437
  6834  0048A8                     u4190:
  6835  0048A8  EF05  F024         	goto	l4405
  6836  0048AC                     l4435:
  6837                           
  6838                           ; BSR set to: 0
  6839  0048AC  90D8               	bcf	status,0,c
  6840  0048AE  365B               	rlcf	___fltol@f1^0,f,c
  6841  0048B0  365C               	rlcf	(___fltol@f1+1)^0,f,c
  6842  0048B2  365D               	rlcf	(___fltol@f1+2)^0,f,c
  6843  0048B4  365E               	rlcf	(___fltol@f1+3)^0,f,c
  6844  0048B6  0765               	decf	___fltol@exp1& (0+255),f,b
  6845  0048B8                     l4437:
  6846                           
  6847                           ; BSR set to: 0
  6848  0048B8  5165               	movf	___fltol@exp1& (0+255),w,b
  6849  0048BA  A4D8               	btfss	status,2,c
  6850  0048BC  EF62  F024         	goto	u4201
  6851  0048C0  EF64  F024         	goto	u4200
  6852  0048C4                     u4201:
  6853  0048C4  EF56  F024         	goto	l4435
  6854  0048C8                     u4200:
  6855  0048C8                     l4439:
  6856                           
  6857                           ; BSR set to: 0
  6858  0048C8  5164               	movf	___fltol@sign1& (0+255),w,b
  6859  0048CA  B4D8               	btfsc	status,2,c
  6860  0048CC  EF6A  F024         	goto	u4211
  6861  0048D0  EF6C  F024         	goto	u4210
  6862  0048D4                     u4211:
  6863  0048D4  EF74  F024         	goto	l4443
  6864  0048D8                     u4210:
  6865  0048D8                     
  6866                           ; BSR set to: 0
  6867  0048D8  1E5E               	comf	(___fltol@f1+3)^0,f,c
  6868  0048DA  1E5D               	comf	(___fltol@f1+2)^0,f,c
  6869  0048DC  1E5C               	comf	(___fltol@f1+1)^0,f,c
  6870  0048DE  6C5B               	negf	___fltol@f1^0,c
  6871  0048E0  0E00               	movlw	0
  6872  0048E2  225C               	addwfc	(___fltol@f1+1)^0,f,c
  6873  0048E4  225D               	addwfc	(___fltol@f1+2)^0,f,c
  6874  0048E6  225E               	addwfc	(___fltol@f1+3)^0,f,c
  6875  0048E8                     l4443:
  6876                           
  6877                           ; BSR set to: 0
  6878  0048E8  C05B  F05B         	movff	___fltol@f1,?___fltol
  6879  0048EC  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  6880  0048F0  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  6881  0048F4  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  6882  0048F8                     l1074:
  6883                           
  6884                           ; BSR set to: 0
  6885  0048F8  0012               	return		;funcret
  6886  0048FA                     __end_of___fltol:
  6887                           	callstack 0
  6888                           
  6889 ;; *************** function _color_read_Clear *****************
  6890 ;; Defined at:
  6891 ;;		line 133 in file "color.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;		None
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;  tmp             2    9[COMRAM] unsigned int 
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  2    4[COMRAM] unsigned int 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0, cstack
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6908 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;Total ram usage:        7 bytes
  6910 ;; Hardware stack levels used: 1
  6911 ;; Hardware stack levels required when called: 3
  6912 ;; This function calls:
  6913 ;;		_I2C_2_Master_Read
  6914 ;;		_I2C_2_Master_RepStart
  6915 ;;		_I2C_2_Master_Start
  6916 ;;		_I2C_2_Master_Stop
  6917 ;;		_I2C_2_Master_Write
  6918 ;; This function is called by:
  6919 ;;		_read_color
  6920 ;;		_calibrate_white
  6921 ;;		_amb_light_measure
  6922 ;;		_distance_measure
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text26
  6927  00533E                     __ptext26:
  6928                           	callstack 0
  6929  00533E                     _color_read_Clear:
  6930                           	callstack 24
  6931  00533E                     
  6932                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  6933  00533E  EC61  F02C         	call	_I2C_2_Master_Start	;wreg free
  6934                           
  6935                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  6936  005342  0E52               	movlw	82
  6937  005344  EC4B  F02C         	call	_I2C_2_Master_Write
  6938                           
  6939                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  6940  005348  0EB4               	movlw	180
  6941  00534A  EC4B  F02C         	call	_I2C_2_Master_Write
  6942                           
  6943                           ;color.c: 139:  I2C_2_Master_RepStart();
  6944  00534E  EC57  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6945                           
  6946                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  6947  005352  0E53               	movlw	83
  6948  005354  EC4B  F02C         	call	_I2C_2_Master_Write
  6949                           
  6950                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  6951  005358  0E01               	movlw	1
  6952  00535A  EC0C  F02A         	call	_I2C_2_Master_Read
  6953  00535E  6E07               	movwf	??_color_read_Clear^0,c
  6954  005360  5007               	movf	??_color_read_Clear^0,w,c
  6955  005362  6E0A               	movwf	color_read_Clear@tmp^0,c
  6956  005364  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6957                           
  6958                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6959  005366  0E00               	movlw	0
  6960  005368  EC0C  F02A         	call	_I2C_2_Master_Read
  6961  00536C  6E07               	movwf	??_color_read_Clear^0,c
  6962  00536E  5007               	movf	??_color_read_Clear^0,w,c
  6963  005370  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6964  005372  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6965  005374  500A               	movf	color_read_Clear@tmp^0,w,c
  6966  005376  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6967  005378  6E0A               	movwf	color_read_Clear@tmp^0,c
  6968  00537A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6969  00537C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6970  00537E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6971                           
  6972                           ;color.c: 143:  I2C_2_Master_Stop();
  6973  005380  EC5C  F02C         	call	_I2C_2_Master_Stop	;wreg free
  6974  005384                     
  6975                           ;color.c: 144:  return tmp;
  6976  005384  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6977  005388  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6978  00538C  0012               	return		;funcret
  6979  00538E                     __end_of_color_read_Clear:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function _I2C_2_Master_RepStart *****************
  6983 ;; Defined at:
  6984 ;;		line 33 in file "i2c.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      void 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;Total ram usage:        0 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; Hardware stack levels required when called: 2
  7005 ;; This function calls:
  7006 ;;		_I2C_2_Master_Idle
  7007 ;; This function is called by:
  7008 ;;		_color_read_Red
  7009 ;;		_color_read_Blue
  7010 ;;		_color_read_Green
  7011 ;;		_color_read_Clear
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text27
  7016  0058AE                     __ptext27:
  7017                           	callstack 0
  7018  0058AE                     _I2C_2_Master_RepStart:
  7019                           	callstack 24
  7020  0058AE                     
  7021                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7022  0058AE  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7023  0058B2                     
  7024                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7025  0058B2  010E               	movlb	14	; () banked
  7026  0058B4  83DA               	bsf	218,1,b	;volatile
  7027  0058B6                     
  7028                           ; BSR set to: 14
  7029  0058B6  0012               	return		;funcret
  7030  0058B8                     __end_of_I2C_2_Master_RepStart:
  7031                           	callstack 0
  7032                           
  7033 ;; *************** function _I2C_2_Master_Read *****************
  7034 ;; Defined at:
  7035 ;;		line 51 in file "i2c.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;  ack             1    wreg     unsigned char 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  ack             1    2[COMRAM] unsigned char 
  7040 ;;  tmp             1    3[COMRAM] unsigned char 
  7041 ;; Return value:  Size  Location     Type
  7042 ;;                  1    wreg      unsigned char 
  7043 ;; Registers used:
  7044 ;;		wreg, status,2, status,0, cstack
  7045 ;; Tracked objects:
  7046 ;;		On entry : 0/0
  7047 ;;		On exit  : 0/0
  7048 ;;		Unchanged: 0/0
  7049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7053 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7054 ;;Total ram usage:        3 bytes
  7055 ;; Hardware stack levels used: 1
  7056 ;; Hardware stack levels required when called: 2
  7057 ;; This function calls:
  7058 ;;		_I2C_2_Master_Idle
  7059 ;; This function is called by:
  7060 ;;		_color_read_Red
  7061 ;;		_color_read_Blue
  7062 ;;		_color_read_Green
  7063 ;;		_color_read_Clear
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text28
  7068  005418                     __ptext28:
  7069                           	callstack 0
  7070  005418                     _I2C_2_Master_Read:
  7071                           	callstack 24
  7072                           
  7073                           ; BSR set to: 14
  7074                           ;incstack = 0
  7075                           ;I2C_2_Master_Read@ack stored from wreg
  7076  005418  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7077  00541A                     
  7078                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7079  00541A  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7080  00541E                     
  7081                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7082  00541E  010E               	movlb	14	; () banked
  7083  005420  87DA               	bsf	218,3,b	;volatile
  7084                           
  7085                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7086  005422  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7087  005426                     
  7088                           ;i2c.c: 57:   tmp = SSP2BUF;
  7089  005426  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7090                           
  7091                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7092  00542A  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7093  00542E                     
  7094                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7095  00542E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7096  005430  B4D8               	btfsc	status,2,c
  7097  005432  EF1D  F02A         	goto	u3791
  7098  005436  EF21  F02A         	goto	u3790
  7099  00543A                     u3791:
  7100  00543A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7101  00543C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7102  00543E  EF22  F02A         	goto	u3808
  7103  005442                     u3790:
  7104  005442  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7105  005444                     u3808:
  7106  005444  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7107  005446  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7108  005448  010E               	movlb	14	; () banked
  7109  00544A  51DA               	movf	218,w,b	;volatile
  7110  00544C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7111  00544E  0BDF               	andlw	-33
  7112  005450  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7113  005452  6FDA               	movwf	218,b	;volatile
  7114  005454                     
  7115                           ; BSR set to: 14
  7116                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7117  005454  89DA               	bsf	218,4,b	;volatile
  7118  005456                     
  7119                           ; BSR set to: 14
  7120                           ;i2c.c: 61:   return tmp;
  7121  005456  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7122  005458                     
  7123                           ; BSR set to: 14
  7124  005458  0012               	return		;funcret
  7125  00545A                     __end_of_I2C_2_Master_Read:
  7126                           	callstack 0
  7127                           
  7128 ;; *************** function ___xxtofl *****************
  7129 ;; Defined at:
  7130 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;  sign            1    wreg     unsigned char 
  7133 ;;  val             4    0[COMRAM] long 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  sign            1    8[COMRAM] unsigned char 
  7136 ;;  arg             4   10[COMRAM] unsigned long 
  7137 ;;  exp             1    9[COMRAM] unsigned char 
  7138 ;; Return value:  Size  Location     Type
  7139 ;;                  4    0[COMRAM] unsigned char 
  7140 ;; Registers used:
  7141 ;;		wreg, status,2, status,0
  7142 ;; Tracked objects:
  7143 ;;		On entry : 0/0
  7144 ;;		On exit  : 0/0
  7145 ;;		Unchanged: 0/0
  7146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;Total ram usage:       14 bytes
  7152 ;; Hardware stack levels used: 1
  7153 ;; Hardware stack levels required when called: 1
  7154 ;; This function calls:
  7155 ;;		Nothing
  7156 ;; This function is called by:
  7157 ;;		_detect_color
  7158 ;;		_amb_light_measure
  7159 ;;		_distance_measure
  7160 ;;		_check_color_reading
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text29
  7165  003A52                     __ptext29:
  7166                           	callstack 0
  7167  003A52                     ___xxtofl:
  7168                           	callstack 27
  7169                           
  7170                           ; BSR set to: 14
  7171                           ;incstack = 0
  7172                           ;___xxtofl@sign stored from wreg
  7173  003A52  6E09               	movwf	___xxtofl@sign^0,c
  7174  003A54  5009               	movf	___xxtofl@sign^0,w,c
  7175  003A56  B4D8               	btfsc	status,2,c
  7176  003A58  EF30  F01D         	goto	u4961
  7177  003A5C  EF32  F01D         	goto	u4960
  7178  003A60                     u4961:
  7179  003A60  EF54  F01D         	goto	l1432
  7180  003A64                     u4960:
  7181  003A64  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7182  003A66  EF39  F01D         	goto	u4970
  7183  003A6A  EF37  F01D         	goto	u4971
  7184  003A6E                     u4971:
  7185  003A6E  EF54  F01D         	goto	l1432
  7186  003A72                     u4970:
  7187  003A72  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7188  003A76  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7189  003A7A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7190  003A7E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7191  003A82  1E05               	comf	??___xxtofl^0,f,c
  7192  003A84  1E06               	comf	(??___xxtofl+1)^0,f,c
  7193  003A86  1E07               	comf	(??___xxtofl+2)^0,f,c
  7194  003A88  1E08               	comf	(??___xxtofl+3)^0,f,c
  7195  003A8A  2A05               	incf	??___xxtofl^0,f,c
  7196  003A8C  0E00               	movlw	0
  7197  003A8E  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7198  003A90  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7199  003A92  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7200  003A94  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7201  003A98  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7202  003A9C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7203  003AA0  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7204  003AA4  EF5C  F01D         	goto	l4817
  7205  003AA8                     l1432:
  7206  003AA8  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7207  003AAC  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7208  003AB0  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7209  003AB4  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7210  003AB8                     l4817:
  7211  003AB8  5001               	movf	___xxtofl@val^0,w,c
  7212  003ABA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7213  003ABC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7214  003ABE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7215  003AC0  A4D8               	btfss	status,2,c
  7216  003AC2  EF65  F01D         	goto	u4981
  7217  003AC6  EF67  F01D         	goto	u4980
  7218  003ACA                     u4981:
  7219  003ACA  EF71  F01D         	goto	l4823
  7220  003ACE                     u4980:
  7221  003ACE  0E00               	movlw	0
  7222  003AD0  6E01               	movwf	?___xxtofl^0,c
  7223  003AD2  0E00               	movlw	0
  7224  003AD4  6E02               	movwf	(?___xxtofl+1)^0,c
  7225  003AD6  0E00               	movlw	0
  7226  003AD8  6E03               	movwf	(?___xxtofl+2)^0,c
  7227  003ADA  0E00               	movlw	0
  7228  003ADC  6E04               	movwf	(?___xxtofl+3)^0,c
  7229  003ADE  EF02  F01E         	goto	l1435
  7230  003AE2                     l4823:
  7231  003AE2  0E96               	movlw	150
  7232  003AE4  6E0A               	movwf	___xxtofl@exp^0,c
  7233  003AE6  EF7B  F01D         	goto	l4827
  7234  003AEA                     l4825:
  7235  003AEA  2A0A               	incf	___xxtofl@exp^0,f,c
  7236  003AEC  90D8               	bcf	status,0,c
  7237  003AEE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7238  003AF0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7239  003AF2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7240  003AF4  320B               	rrcf	___xxtofl@arg^0,f,c
  7241  003AF6                     l4827:
  7242  003AF6  0E00               	movlw	0
  7243  003AF8  140B               	andwf	___xxtofl@arg^0,w,c
  7244  003AFA  6E05               	movwf	??___xxtofl^0,c
  7245  003AFC  0E00               	movlw	0
  7246  003AFE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7247  003B00  6E06               	movwf	(??___xxtofl+1)^0,c
  7248  003B02  0E00               	movlw	0
  7249  003B04  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7250  003B06  6E07               	movwf	(??___xxtofl+2)^0,c
  7251  003B08  0EFE               	movlw	254
  7252  003B0A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7253  003B0C  6E08               	movwf	(??___xxtofl+3)^0,c
  7254  003B0E  5005               	movf	??___xxtofl^0,w,c
  7255  003B10  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7256  003B12  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7257  003B14  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7258  003B16  A4D8               	btfss	status,2,c
  7259  003B18  EF90  F01D         	goto	u4991
  7260  003B1C  EF92  F01D         	goto	u4990
  7261  003B20                     u4991:
  7262  003B20  EF75  F01D         	goto	l4825
  7263  003B24                     u4990:
  7264  003B24  EFA0  F01D         	goto	l1439
  7265  003B28                     l4829:
  7266  003B28  2A0A               	incf	___xxtofl@exp^0,f,c
  7267  003B2A  0E01               	movlw	1
  7268  003B2C  260B               	addwf	___xxtofl@arg^0,f,c
  7269  003B2E  0E00               	movlw	0
  7270  003B30  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7271  003B32  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7272  003B34  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7273  003B36  90D8               	bcf	status,0,c
  7274  003B38  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7275  003B3A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7276  003B3C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7277  003B3E  320B               	rrcf	___xxtofl@arg^0,f,c
  7278  003B40                     l1439:
  7279  003B40  0E00               	movlw	0
  7280  003B42  140B               	andwf	___xxtofl@arg^0,w,c
  7281  003B44  6E05               	movwf	??___xxtofl^0,c
  7282  003B46  0E00               	movlw	0
  7283  003B48  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7284  003B4A  6E06               	movwf	(??___xxtofl+1)^0,c
  7285  003B4C  0E00               	movlw	0
  7286  003B4E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7287  003B50  6E07               	movwf	(??___xxtofl+2)^0,c
  7288  003B52  0EFF               	movlw	255
  7289  003B54  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7290  003B56  6E08               	movwf	(??___xxtofl+3)^0,c
  7291  003B58  5005               	movf	??___xxtofl^0,w,c
  7292  003B5A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7293  003B5C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7294  003B5E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7295  003B60  A4D8               	btfss	status,2,c
  7296  003B62  EFB5  F01D         	goto	u5001
  7297  003B66  EFB7  F01D         	goto	u5000
  7298  003B6A                     u5001:
  7299  003B6A  EF94  F01D         	goto	l4829
  7300  003B6E                     u5000:
  7301  003B6E  EFBF  F01D         	goto	l4837
  7302  003B72                     l4835:
  7303  003B72  060A               	decf	___xxtofl@exp^0,f,c
  7304  003B74  90D8               	bcf	status,0,c
  7305  003B76  360B               	rlcf	___xxtofl@arg^0,f,c
  7306  003B78  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7307  003B7A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7308  003B7C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7309  003B7E                     l4837:
  7310  003B7E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7311  003B80  EFC4  F01D         	goto	u5011
  7312  003B84  EFC6  F01D         	goto	u5010
  7313  003B88                     u5011:
  7314  003B88  EFCE  F01D         	goto	l1446
  7315  003B8C                     u5010:
  7316  003B8C  0E02               	movlw	2
  7317  003B8E  600A               	cpfslt	___xxtofl@exp^0,c
  7318  003B90  EFCC  F01D         	goto	u5021
  7319  003B94  EFCE  F01D         	goto	u5020
  7320  003B98                     u5021:
  7321  003B98  EFB9  F01D         	goto	l4835
  7322  003B9C                     u5020:
  7323  003B9C                     l1446:
  7324  003B9C  B00A               	btfsc	___xxtofl@exp^0,0,c
  7325  003B9E  EFD3  F01D         	goto	u5031
  7326  003BA2  EFD5  F01D         	goto	u5030
  7327  003BA6                     u5031:
  7328  003BA6  EFD6  F01D         	goto	l4843
  7329  003BAA                     u5030:
  7330  003BAA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7331  003BAC                     l4843:
  7332  003BAC  90D8               	bcf	status,0,c
  7333  003BAE  320A               	rrcf	___xxtofl@exp^0,f,c
  7334  003BB0  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7335  003BB4  6A06               	clrf	(??___xxtofl+1)^0,c
  7336  003BB6  6A07               	clrf	(??___xxtofl+2)^0,c
  7337  003BB8  6A08               	clrf	(??___xxtofl+3)^0,c
  7338  003BBA  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7339  003BBE  6A07               	clrf	(??___xxtofl+2)^0,c
  7340  003BC0  6A06               	clrf	(??___xxtofl+1)^0,c
  7341  003BC2  6A05               	clrf	??___xxtofl^0,c
  7342  003BC4  5005               	movf	??___xxtofl^0,w,c
  7343  003BC6  120B               	iorwf	___xxtofl@arg^0,f,c
  7344  003BC8  5006               	movf	(??___xxtofl+1)^0,w,c
  7345  003BCA  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7346  003BCC  5007               	movf	(??___xxtofl+2)^0,w,c
  7347  003BCE  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7348  003BD0  5008               	movf	(??___xxtofl+3)^0,w,c
  7349  003BD2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7350  003BD4  5009               	movf	___xxtofl@sign^0,w,c
  7351  003BD6  B4D8               	btfsc	status,2,c
  7352  003BD8  EFF0  F01D         	goto	u5041
  7353  003BDC  EFF2  F01D         	goto	u5040
  7354  003BE0                     u5041:
  7355  003BE0  EFFA  F01D         	goto	l4853
  7356  003BE4                     u5040:
  7357  003BE4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7358  003BE6  EFF9  F01D         	goto	u5050
  7359  003BEA  EFF7  F01D         	goto	u5051
  7360  003BEE                     u5051:
  7361  003BEE  EFFA  F01D         	goto	l4853
  7362  003BF2                     u5050:
  7363  003BF2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7364  003BF4                     l4853:
  7365  003BF4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7366  003BF8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7367  003BFC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7368  003C00  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7369  003C04                     l1435:
  7370  003C04  0012               	return		;funcret
  7371  003C06                     __end_of___xxtofl:
  7372                           	callstack 0
  7373                           
  7374 ;; *************** function ___fldiv *****************
  7375 ;; Defined at:
  7376 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7377 ;; Parameters:    Size  Location     Type
  7378 ;;  b               4   14[COMRAM] unsigned char 
  7379 ;;  a               4   18[COMRAM] unsigned char 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  grs             4   33[COMRAM] unsigned long 
  7382 ;;  rem             4   26[COMRAM] unsigned long 
  7383 ;;  new_exp         2   31[COMRAM] short 
  7384 ;;  aexp            1   38[COMRAM] unsigned char 
  7385 ;;  bexp            1   37[COMRAM] unsigned char 
  7386 ;;  sign            1   30[COMRAM] unsigned char 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  4   14[COMRAM] unsigned char 
  7389 ;; Registers used:
  7390 ;;		wreg, status,2, status,0
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7396 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;Total ram usage:       25 bytes
  7401 ;; Hardware stack levels used: 1
  7402 ;; Hardware stack levels required when called: 1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_detect_color
  7407 ;;		_amb_light_measure
  7408 ;;		_check_color_reading
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text30
  7413  00260C                     __ptext30:
  7414                           	callstack 0
  7415  00260C                     ___fldiv:
  7416                           	callstack 27
  7417  00260C  5012               	movf	(___fldiv@b+3)^0,w,c
  7418  00260E  0B80               	andlw	128
  7419  002610  6E1F               	movwf	___fldiv@sign^0,c
  7420  002612  5012               	movf	(___fldiv@b+3)^0,w,c
  7421  002614  2412               	addwf	(___fldiv@b+3)^0,w,c
  7422  002616  6E26               	movwf	___fldiv@bexp^0,c
  7423  002618  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7424  00261A  EF11  F013         	goto	u4731
  7425  00261E  EF13  F013         	goto	u4730
  7426  002622                     u4731:
  7427  002622  EF14  F013         	goto	l4679
  7428  002626                     u4730:
  7429  002626  8026               	bsf	___fldiv@bexp^0,0,c
  7430  002628                     l4679:
  7431  002628  5026               	movf	___fldiv@bexp^0,w,c
  7432  00262A  B4D8               	btfsc	status,2,c
  7433  00262C  EF1A  F013         	goto	u4741
  7434  002630  EF1C  F013         	goto	u4740
  7435  002634                     u4741:
  7436  002634  EF31  F013         	goto	l4689
  7437  002638                     u4740:
  7438  002638  2826               	incf	___fldiv@bexp^0,w,c
  7439  00263A  A4D8               	btfss	status,2,c
  7440  00263C  EF22  F013         	goto	u4751
  7441  002640  EF24  F013         	goto	u4750
  7442  002644                     u4751:
  7443  002644  EF2C  F013         	goto	l4685
  7444  002648                     u4750:
  7445  002648  0E00               	movlw	0
  7446  00264A  6E0F               	movwf	___fldiv@b^0,c
  7447  00264C  0E00               	movlw	0
  7448  00264E  6E10               	movwf	(___fldiv@b+1)^0,c
  7449  002650  0E00               	movlw	0
  7450  002652  6E11               	movwf	(___fldiv@b+2)^0,c
  7451  002654  0E00               	movlw	0
  7452  002656  6E12               	movwf	(___fldiv@b+3)^0,c
  7453  002658                     l4685:
  7454  002658  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7455  00265A  0E00               	movlw	0
  7456  00265C  6E12               	movwf	(___fldiv@b+3)^0,c
  7457  00265E  EF39  F013         	goto	l4691
  7458  002662                     l4689:
  7459  002662  0E00               	movlw	0
  7460  002664  6E0F               	movwf	___fldiv@b^0,c
  7461  002666  0E00               	movlw	0
  7462  002668  6E10               	movwf	(___fldiv@b+1)^0,c
  7463  00266A  0E00               	movlw	0
  7464  00266C  6E11               	movwf	(___fldiv@b+2)^0,c
  7465  00266E  0E00               	movlw	0
  7466  002670  6E12               	movwf	(___fldiv@b+3)^0,c
  7467  002672                     l4691:
  7468  002672  5016               	movf	(___fldiv@a+3)^0,w,c
  7469  002674  0B80               	andlw	128
  7470  002676  1A1F               	xorwf	___fldiv@sign^0,f,c
  7471  002678  5016               	movf	(___fldiv@a+3)^0,w,c
  7472  00267A  2416               	addwf	(___fldiv@a+3)^0,w,c
  7473  00267C  6E27               	movwf	___fldiv@aexp^0,c
  7474  00267E  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7475  002680  EF44  F013         	goto	u4761
  7476  002684  EF46  F013         	goto	u4760
  7477  002688                     u4761:
  7478  002688  EF47  F013         	goto	l4699
  7479  00268C                     u4760:
  7480  00268C  8027               	bsf	___fldiv@aexp^0,0,c
  7481  00268E                     l4699:
  7482  00268E  5027               	movf	___fldiv@aexp^0,w,c
  7483  002690  B4D8               	btfsc	status,2,c
  7484  002692  EF4D  F013         	goto	u4771
  7485  002696  EF4F  F013         	goto	u4770
  7486  00269A                     u4771:
  7487  00269A  EF64  F013         	goto	l4709
  7488  00269E                     u4770:
  7489  00269E  2827               	incf	___fldiv@aexp^0,w,c
  7490  0026A0  A4D8               	btfss	status,2,c
  7491  0026A2  EF55  F013         	goto	u4781
  7492  0026A6  EF57  F013         	goto	u4780
  7493  0026AA                     u4781:
  7494  0026AA  EF5F  F013         	goto	l4705
  7495  0026AE                     u4780:
  7496  0026AE  0E00               	movlw	0
  7497  0026B0  6E13               	movwf	___fldiv@a^0,c
  7498  0026B2  0E00               	movlw	0
  7499  0026B4  6E14               	movwf	(___fldiv@a+1)^0,c
  7500  0026B6  0E00               	movlw	0
  7501  0026B8  6E15               	movwf	(___fldiv@a+2)^0,c
  7502  0026BA  0E00               	movlw	0
  7503  0026BC  6E16               	movwf	(___fldiv@a+3)^0,c
  7504  0026BE                     l4705:
  7505  0026BE  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7506  0026C0  0E00               	movlw	0
  7507  0026C2  6E16               	movwf	(___fldiv@a+3)^0,c
  7508  0026C4  EF6C  F013         	goto	l4711
  7509  0026C8                     l4709:
  7510  0026C8  0E00               	movlw	0
  7511  0026CA  6E13               	movwf	___fldiv@a^0,c
  7512  0026CC  0E00               	movlw	0
  7513  0026CE  6E14               	movwf	(___fldiv@a+1)^0,c
  7514  0026D0  0E00               	movlw	0
  7515  0026D2  6E15               	movwf	(___fldiv@a+2)^0,c
  7516  0026D4  0E00               	movlw	0
  7517  0026D6  6E16               	movwf	(___fldiv@a+3)^0,c
  7518  0026D8                     l4711:
  7519  0026D8  5013               	movf	___fldiv@a^0,w,c
  7520  0026DA  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7521  0026DC  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7522  0026DE  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7523  0026E0  A4D8               	btfss	status,2,c
  7524  0026E2  EF75  F013         	goto	u4791
  7525  0026E6  EF77  F013         	goto	u4790
  7526  0026EA                     u4791:
  7527  0026EA  EF8F  F013         	goto	l4723
  7528  0026EE                     u4790:
  7529  0026EE  0E00               	movlw	0
  7530  0026F0  6E0F               	movwf	___fldiv@b^0,c
  7531  0026F2  0E00               	movlw	0
  7532  0026F4  6E10               	movwf	(___fldiv@b+1)^0,c
  7533  0026F6  0E00               	movlw	0
  7534  0026F8  6E11               	movwf	(___fldiv@b+2)^0,c
  7535  0026FA  0E00               	movlw	0
  7536  0026FC  6E12               	movwf	(___fldiv@b+3)^0,c
  7537  0026FE  0E80               	movlw	128
  7538  002700  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7539  002702  0E7F               	movlw	127
  7540  002704  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7541  002706                     l4717:
  7542  002706  501F               	movf	___fldiv@sign^0,w,c
  7543  002708  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7544  00270A  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7545  00270E  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7546  002712  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7547  002716  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7548  00271A  EFD2  F014         	goto	l1359
  7549  00271E                     l4723:
  7550  00271E  5026               	movf	___fldiv@bexp^0,w,c
  7551  002720  A4D8               	btfss	status,2,c
  7552  002722  EF95  F013         	goto	u4801
  7553  002726  EF97  F013         	goto	u4800
  7554  00272A                     u4801:
  7555  00272A  EFA1  F013         	goto	l4731
  7556  00272E                     u4800:
  7557  00272E  0E00               	movlw	0
  7558  002730  6E0F               	movwf	?___fldiv^0,c
  7559  002732  0E00               	movlw	0
  7560  002734  6E10               	movwf	(?___fldiv+1)^0,c
  7561  002736  0E00               	movlw	0
  7562  002738  6E11               	movwf	(?___fldiv+2)^0,c
  7563  00273A  0E00               	movlw	0
  7564  00273C  6E12               	movwf	(?___fldiv+3)^0,c
  7565  00273E  EFD2  F014         	goto	l1359
  7566  002742                     l4731:
  7567  002742  5027               	movf	___fldiv@aexp^0,w,c
  7568  002744  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7569  002748  6A18               	clrf	(??___fldiv+1)^0,c
  7570  00274A  5E17               	subwf	??___fldiv^0,f,c
  7571  00274C  0E00               	movlw	0
  7572  00274E  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7573  002750  0E7F               	movlw	127
  7574  002752  2417               	addwf	??___fldiv^0,w,c
  7575  002754  6E20               	movwf	___fldiv@new_exp^0,c
  7576  002756  0E00               	movlw	0
  7577  002758  2018               	addwfc	(??___fldiv+1)^0,w,c
  7578  00275A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7579  00275C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7580  002760  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7581  002764  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7582  002768  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7583  00276C  0E00               	movlw	0
  7584  00276E  6E0F               	movwf	___fldiv@b^0,c
  7585  002770  0E00               	movlw	0
  7586  002772  6E10               	movwf	(___fldiv@b+1)^0,c
  7587  002774  0E00               	movlw	0
  7588  002776  6E11               	movwf	(___fldiv@b+2)^0,c
  7589  002778  0E00               	movlw	0
  7590  00277A  6E12               	movwf	(___fldiv@b+3)^0,c
  7591  00277C  0E00               	movlw	0
  7592  00277E  6E22               	movwf	___fldiv@grs^0,c
  7593  002780  0E00               	movlw	0
  7594  002782  6E23               	movwf	(___fldiv@grs+1)^0,c
  7595  002784  0E00               	movlw	0
  7596  002786  6E24               	movwf	(___fldiv@grs+2)^0,c
  7597  002788  0E00               	movlw	0
  7598  00278A  6E25               	movwf	(___fldiv@grs+3)^0,c
  7599  00278C  0E00               	movlw	0
  7600  00278E  6E27               	movwf	___fldiv@aexp^0,c
  7601  002790  EF02  F014         	goto	l1361
  7602  002794                     l4741:
  7603  002794  5027               	movf	___fldiv@aexp^0,w,c
  7604  002796  B4D8               	btfsc	status,2,c
  7605  002798  EFD0  F013         	goto	u4811
  7606  00279C  EFD2  F013         	goto	u4810
  7607  0027A0                     u4811:
  7608  0027A0  EFE9  F013         	goto	l4749
  7609  0027A4                     u4810:
  7610  0027A4  90D8               	bcf	status,0,c
  7611  0027A6  361B               	rlcf	___fldiv@rem^0,f,c
  7612  0027A8  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7613  0027AA  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7614  0027AC  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7615  0027AE  90D8               	bcf	status,0,c
  7616  0027B0  360F               	rlcf	___fldiv@b^0,f,c
  7617  0027B2  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7618  0027B4  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7619  0027B6  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7620  0027B8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7621  0027BA  EFE1  F013         	goto	u4821
  7622  0027BE  EFE3  F013         	goto	u4820
  7623  0027C2                     u4821:
  7624  0027C2  EFE4  F013         	goto	l1364
  7625  0027C6                     u4820:
  7626  0027C6  800F               	bsf	___fldiv@b^0,0,c
  7627  0027C8                     l1364:
  7628  0027C8  90D8               	bcf	status,0,c
  7629  0027CA  3622               	rlcf	___fldiv@grs^0,f,c
  7630  0027CC  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7631  0027CE  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7632  0027D0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7633  0027D2                     l4749:
  7634  0027D2  5013               	movf	___fldiv@a^0,w,c
  7635  0027D4  5C1B               	subwf	___fldiv@rem^0,w,c
  7636  0027D6  5014               	movf	(___fldiv@a+1)^0,w,c
  7637  0027D8  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7638  0027DA  5015               	movf	(___fldiv@a+2)^0,w,c
  7639  0027DC  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7640  0027DE  5016               	movf	(___fldiv@a+3)^0,w,c
  7641  0027E0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7642  0027E2  A0D8               	btfss	status,0,c
  7643  0027E4  EFF6  F013         	goto	u4831
  7644  0027E8  EFF8  F013         	goto	u4830
  7645  0027EC                     u4831:
  7646  0027EC  EF01  F014         	goto	l4755
  7647  0027F0                     u4830:
  7648  0027F0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7649  0027F2  5013               	movf	___fldiv@a^0,w,c
  7650  0027F4  5E1B               	subwf	___fldiv@rem^0,f,c
  7651  0027F6  5014               	movf	(___fldiv@a+1)^0,w,c
  7652  0027F8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7653  0027FA  5015               	movf	(___fldiv@a+2)^0,w,c
  7654  0027FC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7655  0027FE  5016               	movf	(___fldiv@a+3)^0,w,c
  7656  002800  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7657  002802                     l4755:
  7658  002802  2A27               	incf	___fldiv@aexp^0,f,c
  7659  002804                     l1361:
  7660  002804  0E19               	movlw	25
  7661  002806  6427               	cpfsgt	___fldiv@aexp^0,c
  7662  002808  EF08  F014         	goto	u4841
  7663  00280C  EF0A  F014         	goto	u4840
  7664  002810                     u4841:
  7665  002810  EFCA  F013         	goto	l4741
  7666  002814                     u4840:
  7667  002814  501B               	movf	___fldiv@rem^0,w,c
  7668  002816  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7669  002818  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7670  00281A  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7671  00281C  B4D8               	btfsc	status,2,c
  7672  00281E  EF13  F014         	goto	u4851
  7673  002822  EF15  F014         	goto	u4850
  7674  002826                     u4851:
  7675  002826  EF2D  F014         	goto	l4767
  7676  00282A                     u4850:
  7677  00282A  8022               	bsf	___fldiv@grs^0,0,c
  7678  00282C  EF2D  F014         	goto	l4767
  7679  002830                     l4761:
  7680  002830  90D8               	bcf	status,0,c
  7681  002832  360F               	rlcf	___fldiv@b^0,f,c
  7682  002834  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7683  002836  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7684  002838  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7685  00283A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7686  00283C  EF22  F014         	goto	u4861
  7687  002840  EF24  F014         	goto	u4860
  7688  002844                     u4861:
  7689  002844  EF25  F014         	goto	l1370
  7690  002848                     u4860:
  7691  002848  800F               	bsf	___fldiv@b^0,0,c
  7692  00284A                     l1370:
  7693  00284A  90D8               	bcf	status,0,c
  7694  00284C  3622               	rlcf	___fldiv@grs^0,f,c
  7695  00284E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7696  002850  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7697  002852  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7698  002854  0620               	decf	___fldiv@new_exp^0,f,c
  7699  002856  A0D8               	btfss	status,0,c
  7700  002858  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7701  00285A                     l4767:
  7702  00285A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7703  00285C  EF32  F014         	goto	u4871
  7704  002860  EF34  F014         	goto	u4870
  7705  002864                     u4871:
  7706  002864  EF18  F014         	goto	l4761
  7707  002868                     u4870:
  7708  002868  0E00               	movlw	0
  7709  00286A  6E27               	movwf	___fldiv@aexp^0,c
  7710  00286C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7711  00286E  EF3B  F014         	goto	u4881
  7712  002872  EF3D  F014         	goto	u4880
  7713  002876                     u4881:
  7714  002876  EF61  F014         	goto	l1372
  7715  00287A                     u4880:
  7716  00287A  0EFF               	movlw	255
  7717  00287C  1422               	andwf	___fldiv@grs^0,w,c
  7718  00287E  6E17               	movwf	??___fldiv^0,c
  7719  002880  0EFF               	movlw	255
  7720  002882  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7721  002884  6E18               	movwf	(??___fldiv+1)^0,c
  7722  002886  0EFF               	movlw	255
  7723  002888  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7724  00288A  6E19               	movwf	(??___fldiv+2)^0,c
  7725  00288C  0E7F               	movlw	127
  7726  00288E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7727  002890  6E1A               	movwf	(??___fldiv+3)^0,c
  7728  002892  5017               	movf	??___fldiv^0,w,c
  7729  002894  1018               	iorwf	(??___fldiv+1)^0,w,c
  7730  002896  1019               	iorwf	(??___fldiv+2)^0,w,c
  7731  002898  101A               	iorwf	(??___fldiv+3)^0,w,c
  7732  00289A  B4D8               	btfsc	status,2,c
  7733  00289C  EF52  F014         	goto	u4891
  7734  0028A0  EF54  F014         	goto	u4890
  7735  0028A4                     u4891:
  7736  0028A4  EF58  F014         	goto	l1373
  7737  0028A8                     u4890:
  7738  0028A8                     l4775:
  7739  0028A8  0E01               	movlw	1
  7740  0028AA  6E27               	movwf	___fldiv@aexp^0,c
  7741  0028AC  EF61  F014         	goto	l1372
  7742  0028B0                     l1373:
  7743  0028B0  A00F               	btfss	___fldiv@b^0,0,c
  7744  0028B2  EF5D  F014         	goto	u4901
  7745  0028B6  EF5F  F014         	goto	u4900
  7746  0028BA                     u4901:
  7747  0028BA  EF61  F014         	goto	l1372
  7748  0028BE                     u4900:
  7749  0028BE  EF54  F014         	goto	l4775
  7750  0028C2                     l1372:
  7751  0028C2  5027               	movf	___fldiv@aexp^0,w,c
  7752  0028C4  B4D8               	btfsc	status,2,c
  7753  0028C6  EF67  F014         	goto	u4911
  7754  0028CA  EF69  F014         	goto	u4910
  7755  0028CE                     u4911:
  7756  0028CE  EF8D  F014         	goto	l4787
  7757  0028D2                     u4910:
  7758  0028D2  0E01               	movlw	1
  7759  0028D4  260F               	addwf	___fldiv@b^0,f,c
  7760  0028D6  0E00               	movlw	0
  7761  0028D8  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7762  0028DA  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7763  0028DC  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7764  0028DE  A012               	btfss	(___fldiv@b+3)^0,0,c
  7765  0028E0  EF74  F014         	goto	u4921
  7766  0028E4  EF76  F014         	goto	u4920
  7767  0028E8                     u4921:
  7768  0028E8  EF8D  F014         	goto	l4787
  7769  0028EC                     u4920:
  7770  0028EC  C00F  F017         	movff	___fldiv@b,??___fldiv
  7771  0028F0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7772  0028F4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7773  0028F8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7774  0028FC  341A               	rlcf	(??___fldiv+3)^0,w,c
  7775  0028FE  321A               	rrcf	(??___fldiv+3)^0,f,c
  7776  002900  3219               	rrcf	(??___fldiv+2)^0,f,c
  7777  002902  3218               	rrcf	(??___fldiv+1)^0,f,c
  7778  002904  3217               	rrcf	??___fldiv^0,f,c
  7779  002906  C017  F00F         	movff	??___fldiv,___fldiv@b
  7780  00290A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7781  00290E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7782  002912  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7783  002916  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7784  002918  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7785  00291A                     l4787:
  7786  00291A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7787  00291C  EF98  F014         	goto	u4931
  7788  002920  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7789  002922  E108               	bnz	u4930
  7790  002924  2820               	incf	___fldiv@new_exp^0,w,c
  7791  002926  A0D8               	btfss	status,0,c
  7792  002928  EF98  F014         	goto	u4931
  7793  00292C  EF9A  F014         	goto	u4930
  7794  002930                     u4931:
  7795  002930  EFA5  F014         	goto	l4791
  7796  002934                     u4930:
  7797  002934  0E00               	movlw	0
  7798  002936  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7799  002938  6820               	setf	___fldiv@new_exp^0,c
  7800  00293A  0E00               	movlw	0
  7801  00293C  6E0F               	movwf	___fldiv@b^0,c
  7802  00293E  0E00               	movlw	0
  7803  002940  6E10               	movwf	(___fldiv@b+1)^0,c
  7804  002942  0E00               	movlw	0
  7805  002944  6E11               	movwf	(___fldiv@b+2)^0,c
  7806  002946  0E00               	movlw	0
  7807  002948  6E12               	movwf	(___fldiv@b+3)^0,c
  7808  00294A                     l4791:
  7809  00294A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7810  00294C  EFB2  F014         	goto	u4940
  7811  002950  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7812  002952  E106               	bnz	u4941
  7813  002954  0420               	decf	___fldiv@new_exp^0,w,c
  7814  002956  B0D8               	btfsc	status,0,c
  7815  002958  EFB0  F014         	goto	u4941
  7816  00295C  EFB2  F014         	goto	u4940
  7817  002960                     u4941:
  7818  002960  EFC0  F014         	goto	l4795
  7819  002964                     u4940:
  7820  002964  0E00               	movlw	0
  7821  002966  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7822  002968  0E00               	movlw	0
  7823  00296A  6E20               	movwf	___fldiv@new_exp^0,c
  7824  00296C  0E00               	movlw	0
  7825  00296E  6E0F               	movwf	___fldiv@b^0,c
  7826  002970  0E00               	movlw	0
  7827  002972  6E10               	movwf	(___fldiv@b+1)^0,c
  7828  002974  0E00               	movlw	0
  7829  002976  6E11               	movwf	(___fldiv@b+2)^0,c
  7830  002978  0E00               	movlw	0
  7831  00297A  6E12               	movwf	(___fldiv@b+3)^0,c
  7832  00297C  0E00               	movlw	0
  7833  00297E  6E1F               	movwf	___fldiv@sign^0,c
  7834  002980                     l4795:
  7835  002980  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7836  002984  A026               	btfss	___fldiv@bexp^0,0,c
  7837  002986  EFC7  F014         	goto	u4951
  7838  00298A  EFC9  F014         	goto	u4950
  7839  00298E                     u4951:
  7840  00298E  EFCC  F014         	goto	l4801
  7841  002992                     u4950:
  7842  002992  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7843  002994  EFCD  F014         	goto	l4803
  7844  002998                     l4801:
  7845  002998  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7846  00299A                     l4803:
  7847  00299A  90D8               	bcf	status,0,c
  7848  00299C  3026               	rrcf	___fldiv@bexp^0,w,c
  7849  00299E  6E12               	movwf	(___fldiv@b+3)^0,c
  7850  0029A0  EF83  F013         	goto	l4717
  7851  0029A4                     l1359:
  7852  0029A4  0012               	return		;funcret
  7853  0029A6                     __end_of___fldiv:
  7854                           	callstack 0
  7855                           
  7856 ;; *************** function _LED_C *****************
  7857 ;; Defined at:
  7858 ;;		line 173 in file "color.c"
  7859 ;; Parameters:    Size  Location     Type
  7860 ;;		None
  7861 ;; Auto vars:     Size  Location     Type
  7862 ;;		None
  7863 ;; Return value:  Size  Location     Type
  7864 ;;                  1    wreg      void 
  7865 ;; Registers used:
  7866 ;;		wreg
  7867 ;; Tracked objects:
  7868 ;;		On entry : 0/0
  7869 ;;		On exit  : 0/0
  7870 ;;		Unchanged: 0/0
  7871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7874 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7875 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;Total ram usage:        2 bytes
  7877 ;; Hardware stack levels used: 1
  7878 ;; Hardware stack levels required when called: 1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		_color_data_collection
  7883 ;;		_calibrate_white
  7884 ;;		_amb_light_measure
  7885 ;;		_distance_measure
  7886 ;;		_test_function
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text31
  7891  0057CC                     __ptext31:
  7892                           	callstack 0
  7893  0057CC                     _LED_C:
  7894                           	callstack 27
  7895  0057CC                     
  7896                           ;color.c: 175:     LATGbits.LATG1 = 1;
  7897  0057CC  827F               	bsf	127,1,c	;volatile
  7898                           
  7899                           ;color.c: 176:     LATFbits.LATF7 = 1;
  7900  0057CE  8E7E               	bsf	126,7,c	;volatile
  7901                           
  7902                           ;color.c: 177:     LATAbits.LATA4 = 1;
  7903  0057D0  8879               	bsf	121,4,c	;volatile
  7904  0057D2                     
  7905                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7906  0057D2  0E05               	movlw	5
  7907  0057D4  6E02               	movwf	(??_LED_C+1)^0,c
  7908  0057D6  0E0F               	movlw	15
  7909  0057D8  6E01               	movwf	??_LED_C^0,c
  7910  0057DA  0EF1               	movlw	241
  7911  0057DC                     u5947:
  7912  0057DC  2EE8               	decfsz	wreg,f,c
  7913  0057DE  D7FE               	bra	u5947
  7914  0057E0  2E01               	decfsz	??_LED_C^0,f,c
  7915  0057E2  D7FC               	bra	u5947
  7916  0057E4  2E02               	decfsz	(??_LED_C+1)^0,f,c
  7917  0057E6  D7FA               	bra	u5947
  7918  0057E8  F000               	nop	
  7919  0057EA  0012               	return		;funcret
  7920  0057EC                     __end_of_LED_C:
  7921                           	callstack 0
  7922                           
  7923 ;; *************** function _pin_init *****************
  7924 ;; Defined at:
  7925 ;;		line 88 in file "movement.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;		None
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;		None
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  1    wreg      void 
  7932 ;; Registers used:
  7933 ;;		None
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;Total ram usage:        0 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; Hardware stack levels required when called: 1
  7946 ;; This function calls:
  7947 ;;		Nothing
  7948 ;; This function is called by:
  7949 ;;		_main
  7950 ;; This function uses a non-reentrant model
  7951 ;;
  7952                           
  7953                           	psect	text32
  7954  0057EC                     __ptext32:
  7955                           	callstack 0
  7956  0057EC                     _pin_init:
  7957                           	callstack 29
  7958  0057EC  8486               	bsf	134,2,c	;volatile
  7959                           
  7960                           ;movement.c: 90:     ANSELFbits.ANSELF2=0;
  7961  0057EE  010E               	movlb	14	; () banked
  7962  0057F0  95B4               	bcf	180,2,b	;volatile
  7963                           
  7964                           ;movement.c: 91:     TRISFbits.TRISF3=1;
  7965  0057F2  8686               	bsf	134,3,c	;volatile
  7966                           
  7967                           ;movement.c: 92:     ANSELFbits.ANSELF3=0;
  7968  0057F4  97B4               	bcf	180,3,b	;volatile
  7969                           
  7970                           ;movement.c: 97:     TRISGbits.TRISG1 = 0;
  7971  0057F6  9287               	bcf	135,1,c	;volatile
  7972                           
  7973                           ;movement.c: 98:     TRISFbits.TRISF7 = 0;
  7974  0057F8  9E86               	bcf	134,7,c	;volatile
  7975                           
  7976                           ;movement.c: 99:     TRISAbits.TRISA4 = 0;
  7977  0057FA  9881               	bcf	129,4,c	;volatile
  7978                           
  7979                           ;movement.c: 100:     LATGbits.LATG1 = 1;
  7980  0057FC  827F               	bsf	127,1,c	;volatile
  7981                           
  7982                           ;movement.c: 101:     LATFbits.LATF7 = 1;
  7983  0057FE  8E7E               	bsf	126,7,c	;volatile
  7984                           
  7985                           ;movement.c: 102:     LATAbits.LATA4 = 1;
  7986  005800  8879               	bsf	121,4,c	;volatile
  7987                           
  7988                           ;movement.c: 105:     TRISDbits.TRISD7 = 0;
  7989  005802  9E84               	bcf	132,7,c	;volatile
  7990                           
  7991                           ;movement.c: 106:     LATDbits.LATD7 = 0;
  7992  005804  9E7C               	bcf	124,7,c	;volatile
  7993                           
  7994                           ;movement.c: 107:     TRISHbits.TRISH3 = 0;
  7995  005806  9688               	bcf	136,3,c	;volatile
  7996                           
  7997                           ;movement.c: 108:     LATHbits.LATH3 = 0;
  7998  005808  9680               	bcf	128,3,c	;volatile
  7999  00580A                     
  8000                           ; BSR set to: 14
  8001  00580A  0012               	return		;funcret
  8002  00580C                     __end_of_pin_init:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _initUSART4 *****************
  8006 ;; Defined at:
  8007 ;;		line 4 in file "serial.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, status,2
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;Total ram usage:        0 bytes
  8026 ;; Hardware stack levels used: 1
  8027 ;; Hardware stack levels required when called: 1
  8028 ;; This function calls:
  8029 ;;		Nothing
  8030 ;; This function is called by:
  8031 ;;		_main
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text33
  8036  00582C                     __ptext33:
  8037                           	callstack 0
  8038  00582C                     _initUSART4:
  8039                           	callstack 29
  8040  00582C                     
  8041                           ;serial.c: 8:     RC0PPS = 0x12;
  8042  00582C  0E12               	movlw	18
  8043  00582E  010E               	movlb	14	; () banked
  8044  005830  6F62               	movwf	98,b	;volatile
  8045                           
  8046                           ;serial.c: 9:     RX4PPS = 0x11;
  8047  005832  0E11               	movlw	17
  8048  005834  6F15               	movwf	21,b	;volatile
  8049  005836                     
  8050                           ; BSR set to: 14
  8051                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8052  005836  97E9               	bcf	233,3,b	;volatile
  8053  005838                     
  8054                           ; BSR set to: 14
  8055                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8056  005838  95E8               	bcf	232,2,b	;volatile
  8057                           
  8058                           ;serial.c: 13:     SP4BRGL = 51;
  8059  00583A  0E33               	movlw	51
  8060  00583C  6FE5               	movwf	229,b	;volatile
  8061                           
  8062                           ;serial.c: 15:     SP4BRGH = 0;
  8063  00583E  0E00               	movlw	0
  8064  005840  6FE6               	movwf	230,b	;volatile
  8065  005842                     
  8066                           ; BSR set to: 14
  8067                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8068  005842  89E7               	bsf	231,4,b	;volatile
  8069  005844                     
  8070                           ; BSR set to: 14
  8071                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8072  005844  8BE8               	bsf	232,5,b	;volatile
  8073  005846                     
  8074                           ; BSR set to: 14
  8075                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8076  005846  8FE7               	bsf	231,7,b	;volatile
  8077  005848                     
  8078                           ; BSR set to: 14
  8079  005848  0012               	return		;funcret
  8080  00584A                     __end_of_initUSART4:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function _initDCmotors_parameter *****************
  8084 ;; Defined at:
  8085 ;;		line 40 in file "dc_motor.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8088 ;;		 -> main@motorL(10), 
  8089 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8090 ;;		 -> main@motorR(10), 
  8091 ;; Auto vars:     Size  Location     Type
  8092 ;;		None
  8093 ;; Return value:  Size  Location     Type
  8094 ;;                  1    wreg      void 
  8095 ;; Registers used:
  8096 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8097 ;; Tracked objects:
  8098 ;;		On entry : 0/0
  8099 ;;		On exit  : 0/0
  8100 ;;		Unchanged: 0/0
  8101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8105 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;Total ram usage:        4 bytes
  8107 ;; Hardware stack levels used: 1
  8108 ;; Hardware stack levels required when called: 1
  8109 ;; This function calls:
  8110 ;;		Nothing
  8111 ;; This function is called by:
  8112 ;;		_main
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           	psect	text34
  8117  0049FE                     __ptext34:
  8118                           	callstack 0
  8119  0049FE                     _initDCmotors_parameter:
  8120                           	callstack 29
  8121  0049FE                     
  8122                           ;dc_motor.c: 42:     motorL->power = 0;
  8123  0049FE  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8124  004A02  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8125  004A06  0E00               	movlw	0
  8126  004A08  6EDF               	movwf	indf2,c
  8127  004A0A                     
  8128                           ;dc_motor.c: 43:     motorL->direction = 1;
  8129  004A0A  EE20 F001          	lfsr	2,1
  8130  004A0E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8131  004A10  26D9               	addwf	fsr2l,f,c
  8132  004A12  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8133  004A14  22DA               	addwfc	fsr2h,f,c
  8134  004A16  0E01               	movlw	1
  8135  004A18  6EDF               	movwf	indf2,c
  8136  004A1A                     
  8137                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8138  004A1A  EE20 F002          	lfsr	2,2
  8139  004A1E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8140  004A20  26D9               	addwf	fsr2l,f,c
  8141  004A22  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8142  004A24  22DA               	addwfc	fsr2h,f,c
  8143  004A26  0EA3               	movlw	163
  8144  004A28  6EDE               	movwf	postinc2,c
  8145  004A2A  0E0F               	movlw	15
  8146  004A2C  6EDD               	movwf	postdec2,c
  8147  004A2E                     
  8148                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8149  004A2E  EE20 F004          	lfsr	2,4
  8150  004A32  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8151  004A34  26D9               	addwf	fsr2l,f,c
  8152  004A36  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8153  004A38  22DA               	addwfc	fsr2h,f,c
  8154  004A3A  0E7D               	movlw	125
  8155  004A3C  6EDE               	movwf	postinc2,c
  8156  004A3E  0E0F               	movlw	15
  8157  004A40  6EDD               	movwf	postdec2,c
  8158  004A42                     
  8159                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8160  004A42  EE20 F006          	lfsr	2,6
  8161  004A46  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8162  004A48  26D9               	addwf	fsr2l,f,c
  8163  004A4A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8164  004A4C  22DA               	addwfc	fsr2h,f,c
  8165  004A4E  0E04               	movlw	4
  8166  004A50  6EDF               	movwf	indf2,c
  8167  004A52                     
  8168                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8169  004A52  EE20 F007          	lfsr	2,7
  8170  004A56  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8171  004A58  26D9               	addwf	fsr2l,f,c
  8172  004A5A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8173  004A5C  22DA               	addwfc	fsr2h,f,c
  8174  004A5E  0EC7               	movlw	199
  8175  004A60  6EDE               	movwf	postinc2,c
  8176  004A62  0E00               	movlw	0
  8177  004A64  6EDD               	movwf	postdec2,c
  8178  004A66                     
  8179                           ;dc_motor.c: 50:     motorR->power = 0;
  8180  004A66  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8181  004A6A  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8182  004A6E  0E00               	movlw	0
  8183  004A70  6EDF               	movwf	indf2,c
  8184                           
  8185                           ;dc_motor.c: 51:     motorR->direction = 1;
  8186  004A72  EE20 F001          	lfsr	2,1
  8187  004A76  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8188  004A78  26D9               	addwf	fsr2l,f,c
  8189  004A7A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8190  004A7C  22DA               	addwfc	fsr2h,f,c
  8191  004A7E  0E01               	movlw	1
  8192  004A80  6EDF               	movwf	indf2,c
  8193                           
  8194                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8195  004A82  EE20 F002          	lfsr	2,2
  8196  004A86  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8197  004A88  26D9               	addwf	fsr2l,f,c
  8198  004A8A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8199  004A8C  22DA               	addwfc	fsr2h,f,c
  8200  004A8E  0EA0               	movlw	160
  8201  004A90  6EDE               	movwf	postinc2,c
  8202  004A92  0E0F               	movlw	15
  8203  004A94  6EDD               	movwf	postdec2,c
  8204                           
  8205                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8206  004A96  EE20 F004          	lfsr	2,4
  8207  004A9A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8208  004A9C  26D9               	addwf	fsr2l,f,c
  8209  004A9E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8210  004AA0  22DA               	addwfc	fsr2h,f,c
  8211  004AA2  0E7F               	movlw	127
  8212  004AA4  6EDE               	movwf	postinc2,c
  8213  004AA6  0E0F               	movlw	15
  8214  004AA8  6EDD               	movwf	postdec2,c
  8215                           
  8216                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8217  004AAA  EE20 F006          	lfsr	2,6
  8218  004AAE  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8219  004AB0  26D9               	addwf	fsr2l,f,c
  8220  004AB2  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8221  004AB4  22DA               	addwfc	fsr2h,f,c
  8222  004AB6  0E06               	movlw	6
  8223  004AB8  6EDF               	movwf	indf2,c
  8224                           
  8225                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8226  004ABA  EE20 F007          	lfsr	2,7
  8227  004ABE  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8228  004AC0  26D9               	addwf	fsr2l,f,c
  8229  004AC2  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8230  004AC4  22DA               	addwfc	fsr2h,f,c
  8231  004AC6  0EC7               	movlw	199
  8232  004AC8  6EDE               	movwf	postinc2,c
  8233  004ACA  0E00               	movlw	0
  8234  004ACC  6EDD               	movwf	postdec2,c
  8235  004ACE  0012               	return		;funcret
  8236  004AD0                     __end_of_initDCmotors_parameter:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _initDCmotorsPWM *****************
  8240 ;; Defined at:
  8241 ;;		line 10 in file "dc_motor.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  PWMperiod       2    0[COMRAM] int 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;		None
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;Total ram usage:        2 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; Hardware stack levels required when called: 1
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_main
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text35
  8270  00545A                     __ptext35:
  8271                           	callstack 0
  8272  00545A                     _initDCmotorsPWM:
  8273                           	callstack 29
  8274  00545A                     
  8275                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8276  00545A  9485               	bcf	133,2,c	;volatile
  8277                           
  8278                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8279  00545C  9E83               	bcf	131,7,c	;volatile
  8280                           
  8281                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8282  00545E  9C87               	bcf	135,6,c	;volatile
  8283                           
  8284                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8285  005460  9885               	bcf	133,4,c	;volatile
  8286                           
  8287                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8288  005462  947D               	bcf	125,2,c	;volatile
  8289                           
  8290                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8291  005464  9E7B               	bcf	123,7,c	;volatile
  8292                           
  8293                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8294  005466  9C7F               	bcf	127,6,c	;volatile
  8295                           
  8296                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8297  005468  987D               	bcf	125,4,c	;volatile
  8298  00546A                     
  8299                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8300  00546A  50BD               	movf	189,w,c	;volatile
  8301  00546C  0B8F               	andlw	-113
  8302  00546E  0930               	iorlw	48
  8303  005470  6EBD               	movwf	189,c	;volatile
  8304                           
  8305                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8306  005472  0EE0               	movlw	-32
  8307  005474  16BE               	andwf	190,f,c	;volatile
  8308                           
  8309                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8310  005476  50BF               	movf	191,w,c	;volatile
  8311  005478  0BF0               	andlw	-16
  8312  00547A  0901               	iorlw	1
  8313  00547C  6EBF               	movwf	191,c	;volatile
  8314                           
  8315                           ;dc_motor.c: 28:     T2PR=200-1;
  8316  00547E  0EC7               	movlw	199
  8317  005480  6EBC               	movwf	188,c	;volatile
  8318  005482                     
  8319                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8320  005482  8EBD               	bsf	189,7,c	;volatile
  8321                           
  8322                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8323  005484  0E0A               	movlw	10
  8324  005486  010E               	movlb	14	; () banked
  8325  005488  6F74               	movwf	116,b	;volatile
  8326                           
  8327                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8328  00548A  0E0B               	movlw	11
  8329  00548C  6F69               	movwf	105,b	;volatile
  8330                           
  8331                           ;dc_motor.c: 34:     PWM6DCH=0;
  8332  00548E  0E00               	movlw	0
  8333  005490  6EA3               	movwf	163,c	;volatile
  8334                           
  8335                           ;dc_motor.c: 35:     PWM7DCH=0;
  8336  005492  0E00               	movlw	0
  8337  005494  6EA0               	movwf	160,c	;volatile
  8338  005496                     
  8339                           ; BSR set to: 14
  8340                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8341  005496  8EA4               	bsf	164,7,c	;volatile
  8342  005498                     
  8343                           ; BSR set to: 14
  8344                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8345  005498  8EA1               	bsf	161,7,c	;volatile
  8346  00549A                     
  8347                           ; BSR set to: 14
  8348  00549A  0012               	return		;funcret
  8349  00549C                     __end_of_initDCmotorsPWM:
  8350                           	callstack 0
  8351                           
  8352 ;; *************** function _color_click_init *****************
  8353 ;; Defined at:
  8354 ;;		line 67 in file "color.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;Total ram usage:        1 bytes
  8373 ;; Hardware stack levels used: 1
  8374 ;; Hardware stack levels required when called: 4
  8375 ;; This function calls:
  8376 ;;		_I2C_2_Master_Init
  8377 ;;		_color_writetoaddr
  8378 ;; This function is called by:
  8379 ;;		_main
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text36
  8384  005642                     __ptext36:
  8385                           	callstack 0
  8386  005642                     _color_click_init:
  8387                           	callstack 26
  8388  005642                     
  8389                           ;color.c: 70:     I2C_2_Master_Init();
  8390  005642  EC6A  F02B         	call	_I2C_2_Master_Init	;wreg free
  8391  005646                     
  8392                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8393  005646  0E01               	movlw	1
  8394  005648  6E03               	movwf	color_writetoaddr@value^0,c
  8395  00564A  0E00               	movlw	0
  8396  00564C  EC06  F02C         	call	_color_writetoaddr
  8397  005650                     
  8398                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8399  005650  0E3F               	movlw	63
  8400  005652  6E05               	movwf	??_color_click_init^0,c
  8401  005654  0E55               	movlw	85
  8402  005656                     u5957:
  8403  005656  2EE8               	decfsz	wreg,f,c
  8404  005658  D7FE               	bra	u5957
  8405  00565A  2E05               	decfsz	??_color_click_init^0,f,c
  8406  00565C  D7FC               	bra	u5957
  8407  00565E  F000               	nop	
  8408  005660                     
  8409                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8410  005660  0E03               	movlw	3
  8411  005662  6E03               	movwf	color_writetoaddr@value^0,c
  8412  005664  0E00               	movlw	0
  8413  005666  EC06  F02C         	call	_color_writetoaddr
  8414  00566A                     
  8415                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8416  00566A  0ED5               	movlw	213
  8417  00566C  6E03               	movwf	color_writetoaddr@value^0,c
  8418  00566E  0E01               	movlw	1
  8419  005670  EC06  F02C         	call	_color_writetoaddr
  8420  005674  0012               	return		;funcret
  8421  005676                     __end_of_color_click_init:
  8422                           	callstack 0
  8423                           
  8424 ;; *************** function _color_writetoaddr *****************
  8425 ;; Defined at:
  8426 ;;		line 83 in file "color.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  address         1    wreg     unsigned char 
  8429 ;;  value           1    2[COMRAM] unsigned char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  address         1    3[COMRAM] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;Total ram usage:        2 bytes
  8446 ;; Hardware stack levels used: 1
  8447 ;; Hardware stack levels required when called: 3
  8448 ;; This function calls:
  8449 ;;		_I2C_2_Master_Start
  8450 ;;		_I2C_2_Master_Stop
  8451 ;;		_I2C_2_Master_Write
  8452 ;; This function is called by:
  8453 ;;		_color_click_init
  8454 ;; This function uses a non-reentrant model
  8455 ;;
  8456                           
  8457                           	psect	text37
  8458  00580C                     __ptext37:
  8459                           	callstack 0
  8460  00580C                     _color_writetoaddr:
  8461                           	callstack 26
  8462                           
  8463                           ;incstack = 0
  8464                           ;color_writetoaddr@address stored from wreg
  8465  00580C  6E04               	movwf	color_writetoaddr@address^0,c
  8466  00580E                     
  8467                           ;color.c: 84:     I2C_2_Master_Start();
  8468  00580E  EC61  F02C         	call	_I2C_2_Master_Start	;wreg free
  8469                           
  8470                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8471  005812  0E52               	movlw	82
  8472  005814  EC4B  F02C         	call	_I2C_2_Master_Write
  8473                           
  8474                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8475  005818  5004               	movf	color_writetoaddr@address^0,w,c
  8476  00581A  0980               	iorlw	128
  8477  00581C  EC4B  F02C         	call	_I2C_2_Master_Write
  8478                           
  8479                           ;color.c: 87:     I2C_2_Master_Write(value);
  8480  005820  5003               	movf	color_writetoaddr@value^0,w,c
  8481  005822  EC4B  F02C         	call	_I2C_2_Master_Write
  8482                           
  8483                           ;color.c: 88:     I2C_2_Master_Stop();
  8484  005826  EC5C  F02C         	call	_I2C_2_Master_Stop	;wreg free
  8485  00582A  0012               	return		;funcret
  8486  00582C                     __end_of_color_writetoaddr:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _I2C_2_Master_Write *****************
  8490 ;; Defined at:
  8491 ;;		line 45 in file "i2c.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  data_byte       1    wreg     unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;  data_byte       1    1[COMRAM] unsigned char 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  1    wreg      void 
  8498 ;; Registers used:
  8499 ;;		wreg, status,2, status,0, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;Total ram usage:        1 bytes
  8510 ;; Hardware stack levels used: 1
  8511 ;; Hardware stack levels required when called: 2
  8512 ;; This function calls:
  8513 ;;		_I2C_2_Master_Idle
  8514 ;; This function is called by:
  8515 ;;		_color_writetoaddr
  8516 ;;		_color_read_Red
  8517 ;;		_color_read_Blue
  8518 ;;		_color_read_Green
  8519 ;;		_color_read_Clear
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text38
  8524  005896                     __ptext38:
  8525                           	callstack 0
  8526  005896                     _I2C_2_Master_Write:
  8527                           	callstack 24
  8528                           
  8529                           ;incstack = 0
  8530                           ;I2C_2_Master_Write@data_byte stored from wreg
  8531  005896  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8532  005898                     
  8533                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8534  005898  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8535  00589C                     
  8536                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8537  00589C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8538  0058A0  0012               	return		;funcret
  8539  0058A2                     __end_of_I2C_2_Master_Write:
  8540                           	callstack 0
  8541                           
  8542 ;; *************** function _I2C_2_Master_Stop *****************
  8543 ;; Defined at:
  8544 ;;		line 39 in file "i2c.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;		None
  8547 ;; Auto vars:     Size  Location     Type
  8548 ;;		None
  8549 ;; Return value:  Size  Location     Type
  8550 ;;                  1    wreg      void 
  8551 ;; Registers used:
  8552 ;;		wreg, status,2, status,0, cstack
  8553 ;; Tracked objects:
  8554 ;;		On entry : 0/0
  8555 ;;		On exit  : 0/0
  8556 ;;		Unchanged: 0/0
  8557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;Total ram usage:        0 bytes
  8563 ;; Hardware stack levels used: 1
  8564 ;; Hardware stack levels required when called: 2
  8565 ;; This function calls:
  8566 ;;		_I2C_2_Master_Idle
  8567 ;; This function is called by:
  8568 ;;		_color_writetoaddr
  8569 ;;		_color_read_Red
  8570 ;;		_color_read_Blue
  8571 ;;		_color_read_Green
  8572 ;;		_color_read_Clear
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text39
  8577  0058B8                     __ptext39:
  8578                           	callstack 0
  8579  0058B8                     _I2C_2_Master_Stop:
  8580                           	callstack 24
  8581  0058B8                     
  8582                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8583  0058B8  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8584  0058BC                     
  8585                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8586  0058BC  010E               	movlb	14	; () banked
  8587  0058BE  85DA               	bsf	218,2,b	;volatile
  8588  0058C0                     
  8589                           ; BSR set to: 14
  8590  0058C0  0012               	return		;funcret
  8591  0058C2                     __end_of_I2C_2_Master_Stop:
  8592                           	callstack 0
  8593                           
  8594 ;; *************** function _I2C_2_Master_Start *****************
  8595 ;; Defined at:
  8596 ;;		line 27 in file "i2c.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;		None
  8599 ;; Auto vars:     Size  Location     Type
  8600 ;;		None
  8601 ;; Return value:  Size  Location     Type
  8602 ;;                  1    wreg      void 
  8603 ;; Registers used:
  8604 ;;		wreg, status,2, status,0, cstack
  8605 ;; Tracked objects:
  8606 ;;		On entry : 0/0
  8607 ;;		On exit  : 0/0
  8608 ;;		Unchanged: 0/0
  8609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8614 ;;Total ram usage:        0 bytes
  8615 ;; Hardware stack levels used: 1
  8616 ;; Hardware stack levels required when called: 2
  8617 ;; This function calls:
  8618 ;;		_I2C_2_Master_Idle
  8619 ;; This function is called by:
  8620 ;;		_color_writetoaddr
  8621 ;;		_color_read_Red
  8622 ;;		_color_read_Blue
  8623 ;;		_color_read_Green
  8624 ;;		_color_read_Clear
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           	psect	text40
  8629  0058C2                     __ptext40:
  8630                           	callstack 0
  8631  0058C2                     _I2C_2_Master_Start:
  8632                           	callstack 24
  8633  0058C2                     
  8634                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8635  0058C2  EC7F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  8636  0058C6                     
  8637                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8638  0058C6  010E               	movlb	14	; () banked
  8639  0058C8  81DA               	bsf	218,0,b	;volatile
  8640  0058CA                     
  8641                           ; BSR set to: 14
  8642  0058CA  0012               	return		;funcret
  8643  0058CC                     __end_of_I2C_2_Master_Start:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function _I2C_2_Master_Idle *****************
  8647 ;; Defined at:
  8648 ;;		line 22 in file "i2c.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;		None
  8653 ;; Return value:  Size  Location     Type
  8654 ;;                  1    wreg      void 
  8655 ;; Registers used:
  8656 ;;		wreg, status,2, status,0
  8657 ;; Tracked objects:
  8658 ;;		On entry : 0/0
  8659 ;;		On exit  : 0/0
  8660 ;;		Unchanged: 0/0
  8661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8666 ;;Total ram usage:        1 bytes
  8667 ;; Hardware stack levels used: 1
  8668 ;; Hardware stack levels required when called: 1
  8669 ;; This function calls:
  8670 ;;		Nothing
  8671 ;; This function is called by:
  8672 ;;		_I2C_2_Master_Start
  8673 ;;		_I2C_2_Master_RepStart
  8674 ;;		_I2C_2_Master_Stop
  8675 ;;		_I2C_2_Master_Write
  8676 ;;		_I2C_2_Master_Read
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           
  8680                           	psect	text41
  8681  0056FE                     __ptext41:
  8682                           	callstack 0
  8683  0056FE                     _I2C_2_Master_Idle:
  8684                           	callstack 24
  8685  0056FE                     l211:
  8686  0056FE  010E               	movlb	14	; () banked
  8687  005700  B5D8               	btfsc	216,2,b	;volatile
  8688  005702  EF85  F02B         	goto	u3301
  8689  005706  EF87  F02B         	goto	u3300
  8690  00570A                     u3301:
  8691  00570A  EF7F  F02B         	goto	l211
  8692  00570E                     u3300:
  8693  00570E                     
  8694                           ; BSR set to: 14
  8695  00570E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8696  005712  0E1F               	movlw	31
  8697  005714  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8698  005716  A4D8               	btfss	status,2,c
  8699  005718  EF90  F02B         	goto	u3311
  8700  00571C  EF92  F02B         	goto	u3310
  8701  005720                     u3311:
  8702  005720  EF7F  F02B         	goto	l211
  8703  005724                     u3310:
  8704  005724                     
  8705                           ; BSR set to: 14
  8706  005724  0012               	return		;funcret
  8707  005726                     __end_of_I2C_2_Master_Idle:
  8708                           	callstack 0
  8709                           
  8710 ;; *************** function _I2C_2_Master_Init *****************
  8711 ;; Defined at:
  8712 ;;		line 4 in file "i2c.c"
  8713 ;; Parameters:    Size  Location     Type
  8714 ;;		None
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, status,2
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;Total ram usage:        0 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 1
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_color_click_init
  8737 ;;		_main
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text42
  8742  0056D4                     __ptext42:
  8743                           	callstack 0
  8744  0056D4                     _I2C_2_Master_Init:
  8745                           	callstack 28
  8746  0056D4                     
  8747                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8748  0056D4  010E               	movlb	14	; () banked
  8749  0056D6  51D9               	movf	217,w,b	;volatile
  8750  0056D8  0BF0               	andlw	-16
  8751  0056DA  0908               	iorlw	8
  8752  0056DC  6FD9               	movwf	217,b	;volatile
  8753  0056DE                     
  8754                           ; BSR set to: 14
  8755                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8756  0056DE  8BD9               	bsf	217,5,b	;volatile
  8757                           
  8758                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8759  0056E0  0E9F               	movlw	159
  8760  0056E2  6FD6               	movwf	214,b	;volatile
  8761  0056E4                     
  8762                           ; BSR set to: 14
  8763                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8764  0056E4  8A84               	bsf	132,5,c	;volatile
  8765  0056E6                     
  8766                           ; BSR set to: 14
  8767                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8768  0056E6  8C84               	bsf	132,6,c	;volatile
  8769  0056E8                     
  8770                           ; BSR set to: 14
  8771                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8772  0056E8  9BA7               	bcf	167,5,b	;volatile
  8773  0056EA                     
  8774                           ; BSR set to: 14
  8775                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8776  0056EA  9DA7               	bcf	167,6,b	;volatile
  8777                           
  8778                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8779  0056EC  0E1D               	movlw	29
  8780  0056EE  6F1D               	movwf	29,b	;volatile
  8781                           
  8782                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8783  0056F0  0E1E               	movlw	30
  8784  0056F2  6F1C               	movwf	28,b	;volatile
  8785                           
  8786                           ;i2c.c: 18:   RD5PPS=0x1C;
  8787  0056F4  0E1C               	movlw	28
  8788  0056F6  6F6F               	movwf	111,b	;volatile
  8789                           
  8790                           ;i2c.c: 19:   RD6PPS=0x1B;
  8791  0056F8  0E1B               	movlw	27
  8792  0056FA  6F70               	movwf	112,b	;volatile
  8793  0056FC                     
  8794                           ; BSR set to: 14
  8795  0056FC  0012               	return		;funcret
  8796  0056FE                     __end_of_I2C_2_Master_Init:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _buggylight_init *****************
  8800 ;; Defined at:
  8801 ;;		line 13 in file "color.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		None
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used: 1
  8821 ;; Hardware stack levels required when called: 1
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		_main
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	text43
  8830  005880                     __ptext43:
  8831                           	callstack 0
  8832  005880                     _buggylight_init:
  8833                           	callstack 29
  8834  005880                     
  8835                           ;color.c: 15:     TRISHbits.TRISH1=0;
  8836  005880  9288               	bcf	136,1,c	;volatile
  8837                           
  8838                           ;color.c: 16:     TRISDbits.TRISD4=0;
  8839  005882  9884               	bcf	132,4,c	;volatile
  8840                           
  8841                           ;color.c: 17:     TRISDbits.TRISD3=0;
  8842  005884  9684               	bcf	132,3,c	;volatile
  8843                           
  8844                           ;color.c: 18:     TRISFbits.TRISF0=0;
  8845  005886  9086               	bcf	134,0,c	;volatile
  8846                           
  8847                           ;color.c: 19:     TRISHbits.TRISH0=0;
  8848  005888  9088               	bcf	136,0,c	;volatile
  8849                           
  8850                           ;color.c: 21:     LATHbits.LATH1 = 0;
  8851  00588A  9280               	bcf	128,1,c	;volatile
  8852                           
  8853                           ;color.c: 22:     LATDbits.LATD4 = 0;
  8854  00588C  987C               	bcf	124,4,c	;volatile
  8855                           
  8856                           ;color.c: 23:     LATDbits.LATD3 = 0;
  8857  00588E  967C               	bcf	124,3,c	;volatile
  8858                           
  8859                           ;color.c: 24:     LATFbits.LATF0 = 0;
  8860  005890  907E               	bcf	126,0,c	;volatile
  8861                           
  8862                           ;color.c: 25:     LATHbits.LATH0 = 0;
  8863  005892  9080               	bcf	128,0,c	;volatile
  8864  005894  0012               	return		;funcret
  8865  005896                     __end_of_buggylight_init:
  8866                           	callstack 0
  8867                           
  8868 ;; *************** function _action *****************
  8869 ;; Defined at:
  8870 ;;		line 18 in file "movement.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  color           1    wreg     unsigned char 
  8873 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  8874 ;;		 -> main@motorL(10), 
  8875 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  8876 ;;		 -> main@motorR(10), 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  color           1   93[COMRAM] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8888 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;Total ram usage:        5 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; Hardware stack levels required when called: 11
  8895 ;; This function calls:
  8896 ;;		_goback
  8897 ;;		_reverse_square
  8898 ;;		_short_reverse
  8899 ;;		_toggle_light
  8900 ;;		_turnLeft
  8901 ;;		_turnRight
  8902 ;; This function is called by:
  8903 ;;		_main
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           	psect	text44
  8908  002F5E                     __ptext44:
  8909                           	callstack 0
  8910  002F5E                     _action:
  8911                           	callstack 19
  8912                           
  8913                           ;incstack = 0
  8914                           ;action@color stored from wreg
  8915  002F5E  6E5E               	movwf	action@color^0,c
  8916  002F60                     
  8917                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 22:     if (color != 0){
  8918  002F60  505E               	movf	action@color^0,w,c
  8919  002F62  B4D8               	btfsc	status,2,c
  8920  002F64  EFB6  F017         	goto	u5461
  8921  002F68  EFB8  F017         	goto	u5460
  8922  002F6C                     u5461:
  8923  002F6C  EF14  F019         	goto	l630
  8924  002F70                     u5460:
  8925  002F70                     
  8926                           ;movement.c: 25:         if (color == 1){
  8927  002F70  045E               	decf	action@color^0,w,c
  8928  002F72  A4D8               	btfss	status,2,c
  8929  002F74  EFBE  F017         	goto	u5471
  8930  002F78  EFC0  F017         	goto	u5470
  8931  002F7C                     u5471:
  8932  002F7C  EFE4  F017         	goto	l5397
  8933  002F80                     u5470:
  8934  002F80                     
  8935                           ;movement.c: 26:             short_reverse(mL,mR);
  8936  002F80  C0E0  F026         	movff	action@mL,short_reverse@mL
  8937  002F84  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  8938  002F88  C0E2  F028         	movff	action@mR,short_reverse@mR
  8939  002F8C  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  8940  002F90  EC4E  F02A         	call	_short_reverse	;wreg free
  8941                           
  8942                           ;movement.c: 27:             turnRight(mL,mR,90);
  8943  002F94  C0E0  F020         	movff	action@mL,turnRight@mL
  8944  002F98  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  8945  002F9C  C0E2  F022         	movff	action@mR,turnRight@mR
  8946  002FA0  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  8947  002FA4  0E5A               	movlw	90
  8948  002FA6  6E24               	movwf	turnRight@angle_right^0,c
  8949  002FA8  EC33  F021         	call	_turnRight	;wreg free
  8950  002FAC                     
  8951                           ;movement.c: 28:             memory[array_index] = 1;
  8952  002FAC  0101               	movlb	1	; () banked
  8953  002FAE  519D               	movf	_array_index& (0+255),w,b
  8954  002FB0  0D02               	mullw	2
  8955  002FB2  0E3C               	movlw	low _memory
  8956  002FB4  24F3               	addwf	243,w,c
  8957  002FB6  6ED9               	movwf	fsr2l,c
  8958  002FB8  0E01               	movlw	high _memory
  8959  002FBA  20F4               	addwfc	prodh,w,c
  8960  002FBC  6EDA               	movwf	fsr2h,c
  8961  002FBE  0E01               	movlw	1
  8962  002FC0  6EDE               	movwf	postinc2,c
  8963  002FC2  0E00               	movlw	0
  8964  002FC4  6EDD               	movwf	postdec2,c
  8965  002FC6                     
  8966                           ; BSR set to: 1
  8967                           ;movement.c: 29:             array_index++;
  8968  002FC6  2B9D               	incf	_array_index& (0+255),f,b
  8969  002FC8                     l5397:
  8970                           
  8971                           ;movement.c: 31:         if (color == 2){
  8972  002FC8  0E02               	movlw	2
  8973  002FCA  185E               	xorwf	action@color^0,w,c
  8974  002FCC  A4D8               	btfss	status,2,c
  8975  002FCE  EFEB  F017         	goto	u5481
  8976  002FD2  EFED  F017         	goto	u5480
  8977  002FD6                     u5481:
  8978  002FD6  EF11  F018         	goto	l5405
  8979  002FDA                     u5480:
  8980  002FDA                     
  8981                           ;movement.c: 32:             short_reverse(mL,mR);
  8982  002FDA  C0E0  F026         	movff	action@mL,short_reverse@mL
  8983  002FDE  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  8984  002FE2  C0E2  F028         	movff	action@mR,short_reverse@mR
  8985  002FE6  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  8986  002FEA  EC4E  F02A         	call	_short_reverse	;wreg free
  8987                           
  8988                           ;movement.c: 33:             turnLeft(mL,mR,90);
  8989  002FEE  C0E0  F020         	movff	action@mL,turnLeft@mL
  8990  002FF2  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  8991  002FF6  C0E2  F022         	movff	action@mR,turnLeft@mR
  8992  002FFA  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  8993  002FFE  0E5A               	movlw	90
  8994  003000  6E24               	movwf	turnLeft@angle_left^0,c
  8995  003002  ECF3  F021         	call	_turnLeft	;wreg free
  8996  003006                     
  8997                           ;movement.c: 34:             memory[array_index] = 2;
  8998  003006  0101               	movlb	1	; () banked
  8999  003008  519D               	movf	_array_index& (0+255),w,b
  9000  00300A  0D02               	mullw	2
  9001  00300C  0E3C               	movlw	low _memory
  9002  00300E  24F3               	addwf	243,w,c
  9003  003010  6ED9               	movwf	fsr2l,c
  9004  003012  0E01               	movlw	high _memory
  9005  003014  20F4               	addwfc	prodh,w,c
  9006  003016  6EDA               	movwf	fsr2h,c
  9007  003018  0E02               	movlw	2
  9008  00301A  6EDE               	movwf	postinc2,c
  9009  00301C  0E00               	movlw	0
  9010  00301E  6EDD               	movwf	postdec2,c
  9011  003020                     
  9012                           ; BSR set to: 1
  9013                           ;movement.c: 35:             array_index++;
  9014  003020  2B9D               	incf	_array_index& (0+255),f,b
  9015  003022                     l5405:
  9016                           
  9017                           ;movement.c: 37:         if (color == 3){
  9018  003022  0E03               	movlw	3
  9019  003024  185E               	xorwf	action@color^0,w,c
  9020  003026  A4D8               	btfss	status,2,c
  9021  003028  EF18  F018         	goto	u5491
  9022  00302C  EF1A  F018         	goto	u5490
  9023  003030                     u5491:
  9024  003030  EF3E  F018         	goto	l5413
  9025  003034                     u5490:
  9026  003034                     
  9027                           ;movement.c: 38:             short_reverse(mL,mR);
  9028  003034  C0E0  F026         	movff	action@mL,short_reverse@mL
  9029  003038  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9030  00303C  C0E2  F028         	movff	action@mR,short_reverse@mR
  9031  003040  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9032  003044  EC4E  F02A         	call	_short_reverse	;wreg free
  9033                           
  9034                           ;movement.c: 39:             turnLeft(mL,mR,180);
  9035  003048  C0E0  F020         	movff	action@mL,turnLeft@mL
  9036  00304C  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9037  003050  C0E2  F022         	movff	action@mR,turnLeft@mR
  9038  003054  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9039  003058  0EB4               	movlw	180
  9040  00305A  6E24               	movwf	turnLeft@angle_left^0,c
  9041  00305C  ECF3  F021         	call	_turnLeft	;wreg free
  9042  003060                     
  9043                           ;movement.c: 40:             memory[array_index] = 3;
  9044  003060  0101               	movlb	1	; () banked
  9045  003062  519D               	movf	_array_index& (0+255),w,b
  9046  003064  0D02               	mullw	2
  9047  003066  0E3C               	movlw	low _memory
  9048  003068  24F3               	addwf	243,w,c
  9049  00306A  6ED9               	movwf	fsr2l,c
  9050  00306C  0E01               	movlw	high _memory
  9051  00306E  20F4               	addwfc	prodh,w,c
  9052  003070  6EDA               	movwf	fsr2h,c
  9053  003072  0E03               	movlw	3
  9054  003074  6EDE               	movwf	postinc2,c
  9055  003076  0E00               	movlw	0
  9056  003078  6EDD               	movwf	postdec2,c
  9057  00307A                     
  9058                           ; BSR set to: 1
  9059                           ;movement.c: 41:             array_index++;
  9060  00307A  2B9D               	incf	_array_index& (0+255),f,b
  9061  00307C                     l5413:
  9062                           
  9063                           ;movement.c: 43:         if (color == 4){
  9064  00307C  0E04               	movlw	4
  9065  00307E  185E               	xorwf	action@color^0,w,c
  9066  003080  A4D8               	btfss	status,2,c
  9067  003082  EF45  F018         	goto	u5501
  9068  003086  EF47  F018         	goto	u5500
  9069  00308A                     u5501:
  9070  00308A  EF6B  F018         	goto	l5421
  9071  00308E                     u5500:
  9072  00308E                     
  9073                           ;movement.c: 44:             reverse_square(mL,mR);
  9074  00308E  C0E0  F026         	movff	action@mL,reverse_square@mL
  9075  003092  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9076  003096  C0E2  F028         	movff	action@mR,reverse_square@mR
  9077  00309A  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9078  00309E  EC6F  F02A         	call	_reverse_square	;wreg free
  9079                           
  9080                           ;movement.c: 45:             turnRight(mL,mR,90);
  9081  0030A2  C0E0  F020         	movff	action@mL,turnRight@mL
  9082  0030A6  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9083  0030AA  C0E2  F022         	movff	action@mR,turnRight@mR
  9084  0030AE  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9085  0030B2  0E5A               	movlw	90
  9086  0030B4  6E24               	movwf	turnRight@angle_right^0,c
  9087  0030B6  EC33  F021         	call	_turnRight	;wreg free
  9088  0030BA                     
  9089                           ;movement.c: 46:             memory[array_index] = 4;
  9090  0030BA  0101               	movlb	1	; () banked
  9091  0030BC  519D               	movf	_array_index& (0+255),w,b
  9092  0030BE  0D02               	mullw	2
  9093  0030C0  0E3C               	movlw	low _memory
  9094  0030C2  24F3               	addwf	243,w,c
  9095  0030C4  6ED9               	movwf	fsr2l,c
  9096  0030C6  0E01               	movlw	high _memory
  9097  0030C8  20F4               	addwfc	prodh,w,c
  9098  0030CA  6EDA               	movwf	fsr2h,c
  9099  0030CC  0E04               	movlw	4
  9100  0030CE  6EDE               	movwf	postinc2,c
  9101  0030D0  0E00               	movlw	0
  9102  0030D2  6EDD               	movwf	postdec2,c
  9103  0030D4                     
  9104                           ; BSR set to: 1
  9105                           ;movement.c: 47:             array_index++;
  9106  0030D4  2B9D               	incf	_array_index& (0+255),f,b
  9107  0030D6                     l5421:
  9108                           
  9109                           ;movement.c: 49:         if (color == 5){
  9110  0030D6  0E05               	movlw	5
  9111  0030D8  185E               	xorwf	action@color^0,w,c
  9112  0030DA  A4D8               	btfss	status,2,c
  9113  0030DC  EF72  F018         	goto	u5511
  9114  0030E0  EF74  F018         	goto	u5510
  9115  0030E4                     u5511:
  9116  0030E4  EF98  F018         	goto	l5429
  9117  0030E8                     u5510:
  9118  0030E8                     
  9119                           ;movement.c: 50:             reverse_square(mL,mR);
  9120  0030E8  C0E0  F026         	movff	action@mL,reverse_square@mL
  9121  0030EC  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9122  0030F0  C0E2  F028         	movff	action@mR,reverse_square@mR
  9123  0030F4  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9124  0030F8  EC6F  F02A         	call	_reverse_square	;wreg free
  9125                           
  9126                           ;movement.c: 51:             turnLeft(mL,mR,90);
  9127  0030FC  C0E0  F020         	movff	action@mL,turnLeft@mL
  9128  003100  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9129  003104  C0E2  F022         	movff	action@mR,turnLeft@mR
  9130  003108  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9131  00310C  0E5A               	movlw	90
  9132  00310E  6E24               	movwf	turnLeft@angle_left^0,c
  9133  003110  ECF3  F021         	call	_turnLeft	;wreg free
  9134  003114                     
  9135                           ;movement.c: 52:             memory[array_index] = 5;
  9136  003114  0101               	movlb	1	; () banked
  9137  003116  519D               	movf	_array_index& (0+255),w,b
  9138  003118  0D02               	mullw	2
  9139  00311A  0E3C               	movlw	low _memory
  9140  00311C  24F3               	addwf	243,w,c
  9141  00311E  6ED9               	movwf	fsr2l,c
  9142  003120  0E01               	movlw	high _memory
  9143  003122  20F4               	addwfc	prodh,w,c
  9144  003124  6EDA               	movwf	fsr2h,c
  9145  003126  0E05               	movlw	5
  9146  003128  6EDE               	movwf	postinc2,c
  9147  00312A  0E00               	movlw	0
  9148  00312C  6EDD               	movwf	postdec2,c
  9149  00312E                     
  9150                           ; BSR set to: 1
  9151                           ;movement.c: 53:             array_index++;
  9152  00312E  2B9D               	incf	_array_index& (0+255),f,b
  9153  003130                     l5429:
  9154                           
  9155                           ;movement.c: 55:         if (color == 6){
  9156  003130  0E06               	movlw	6
  9157  003132  185E               	xorwf	action@color^0,w,c
  9158  003134  A4D8               	btfss	status,2,c
  9159  003136  EF9F  F018         	goto	u5521
  9160  00313A  EFA1  F018         	goto	u5520
  9161  00313E                     u5521:
  9162  00313E  EFC5  F018         	goto	l5437
  9163  003142                     u5520:
  9164  003142                     
  9165                           ;movement.c: 56:             short_reverse(mL,mR);
  9166  003142  C0E0  F026         	movff	action@mL,short_reverse@mL
  9167  003146  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9168  00314A  C0E2  F028         	movff	action@mR,short_reverse@mR
  9169  00314E  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9170  003152  EC4E  F02A         	call	_short_reverse	;wreg free
  9171                           
  9172                           ;movement.c: 57:             turnRight(mL,mR,135);
  9173  003156  C0E0  F020         	movff	action@mL,turnRight@mL
  9174  00315A  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9175  00315E  C0E2  F022         	movff	action@mR,turnRight@mR
  9176  003162  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9177  003166  0E87               	movlw	135
  9178  003168  6E24               	movwf	turnRight@angle_right^0,c
  9179  00316A  EC33  F021         	call	_turnRight	;wreg free
  9180  00316E                     
  9181                           ;movement.c: 58:             memory[array_index] = 6;
  9182  00316E  0101               	movlb	1	; () banked
  9183  003170  519D               	movf	_array_index& (0+255),w,b
  9184  003172  0D02               	mullw	2
  9185  003174  0E3C               	movlw	low _memory
  9186  003176  24F3               	addwf	243,w,c
  9187  003178  6ED9               	movwf	fsr2l,c
  9188  00317A  0E01               	movlw	high _memory
  9189  00317C  20F4               	addwfc	prodh,w,c
  9190  00317E  6EDA               	movwf	fsr2h,c
  9191  003180  0E06               	movlw	6
  9192  003182  6EDE               	movwf	postinc2,c
  9193  003184  0E00               	movlw	0
  9194  003186  6EDD               	movwf	postdec2,c
  9195  003188                     
  9196                           ; BSR set to: 1
  9197                           ;movement.c: 59:             array_index++;
  9198  003188  2B9D               	incf	_array_index& (0+255),f,b
  9199  00318A                     l5437:
  9200                           
  9201                           ;movement.c: 61:         if (color == 7){
  9202  00318A  0E07               	movlw	7
  9203  00318C  185E               	xorwf	action@color^0,w,c
  9204  00318E  A4D8               	btfss	status,2,c
  9205  003190  EFCC  F018         	goto	u5531
  9206  003194  EFCE  F018         	goto	u5530
  9207  003198                     u5531:
  9208  003198  EFF2  F018         	goto	l5445
  9209  00319C                     u5530:
  9210  00319C                     
  9211                           ;movement.c: 62:             short_reverse(mL,mR);
  9212  00319C  C0E0  F026         	movff	action@mL,short_reverse@mL
  9213  0031A0  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9214  0031A4  C0E2  F028         	movff	action@mR,short_reverse@mR
  9215  0031A8  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9216  0031AC  EC4E  F02A         	call	_short_reverse	;wreg free
  9217                           
  9218                           ;movement.c: 63:             turnLeft(mL,mR,135);
  9219  0031B0  C0E0  F020         	movff	action@mL,turnLeft@mL
  9220  0031B4  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9221  0031B8  C0E2  F022         	movff	action@mR,turnLeft@mR
  9222  0031BC  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9223  0031C0  0E87               	movlw	135
  9224  0031C2  6E24               	movwf	turnLeft@angle_left^0,c
  9225  0031C4  ECF3  F021         	call	_turnLeft	;wreg free
  9226  0031C8                     
  9227                           ;movement.c: 64:             memory[array_index] = 7;
  9228  0031C8  0101               	movlb	1	; () banked
  9229  0031CA  519D               	movf	_array_index& (0+255),w,b
  9230  0031CC  0D02               	mullw	2
  9231  0031CE  0E3C               	movlw	low _memory
  9232  0031D0  24F3               	addwf	243,w,c
  9233  0031D2  6ED9               	movwf	fsr2l,c
  9234  0031D4  0E01               	movlw	high _memory
  9235  0031D6  20F4               	addwfc	prodh,w,c
  9236  0031D8  6EDA               	movwf	fsr2h,c
  9237  0031DA  0E07               	movlw	7
  9238  0031DC  6EDE               	movwf	postinc2,c
  9239  0031DE  0E00               	movlw	0
  9240  0031E0  6EDD               	movwf	postdec2,c
  9241  0031E2                     
  9242                           ; BSR set to: 1
  9243                           ;movement.c: 65:             array_index++;
  9244  0031E2  2B9D               	incf	_array_index& (0+255),f,b
  9245  0031E4                     l5445:
  9246                           
  9247                           ;movement.c: 67:         if (color == 8){
  9248  0031E4  0E08               	movlw	8
  9249  0031E6  185E               	xorwf	action@color^0,w,c
  9250  0031E8  A4D8               	btfss	status,2,c
  9251  0031EA  EFF9  F018         	goto	u5541
  9252  0031EE  EFFB  F018         	goto	u5540
  9253  0031F2                     u5541:
  9254  0031F2  EF14  F019         	goto	l630
  9255  0031F6                     u5540:
  9256  0031F6                     
  9257                           ;movement.c: 68:             toggle_light(2,1);
  9258  0031F6  0E01               	movlw	1
  9259  0031F8  6E01               	movwf	toggle_light@toggletime^0,c
  9260  0031FA  0E02               	movlw	2
  9261  0031FC  EC15  F019         	call	_toggle_light
  9262  003200                     
  9263                           ;movement.c: 69:             short_reverse(mL,mR);
  9264  003200  C0E0  F026         	movff	action@mL,short_reverse@mL
  9265  003204  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9266  003208  C0E2  F028         	movff	action@mR,short_reverse@mR
  9267  00320C  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9268  003210  EC4E  F02A         	call	_short_reverse	;wreg free
  9269  003214                     
  9270                           ;movement.c: 70:             goback(mL,mR);
  9271  003214  C0E0  F058         	movff	action@mL,goback@mL
  9272  003218  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9273  00321C  C0E2  F05A         	movff	action@mR,goback@mR
  9274  003220  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9275  003224  EC48  F016         	call	_goback	;wreg free
  9276  003228                     l630:
  9277  003228  0012               	return		;funcret
  9278  00322A                     __end_of_action:
  9279                           	callstack 0
  9280                           
  9281 ;; *************** function _toggle_light *****************
  9282 ;; Defined at:
  9283 ;;		line 29 in file "color.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;  lightnumber     1    wreg     unsigned char 
  9286 ;;  toggletime      1    0[COMRAM] unsigned char 
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9289 ;;  i               1    3[COMRAM] unsigned char 
  9290 ;; Return value:  Size  Location     Type
  9291 ;;                  1    wreg      void 
  9292 ;; Registers used:
  9293 ;;		wreg, status,2, status,0
  9294 ;; Tracked objects:
  9295 ;;		On entry : 0/0
  9296 ;;		On exit  : 0/0
  9297 ;;		Unchanged: 0/0
  9298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9299 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9302 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9303 ;;Total ram usage:        5 bytes
  9304 ;; Hardware stack levels used: 1
  9305 ;; Hardware stack levels required when called: 1
  9306 ;; This function calls:
  9307 ;;		Nothing
  9308 ;; This function is called by:
  9309 ;;		_calibrate_white
  9310 ;;		_detect_color
  9311 ;;		_amb_light_measure
  9312 ;;		_action
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           	psect	text45
  9317  00322A                     __ptext45:
  9318                           	callstack 0
  9319  00322A                     _toggle_light:
  9320                           	callstack 27
  9321                           
  9322                           ;incstack = 0
  9323                           ;toggle_light@lightnumber stored from wreg
  9324  00322A  6E05               	movwf	toggle_light@lightnumber^0,c
  9325  00322C                     
  9326                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9327  00322C  0E00               	movlw	0
  9328  00322E  6E04               	movwf	toggle_light@i^0,c
  9329                           
  9330                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9331  003230  0E00               	movlw	0
  9332  003232  6E04               	movwf	toggle_light@i^0,c
  9333  003234  EF61  F01A         	goto	l74
  9334  003238                     l4483:
  9335                           
  9336                           ;color.c: 34:         if (lightnumber == 1){
  9337  003238  0405               	decf	toggle_light@lightnumber^0,w,c
  9338  00323A  A4D8               	btfss	status,2,c
  9339  00323C  EF22  F019         	goto	u4311
  9340  003240  EF24  F019         	goto	u4310
  9341  003244                     u4311:
  9342  003244  EF5C  F019         	goto	l4491
  9343  003248                     u4310:
  9344  003248                     
  9345                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9346  003248  A280               	btfss	128,1,c	;volatile
  9347  00324A  EF29  F019         	goto	u4321
  9348  00324E  EF2D  F019         	goto	u4320
  9349  003252                     u4321:
  9350  003252  6A02               	clrf	??_toggle_light^0,c
  9351  003254  2A02               	incf	??_toggle_light^0,f,c
  9352  003256  EF2E  F019         	goto	u4338
  9353  00325A                     u4320:
  9354  00325A  6A02               	clrf	??_toggle_light^0,c
  9355  00325C                     u4338:
  9356  00325C  4602               	rlncf	??_toggle_light^0,f,c
  9357  00325E  5080               	movf	128,w,c	;volatile
  9358  003260  1802               	xorwf	??_toggle_light^0,w,c
  9359  003262  0BFD               	andlw	-3
  9360  003264  1802               	xorwf	??_toggle_light^0,w,c
  9361  003266  6E80               	movwf	128,c	;volatile
  9362  003268                     
  9363                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9364  003268  0E29               	movlw	41
  9365  00326A  6E03               	movwf	(??_toggle_light+1)^0,c
  9366  00326C  0E96               	movlw	150
  9367  00326E  6E02               	movwf	??_toggle_light^0,c
  9368  003270  0E7F               	movlw	127
  9369  003272                     u5967:
  9370  003272  2EE8               	decfsz	wreg,f,c
  9371  003274  D7FE               	bra	u5967
  9372  003276  2E02               	decfsz	??_toggle_light^0,f,c
  9373  003278  D7FC               	bra	u5967
  9374  00327A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9375  00327C  D7FA               	bra	u5967
  9376  00327E  F000               	nop	
  9377  003280                     
  9378                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9379  003280  A280               	btfss	128,1,c	;volatile
  9380  003282  EF45  F019         	goto	u4341
  9381  003286  EF49  F019         	goto	u4340
  9382  00328A                     u4341:
  9383  00328A  6A02               	clrf	??_toggle_light^0,c
  9384  00328C  2A02               	incf	??_toggle_light^0,f,c
  9385  00328E  EF4A  F019         	goto	u4358
  9386  003292                     u4340:
  9387  003292  6A02               	clrf	??_toggle_light^0,c
  9388  003294                     u4358:
  9389  003294  4602               	rlncf	??_toggle_light^0,f,c
  9390  003296  5080               	movf	128,w,c	;volatile
  9391  003298  1802               	xorwf	??_toggle_light^0,w,c
  9392  00329A  0BFD               	andlw	-3
  9393  00329C  1802               	xorwf	??_toggle_light^0,w,c
  9394  00329E  6E80               	movwf	128,c	;volatile
  9395                           
  9396                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9397  0032A0  0E29               	movlw	41
  9398  0032A2  6E03               	movwf	(??_toggle_light+1)^0,c
  9399  0032A4  0E96               	movlw	150
  9400  0032A6  6E02               	movwf	??_toggle_light^0,c
  9401  0032A8  0E7F               	movlw	127
  9402  0032AA                     u5977:
  9403  0032AA  2EE8               	decfsz	wreg,f,c
  9404  0032AC  D7FE               	bra	u5977
  9405  0032AE  2E02               	decfsz	??_toggle_light^0,f,c
  9406  0032B0  D7FC               	bra	u5977
  9407  0032B2  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9408  0032B4  D7FA               	bra	u5977
  9409  0032B6  F000               	nop	
  9410  0032B8                     l4491:
  9411                           
  9412                           ;color.c: 40:         if (lightnumber == 2){
  9413  0032B8  0E02               	movlw	2
  9414  0032BA  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9415  0032BC  A4D8               	btfss	status,2,c
  9416  0032BE  EF63  F019         	goto	u4361
  9417  0032C2  EF65  F019         	goto	u4360
  9418  0032C6                     u4361:
  9419  0032C6  EF9D  F019         	goto	l4499
  9420  0032CA                     u4360:
  9421  0032CA                     
  9422                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9423  0032CA  A87C               	btfss	124,4,c	;volatile
  9424  0032CC  EF6A  F019         	goto	u4371
  9425  0032D0  EF6E  F019         	goto	u4370
  9426  0032D4                     u4371:
  9427  0032D4  6A02               	clrf	??_toggle_light^0,c
  9428  0032D6  2A02               	incf	??_toggle_light^0,f,c
  9429  0032D8  EF6F  F019         	goto	u4388
  9430  0032DC                     u4370:
  9431  0032DC  6A02               	clrf	??_toggle_light^0,c
  9432  0032DE                     u4388:
  9433  0032DE  3A02               	swapf	??_toggle_light^0,f,c
  9434  0032E0  507C               	movf	124,w,c	;volatile
  9435  0032E2  1802               	xorwf	??_toggle_light^0,w,c
  9436  0032E4  0BEF               	andlw	-17
  9437  0032E6  1802               	xorwf	??_toggle_light^0,w,c
  9438  0032E8  6E7C               	movwf	124,c	;volatile
  9439  0032EA                     
  9440                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9441  0032EA  0E29               	movlw	41
  9442  0032EC  6E03               	movwf	(??_toggle_light+1)^0,c
  9443  0032EE  0E96               	movlw	150
  9444  0032F0  6E02               	movwf	??_toggle_light^0,c
  9445  0032F2  0E7F               	movlw	127
  9446  0032F4                     u5987:
  9447  0032F4  2EE8               	decfsz	wreg,f,c
  9448  0032F6  D7FE               	bra	u5987
  9449  0032F8  2E02               	decfsz	??_toggle_light^0,f,c
  9450  0032FA  D7FC               	bra	u5987
  9451  0032FC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9452  0032FE  D7FA               	bra	u5987
  9453  003300  F000               	nop	
  9454  003302                     
  9455                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9456  003302  A87C               	btfss	124,4,c	;volatile
  9457  003304  EF86  F019         	goto	u4391
  9458  003308  EF8A  F019         	goto	u4390
  9459  00330C                     u4391:
  9460  00330C  6A02               	clrf	??_toggle_light^0,c
  9461  00330E  2A02               	incf	??_toggle_light^0,f,c
  9462  003310  EF8B  F019         	goto	u4408
  9463  003314                     u4390:
  9464  003314  6A02               	clrf	??_toggle_light^0,c
  9465  003316                     u4408:
  9466  003316  3A02               	swapf	??_toggle_light^0,f,c
  9467  003318  507C               	movf	124,w,c	;volatile
  9468  00331A  1802               	xorwf	??_toggle_light^0,w,c
  9469  00331C  0BEF               	andlw	-17
  9470  00331E  1802               	xorwf	??_toggle_light^0,w,c
  9471  003320  6E7C               	movwf	124,c	;volatile
  9472                           
  9473                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9474  003322  0E29               	movlw	41
  9475  003324  6E03               	movwf	(??_toggle_light+1)^0,c
  9476  003326  0E96               	movlw	150
  9477  003328  6E02               	movwf	??_toggle_light^0,c
  9478  00332A  0E7F               	movlw	127
  9479  00332C                     u5997:
  9480  00332C  2EE8               	decfsz	wreg,f,c
  9481  00332E  D7FE               	bra	u5997
  9482  003330  2E02               	decfsz	??_toggle_light^0,f,c
  9483  003332  D7FC               	bra	u5997
  9484  003334  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9485  003336  D7FA               	bra	u5997
  9486  003338  F000               	nop	
  9487  00333A                     l4499:
  9488                           
  9489                           ;color.c: 46:         if (lightnumber == 3){
  9490  00333A  0E03               	movlw	3
  9491  00333C  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9492  00333E  A4D8               	btfss	status,2,c
  9493  003340  EFA4  F019         	goto	u4411
  9494  003344  EFA6  F019         	goto	u4410
  9495  003348                     u4411:
  9496  003348  EFE2  F019         	goto	l4507
  9497  00334C                     u4410:
  9498  00334C                     
  9499                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9500  00334C  A67C               	btfss	124,3,c	;volatile
  9501  00334E  EFAB  F019         	goto	u4421
  9502  003352  EFAF  F019         	goto	u4420
  9503  003356                     u4421:
  9504  003356  6A02               	clrf	??_toggle_light^0,c
  9505  003358  2A02               	incf	??_toggle_light^0,f,c
  9506  00335A  EFB0  F019         	goto	u4438
  9507  00335E                     u4420:
  9508  00335E  6A02               	clrf	??_toggle_light^0,c
  9509  003360                     u4438:
  9510  003360  4602               	rlncf	??_toggle_light^0,f,c
  9511  003362  4602               	rlncf	??_toggle_light^0,f,c
  9512  003364  4602               	rlncf	??_toggle_light^0,f,c
  9513  003366  507C               	movf	124,w,c	;volatile
  9514  003368  1802               	xorwf	??_toggle_light^0,w,c
  9515  00336A  0BF7               	andlw	-9
  9516  00336C  1802               	xorwf	??_toggle_light^0,w,c
  9517  00336E  6E7C               	movwf	124,c	;volatile
  9518  003370                     
  9519                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9520  003370  0E29               	movlw	41
  9521  003372  6E03               	movwf	(??_toggle_light+1)^0,c
  9522  003374  0E96               	movlw	150
  9523  003376  6E02               	movwf	??_toggle_light^0,c
  9524  003378  0E7F               	movlw	127
  9525  00337A                     u6007:
  9526  00337A  2EE8               	decfsz	wreg,f,c
  9527  00337C  D7FE               	bra	u6007
  9528  00337E  2E02               	decfsz	??_toggle_light^0,f,c
  9529  003380  D7FC               	bra	u6007
  9530  003382  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9531  003384  D7FA               	bra	u6007
  9532  003386  F000               	nop	
  9533  003388                     
  9534                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9535  003388  A67C               	btfss	124,3,c	;volatile
  9536  00338A  EFC9  F019         	goto	u4441
  9537  00338E  EFCD  F019         	goto	u4440
  9538  003392                     u4441:
  9539  003392  6A02               	clrf	??_toggle_light^0,c
  9540  003394  2A02               	incf	??_toggle_light^0,f,c
  9541  003396  EFCE  F019         	goto	u4458
  9542  00339A                     u4440:
  9543  00339A  6A02               	clrf	??_toggle_light^0,c
  9544  00339C                     u4458:
  9545  00339C  4602               	rlncf	??_toggle_light^0,f,c
  9546  00339E  4602               	rlncf	??_toggle_light^0,f,c
  9547  0033A0  4602               	rlncf	??_toggle_light^0,f,c
  9548  0033A2  507C               	movf	124,w,c	;volatile
  9549  0033A4  1802               	xorwf	??_toggle_light^0,w,c
  9550  0033A6  0BF7               	andlw	-9
  9551  0033A8  1802               	xorwf	??_toggle_light^0,w,c
  9552  0033AA  6E7C               	movwf	124,c	;volatile
  9553                           
  9554                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9555  0033AC  0E29               	movlw	41
  9556  0033AE  6E03               	movwf	(??_toggle_light+1)^0,c
  9557  0033B0  0E96               	movlw	150
  9558  0033B2  6E02               	movwf	??_toggle_light^0,c
  9559  0033B4  0E7F               	movlw	127
  9560  0033B6                     u6017:
  9561  0033B6  2EE8               	decfsz	wreg,f,c
  9562  0033B8  D7FE               	bra	u6017
  9563  0033BA  2E02               	decfsz	??_toggle_light^0,f,c
  9564  0033BC  D7FC               	bra	u6017
  9565  0033BE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9566  0033C0  D7FA               	bra	u6017
  9567  0033C2  F000               	nop	
  9568  0033C4                     l4507:
  9569                           
  9570                           ;color.c: 52:         if (lightnumber == 4){
  9571  0033C4  0E04               	movlw	4
  9572  0033C6  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9573  0033C8  A4D8               	btfss	status,2,c
  9574  0033CA  EFE9  F019         	goto	u4461
  9575  0033CE  EFEB  F019         	goto	u4460
  9576  0033D2                     u4461:
  9577  0033D2  EF21  F01A         	goto	l4515
  9578  0033D6                     u4460:
  9579  0033D6                     
  9580                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9581  0033D6  A07E               	btfss	126,0,c	;volatile
  9582  0033D8  EFF0  F019         	goto	u4471
  9583  0033DC  EFF4  F019         	goto	u4470
  9584  0033E0                     u4471:
  9585  0033E0  6A02               	clrf	??_toggle_light^0,c
  9586  0033E2  2A02               	incf	??_toggle_light^0,f,c
  9587  0033E4  EFF5  F019         	goto	u4488
  9588  0033E8                     u4470:
  9589  0033E8  6A02               	clrf	??_toggle_light^0,c
  9590  0033EA                     u4488:
  9591  0033EA  507E               	movf	126,w,c	;volatile
  9592  0033EC  1802               	xorwf	??_toggle_light^0,w,c
  9593  0033EE  0BFE               	andlw	-2
  9594  0033F0  1802               	xorwf	??_toggle_light^0,w,c
  9595  0033F2  6E7E               	movwf	126,c	;volatile
  9596  0033F4                     
  9597                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9598  0033F4  0E29               	movlw	41
  9599  0033F6  6E03               	movwf	(??_toggle_light+1)^0,c
  9600  0033F8  0E96               	movlw	150
  9601  0033FA  6E02               	movwf	??_toggle_light^0,c
  9602  0033FC  0E7F               	movlw	127
  9603  0033FE                     u6027:
  9604  0033FE  2EE8               	decfsz	wreg,f,c
  9605  003400  D7FE               	bra	u6027
  9606  003402  2E02               	decfsz	??_toggle_light^0,f,c
  9607  003404  D7FC               	bra	u6027
  9608  003406  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9609  003408  D7FA               	bra	u6027
  9610  00340A  F000               	nop	
  9611  00340C                     
  9612                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9613  00340C  A07E               	btfss	126,0,c	;volatile
  9614  00340E  EF0B  F01A         	goto	u4491
  9615  003412  EF0F  F01A         	goto	u4490
  9616  003416                     u4491:
  9617  003416  6A02               	clrf	??_toggle_light^0,c
  9618  003418  2A02               	incf	??_toggle_light^0,f,c
  9619  00341A  EF10  F01A         	goto	u4508
  9620  00341E                     u4490:
  9621  00341E  6A02               	clrf	??_toggle_light^0,c
  9622  003420                     u4508:
  9623  003420  507E               	movf	126,w,c	;volatile
  9624  003422  1802               	xorwf	??_toggle_light^0,w,c
  9625  003424  0BFE               	andlw	-2
  9626  003426  1802               	xorwf	??_toggle_light^0,w,c
  9627  003428  6E7E               	movwf	126,c	;volatile
  9628                           
  9629                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9630  00342A  0E29               	movlw	41
  9631  00342C  6E03               	movwf	(??_toggle_light+1)^0,c
  9632  00342E  0E96               	movlw	150
  9633  003430  6E02               	movwf	??_toggle_light^0,c
  9634  003432  0E7F               	movlw	127
  9635  003434                     u6037:
  9636  003434  2EE8               	decfsz	wreg,f,c
  9637  003436  D7FE               	bra	u6037
  9638  003438  2E02               	decfsz	??_toggle_light^0,f,c
  9639  00343A  D7FC               	bra	u6037
  9640  00343C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9641  00343E  D7FA               	bra	u6037
  9642  003440  F000               	nop	
  9643  003442                     l4515:
  9644                           
  9645                           ;color.c: 58:         if (lightnumber == 3){
  9646  003442  0E03               	movlw	3
  9647  003444  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9648  003446  A4D8               	btfss	status,2,c
  9649  003448  EF28  F01A         	goto	u4511
  9650  00344C  EF2A  F01A         	goto	u4510
  9651  003450                     u4511:
  9652  003450  EF60  F01A         	goto	l4523
  9653  003454                     u4510:
  9654  003454                     
  9655                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9656  003454  A080               	btfss	128,0,c	;volatile
  9657  003456  EF2F  F01A         	goto	u4521
  9658  00345A  EF33  F01A         	goto	u4520
  9659  00345E                     u4521:
  9660  00345E  6A02               	clrf	??_toggle_light^0,c
  9661  003460  2A02               	incf	??_toggle_light^0,f,c
  9662  003462  EF34  F01A         	goto	u4538
  9663  003466                     u4520:
  9664  003466  6A02               	clrf	??_toggle_light^0,c
  9665  003468                     u4538:
  9666  003468  5080               	movf	128,w,c	;volatile
  9667  00346A  1802               	xorwf	??_toggle_light^0,w,c
  9668  00346C  0BFE               	andlw	-2
  9669  00346E  1802               	xorwf	??_toggle_light^0,w,c
  9670  003470  6E80               	movwf	128,c	;volatile
  9671  003472                     
  9672                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9673  003472  0E29               	movlw	41
  9674  003474  6E03               	movwf	(??_toggle_light+1)^0,c
  9675  003476  0E96               	movlw	150
  9676  003478  6E02               	movwf	??_toggle_light^0,c
  9677  00347A  0E7F               	movlw	127
  9678  00347C                     u6047:
  9679  00347C  2EE8               	decfsz	wreg,f,c
  9680  00347E  D7FE               	bra	u6047
  9681  003480  2E02               	decfsz	??_toggle_light^0,f,c
  9682  003482  D7FC               	bra	u6047
  9683  003484  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9684  003486  D7FA               	bra	u6047
  9685  003488  F000               	nop	
  9686  00348A                     
  9687                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  9688  00348A  A080               	btfss	128,0,c	;volatile
  9689  00348C  EF4A  F01A         	goto	u4541
  9690  003490  EF4E  F01A         	goto	u4540
  9691  003494                     u4541:
  9692  003494  6A02               	clrf	??_toggle_light^0,c
  9693  003496  2A02               	incf	??_toggle_light^0,f,c
  9694  003498  EF4F  F01A         	goto	u4558
  9695  00349C                     u4540:
  9696  00349C  6A02               	clrf	??_toggle_light^0,c
  9697  00349E                     u4558:
  9698  00349E  5080               	movf	128,w,c	;volatile
  9699  0034A0  1802               	xorwf	??_toggle_light^0,w,c
  9700  0034A2  0BFE               	andlw	-2
  9701  0034A4  1802               	xorwf	??_toggle_light^0,w,c
  9702  0034A6  6E80               	movwf	128,c	;volatile
  9703                           
  9704                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9705  0034A8  0E29               	movlw	41
  9706  0034AA  6E03               	movwf	(??_toggle_light+1)^0,c
  9707  0034AC  0E96               	movlw	150
  9708  0034AE  6E02               	movwf	??_toggle_light^0,c
  9709  0034B0  0E7F               	movlw	127
  9710  0034B2                     u6057:
  9711  0034B2  2EE8               	decfsz	wreg,f,c
  9712  0034B4  D7FE               	bra	u6057
  9713  0034B6  2E02               	decfsz	??_toggle_light^0,f,c
  9714  0034B8  D7FC               	bra	u6057
  9715  0034BA  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9716  0034BC  D7FA               	bra	u6057
  9717  0034BE  F000               	nop	
  9718  0034C0                     l4523:
  9719                           
  9720                           ;color.c: 64:     }
  9721  0034C0  2A04               	incf	toggle_light@i^0,f,c
  9722  0034C2                     l74:
  9723  0034C2  5001               	movf	toggle_light@toggletime^0,w,c
  9724  0034C4  5C04               	subwf	toggle_light@i^0,w,c
  9725  0034C6  A0D8               	btfss	status,0,c
  9726  0034C8  EF68  F01A         	goto	u4561
  9727  0034CC  EF6A  F01A         	goto	u4560
  9728  0034D0                     u4561:
  9729  0034D0  EF1C  F019         	goto	l4483
  9730  0034D4                     u4560:
  9731  0034D4  0012               	return		;funcret
  9732  0034D6                     __end_of_toggle_light:
  9733                           	callstack 0
  9734                           
  9735 ;; *************** function _short_reverse *****************
  9736 ;; Defined at:
  9737 ;;		line 183 in file "dc_motor.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  9740 ;;		 -> main@motorL(10), 
  9741 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  9742 ;;		 -> main@motorR(10), 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;		None
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      void 
  9747 ;; Registers used:
  9748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9758 ;;Total ram usage:        6 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 5
  9761 ;; This function calls:
  9762 ;;		_fullSpeedBack
  9763 ;;		_stop
  9764 ;; This function is called by:
  9765 ;;		_action
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text46
  9770  00549C                     __ptext46:
  9771                           	callstack 0
  9772  00549C                     _short_reverse:
  9773                           	callstack 24
  9774  00549C                     
  9775                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
  9776  00549C  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
  9777  0054A0  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
  9778  0054A4  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
  9779  0054A8  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
  9780  0054AC  ECF5  F026         	call	_fullSpeedBack	;wreg free
  9781  0054B0                     
  9782                           ;dc_motor.c: 185:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9783  0054B0  0E29               	movlw	41
  9784  0054B2  6E2B               	movwf	(??_short_reverse+1)^0,c
  9785  0054B4  0E96               	movlw	150
  9786  0054B6  6E2A               	movwf	??_short_reverse^0,c
  9787  0054B8  0E7F               	movlw	127
  9788  0054BA                     u6067:
  9789  0054BA  2EE8               	decfsz	wreg,f,c
  9790  0054BC  D7FE               	bra	u6067
  9791  0054BE  2E2A               	decfsz	??_short_reverse^0,f,c
  9792  0054C0  D7FC               	bra	u6067
  9793  0054C2  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
  9794  0054C4  D7FA               	bra	u6067
  9795  0054C6  F000               	nop	
  9796  0054C8                     
  9797                           ;dc_motor.c: 186:     stop(mL,mR);
  9798  0054C8  C026  F01A         	movff	short_reverse@mL,stop@mL
  9799  0054CC  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
  9800  0054D0  C028  F01C         	movff	short_reverse@mR,stop@mR
  9801  0054D4  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
  9802  0054D8  EC55  F027         	call	_stop	;wreg free
  9803  0054DC  0012               	return		;funcret
  9804  0054DE                     __end_of_short_reverse:
  9805                           	callstack 0
  9806                           
  9807 ;; *************** function _goback *****************
  9808 ;; Defined at:
  9809 ;;		line 111 in file "movement.c"
  9810 ;; Parameters:    Size  Location     Type
  9811 ;;  mL              2   87[COMRAM] PTR struct DC_motor
  9812 ;;		 -> main@motorL(10), 
  9813 ;;  mR              2   89[COMRAM] PTR struct DC_motor
  9814 ;;		 -> main@motorR(10), 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  i               2  126[BANK0 ] unsigned int 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        8 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 10
  9833 ;; This function calls:
  9834 ;;		_color_predict
  9835 ;;		_fullSpeedAhead
  9836 ;;		_reverse_square
  9837 ;;		_stop
  9838 ;;		_turnLeft
  9839 ;;		_turnRight
  9840 ;; This function is called by:
  9841 ;;		_action
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text47
  9846  002C90                     __ptext47:
  9847                           	callstack 0
  9848  002C90                     _goback:
  9849                           	callstack 19
  9850  002C90                     
  9851                           ;movement.c: 111: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 112:
      +                           { turnRight(mL,mR,180);
  9852  002C90  C058  F020         	movff	goback@mL,turnRight@mL
  9853  002C94  C059  F021         	movff	goback@mL+1,turnRight@mL+1
  9854  002C98  C05A  F022         	movff	goback@mR,turnRight@mR
  9855  002C9C  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
  9856  002CA0  0EB4               	movlw	180
  9857  002CA2  6E24               	movwf	turnRight@angle_right^0,c
  9858  002CA4  EC33  F021         	call	_turnRight	;wreg free
  9859  002CA8                     l5185:
  9860                           
  9861                           ;movement.c: 113:     array_index--;
  9862  002CA8  0101               	movlb	1	; () banked
  9863  002CAA  079D               	decf	_array_index& (0+255),f,b
  9864  002CAC                     l5187:
  9865                           
  9866                           ; BSR set to: 1
  9867                           ;movement.c: 115:         fullSpeedAhead(mL,mR);
  9868  002CAC  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
  9869  002CB0  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  9870  002CB4  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
  9871  002CB8  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  9872  002CBC  ECB3  F027         	call	_fullSpeedAhead	;wreg free
  9873  002CC0                     
  9874                           ;movement.c: 116:         color_predict(array_index);
  9875  002CC0  0101               	movlb	1	; () banked
  9876  002CC2  519D               	movf	_array_index& (0+255),w,b
  9877  002CC4  EC53  F02B         	call	_color_predict
  9878  002CC8                     
  9879                           ;movement.c: 117:         color_predict(201);
  9880  002CC8  0EC9               	movlw	201
  9881  002CCA  EC53  F02B         	call	_color_predict
  9882  002CCE                     
  9883                           ;movement.c: 118:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
  9884  002CCE  0E00               	movlw	0
  9885  002CD0  0100               	movlb	0	; () banked
  9886  002CD2  6FDF               	movwf	(goback@i+1)& (0+255),b
  9887  002CD4  0E00               	movlw	0
  9888  002CD6  6FDE               	movwf	goback@i& (0+255),b
  9889  002CD8  EF7D  F016         	goto	l5199
  9890  002CDC                     l5195:
  9891                           
  9892                           ; BSR set to: 0
  9893  002CDC  0E52               	movlw	82
  9894  002CDE  6E5D               	movwf	(??_goback+1)^0,c
  9895  002CE0  0E2B               	movlw	43
  9896  002CE2  6E5C               	movwf	??_goback^0,c
  9897  002CE4  0E00               	movlw	0
  9898  002CE6                     u6077:
  9899  002CE6  2EE8               	decfsz	wreg,f,c
  9900  002CE8  D7FE               	bra	u6077
  9901  002CEA  2E5C               	decfsz	??_goback^0,f,c
  9902  002CEC  D7FC               	bra	u6077
  9903  002CEE  2E5D               	decfsz	(??_goback+1)^0,f,c
  9904  002CF0  D7FA               	bra	u6077
  9905  002CF2  D000               	nop2	
  9906  002CF4  0100               	movlb	0	; () banked
  9907  002CF6  4BDE               	infsnz	goback@i& (0+255),f,b
  9908  002CF8  2BDF               	incf	(goback@i+1)& (0+255),f,b
  9909  002CFA                     l5199:
  9910                           
  9911                           ; BSR set to: 0
  9912  002CFA  0101               	movlb	1	; () banked
  9913  002CFC  519D               	movf	_array_index& (0+255),w,b
  9914  002CFE  0D02               	mullw	2
  9915  002D00  0E3C               	movlw	low _memory
  9916  002D02  24F3               	addwf	243,w,c
  9917  002D04  6ED9               	movwf	fsr2l,c
  9918  002D06  0E01               	movlw	high _memory
  9919  002D08  20F4               	addwfc	prodh,w,c
  9920  002D0A  6EDA               	movwf	fsr2h,c
  9921  002D0C  50DE               	movf	postinc2,w,c
  9922  002D0E  0100               	movlb	0	; () banked
  9923  002D10  5DDE               	subwf	goback@i& (0+255),w,b
  9924  002D12  50DE               	movf	postinc2,w,c
  9925  002D14  59DF               	subwfb	(goback@i+1)& (0+255),w,b
  9926  002D16  A0D8               	btfss	status,0,c
  9927  002D18  EF90  F016         	goto	u5261
  9928  002D1C  EF92  F016         	goto	u5260
  9929  002D20                     u5261:
  9930  002D20  EF6E  F016         	goto	l5195
  9931  002D24                     u5260:
  9932  002D24                     
  9933                           ; BSR set to: 0
  9934                           ;movement.c: 119:         stop(mL,mR);
  9935  002D24  C058  F01A         	movff	goback@mL,stop@mL
  9936  002D28  C059  F01B         	movff	goback@mL+1,stop@mL+1
  9937  002D2C  C05A  F01C         	movff	goback@mR,stop@mR
  9938  002D30  C05B  F01D         	movff	goback@mR+1,stop@mR+1
  9939  002D34  EC55  F027         	call	_stop	;wreg free
  9940  002D38                     
  9941                           ;movement.c: 120:         if (array_index == 0){break;}
  9942  002D38  0101               	movlb	1	; () banked
  9943  002D3A  519D               	movf	_array_index& (0+255),w,b
  9944  002D3C  A4D8               	btfss	status,2,c
  9945  002D3E  EFA3  F016         	goto	u5271
  9946  002D42  EFA5  F016         	goto	u5270
  9947  002D46                     u5271:
  9948  002D46  EFA7  F016         	goto	l5207
  9949  002D4A                     u5270:
  9950  002D4A  EFA2  F017         	goto	l5255
  9951  002D4E                     l5207:
  9952                           
  9953                           ; BSR set to: 1
  9954                           ;movement.c: 121:         array_index--;
  9955  002D4E  079D               	decf	_array_index& (0+255),f,b
  9956  002D50                     
  9957                           ; BSR set to: 1
  9958                           ;movement.c: 122:         color_predict(array_index);
  9959  002D50  519D               	movf	_array_index& (0+255),w,b
  9960  002D52  EC53  F02B         	call	_color_predict
  9961  002D56                     
  9962                           ;movement.c: 123:         color_predict(201);
  9963  002D56  0EC9               	movlw	201
  9964  002D58  EC53  F02B         	call	_color_predict
  9965  002D5C                     
  9966                           ;movement.c: 125:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
  9967  002D5C  0101               	movlb	1	; () banked
  9968  002D5E  519D               	movf	_array_index& (0+255),w,b
  9969  002D60  0D02               	mullw	2
  9970  002D62  0E3C               	movlw	low _memory
  9971  002D64  24F3               	addwf	243,w,c
  9972  002D66  6ED9               	movwf	fsr2l,c
  9973  002D68  0E01               	movlw	high _memory
  9974  002D6A  20F4               	addwfc	prodh,w,c
  9975  002D6C  6EDA               	movwf	fsr2h,c
  9976  002D6E  04DE               	decf	postinc2,w,c
  9977  002D70  10DE               	iorwf	postinc2,w,c
  9978  002D72  A4D8               	btfss	status,2,c
  9979  002D74  EFBE  F016         	goto	u5281
  9980  002D78  EFC0  F016         	goto	u5280
  9981  002D7C                     u5281:
  9982  002D7C  EFCE  F016         	goto	l5219
  9983  002D80                     u5280:
  9984  002D80                     
  9985                           ; BSR set to: 1
  9986  002D80  C058  F020         	movff	goback@mL,turnLeft@mL
  9987  002D84  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
  9988  002D88  C05A  F022         	movff	goback@mR,turnLeft@mR
  9989  002D8C  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
  9990  002D90  0E5A               	movlw	90
  9991  002D92  6E24               	movwf	turnLeft@angle_left^0,c
  9992  002D94  ECF3  F021         	call	_turnLeft	;wreg free
  9993  002D98  0101               	movlb	1	; () banked
  9994  002D9A  079D               	decf	_array_index& (0+255),f,b
  9995  002D9C                     l5219:
  9996                           
  9997                           ; BSR set to: 1
  9998                           ;movement.c: 126:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
  9999  002D9C  519D               	movf	_array_index& (0+255),w,b
 10000  002D9E  0D02               	mullw	2
 10001  002DA0  0E3C               	movlw	low _memory
 10002  002DA2  24F3               	addwf	243,w,c
 10003  002DA4  6ED9               	movwf	fsr2l,c
 10004  002DA6  0E01               	movlw	high _memory
 10005  002DA8  20F4               	addwfc	prodh,w,c
 10006  002DAA  6EDA               	movwf	fsr2h,c
 10007  002DAC  0E02               	movlw	2
 10008  002DAE  18DE               	xorwf	postinc2,w,c
 10009  002DB0  10DE               	iorwf	postinc2,w,c
 10010  002DB2  A4D8               	btfss	status,2,c
 10011  002DB4  EFDE  F016         	goto	u5291
 10012  002DB8  EFE0  F016         	goto	u5290
 10013  002DBC                     u5291:
 10014  002DBC  EFEE  F016         	goto	l5225
 10015  002DC0                     u5290:
 10016  002DC0                     
 10017                           ; BSR set to: 1
 10018  002DC0  C058  F020         	movff	goback@mL,turnRight@mL
 10019  002DC4  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10020  002DC8  C05A  F022         	movff	goback@mR,turnRight@mR
 10021  002DCC  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10022  002DD0  0E5A               	movlw	90
 10023  002DD2  6E24               	movwf	turnRight@angle_right^0,c
 10024  002DD4  EC33  F021         	call	_turnRight	;wreg free
 10025  002DD8  0101               	movlb	1	; () banked
 10026  002DDA  079D               	decf	_array_index& (0+255),f,b
 10027  002DDC                     l5225:
 10028                           
 10029                           ; BSR set to: 1
 10030                           ;movement.c: 127:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 10031  002DDC  519D               	movf	_array_index& (0+255),w,b
 10032  002DDE  0D02               	mullw	2
 10033  002DE0  0E3C               	movlw	low _memory
 10034  002DE2  24F3               	addwf	243,w,c
 10035  002DE4  6ED9               	movwf	fsr2l,c
 10036  002DE6  0E01               	movlw	high _memory
 10037  002DE8  20F4               	addwfc	prodh,w,c
 10038  002DEA  6EDA               	movwf	fsr2h,c
 10039  002DEC  0E03               	movlw	3
 10040  002DEE  18DE               	xorwf	postinc2,w,c
 10041  002DF0  10DE               	iorwf	postinc2,w,c
 10042  002DF2  A4D8               	btfss	status,2,c
 10043  002DF4  EFFE  F016         	goto	u5301
 10044  002DF8  EF00  F017         	goto	u5300
 10045  002DFC                     u5301:
 10046  002DFC  EF0E  F017         	goto	l5231
 10047  002E00                     u5300:
 10048  002E00                     
 10049                           ; BSR set to: 1
 10050  002E00  C058  F020         	movff	goback@mL,turnLeft@mL
 10051  002E04  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10052  002E08  C05A  F022         	movff	goback@mR,turnLeft@mR
 10053  002E0C  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10054  002E10  0EB4               	movlw	180
 10055  002E12  6E24               	movwf	turnLeft@angle_left^0,c
 10056  002E14  ECF3  F021         	call	_turnLeft	;wreg free
 10057  002E18  0101               	movlb	1	; () banked
 10058  002E1A  079D               	decf	_array_index& (0+255),f,b
 10059  002E1C                     l5231:
 10060                           
 10061                           ; BSR set to: 1
 10062                           ;movement.c: 128:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 10063  002E1C  519D               	movf	_array_index& (0+255),w,b
 10064  002E1E  0D02               	mullw	2
 10065  002E20  0E3C               	movlw	low _memory
 10066  002E22  24F3               	addwf	243,w,c
 10067  002E24  6ED9               	movwf	fsr2l,c
 10068  002E26  0E01               	movlw	high _memory
 10069  002E28  20F4               	addwfc	prodh,w,c
 10070  002E2A  6EDA               	movwf	fsr2h,c
 10071  002E2C  0E04               	movlw	4
 10072  002E2E  18DE               	xorwf	postinc2,w,c
 10073  002E30  10DE               	iorwf	postinc2,w,c
 10074  002E32  A4D8               	btfss	status,2,c
 10075  002E34  EF1E  F017         	goto	u5311
 10076  002E38  EF20  F017         	goto	u5310
 10077  002E3C                     u5311:
 10078  002E3C  EF38  F017         	goto	l5237
 10079  002E40                     u5310:
 10080  002E40                     
 10081                           ; BSR set to: 1
 10082  002E40  C058  F026         	movff	goback@mL,reverse_square@mL
 10083  002E44  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10084  002E48  C05A  F028         	movff	goback@mR,reverse_square@mR
 10085  002E4C  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10086  002E50  EC6F  F02A         	call	_reverse_square	;wreg free
 10087  002E54  C058  F020         	movff	goback@mL,turnLeft@mL
 10088  002E58  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10089  002E5C  C05A  F022         	movff	goback@mR,turnLeft@mR
 10090  002E60  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10091  002E64  0E5A               	movlw	90
 10092  002E66  6E24               	movwf	turnLeft@angle_left^0,c
 10093  002E68  ECF3  F021         	call	_turnLeft	;wreg free
 10094  002E6C  0101               	movlb	1	; () banked
 10095  002E6E  079D               	decf	_array_index& (0+255),f,b
 10096  002E70                     l5237:
 10097                           
 10098                           ; BSR set to: 1
 10099                           ;movement.c: 129:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 10100  002E70  519D               	movf	_array_index& (0+255),w,b
 10101  002E72  0D02               	mullw	2
 10102  002E74  0E3C               	movlw	low _memory
 10103  002E76  24F3               	addwf	243,w,c
 10104  002E78  6ED9               	movwf	fsr2l,c
 10105  002E7A  0E01               	movlw	high _memory
 10106  002E7C  20F4               	addwfc	prodh,w,c
 10107  002E7E  6EDA               	movwf	fsr2h,c
 10108  002E80  0E05               	movlw	5
 10109  002E82  18DE               	xorwf	postinc2,w,c
 10110  002E84  10DE               	iorwf	postinc2,w,c
 10111  002E86  A4D8               	btfss	status,2,c
 10112  002E88  EF48  F017         	goto	u5321
 10113  002E8C  EF4A  F017         	goto	u5320
 10114  002E90                     u5321:
 10115  002E90  EF62  F017         	goto	l5243
 10116  002E94                     u5320:
 10117  002E94                     
 10118                           ; BSR set to: 1
 10119  002E94  C058  F026         	movff	goback@mL,reverse_square@mL
 10120  002E98  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10121  002E9C  C05A  F028         	movff	goback@mR,reverse_square@mR
 10122  002EA0  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10123  002EA4  EC6F  F02A         	call	_reverse_square	;wreg free
 10124  002EA8  C058  F020         	movff	goback@mL,turnRight@mL
 10125  002EAC  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10126  002EB0  C05A  F022         	movff	goback@mR,turnRight@mR
 10127  002EB4  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10128  002EB8  0E5A               	movlw	90
 10129  002EBA  6E24               	movwf	turnRight@angle_right^0,c
 10130  002EBC  EC33  F021         	call	_turnRight	;wreg free
 10131  002EC0  0101               	movlb	1	; () banked
 10132  002EC2  079D               	decf	_array_index& (0+255),f,b
 10133  002EC4                     l5243:
 10134                           
 10135                           ; BSR set to: 1
 10136                           ;movement.c: 130:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 10137  002EC4  519D               	movf	_array_index& (0+255),w,b
 10138  002EC6  0D02               	mullw	2
 10139  002EC8  0E3C               	movlw	low _memory
 10140  002ECA  24F3               	addwf	243,w,c
 10141  002ECC  6ED9               	movwf	fsr2l,c
 10142  002ECE  0E01               	movlw	high _memory
 10143  002ED0  20F4               	addwfc	prodh,w,c
 10144  002ED2  6EDA               	movwf	fsr2h,c
 10145  002ED4  0E06               	movlw	6
 10146  002ED6  18DE               	xorwf	postinc2,w,c
 10147  002ED8  10DE               	iorwf	postinc2,w,c
 10148  002EDA  A4D8               	btfss	status,2,c
 10149  002EDC  EF72  F017         	goto	u5331
 10150  002EE0  EF74  F017         	goto	u5330
 10151  002EE4                     u5331:
 10152  002EE4  EF82  F017         	goto	l5249
 10153  002EE8                     u5330:
 10154  002EE8                     
 10155                           ; BSR set to: 1
 10156  002EE8  C058  F020         	movff	goback@mL,turnLeft@mL
 10157  002EEC  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10158  002EF0  C05A  F022         	movff	goback@mR,turnLeft@mR
 10159  002EF4  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10160  002EF8  0E87               	movlw	135
 10161  002EFA  6E24               	movwf	turnLeft@angle_left^0,c
 10162  002EFC  ECF3  F021         	call	_turnLeft	;wreg free
 10163  002F00  0101               	movlb	1	; () banked
 10164  002F02  079D               	decf	_array_index& (0+255),f,b
 10165  002F04                     l5249:
 10166                           
 10167                           ; BSR set to: 1
 10168                           ;movement.c: 131:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 10169  002F04  519D               	movf	_array_index& (0+255),w,b
 10170  002F06  0D02               	mullw	2
 10171  002F08  0E3C               	movlw	low _memory
 10172  002F0A  24F3               	addwf	243,w,c
 10173  002F0C  6ED9               	movwf	fsr2l,c
 10174  002F0E  0E01               	movlw	high _memory
 10175  002F10  20F4               	addwfc	prodh,w,c
 10176  002F12  6EDA               	movwf	fsr2h,c
 10177  002F14  0E07               	movlw	7
 10178  002F16  18DE               	xorwf	postinc2,w,c
 10179  002F18  10DE               	iorwf	postinc2,w,c
 10180  002F1A  A4D8               	btfss	status,2,c
 10181  002F1C  EF92  F017         	goto	u5341
 10182  002F20  EF94  F017         	goto	u5340
 10183  002F24                     u5341:
 10184  002F24  EF56  F016         	goto	l5187
 10185  002F28                     u5340:
 10186  002F28                     
 10187                           ; BSR set to: 1
 10188  002F28  C058  F020         	movff	goback@mL,turnRight@mL
 10189  002F2C  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10190  002F30  C05A  F022         	movff	goback@mR,turnRight@mR
 10191  002F34  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10192  002F38  0E79               	movlw	121
 10193  002F3A  6E24               	movwf	turnRight@angle_right^0,c
 10194  002F3C  EC33  F021         	call	_turnRight	;wreg free
 10195  002F40  EF54  F016         	goto	l5185
 10196  002F44                     l5255:
 10197  002F44  C058  F01A         	movff	goback@mL,stop@mL
 10198  002F48  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10199  002F4C  C05A  F01C         	movff	goback@mR,stop@mR
 10200  002F50  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10201  002F54  EC55  F027         	call	_stop	;wreg free
 10202  002F58  EFA2  F017         	goto	l5255
 10203  002F5C  0012               	return		;funcret
 10204  002F5E                     __end_of_goback:
 10205                           	callstack 0
 10206                           
 10207 ;; *************** function _turnRight *****************
 10208 ;; Defined at:
 10209 ;;		line 122 in file "dc_motor.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10212 ;;		 -> main@motorL(10), 
 10213 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10214 ;;		 -> main@motorR(10), 
 10215 ;;  angle_right     1   35[COMRAM] unsigned char 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;  i               2   45[COMRAM] unsigned int 
 10218 ;;  i               2   43[COMRAM] unsigned int 
 10219 ;;  i               2   41[COMRAM] unsigned int 
 10220 ;;  delay           2   47[COMRAM] unsigned int 
 10221 ;;  delay_180       2   39[COMRAM] unsigned int 
 10222 ;;  delay_135       2   37[COMRAM] unsigned int 
 10223 ;; Return value:  Size  Location     Type
 10224 ;;                  1    wreg      void 
 10225 ;; Registers used:
 10226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10227 ;; Tracked objects:
 10228 ;;		On entry : 0/0
 10229 ;;		On exit  : 0/0
 10230 ;;		Unchanged: 0/0
 10231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10232 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10236 ;;Total ram usage:       18 bytes
 10237 ;; Hardware stack levels used: 1
 10238 ;; Hardware stack levels required when called: 4
 10239 ;; This function calls:
 10240 ;;		_setMotorPWM
 10241 ;;		_stop
 10242 ;; This function is called by:
 10243 ;;		_action
 10244 ;;		_goback
 10245 ;;		_test_action
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text48
 10250  004266                     __ptext48:
 10251                           	callstack 0
 10252  004266                     _turnRight:
 10253                           	callstack 25
 10254  004266                     
 10255                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10256  004266  EE20 F001          	lfsr	2,1
 10257  00426A  5020               	movf	turnRight@mL^0,w,c
 10258  00426C  26D9               	addwf	fsr2l,f,c
 10259  00426E  5021               	movf	(turnRight@mL+1)^0,w,c
 10260  004270  22DA               	addwfc	fsr2h,f,c
 10261  004272  0E01               	movlw	1
 10262  004274  6EDF               	movwf	indf2,c
 10263                           
 10264                           ;dc_motor.c: 125:     mR->direction=1;
 10265  004276  EE20 F001          	lfsr	2,1
 10266  00427A  5022               	movf	turnRight@mR^0,w,c
 10267  00427C  26D9               	addwf	fsr2l,f,c
 10268  00427E  5023               	movf	(turnRight@mR+1)^0,w,c
 10269  004280  22DA               	addwfc	fsr2h,f,c
 10270  004282  0E01               	movlw	1
 10271  004284  6EDF               	movwf	indf2,c
 10272                           
 10273                           ;dc_motor.c: 126:     while (mL->power <25){
 10274  004286  EF64  F021         	goto	l4621
 10275  00428A                     l4613:
 10276                           
 10277                           ;dc_motor.c: 127:         mL->power += 5;
 10278  00428A  C020  FFD9         	movff	turnRight@mL,fsr2l
 10279  00428E  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10280  004292  0E05               	movlw	5
 10281  004294  26DF               	addwf	indf2,f,c
 10282                           
 10283                           ;dc_motor.c: 128:         mR->power = 0;
 10284  004296  C022  FFD9         	movff	turnRight@mR,fsr2l
 10285  00429A  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10286  00429E  0E00               	movlw	0
 10287  0042A0  6EDF               	movwf	indf2,c
 10288  0042A2                     
 10289                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10290  0042A2  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10291  0042A6  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10292  0042AA  EC64  F01B         	call	_setMotorPWM	;wreg free
 10293  0042AE                     
 10294                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10295  0042AE  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10296  0042B2  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10297  0042B6  EC64  F01B         	call	_setMotorPWM	;wreg free
 10298  0042BA                     
 10299                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10300  0042BA  0ED0               	movlw	208
 10301  0042BC  6E25               	movwf	??_turnRight^0,c
 10302  0042BE  0ECA               	movlw	202
 10303  0042C0                     u6087:
 10304  0042C0  2EE8               	decfsz	wreg,f,c
 10305  0042C2  D7FE               	bra	u6087
 10306  0042C4  2E25               	decfsz	??_turnRight^0,f,c
 10307  0042C6  D7FC               	bra	u6087
 10308  0042C8                     l4621:
 10309                           
 10310                           ;dc_motor.c: 126:     while (mL->power <25){
 10311  0042C8  C020  FFD9         	movff	turnRight@mL,fsr2l
 10312  0042CC  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10313  0042D0  0E18               	movlw	24
 10314  0042D2  64DF               	cpfsgt	indf2,c
 10315  0042D4  EF6E  F021         	goto	u4651
 10316  0042D8  EF70  F021         	goto	u4650
 10317  0042DC                     u4651:
 10318  0042DC  EF45  F021         	goto	l4613
 10319  0042E0                     u4650:
 10320  0042E0                     
 10321                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10322  0042E0  5024               	movf	turnRight@angle_right^0,w,c
 10323  0042E2  0100               	movlb	0	; () banked
 10324  0042E4  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10325  0042E6  CFF3 F030          	movff	prodl,turnRight@delay
 10326  0042EA  CFF4 F031          	movff	prodh,turnRight@delay+1
 10327  0042EE                     
 10328                           ; BSR set to: 0
 10329  0042EE  0E0A               	movlw	10
 10330  0042F0  2430               	addwf	turnRight@delay^0,w,c
 10331  0042F2  6E26               	movwf	turnRight@delay_135^0,c
 10332  0042F4  0E00               	movlw	0
 10333  0042F6  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10334  0042F8  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10335  0042FA                     
 10336                           ; BSR set to: 0
 10337  0042FA  0E14               	movlw	20
 10338  0042FC  2430               	addwf	turnRight@delay^0,w,c
 10339  0042FE  6E28               	movwf	turnRight@delay_180^0,c
 10340  004300  0E00               	movlw	0
 10341  004302  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10342  004304  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10343  004306                     
 10344                           ; BSR set to: 0
 10345                           ;dc_motor.c: 136:     if (angle_right == 180){
 10346  004306  0EB4               	movlw	180
 10347  004308  1824               	xorwf	turnRight@angle_right^0,w,c
 10348  00430A  A4D8               	btfss	status,2,c
 10349  00430C  EF8A  F021         	goto	u4661
 10350  004310  EF8C  F021         	goto	u4660
 10351  004314                     u4661:
 10352  004314  EFA7  F021         	goto	l4637
 10353  004318                     u4660:
 10354  004318                     
 10355                           ; BSR set to: 0
 10356                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10357  004318  0E00               	movlw	0
 10358  00431A  6E2B               	movwf	(turnRight@i+1)^0,c
 10359  00431C  0E00               	movlw	0
 10360  00431E  6E2A               	movwf	turnRight@i^0,c
 10361  004320  EF9C  F021         	goto	l341
 10362  004324                     l4633:
 10363  004324  0E15               	movlw	21
 10364  004326  6E25               	movwf	??_turnRight^0,c
 10365  004328  0EC6               	movlw	198
 10366  00432A                     u6097:
 10367  00432A  2EE8               	decfsz	wreg,f,c
 10368  00432C  D7FE               	bra	u6097
 10369  00432E  2E25               	decfsz	??_turnRight^0,f,c
 10370  004330  D7FC               	bra	u6097
 10371  004332  D000               	nop2	
 10372  004334  4A2A               	infsnz	turnRight@i^0,f,c
 10373  004336  2A2B               	incf	(turnRight@i+1)^0,f,c
 10374  004338                     l341:
 10375  004338  5028               	movf	turnRight@delay_180^0,w,c
 10376  00433A  5C2A               	subwf	turnRight@i^0,w,c
 10377  00433C  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10378  00433E  582B               	subwfb	(turnRight@i+1)^0,w,c
 10379  004340  A0D8               	btfss	status,0,c
 10380  004342  EFA5  F021         	goto	u4671
 10381  004346  EFA7  F021         	goto	u4670
 10382  00434A                     u4671:
 10383  00434A  EF92  F021         	goto	l4633
 10384  00434E                     u4670:
 10385  00434E                     l4637:
 10386                           
 10387                           ;dc_motor.c: 139:     if (angle_right == 135){
 10388  00434E  0E87               	movlw	135
 10389  004350  1824               	xorwf	turnRight@angle_right^0,w,c
 10390  004352  A4D8               	btfss	status,2,c
 10391  004354  EFAE  F021         	goto	u4681
 10392  004358  EFB0  F021         	goto	u4680
 10393  00435C                     u4681:
 10394  00435C  EFCD  F021         	goto	l4645
 10395  004360                     u4680:
 10396  004360                     
 10397                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10398  004360  0E00               	movlw	0
 10399  004362  6E2D               	movwf	(turnRight@i_1353+1)^0,c
 10400  004364  0E00               	movlw	0
 10401  004366  6E2C               	movwf	turnRight@i_1353^0,c
 10402  004368  EFC0  F021         	goto	l345
 10403  00436C                     l4641:
 10404  00436C  0E15               	movlw	21
 10405  00436E  6E25               	movwf	??_turnRight^0,c
 10406  004370  0EC6               	movlw	198
 10407  004372                     u6107:
 10408  004372  2EE8               	decfsz	wreg,f,c
 10409  004374  D7FE               	bra	u6107
 10410  004376  2E25               	decfsz	??_turnRight^0,f,c
 10411  004378  D7FC               	bra	u6107
 10412  00437A  D000               	nop2	
 10413  00437C  4A2C               	infsnz	turnRight@i_1353^0,f,c
 10414  00437E  2A2D               	incf	(turnRight@i_1353+1)^0,f,c
 10415  004380                     l345:
 10416  004380  5026               	movf	turnRight@delay_135^0,w,c
 10417  004382  5C2C               	subwf	turnRight@i_1353^0,w,c
 10418  004384  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10419  004386  582D               	subwfb	(turnRight@i_1353+1)^0,w,c
 10420  004388  A0D8               	btfss	status,0,c
 10421  00438A  EFC9  F021         	goto	u4691
 10422  00438E  EFCB  F021         	goto	u4690
 10423  004392                     u4691:
 10424  004392  EFB6  F021         	goto	l4641
 10425  004396                     u4690:
 10426  004396  EFE8  F021         	goto	l4651
 10427  00439A                     l4645:
 10428                           
 10429                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10430  00439A  0E00               	movlw	0
 10431  00439C  6E2F               	movwf	(turnRight@i_1354+1)^0,c
 10432  00439E  0E00               	movlw	0
 10433  0043A0  6E2E               	movwf	turnRight@i_1354^0,c
 10434  0043A2  EFDD  F021         	goto	l349
 10435  0043A6                     l4647:
 10436  0043A6  0E15               	movlw	21
 10437  0043A8  6E25               	movwf	??_turnRight^0,c
 10438  0043AA  0EC6               	movlw	198
 10439  0043AC                     u6117:
 10440  0043AC  2EE8               	decfsz	wreg,f,c
 10441  0043AE  D7FE               	bra	u6117
 10442  0043B0  2E25               	decfsz	??_turnRight^0,f,c
 10443  0043B2  D7FC               	bra	u6117
 10444  0043B4  D000               	nop2	
 10445  0043B6  4A2E               	infsnz	turnRight@i_1354^0,f,c
 10446  0043B8  2A2F               	incf	(turnRight@i_1354+1)^0,f,c
 10447  0043BA                     l349:
 10448  0043BA  5030               	movf	turnRight@delay^0,w,c
 10449  0043BC  5C2E               	subwf	turnRight@i_1354^0,w,c
 10450  0043BE  5031               	movf	(turnRight@delay+1)^0,w,c
 10451  0043C0  582F               	subwfb	(turnRight@i_1354+1)^0,w,c
 10452  0043C2  A0D8               	btfss	status,0,c
 10453  0043C4  EFE6  F021         	goto	u4701
 10454  0043C8  EFE8  F021         	goto	u4700
 10455  0043CC                     u4701:
 10456  0043CC  EFD3  F021         	goto	l4647
 10457  0043D0                     u4700:
 10458  0043D0                     l4651:
 10459                           
 10460                           ;dc_motor.c: 145:     stop(mL,mR);
 10461  0043D0  C020  F01A         	movff	turnRight@mL,stop@mL
 10462  0043D4  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10463  0043D8  C022  F01C         	movff	turnRight@mR,stop@mR
 10464  0043DC  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10465  0043E0  EC55  F027         	call	_stop	;wreg free
 10466  0043E4  0012               	return		;funcret
 10467  0043E6                     __end_of_turnRight:
 10468                           	callstack 0
 10469                           
 10470 ;; *************** function _turnLeft *****************
 10471 ;; Defined at:
 10472 ;;		line 95 in file "dc_motor.c"
 10473 ;; Parameters:    Size  Location     Type
 10474 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10475 ;;		 -> main@motorL(10), 
 10476 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10477 ;;		 -> main@motorR(10), 
 10478 ;;  angle_left      1   35[COMRAM] unsigned char 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  i               2   45[COMRAM] unsigned int 
 10481 ;;  i               2   43[COMRAM] unsigned int 
 10482 ;;  i               2   41[COMRAM] unsigned int 
 10483 ;;  delay           2   47[COMRAM] unsigned int 
 10484 ;;  delay_180       2   39[COMRAM] unsigned int 
 10485 ;;  delay_135       2   37[COMRAM] unsigned int 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10495 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;Total ram usage:       18 bytes
 10500 ;; Hardware stack levels used: 1
 10501 ;; Hardware stack levels required when called: 4
 10502 ;; This function calls:
 10503 ;;		_setMotorPWM
 10504 ;;		_stop
 10505 ;; This function is called by:
 10506 ;;		_action
 10507 ;;		_goback
 10508 ;;		_test_action
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511                           
 10512                           	psect	text49
 10513  0043E6                     __ptext49:
 10514                           	callstack 0
 10515  0043E6                     _turnLeft:
 10516                           	callstack 25
 10517  0043E6                     
 10518                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10519  0043E6  EE20 F001          	lfsr	2,1
 10520  0043EA  5020               	movf	turnLeft@mL^0,w,c
 10521  0043EC  26D9               	addwf	fsr2l,f,c
 10522  0043EE  5021               	movf	(turnLeft@mL+1)^0,w,c
 10523  0043F0  22DA               	addwfc	fsr2h,f,c
 10524  0043F2  0E01               	movlw	1
 10525  0043F4  6EDF               	movwf	indf2,c
 10526                           
 10527                           ;dc_motor.c: 98:       mR->direction=1;
 10528  0043F6  EE20 F001          	lfsr	2,1
 10529  0043FA  5022               	movf	turnLeft@mR^0,w,c
 10530  0043FC  26D9               	addwf	fsr2l,f,c
 10531  0043FE  5023               	movf	(turnLeft@mR+1)^0,w,c
 10532  004400  22DA               	addwfc	fsr2h,f,c
 10533  004402  0E01               	movlw	1
 10534  004404  6EDF               	movwf	indf2,c
 10535                           
 10536                           ;dc_motor.c: 99:       while (mR->power <25){
 10537  004406  EF24  F022         	goto	l4579
 10538  00440A                     l4571:
 10539                           
 10540                           ;dc_motor.c: 100:         mR->power += 5;
 10541  00440A  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10542  00440E  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10543  004412  0E05               	movlw	5
 10544  004414  26DF               	addwf	indf2,f,c
 10545                           
 10546                           ;dc_motor.c: 101:         mL->power = 0;
 10547  004416  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10548  00441A  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10549  00441E  0E00               	movlw	0
 10550  004420  6EDF               	movwf	indf2,c
 10551  004422                     
 10552                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10553  004422  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10554  004426  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10555  00442A  EC64  F01B         	call	_setMotorPWM	;wreg free
 10556  00442E                     
 10557                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10558  00442E  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10559  004432  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10560  004436  EC64  F01B         	call	_setMotorPWM	;wreg free
 10561  00443A                     
 10562                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10563  00443A  0ED0               	movlw	208
 10564  00443C  6E25               	movwf	??_turnLeft^0,c
 10565  00443E  0ECA               	movlw	202
 10566  004440                     u6127:
 10567  004440  2EE8               	decfsz	wreg,f,c
 10568  004442  D7FE               	bra	u6127
 10569  004444  2E25               	decfsz	??_turnLeft^0,f,c
 10570  004446  D7FC               	bra	u6127
 10571  004448                     l4579:
 10572                           
 10573                           ;dc_motor.c: 99:       while (mR->power <25){
 10574  004448  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10575  00444C  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10576  004450  0E18               	movlw	24
 10577  004452  64DF               	cpfsgt	indf2,c
 10578  004454  EF2E  F022         	goto	u4591
 10579  004458  EF30  F022         	goto	u4590
 10580  00445C                     u4591:
 10581  00445C  EF05  F022         	goto	l4571
 10582  004460                     u4590:
 10583  004460                     
 10584                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 10585  004460  5024               	movf	turnLeft@angle_left^0,w,c
 10586  004462  0100               	movlb	0	; () banked
 10587  004464  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10588  004466  CFF3 F030          	movff	prodl,turnLeft@delay
 10589  00446A  CFF4 F031          	movff	prodh,turnLeft@delay+1
 10590  00446E                     
 10591                           ; BSR set to: 0
 10592  00446E  0E0A               	movlw	10
 10593  004470  2430               	addwf	turnLeft@delay^0,w,c
 10594  004472  6E26               	movwf	turnLeft@delay_135^0,c
 10595  004474  0E00               	movlw	0
 10596  004476  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10597  004478  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 10598  00447A                     
 10599                           ; BSR set to: 0
 10600  00447A  0E14               	movlw	20
 10601  00447C  2430               	addwf	turnLeft@delay^0,w,c
 10602  00447E  6E28               	movwf	turnLeft@delay_180^0,c
 10603  004480  0E00               	movlw	0
 10604  004482  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10605  004484  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 10606  004486                     
 10607                           ; BSR set to: 0
 10608                           ;dc_motor.c: 109:     if (angle_left == 180){
 10609  004486  0EB4               	movlw	180
 10610  004488  1824               	xorwf	turnLeft@angle_left^0,w,c
 10611  00448A  A4D8               	btfss	status,2,c
 10612  00448C  EF4A  F022         	goto	u4601
 10613  004490  EF4C  F022         	goto	u4600
 10614  004494                     u4601:
 10615  004494  EF67  F022         	goto	l4595
 10616  004498                     u4600:
 10617  004498                     
 10618                           ; BSR set to: 0
 10619                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10620  004498  0E00               	movlw	0
 10621  00449A  6E2B               	movwf	(turnLeft@i+1)^0,c
 10622  00449C  0E00               	movlw	0
 10623  00449E  6E2A               	movwf	turnLeft@i^0,c
 10624  0044A0  EF5C  F022         	goto	l323
 10625  0044A4                     l4591:
 10626  0044A4  0E15               	movlw	21
 10627  0044A6  6E25               	movwf	??_turnLeft^0,c
 10628  0044A8  0EC6               	movlw	198
 10629  0044AA                     u6137:
 10630  0044AA  2EE8               	decfsz	wreg,f,c
 10631  0044AC  D7FE               	bra	u6137
 10632  0044AE  2E25               	decfsz	??_turnLeft^0,f,c
 10633  0044B0  D7FC               	bra	u6137
 10634  0044B2  D000               	nop2	
 10635  0044B4  4A2A               	infsnz	turnLeft@i^0,f,c
 10636  0044B6  2A2B               	incf	(turnLeft@i+1)^0,f,c
 10637  0044B8                     l323:
 10638  0044B8  5028               	movf	turnLeft@delay_180^0,w,c
 10639  0044BA  5C2A               	subwf	turnLeft@i^0,w,c
 10640  0044BC  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 10641  0044BE  582B               	subwfb	(turnLeft@i+1)^0,w,c
 10642  0044C0  A0D8               	btfss	status,0,c
 10643  0044C2  EF65  F022         	goto	u4611
 10644  0044C6  EF67  F022         	goto	u4610
 10645  0044CA                     u4611:
 10646  0044CA  EF52  F022         	goto	l4591
 10647  0044CE                     u4610:
 10648  0044CE                     l4595:
 10649                           
 10650                           ;dc_motor.c: 112:     if (angle_left == 135){
 10651  0044CE  0E87               	movlw	135
 10652  0044D0  1824               	xorwf	turnLeft@angle_left^0,w,c
 10653  0044D2  A4D8               	btfss	status,2,c
 10654  0044D4  EF6E  F022         	goto	u4621
 10655  0044D8  EF70  F022         	goto	u4620
 10656  0044DC                     u4621:
 10657  0044DC  EF8D  F022         	goto	l4603
 10658  0044E0                     u4620:
 10659  0044E0                     
 10660                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10661  0044E0  0E00               	movlw	0
 10662  0044E2  6E2D               	movwf	(turnLeft@i_1328+1)^0,c
 10663  0044E4  0E00               	movlw	0
 10664  0044E6  6E2C               	movwf	turnLeft@i_1328^0,c
 10665  0044E8  EF80  F022         	goto	l327
 10666  0044EC                     l4599:
 10667  0044EC  0E15               	movlw	21
 10668  0044EE  6E25               	movwf	??_turnLeft^0,c
 10669  0044F0  0EC6               	movlw	198
 10670  0044F2                     u6147:
 10671  0044F2  2EE8               	decfsz	wreg,f,c
 10672  0044F4  D7FE               	bra	u6147
 10673  0044F6  2E25               	decfsz	??_turnLeft^0,f,c
 10674  0044F8  D7FC               	bra	u6147
 10675  0044FA  D000               	nop2	
 10676  0044FC  4A2C               	infsnz	turnLeft@i_1328^0,f,c
 10677  0044FE  2A2D               	incf	(turnLeft@i_1328+1)^0,f,c
 10678  004500                     l327:
 10679  004500  5026               	movf	turnLeft@delay_135^0,w,c
 10680  004502  5C2C               	subwf	turnLeft@i_1328^0,w,c
 10681  004504  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 10682  004506  582D               	subwfb	(turnLeft@i_1328+1)^0,w,c
 10683  004508  A0D8               	btfss	status,0,c
 10684  00450A  EF89  F022         	goto	u4631
 10685  00450E  EF8B  F022         	goto	u4630
 10686  004512                     u4631:
 10687  004512  EF76  F022         	goto	l4599
 10688  004516                     u4630:
 10689  004516  EFA8  F022         	goto	l4609
 10690  00451A                     l4603:
 10691                           
 10692                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10693  00451A  0E00               	movlw	0
 10694  00451C  6E2F               	movwf	(turnLeft@i_1329+1)^0,c
 10695  00451E  0E00               	movlw	0
 10696  004520  6E2E               	movwf	turnLeft@i_1329^0,c
 10697  004522  EF9D  F022         	goto	l331
 10698  004526                     l4605:
 10699  004526  0E15               	movlw	21
 10700  004528  6E25               	movwf	??_turnLeft^0,c
 10701  00452A  0EC6               	movlw	198
 10702  00452C                     u6157:
 10703  00452C  2EE8               	decfsz	wreg,f,c
 10704  00452E  D7FE               	bra	u6157
 10705  004530  2E25               	decfsz	??_turnLeft^0,f,c
 10706  004532  D7FC               	bra	u6157
 10707  004534  D000               	nop2	
 10708  004536  4A2E               	infsnz	turnLeft@i_1329^0,f,c
 10709  004538  2A2F               	incf	(turnLeft@i_1329+1)^0,f,c
 10710  00453A                     l331:
 10711  00453A  5030               	movf	turnLeft@delay^0,w,c
 10712  00453C  5C2E               	subwf	turnLeft@i_1329^0,w,c
 10713  00453E  5031               	movf	(turnLeft@delay+1)^0,w,c
 10714  004540  582F               	subwfb	(turnLeft@i_1329+1)^0,w,c
 10715  004542  A0D8               	btfss	status,0,c
 10716  004544  EFA6  F022         	goto	u4641
 10717  004548  EFA8  F022         	goto	u4640
 10718  00454C                     u4641:
 10719  00454C  EF93  F022         	goto	l4605
 10720  004550                     u4640:
 10721  004550                     l4609:
 10722                           
 10723                           ;dc_motor.c: 118:     stop(mL,mR);
 10724  004550  C020  F01A         	movff	turnLeft@mL,stop@mL
 10725  004554  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 10726  004558  C022  F01C         	movff	turnLeft@mR,stop@mR
 10727  00455C  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 10728  004560  EC55  F027         	call	_stop	;wreg free
 10729  004564  0012               	return		;funcret
 10730  004566                     __end_of_turnLeft:
 10731                           	callstack 0
 10732                           
 10733 ;; *************** function _reverse_square *****************
 10734 ;; Defined at:
 10735 ;;		line 189 in file "dc_motor.c"
 10736 ;; Parameters:    Size  Location     Type
 10737 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10738 ;;		 -> main@motorL(10), 
 10739 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10740 ;;		 -> main@motorR(10), 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10754 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10755 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10756 ;;Total ram usage:        6 bytes
 10757 ;; Hardware stack levels used: 1
 10758 ;; Hardware stack levels required when called: 5
 10759 ;; This function calls:
 10760 ;;		_fullSpeedBack
 10761 ;;		_stop
 10762 ;; This function is called by:
 10763 ;;		_action
 10764 ;;		_goback
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text50
 10769  0054DE                     __ptext50:
 10770                           	callstack 0
 10771  0054DE                     _reverse_square:
 10772                           	callstack 24
 10773  0054DE                     
 10774                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 10775  0054DE  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 10776  0054E2  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 10777  0054E6  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 10778  0054EA  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 10779  0054EE  ECF5  F026         	call	_fullSpeedBack	;wreg free
 10780  0054F2                     
 10781                           ;dc_motor.c: 191:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10782  0054F2  0E52               	movlw	82
 10783  0054F4  6E2B               	movwf	(??_reverse_square+1)^0,c
 10784  0054F6  0E2B               	movlw	43
 10785  0054F8  6E2A               	movwf	??_reverse_square^0,c
 10786  0054FA  0E00               	movlw	0
 10787  0054FC                     u6167:
 10788  0054FC  2EE8               	decfsz	wreg,f,c
 10789  0054FE  D7FE               	bra	u6167
 10790  005500  2E2A               	decfsz	??_reverse_square^0,f,c
 10791  005502  D7FC               	bra	u6167
 10792  005504  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 10793  005506  D7FA               	bra	u6167
 10794  005508  D000               	nop2	
 10795  00550A                     
 10796                           ;dc_motor.c: 192:     stop(mL,mR);
 10797  00550A  C026  F01A         	movff	reverse_square@mL,stop@mL
 10798  00550E  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 10799  005512  C028  F01C         	movff	reverse_square@mR,stop@mR
 10800  005516  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 10801  00551A  EC55  F027         	call	_stop	;wreg free
 10802  00551E  0012               	return		;funcret
 10803  005520                     __end_of_reverse_square:
 10804                           	callstack 0
 10805                           
 10806 ;; *************** function _fullSpeedBack *****************
 10807 ;; Defined at:
 10808 ;;		line 168 in file "dc_motor.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10811 ;;		 -> main@motorL(10), 
 10812 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10813 ;;		 -> main@motorR(10), 
 10814 ;; Auto vars:     Size  Location     Type
 10815 ;;		None
 10816 ;; Return value:  Size  Location     Type
 10817 ;;                  1    wreg      void 
 10818 ;; Registers used:
 10819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10820 ;; Tracked objects:
 10821 ;;		On entry : 0/0
 10822 ;;		On exit  : 0/0
 10823 ;;		Unchanged: 0/0
 10824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10828 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10829 ;;Total ram usage:        6 bytes
 10830 ;; Hardware stack levels used: 1
 10831 ;; Hardware stack levels required when called: 4
 10832 ;; This function calls:
 10833 ;;		_setMotorPWM
 10834 ;;		_stop
 10835 ;; This function is called by:
 10836 ;;		_short_reverse
 10837 ;;		_reverse_square
 10838 ;; This function uses a non-reentrant model
 10839 ;;
 10840                           
 10841                           	psect	text51
 10842  004DEA                     __ptext51:
 10843                           	callstack 0
 10844  004DEA                     _fullSpeedBack:
 10845                           	callstack 24
 10846  004DEA                     
 10847                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 10848  004DEA  EE20 F001          	lfsr	2,1
 10849  004DEE  5020               	movf	fullSpeedBack@mL^0,w,c
 10850  004DF0  26D9               	addwf	fsr2l,f,c
 10851  004DF2  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 10852  004DF4  22DA               	addwfc	fsr2h,f,c
 10853  004DF6  0E00               	movlw	0
 10854  004DF8  6EDF               	movwf	indf2,c
 10855                           
 10856                           ;dc_motor.c: 171:     mR->direction=0;
 10857  004DFA  EE20 F001          	lfsr	2,1
 10858  004DFE  5022               	movf	fullSpeedBack@mR^0,w,c
 10859  004E00  26D9               	addwf	fsr2l,f,c
 10860  004E02  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 10861  004E04  22DA               	addwfc	fsr2h,f,c
 10862  004E06  0E00               	movlw	0
 10863  004E08  6EDF               	movwf	indf2,c
 10864                           
 10865                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 10866  004E0A  EF26  F027         	goto	l4395
 10867  004E0E                     l4387:
 10868                           
 10869                           ;dc_motor.c: 173:         mL->power += 10;
 10870  004E0E  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10871  004E12  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10872  004E16  0E0A               	movlw	10
 10873  004E18  26DF               	addwf	indf2,f,c
 10874                           
 10875                           ;dc_motor.c: 174:         mR->power += 10;
 10876  004E1A  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10877  004E1E  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10878  004E22  0E0A               	movlw	10
 10879  004E24  26DF               	addwf	indf2,f,c
 10880  004E26                     
 10881                           ;dc_motor.c: 175:         setMotorPWM(mL);
 10882  004E26  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 10883  004E2A  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10884  004E2E  EC64  F01B         	call	_setMotorPWM	;wreg free
 10885  004E32                     
 10886                           ;dc_motor.c: 176:         setMotorPWM(mR);
 10887  004E32  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 10888  004E36  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10889  004E3A  EC64  F01B         	call	_setMotorPWM	;wreg free
 10890  004E3E                     
 10891                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10892  004E3E  0ED0               	movlw	208
 10893  004E40  6E24               	movwf	??_fullSpeedBack^0,c
 10894  004E42  0ECA               	movlw	202
 10895  004E44                     u6177:
 10896  004E44  2EE8               	decfsz	wreg,f,c
 10897  004E46  D7FE               	bra	u6177
 10898  004E48  2E24               	decfsz	??_fullSpeedBack^0,f,c
 10899  004E4A  D7FC               	bra	u6177
 10900  004E4C                     l4395:
 10901                           
 10902                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 10903  004E4C  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10904  004E50  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10905  004E54  0E32               	movlw	50
 10906  004E56  60DF               	cpfslt	indf2,c
 10907  004E58  EF30  F027         	goto	u4131
 10908  004E5C  EF32  F027         	goto	u4130
 10909  004E60                     u4131:
 10910  004E60  EF3E  F027         	goto	l4399
 10911  004E64                     u4130:
 10912  004E64  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10913  004E68  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10914  004E6C  0E31               	movlw	49
 10915  004E6E  64DF               	cpfsgt	indf2,c
 10916  004E70  EF3C  F027         	goto	u4141
 10917  004E74  EF3E  F027         	goto	u4140
 10918  004E78                     u4141:
 10919  004E78  EF07  F027         	goto	l4387
 10920  004E7C                     u4140:
 10921  004E7C                     l4399:
 10922                           
 10923                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10924  004E7C  0E29               	movlw	41
 10925  004E7E  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 10926  004E80  0E96               	movlw	150
 10927  004E82  6E24               	movwf	??_fullSpeedBack^0,c
 10928  004E84  0E7F               	movlw	127
 10929  004E86                     u6187:
 10930  004E86  2EE8               	decfsz	wreg,f,c
 10931  004E88  D7FE               	bra	u6187
 10932  004E8A  2E24               	decfsz	??_fullSpeedBack^0,f,c
 10933  004E8C  D7FC               	bra	u6187
 10934  004E8E  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10935  004E90  D7FA               	bra	u6187
 10936  004E92  F000               	nop	
 10937  004E94                     
 10938                           ;dc_motor.c: 180:     stop(mL,mR);
 10939  004E94  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 10940  004E98  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 10941  004E9C  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 10942  004EA0  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 10943  004EA4  EC55  F027         	call	_stop	;wreg free
 10944  004EA8  0012               	return		;funcret
 10945  004EAA                     __end_of_fullSpeedBack:
 10946                           	callstack 0
 10947                           
 10948 ;; *************** function _stop *****************
 10949 ;; Defined at:
 10950 ;;		line 82 in file "dc_motor.c"
 10951 ;; Parameters:    Size  Location     Type
 10952 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10953 ;;		 -> main@motorL(10), 
 10954 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10955 ;;		 -> main@motorR(10), 
 10956 ;; Auto vars:     Size  Location     Type
 10957 ;;		None
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1    wreg      void 
 10960 ;; Registers used:
 10961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10962 ;; Tracked objects:
 10963 ;;		On entry : 0/0
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10971 ;;Total ram usage:        6 bytes
 10972 ;; Hardware stack levels used: 1
 10973 ;; Hardware stack levels required when called: 3
 10974 ;; This function calls:
 10975 ;;		_setMotorPWM
 10976 ;; This function is called by:
 10977 ;;		_turnLeft
 10978 ;;		_turnRight
 10979 ;;		_fullSpeedBack
 10980 ;;		_short_reverse
 10981 ;;		_reverse_square
 10982 ;;		_main
 10983 ;;		_goback
 10984 ;;		_test_function
 10985 ;;		_fullSpeedAhead_test
 10986 ;;		_short_burst
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           	psect	text52
 10991  004EAA                     __ptext52:
 10992                           	callstack 0
 10993  004EAA                     _stop:
 10994                           	callstack 26
 10995  004EAA                     
 10996                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 10997  004EAA  EF8E  F027         	goto	l4157
 10998  004EAE                     l4143:
 10999                           
 11000                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11001  004EAE  C01A  FFD9         	movff	stop@mL,fsr2l
 11002  004EB2  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11003  004EB6  50DF               	movf	indf2,w,c
 11004  004EB8  B4D8               	btfsc	status,2,c
 11005  004EBA  EF61  F027         	goto	u3811
 11006  004EBE  EF63  F027         	goto	u3810
 11007  004EC2                     u3811:
 11008  004EC2  EF69  F027         	goto	l4147
 11009  004EC6                     u3810:
 11010  004EC6  C01A  FFD9         	movff	stop@mL,fsr2l
 11011  004ECA  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11012  004ECE  0E05               	movlw	5
 11013  004ED0  5EDF               	subwf	indf2,f,c
 11014  004ED2                     l4147:
 11015                           
 11016                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11017  004ED2  C01C  FFD9         	movff	stop@mR,fsr2l
 11018  004ED6  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11019  004EDA  50DF               	movf	indf2,w,c
 11020  004EDC  B4D8               	btfsc	status,2,c
 11021  004EDE  EF73  F027         	goto	u3821
 11022  004EE2  EF75  F027         	goto	u3820
 11023  004EE6                     u3821:
 11024  004EE6  EF7B  F027         	goto	l4151
 11025  004EEA                     u3820:
 11026  004EEA  C01C  FFD9         	movff	stop@mR,fsr2l
 11027  004EEE  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11028  004EF2  0E05               	movlw	5
 11029  004EF4  5EDF               	subwf	indf2,f,c
 11030  004EF6                     l4151:
 11031                           
 11032                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11033  004EF6  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11034  004EFA  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11035  004EFE  EC64  F01B         	call	_setMotorPWM	;wreg free
 11036  004F02                     
 11037                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11038  004F02  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11039  004F06  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11040  004F0A  EC64  F01B         	call	_setMotorPWM	;wreg free
 11041  004F0E                     
 11042                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11043  004F0E  0ED0               	movlw	208
 11044  004F10  6E1E               	movwf	??_stop^0,c
 11045  004F12  0ECA               	movlw	202
 11046  004F14                     u6197:
 11047  004F14  2EE8               	decfsz	wreg,f,c
 11048  004F16  D7FE               	bra	u6197
 11049  004F18  2E1E               	decfsz	??_stop^0,f,c
 11050  004F1A  D7FC               	bra	u6197
 11051  004F1C                     l4157:
 11052                           
 11053                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11054  004F1C  C01A  FFD9         	movff	stop@mL,fsr2l
 11055  004F20  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11056  004F24  50DF               	movf	indf2,w,c
 11057  004F26  A4D8               	btfss	status,2,c
 11058  004F28  EF98  F027         	goto	u3831
 11059  004F2C  EF9A  F027         	goto	u3830
 11060  004F30                     u3831:
 11061  004F30  EF57  F027         	goto	l4143
 11062  004F34                     u3830:
 11063  004F34  C01C  FFD9         	movff	stop@mR,fsr2l
 11064  004F38  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11065  004F3C  50DF               	movf	indf2,w,c
 11066  004F3E  A4D8               	btfss	status,2,c
 11067  004F40  EFA4  F027         	goto	u3841
 11068  004F44  EFA6  F027         	goto	u3840
 11069  004F48                     u3841:
 11070  004F48  EF57  F027         	goto	l4143
 11071  004F4C                     u3840:
 11072  004F4C                     
 11073                           ;dc_motor.c: 91:     _delay((unsigned long)((100)*(64000000/4000.0)));
 11074  004F4C  0E09               	movlw	9
 11075  004F4E  6E1F               	movwf	(??_stop+1)^0,c
 11076  004F50  0E1E               	movlw	30
 11077  004F52  6E1E               	movwf	??_stop^0,c
 11078  004F54  0EE4               	movlw	228
 11079  004F56                     u6207:
 11080  004F56  2EE8               	decfsz	wreg,f,c
 11081  004F58  D7FE               	bra	u6207
 11082  004F5A  2E1E               	decfsz	??_stop^0,f,c
 11083  004F5C  D7FC               	bra	u6207
 11084  004F5E  2E1F               	decfsz	(??_stop+1)^0,f,c
 11085  004F60  D7FA               	bra	u6207
 11086  004F62  D000               	nop2	
 11087  004F64  0012               	return		;funcret
 11088  004F66                     __end_of_stop:
 11089                           	callstack 0
 11090                           
 11091 ;; *************** function _fullSpeedAhead *****************
 11092 ;; Defined at:
 11093 ;;		line 149 in file "dc_motor.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11096 ;;		 -> main@motorL(10), 
 11097 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11098 ;;		 -> main@motorR(10), 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;		None
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  1    wreg      void 
 11103 ;; Registers used:
 11104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;Total ram usage:        5 bytes
 11115 ;; Hardware stack levels used: 1
 11116 ;; Hardware stack levels required when called: 3
 11117 ;; This function calls:
 11118 ;;		_setMotorPWM
 11119 ;; This function is called by:
 11120 ;;		_main
 11121 ;;		_goback
 11122 ;;		_test_function
 11123 ;;		_fullSpeedAhead_test
 11124 ;;		_short_burst
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text53
 11129  004F66                     __ptext53:
 11130                           	callstack 0
 11131  004F66                     _fullSpeedAhead:
 11132                           	callstack 26
 11133  004F66                     
 11134                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11135  004F66  EE20 F001          	lfsr	2,1
 11136  004F6A  501A               	movf	fullSpeedAhead@mL^0,w,c
 11137  004F6C  26D9               	addwf	fsr2l,f,c
 11138  004F6E  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11139  004F70  22DA               	addwfc	fsr2h,f,c
 11140  004F72  0E01               	movlw	1
 11141  004F74  6EDF               	movwf	indf2,c
 11142                           
 11143                           ;dc_motor.c: 152:     mR->direction=1;
 11144  004F76  EE20 F001          	lfsr	2,1
 11145  004F7A  501C               	movf	fullSpeedAhead@mR^0,w,c
 11146  004F7C  26D9               	addwf	fsr2l,f,c
 11147  004F7E  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11148  004F80  22DA               	addwfc	fsr2h,f,c
 11149  004F82  0E01               	movlw	1
 11150  004F84  6EDF               	movwf	indf2,c
 11151                           
 11152                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11153  004F86  EFE4  F027         	goto	l4663
 11154  004F8A                     l4655:
 11155                           
 11156                           ;dc_motor.c: 154:         mL->power += 10;
 11157  004F8A  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11158  004F8E  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11159  004F92  0E0A               	movlw	10
 11160  004F94  26DF               	addwf	indf2,f,c
 11161                           
 11162                           ;dc_motor.c: 155:         mR->power += 10;
 11163  004F96  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11164  004F9A  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11165  004F9E  0E0A               	movlw	10
 11166  004FA0  26DF               	addwf	indf2,f,c
 11167  004FA2                     
 11168                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11169  004FA2  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11170  004FA6  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11171  004FAA  EC64  F01B         	call	_setMotorPWM	;wreg free
 11172  004FAE                     
 11173                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11174  004FAE  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11175  004FB2  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11176  004FB6  EC64  F01B         	call	_setMotorPWM	;wreg free
 11177  004FBA                     
 11178                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11179  004FBA  0ED0               	movlw	208
 11180  004FBC  6E1E               	movwf	??_fullSpeedAhead^0,c
 11181  004FBE  0ECA               	movlw	202
 11182  004FC0                     u6217:
 11183  004FC0  2EE8               	decfsz	wreg,f,c
 11184  004FC2  D7FE               	bra	u6217
 11185  004FC4  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11186  004FC6  D7FC               	bra	u6217
 11187  004FC8                     l4663:
 11188                           
 11189                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11190  004FC8  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11191  004FCC  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11192  004FD0  0E14               	movlw	20
 11193  004FD2  60DF               	cpfslt	indf2,c
 11194  004FD4  EFEE  F027         	goto	u4711
 11195  004FD8  EFF0  F027         	goto	u4710
 11196  004FDC                     u4711:
 11197  004FDC  EFFC  F027         	goto	l360
 11198  004FE0                     u4710:
 11199  004FE0  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11200  004FE4  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11201  004FE8  0E13               	movlw	19
 11202  004FEA  64DF               	cpfsgt	indf2,c
 11203  004FEC  EFFA  F027         	goto	u4721
 11204  004FF0  EFFC  F027         	goto	u4720
 11205  004FF4                     u4721:
 11206  004FF4  EFC5  F027         	goto	l4655
 11207  004FF8                     u4720:
 11208  004FF8                     l360:
 11209  004FF8  0012               	return		;funcret
 11210  004FFA                     __end_of_fullSpeedAhead:
 11211                           	callstack 0
 11212                           
 11213 ;; *************** function _setMotorPWM *****************
 11214 ;; Defined at:
 11215 ;;		line 59 in file "dc_motor.c"
 11216 ;; Parameters:    Size  Location     Type
 11217 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11218 ;;		 -> main@motorR(10), main@motorL(10), 
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;  PWMduty         2   23[COMRAM] int 
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  1    wreg      void 
 11223 ;; Registers used:
 11224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11225 ;; Tracked objects:
 11226 ;;		On entry : 0/0
 11227 ;;		On exit  : 0/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11232 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11233 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11234 ;;Total ram usage:       11 bytes
 11235 ;; Hardware stack levels used: 1
 11236 ;; Hardware stack levels required when called: 2
 11237 ;; This function calls:
 11238 ;;		___awdiv
 11239 ;;		___wmul
 11240 ;; This function is called by:
 11241 ;;		_stop
 11242 ;;		_turnLeft
 11243 ;;		_turnRight
 11244 ;;		_fullSpeedAhead
 11245 ;;		_fullSpeedBack
 11246 ;; This function uses a non-reentrant model
 11247 ;;
 11248                           
 11249                           	psect	text54
 11250  0036C8                     __ptext54:
 11251                           	callstack 0
 11252  0036C8                     _setMotorPWM:
 11253                           	callstack 26
 11254  0036C8                     
 11255                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11256  0036C8  EE20 F001          	lfsr	2,1
 11257  0036CC  500F               	movf	setMotorPWM@m^0,w,c
 11258  0036CE  26D9               	addwf	fsr2l,f,c
 11259  0036D0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11260  0036D2  22DA               	addwfc	fsr2h,f,c
 11261  0036D4  50DF               	movf	indf2,w,c
 11262  0036D6  B4D8               	btfsc	status,2,c
 11263  0036D8  EF70  F01B         	goto	u3321
 11264  0036DC  EF72  F01B         	goto	u3320
 11265  0036E0                     u3321:
 11266  0036E0  EFA3  F01B         	goto	l3857
 11267  0036E4                     u3320:
 11268  0036E4                     
 11269                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11270  0036E4  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11271  0036E8  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11272  0036EC  50DF               	movf	indf2,w,c
 11273  0036EE  6E11               	movwf	??_setMotorPWM^0,c
 11274  0036F0  5011               	movf	??_setMotorPWM^0,w,c
 11275  0036F2  6E01               	movwf	___wmul@multiplier^0,c
 11276  0036F4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11277  0036F6  EE20 F007          	lfsr	2,7
 11278  0036FA  500F               	movf	setMotorPWM@m^0,w,c
 11279  0036FC  26D9               	addwf	fsr2l,f,c
 11280  0036FE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11281  003700  22DA               	addwfc	fsr2h,f,c
 11282  003702  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11283  003706  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11284  00370A  EC93  F02B         	call	___wmul	;wreg free
 11285  00370E  C001  F007         	movff	?___wmul,___awdiv@dividend
 11286  003712  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11287  003716  0E00               	movlw	0
 11288  003718  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11289  00371A  0E64               	movlw	100
 11290  00371C  6E09               	movwf	___awdiv@divisor^0,c
 11291  00371E  EC93  F026         	call	___awdiv	;wreg free
 11292  003722  EE20 F007          	lfsr	2,7
 11293  003726  500F               	movf	setMotorPWM@m^0,w,c
 11294  003728  26D9               	addwf	fsr2l,f,c
 11295  00372A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11296  00372C  22DA               	addwfc	fsr2h,f,c
 11297  00372E  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11298  003732  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11299  003736  5007               	movf	?___awdiv^0,w,c
 11300  003738  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11301  00373A  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11302  00373C  5008               	movf	(?___awdiv+1)^0,w,c
 11303  00373E  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11304  003740  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11305                           
 11306                           ;dc_motor.c: 66:  }
 11307  003742  EFC6  F01B         	goto	l3859
 11308  003746                     l3857:
 11309                           
 11310                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11311  003746  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11312  00374A  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11313  00374E  50DF               	movf	indf2,w,c
 11314  003750  6E11               	movwf	??_setMotorPWM^0,c
 11315  003752  5011               	movf	??_setMotorPWM^0,w,c
 11316  003754  6E01               	movwf	___wmul@multiplier^0,c
 11317  003756  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11318  003758  EE20 F007          	lfsr	2,7
 11319  00375C  500F               	movf	setMotorPWM@m^0,w,c
 11320  00375E  26D9               	addwf	fsr2l,f,c
 11321  003760  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11322  003762  22DA               	addwfc	fsr2h,f,c
 11323  003764  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11324  003768  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11325  00376C  EC93  F02B         	call	___wmul	;wreg free
 11326  003770  C001  F007         	movff	?___wmul,___awdiv@dividend
 11327  003774  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11328  003778  0E00               	movlw	0
 11329  00377A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11330  00377C  0E64               	movlw	100
 11331  00377E  6E09               	movwf	___awdiv@divisor^0,c
 11332  003780  EC93  F026         	call	___awdiv	;wreg free
 11333  003784  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11334  003788  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11335  00378C                     l3859:
 11336                           
 11337                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11338  00378C  EE20 F002          	lfsr	2,2
 11339  003790  500F               	movf	setMotorPWM@m^0,w,c
 11340  003792  26D9               	addwf	fsr2l,f,c
 11341  003794  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11342  003796  22DA               	addwfc	fsr2h,f,c
 11343  003798  CFDE F011          	movff	postinc2,??_setMotorPWM
 11344  00379C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11345  0037A0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11346  0037A4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11347  0037A8  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11348  0037AC                     
 11349                           ;dc_motor.c: 74:  if (m->direction){
 11350  0037AC  EE20 F001          	lfsr	2,1
 11351  0037B0  500F               	movf	setMotorPWM@m^0,w,c
 11352  0037B2  26D9               	addwf	fsr2l,f,c
 11353  0037B4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11354  0037B6  22DA               	addwfc	fsr2h,f,c
 11355  0037B8  50DF               	movf	indf2,w,c
 11356  0037BA  B4D8               	btfsc	status,2,c
 11357  0037BC  EFE2  F01B         	goto	u3331
 11358  0037C0  EFE4  F01B         	goto	u3330
 11359  0037C4                     u3331:
 11360  0037C4  EF19  F01C         	goto	l3865
 11361  0037C8                     u3330:
 11362  0037C8                     
 11363                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11364  0037C8  EE20 F004          	lfsr	2,4
 11365  0037CC  500F               	movf	setMotorPWM@m^0,w,c
 11366  0037CE  26D9               	addwf	fsr2l,f,c
 11367  0037D0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11368  0037D2  22DA               	addwfc	fsr2h,f,c
 11369  0037D4  CFDE F011          	movff	postinc2,??_setMotorPWM
 11370  0037D8  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11371  0037DC  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11372  0037E0  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11373  0037E4  EE10 F004          	lfsr	1,4
 11374  0037E8  500F               	movf	setMotorPWM@m^0,w,c
 11375  0037EA  26E1               	addwf	fsr1l,f,c
 11376  0037EC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11377  0037EE  22E2               	addwfc	fsr1h,f,c
 11378  0037F0  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11379  0037F4  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11380  0037F8  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11381  0037FC  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11382  003800  50E7               	movf	indf1,w,c
 11383  003802  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11384  003804  EE10 F006          	lfsr	1,6
 11385  003808  500F               	movf	setMotorPWM@m^0,w,c
 11386  00380A  26E1               	addwf	fsr1l,f,c
 11387  00380C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11388  00380E  22E2               	addwfc	fsr1h,f,c
 11389  003810  50E7               	movf	indf1,w,c
 11390  003812  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11391  003814  0E01               	movlw	1
 11392  003816  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11393  003818  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11394  00381A  EF11  F01C         	goto	u3344
 11395  00381E                     u3345:
 11396  00381E  90D8               	bcf	status,0,c
 11397  003820  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11398  003822                     u3344:
 11399  003822  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11400  003824  EF0F  F01C         	goto	u3345
 11401  003828  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11402  00382A  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11403  00382C  6EDF               	movwf	indf2,c
 11404                           
 11405                           ;dc_motor.c: 76:  } else {
 11406  00382E  EF4D  F01C         	goto	l308
 11407  003832                     l3865:
 11408                           
 11409                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11410  003832  EE20 F004          	lfsr	2,4
 11411  003836  500F               	movf	setMotorPWM@m^0,w,c
 11412  003838  26D9               	addwf	fsr2l,f,c
 11413  00383A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11414  00383C  22DA               	addwfc	fsr2h,f,c
 11415  00383E  CFDE F011          	movff	postinc2,??_setMotorPWM
 11416  003842  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11417  003846  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11418  00384A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11419  00384E  EE10 F004          	lfsr	1,4
 11420  003852  500F               	movf	setMotorPWM@m^0,w,c
 11421  003854  26E1               	addwf	fsr1l,f,c
 11422  003856  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11423  003858  22E2               	addwfc	fsr1h,f,c
 11424  00385A  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11425  00385E  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11426  003862  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11427  003866  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11428  00386A  50E7               	movf	indf1,w,c
 11429  00386C  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11430  00386E  EE10 F006          	lfsr	1,6
 11431  003872  500F               	movf	setMotorPWM@m^0,w,c
 11432  003874  26E1               	addwf	fsr1l,f,c
 11433  003876  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11434  003878  22E2               	addwfc	fsr1h,f,c
 11435  00387A  50E7               	movf	indf1,w,c
 11436  00387C  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11437  00387E  0E01               	movlw	1
 11438  003880  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11439  003882  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11440  003884  EF46  F01C         	goto	u3354
 11441  003888                     u3355:
 11442  003888  90D8               	bcf	status,0,c
 11443  00388A  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11444  00388C                     u3354:
 11445  00388C  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11446  00388E  EF44  F01C         	goto	u3355
 11447  003892  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11448  003894  0AFF               	xorlw	255
 11449  003896  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11450  003898  6EDF               	movwf	indf2,c
 11451  00389A                     l308:
 11452  00389A  0012               	return		;funcret
 11453  00389C                     __end_of_setMotorPWM:
 11454                           	callstack 0
 11455                           
 11456 ;; *************** function ___wmul *****************
 11457 ;; Defined at:
 11458 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11459 ;; Parameters:    Size  Location     Type
 11460 ;;  multiplier      2    0[COMRAM] unsigned int 
 11461 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11462 ;; Auto vars:     Size  Location     Type
 11463 ;;  product         2    4[COMRAM] unsigned int 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  2    0[COMRAM] unsigned int 
 11466 ;; Registers used:
 11467 ;;		wreg, status,2, status,0, prodl, prodh
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11476 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11477 ;;Total ram usage:        6 bytes
 11478 ;; Hardware stack levels used: 1
 11479 ;; Hardware stack levels required when called: 1
 11480 ;; This function calls:
 11481 ;;		Nothing
 11482 ;; This function is called by:
 11483 ;;		_setMotorPWM
 11484 ;; This function uses a non-reentrant model
 11485 ;;
 11486                           
 11487                           	psect	text55
 11488  005726                     __ptext55:
 11489                           	callstack 0
 11490  005726                     ___wmul:
 11491                           	callstack 26
 11492  005726  5001               	movf	___wmul@multiplier^0,w,c
 11493  005728  0203               	mulwf	___wmul@multiplicand^0,c
 11494  00572A  CFF3 F005          	movff	prodl,___wmul@product
 11495  00572E  CFF4 F006          	movff	prodh,___wmul@product+1
 11496  005732  5001               	movf	___wmul@multiplier^0,w,c
 11497  005734  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11498  005736  50F3               	movf	243,w,c
 11499  005738  2606               	addwf	(___wmul@product+1)^0,f,c
 11500  00573A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11501  00573C  0203               	mulwf	___wmul@multiplicand^0,c
 11502  00573E  50F3               	movf	243,w,c
 11503  005740  2606               	addwf	(___wmul@product+1)^0,f,c
 11504  005742  C005  F001         	movff	___wmul@product,?___wmul
 11505  005746  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11506  00574A  0012               	return		;funcret
 11507  00574C                     __end_of___wmul:
 11508                           	callstack 0
 11509                           
 11510 ;; *************** function ___awdiv *****************
 11511 ;; Defined at:
 11512 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11513 ;; Parameters:    Size  Location     Type
 11514 ;;  dividend        2    6[COMRAM] int 
 11515 ;;  divisor         2    8[COMRAM] int 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;  quotient        2   12[COMRAM] int 
 11518 ;;  sign            1   11[COMRAM] unsigned char 
 11519 ;;  counter         1   10[COMRAM] unsigned char 
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  2    6[COMRAM] int 
 11522 ;; Registers used:
 11523 ;;		wreg, status,2, status,0
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11530 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11532 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11533 ;;Total ram usage:        8 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 1
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_setMotorPWM
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text56
 11544  004D26                     __ptext56:
 11545                           	callstack 0
 11546  004D26                     ___awdiv:
 11547                           	callstack 26
 11548  004D26  0E00               	movlw	0
 11549  004D28  6E0C               	movwf	___awdiv@sign^0,c
 11550  004D2A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11551  004D2C  EF9C  F026         	goto	u3090
 11552  004D30  EF9A  F026         	goto	u3091
 11553  004D34                     u3091:
 11554  004D34  EFA2  F026         	goto	l3751
 11555  004D38                     u3090:
 11556  004D38  6C09               	negf	___awdiv@divisor^0,c
 11557  004D3A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11558  004D3C  B0D8               	btfsc	status,0,c
 11559  004D3E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11560  004D40  0E01               	movlw	1
 11561  004D42  6E0C               	movwf	___awdiv@sign^0,c
 11562  004D44                     l3751:
 11563  004D44  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11564  004D46  EFA9  F026         	goto	u3100
 11565  004D4A  EFA7  F026         	goto	u3101
 11566  004D4E                     u3101:
 11567  004D4E  EFAF  F026         	goto	l3757
 11568  004D52                     u3100:
 11569  004D52  6C07               	negf	___awdiv@dividend^0,c
 11570  004D54  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11571  004D56  B0D8               	btfsc	status,0,c
 11572  004D58  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11573  004D5A  0E01               	movlw	1
 11574  004D5C  1A0C               	xorwf	___awdiv@sign^0,f,c
 11575  004D5E                     l3757:
 11576  004D5E  0E00               	movlw	0
 11577  004D60  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11578  004D62  0E00               	movlw	0
 11579  004D64  6E0D               	movwf	___awdiv@quotient^0,c
 11580  004D66  5009               	movf	___awdiv@divisor^0,w,c
 11581  004D68  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11582  004D6A  B4D8               	btfsc	status,2,c
 11583  004D6C  EFBA  F026         	goto	u3111
 11584  004D70  EFBC  F026         	goto	u3110
 11585  004D74                     u3111:
 11586  004D74  EFE4  F026         	goto	l3779
 11587  004D78                     u3110:
 11588  004D78  0E01               	movlw	1
 11589  004D7A  6E0B               	movwf	___awdiv@counter^0,c
 11590  004D7C  EFC4  F026         	goto	l3765
 11591  004D80                     l3763:
 11592  004D80  90D8               	bcf	status,0,c
 11593  004D82  3609               	rlcf	___awdiv@divisor^0,f,c
 11594  004D84  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11595  004D86  2A0B               	incf	___awdiv@counter^0,f,c
 11596  004D88                     l3765:
 11597  004D88  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11598  004D8A  EFC9  F026         	goto	u3121
 11599  004D8E  EFCB  F026         	goto	u3120
 11600  004D92                     u3121:
 11601  004D92  EFC0  F026         	goto	l3763
 11602  004D96                     u3120:
 11603  004D96                     l3767:
 11604  004D96  90D8               	bcf	status,0,c
 11605  004D98  360D               	rlcf	___awdiv@quotient^0,f,c
 11606  004D9A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11607  004D9C  5009               	movf	___awdiv@divisor^0,w,c
 11608  004D9E  5C07               	subwf	___awdiv@dividend^0,w,c
 11609  004DA0  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11610  004DA2  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11611  004DA4  A0D8               	btfss	status,0,c
 11612  004DA6  EFD7  F026         	goto	u3131
 11613  004DAA  EFD9  F026         	goto	u3130
 11614  004DAE                     u3131:
 11615  004DAE  EFDE  F026         	goto	l3775
 11616  004DB2                     u3130:
 11617  004DB2  5009               	movf	___awdiv@divisor^0,w,c
 11618  004DB4  5E07               	subwf	___awdiv@dividend^0,f,c
 11619  004DB6  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11620  004DB8  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11621  004DBA  800D               	bsf	___awdiv@quotient^0,0,c
 11622  004DBC                     l3775:
 11623  004DBC  90D8               	bcf	status,0,c
 11624  004DBE  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11625  004DC0  3209               	rrcf	___awdiv@divisor^0,f,c
 11626  004DC2  2E0B               	decfsz	___awdiv@counter^0,f,c
 11627  004DC4  EFCB  F026         	goto	l3767
 11628  004DC8                     l3779:
 11629  004DC8  500C               	movf	___awdiv@sign^0,w,c
 11630  004DCA  B4D8               	btfsc	status,2,c
 11631  004DCC  EFEA  F026         	goto	u3141
 11632  004DD0  EFEC  F026         	goto	u3140
 11633  004DD4                     u3141:
 11634  004DD4  EFF0  F026         	goto	l3783
 11635  004DD8                     u3140:
 11636  004DD8  6C0D               	negf	___awdiv@quotient^0,c
 11637  004DDA  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11638  004DDC  B0D8               	btfsc	status,0,c
 11639  004DDE  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11640  004DE0                     l3783:
 11641  004DE0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11642  004DE4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11643  004DE8  0012               	return		;funcret
 11644  004DEA                     __end_of___awdiv:
 11645                           	callstack 0
 11646                           
 11647 ;; *************** function _color_predict *****************
 11648 ;; Defined at:
 11649 ;;		line 250 in file "color.c"
 11650 ;; Parameters:    Size  Location     Type
 11651 ;;  color           1    wreg     unsigned char 
 11652 ;; Auto vars:     Size  Location     Type
 11653 ;;  color           1  125[BANK0 ] unsigned char 
 11654 ;;  buf           100   25[BANK0 ] unsigned char [100]
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      void 
 11657 ;; Registers used:
 11658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11665 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11667 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11668 ;;Total ram usage:      101 bytes
 11669 ;; Hardware stack levels used: 1
 11670 ;; Hardware stack levels required when called: 9
 11671 ;; This function calls:
 11672 ;;		_sendStringSerial4
 11673 ;;		_sprintf
 11674 ;; This function is called by:
 11675 ;;		_color_data_collection
 11676 ;;		_main
 11677 ;;		_goback
 11678 ;;		_test_function
 11679 ;; This function uses a non-reentrant model
 11680 ;;
 11681                           
 11682                           	psect	text57
 11683  0056A6                     __ptext57:
 11684                           	callstack 0
 11685  0056A6                     _color_predict:
 11686                           	callstack 20
 11687                           
 11688                           ;incstack = 0
 11689                           ;color_predict@color stored from wreg
 11690  0056A6  0100               	movlb	0	; () banked
 11691  0056A8  6FDD               	movwf	color_predict@color& (0+255),b
 11692  0056AA                     
 11693                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 11694  0056AA  0E79               	movlw	low color_predict@buf
 11695  0056AC  0100               	movlb	0	; () banked
 11696  0056AE  6F60               	movwf	sprintf@s& (0+255),b
 11697  0056B0  0E00               	movlw	high color_predict@buf
 11698  0056B2  6F61               	movwf	(sprintf@s+1)& (0+255),b
 11699  0056B4  0E0D               	movlw	low (STR_1+8)
 11700  0056B6  6F62               	movwf	sprintf@fmt& (0+255),b
 11701  0056B8  0E0E               	movlw	high (STR_1+8)
 11702  0056BA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 11703  0056BC  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 11704  0056C0  6B65               	clrf	(?_sprintf+5)& (0+255),b
 11705  0056C2  ECFE  F028         	call	_sprintf	;wreg free
 11706  0056C6                     
 11707                           ;color.c: 254:     sendStringSerial4(buf);
 11708  0056C6  0E79               	movlw	low color_predict@buf
 11709  0056C8  6E02               	movwf	sendStringSerial4@string^0,c
 11710  0056CA  0E00               	movlw	high color_predict@buf
 11711  0056CC  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 11712  0056CE  EC3B  F02B         	call	_sendStringSerial4	;wreg free
 11713  0056D2  0012               	return		;funcret
 11714  0056D4                     __end_of_color_predict:
 11715                           	callstack 0
 11716                           
 11717 ;; *************** function _sprintf *****************
 11718 ;; Defined at:
 11719 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;  s               2    0[BANK0 ] PTR unsigned char 
 11722 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 11723 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 11724 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;  f              11   14[BANK0 ] struct _IO_FILE
 11727 ;;  ap              2   12[BANK0 ] PTR void [1]
 11728 ;;		 -> ?_sprintf(2), 
 11729 ;;  ret             2    0        int 
 11730 ;; Return value:  Size  Location     Type
 11731 ;;                  2    0[BANK0 ] int 
 11732 ;; Registers used:
 11733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11734 ;; Tracked objects:
 11735 ;;		On entry : 0/0
 11736 ;;		On exit  : 0/0
 11737 ;;		Unchanged: 0/0
 11738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11739 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11740 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11742 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11743 ;;Total ram usage:       25 bytes
 11744 ;; Hardware stack levels used: 1
 11745 ;; Hardware stack levels required when called: 8
 11746 ;; This function calls:
 11747 ;;		_vfprintf
 11748 ;; This function is called by:
 11749 ;;		_color_display
 11750 ;;		_color_predict
 11751 ;;		_check_color_reading
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           	psect	text58
 11756  0051FC                     __ptext58:
 11757                           	callstack 0
 11758  0051FC                     _sprintf:
 11759                           	callstack 20
 11760  0051FC  0E64               	movlw	low (?_sprintf+4)
 11761  0051FE  0100               	movlb	0	; () banked
 11762  005200  6F6C               	movwf	sprintf@ap& (0+255),b
 11763  005202  0E00               	movlw	high (?_sprintf+4)
 11764  005204  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 11765  005206  C060  F06E         	movff	sprintf@s,sprintf@f
 11766  00520A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 11767  00520E                     
 11768                           ; BSR set to: 0
 11769  00520E  0E00               	movlw	0
 11770  005210  6F72               	movwf	(sprintf@f+4)& (0+255),b
 11771  005212  0E00               	movlw	0
 11772  005214  6F71               	movwf	(sprintf@f+3)& (0+255),b
 11773  005216                     
 11774                           ; BSR set to: 0
 11775  005216  0E00               	movlw	0
 11776  005218  6F78               	movwf	(sprintf@f+10)& (0+255),b
 11777  00521A  0E00               	movlw	0
 11778  00521C  6F77               	movwf	(sprintf@f+9)& (0+255),b
 11779  00521E                     
 11780                           ; BSR set to: 0
 11781  00521E  0E6E               	movlw	low sprintf@f
 11782  005220  6E50               	movwf	vfprintf@fp^0,c
 11783  005222  0E00               	movlw	high sprintf@f
 11784  005224  6E51               	movwf	(vfprintf@fp+1)^0,c
 11785  005226  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 11786  00522A  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 11787  00522E  0E6C               	movlw	low sprintf@ap
 11788  005230  6E54               	movwf	vfprintf@ap^0,c
 11789  005232  0E00               	movlw	high sprintf@ap
 11790  005234  6E55               	movwf	(vfprintf@ap+1)^0,c
 11791  005236  EC73  F028         	call	_vfprintf	;wreg free
 11792  00523A  0100               	movlb	0	; () banked
 11793  00523C  5171               	movf	(sprintf@f+3)& (0+255),w,b
 11794  00523E  2560               	addwf	sprintf@s& (0+255),w,b
 11795  005240  6ED9               	movwf	fsr2l,c
 11796  005242  5172               	movf	(sprintf@f+4)& (0+255),w,b
 11797  005244  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 11798  005246  6EDA               	movwf	fsr2h,c
 11799  005248  0E00               	movlw	0
 11800  00524A  6EDF               	movwf	indf2,c
 11801  00524C                     
 11802                           ; BSR set to: 0
 11803  00524C  0012               	return		;funcret
 11804  00524E                     __end_of_sprintf:
 11805                           	callstack 0
 11806                           
 11807 ;; *************** function _vfprintf *****************
 11808 ;; Defined at:
 11809 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 11812 ;;		 -> sprintf@f(11), 
 11813 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 11814 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
 11815 ;;  ap              2   83[COMRAM] PTR PTR void 
 11816 ;;		 -> sprintf@ap(2), 
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 11819 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  2   79[COMRAM] int 
 11822 ;; Registers used:
 11823 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11829 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11832 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11833 ;;Total ram usage:        8 bytes
 11834 ;; Hardware stack levels used: 1
 11835 ;; Hardware stack levels required when called: 7
 11836 ;; This function calls:
 11837 ;;		_vfpfcnvrt
 11838 ;; This function is called by:
 11839 ;;		_sprintf
 11840 ;; This function uses a non-reentrant model
 11841 ;;
 11842                           
 11843                           	psect	text59
 11844  0050E6                     __ptext59:
 11845                           	callstack 0
 11846  0050E6                     _vfprintf:
 11847                           	callstack 20
 11848  0050E6                     
 11849                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 11850  0050E6  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 11851  0050EA  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 11852  0050EE                     
 11853                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 11854  0050EE  0E00               	movlw	0
 11855  0050F0  0101               	movlb	1	; () banked
 11856  0050F2  6F91               	movwf	(_nout+1)& (0+255),b
 11857  0050F4  0E00               	movlw	0
 11858  0050F6  6F90               	movwf	_nout& (0+255),b
 11859                           
 11860                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11861  0050F8  EF91  F028         	goto	l4339
 11862  0050FC                     l4337:
 11863                           
 11864                           ; BSR set to: 1
 11865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 11866  0050FC  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 11867  005100  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 11868  005104  0E56               	movlw	low vfprintf@cfmt
 11869  005106  6E42               	movwf	vfpfcnvrt@fmt^0,c
 11870  005108  0E00               	movlw	high vfprintf@cfmt
 11871  00510A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 11872  00510C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 11873  005110  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 11874  005114  EC03  F01E         	call	_vfpfcnvrt	;wreg free
 11875  005118  5040               	movf	?_vfpfcnvrt^0,w,c
 11876  00511A  0101               	movlb	1	; () banked
 11877  00511C  2790               	addwf	_nout& (0+255),f,b
 11878  00511E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 11879  005120  2391               	addwfc	(_nout+1)& (0+255),f,b
 11880  005122                     l4339:
 11881                           
 11882                           ; BSR set to: 1
 11883                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 11884  005122  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 11885  005126  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 11886  00512A                     	if	0	;tblptru may be non-zero
 11887  00512A                     	endif
 11888  00512A                     	if	0	;tblptru may be non-zero
 11889  00512A                     	endif
 11890  00512A  0008               	tblrd		*
 11891  00512C  50F5               	movf	tablat,w,c
 11892  00512E  0900               	iorlw	0
 11893  005130  A4D8               	btfss	status,2,c
 11894  005132  EF9D  F028         	goto	u4111
 11895  005136  EF9F  F028         	goto	u4110
 11896  00513A                     u4111:
 11897  00513A  EF7E  F028         	goto	l4337
 11898  00513E                     u4110:
 11899  00513E                     
 11900                           ; BSR set to: 1
 11901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 11902  00513E  C190  F050         	movff	_nout,?_vfprintf
 11903  005142  C191  F051         	movff	_nout+1,?_vfprintf+1
 11904  005146                     
 11905                           ; BSR set to: 1
 11906  005146  0012               	return		;funcret
 11907  005148                     __end_of_vfprintf:
 11908                           	callstack 0
 11909                           
 11910 ;; *************** function _vfpfcnvrt *****************
 11911 ;; Defined at:
 11912 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 11915 ;;		 -> sprintf@f(11), 
 11916 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 11917 ;;		 -> vfprintf@cfmt(2), 
 11918 ;;  ap              2   67[COMRAM] PTR PTR void 
 11919 ;;		 -> sprintf@ap(2), 
 11920 ;; Auto vars:     Size  Location     Type
 11921 ;;  ll              8   71[COMRAM] long long 
 11922 ;;  llu             8    0        unsigned long long 
 11923 ;;  f               4    0        unsigned long long 
 11924 ;;  vp              3    0        PTR void 
 11925 ;;  ct              3    0        unsigned char [3]
 11926 ;;  cp              3    0        PTR unsigned char 
 11927 ;;  i               2    0        int 
 11928 ;;  done            2    0        int 
 11929 ;;  c               1    0        unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  2   63[COMRAM] int 
 11932 ;; Registers used:
 11933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11939 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11940 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11942 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11943 ;;Total ram usage:       16 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 6
 11946 ;; This function calls:
 11947 ;;		_dtoa
 11948 ;;		_fputc
 11949 ;; This function is called by:
 11950 ;;		_vfprintf
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           	psect	text60
 11955  003C06                     __ptext60:
 11956                           	callstack 0
 11957  003C06                     _vfpfcnvrt:
 11958                           	callstack 20
 11959  003C06                     
 11960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11961  003C06  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11962  003C0A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11963  003C0E  CFDE FFF6          	movff	postinc2,tblptrl
 11964  003C12  CFDD FFF7          	movff	postdec2,tblptrh
 11965  003C16                     	if	0	;tblptru may be non-zero
 11966  003C16                     	endif
 11967  003C16                     	if	0	;tblptru may be non-zero
 11968  003C16                     	endif
 11969  003C16  0008               	tblrd		*
 11970  003C18  50F5               	movf	tablat,w,c
 11971  003C1A  0A25               	xorlw	37
 11972  003C1C  A4D8               	btfss	status,2,c
 11973  003C1E  EF13  F01E         	goto	u3751
 11974  003C22  EF15  F01E         	goto	u3750
 11975  003C26                     u3751:
 11976  003C26  EFC1  F01E         	goto	l4103
 11977  003C2A                     u3750:
 11978  003C2A                     
 11979                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11980  003C2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 11981  003C2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 11982  003C32  2ADE               	incf	postinc2,f,c
 11983  003C34  0E00               	movlw	0
 11984  003C36  22DD               	addwfc	postdec2,f,c
 11985  003C38                     
 11986                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11987  003C38  0E00               	movlw	0
 11988  003C3A  0101               	movlb	1	; () banked
 11989  003C3C  6F93               	movwf	(_width+1)& (0+255),b
 11990  003C3E  0E00               	movlw	0
 11991  003C40  6F92               	movwf	_width& (0+255),b
 11992  003C42  C192  F0F8         	movff	_width,_flags
 11993  003C46  C193  F0F9         	movff	_width+1,_flags+1
 11994  003C4A                     
 11995                           ; BSR set to: 1
 11996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11997  003C4A  6994               	setf	_prec& (0+255),b
 11998  003C4C  6995               	setf	(_prec+1)& (0+255),b
 11999  003C4E                     
 12000                           ; BSR set to: 1
 12001                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12002  003C4E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12003  003C52  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12004  003C56  CFDE FFF6          	movff	postinc2,tblptrl
 12005  003C5A  CFDD FFF7          	movff	postdec2,tblptrh
 12006  003C5E                     	if	0	;tblptru may be non-zero
 12007  003C5E                     	endif
 12008  003C5E                     	if	0	;tblptru may be non-zero
 12009  003C5E                     	endif
 12010  003C5E  0008               	tblrd		*
 12011  003C60  50F5               	movf	tablat,w,c
 12012  003C62  0A64               	xorlw	100
 12013  003C64  B4D8               	btfsc	status,2,c
 12014  003C66  EF37  F01E         	goto	u3761
 12015  003C6A  EF39  F01E         	goto	u3760
 12016  003C6E                     u3761:
 12017  003C6E  EF4B  F01E         	goto	l4081
 12018  003C72                     u3760:
 12019  003C72                     
 12020                           ; BSR set to: 1
 12021  003C72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12022  003C76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12023  003C7A  CFDE FFF6          	movff	postinc2,tblptrl
 12024  003C7E  CFDD FFF7          	movff	postdec2,tblptrh
 12025  003C82                     	if	0	;tblptru may be non-zero
 12026  003C82                     	endif
 12027  003C82                     	if	0	;tblptru may be non-zero
 12028  003C82                     	endif
 12029  003C82  0008               	tblrd		*
 12030  003C84  50F5               	movf	tablat,w,c
 12031  003C86  0A69               	xorlw	105
 12032  003C88  A4D8               	btfss	status,2,c
 12033  003C8A  EF49  F01E         	goto	u3771
 12034  003C8E  EF4B  F01E         	goto	u3770
 12035  003C92                     u3771:
 12036  003C92  EF8B  F01E         	goto	l4087
 12037  003C96                     u3770:
 12038  003C96                     l4081:
 12039                           
 12040                           ; BSR set to: 1
 12041                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12042  003C96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12043  003C9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12044  003C9E  2ADE               	incf	postinc2,f,c
 12045  003CA0  0E00               	movlw	0
 12046  003CA2  22DD               	addwfc	postdec2,f,c
 12047                           
 12048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12049  003CA4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12050  003CA8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12051  003CAC  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12052  003CB0  0E02               	movlw	2
 12053  003CB2  26DE               	addwf	postinc2,f,c
 12054  003CB4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12055  003CB8  0E00               	movlw	0
 12056  003CBA  22DD               	addwfc	postdec2,f,c
 12057  003CBC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12058  003CC0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12059  003CC4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12060  003CC8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12061  003CCC  0E00               	movlw	0
 12062  003CCE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12063  003CD0  0EFF               	movlw	-1
 12064  003CD2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12065  003CD4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12066  003CD6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12067  003CD8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12068  003CDA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12069  003CDC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12070  003CDE                     
 12071                           ; BSR set to: 1
 12072                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12073  003CDE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12074  003CE2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12075  003CE6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12076  003CEA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12077  003CEE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12078  003CF2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12079  003CF6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12080  003CFA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12081  003CFE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12082  003D02  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12083  003D06  ECD3  F014         	call	_dtoa	;wreg free
 12084  003D0A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12085  003D0E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12086  003D12  EFDC  F01E         	goto	l1525
 12087  003D16                     l4087:
 12088                           
 12089                           ; BSR set to: 1
 12090                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12091  003D16  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12092  003D1A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12093  003D1E  CFDE FFF6          	movff	postinc2,tblptrl
 12094  003D22  CFDD FFF7          	movff	postdec2,tblptrh
 12095  003D26                     	if	0	;tblptru may be non-zero
 12096  003D26                     	endif
 12097  003D26                     	if	0	;tblptru may be non-zero
 12098  003D26                     	endif
 12099  003D26  0008               	tblrd		*
 12100  003D28  50F5               	movf	tablat,w,c
 12101  003D2A  0A25               	xorlw	37
 12102  003D2C  A4D8               	btfss	status,2,c
 12103  003D2E  EF9B  F01E         	goto	u3781
 12104  003D32  EF9D  F01E         	goto	u3780
 12105  003D36                     u3781:
 12106  003D36  EFB4  F01E         	goto	l4097
 12107  003D3A                     u3780:
 12108  003D3A                     
 12109                           ; BSR set to: 1
 12110                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12111  003D3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12112  003D3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12113  003D42  2ADE               	incf	postinc2,f,c
 12114  003D44  0E00               	movlw	0
 12115  003D46  22DD               	addwfc	postdec2,f,c
 12116  003D48                     
 12117                           ; BSR set to: 1
 12118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12119  003D48  0E00               	movlw	0
 12120  003D4A  6E02               	movwf	(fputc@c+1)^0,c
 12121  003D4C  0E25               	movlw	37
 12122  003D4E  6E01               	movwf	fputc@c^0,c
 12123  003D50  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12124  003D54  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12125  003D58  EC68  F025         	call	_fputc	;wreg free
 12126  003D5C                     l4093:
 12127                           
 12128                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12129  003D5C  0E00               	movlw	0
 12130  003D5E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12131  003D60  0E01               	movlw	1
 12132  003D62  6E40               	movwf	?_vfpfcnvrt^0,c
 12133  003D64  EFDC  F01E         	goto	l1525
 12134  003D68                     l4097:
 12135                           
 12136                           ; BSR set to: 1
 12137                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12138  003D68  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12139  003D6C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12140  003D70  2ADE               	incf	postinc2,f,c
 12141  003D72  0E00               	movlw	0
 12142  003D74  22DD               	addwfc	postdec2,f,c
 12143  003D76                     
 12144                           ; BSR set to: 1
 12145                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12146  003D76  0E00               	movlw	0
 12147  003D78  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12148  003D7A  0E00               	movlw	0
 12149  003D7C  6E40               	movwf	?_vfpfcnvrt^0,c
 12150  003D7E  EFDC  F01E         	goto	l1525
 12151  003D82                     l4103:
 12152                           
 12153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12154  003D82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12155  003D86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12156  003D8A  CFDE FFF6          	movff	postinc2,tblptrl
 12157  003D8E  CFDD FFF7          	movff	postdec2,tblptrh
 12158  003D92                     	if	0	;tblptru may be non-zero
 12159  003D92                     	endif
 12160  003D92                     	if	0	;tblptru may be non-zero
 12161  003D92                     	endif
 12162  003D92  0008               	tblrd		*
 12163  003D94  50F5               	movf	tablat,w,c
 12164  003D96  6E01               	movwf	fputc@c^0,c
 12165  003D98  6A02               	clrf	(fputc@c+1)^0,c
 12166  003D9A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12167  003D9E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12168  003DA2  EC68  F025         	call	_fputc	;wreg free
 12169  003DA6                     
 12170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12171  003DA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12172  003DAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12173  003DAE  2ADE               	incf	postinc2,f,c
 12174  003DB0  0E00               	movlw	0
 12175  003DB2  22DD               	addwfc	postdec2,f,c
 12176  003DB4  EFAE  F01E         	goto	l4093
 12177  003DB8                     l1525:
 12178  003DB8  0012               	return		;funcret
 12179  003DBA                     __end_of_vfpfcnvrt:
 12180                           	callstack 0
 12181                           
 12182 ;; *************** function _dtoa *****************
 12183 ;; Defined at:
 12184 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12187 ;;		 -> sprintf@f(11), 
 12188 ;;  d               8   29[COMRAM] long long 
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;  n               8   53[COMRAM] long long 
 12191 ;;  i               2   61[COMRAM] int 
 12192 ;;  s               2   51[COMRAM] int 
 12193 ;;  w               2   49[COMRAM] int 
 12194 ;;  p               2   47[COMRAM] int 
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  2   27[COMRAM] int 
 12197 ;; Registers used:
 12198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12204 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12205 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12206 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12207 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;Total ram usage:       36 bytes
 12209 ;; Hardware stack levels used: 1
 12210 ;; Hardware stack levels required when called: 5
 12211 ;; This function calls:
 12212 ;;		___aodiv
 12213 ;;		___aomod
 12214 ;;		_abs
 12215 ;;		_pad
 12216 ;; This function is called by:
 12217 ;;		_vfpfcnvrt
 12218 ;; This function uses a non-reentrant model
 12219 ;;
 12220                           
 12221                           	psect	text61
 12222  0029A6                     __ptext61:
 12223                           	callstack 0
 12224  0029A6                     _dtoa:
 12225                           	callstack 20
 12226  0029A6                     
 12227                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12228  0029A6  C01E  F036         	movff	dtoa@d,dtoa@n
 12229  0029AA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12230  0029AE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12231  0029B2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12232  0029B6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12233  0029BA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12234  0029BE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12235  0029C2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12236  0029C6                     
 12237                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12238  0029C6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12239  0029C8  EFE8  F014         	goto	u3151
 12240  0029CC  EFEB  F014         	goto	u3150
 12241  0029D0                     u3151:
 12242  0029D0  0E01               	movlw	1
 12243  0029D2  EFEC  F014         	goto	u3160
 12244  0029D6                     u3150:
 12245  0029D6  0E00               	movlw	0
 12246  0029D8                     u3160:
 12247  0029D8  6E34               	movwf	dtoa@s^0,c
 12248  0029DA  6A35               	clrf	(dtoa@s+1)^0,c
 12249                           
 12250                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12251  0029DC  5034               	movf	dtoa@s^0,w,c
 12252  0029DE  1035               	iorwf	(dtoa@s+1)^0,w,c
 12253  0029E0  B4D8               	btfsc	status,2,c
 12254  0029E2  EFF5  F014         	goto	u3171
 12255  0029E6  EFF7  F014         	goto	u3170
 12256  0029EA                     u3171:
 12257  0029EA  EF07  F015         	goto	l3793
 12258  0029EE                     u3170:
 12259  0029EE                     
 12260                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12261  0029EE  1E3D               	comf	(dtoa@n+7)^0,f,c
 12262  0029F0  1E3C               	comf	(dtoa@n+6)^0,f,c
 12263  0029F2  1E3B               	comf	(dtoa@n+5)^0,f,c
 12264  0029F4  1E3A               	comf	(dtoa@n+4)^0,f,c
 12265  0029F6  1E39               	comf	(dtoa@n+3)^0,f,c
 12266  0029F8  1E38               	comf	(dtoa@n+2)^0,f,c
 12267  0029FA  1E37               	comf	(dtoa@n+1)^0,f,c
 12268  0029FC  6C36               	negf	dtoa@n^0,c
 12269  0029FE  0E00               	movlw	0
 12270  002A00  2237               	addwfc	(dtoa@n+1)^0,f,c
 12271  002A02  2238               	addwfc	(dtoa@n+2)^0,f,c
 12272  002A04  2239               	addwfc	(dtoa@n+3)^0,f,c
 12273  002A06  223A               	addwfc	(dtoa@n+4)^0,f,c
 12274  002A08  223B               	addwfc	(dtoa@n+5)^0,f,c
 12275  002A0A  223C               	addwfc	(dtoa@n+6)^0,f,c
 12276  002A0C  223D               	addwfc	(dtoa@n+7)^0,f,c
 12277  002A0E                     l3793:
 12278                           
 12279                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12280  002A0E  0101               	movlb	1	; () banked
 12281  002A10  BF95               	btfsc	(_prec+1)& (0+255),7,b
 12282  002A12  EF0D  F015         	goto	u3181
 12283  002A16  EF0F  F015         	goto	u3180
 12284  002A1A                     u3181:
 12285  002A1A  EF11  F015         	goto	l3797
 12286  002A1E                     u3180:
 12287  002A1E                     
 12288                           ; BSR set to: 1
 12289                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12290  002A1E  0100               	movlb	0	; () banked
 12291  002A20  93F8               	bcf	_flags& (0+255),1,b
 12292  002A22                     l3797:
 12293                           
 12294                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12295  002A22  0101               	movlb	1	; () banked
 12296  002A24  BF95               	btfsc	(_prec+1)& (0+255),7,b
 12297  002A26  EF1F  F015         	goto	u3190
 12298  002A2A  5195               	movf	(_prec+1)& (0+255),w,b
 12299  002A2C  E106               	bnz	u3191
 12300  002A2E  0594               	decf	_prec& (0+255),w,b
 12301  002A30  B0D8               	btfsc	status,0,c
 12302  002A32  EF1D  F015         	goto	u3191
 12303  002A36  EF1F  F015         	goto	u3190
 12304  002A3A                     u3191:
 12305  002A3A  EF25  F015         	goto	l1498
 12306  002A3E                     u3190:
 12307  002A3E                     
 12308                           ; BSR set to: 1
 12309  002A3E  0E00               	movlw	0
 12310  002A40  6E31               	movwf	(dtoa@p+1)^0,c
 12311  002A42  0E01               	movlw	1
 12312  002A44  6E30               	movwf	dtoa@p^0,c
 12313  002A46  EF29  F015         	goto	l1500
 12314  002A4A                     l1498:
 12315                           
 12316                           ; BSR set to: 1
 12317  002A4A  C194  F030         	movff	_prec,dtoa@p
 12318  002A4E  C195  F031         	movff	_prec+1,dtoa@p+1
 12319  002A52                     l1500:
 12320                           
 12321                           ; BSR set to: 1
 12322                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12323  002A52  C192  F032         	movff	_width,dtoa@w
 12324  002A56  C193  F033         	movff	_width+1,dtoa@w+1
 12325  002A5A                     
 12326                           ; BSR set to: 1
 12327                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12328  002A5A  5034               	movf	dtoa@s^0,w,c
 12329  002A5C  1035               	iorwf	(dtoa@s+1)^0,w,c
 12330  002A5E  A4D8               	btfss	status,2,c
 12331  002A60  EF34  F015         	goto	u3201
 12332  002A64  EF36  F015         	goto	u3200
 12333  002A68                     u3201:
 12334  002A68  EF3E  F015         	goto	l3805
 12335  002A6C                     u3200:
 12336  002A6C                     
 12337                           ; BSR set to: 1
 12338  002A6C  0100               	movlb	0	; () banked
 12339  002A6E  A5F8               	btfss	_flags& (0+255),2,b
 12340  002A70  EF3C  F015         	goto	u3211
 12341  002A74  EF3E  F015         	goto	u3210
 12342  002A78                     u3211:
 12343  002A78  EF41  F015         	goto	l3807
 12344  002A7C                     u3210:
 12345  002A7C                     l3805:
 12346                           
 12347                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12348  002A7C  0632               	decf	dtoa@w^0,f,c
 12349  002A7E  A0D8               	btfss	status,0,c
 12350  002A80  0633               	decf	(dtoa@w+1)^0,f,c
 12351  002A82                     l3807:
 12352                           
 12353                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12354  002A82  0E00               	movlw	0
 12355  002A84  6E3F               	movwf	(dtoa@i+1)^0,c
 12356  002A86  0E1F               	movlw	31
 12357  002A88  6E3E               	movwf	dtoa@i^0,c
 12358  002A8A                     
 12359                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12360  002A8A  0E00               	movlw	0
 12361  002A8C  0101               	movlb	1	; () banked
 12362  002A8E  6FBD               	movwf	(_dbuf+31)& (0+255),b
 12363                           
 12364                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12365  002A90  EFC6  F015         	goto	l3821
 12366  002A94                     l3811:
 12367                           
 12368                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12369  002A94  063E               	decf	dtoa@i^0,f,c
 12370  002A96  A0D8               	btfss	status,0,c
 12371  002A98  063F               	decf	(dtoa@i+1)^0,f,c
 12372  002A9A                     
 12373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12374  002A9A  0E9E               	movlw	low _dbuf
 12375  002A9C  243E               	addwf	dtoa@i^0,w,c
 12376  002A9E  6ED9               	movwf	fsr2l,c
 12377  002AA0  0E01               	movlw	high _dbuf
 12378  002AA2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12379  002AA4  6EDA               	movwf	fsr2h,c
 12380  002AA6  C036  F001         	movff	dtoa@n,___aomod@dividend
 12381  002AAA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12382  002AAE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12383  002AB2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12384  002AB6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12385  002ABA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12386  002ABE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12387  002AC2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12388  002AC6  0E0A               	movlw	10
 12389  002AC8  6E09               	movwf	___aomod@divisor^0,c
 12390  002ACA  0E00               	movlw	0
 12391  002ACC  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12392  002ACE  0E00               	movlw	0
 12393  002AD0  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12394  002AD2  0E00               	movlw	0
 12395  002AD4  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12396  002AD6  0E00               	movlw	0
 12397  002AD8  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12398  002ADA  0E00               	movlw	0
 12399  002ADC  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12400  002ADE  0E00               	movlw	0
 12401  002AE0  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12402  002AE2  0E00               	movlw	0
 12403  002AE4  6E10               	movwf	(___aomod@divisor+7)^0,c
 12404  002AE6  ECB3  F022         	call	___aomod	;wreg free
 12405  002AEA  C001  F026         	movff	?___aomod,??_dtoa
 12406  002AEE  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12407  002AF2  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12408  002AF6  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12409  002AFA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12410  002AFE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12411  002B02  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12412  002B06  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12413  002B0A  C026  F013         	movff	??_dtoa,abs@a
 12414  002B0E  C028  F014         	movff	??_dtoa+2,abs@a+1
 12415  002B12  EC90  F02A         	call	_abs	;wreg free
 12416  002B16  5013               	movf	?_abs^0,w,c
 12417  002B18  0F30               	addlw	48
 12418  002B1A  6EDF               	movwf	indf2,c
 12419  002B1C                     
 12420                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12421  002B1C  0630               	decf	dtoa@p^0,f,c
 12422  002B1E  A0D8               	btfss	status,0,c
 12423  002B20  0631               	decf	(dtoa@p+1)^0,f,c
 12424  002B22                     
 12425                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12426  002B22  0632               	decf	dtoa@w^0,f,c
 12427  002B24  A0D8               	btfss	status,0,c
 12428  002B26  0633               	decf	(dtoa@w+1)^0,f,c
 12429  002B28                     
 12430                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12431  002B28  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12432  002B2C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12433  002B30  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12434  002B34  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12435  002B38  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12436  002B3C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12437  002B40  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12438  002B44  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12439  002B48  0E0A               	movlw	10
 12440  002B4A  6E09               	movwf	___aodiv@divisor^0,c
 12441  002B4C  0E00               	movlw	0
 12442  002B4E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12443  002B50  0E00               	movlw	0
 12444  002B52  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12445  002B54  0E00               	movlw	0
 12446  002B56  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12447  002B58  0E00               	movlw	0
 12448  002B5A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12449  002B5C  0E00               	movlw	0
 12450  002B5E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12451  002B60  0E00               	movlw	0
 12452  002B62  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12453  002B64  0E00               	movlw	0
 12454  002B66  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12455  002B68  EC6F  F020         	call	___aodiv	;wreg free
 12456  002B6C  C001  F036         	movff	?___aodiv,dtoa@n
 12457  002B70  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12458  002B74  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12459  002B78  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12460  002B7C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12461  002B80  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12462  002B84  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12463  002B88  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12464  002B8C                     l3821:
 12465                           
 12466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12467  002B8C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12468  002B8E  EFD1  F015         	goto	u3221
 12469  002B92  503F               	movf	(dtoa@i+1)^0,w,c
 12470  002B94  E108               	bnz	u3220
 12471  002B96  043E               	decf	dtoa@i^0,w,c
 12472  002B98  A0D8               	btfss	status,0,c
 12473  002B9A  EFD1  F015         	goto	u3221
 12474  002B9E  EFD3  F015         	goto	u3220
 12475  002BA2                     u3221:
 12476  002BA2  EF04  F016         	goto	l3831
 12477  002BA6                     u3220:
 12478  002BA6  5036               	movf	dtoa@n^0,w,c
 12479  002BA8  1037               	iorwf	(dtoa@n+1)^0,w,c
 12480  002BAA  1038               	iorwf	(dtoa@n+2)^0,w,c
 12481  002BAC  1039               	iorwf	(dtoa@n+3)^0,w,c
 12482  002BAE  103A               	iorwf	(dtoa@n+4)^0,w,c
 12483  002BB0  103B               	iorwf	(dtoa@n+5)^0,w,c
 12484  002BB2  103C               	iorwf	(dtoa@n+6)^0,w,c
 12485  002BB4  103D               	iorwf	(dtoa@n+7)^0,w,c
 12486  002BB6  A4D8               	btfss	status,2,c
 12487  002BB8  EFE0  F015         	goto	u3231
 12488  002BBC  EFE2  F015         	goto	u3230
 12489  002BC0                     u3231:
 12490  002BC0  EF4A  F015         	goto	l3811
 12491  002BC4                     u3230:
 12492  002BC4  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12493  002BC6  EFEF  F015         	goto	u3240
 12494  002BCA  5031               	movf	(dtoa@p+1)^0,w,c
 12495  002BCC  E106               	bnz	u3241
 12496  002BCE  0430               	decf	dtoa@p^0,w,c
 12497  002BD0  B0D8               	btfsc	status,0,c
 12498  002BD2  EFED  F015         	goto	u3241
 12499  002BD6  EFEF  F015         	goto	u3240
 12500  002BDA                     u3241:
 12501  002BDA  EF4A  F015         	goto	l3811
 12502  002BDE                     u3240:
 12503  002BDE  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12504  002BE0  EFFA  F015         	goto	u3251
 12505  002BE4  5033               	movf	(dtoa@w+1)^0,w,c
 12506  002BE6  E108               	bnz	u3250
 12507  002BE8  0432               	decf	dtoa@w^0,w,c
 12508  002BEA  A0D8               	btfss	status,0,c
 12509  002BEC  EFFA  F015         	goto	u3251
 12510  002BF0  EFFC  F015         	goto	u3250
 12511  002BF4                     u3251:
 12512  002BF4  EF04  F016         	goto	l3831
 12513  002BF8                     u3250:
 12514  002BF8  0100               	movlb	0	; () banked
 12515  002BFA  B3F8               	btfsc	_flags& (0+255),1,b
 12516  002BFC  EF02  F016         	goto	u3261
 12517  002C00  EF04  F016         	goto	u3260
 12518  002C04                     u3261:
 12519  002C04  EF4A  F015         	goto	l3811
 12520  002C08                     u3260:
 12521  002C08                     l3831:
 12522                           
 12523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12524  002C08  5034               	movf	dtoa@s^0,w,c
 12525  002C0A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12526  002C0C  A4D8               	btfss	status,2,c
 12527  002C0E  EF0B  F016         	goto	u3271
 12528  002C12  EF0D  F016         	goto	u3270
 12529  002C16                     u3271:
 12530  002C16  EF15  F016         	goto	l3835
 12531  002C1A                     u3270:
 12532  002C1A  0100               	movlb	0	; () banked
 12533  002C1C  A5F8               	btfss	_flags& (0+255),2,b
 12534  002C1E  EF13  F016         	goto	u3281
 12535  002C22  EF15  F016         	goto	u3280
 12536  002C26                     u3281:
 12537  002C26  EF33  F016         	goto	l3845
 12538  002C2A                     u3280:
 12539  002C2A                     l3835:
 12540                           
 12541                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12542  002C2A  063E               	decf	dtoa@i^0,f,c
 12543  002C2C  A0D8               	btfss	status,0,c
 12544  002C2E  063F               	decf	(dtoa@i+1)^0,f,c
 12545  002C30                     
 12546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12547  002C30  5034               	movf	dtoa@s^0,w,c
 12548  002C32  1035               	iorwf	(dtoa@s+1)^0,w,c
 12549  002C34  A4D8               	btfss	status,2,c
 12550  002C36  EF1F  F016         	goto	u3291
 12551  002C3A  EF21  F016         	goto	u3290
 12552  002C3E                     u3291:
 12553  002C3E  EF27  F016         	goto	l3841
 12554  002C42                     u3290:
 12555  002C42  0E00               	movlw	0
 12556  002C44  6E2F               	movwf	(_dtoa$2870+1)^0,c
 12557  002C46  0E2B               	movlw	43
 12558  002C48  6E2E               	movwf	_dtoa$2870^0,c
 12559  002C4A  EF2B  F016         	goto	l3843
 12560  002C4E                     l3841:
 12561  002C4E  0E00               	movlw	0
 12562  002C50  6E2F               	movwf	(_dtoa$2870+1)^0,c
 12563  002C52  0E2D               	movlw	45
 12564  002C54  6E2E               	movwf	_dtoa$2870^0,c
 12565  002C56                     l3843:
 12566  002C56  0E9E               	movlw	low _dbuf
 12567  002C58  243E               	addwf	dtoa@i^0,w,c
 12568  002C5A  6ED9               	movwf	fsr2l,c
 12569  002C5C  0E01               	movlw	high _dbuf
 12570  002C5E  203F               	addwfc	(dtoa@i+1)^0,w,c
 12571  002C60  6EDA               	movwf	fsr2h,c
 12572  002C62  C02E  FFDF         	movff	_dtoa$2870,indf2
 12573  002C66                     l3845:
 12574                           
 12575                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12576  002C66  C01C  F011         	movff	dtoa@fp,pad@fp
 12577  002C6A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12578  002C6E  0E9E               	movlw	low _dbuf
 12579  002C70  243E               	addwf	dtoa@i^0,w,c
 12580  002C72  6E13               	movwf	pad@buf^0,c
 12581  002C74  0E01               	movlw	high _dbuf
 12582  002C76  203F               	addwfc	(dtoa@i+1)^0,w,c
 12583  002C78  6E14               	movwf	(pad@buf+1)^0,c
 12584  002C7A  C032  F015         	movff	dtoa@w,pad@p
 12585  002C7E  C033  F016         	movff	dtoa@w+1,pad@p+1
 12586  002C82  EC30  F026         	call	_pad	;wreg free
 12587  002C86  C011  F01C         	movff	?_pad,?_dtoa
 12588  002C8A  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12589  002C8E  0012               	return		;funcret
 12590  002C90                     __end_of_dtoa:
 12591                           	callstack 0
 12592                           
 12593 ;; *************** function _pad *****************
 12594 ;; Defined at:
 12595 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12598 ;;		 -> sprintf@f(11), 
 12599 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12600 ;;		 -> dbuf(32), 
 12601 ;;  p               2   20[COMRAM] int 
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;  w               2   25[COMRAM] int 
 12604 ;;  i               2   23[COMRAM] int 
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  2   16[COMRAM] int 
 12607 ;; Registers used:
 12608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12615 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12616 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12617 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12618 ;;Total ram usage:       11 bytes
 12619 ;; Hardware stack levels used: 1
 12620 ;; Hardware stack levels required when called: 4
 12621 ;; This function calls:
 12622 ;;		_fputc
 12623 ;;		_fputs
 12624 ;;		_strlen
 12625 ;; This function is called by:
 12626 ;;		_dtoa
 12627 ;; This function uses a non-reentrant model
 12628 ;;
 12629                           
 12630                           	psect	text62
 12631  004C60                     __ptext62:
 12632                           	callstack 0
 12633  004C60                     _pad:
 12634                           	callstack 20
 12635  004C60                     
 12636                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12637  004C60  0100               	movlb	0	; () banked
 12638  004C62  A1F8               	btfss	_flags& (0+255),0,b
 12639  004C64  EF36  F026         	goto	u3041
 12640  004C68  EF38  F026         	goto	u3040
 12641  004C6C                     u3041:
 12642  004C6C  EF42  F026         	goto	l3715
 12643  004C70                     u3040:
 12644  004C70                     
 12645                           ; BSR set to: 0
 12646                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12647  004C70  C013  F00A         	movff	pad@buf,fputs@s
 12648  004C74  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12649  004C78  C011  F00C         	movff	pad@fp,fputs@fp
 12650  004C7C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12651  004C80  ECEA  F029         	call	_fputs	;wreg free
 12652  004C84                     l3715:
 12653                           
 12654                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12655  004C84  BE16               	btfsc	(pad@p+1)^0,7,c
 12656  004C86  EF47  F026         	goto	u3051
 12657  004C8A  EF49  F026         	goto	u3050
 12658  004C8E                     u3051:
 12659  004C8E  EF4F  F026         	goto	l3719
 12660  004C92                     u3050:
 12661  004C92  C015  F01A         	movff	pad@p,pad@w
 12662  004C96  C016  F01B         	movff	pad@p+1,pad@w+1
 12663  004C9A  EF53  F026         	goto	l1487
 12664  004C9E                     l3719:
 12665  004C9E  0E00               	movlw	0
 12666  004CA0  6E1B               	movwf	(pad@w+1)^0,c
 12667  004CA2  0E00               	movlw	0
 12668  004CA4  6E1A               	movwf	pad@w^0,c
 12669  004CA6                     l1487:
 12670                           
 12671                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12672  004CA6  0E00               	movlw	0
 12673  004CA8  6E19               	movwf	(pad@i+1)^0,c
 12674  004CAA  0E00               	movlw	0
 12675  004CAC  6E18               	movwf	pad@i^0,c
 12676                           
 12677                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12678  004CAE  EF65  F026         	goto	l3725
 12679  004CB2                     l3721:
 12680                           
 12681                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12682  004CB2  0E00               	movlw	0
 12683  004CB4  6E02               	movwf	(fputc@c+1)^0,c
 12684  004CB6  0E20               	movlw	32
 12685  004CB8  6E01               	movwf	fputc@c^0,c
 12686  004CBA  C011  F003         	movff	pad@fp,fputc@fp
 12687  004CBE  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12688  004CC2  EC68  F025         	call	_fputc	;wreg free
 12689  004CC6                     
 12690                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12691  004CC6  4A18               	infsnz	pad@i^0,f,c
 12692  004CC8  2A19               	incf	(pad@i+1)^0,f,c
 12693  004CCA                     l3725:
 12694                           
 12695                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12696  004CCA  501A               	movf	pad@w^0,w,c
 12697  004CCC  5C18               	subwf	pad@i^0,w,c
 12698  004CCE  5019               	movf	(pad@i+1)^0,w,c
 12699  004CD0  0A80               	xorlw	128
 12700  004CD2  6E17               	movwf	??_pad^0,c
 12701  004CD4  501B               	movf	(pad@w+1)^0,w,c
 12702  004CD6  0A80               	xorlw	128
 12703  004CD8  5817               	subwfb	??_pad^0,w,c
 12704  004CDA  A0D8               	btfss	status,0,c
 12705  004CDC  EF72  F026         	goto	u3061
 12706  004CE0  EF74  F026         	goto	u3060
 12707  004CE4                     u3061:
 12708  004CE4  EF59  F026         	goto	l3721
 12709  004CE8                     u3060:
 12710  004CE8                     
 12711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12712  004CE8  0100               	movlb	0	; () banked
 12713  004CEA  B1F8               	btfsc	_flags& (0+255),0,b
 12714  004CEC  EF7A  F026         	goto	u3071
 12715  004CF0  EF7C  F026         	goto	u3070
 12716  004CF4                     u3071:
 12717  004CF4  EF86  F026         	goto	l3729
 12718  004CF8                     u3070:
 12719  004CF8                     
 12720                           ; BSR set to: 0
 12721                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12722  004CF8  C013  F00A         	movff	pad@buf,fputs@s
 12723  004CFC  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12724  004D00  C011  F00C         	movff	pad@fp,fputs@fp
 12725  004D04  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12726  004D08  ECEA  F029         	call	_fputs	;wreg free
 12727  004D0C                     l3729:
 12728                           
 12729                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12730  004D0C  C013  F001         	movff	pad@buf,strlen@s
 12731  004D10  C014  F002         	movff	pad@buf+1,strlen@s+1
 12732  004D14  EC06  F02B         	call	_strlen	;wreg free
 12733  004D18  501A               	movf	pad@w^0,w,c
 12734  004D1A  2401               	addwf	?_strlen^0,w,c
 12735  004D1C  6E11               	movwf	?_pad^0,c
 12736  004D1E  501B               	movf	(pad@w+1)^0,w,c
 12737  004D20  2002               	addwfc	(?_strlen+1)^0,w,c
 12738  004D22  6E12               	movwf	(?_pad+1)^0,c
 12739  004D24  0012               	return		;funcret
 12740  004D26                     __end_of_pad:
 12741                           	callstack 0
 12742                           
 12743 ;; *************** function _strlen *****************
 12744 ;; Defined at:
 12745 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12748 ;;		 -> dbuf(32), 
 12749 ;; Auto vars:     Size  Location     Type
 12750 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12751 ;;		 -> dbuf(32), 
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  2    0[COMRAM] unsigned int 
 12754 ;; Registers used:
 12755 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12764 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12765 ;;Total ram usage:        4 bytes
 12766 ;; Hardware stack levels used: 1
 12767 ;; Hardware stack levels required when called: 1
 12768 ;; This function calls:
 12769 ;;		Nothing
 12770 ;; This function is called by:
 12771 ;;		_pad
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text63
 12776  00560C                     __ptext63:
 12777                           	callstack 0
 12778  00560C                     _strlen:
 12779                           	callstack 22
 12780  00560C  C001  F003         	movff	strlen@s,strlen@a
 12781  005610  C002  F004         	movff	strlen@s+1,strlen@a+1
 12782  005614  EF0E  F02B         	goto	l3625
 12783  005618                     l3623:
 12784  005618  4A01               	infsnz	strlen@s^0,f,c
 12785  00561A  2A02               	incf	(strlen@s+1)^0,f,c
 12786  00561C                     l3625:
 12787  00561C  C001  FFD9         	movff	strlen@s,fsr2l
 12788  005620  C002  FFDA         	movff	strlen@s+1,fsr2h
 12789  005624  50DF               	movf	indf2,w,c
 12790  005626  A4D8               	btfss	status,2,c
 12791  005628  EF18  F02B         	goto	u2901
 12792  00562C  EF1A  F02B         	goto	u2900
 12793  005630                     u2901:
 12794  005630  EF0C  F02B         	goto	l3623
 12795  005634                     u2900:
 12796  005634  5003               	movf	strlen@a^0,w,c
 12797  005636  5C01               	subwf	strlen@s^0,w,c
 12798  005638  6E01               	movwf	?_strlen^0,c
 12799  00563A  5004               	movf	(strlen@a+1)^0,w,c
 12800  00563C  5802               	subwfb	(strlen@s+1)^0,w,c
 12801  00563E  6E02               	movwf	(?_strlen+1)^0,c
 12802  005640  0012               	return		;funcret
 12803  005642                     __end_of_strlen:
 12804                           	callstack 0
 12805                           
 12806 ;; *************** function _fputs *****************
 12807 ;; Defined at:
 12808 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 12809 ;; Parameters:    Size  Location     Type
 12810 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12811 ;;		 -> dbuf(32), 
 12812 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12813 ;;		 -> sprintf@f(11), 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;  i               2   14[COMRAM] int 
 12816 ;;  c               1   13[COMRAM] unsigned char 
 12817 ;; Return value:  Size  Location     Type
 12818 ;;                  2    9[COMRAM] int 
 12819 ;; Registers used:
 12820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12821 ;; Tracked objects:
 12822 ;;		On entry : 0/0
 12823 ;;		On exit  : 0/0
 12824 ;;		Unchanged: 0/0
 12825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12830 ;;Total ram usage:        7 bytes
 12831 ;; Hardware stack levels used: 1
 12832 ;; Hardware stack levels required when called: 3
 12833 ;; This function calls:
 12834 ;;		_fputc
 12835 ;; This function is called by:
 12836 ;;		_pad
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           	psect	text64
 12841  0053D4                     __ptext64:
 12842                           	callstack 0
 12843  0053D4                     _fputs:
 12844                           	callstack 20
 12845  0053D4  0E00               	movlw	0
 12846  0053D6  6E10               	movwf	(fputs@i+1)^0,c
 12847  0053D8  0E00               	movlw	0
 12848  0053DA  6E0F               	movwf	fputs@i^0,c
 12849  0053DC  EFFB  F029         	goto	l3619
 12850  0053E0                     l3615:
 12851  0053E0  C00E  F001         	movff	fputs@c,fputc@c
 12852  0053E4  6A02               	clrf	(fputc@c+1)^0,c
 12853  0053E6  C00C  F003         	movff	fputs@fp,fputc@fp
 12854  0053EA  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12855  0053EE  EC68  F025         	call	_fputc	;wreg free
 12856  0053F2  4A0F               	infsnz	fputs@i^0,f,c
 12857  0053F4  2A10               	incf	(fputs@i+1)^0,f,c
 12858  0053F6                     l3619:
 12859  0053F6  500F               	movf	fputs@i^0,w,c
 12860  0053F8  240A               	addwf	fputs@s^0,w,c
 12861  0053FA  6ED9               	movwf	fsr2l,c
 12862  0053FC  5010               	movf	(fputs@i+1)^0,w,c
 12863  0053FE  200B               	addwfc	(fputs@s+1)^0,w,c
 12864  005400  6EDA               	movwf	fsr2h,c
 12865  005402  50DF               	movf	indf2,w,c
 12866  005404  6E0E               	movwf	fputs@c^0,c
 12867  005406  500E               	movf	fputs@c^0,w,c
 12868  005408  A4D8               	btfss	status,2,c
 12869  00540A  EF09  F02A         	goto	u2891
 12870  00540E  EF0B  F02A         	goto	u2890
 12871  005412                     u2891:
 12872  005412  EFF0  F029         	goto	l3615
 12873  005416                     u2890:
 12874  005416  0012               	return		;funcret
 12875  005418                     __end_of_fputs:
 12876                           	callstack 0
 12877                           
 12878 ;; *************** function _fputc *****************
 12879 ;; Defined at:
 12880 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 12881 ;; Parameters:    Size  Location     Type
 12882 ;;  c               2    0[COMRAM] int 
 12883 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12884 ;;		 -> sprintf@f(11), 
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;		None
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  2    0[COMRAM] int 
 12889 ;; Registers used:
 12890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12896 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12898 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12899 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12900 ;;Total ram usage:        9 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; Hardware stack levels required when called: 2
 12903 ;; This function calls:
 12904 ;;		_putch
 12905 ;; This function is called by:
 12906 ;;		_pad
 12907 ;;		_vfpfcnvrt
 12908 ;;		_fputs
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912                           	psect	text65
 12913  004AD0                     __ptext65:
 12914                           	callstack 0
 12915  004AD0                     _fputc:
 12916                           	callstack 23
 12917  004AD0  5003               	movf	fputc@fp^0,w,c
 12918  004AD2  1004               	iorwf	(fputc@fp+1)^0,w,c
 12919  004AD4  B4D8               	btfsc	status,2,c
 12920  004AD6  EF6F  F025         	goto	u2851
 12921  004ADA  EF71  F025         	goto	u2850
 12922  004ADE                     u2851:
 12923  004ADE  EF7A  F025         	goto	l3603
 12924  004AE2                     u2850:
 12925  004AE2  5003               	movf	fputc@fp^0,w,c
 12926  004AE4  1004               	iorwf	(fputc@fp+1)^0,w,c
 12927  004AE6  A4D8               	btfss	status,2,c
 12928  004AE8  EF78  F025         	goto	u2861
 12929  004AEC  EF7A  F025         	goto	u2860
 12930  004AF0                     u2861:
 12931  004AF0  EF7F  F025         	goto	l3605
 12932  004AF4                     u2860:
 12933  004AF4                     l3603:
 12934  004AF4  5001               	movf	fputc@c^0,w,c
 12935  004AF6  EC67  F02C         	call	_putch
 12936  004AFA  EFCC  F025         	goto	l1551
 12937  004AFE                     l3605:
 12938  004AFE  EE20 F009          	lfsr	2,9
 12939  004B02  5003               	movf	fputc@fp^0,w,c
 12940  004B04  26D9               	addwf	fsr2l,f,c
 12941  004B06  5004               	movf	(fputc@fp+1)^0,w,c
 12942  004B08  22DA               	addwfc	fsr2h,f,c
 12943  004B0A  50DE               	movf	postinc2,w,c
 12944  004B0C  10DE               	iorwf	postinc2,w,c
 12945  004B0E  B4D8               	btfsc	status,2,c
 12946  004B10  EF8C  F025         	goto	u2871
 12947  004B14  EF8E  F025         	goto	u2870
 12948  004B18                     u2871:
 12949  004B18  EFA9  F025         	goto	l3609
 12950  004B1C                     u2870:
 12951  004B1C  EE20 F009          	lfsr	2,9
 12952  004B20  5003               	movf	fputc@fp^0,w,c
 12953  004B22  26D9               	addwf	fsr2l,f,c
 12954  004B24  5004               	movf	(fputc@fp+1)^0,w,c
 12955  004B26  22DA               	addwfc	fsr2h,f,c
 12956  004B28  EE10 F003          	lfsr	1,3
 12957  004B2C  5003               	movf	fputc@fp^0,w,c
 12958  004B2E  26E1               	addwf	fsr1l,f,c
 12959  004B30  5004               	movf	(fputc@fp+1)^0,w,c
 12960  004B32  22E2               	addwfc	fsr1h,f,c
 12961  004B34  50DE               	movf	postinc2,w,c
 12962  004B36  5CE6               	subwf	postinc1,w,c
 12963  004B38  50E6               	movf	postinc1,w,c
 12964  004B3A  0A80               	xorlw	128
 12965  004B3C  6E09               	movwf	(??_fputc+4)^0,c
 12966  004B3E  50DE               	movf	postinc2,w,c
 12967  004B40  0A80               	xorlw	128
 12968  004B42  5809               	subwfb	(??_fputc+4)^0,w,c
 12969  004B44  B0D8               	btfsc	status,0,c
 12970  004B46  EFA7  F025         	goto	u2881
 12971  004B4A  EFA9  F025         	goto	u2880
 12972  004B4E                     u2881:
 12973  004B4E  EFCC  F025         	goto	l1551
 12974  004B52                     u2880:
 12975  004B52                     l3609:
 12976  004B52  EE20 F003          	lfsr	2,3
 12977  004B56  5003               	movf	fputc@fp^0,w,c
 12978  004B58  26D9               	addwf	fsr2l,f,c
 12979  004B5A  5004               	movf	(fputc@fp+1)^0,w,c
 12980  004B5C  22DA               	addwfc	fsr2h,f,c
 12981  004B5E  CFDE F005          	movff	postinc2,??_fputc
 12982  004B62  CFDD F006          	movff	postdec2,??_fputc+1
 12983  004B66  C003  FFD9         	movff	fputc@fp,fsr2l
 12984  004B6A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12985  004B6E  CFDE F007          	movff	postinc2,??_fputc+2
 12986  004B72  CFDD F008          	movff	postdec2,??_fputc+3
 12987  004B76  5005               	movf	??_fputc^0,w,c
 12988  004B78  2407               	addwf	(??_fputc+2)^0,w,c
 12989  004B7A  6ED9               	movwf	fsr2l,c
 12990  004B7C  5006               	movf	(??_fputc+1)^0,w,c
 12991  004B7E  2008               	addwfc	(??_fputc+3)^0,w,c
 12992  004B80  6EDA               	movwf	fsr2h,c
 12993  004B82  C001  FFDF         	movff	fputc@c,indf2
 12994  004B86  EE20 F003          	lfsr	2,3
 12995  004B8A  5003               	movf	fputc@fp^0,w,c
 12996  004B8C  26D9               	addwf	fsr2l,f,c
 12997  004B8E  5004               	movf	(fputc@fp+1)^0,w,c
 12998  004B90  22DA               	addwfc	fsr2h,f,c
 12999  004B92  2ADE               	incf	postinc2,f,c
 13000  004B94  0E00               	movlw	0
 13001  004B96  22DD               	addwfc	postdec2,f,c
 13002  004B98                     l1551:
 13003  004B98  0012               	return		;funcret
 13004  004B9A                     __end_of_fputc:
 13005                           	callstack 0
 13006                           
 13007 ;; *************** function _putch *****************
 13008 ;; Defined at:
 13009 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13010 ;; Parameters:    Size  Location     Type
 13011 ;;  c               1    wreg     unsigned char 
 13012 ;; Auto vars:     Size  Location     Type
 13013 ;;  c               1    0[COMRAM] unsigned char 
 13014 ;; Return value:  Size  Location     Type
 13015 ;;                  1    wreg      void 
 13016 ;; Registers used:
 13017 ;;		wreg
 13018 ;; Tracked objects:
 13019 ;;		On entry : 0/0
 13020 ;;		On exit  : 0/0
 13021 ;;		Unchanged: 0/0
 13022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13027 ;;Total ram usage:        0 bytes
 13028 ;; Hardware stack levels used: 1
 13029 ;; Hardware stack levels required when called: 1
 13030 ;; This function calls:
 13031 ;;		Nothing
 13032 ;; This function is called by:
 13033 ;;		_fputc
 13034 ;; This function uses a non-reentrant model
 13035 ;;
 13036                           
 13037                           	psect	text66
 13038  0058CE                     __ptext66:
 13039                           	callstack 0
 13040  0058CE                     _putch:
 13041                           	callstack 23
 13042  0058CE  0012               	return		;funcret
 13043  0058D0                     __end_of_putch:
 13044                           	callstack 0
 13045                           
 13046 ;; *************** function _abs *****************
 13047 ;; Defined at:
 13048 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;  a               2   18[COMRAM] int 
 13051 ;; Auto vars:     Size  Location     Type
 13052 ;;		None
 13053 ;; Return value:  Size  Location     Type
 13054 ;;                  2   18[COMRAM] int 
 13055 ;; Registers used:
 13056 ;;		wreg, status,2, status,0
 13057 ;; Tracked objects:
 13058 ;;		On entry : 0/0
 13059 ;;		On exit  : 0/0
 13060 ;;		Unchanged: 0/0
 13061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13065 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13066 ;;Total ram usage:        4 bytes
 13067 ;; Hardware stack levels used: 1
 13068 ;; Hardware stack levels required when called: 1
 13069 ;; This function calls:
 13070 ;;		Nothing
 13071 ;; This function is called by:
 13072 ;;		_dtoa
 13073 ;; This function uses a non-reentrant model
 13074 ;;
 13075                           
 13076                           	psect	text67
 13077  005520                     __ptext67:
 13078                           	callstack 0
 13079  005520                     _abs:
 13080                           	callstack 23
 13081  005520  BE14               	btfsc	(abs@a+1)^0,7,c
 13082  005522  EF9D  F02A         	goto	u3080
 13083  005526  5014               	movf	(abs@a+1)^0,w,c
 13084  005528  E106               	bnz	u3081
 13085  00552A  0413               	decf	abs@a^0,w,c
 13086  00552C  B0D8               	btfsc	status,0,c
 13087  00552E  EF9B  F02A         	goto	u3081
 13088  005532  EF9D  F02A         	goto	u3080
 13089  005536                     u3081:
 13090  005536  EFAB  F02A         	goto	l1536
 13091  00553A                     u3080:
 13092  00553A  C013  F015         	movff	abs@a,??_abs
 13093  00553E  C014  F016         	movff	abs@a+1,??_abs+1
 13094  005542  1E15               	comf	??_abs^0,f,c
 13095  005544  1E16               	comf	(??_abs+1)^0,f,c
 13096  005546  4A15               	infsnz	??_abs^0,f,c
 13097  005548  2A16               	incf	(??_abs+1)^0,f,c
 13098  00554A  C015  F013         	movff	??_abs,?_abs
 13099  00554E  C016  F014         	movff	??_abs+1,?_abs+1
 13100  005552  EFAF  F02A         	goto	l1539
 13101  005556                     l1536:
 13102  005556  C013  F013         	movff	abs@a,?_abs
 13103  00555A  C014  F014         	movff	abs@a+1,?_abs+1
 13104  00555E                     l1539:
 13105  00555E  0012               	return		;funcret
 13106  005560                     __end_of_abs:
 13107                           	callstack 0
 13108                           
 13109 ;; *************** function ___aomod *****************
 13110 ;; Defined at:
 13111 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13112 ;; Parameters:    Size  Location     Type
 13113 ;;  dividend        8    0[COMRAM] long long 
 13114 ;;  divisor         8    8[COMRAM] long long 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  sign            1   17[COMRAM] unsigned char 
 13117 ;;  counter         1   16[COMRAM] unsigned char 
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  8    0[COMRAM] long long 
 13120 ;; Registers used:
 13121 ;;		wreg, status,2, status,0
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13127 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13130 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13131 ;;Total ram usage:       18 bytes
 13132 ;; Hardware stack levels used: 1
 13133 ;; Hardware stack levels required when called: 1
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_dtoa
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           	psect	text68
 13142  004566                     __ptext68:
 13143                           	callstack 0
 13144  004566                     ___aomod:
 13145                           	callstack 23
 13146  004566  0E00               	movlw	0
 13147  004568  6E12               	movwf	___aomod@sign^0,c
 13148  00456A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13149  00456C  EFBC  F022         	goto	u2980
 13150  004570  EFBA  F022         	goto	u2981
 13151  004574                     u2981:
 13152  004574  EFCE  F022         	goto	l3683
 13153  004578                     u2980:
 13154  004578  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13155  00457A  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13156  00457C  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13157  00457E  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13158  004580  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13159  004582  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13160  004584  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13161  004586  6C01               	negf	___aomod@dividend^0,c
 13162  004588  0E00               	movlw	0
 13163  00458A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13164  00458C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13165  00458E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13166  004590  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13167  004592  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13168  004594  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13169  004596  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13170  004598  0E01               	movlw	1
 13171  00459A  6E12               	movwf	___aomod@sign^0,c
 13172  00459C                     l3683:
 13173  00459C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13174  00459E  EFD5  F022         	goto	u2990
 13175  0045A2  EFD3  F022         	goto	u2991
 13176  0045A6                     u2991:
 13177  0045A6  EFE5  F022         	goto	l3687
 13178  0045AA                     u2990:
 13179  0045AA  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13180  0045AC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13181  0045AE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13182  0045B0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13183  0045B2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13184  0045B4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13185  0045B6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13186  0045B8  6C09               	negf	___aomod@divisor^0,c
 13187  0045BA  0E00               	movlw	0
 13188  0045BC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13189  0045BE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13190  0045C0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13191  0045C2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13192  0045C4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13193  0045C6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13194  0045C8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13195  0045CA                     l3687:
 13196  0045CA  5009               	movf	___aomod@divisor^0,w,c
 13197  0045CC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13198  0045CE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13199  0045D0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13200  0045D2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13201  0045D4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13202  0045D6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13203  0045D8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13204  0045DA  B4D8               	btfsc	status,2,c
 13205  0045DC  EFF2  F022         	goto	u3001
 13206  0045E0  EFF4  F022         	goto	u3000
 13207  0045E4                     u3001:
 13208  0045E4  EF3C  F023         	goto	l3703
 13209  0045E8                     u3000:
 13210  0045E8  0E01               	movlw	1
 13211  0045EA  6E11               	movwf	___aomod@counter^0,c
 13212  0045EC  EF02  F023         	goto	l3693
 13213  0045F0                     l3691:
 13214  0045F0  90D8               	bcf	status,0,c
 13215  0045F2  3609               	rlcf	___aomod@divisor^0,f,c
 13216  0045F4  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13217  0045F6  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13218  0045F8  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13219  0045FA  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13220  0045FC  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13221  0045FE  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13222  004600  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13223  004602  2A11               	incf	___aomod@counter^0,f,c
 13224  004604                     l3693:
 13225  004604  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13226  004606  EF07  F023         	goto	u3011
 13227  00460A  EF09  F023         	goto	u3010
 13228  00460E                     u3011:
 13229  00460E  EFF8  F022         	goto	l3691
 13230  004612                     u3010:
 13231  004612                     l3695:
 13232  004612  5009               	movf	___aomod@divisor^0,w,c
 13233  004614  5C01               	subwf	___aomod@dividend^0,w,c
 13234  004616  500A               	movf	(___aomod@divisor+1)^0,w,c
 13235  004618  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13236  00461A  500B               	movf	(___aomod@divisor+2)^0,w,c
 13237  00461C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13238  00461E  500C               	movf	(___aomod@divisor+3)^0,w,c
 13239  004620  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13240  004622  500D               	movf	(___aomod@divisor+4)^0,w,c
 13241  004624  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13242  004626  500E               	movf	(___aomod@divisor+5)^0,w,c
 13243  004628  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13244  00462A  500F               	movf	(___aomod@divisor+6)^0,w,c
 13245  00462C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13246  00462E  5010               	movf	(___aomod@divisor+7)^0,w,c
 13247  004630  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13248  004632  A0D8               	btfss	status,0,c
 13249  004634  EF1E  F023         	goto	u3021
 13250  004638  EF20  F023         	goto	u3020
 13251  00463C                     u3021:
 13252  00463C  EF30  F023         	goto	l3699
 13253  004640                     u3020:
 13254  004640  5009               	movf	___aomod@divisor^0,w,c
 13255  004642  5E01               	subwf	___aomod@dividend^0,f,c
 13256  004644  500A               	movf	(___aomod@divisor+1)^0,w,c
 13257  004646  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13258  004648  500B               	movf	(___aomod@divisor+2)^0,w,c
 13259  00464A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13260  00464C  500C               	movf	(___aomod@divisor+3)^0,w,c
 13261  00464E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13262  004650  500D               	movf	(___aomod@divisor+4)^0,w,c
 13263  004652  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13264  004654  500E               	movf	(___aomod@divisor+5)^0,w,c
 13265  004656  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13266  004658  500F               	movf	(___aomod@divisor+6)^0,w,c
 13267  00465A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13268  00465C  5010               	movf	(___aomod@divisor+7)^0,w,c
 13269  00465E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13270  004660                     l3699:
 13271  004660  90D8               	bcf	status,0,c
 13272  004662  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13273  004664  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13274  004666  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13275  004668  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13276  00466A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13277  00466C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13278  00466E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13279  004670  3209               	rrcf	___aomod@divisor^0,f,c
 13280  004672  2E11               	decfsz	___aomod@counter^0,f,c
 13281  004674  EF09  F023         	goto	l3695
 13282  004678                     l3703:
 13283  004678  5012               	movf	___aomod@sign^0,w,c
 13284  00467A  B4D8               	btfsc	status,2,c
 13285  00467C  EF42  F023         	goto	u3031
 13286  004680  EF44  F023         	goto	u3030
 13287  004684                     u3031:
 13288  004684  EF54  F023         	goto	l3707
 13289  004688                     u3030:
 13290  004688  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13291  00468A  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13292  00468C  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13293  00468E  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13294  004690  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13295  004692  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13296  004694  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13297  004696  6C01               	negf	___aomod@dividend^0,c
 13298  004698  0E00               	movlw	0
 13299  00469A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13300  00469C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13301  00469E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13302  0046A0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13303  0046A2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13304  0046A4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13305  0046A6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13306  0046A8                     l3707:
 13307  0046A8  C001  F001         	movff	___aomod@dividend,?___aomod
 13308  0046AC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13309  0046B0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13310  0046B4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13311  0046B8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13312  0046BC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13313  0046C0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13314  0046C4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13315  0046C8  0012               	return		;funcret
 13316  0046CA                     __end_of___aomod:
 13317                           	callstack 0
 13318                           
 13319 ;; *************** function ___aodiv *****************
 13320 ;; Defined at:
 13321 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13322 ;; Parameters:    Size  Location     Type
 13323 ;;  dividend        8    0[COMRAM] long long 
 13324 ;;  divisor         8    8[COMRAM] long long 
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;  quotient        8   18[COMRAM] long long 
 13327 ;;  sign            1   17[COMRAM] unsigned char 
 13328 ;;  counter         1   16[COMRAM] unsigned char 
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  8    0[COMRAM] long long 
 13331 ;; Registers used:
 13332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13338 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13339 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13341 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13342 ;;Total ram usage:       26 bytes
 13343 ;; Hardware stack levels used: 1
 13344 ;; Hardware stack levels required when called: 1
 13345 ;; This function calls:
 13346 ;;		Nothing
 13347 ;; This function is called by:
 13348 ;;		_dtoa
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text69
 13353  0040DE                     __ptext69:
 13354                           	callstack 0
 13355  0040DE                     ___aodiv:
 13356                           	callstack 23
 13357  0040DE  0E00               	movlw	0
 13358  0040E0  6E12               	movwf	___aodiv@sign^0,c
 13359  0040E2  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13360  0040E4  EF78  F020         	goto	u2910
 13361  0040E8  EF76  F020         	goto	u2911
 13362  0040EC                     u2911:
 13363  0040EC  EF8A  F020         	goto	l3639
 13364  0040F0                     u2910:
 13365  0040F0  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13366  0040F2  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13367  0040F4  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13368  0040F6  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13369  0040F8  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13370  0040FA  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13371  0040FC  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13372  0040FE  6C09               	negf	___aodiv@divisor^0,c
 13373  004100  0E00               	movlw	0
 13374  004102  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13375  004104  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13376  004106  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13377  004108  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13378  00410A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13379  00410C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13380  00410E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13381  004110  0E01               	movlw	1
 13382  004112  6E12               	movwf	___aodiv@sign^0,c
 13383  004114                     l3639:
 13384  004114  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13385  004116  EF91  F020         	goto	u2920
 13386  00411A  EF8F  F020         	goto	u2921
 13387  00411E                     u2921:
 13388  00411E  EFA3  F020         	goto	l3645
 13389  004122                     u2920:
 13390  004122  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13391  004124  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13392  004126  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13393  004128  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13394  00412A  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13395  00412C  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13396  00412E  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13397  004130  6C01               	negf	___aodiv@dividend^0,c
 13398  004132  0E00               	movlw	0
 13399  004134  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13400  004136  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13401  004138  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13402  00413A  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13403  00413C  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13404  00413E  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13405  004140  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13406  004142  0E01               	movlw	1
 13407  004144  1A12               	xorwf	___aodiv@sign^0,f,c
 13408  004146                     l3645:
 13409  004146  EE20  F013         	lfsr	2,___aodiv@quotient
 13410  00414A  0E07               	movlw	7
 13411  00414C                     u2931:
 13412  00414C  6ADE               	clrf	postinc2,c
 13413  00414E  06E8               	decf	wreg,f,c
 13414  004150  E2FD               	bc	u2931
 13415  004152  5009               	movf	___aodiv@divisor^0,w,c
 13416  004154  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13417  004156  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13418  004158  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13419  00415A  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13420  00415C  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13421  00415E  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13422  004160  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13423  004162  B4D8               	btfsc	status,2,c
 13424  004164  EFB6  F020         	goto	u2941
 13425  004168  EFB8  F020         	goto	u2940
 13426  00416C                     u2941:
 13427  00416C  EF0A  F021         	goto	l3667
 13428  004170                     u2940:
 13429  004170  0E01               	movlw	1
 13430  004172  6E11               	movwf	___aodiv@counter^0,c
 13431  004174  EFC6  F020         	goto	l3653
 13432  004178                     l3651:
 13433  004178  90D8               	bcf	status,0,c
 13434  00417A  3609               	rlcf	___aodiv@divisor^0,f,c
 13435  00417C  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13436  00417E  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13437  004180  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13438  004182  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13439  004184  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13440  004186  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13441  004188  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13442  00418A  2A11               	incf	___aodiv@counter^0,f,c
 13443  00418C                     l3653:
 13444  00418C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13445  00418E  EFCB  F020         	goto	u2951
 13446  004192  EFCD  F020         	goto	u2950
 13447  004196                     u2951:
 13448  004196  EFBC  F020         	goto	l3651
 13449  00419A                     u2950:
 13450  00419A                     l3655:
 13451  00419A  90D8               	bcf	status,0,c
 13452  00419C  3613               	rlcf	___aodiv@quotient^0,f,c
 13453  00419E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13454  0041A0  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13455  0041A2  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13456  0041A4  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13457  0041A6  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13458  0041A8  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13459  0041AA  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13460  0041AC  5009               	movf	___aodiv@divisor^0,w,c
 13461  0041AE  5C01               	subwf	___aodiv@dividend^0,w,c
 13462  0041B0  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13463  0041B2  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13464  0041B4  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13465  0041B6  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13466  0041B8  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13467  0041BA  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13468  0041BC  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13469  0041BE  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13470  0041C0  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13471  0041C2  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13472  0041C4  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13473  0041C6  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13474  0041C8  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13475  0041CA  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13476  0041CC  A0D8               	btfss	status,0,c
 13477  0041CE  EFEB  F020         	goto	u2961
 13478  0041D2  EFED  F020         	goto	u2960
 13479  0041D6                     u2961:
 13480  0041D6  EFFE  F020         	goto	l3663
 13481  0041DA                     u2960:
 13482  0041DA  5009               	movf	___aodiv@divisor^0,w,c
 13483  0041DC  5E01               	subwf	___aodiv@dividend^0,f,c
 13484  0041DE  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13485  0041E0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13486  0041E2  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13487  0041E4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13488  0041E6  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13489  0041E8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13490  0041EA  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13491  0041EC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13492  0041EE  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13493  0041F0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13494  0041F2  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13495  0041F4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13496  0041F6  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13497  0041F8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13498  0041FA  8013               	bsf	___aodiv@quotient^0,0,c
 13499  0041FC                     l3663:
 13500  0041FC  90D8               	bcf	status,0,c
 13501  0041FE  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13502  004200  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13503  004202  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13504  004204  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13505  004206  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13506  004208  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13507  00420A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13508  00420C  3209               	rrcf	___aodiv@divisor^0,f,c
 13509  00420E  2E11               	decfsz	___aodiv@counter^0,f,c
 13510  004210  EFCD  F020         	goto	l3655
 13511  004214                     l3667:
 13512  004214  5012               	movf	___aodiv@sign^0,w,c
 13513  004216  B4D8               	btfsc	status,2,c
 13514  004218  EF10  F021         	goto	u2971
 13515  00421C  EF12  F021         	goto	u2970
 13516  004220                     u2971:
 13517  004220  EF22  F021         	goto	l3671
 13518  004224                     u2970:
 13519  004224  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13520  004226  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13521  004228  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13522  00422A  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13523  00422C  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13524  00422E  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13525  004230  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13526  004232  6C13               	negf	___aodiv@quotient^0,c
 13527  004234  0E00               	movlw	0
 13528  004236  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13529  004238  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13530  00423A  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13531  00423C  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13532  00423E  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13533  004240  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13534  004242  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13535  004244                     l3671:
 13536  004244  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13537  004248  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13538  00424C  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13539  004250  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13540  004254  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13541  004258  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13542  00425C  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13543  004260  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13544  004264  0012               	return		;funcret
 13545  004266                     __end_of___aodiv:
 13546                           	callstack 0
 13547                           
 13548 ;; *************** function _sendStringSerial4 *****************
 13549 ;; Defined at:
 13550 ;;		line 36 in file "serial.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;  string          2    1[COMRAM] PTR unsigned char 
 13553 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;		None
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  1    wreg      void 
 13558 ;; Registers used:
 13559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13569 ;;Total ram usage:        2 bytes
 13570 ;; Hardware stack levels used: 1
 13571 ;; Hardware stack levels required when called: 2
 13572 ;; This function calls:
 13573 ;;		_sendCharSerial4
 13574 ;; This function is called by:
 13575 ;;		_color_display
 13576 ;;		_color_predict
 13577 ;;		_check_color_reading
 13578 ;; This function uses a non-reentrant model
 13579 ;;
 13580                           
 13581                           	psect	text70
 13582  005676                     __ptext70:
 13583                           	callstack 0
 13584  005676                     _sendStringSerial4:
 13585                           	callstack 26
 13586  005676                     
 13587                           ;serial.c: 38:     while(*string != 0){
 13588  005676  EF46  F02B         	goto	l4383
 13589  00567A                     l4379:
 13590                           
 13591                           ;serial.c: 39:   sendCharSerial4(*string++);}
 13592  00567A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13593  00567E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13594  005682  50DF               	movf	indf2,w,c
 13595  005684  EC34  F02C         	call	_sendCharSerial4
 13596  005688  4A02               	infsnz	sendStringSerial4@string^0,f,c
 13597  00568A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 13598  00568C                     l4383:
 13599                           
 13600                           ;serial.c: 38:     while(*string != 0){
 13601  00568C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13602  005690  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13603  005694  50DF               	movf	indf2,w,c
 13604  005696  A4D8               	btfss	status,2,c
 13605  005698  EF50  F02B         	goto	u4121
 13606  00569C  EF52  F02B         	goto	u4120
 13607  0056A0                     u4121:
 13608  0056A0  EF3D  F02B         	goto	l4379
 13609  0056A4                     u4120:
 13610  0056A4  0012               	return		;funcret
 13611  0056A6                     __end_of_sendStringSerial4:
 13612                           	callstack 0
 13613                           
 13614 ;; *************** function _sendCharSerial4 *****************
 13615 ;; Defined at:
 13616 ;;		line 29 in file "serial.c"
 13617 ;; Parameters:    Size  Location     Type
 13618 ;;  charToSend      1    wreg     unsigned char 
 13619 ;; Auto vars:     Size  Location     Type
 13620 ;;  charToSend      1    0[COMRAM] unsigned char 
 13621 ;; Return value:  Size  Location     Type
 13622 ;;                  1    wreg      void 
 13623 ;; Registers used:
 13624 ;;		wreg
 13625 ;; Tracked objects:
 13626 ;;		On entry : 0/0
 13627 ;;		On exit  : 0/0
 13628 ;;		Unchanged: 0/0
 13629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13634 ;;Total ram usage:        1 bytes
 13635 ;; Hardware stack levels used: 1
 13636 ;; Hardware stack levels required when called: 1
 13637 ;; This function calls:
 13638 ;;		Nothing
 13639 ;; This function is called by:
 13640 ;;		_sendStringSerial4
 13641 ;; This function uses a non-reentrant model
 13642 ;;
 13643                           
 13644                           	psect	text71
 13645  005868                     __ptext71:
 13646                           	callstack 0
 13647  005868                     _sendCharSerial4:
 13648                           	callstack 26
 13649                           
 13650                           ;incstack = 0
 13651                           ;sendCharSerial4@charToSend stored from wreg
 13652  005868  6E01               	movwf	sendCharSerial4@charToSend^0,c
 13653  00586A                     l423:
 13654  00586A  010E               	movlb	14	; () banked
 13655  00586C  A537               	btfss	55,2,b	;volatile
 13656  00586E  EF3B  F02C         	goto	u3851
 13657  005872  EF3D  F02C         	goto	u3850
 13658  005876                     u3851:
 13659  005876  EF35  F02C         	goto	l423
 13660  00587A                     u3850:
 13661  00587A                     
 13662                           ; BSR set to: 14
 13663                           ;serial.c: 31:     TX4REG = charToSend;
 13664  00587A  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 13665  00587E                     
 13666                           ; BSR set to: 14
 13667  00587E  0012               	return		;funcret
 13668  005880                     __end_of_sendCharSerial4:
 13669                           	callstack 0
 13670                           
 13671 ;; *************** function _Timer0_init *****************
 13672 ;; Defined at:
 13673 ;;		line 7 in file "timers.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;		None
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  1    wreg      void 
 13680 ;; Registers used:
 13681 ;;		wreg, status,2
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13691 ;;Total ram usage:        0 bytes
 13692 ;; Hardware stack levels used: 1
 13693 ;; Hardware stack levels required when called: 1
 13694 ;; This function calls:
 13695 ;;		Nothing
 13696 ;; This function is called by:
 13697 ;;		_main
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text72
 13702  00584A                     __ptext72:
 13703                           	callstack 0
 13704  00584A                     _Timer0_init:
 13705                           	callstack 29
 13706  00584A                     
 13707                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13708  00584A  50D6               	movf	214,w,c	;volatile
 13709  00584C  0B1F               	andlw	-225
 13710  00584E  0940               	iorlw	64
 13711  005850  6ED6               	movwf	214,c	;volatile
 13712  005852                     
 13713                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13714  005852  88D6               	bsf	214,4,c	;volatile
 13715                           
 13716                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13717  005854  50D6               	movf	214,w,c	;volatile
 13718  005856  0BF0               	andlw	-16
 13719  005858  0908               	iorlw	8
 13720  00585A  6ED6               	movwf	214,c	;volatile
 13721  00585C                     
 13722                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13723  00585C  88D5               	bsf	213,4,c	;volatile
 13724                           
 13725                           ;timers.c: 16:     TMR0H=0b00001011;
 13726  00585E  0E0B               	movlw	11
 13727  005860  6ED4               	movwf	212,c	;volatile
 13728                           
 13729                           ;timers.c: 17:     TMR0L=0b11011011;
 13730  005862  0EDB               	movlw	219
 13731  005864  6ED3               	movwf	211,c	;volatile
 13732  005866  0012               	return		;funcret
 13733  005868                     __end_of_Timer0_init:
 13734                           	callstack 0
 13735                           
 13736 ;; *************** function _Interrupts_init *****************
 13737 ;; Defined at:
 13738 ;;		line 9 in file "interrupts.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;		None
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;		None
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  1    wreg      void 
 13745 ;; Registers used:
 13746 ;;		None
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13756 ;;Total ram usage:        0 bytes
 13757 ;; Hardware stack levels used: 1
 13758 ;; Hardware stack levels required when called: 1
 13759 ;; This function calls:
 13760 ;;		Nothing
 13761 ;; This function is called by:
 13762 ;;		_main
 13763 ;; This function uses a non-reentrant model
 13764 ;;
 13765                           
 13766                           	psect	text73
 13767  0058A2                     __ptext73:
 13768                           	callstack 0
 13769  0058A2                     _Interrupts_init:
 13770                           	callstack 29
 13771  0058A2  8EF2               	bsf	242,7,c	;volatile
 13772                           
 13773                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13774  0058A4  8AF2               	bsf	242,5,c	;volatile
 13775                           
 13776                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13777  0058A6  8CF2               	bsf	242,6,c	;volatile
 13778                           
 13779                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13780  0058A8  010E               	movlb	14	; () banked
 13781  0058AA  8B29               	bsf	41,5,b	;volatile
 13782  0058AC                     
 13783                           ; BSR set to: 14
 13784  0058AC  0012               	return		;funcret
 13785  0058AE                     __end_of_Interrupts_init:
 13786                           	callstack 0
 13787                           
 13788 ;; *************** function _HighISR *****************
 13789 ;; Defined at:
 13790 ;;		line 21 in file "interrupts.c"
 13791 ;; Parameters:    Size  Location     Type
 13792 ;;		None
 13793 ;; Auto vars:     Size  Location     Type
 13794 ;;		None
 13795 ;; Return value:  Size  Location     Type
 13796 ;;                  1    wreg      void 
 13797 ;; Registers used:
 13798 ;;		status,2, status,0
 13799 ;; Tracked objects:
 13800 ;;		On entry : 0/0
 13801 ;;		On exit  : 0/0
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13808 ;;Total ram usage:        0 bytes
 13809 ;; Hardware stack levels used: 1
 13810 ;; This function calls:
 13811 ;;		Nothing
 13812 ;; This function is called by:
 13813 ;;		Interrupt level 2
 13814 ;; This function uses a non-reentrant model
 13815 ;;
 13816                           
 13817                           	psect	intcode
 13818  000008                     __pintcode:
 13819                           	callstack 0
 13820  000008                     _HighISR:
 13821                           	callstack 19
 13822                           
 13823                           ; BSR set to: 14
 13824                           ;incstack = 0
 13825  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13826  00000A                     
 13827                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 13828  00000A  010E               	movlb	14	; () banked
 13829  00000C  AB33               	btfss	51,5,b	;volatile
 13830  00000E  EF0B  F000         	goto	i2u561_41
 13831  000012  EF0D  F000         	goto	i2u561_40
 13832  000016                     i2u561_41:
 13833  000016  EF12  F000         	goto	i2l677
 13834  00001A                     i2u561_40:
 13835  00001A                     
 13836                           ; BSR set to: 14
 13837                           ;interrupts.c: 24:         second ++;
 13838  00001A  0101               	movlb	1	; () banked
 13839  00001C  4B9A               	infsnz	_second& (0+255),f,b
 13840  00001E  2B9B               	incf	(_second+1)& (0+255),f,b
 13841  000020                     
 13842                           ; BSR set to: 1
 13843                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 13844  000020  010E               	movlb	14	; () banked
 13845  000022  9B33               	bcf	51,5,b	;volatile
 13846  000024                     i2l677:
 13847                           
 13848                           ; BSR set to: 14
 13849  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13850  000026  0011               	retfie		f
 13851  000028                     __end_of_HighISR:
 13852                           	callstack 0
 13853                           
 13854                           	psect	rparam
 13855  0000                     
 13856                           	psect	temp
 13857  00005F                     btemp:
 13858                           	callstack 0
 13859  00005F                     	ds	1
 13860  0000                     int$flags	set	btemp
 13861  0000                     wtemp8	set	btemp+1
 13862  0000                     ttemp5	set	btemp+1
 13863  0000                     ttemp6	set	btemp+4
 13864  0000                     ttemp7	set	btemp+8
 13865                           
 13866                           	psect	idloc
 13867                           
 13868                           ;Config register IDLOC0 @ 0x200000
 13869                           ;	unspecified, using default values
 13870  200000                     	org	2097152
 13871  200000  0FFF               	dw	4095
 13872                           
 13873                           ;Config register IDLOC1 @ 0x200002
 13874                           ;	unspecified, using default values
 13875  200002                     	org	2097154
 13876  200002  0FFF               	dw	4095
 13877                           
 13878                           ;Config register IDLOC2 @ 0x200004
 13879                           ;	unspecified, using default values
 13880  200004                     	org	2097156
 13881  200004  0FFF               	dw	4095
 13882                           
 13883                           ;Config register IDLOC3 @ 0x200006
 13884                           ;	unspecified, using default values
 13885  200006                     	org	2097158
 13886  200006  0FFF               	dw	4095
 13887                           
 13888                           ;Config register IDLOC4 @ 0x200008
 13889                           ;	unspecified, using default values
 13890  200008                     	org	2097160
 13891  200008  0FFF               	dw	4095
 13892                           
 13893                           ;Config register IDLOC5 @ 0x20000A
 13894                           ;	unspecified, using default values
 13895  20000A                     	org	2097162
 13896  20000A  0FFF               	dw	4095
 13897                           
 13898                           ;Config register IDLOC6 @ 0x20000C
 13899                           ;	unspecified, using default values
 13900  20000C                     	org	2097164
 13901  20000C  0FFF               	dw	4095
 13902                           
 13903                           ;Config register IDLOC7 @ 0x20000E
 13904                           ;	unspecified, using default values
 13905  20000E                     	org	2097166
 13906  20000E  0FFF               	dw	4095
 13907                           
 13908                           	psect	config
 13909                           
 13910                           ;Config register CONFIG1L @ 0x300000
 13911                           ;	External Oscillator mode Selection bits
 13912                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13913                           ;	Power-up default value for COSC bits
 13914                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13915  300000                     	org	3145728
 13916  300000  AA                 	db	170
 13917                           
 13918                           ;Config register CONFIG1H @ 0x300001
 13919                           ;	unspecified, using default values
 13920                           ;	Clock Out Enable bit
 13921                           ;	CLKOUTEN = 0x1, unprogrammed default
 13922                           ;	Clock Switch Enable bit
 13923                           ;	CSWEN = 0x1, unprogrammed default
 13924                           ;	Fail-Safe Clock Monitor Enable bit
 13925                           ;	FCMEN = 0x1, unprogrammed default
 13926  300001                     	org	3145729
 13927  300001  FF                 	db	255
 13928                           
 13929                           ;Config register CONFIG2L @ 0x300002
 13930                           ;	unspecified, using default values
 13931                           ;	Master Clear Enable bit
 13932                           ;	MCLRE = 0x1, unprogrammed default
 13933                           ;	Power-up Timer Enable bit
 13934                           ;	PWRTE = 0x1, unprogrammed default
 13935                           ;	Low-power BOR enable bit
 13936                           ;	LPBOREN = 0x1, unprogrammed default
 13937                           ;	Brown-out Reset Enable bits
 13938                           ;	BOREN = 0x3, unprogrammed default
 13939  300002                     	org	3145730
 13940  300002  FF                 	db	255
 13941                           
 13942                           ;Config register CONFIG2H @ 0x300003
 13943                           ;	unspecified, using default values
 13944                           ;	Brown Out Reset Voltage selection bits
 13945                           ;	BORV = 0x3, unprogrammed default
 13946                           ;	ZCD Disable bit
 13947                           ;	ZCD = 0x1, unprogrammed default
 13948                           ;	PPSLOCK bit One-Way Set Enable bit
 13949                           ;	PPS1WAY = 0x1, unprogrammed default
 13950                           ;	Stack Full/Underflow Reset Enable bit
 13951                           ;	STVREN = 0x1, unprogrammed default
 13952                           ;	Debugger Enable bit
 13953                           ;	DEBUG = 0x1, unprogrammed default
 13954                           ;	Extended Instruction Set Enable bit
 13955                           ;	XINST = 0x1, unprogrammed default
 13956  300003                     	org	3145731
 13957  300003  FF                 	db	255
 13958                           
 13959                           ;Config register CONFIG3L @ 0x300004
 13960                           ;	WDT Period Select bits
 13961                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13962                           ;	WDT operating mode
 13963                           ;	WDTE = OFF, WDT Disabled
 13964  300004                     	org	3145732
 13965  300004  9F                 	db	159
 13966                           
 13967                           ;Config register CONFIG3H @ 0x300005
 13968                           ;	unspecified, using default values
 13969                           ;	WDT Window Select bits
 13970                           ;	WDTCWS = 0x7, unprogrammed default
 13971                           ;	WDT input clock selector
 13972                           ;	WDTCCS = 0x7, unprogrammed default
 13973  300005                     	org	3145733
 13974  300005  FF                 	db	255
 13975                           
 13976                           ;Config register CONFIG4L @ 0x300006
 13977                           ;	unspecified, using default values
 13978                           ;	Write Protection Block 0
 13979                           ;	WRT0 = 0x1, unprogrammed default
 13980                           ;	Write Protection Block 1
 13981                           ;	WRT1 = 0x1, unprogrammed default
 13982                           ;	Write Protection Block 2
 13983                           ;	WRT2 = 0x1, unprogrammed default
 13984                           ;	Write Protection Block 3
 13985                           ;	WRT3 = 0x1, unprogrammed default
 13986                           ;	Write Protection Block 3
 13987                           ;	WRT4 = 0x1, unprogrammed default
 13988                           ;	Write Protection Block 3
 13989                           ;	WRT5 = 0x1, unprogrammed default
 13990                           ;	Write Protection Block 3
 13991                           ;	WRT6 = 0x1, unprogrammed default
 13992                           ;	Write Protection Block 3
 13993                           ;	WRT7 = 0x1, unprogrammed default
 13994  300006                     	org	3145734
 13995  300006  FF                 	db	255
 13996                           
 13997                           ;Config register CONFIG4H @ 0x300007
 13998                           ;	unspecified, using default values
 13999                           ;	Configuration Register Write Protection bit
 14000                           ;	WRTC = 0x1, unprogrammed default
 14001                           ;	Boot Block Write Protection bit
 14002                           ;	WRTB = 0x1, unprogrammed default
 14003                           ;	Data EEPROM Write Protection bit
 14004                           ;	WRTD = 0x1, unprogrammed default
 14005                           ;	Scanner Enable bit
 14006                           ;	SCANE = 0x1, unprogrammed default
 14007                           ;	Low Voltage Programming Enable bit
 14008                           ;	LVP = 0x1, unprogrammed default
 14009  300007                     	org	3145735
 14010  300007  FF                 	db	255
 14011                           
 14012                           ;Config register CONFIG5L @ 0x300008
 14013                           ;	unspecified, using default values
 14014                           ;	UserNVM Program Memory Code Protection bit
 14015                           ;	CP = 0x1, unprogrammed default
 14016                           ;	DataNVM Memory Code Protection bit
 14017                           ;	CPD = 0x1, unprogrammed default
 14018  300008                     	org	3145736
 14019  300008  FF                 	db	255
 14020                           
 14021                           ;Config register CONFIG5H @ 0x300009
 14022                           ;	unspecified, using default values
 14023  300009                     	org	3145737
 14024  300009  FF                 	db	255
 14025                           
 14026                           ;Config register CONFIG6L @ 0x30000A
 14027                           ;	unspecified, using default values
 14028                           ;	Table Read Protection Block 0
 14029                           ;	EBTR0 = 0x1, unprogrammed default
 14030                           ;	Table Read Protection Block 1
 14031                           ;	EBTR1 = 0x1, unprogrammed default
 14032                           ;	Table Read Protection Block 2
 14033                           ;	EBTR2 = 0x1, unprogrammed default
 14034                           ;	Table Read Protection Block 3
 14035                           ;	EBTR3 = 0x1, unprogrammed default
 14036                           ;	Table Read Protection Block 4
 14037                           ;	EBTR4 = 0x1, unprogrammed default
 14038                           ;	Table Read Protection Block 5
 14039                           ;	EBTR5 = 0x1, unprogrammed default
 14040                           ;	Table Read Protection Block 6
 14041                           ;	EBTR6 = 0x1, unprogrammed default
 14042                           ;	Table Read Protection Block 7
 14043                           ;	EBTR7 = 0x1, unprogrammed default
 14044  30000A                     	org	3145738
 14045  30000A  FF                 	db	255
 14046                           
 14047                           ;Config register CONFIG6H @ 0x30000B
 14048                           ;	unspecified, using default values
 14049                           ;	Boot Block Table Read Protection bit
 14050                           ;	EBTRB = 0x1, unprogrammed default
 14051  30000B                     	org	3145739
 14052  30000B  FF                 	db	255
 14053                           tosu	equ	0xFFF
 14054                           tosh	equ	0xFFE
 14055                           tosl	equ	0xFFD
 14056                           stkptr	equ	0xFFC
 14057                           pclatu	equ	0xFFB
 14058                           pclath	equ	0xFFA
 14059                           pcl	equ	0xFF9
 14060                           tblptru	equ	0xFF8
 14061                           tblptrh	equ	0xFF7
 14062                           tblptrl	equ	0xFF6
 14063                           tablat	equ	0xFF5
 14064                           prodh	equ	0xFF4
 14065                           prodl	equ	0xFF3
 14066                           indf0	equ	0xFEF
 14067                           postinc0	equ	0xFEE
 14068                           postdec0	equ	0xFED
 14069                           preinc0	equ	0xFEC
 14070                           plusw0	equ	0xFEB
 14071                           fsr0h	equ	0xFEA
 14072                           fsr0l	equ	0xFE9
 14073                           wreg	equ	0xFE8
 14074                           indf1	equ	0xFE7
 14075                           postinc1	equ	0xFE6
 14076                           postdec1	equ	0xFE5
 14077                           preinc1	equ	0xFE4
 14078                           plusw1	equ	0xFE3
 14079                           fsr1h	equ	0xFE2
 14080                           fsr1l	equ	0xFE1
 14081                           bsr	equ	0xFE0
 14082                           indf2	equ	0xFDF
 14083                           postinc2	equ	0xFDE
 14084                           postdec2	equ	0xFDD
 14085                           preinc2	equ	0xFDC
 14086                           plusw2	equ	0xFDB
 14087                           fsr2h	equ	0xFDA
 14088                           fsr2l	equ	0xFD9
 14089                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     160
    BANK1           256     65     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2788$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2788$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S375DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S375DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_action
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  297474
                                            150 BANK0      2     2      0
                                              0 BANK1     65    65      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   27014
                                             48 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  105254
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   18769
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        31    27      4   26728
                                             17 BANK0     31    27      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2620
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   16288
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7573
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1503
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18445
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12922
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11531
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3234
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1812
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2737
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   84351
                                             93 COMRAM     1     1      0
                                            128 BANK0      4     0      4
                             _goback
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11325
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   43044
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    8419
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5    8875
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11021
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6442
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3883
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FE      57        0.0%
DATA                 0      0     1FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Mar 13 16:43:15 2022

                ?_short_reverse 0026                  _color_read_Red 524E                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 52EE  
                 _color_predict 56A6                              l71 5894                              l82 34D4  
                            l74 34C2                              l91 529C                              l85 5674  
                            l94 533C                              l88 582A                              l97 52EC  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 533E  
              _color_read_Green 529E               ??_Interrupts_init 0001                             l100 538C  
                           l103 51A4                             l112 57EA                             l106 578A  
                           l211 56FE                             l115 57CA                             l220 58B6  
                           l132 50E4                             l301 4ACE                             l109 576A  
                           l141 36C6                             l214 5724                             l118 57AA  
                           l223 58C0                             l208 56FC                             l217 58CA  
                           l129 3A50                             l138 56D2                             l226 58A0  
                           l331 453A                             l323 44B8                             l308 389A  
                           l316 4F64                             l180 4C5C                             l341 4338  
                           l229 5458                             l165 1972                             l181 4C5E  
                           l173 5074                             l334 4564                             l414 5848  
                           l423 586A                             l327 4500                             l432 56A4  
                           l360 4FF8                             l352 43E4                             l168 5596  
                           l345 4380                             l177 47F0                             l169 5598  
                           l426 587E                             l371 4EA8                             l349 43BA  
                           l374 54DC                             l630 3228                             l544 3E74  
                           l377 551E                             l298 549A                             l636 580A  
                           l671 58AC                             l904 46C8                             l688 5866  
                           l777 574A                             l891 4264               verify_color@color 0098  
              ?_calibrate_white 000C        __end_of_distance_measure 4C60                             _abs 5520  
                           _pad 4C60                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                 __end_of_LED_OFF 578C  
                  ___fltol@exp1 0065                            l1008 4DE8                            l1042 49B6  
                          l1051 560A                            ?_abs 0013                            l1047 49FC  
                          l1400 2166                            l1401 2154                            l1305 1B62  
                          l1074 48F8                            l1322 1C7C                            l1314 1E32  
                          l1306 1B50                            l1331 1D4C                            l1307 1B16  
                          l1500 2A52                            l1332 1D3A                            l1432 3AA8  
                          l1408 221E                            l1361 2804                            l4001 1C6C  
                          l1370 284A                            l1531 513E                            l1435 3C04  
                          l4011 1CC0                            l4003 1C92                            l1347 53D2  
                          l1532 5146                            l1460 524C                            l1372 28C2  
                          l1364 27C8                            l1525 3DB8                            l1373 28B0  
                          l4021 1CEA                            l4013 1CCE                            l4005 1CA2  
                          l1453 55D2                            l1518 2C8E                            l1446 3B9C  
                          l1551 4B98                            l4103 3D82                            l4111 58C2  
                          l1359 29A4                            l1439 3B40                            l1391 1EF8  
                          l4031 1D1C                            l4023 1CFA                            l4015 1CD0  
                          l1536 5556                            l4105 3DA6                            l4113 58C6  
                          l4121 58BC                            l4201 1F08                            l4041 1D76  
                          l4033 1D32                            l4017 1CDE                            l4009 1CB6  
                          l4025 1CFC                            l5001 36A0                            l1562 58CE  
                          l1490 4CE8                            l1570 260A                            l1539 555E  
                          l4115 5898                            l4131 5426                            l4123 58AE  
                          l4211 1F42                            l1395 225C                            l4203 1F18  
                          l4051 1DF2                            l4043 1DB0                            l4019 1CE6  
                          l4027 1D0A                            l5003 36A4                            l5011 0E5E  
                          l1492 4D24                            l4141 4EAA                            l4117 589C  
                          l4133 542E                            l4125 58B2                            l4221 1F94  
                          l4213 1F58                            l4061 1E12                            l4053 1DF6  
                          l4037 1D5C                            l4045 1DB2                            l4029 1D0E  
                          l5005 36BC                            l5101 1860                            l5021 0FE6  
                          l5013 0E6A                            l1398 20EE                            l1559 5416  
                          l1583 5640                            l1487 4CA6                            l4071 3C2A  
                          l4151 4EF6                            l4143 4EAE                            l4119 58B8  
                          l4135 5454                            l4127 541A                            l4311 4976  
                          l4303 48FA                            l4231 1FDA                            l4223 1FA2  
                          l4215 1F64                            l4207 1F2C                            l4063 1E20  
                          l4055 1E04                            l4047 1DC2                            l4039 1D68  
                          l5111 191C                            l5103 188C                            l5031 10CA  
                          l5023 108E                            l5015 0F06                            l5007 0E14  
                          l3601 4AE2                            l4081 3C96                            l4073 3C38  
                          l4161 4F4C                            l4153 4F02                            l4145 4EC6  
                          l4401 4E94                            l5201 2D24                            l4137 5456  
                          l4129 541E                            l4321 49FA                            l4313 4984  
                          l4305 4928                            l4241 2048                            l4233 1FF4  
                          l4225 1FAE                            l4217 1F7C                            l4209 1F38  
                          l4065 1E22                            l4057 1E0A                            l4049 1DD2  
                          l5113 194A                            l5105 18BA                            l5041 12F4  
                          l5033 116C                            l5025 10A2                            l5017 0F22  
                          l5009 0E5A                            l1498 2A4A                            l4163 586A  
                          l3603 4AF4                            l4091 3D48                            l4083 3CDE  
                          l4075 3C4A                            l4155 4F0E                            l4147 4ED2  
                          l5211 2D56                            l5203 2D38                            l4411 4848  
                          l4403 47F2                            l4315 4996                            l4307 4938  
                          l4251 20DE                            l4243 2072                            l4235 2004  
                          l4227 1FBE                            l4219 1F88                            l4171 1E4E  
                          l4059 1E0C                            l5131 470A                            l5123 46CA  
                          l5115 1950                            l5107 18E8                            l5051 13D2  
                          l5043 1308                            l5035 1188                            l5027 10BA  
                          l5019 0FCA                            l4165 587A                            l3701 4672  
                          l3605 4AFE                            l3613 53D4                            l3621 560C  
                          l4093 3D5C                            l4077 3C4E                            l4069 3C06  
                          l4333 50E6                            l4149 4EEA                            l4157 4F1C  
                          l5221 2DC0                            l5213 2D5C                            l4501 334C  
                          l5301 4A1A                            l4413 484A                            l4405 480A  
                          l4317 49A4                            l4309 4966                            l4261 211E  
                          l4253 20EC                            l4245 20A8                            l4237 2020  
                          l4229 1FCA                            l4181 1E86                            l4173 1E50  
                          l4325 55D4                            l5141 475E                            l5133 4716  
                          l5125 46E4                            l4341 524E                            l5117 1964  
                          l5109 18EE                            l5061 1576                            l5053 13EE  
                          l5045 1320                            l5037 1230                            l5029 10BE  
                          l3631 40DE                            l3703 4678                            l3607 4B1C  
                          l3615 53E0                            l3623 5618                            l3711 4C60  
                          l4087 3D16                            l4079 3C72                            l4335 50EE  
                          l4159 4F34                            l5231 2E1C                            l5223 2DD8  
                          l5215 2D80                            l5207 2D4E                            l4511 33F4  
                          l4503 3370                            l5303 4A2E                            l5311 582C  
                          l4415 485A                            l4319 49F4                            l4271 2190  
                          l4263 214C                            l4255 20FE                            l4247 20B6  
                          l4239 202C                            l4191 1EB2                            l4183 1E96  
                          l4175 1E60                            l4167 1E34                            l4327 55EA  
                          l5143 4776                            l5135 472E                            l5127 46EE  
                          l4343 5294                            l5119 196E                            l5071 169E  
                          l5063 158E                            l5055 1496                            l5047 1324  
                          l5039 124C                            l5151 4B9A                            l3641 4122  
                          l3633 40E2                            l3705 4688                            l3609 4B52  
                          l3617 53F2                            l3625 561C                            l3721 4CB2  
                          l3713 4C70                            l3801 2A5A                            l4089 3D3A  
                          l4097 3D68                            l4337 50FC                            l4601 44FC  
                          l5241 2EC0                            l5233 2E40                            l5225 2DDC  
                          l5217 2D98                            l5209 2D50                            l4521 348A  
                          l4513 340C                            l4505 3388                            l5401 3006  
                          l5305 4A42                            l5321 5846                            l5313 5836  
                          l4361 5384                            l4441 48D8                            l4425 4884  
                          l4417 485E                            l4409 481E                            l4281 2206  
                          l4273 21BA                            l4257 210C                            l4249 20D4  
                          l4193 1EC2                            l4185 1E9C                            l4177 1E70  
                          l4169 1E40                            l4329 55FA                            l5145 47DE  
                          l5137 473A                            l5129 46F2                            l4353 529E  
                          l5081 17B6                            l5073 16CC                            l5065 15BC  
                          l5057 14B2                            l5049 1330                            l5161 4BDE  
                          l5153 4BB0                            l5331 585C                            l3651 4178  
                          l3643 4142                            l3635 40F0                            l3707 46A8  
                          l3619 53F6                            l3627 5634                            l3723 4CC6  
                          l3715 4C84                            l3811 2A94                            l3803 2A6C  
                          l4099 3D76                            l4339 5122                            l4371 521E  
                          l4603 451A                            l4611 4266                            l5251 2F28  
                          l5243 2EC4                            l5235 2E6C                            l5227 2E00  
                          l5219 2D9C                            l4523 34C0                            l4515 3442  
                          l4507 33C4                            l5411 307A                            l5403 3020  
                          l5307 4A52                            l5315 5838                            l4443 48E8  
                          l4435 48AC                            l4427 488E                            l4419 486C  
                          l4283 2222                            l4291 2248                            l4267 2176  
                          l4275 21BE                            l4259 2110                            l4195 1ED2  
                          l4187 1EA2                            l4179 1E80                            l4451 22C6  
                          l5147 47E8                            l5139 4752                            l4531 574C  
                          l4347 52EE                            l4355 52E4                            l5091 180E  
                          l5075 178C                            l5083 17C0                            l5067 168A  
                          l5059 155A                            l5163 4C24                            l5155 4BB4  
                          l5333 58A2                            l4381 5688                            l3661 41FA  
                          l3653 418C                            l3645 4146                            l3637 4110  
                          l3733 5520                            l3725 4CCA                            l3717 4C92  
                          l3813 2A9A                            l3821 2B8C                            l3805 2A7C  
                          l4373 523A                            l4365 51FC                            l4605 4526  
                          l4613 428A                            l4621 42C8                            l5245 2EE8  
                          l5237 2E70                            l5229 2E18                            l5181 54C8  
                          l4517 3454                            l4509 33D6                            l5421 30D6  
                          l5413 307C                            l5405 3022                            l5261 5646  
                          l5309 4A66                            l5317 5842                            l4701 269E  
                          l4437 48B8                            l4429 4898                            l4293 224C  
                          l4285 2232                            l4277 21D8                            l4269 2182  
                          l4197 1EE2                            l4189 1EB0                            l3901 1A2A  
                          l4453 22DA                            l4541 57B2                            l4533 5752  
                          l4349 5334                            l4525 5148                            l5093 1826  
                          l5085 17EE                            l5077 17A4                            l5069 1694  
                          l5165 4C40                            l5157 4BCE                            l5341 3F7C  
                          ?_pad 0011                            l5327 584A                            l4383 568C  
                          l3671 4244                            l3663 41FC                            l3655 419A  
                          l3647 4152                            l3639 4114                            l3735 553A  
                          l3727 4CF8                            l3719 4C9E                            l3823 2BA6  
                          l3831 2C08                            l3815 2B1C                            l3807 2A82  
                          l4367 520E                            l4551 56AA                            l3751 4D44  
                          l3743 4D26                            l4391 4E32                            l4607 4536  
                          l4631 4318                            l4623 42E0                            l4615 42A2  
                          l5247 2F00                            l5239 2E94                            l5255 2F44  
                          l5191 2CC8                            l5183 2C90                            l4519 3472  
                          l5431 3142                            l5423 30E8                            l5415 308E  
                          l5407 3034                            l5263 5650                            l5319 5844  
                          l5335 57EC                            l4535 57CC                            l4711 26D8  
                          l4703 26AE                            l4359 533E                            l4439 48C8  
                          l4287 2240                            l4279 21EC                            l4199 1EE8  
                          l3911 1A66                            l3903 1A3A                            l4471 2566  
                          l4463 238E                            l4455 2316                            l4447 225E  
                          l4543 578C                            l4527 576C                            l5095 182E  
                          l5087 1806                            l5079 17AC                            l5167 4C58  
                          l5159 4BDA                            l5351 3FC6                            l5343 3F88  
                          l5271 5016                            l5511 3DD2                            l5503 3DBA  
                          l5329 5852                            l4377 5676                            l3665 420E  
                          l3657 41AC                            l3649 4170                            l3681 4598  
                          l3729 4D0C                            l3841 2C4E                            l3833 2C1A  
                          l3825 2BC4                            l3817 2B22                            l3809 2A8A  
                          l4369 5216                            l4553 56C6                            l3761 4D78  
                          l3753 4D52                            l3745 4D2A                            l3737 5726  
                          l4393 4E3E                            l4385 4DEA                            l4609 4550  
                          l4641 436C                            l4633 4324                            l4625 42EE  
                          l4617 42AE                            l5249 2F04                            l5193 2CCE  
                          l5185 2CA8                            l5177 549C                            l4481 322C  
                          l5441 31C8                            l5433 316E                            l5425 3114  
                          l5417 30BA                            l5409 3060                            l5257 5880  
                          l5265 5660                            l4537 57D2                            l4801 2998  
                          l4713 26EE                            l4705 26BE                            l4289 2242  
                          l3921 1A84                            l3913 1A74                            l3905 1A3C  
                          l4297 538E                            l4473 259A                            l4465 245C  
                          l4457 233A                            l4449 227E                            l4545 5792  
                          l4529 5772                            l4561 5566                            l5097 185A  
                          l5361 4010                            l5353 3FD2                            l5345 3F9C  
                          l5337 3F58                            l5273 5034                            l5521 3DF6  
                          l5513 3DD6                            l5505 3DBE                            l4379 567A  
                          l3659 41DA                            l3667 4214                            l3691 45F0  
                          l3683 459C                            l3675 4566                            l3843 2C56  
                          l3835 2C2A                            l3827 2BDE                            l3819 2B28  
                          l3771 4DB2                            l3763 4D80                            l3755 4D5A  
                          l3747 4D38                            l3739 5742                            l4387 4E0E  
                          l4395 4E4C                            l4571 440A                            l4651 43D0  
                          l4643 437C                            l4635 4334                            l4627 42FA  
                          l4619 42BA                            l5195 2CDC                            l5187 2CAC  
                          l5179 54B0                            l4491 32B8                            l4483 3238  
                          l5451 3214                            l5443 31E2                            l5435 3188  
                          l5427 312E                            l5419 30D4                            l3851 570E  
                          l5267 566A                            l5259 5642                            l5291 5482  
                          l4803 299A                            l4731 2742                            l4715 26FE  
                          l4723 271E                            l4707 26C0                            l4811 3A54  
                          l3931 1A98                            l3923 1A88                            l3915 1A78  
                          l3907 1A44                            l4299 539E                            l4475 25D6  
                          l4467 24C8                            l4459 2356                            l4555 559A  
                          l4539 57AC                            l4547 5076                            l4563 557C  
                          l5371 404A                            l5355 3FDE                            l5347 3FB0  
                          l5339 3F6A                            l5283 5072                            l5275 504C  
                          l5531 3E1E                            l5523 3DFC                            l5515 3DDA  
                          l5507 3DC2                            l3669 4224                            l3693 4604  
                          l3685 45AA                            l3677 456A                            l3837 2C30  
                          l3845 2C66                            l3829 2BF8                            l3781 4DD8  
                          l3773 4DBA                            l3765 4D88                            l3757 4D5E  
                          l3749 4D40                            l3861 37AC                            l3853 36C8  
                          l4661 4FBA                            l4653 4F66                            l4397 4E64  
                          l4389 4E26                            l4581 4460                            l4573 4422  
                          l4645 439A                            l4637 434E                            l4629 4306  
                          l5197 2CF4                            l5189 2CC0                            l4493 32CA  
                          l4485 3248                            l5445 31E4                            l5437 318A  
                          l5429 3130                            l5293 5496                            l4741 2794  
                          l4733 275C                            l4725 272E                            l4717 2706  
                          l4709 26C8                            l4813 3A64                            l3941 1AAC  
                          l3933 1A9C                            l3925 1A8C                            l3917 1A7C  
                          l3909 1A54                            l4477 25FA                            l4469 24FA  
                          l4549 50D8                            l4901 3934                            l4565 5592  
                          l5381 40A4                            l5365 4028                            l5357 3FF2  
                          l5349 3FC2                            l5277 506C                            l5269 4FFE  
                          l5541 3E7E                            l5533 3E20                            l5525 3DFC  
                          l5517 3DDE                            l5509 3DCE                            l3695 4612  
                          l3687 45CA                            l3679 4578                            l3599 4AD0  
                          l3839 2C42                            l3791 29EE                            l3783 4DE0  
                          l3775 4DBC                            l3767 4D96                            l3759 4D66  
                          l3863 37C8                            l3855 36E4                            l4655 4F8A  
                          l4663 4FC8                            l4399 4E7C                            l4671 550A  
                          l4591 44A4                            l4583 446E                            l4575 442E  
                          l4647 43A6                            l4639 4360                            l5199 2CFA  
                          l4495 32EA                            l4487 3268                            l5447 31F6  
                          l5439 319C                            l5391 2F80                            l5295 5498  
                          l5287 545A                            l4751 27F0                            l4743 27A4  
                          l4735 276C                            l4727 272E                            l4719 270A  
                          l4831 3B2A                            l4823 3AE2                            l4815 3A72  
                          l3951 1AFE                            l3943 1AB0                            l3935 1AA0  
                          l3927 1A90                            l3919 1A80                            l3871 198E  
                          l4911 3980                            l4903 3940                            l4559 5560  
                          l5383 40B8                            l5375 4060                            l5367 4034  
                          l5359 400A                            l5551 3EC2                            l5543 3EAA  
                          l5535 3E2C                            l5527 3E08                            l5519 3DE2  
                          l3697 4640                            l3689 45E8                            l3793 2A0E  
                          l3777 4DC2                            l3769 4D9C                            l3865 3832  
                          l3857 3746                            l4665 4FE0                            l4657 4FA2  
                          l4593 44B4                            l4585 447A                            l4577 443A  
                          l4569 43E6                            l4649 43B6                            l4497 3302  
                          l4489 3280                            l5449 3200                            l5393 2FAC  
                          l3849 56FE                            l5289 546A                            l5297 49FE  
                          l4761 2830                            l4753 27F2                            l4745 27B8  
                          l4737 277C                            l4681 2638                            l4673 260C  
                          l4841 3BAA                            l4833 3B36                            l4825 3AEA  
                          l4817 3AB8                            l3961 1B42                            l3953 1B0E  
                          l3937 1AA4                            l3929 1A94                            l3945 1AB4  
                          l3881 19C2                            l3873 1990                            l4921 399A  
                          l4905 3958                            l5385 40D2                            l5377 4074  
                          l5369 403A                            l5561 3F42                            l5553 3ED6  
                          l5545 3EAC                            l5537 3E40                            l3699 4660  
                          l3795 2A1E                            l3787 29A6                            l3779 4DC8  
                          l3859 378C                            l4659 4FAE                            l4667 54DE  
                          l4595 44CE                            l4587 4486                            l4579 4448  
                          l4499 333A                            l5395 2FC6                            l5387 2F60  
                          l5299 4A0A                            l4771 286C                            l4763 283A  
                          l4755 2802                            l4747 27C6                            l4739 278C  
                          l4691 2672                            l4683 2648                            l4675 2618  
                          l4851 3BF2                            l4843 3BAC                            l4835 3B72  
                          l4827 3AF6                            l4819 3ACE                            l3963 1B44  
                          l3955 1B24                            l3947 1AB8                            l3939 1AA8  
                          l3891 19F4                            l3875 19A0                            l3883 19CA  
                          l3867 1974                            l4931 39E6                            l4923 39A6  
                          l4907 395E                            l5379 4094                            l5563 3F48  
                          l5555 3EF0                            l5547 3EB4                            l5539 3E62  
                          l3797 2A22                            l3789 29C6                            l4669 54F2  
                          l4597 44E0                            l4589 4498                            l5397 2FC8  
                          l5389 2F70                            l4861 56E4                            l4781 28DE  
                          l4773 287A                            l4765 2848                            l4757 2814  
                          l4749 27D2                            l4693 2678                            l4685 2658  
                          l4677 2626                            l4853 3BF4                            l4845 3BB0  
                          l4837 3B7E                            l4829 3B28                            l3981 1BCC  
                          l3973 1B94                            l3965 1B4E                            l3957 1B30  
                          l3949 1AE2                            l3893 19FA                            l3885 19DA  
                          l3877 19B0                            l3869 1980                            l4941 3A00  
                          l4925 39BE                            l4917 398A                            l4909 397A  
                          l5557 3F0A                            l5549 3EBC                            l3799 2A3E  
                          l4599 44EC                            l5399 2FDA                            l4863 56E6  
                          l4791 294A                            l4783 28EC                            l4775 28A8  
                          l4759 282A                            l4767 285A                            l4695 267E  
                          l4687 265A                            l4679 2628                            l4847 3BD4  
                          l4839 3B8C                            l3983 1BD0                            l3975 1BA4  
                          l3967 1B70                            l3991 1BF0                            l3959 1B34  
                          l3895 1A08                            l3887 19E0                            l3879 19C0  
                          l4951 3A4C                            l4943 3A0C                            l4927 39C4  
                          l4919 398E                            l4871 389C                            l5559 3F28  
                          l4865 56E8                            l4857 56D4                            l4793 2964  
                          l4785 2916                            l4769 2868                            l4697 268C  
                          l4689 2662                            l4849 3BE4                            l3993 1C16  
                          l3985 1BDE                            l3977 1BB2                            l3969 1B80  
                          l3897 1A0A                            l3889 19F2                            l4961 3500  
                          l4953 34D6                            l4945 3A24                            l4937 39F0  
                          l4929 39E0                            l4881 38CE                            l4867 56EA  
                          l4859 56DE                            l4795 2980                            l4779 28D2  
                          l4787 291A                            l4699 268E                            l3995 1C4A  
                          l3987 1BE0                            l3979 1BC0                            l3899 1A1A  
                          l4971 3560                            l4963 3514                            l4955 34DA  
                          l4947 3A2A                            l4939 39F4                            l4891 391A  
                          l4883 38DA                            l4869 580E                            l4797 2984  
                          l4789 2934                            l3997 1C4C                            l3989 1BEA  
                          l4981 35C4                            l4973 3578                            l4965 352C  
                          l4957 34E4                            l4949 3A46                            l4885 38F2  
                          l4877 38BE                            l4799 2992                            l3999 1C5C  
                          l4991 3628                            l4983 35DC                            l4975 3590  
                          l4967 3544                            l4959 34FC                            l4887 38F8  
                          l4879 38C2                            l4993 3640                            l4985 35F4  
                          l4977 35A8                            l4969 355C                            l4897 3924  
                          l4889 3914                            l4995 3658                            l4987 360C  
                          l4979 35C0                            l4899 3928                            l4997 3670  
                          l4989 3624                            l4999 3688                            STR_1 0E05  
                          STR_3 0E0D                            u3000 45E8                            u3001 45E4  
                          u3010 4612                            u3011 460E                            u3020 4640  
                          u3100 4D52                            u3021 463C                            u3101 4D4E  
                          u3030 4688                            u3110 4D78                            u3031 4684  
                          u3111 4D74                            u3040 4C70                            u3200 2A6C  
                          u3120 4D96                            u4000 2176                    _BAUD4CONbits 000EE9  
                          u3041 4C6C                            u3201 2A68                            u3121 4D92  
                          u4001 2172                            _LATE 000F7D                            u3050 4C92  
                          u3210 2A7C                            u3130 4DB2                            u4010 2190  
                          u3051 4C8E                            u3211 2A78                            u3131 4DAE  
                          u4011 218C                            _LATG 000F7F                            u3060 4CE8  
                          u3220 2BA6                            u3140 4DD8                            u3300 570E  
                          u4020 21D8                            u4100 55EA                            u3061 4CE4  
                          u3221 2BA2                            u3141 4DD4                            u3301 570A  
                          u4021 21D4                            u4101 55E6                            u3070 4CF8  
                          u3230 2BC4                            u3150 29D6                            u4110 513E  
                          u3310 5724                            u4030 2206                            u3071 4CF4  
                          u3231 2BC0                            u3151 29D0                            u4111 513A  
                          u3311 5720                            u4031 2202                            u4120 56A4  
                          u3080 553A                            u3240 2BDE                            u3160 29D8  
                          u3320 36E4                            u5000 3B6E                            u4200 48C8  
                          u4040 2240                            u3400 1A08                            u4121 56A0  
                          u3081 5536                            u3241 2BDA                            u3321 36E0  
                          u5001 3B6A                            u4201 48C4                            u4041 223C  
                          u3401 1A04                            u3250 2BF8                            u3170 29EE  
                          u3090 4D38                            u3330 37C8                            u4130 4E64  
                          u5010 3B8C                            u4210 48D8                            u4050 4928  
                          u3410 1A1A                            _T2PR 000FBC                            u3251 2BF4  
                          u3171 29EA                            u3091 4D34                            u3331 37C4  
                          u4131 4E60                            u5011 3B88                            u4211 48D4  
                          u4051 4924                            u3411 1A16                            u3260 2C08  
                          u3180 2A1E                            u4140 4E7C                            u5020 3B9C  
                          u4060 4966                            u3500 1B62                            u3420 1A2A  
                          u4300 25D6                            u4220 229E                            u5100 15BC  
                          u3261 2C04                            u3181 2A1A                            u4141 4E78  
                          u5021 3B98                            u4061 4962                            u3501 1B5E  
                          u3421 1A26                            u4301 25D2                            u5101 15B8  
                          u3270 2C1A                            u3190 2A3E                            u4310 3248  
                          u5030 3BAA                            u4150 480A                            u4070 4984  
                          u3510 1B70                            u3430 1A66                            u4230 22C6  
                          u5110 168A                            u3271 2C16                            u3191 2A3A  
                          u4311 3244                            u5031 3BA6                            u4151 4806  
                          u4071 4980                            u3511 1B6C                            u3431 1A62  
                          u4231 22C2                            u5111 1686                            u3280 2C2A  
                          u3344 3822                            u4320 325A                            u5040 3BE4  
                          u4160 483E                            u4080 49A4                            u3600 1CCE  
                          u3520 1B80                            u3440 1A74                            u3360 198E  
                          u4240 22FA                            u5200 18BA                            u5120 16CC  
                          u3281 2C26                            u3345 381E                            u4321 3252  
                          u5041 3BE0                            u4081 49A0                            u3601 1CCA  
                          u3521 1B7C                            u3441 1A70                            u3361 198A  
                          u4225 2294                            u5201 18B6                            u5121 16C8  
                          u3290 2C42                            u3354 388C                            u4410 334C  
                          u5050 3BF2                            u4170 486C                            u4090 49F4  
                          u3610 1CDE                            u3530 1BB2                            u3450 1AE2  
                          u3370 19A0                            u4250 2316                            u5210 18E8  
                          u5130 178C                            u3291 2C3E                            u3355 3888  
                          u4411 3348                            u5051 3BEE                            u4171 4868  
                          u4091 49F0                            u3611 1CDA                            u3531 1BAE  
                          u3451 1ADE                            u3371 199C                            u4251 2312  
                          u5211 18E4                            u5131 1788                            u2900 5634  
                          u5300 2E00                            u4420 335E                            u4340 3292  
                          u4180 4880                            u3700 1DC2                            u3620 1CFA  
                          u3540 1BC0                            u3460 1AFA                            u3380 19B0  
                          u4260 2356                            u5060 3914                            u5220 191C  
                          u5140 17A4                            u2901 5630                            u5301 2DFC  
                          u4421 3356                            u4341 328A                            u4181 487C  
                          u4165 4834                            u3701 1DBE                            u3621 1CF6  
                          u3541 1BBC                            u3461 1AF4                            u3381 19AC  
                          u4261 2352                            u4245 22F0                            u5061 3910  
                          u5221 1918                            u5141 17A0                            u2910 40F0  
                          u5310 2E40                            u4510 3454                            u4190 48A8  
                          u3710 1DD2                            u3630 1D0A                            u3550 1BDE  
                          u3470 1AFC                            u3390 19F2                            u4270 245C  
                          u5070 397A                            u5230 194A                            u5150 17EE  
                          u2911 40EC                            u5311 2E3C                            u4511 3450  
                          u6007 337A                            u4191 48A4                            u3711 1DCE  
                          u3631 1D06                            u3551 1BDA                            u3391 19EE  
                          u4271 2458                            u5071 3976                            u5231 1946  
                          u5151 17EA                            u2920 4122                            u4600 4498  
                          u5320 2E94                            u4520 3466                            u4440 339A  
                          u4408 3316                            u4360 32CA                            u3720 1DF2  
                          u3640 1D1C                            u3560 1C16                            u3480 1B24  
                          u4280 24FA                            u5080 39E0                            u5240 1964  
                          u5160 1806                            u5400 3FC2                            u2921 411E  
                          u4601 4494                            u5321 2E90                            u4521 345E  
                          u6017 33B6                            u4441 3392                            u4361 32C6  
                          u3721 1DEE                            u3641 1D18                            u3561 1C12  
                          u3481 1B20                            u4281 24F6                            u5081 39DC  
                          u5241 1960                            u5161 1802                            u5401 3FBE  
                          u2850 4AE2                            u3810 4EC6                            u4610 44CE  
                          u5330 2EE8                            u4370 32DC                            u4338 325C  
                          u3730 1E04                            u3650 1D32                            u3570 1C5C  
                          u3490 1B42                            u4290 25BA                            u5090 3A46  
                          u5170 1826                            u5250 4C58                            u5410 3FF2  
            verify_color@color2 0096                            u2931 414C                            u2851 4ADE  
                          u3811 4EC2                            u4611 44CA                            u6107 4372  
                          u5331 2EE4                            u6027 33FE                            u4371 32D4  
                          u3731 1E00                            u3651 1D2E                            u3571 1C58  
                          u3491 1B3E                            u5091 3A42                            u5171 1822  
                          u5251 4C54                            u5411 3FEE                            u2940 4170  
                          u2860 4AF4                            u3820 4EEA                            u4620 44E0  
                          u4700 43D0                            u5340 2F28                            u5260 2D24  
                          u4540 349C                            u4508 3420                            u4460 33D6  
                          u5500 308E                            u3900 1EC2                            u3740 1E20  
                          u3660 1D48                            u3580 1C92                            u5180 185A  
                          u5420 4024                            u2941 416C                            u2861 4AF0  
                          u3821 4EE6                            u4621 44DC                            u4701 43CC  
                          u6117 43AC                            u5341 2F24                            u5261 2D20  
                          u4541 3494                            u6037 3434                            u4461 33D2  
                          u5501 308A                            u3901 1EBE                            u3741 1E1C  
                          u3661 1D44                            u3581 1C8E                            u5181 1856  
                          u5421 4020                            u2950 419A                            u2870 4B1C  
                          u3750 3C2A                            u4710 4FE0                            u3830 4F34  
                          u4630 4516                            u5270 2D4A                            u4470 33E8  
                          u4438 3360                            u4390 3314                            u4358 3294  
                          u5510 30E8                            u3910 1ED2                            u3670 1D5C  
                          u3590 1CA2                            u5190 188C                            u5430 404A  
                          u5350 506C                            u2951 4196                            u2871 4B18  
                          u3751 3C26                            u4711 4FDC                            u6207 4F56  
                          u3831 4F30                            u4631 4512                            u6127 4440  
                          u5271 2D46                            u6047 347C                            u4471 33E0  
                          u4391 330C                            u5511 30E4                            u3911 1ECE  
                          u3671 1D58                            u3591 1C9E                            u4295 25B0  
                          u5191 1888                            u5431 4046                            u5351 5068  
                          u2960 41DA                            u2880 4B52                            u3760 3C72  
                          u4720 4FF8                            u3840 4F4C                            u4640 4550  
                          u5280 2D80                            u4560 34D4                            u5520 3142  
                          u4800 272E                            u3808 5444                            u3920 1F08  
                          u3680 1D76                            u5440 405C                            u5600 3E74  
                          u2961 41D6                            u2881 4B4E                            u3761 3C6E  
                          u4721 4FF4                            u6217 4FC0                            u3841 4F48  
                          u4641 454C                            u6137 44AA                            u5281 2D7C  
                          u4561 34D0                            u6057 34B2                            u5521 313E  
                          u4801 272A                            u3921 1F04                            u3681 1D72  
                          u5441 4058                            u5601 3E70                            u3850 587A  
                          u2970 4224                            u2890 5416                            u3770 3C96  
                          u4650 42E0                            u5290 2DC0                            u4538 3468  
                          u4490 341E                            u4458 339C                            u5530 319C  
                          u4810 27A4                            u4730 2626                            u3930 1F18  
                          u3690 1DB0                            u4570 557C                            u5450 40A4  
                          u3851 5876                            u2971 4220                            u2891 5412  
                          u3771 3C92                            u6147 44F2                            u4651 42DC  
                          u5291 2DBC                            u6067 54BA                            u4491 3416  
                          u5531 3198                            u4811 27A0                            u4731 2622  
                          u3931 1F14                            u3691 1DAC                            u4571 5578  
                          u5451 40A0                            u2980 4578                            u3780 3D3A  
                          u4660 4318                            u4388 32DE                            u5540 31F6  
                          u5460 2F70                            u4900 28BE                            u4820 27C6  
                          u4740 2638                            u3940 2092                            u3860 1E4E  
                          u4580 5592                            u5380 3F7C                            u2981 4574  
                          u3781 3D36                            u6157 452C                            u4661 4314  
                          u6077 2CE6                            u5541 31F2                            u5461 2F6C  
                          u4901 28BA                            u4821 27C2                            u4741 2634  
                          u3861 1E4A                            u4581 558E                            u5381 3F78  
                          u2990 45AA                            u4590 4460                            u4670 434E  
                          u4558 349E                            u5470 2F80                            u4910 28D2  
                          u4830 27F0                            u4750 2648                            u3790 5442  
                          u3950 20EC                            u3870 1E60                            u5390 3F9C  
                          u2991 45A6                            u6167 54FC                            u4591 445C  
                          u4671 434A                            u6087 42C0                            u5471 2F7C  
                          u4911 28CE                            u4831 27EC                            u4751 2644  
                          u3791 543A                            u3951 20E8                            u3871 1E5C  
                          u5391 3F98                            u4680 4360                            u4488 33EA  
                          u5480 2FDA                            u4920 28EC                            u4840 2814  
                          u4760 268C                            u3960 210C                            u3880 1E70  
                          u6177 4E44                            u4681 435C                            u6097 432A  
                          u5481 2FD6                            u4921 28E8                            u4841 2810  
                          u4761 2688                            u3961 2108                            u3945 2088  
                          u3881 1E6C                            u4690 4396                            u5490 3034  
                          u4930 2934                            u4850 282A                            u4770 269E  
                          u3970 211E                            u3890 1EB0                            u6187 4E86  
                          u4691 4392                            u5491 3030                            u4931 2930  
                          u4851 2826                            u4771 269A                            u3971 211A  
                          u3891 1EAC                            u5707 5040                            u4940 2964  
                          u4860 2848                            u4780 26AE                            u3980 214C  
                          u6197 4F14                            u4941 2960                            u4861 2844  
                          u4781 26AA                            u3981 2148                            u5717 40C4  
                          u4950 2992                            u4870 2868                            u4790 26EE  
                          u3990 2162                            u4951 298E                            u4871 2864  
                          u4791 26EA                            u3991 215E                            u5807 34EE  
                          u5727 4BC0                            u4880 287A                            u4960 3A64  
                          u4881 2876                            u4961 3A60                            u5817 354E  
                          u5737 10AE                            u4890 28A8                            u4970 3A72  
                          u4891 28A4                            u4971 3A6E                            u5907 46FE  
                          u5827 35B2                            u5747 1314                            u4980 3ACE  
                          u4981 3ACA                            u5917 4722                            u5837 3616  
                          u5757 1582                            u4990 3B24                            u4991 3B20  
                          u5927 4746                            u5847 3692                            u5767 38E4  
                          u5687 3EE2                            u5937 476A                            u5857 36AE  
                          u5777 394A                            u5697 500A                            u5947 57DC  
                          u5867 575C                            u5787 39B0                            u5957 5656  
                          u5877 577C                            u5797 3A16                            u5967 3272  
                          u5887 579C                            u5977 32AA                            u5897 57BC  
                          u5987 32F4                            u5997 332C                            abs@a 0013  
                          _dbuf 019E                            _main 3DBA                            _dtoa 29A6  
                          _prec 0194                            _nout 0190                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 4EAA                            prodh 000FF4                            prodl 000FF3  
                          start 0028                  ?_color_display 0058                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 529E                 __end_of_HighISR 0028                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 4266       amb_light_measure@CC_amb_1 0072  
     amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076                 __end_of___fladd 1E34  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 46CA  
               __end_of___fldiv 29A6                 __end_of___awdiv 4DEA                 __end_of___flneg 560C  
               __end_of___flmul 225E                 __end_of___flsub 53D4                 __end_of___fltol 48FA  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 57AC  
                         _LED_C 57CC                           _LED_G 578C                           _LED_R 574C  
                         i2l677 0024                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5880  
    __end_of_I2C_2_Master_Start 58CC         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 58A2  
               __end_of_compare 559A                    compare@lower 006A                           _flags 00F8  
                         _color 019C                    compare@upper 006E                           _fputc 4AD0  
                         _fputs 53D4                           pad@fp 0011                           _width 0192  
                         _putch 58CE                           _toint 0E01                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                 ??_test_function 00EE  
          amb_light_measure@amb 006A                           tablat 000FF5                 __end_of_lroundf 55D4  
                         ttemp5 0060                           ttemp6 0063                           ttemp7 0067  
                         status 000FD8                           wtemp8 0060                 __end_of_sprintf 524E  
              color_display@buf 0079         __end_of_color_read_Blue 533E           _I2C_2_Master_RepStart 58AE  
               ??_short_reverse 002A                 ?_color_read_Red 0005                 __initialization 51A6  
                  __end_of_main 3F54                    __end_of_dtoa 2C90                   main@amb_light 01C6  
          __end_of_detect_color 1974                    __end_of_stop 4F66          color_data_collection@i 00DE  
        color_data_collection@j 00E0          color_data_collection@k 00E2          color_data_collection@m 005A  
        color_data_collection@x 00E4                          ??_main 00F6                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
               _buggylight_init 5880                       ??_LED_OFF 0001          _initDCmotors_parameter 49FE  
                  ?_setMotorPWM 000F                          ?_fputc 0001                          ?_fputs 000A  
              ___awdiv@dividend 0007                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5571 000A  
                        i2l5573 001A                          i2l5575 0020              turnLeft@angle_left 0024  
                     ??_HighISR 0001        __end_of_color_click_init 5676                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A                __end_of___xxtofl 3C06  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 48FA                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5726                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                        _action 2F5E                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 2C90                   compare@result 0070                          _memory 013C  
                        clear_0 51D6                ___awdiv@quotient 000D                          _second 019A  
                        _motorL 0182                          _motorR 0178                          isa$std 000001  
                        pad@buf 0013                          _roundf 225E                          dtoa@fp 001C  
                        _strlen 560C                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 580C                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 00E6                  test_function@w 00E8                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 5148                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
              __end_of_turnLeft 4566                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
              calibrate_white@w 000C                 fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022  
                    __accesstop 0060         __end_of__initialization 51EA                   verify_color@m 0090  
                 verify_color@w 0092        __end_of_color_read_Clear 538E                      ___flneg@f1 0001  
      __end_of_color_read_Green 52EE          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 57CC                   __end_of_LED_C 57EC  
                 __end_of_LED_G 57AC                   __end_of_LED_R 576C                ?_color_read_Blue 0005  
               _Interrupts_init 58A2                  __pcstackCOMRAM 0001                   _fullSpeedBack 4DEA  
                  __pidataBANK0 58CC                    __pidataBANK1 58D0         __end_of_buggylight_init 5896  
          turnRight@angle_right 0024           _distance_measure$3236 0074                   __end_of_fputc 4B9A  
             detect_color@color 008B                   __end_of_fputs 5418                   __end_of_putch 58D0  
                 __end_of_toint 0E05             __end_of_Timer0_init 5868                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A              ??_distance_measure 0070                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00F8  
                    __pbssBANK1 0100                color_predict@buf 0079       distance_measure@amb_light 006E  
             _color_writetoaddr 580C                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 00E0                         ?_goback 0058                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 576C  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E                    _detect_color 0E14  
 __end_of_color_data_collection 3A52         __end_of_Interrupts_init 58AE          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 582C  
            _I2C_2_Master_Start 58C2                      _initUSART4 582C              _I2C_2_Master_Write 5896  
                     ?_pin_init 0001                         __Hparam 0000           test_function@complete 00F2  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 584A  
       sendStringSerial4@string 0002                         ___aodiv 40DE                         ___fladd 1974  
                       ___aomod 4566                         ___fldiv 260C                         ___awdiv 4D26  
                       ___flneg 55D4                         ___flmul 1E34                         ___flsub 538E  
                       ___fltol 47F2             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 007A                         __pcinit 51A6                         __ramtop 0E00  
                    _read_color 5148                       ?_turnLeft 0020                         __ptext0 3DBA  
                       __ptext1 4FFA                         __ptext2 3F54                         __ptext3 4B9A  
                       __ptext4 0E14                         __ptext5 5560                         __ptext6 389C  
                       __ptext7 5148                         __ptext8 5076                         __ptext9 34D6  
                       _compare 5560         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE                         _lroundf 559A  
                 _RxBufWriteCnt 00FD                         goback@i 00DE          distance_measure@CC_amb 0078  
                       main@amb 01BE          distance_measure@CG_amb 0072                         _sprintf 51FC  
                       main@rgb 01C9            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 51EA              setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF  
               _CALIBRATION_180 01FF                         fputc@fp 0003           __end_of_test_function 40DE  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 00EA  
               test_function@mR 00EC                 ??_fullSpeedBack 0024                      ??_pin_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 3DBA           __end_of_short_reverse 54DE  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 545A                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4AD0  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4               __end_of_turnRight 43E6  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
                    _start_move 0198                ?_Interrupts_init 0001                     ___flmul@grs 0035  
                 ?_toggle_light 0001               ?_color_read_Clear 0005                    _EUSART4RXbuf 0164  
                  _EUSART4TXbuf 0100               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001                   ?_verify_color 0090           __end_of_color_display 50E6  
                    main@motorL 01EB                      main@motorR 01F5     amb_light_measure@CC_amb_ave 0070  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 0087                  detect_color@BG 0089  
                detect_color@GB 007B                  detect_color@GG 0081                  detect_color@BR 0085  
                detect_color@GR 007F                  detect_color@RB 0079                  detect_color@RG 007D  
                detect_color@RR 0083           __end_of_color_predict 56D4                  __end_of___flge 49FE  
                _fullSpeedAhead 4F66                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 574C                  __end_of_action 322A  
                   ?_read_color 000C                  __end_of_goback 2F5E                  __end_of_roundf 260C  
            turnRight@delay_135 0026              turnRight@delay_180 0028                  __end_of_strlen 5642  
           color_read_Clear@tmp 000A             start_initialization 51A6                     __end_of_abs 5560  
                   __end_of_pad 4D26                   _TxBufWriteCnt 00FB               turnLeft@delay_135 0026  
             turnLeft@delay_180 0028                  ??_toggle_light 0002                  ??_verify_color 0094  
           color_read_Green@tmp 000A                  _reverse_square 54DE         __end_of_initDCmotorsPWM 549C  
                   vfprintf@fmt 0052          __end_of_fullSpeedAhead 4FFA                        ??___flge 0009  
                      ??___wmul 0005                        ??_action 005E                        ??_goback 005C  
               short_reverse@mL 0026                 short_reverse@mR 0028                     __pdataBANK0 00FE  
                   __pdataBANK1 01FF                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 01BE                ___aodiv@dividend 0001  
                      ?_HighISR 0001          __end_of_reverse_square 5520                       _dtoa$2870 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                 turnRight@i_1353 002C  
               turnRight@i_1354 002E                  turnLeft@i_1328 002C                  turnLeft@i_1329 002E  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 56FE               _I2C_2_Master_Init 56D4  
             _I2C_2_Master_Read 5418               _I2C_2_Master_Stop 58B8          toggle_light@toggletime 0001  
                  _RxBufReadCnt 00FC                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 5676           _color_data_collection 389C             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0026  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                   turnRight@mL 0020                     turnRight@mR 0022                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u561_40 001A                        i2u561_41 0016  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                     _array_index 019D  
                     _vfpfcnvrt 3C06       __end_of_I2C_2_Master_Idle 5726            __end_of_toggle_light 34D6  
     __end_of_I2C_2_Master_Init 56FE       __end_of_I2C_2_Master_Read 545A               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 58C2                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 5076          test_function@amb_light 00F0                       main@white 01D1  
             ??_color_read_Blue 0007                       _stop_move 0196                   detect_color@m 0071  
                 detect_color@w 0073                    _TxBufReadCnt 00FA                       _turnRight 4266  
               _calibrate_white 34D6       __end_of_sendStringSerial4 56A6               _amb_light_measure 46CA  
 __end_of_I2C_2_Master_RepStart 58B8              color_read_Blue@tmp 000A             __end_of_setMotorPWM 389C  
                    roundf@F527 018C                _distance_measure 4B9A                    ??_initUSART4 0001  
            ?_amb_light_measure 006A                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 4EAA  
                  __Lsmallconst 0E00            compare@value2compare 006C             ??_amb_light_measure 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 005E                      sprintf@fmt 0062                        ___xxtofl 3A52  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 584A  
                    ?_turnRight 0020                        __ptext10 524E                        __ptext11 529E  
                      __ptext20 538E                        __ptext12 52EE                        __ptext21 1974  
                      __ptext13 574C                        __ptext30 260C                        __ptext22 55D4  
                      __ptext14 576C                        __ptext31 57CC                        __ptext23 1E34  
                      __ptext15 578C                        __ptext40 58C2                        __ptext32 57EC  
                      __ptext24 48FA                        __ptext16 57AC                        __ptext41 56FE  
                      __ptext33 582C                        __ptext25 47F2                        __ptext17 46CA  
                      __ptext50 54DE                        __ptext42 56D4                        __ptext34 49FE  
                      __ptext26 533E                        __ptext18 559A                        __ptext51 4DEA  
                      __ptext43 5880                        __ptext35 545A                        __ptext27 58AE  
                      __ptext19 225E                        __ptext60 3C06                        __ptext52 4EAA  
                      __ptext44 2F5E                        __ptext36 5642                        __ptext28 5418  
                      __ptext61 29A6                        __ptext53 4F66                        __ptext45 322A  
                      __ptext37 580C                        __ptext29 3A52                        __ptext70 5676  
                      __ptext62 4C60                        __ptext54 36C8                        __ptext46 549C  
                      __ptext38 5896                        __ptext71 5868                        __ptext63 560C  
                      __ptext55 5726                        __ptext47 2C90                        __ptext39 58B8  
                      __ptext72 584A                        __ptext64 53D4                        __ptext56 4D26  
                      __ptext48 4266                        __ptext73 58A2                        __ptext65 4AD0  
                      __ptext57 56A6                        __ptext49 43E6                        __ptext66 58CE  
                      __ptext58 51FC                        __ptext67 5520                        __ptext59 50E6  
                      __ptext68 4566                        __ptext69 40DE       __end_of_amb_light_measure 47F2  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
                turnRight@delay 0030          test_function@test_code 00F5                   turnLeft@delay 0030  
                      action@mL 00E0                        action@mR 00E2                      turnLeft@mL 0020  
                    turnLeft@mR 0022              __end_of_read_color 51A6                        _pin_init 57EC  
                    turnRight@i 002A                        isa$xinst 000000            distance_measure@stop 007C  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 00FE  
                      goback@mL 0058                        goback@mR 005A                        _vfprintf 50E6  
                      _turnLeft 43E6                ___aomod@dividend 0001         __end_of_calibrate_white 36C8  
                    _INTCONbits 000FF2                     _setMotorPWM 36C8                   ?_detect_color 0071  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0001                ??_fullSpeedAhead 001E  
                 _test_function 3F54                       turnLeft@i 002A                reverse_square@mL 0026  
              reverse_square@mR 0028                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 549C                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 5642                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3235 008C                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 0075                     ??_turnRight 0025                   ___fladd@signs 000D  
              ??_reverse_square 002A                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 5868                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E6                    _toggle_light 322A                    ___aomod@sign 0012  
                  _verify_color 4FFA                     _roundf$3237 004F                     _roundf$3238 0049  
                 _color_display 5076                 main@stop_signal 01C8  
