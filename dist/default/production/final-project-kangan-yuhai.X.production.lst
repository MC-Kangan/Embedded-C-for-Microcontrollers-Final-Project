

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 16 22:13:38 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.35
    95                           ; Generated 05/05/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  006030                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for _SENSITIVITY
   135  006030  0096               	dw	150
   136                           
   137                           	psect	smallconst
   138  000E00                     __psmallconst:
   139                           	callstack 0
   140  000E00  00                 	db	0
   141  000E01  0000               	dw	0
   142  000E03  4B00               	dw	19200
   143  000E05                     __end_of_toint:
   144                           	callstack 0
   145  0000                     _TX4REG	set	3812
   146  0000                     _RC4STAbits	set	3815
   147  0000                     _SP4BRGH	set	3814
   148  0000                     _LATEbits	set	3965
   149  0000                     _TRISEbits	set	3973
   150  0000                     _LATHbits	set	3968
   151  0000                     _SSP2CON2bits	set	3802
   152  0000                     _LATG	set	3967
   153  0000                     _LATE	set	3965
   154  0000                     _RX4PPS	set	3605
   155  0000                     _SSP2CLKPPS	set	3612
   156  0000                     _SSP2DATPPS	set	3613
   157  0000                     _ANSELDbits	set	3751
   158  0000                     _ANSELFbits	set	3764
   159  0000                     _TRISFbits	set	3974
   160  0000                     _PORTFbits	set	3982
   161  0000                     _T2PR	set	4028
   162  0000                     _T2CONbits	set	4029
   163  0000                     _TRISHbits	set	3976
   164  0000                     _TRISGbits	set	3975
   165  0000                     _PWM7DCH	set	4000
   166  0000                     _PWM6DCH	set	4003
   167  0000                     _SSP2BUF	set	3797
   168  0000                     _SSP2ADD	set	3798
   169  0000                     _SSP2CON1bits	set	3801
   170  0000                     _LATAbits	set	3961
   171  0000                     _LATFbits	set	3966
   172  0000                     _LATGbits	set	3967
   173  0000                     _TRISAbits	set	3969
   174  0000                     _TRISCbits	set	3971
   175  0000                     _TRISDbits	set	3972
   176  0000                     _LATCbits	set	3963
   177  0000                     _LATDbits	set	3964
   178  0000                     _RC4REG	set	3811
   179  0000                     _SP4BRGL	set	3813
   180  0000                     _TX4STAbits	set	3816
   181  0000                     _BAUD4CONbits	set	3817
   182  0000                     _SSP2CON2	set	3802
   183  0000                     _SSP2STAT	set	3800
   184  0000                     _PIE0bits	set	3625
   185  0000                     _PIR4bits	set	3639
   186  0000                     _RC0PPS	set	3682
   187  0000                     _RC7PPS	set	3689
   188  0000                     _RD5PPS	set	3695
   189  0000                     _RE2PPS	set	3700
   190  0000                     _RD6PPS	set	3696
   191  0000                     _TMR0L	set	4051
   192  0000                     _TMR0H	set	4052
   193  0000                     _T0CON0bits	set	4053
   194  0000                     _T2CLKCONbits	set	4031
   195  0000                     _T2HLTbits	set	4030
   196  0000                     _PWM6CONbits	set	4004
   197  0000                     _PWM7CONbits	set	4001
   198  0000                     _T0CON1bits	set	4054
   199  0000                     _INTCONbits	set	4082
   200  0000                     _PIR0bits	set	3635
   201  000E05                     STR_1:
   202                           
   203                           ; BSR set to: 14
   204  000E05  25                 	db	37
   205  000E06  64                 	db	100	;'d'
   206  000E07  09                 	db	9
   207  000E08  25                 	db	37
   208  000E09  64                 	db	100	;'d'
   209  000E0A  09                 	db	9
   210  000E0B  25                 	db	37
   211  000E0C  64                 	db	100	;'d'
   212  000E0D  09                 	db	9
   213  000E0E  25                 	db	37
   214  000E0F  64                 	db	100	;'d'
   215  000E10  0D                 	db	13
   216  000E11  0A                 	db	10
   217  000E12  00                 	db	0
   218  000E13  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           ; #config settings
   221                           
   222                           	psect	cinit
   223  005D3C                     __pcinit:
   224                           	callstack 0
   225  005D3C                     start_initialization:
   226                           	callstack 0
   227  005D3C                     __initialization:
   228                           	callstack 0
   229                           
   230                           ; Initialize objects allocated to BANK1 (2 bytes)
   231                           ; load TBLPTR registers with __pidataBANK1
   232  005D3C  0E30               	movlw	low __pidataBANK1
   233  005D3E  6EF6               	movwf	tblptrl,c
   234  005D40  0E60               	movlw	high __pidataBANK1
   235  005D42  6EF7               	movwf	tblptrh,c
   236  005D44  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   237  005D46  6EF8               	movwf	tblptru,c
   238  005D48  0009               	tblrd		*+	;fetch initializer
   239  005D4A  CFF5 F1FE          	movff	tablat,__pdataBANK1
   240  005D4E  0009               	tblrd		*+	;fetch initializer
   241  005D50  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
   242                           
   243                           ; Clear objects allocated to BANK1 (166 bytes)
   244  005D54  EE01  F000         	lfsr	0,__pbssBANK1
   245  005D58  0EA6               	movlw	166
   246  005D5A                     clear_0:
   247  005D5A  6AEE               	clrf	postinc0,c
   248  005D5C  06E8               	decf	wreg,f,c
   249  005D5E  E1FD               	bnz	clear_0
   250  005D60                     end_of_initialization:
   251                           	callstack 0
   252  005D60                     __end_of__initialization:
   253                           	callstack 0
   254  005D60  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  005D62  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  005D64  0E00               	movlw	low (__Lsmallconst shr (0+16))
   257  005D66  6EF8               	movwf	tblptru,c
   258  005D68  0E0E               	movlw	high __Lsmallconst
   259  005D6A  6EF7               	movwf	tblptrh,c
   260  005D6C  0100               	movlb	0
   261  005D6E  EF95  F01D         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK1
   264  000100                     __pbssBANK1:
   265                           	callstack 0
   266  000100                     _memory:
   267                           	callstack 0
   268  000100                     	ds	100
   269  000164                     _motorR:
   270                           	callstack 0
   271  000164                     	ds	9
   272  00016D                     _motorL:
   273                           	callstack 0
   274  00016D                     	ds	9
   275  000176                     roundf@F527:
   276                           	callstack 0
   277  000176                     	ds	4
   278  00017A                     _nout:
   279                           	callstack 0
   280  00017A                     	ds	2
   281  00017C                     _width:
   282                           	callstack 0
   283  00017C                     	ds	2
   284  00017E                     _prec:
   285                           	callstack 0
   286  00017E                     	ds	2
   287  000180                     _flags:
   288                           	callstack 0
   289  000180                     	ds	2
   290  000182                     _centisecond:
   291                           	callstack 0
   292  000182                     	ds	2
   293  000184                     _color:
   294                           	callstack 0
   295  000184                     	ds	1
   296  000185                     _array_index:
   297                           	callstack 0
   298  000185                     	ds	1
   299  000186                     _dbuf:
   300                           	callstack 0
   301  000186                     	ds	32
   302                           
   303                           	psect	dataBANK1
   304  0001FE                     __pdataBANK1:
   305                           	callstack 0
   306  0001FE                     _SENSITIVITY:
   307                           	callstack 0
   308  0001FE                     	ds	2
   309                           
   310                           	psect	cstackBANK1
   311  0001A6                     __pcstackBANK1:
   312                           	callstack 0
   313  0001A6                     verify_color@m:
   314                           	callstack 0
   315  0001A6                     test_function@m:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319  0001A6                     	ds	2
   320  0001A8                     verify_color@w:
   321                           	callstack 0
   322  0001A8                     test_function@w:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  0001A8                     	ds	2
   327  0001AA                     verify_color@color2:
   328                           	callstack 0
   329  0001AA                     test_function@mL:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x4
   333  0001AA                     	ds	2
   334  0001AC                     verify_color@color:
   335                           	callstack 0
   336  0001AC                     test_function@mR:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340  0001AC                     	ds	2
   341  0001AE                     test_function@amb_light:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x8
   345  0001AE                     	ds	2
   346  0001B0                     test_function@complete:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xA
   350  0001B0                     	ds	1
   351  0001B1                     test_function@color:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xB
   355  0001B1                     	ds	1
   356  0001B2                     test_function@stop_signal:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xC
   360  0001B2                     	ds	1
   361  0001B3                     test_function@test_code:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xD
   365  0001B3                     	ds	1
   366  0001B4                     ??_main:
   367                           
   368                           ; 1 bytes @ 0xE
   369  0001B4                     	ds	4
   370  0001B8                     main@amb:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0x12
   374  0001B8                     	ds	8
   375  0001C0                     main@amb_light:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1A
   379  0001C0                     	ds	2
   380  0001C2                     main@stop_signal:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1C
   384  0001C2                     	ds	1
   385  0001C3                     main@accident:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x1D
   389  0001C3                     	ds	1
   390  0001C4                     main@start_time:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x1E
   394  0001C4                     	ds	2
   395  0001C6                     main@stop_time:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x20
   399  0001C6                     	ds	2
   400  0001C8                     main@rgb:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x22
   404  0001C8                     	ds	8
   405  0001D0                     main@white:
   406                           	callstack 0
   407                           
   408                           ; 28 bytes @ 0x2A
   409  0001D0                     	ds	28
   410  0001EC                     main@motorL:
   411                           	callstack 0
   412                           
   413                           ; 9 bytes @ 0x46
   414  0001EC                     	ds	9
   415  0001F5                     main@motorR:
   416                           	callstack 0
   417                           
   418                           ; 9 bytes @ 0x4F
   419  0001F5                     	ds	9
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	callstack 0
   424  000060                     ??___fltol:
   425  000060                     ?_sprintf:
   426                           	callstack 0
   427  000060                     sprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000060                     	ds	2
   432  000062                     sprintf@fmt:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000062                     	ds	2
   437  000064                     ___fltol@sign1:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441  000064                     	ds	1
   442  000065                     ___fltol@exp1:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446  000065                     	ds	1
   447  000066                     ?_lroundf:
   448                           	callstack 0
   449  000066                     lroundf@x:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x6
   453  000066                     	ds	4
   454  00006A                     ?_amb_light_measure:
   455                           	callstack 0
   456  00006A                     compare@lower:
   457                           	callstack 0
   458  00006A                     amb_light_measure@amb:
   459                           	callstack 0
   460  00006A                     detect_wall@mL:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xA
   464  00006A                     	ds	2
   465  00006C                     ??_amb_light_measure:
   466  00006C                     compare@value2compare:
   467                           	callstack 0
   468  00006C                     detect_wall@mR:
   469                           	callstack 0
   470  00006C                     sprintf@ap:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xC
   474  00006C                     	ds	2
   475  00006E                     compare@upper:
   476                           	callstack 0
   477  00006E                     amb_light_measure@upper_bound:
   478                           	callstack 0
   479  00006E                     detect_wall@amb_light:
   480                           	callstack 0
   481  00006E                     sprintf@f:
   482                           	callstack 0
   483                           
   484                           ; 11 bytes @ 0xE
   485  00006E                     	ds	2
   486  000070                     ??_detect_wall:
   487  000070                     compare@result:
   488                           	callstack 0
   489  000070                     amb_light_measure@CC_amb_ave:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x10
   493  000070                     	ds	2
   494  000072                     amb_light_measure@CC_amb_1:
   495                           	callstack 0
   496  000072                     detect_wall@CG_amb:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x12
   500  000072                     	ds	2
   501  000074                     amb_light_measure@CC_amb_2:
   502                           	callstack 0
   503  000074                     _detect_wall$2948:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x14
   507  000074                     	ds	2
   508  000076                     amb_light_measure@CC_amb_3:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x16
   512  000076                     	ds	2
   513  000078                     ?_setup:
   514                           	callstack 0
   515  000078                     detect_wall@CC_amb:
   516                           	callstack 0
   517  000078                     setup@white:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x18
   521  000078                     	ds	1
   522  000079                     detect_color@m:
   523                           	callstack 0
   524  000079                     color_display@buf:
   525                           	callstack 0
   526  000079                     color_predict@buf:
   527                           	callstack 0
   528                           
   529                           ; 100 bytes @ 0x19
   530  000079                     	ds	1
   531  00007A                     detect_wall@threshold:
   532                           	callstack 0
   533  00007A                     setup@amb:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00007A                     	ds	1
   538  00007B                     detect_color@w:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1B
   542  00007B                     	ds	1
   543  00007C                     detect_wall@stop:
   544                           	callstack 0
   545  00007C                     setup@mL:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1C
   549  00007C                     	ds	1
   550  00007D                     ??_detect_color:
   551                           
   552                           ; 1 bytes @ 0x1D
   553  00007D                     	ds	1
   554  00007E                     setup@mR:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1E
   558  00007E                     	ds	2
   559  000080                     ??_setup:
   560                           
   561                           ; 1 bytes @ 0x20
   562  000080                     	ds	1
   563  000081                     detect_color@buf:
   564                           	callstack 0
   565                           
   566                           ; 100 bytes @ 0x21
   567  000081                     	ds	1
   568  000082                     setup@amb_light:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572  000082                     	ds	91
   573  0000DD                     color_predict@color:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x7D
   577  0000DD                     	ds	1
   578  0000DE                     color_data_collection@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x7E
   582  0000DE                     	ds	2
   583  0000E0                     color_data_collection@j:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x80
   587  0000E0                     	ds	2
   588  0000E2                     color_data_collection@k:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x82
   592  0000E2                     	ds	2
   593  0000E4                     color_data_collection@x:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x84
   597  0000E4                     	ds	1
   598  0000E5                     detect_color@BC:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x85
   602  0000E5                     	ds	2
   603  0000E7                     detect_color@RG:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x87
   607  0000E7                     	ds	2
   608  0000E9                     detect_color@BR:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x89
   612  0000E9                     	ds	2
   613  0000EB                     detect_color@GR:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x8B
   617  0000EB                     	ds	2
   618  0000ED                     detect_color@RB:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x8D
   622  0000ED                     	ds	2
   623  0000EF                     detect_color@BB:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x8F
   627  0000EF                     	ds	2
   628  0000F1                     detect_color@GB:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x91
   632  0000F1                     	ds	2
   633  0000F3                     detect_color@GG:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x93
   637  0000F3                     	ds	2
   638  0000F5                     detect_color@color:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x95
   642  0000F5                     	ds	1
   643  0000F6                     detect_color@BG:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x96
   647  0000F6                     	ds	2
   648  0000F8                     detect_color@RR:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x98
   652  0000F8                     	ds	2
   653  0000FA                     _detect_color$2947:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x9A
   657  0000FA                     	ds	4
   658  0000FE                     ??_test_function:
   659  0000FE                     ??_verify_color:
   660                           
   661                           ; 1 bytes @ 0x9E
   662  0000FE                     	ds	2
   663                           
   664                           	psect	cstackCOMRAM
   665  000001                     __pcstackCOMRAM:
   666                           	callstack 0
   667  000001                     ??_LED_OFF:
   668  000001                     ??_LED_R:
   669  000001                     ??_LED_C:
   670  000001                     ??_LED_B:
   671  000001                     ??_LED_G:
   672  000001                     ??_I2C_2_Master_Idle:
   673  000001                     ?_strlen:
   674                           	callstack 0
   675  000001                     ?___wmul:
   676                           	callstack 0
   677  000001                     ?___fladd:
   678                           	callstack 0
   679  000001                     ?___flneg:
   680                           	callstack 0
   681  000001                     ?___xxtofl:
   682                           	callstack 0
   683  000001                     ?___aodiv:
   684                           	callstack 0
   685  000001                     ?___aomod:
   686                           	callstack 0
   687  000001                     toggle_light@toggletime:
   688                           	callstack 0
   689  000001                     sendCharSerial4@charToSend:
   690                           	callstack 0
   691  000001                     initDCmotorsPWM@PWMperiod:
   692                           	callstack 0
   693  000001                     initDCmotors_parameter@motorL:
   694                           	callstack 0
   695  000001                     ___wmul@multiplier:
   696                           	callstack 0
   697  000001                     fputc@c:
   698                           	callstack 0
   699  000001                     strlen@s:
   700                           	callstack 0
   701  000001                     ___flge@ff1:
   702                           	callstack 0
   703  000001                     ___flneg@f1:
   704                           	callstack 0
   705  000001                     ___fladd@b:
   706                           	callstack 0
   707  000001                     ___xxtofl@val:
   708                           	callstack 0
   709  000001                     ___aodiv@dividend:
   710                           	callstack 0
   711  000001                     ___aomod@dividend:
   712                           	callstack 0
   713                           
   714                           ; 8 bytes @ 0x0
   715  000001                     	ds	1
   716  000002                     ??_I2C_2_Master_Read:
   717  000002                     ??_toggle_light:
   718  000002                     I2C_2_Master_Write@data_byte:
   719                           	callstack 0
   720  000002                     sendStringSerial4@string:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x1
   724  000002                     	ds	1
   725  000003                     color_writetoaddr@value:
   726                           	callstack 0
   727  000003                     I2C_2_Master_Read@ack:
   728                           	callstack 0
   729  000003                     initDCmotors_parameter@motorR:
   730                           	callstack 0
   731  000003                     ___wmul@multiplicand:
   732                           	callstack 0
   733  000003                     fputc@fp:
   734                           	callstack 0
   735  000003                     strlen@a:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x2
   739  000003                     	ds	1
   740  000004                     toggle_light@i:
   741                           	callstack 0
   742  000004                     color_writetoaddr@address:
   743                           	callstack 0
   744  000004                     I2C_2_Master_Read@tmp:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x3
   748  000004                     	ds	1
   749  000005                     ??_fputc:
   750  000005                     ??_color_click_init:
   751  000005                     ??___xxtofl:
   752  000005                     ?_color_read_Red:
   753                           	callstack 0
   754  000005                     ?_color_read_Blue:
   755                           	callstack 0
   756  000005                     ?_color_read_Green:
   757                           	callstack 0
   758  000005                     ?_color_read_Clear:
   759                           	callstack 0
   760  000005                     toggle_light@lightnumber:
   761                           	callstack 0
   762  000005                     ___wmul@product:
   763                           	callstack 0
   764  000005                     ___flge@ff2:
   765                           	callstack 0
   766  000005                     ___fladd@a:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x4
   770  000005                     	ds	2
   771  000007                     ??_color_read_Red:
   772  000007                     ??_color_read_Blue:
   773  000007                     ??_color_read_Green:
   774  000007                     ??_color_read_Clear:
   775  000007                     ?___awdiv:
   776                           	callstack 0
   777  000007                     ___awdiv@dividend:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x6
   781  000007                     	ds	2
   782  000009                     ??___fladd:
   783  000009                     ??___flge:
   784  000009                     ___xxtofl@sign:
   785                           	callstack 0
   786  000009                     ___awdiv@divisor:
   787                           	callstack 0
   788  000009                     ___aodiv@divisor:
   789                           	callstack 0
   790  000009                     ___aomod@divisor:
   791                           	callstack 0
   792                           
   793                           ; 8 bytes @ 0x8
   794  000009                     	ds	1
   795  00000A                     ___xxtofl@exp:
   796                           	callstack 0
   797  00000A                     color_read_Red@tmp:
   798                           	callstack 0
   799  00000A                     color_read_Blue@tmp:
   800                           	callstack 0
   801  00000A                     color_read_Green@tmp:
   802                           	callstack 0
   803  00000A                     color_read_Clear@tmp:
   804                           	callstack 0
   805  00000A                     fputs@s:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x9
   809  00000A                     	ds	1
   810  00000B                     ___awdiv@counter:
   811                           	callstack 0
   812  00000B                     ___xxtofl@arg:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0xA
   816  00000B                     	ds	1
   817  00000C                     ___awdiv@sign:
   818                           	callstack 0
   819  00000C                     read_color@m:
   820                           	callstack 0
   821  00000C                     calibrate_white@w:
   822                           	callstack 0
   823  00000C                     fputs@fp:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0xB
   827  00000C                     	ds	1
   828  00000D                     ___fladd@signs:
   829                           	callstack 0
   830  00000D                     ___awdiv@quotient:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0xC
   834  00000D                     	ds	1
   835  00000E                     ??_calibrate_white:
   836  00000E                     ___fladd@aexp:
   837                           	callstack 0
   838  00000E                     fputs@c:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0xD
   842  00000E                     	ds	1
   843  00000F                     ?___fldiv:
   844                           	callstack 0
   845  00000F                     ___fladd@bexp:
   846                           	callstack 0
   847  00000F                     setMotorPWM@m:
   848                           	callstack 0
   849  00000F                     fputs@i:
   850                           	callstack 0
   851  00000F                     ___fldiv@b:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0xE
   855  00000F                     	ds	1
   856  000010                     ___fladd@grs:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0xF
   860  000010                     	ds	1
   861  000011                     ??_setMotorPWM:
   862  000011                     ?_pad:
   863                           	callstack 0
   864  000011                     ?___flsub:
   865                           	callstack 0
   866  000011                     ___aodiv@counter:
   867                           	callstack 0
   868  000011                     ___aomod@counter:
   869                           	callstack 0
   870  000011                     pad@fp:
   871                           	callstack 0
   872  000011                     ___flsub@b:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x10
   876  000011                     	ds	1
   877  000012                     ___aodiv@sign:
   878                           	callstack 0
   879  000012                     ___aomod@sign:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x11
   883  000012                     	ds	1
   884  000013                     ?_abs:
   885                           	callstack 0
   886  000013                     pad@buf:
   887                           	callstack 0
   888  000013                     abs@a:
   889                           	callstack 0
   890  000013                     ___fldiv@a:
   891                           	callstack 0
   892  000013                     ___aodiv@quotient:
   893                           	callstack 0
   894                           
   895                           ; 8 bytes @ 0x12
   896  000013                     	ds	2
   897  000015                     ??_abs:
   898  000015                     pad@p:
   899                           	callstack 0
   900  000015                     ___flsub@a:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0x14
   904  000015                     	ds	2
   905  000017                     ??___fldiv:
   906  000017                     ??_pad:
   907                           
   908                           ; 1 bytes @ 0x16
   909  000017                     	ds	1
   910  000018                     setMotorPWM@PWMduty:
   911                           	callstack 0
   912  000018                     pad@i:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x17
   916  000018                     	ds	1
   917  000019                     
   918                           ; 1 bytes @ 0x18
   919  000019                     	ds	1
   920  00001A                     stop@mL:
   921                           	callstack 0
   922  00001A                     fullSpeedAhead@mL:
   923                           	callstack 0
   924  00001A                     pad@w:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x19
   928  00001A                     	ds	1
   929  00001B                     ___fldiv@rem:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x1A
   933  00001B                     	ds	1
   934  00001C                     ?_dtoa:
   935                           	callstack 0
   936  00001C                     stop@mR:
   937                           	callstack 0
   938  00001C                     fullSpeedAhead@mR:
   939                           	callstack 0
   940  00001C                     dtoa@fp:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x1B
   944  00001C                     	ds	2
   945  00001E                     ??_stop:
   946  00001E                     ??_fullSpeedAhead:
   947  00001E                     dtoa@d:
   948                           	callstack 0
   949                           
   950                           ; 8 bytes @ 0x1D
   951  00001E                     	ds	1
   952  00001F                     ___fldiv@sign:
   953                           	callstack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00001F                     	ds	1
   957  000020                     turn45@mL:
   958                           	callstack 0
   959  000020                     fullSpeedBack@mL:
   960                           	callstack 0
   961  000020                     short_burst@mL:
   962                           	callstack 0
   963  000020                     ___fldiv@new_exp:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x1F
   967  000020                     	ds	2
   968  000022                     turn45@mR:
   969                           	callstack 0
   970  000022                     fullSpeedBack@mR:
   971                           	callstack 0
   972  000022                     short_burst@mR:
   973                           	callstack 0
   974  000022                     ___fldiv@grs:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x21
   978  000022                     	ds	2
   979  000024                     ??_short_burst:
   980  000024                     turn45@turn_time:
   981                           	callstack 0
   982  000024                     fullSpeedBack@instruction:
   983                           	callstack 0
   984                           
   985                           ; 1 bytes @ 0x23
   986  000024                     	ds	1
   987  000025                     ??_fullSpeedBack:
   988  000025                     turn45@direction:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x24
   992  000025                     	ds	1
   993  000026                     ??_turn45:
   994  000026                     ??_dtoa:
   995  000026                     ___fldiv@bexp:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x25
   999  000026                     	ds	1
  1000  000027                     ___fldiv@aexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x26
  1004  000027                     	ds	1
  1005  000028                     ?___flmul:
  1006                           	callstack 0
  1007  000028                     turn45@i_1335:
  1008                           	callstack 0
  1009  000028                     ___flmul@b:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x27
  1013  000028                     	ds	2
  1014  00002A                     turn45@i_1337:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x29
  1018  00002A                     	ds	2
  1019  00002C                     turn45@i:
  1020                           	callstack 0
  1021  00002C                     ___flmul@a:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x2B
  1025  00002C                     	ds	1
  1026  00002D                     goback@mL:
  1027                           	callstack 0
  1028  00002D                     test_action@mL:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x2C
  1032  00002D                     	ds	1
  1033  00002E                     _dtoa$2619:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x2D
  1037  00002E                     	ds	1
  1038  00002F                     goback@mR:
  1039                           	callstack 0
  1040  00002F                     test_action@mR:
  1041                           	callstack 0
  1042                           
  1043                           ; 2 bytes @ 0x2E
  1044  00002F                     	ds	1
  1045  000030                     ??___flmul:
  1046  000030                     dtoa@p:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x2F
  1050  000030                     	ds	1
  1051  000031                     ??_goback:
  1052  000031                     ??_test_action:
  1053                           
  1054                           ; 1 bytes @ 0x30
  1055  000031                     	ds	1
  1056  000032                     dtoa@w:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x31
  1060  000032                     	ds	1
  1061  000033                     goback@i:
  1062                           	callstack 0
  1063  000033                     calibration_motor@mL:
  1064                           	callstack 0
  1065                           
  1066                           ; 2 bytes @ 0x32
  1067  000033                     	ds	1
  1068  000034                     ___flmul@sign:
  1069                           	callstack 0
  1070  000034                     dtoa@s:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x33
  1074  000034                     	ds	1
  1075  000035                     turning_action@mL:
  1076                           	callstack 0
  1077  000035                     calibration_motor@mR:
  1078                           	callstack 0
  1079  000035                     ___flmul@grs:
  1080                           	callstack 0
  1081                           
  1082                           ; 4 bytes @ 0x34
  1083  000035                     	ds	1
  1084  000036                     dtoa@n:
  1085                           	callstack 0
  1086                           
  1087                           ; 8 bytes @ 0x35
  1088  000036                     	ds	1
  1089  000037                     ??_calibration_motor:
  1090  000037                     turning_action@mR:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0x36
  1094  000037                     	ds	2
  1095  000039                     turning_action@color:
  1096                           	callstack 0
  1097  000039                     ___flmul@aexp:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x38
  1101  000039                     	ds	1
  1102  00003A                     ___flmul@bexp:
  1103                           	callstack 0
  1104                           
  1105                           ; 1 bytes @ 0x39
  1106  00003A                     	ds	1
  1107  00003B                     ___flmul@prod:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x3A
  1111  00003B                     	ds	3
  1112  00003E                     dtoa@i:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x3D
  1116  00003E                     	ds	1
  1117  00003F                     ___flmul@temp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x3E
  1121  00003F                     	ds	1
  1122  000040                     ?_vfpfcnvrt:
  1123                           	callstack 0
  1124  000040                     vfpfcnvrt@fp:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x3F
  1128  000040                     	ds	1
  1129  000041                     ?_roundf:
  1130                           	callstack 0
  1131  000041                     roundf@x:
  1132                           	callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x40
  1135  000041                     	ds	1
  1136  000042                     vfpfcnvrt@fmt:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x41
  1140  000042                     	ds	2
  1141  000044                     vfpfcnvrt@ap:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x43
  1145  000044                     	ds	1
  1146  000045                     ??_roundf:
  1147                           
  1148                           ; 1 bytes @ 0x44
  1149  000045                     	ds	1
  1150  000046                     ??_vfpfcnvrt:
  1151                           
  1152                           ; 1 bytes @ 0x45
  1153  000046                     	ds	2
  1154  000048                     vfpfcnvrt@ll:
  1155                           	callstack 0
  1156                           
  1157                           ; 8 bytes @ 0x47
  1158  000048                     	ds	1
  1159  000049                     _roundf$2950:
  1160                           	callstack 0
  1161                           
  1162                           ; 4 bytes @ 0x48
  1163  000049                     	ds	4
  1164  00004D                     roundf@e:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0x4C
  1168  00004D                     	ds	2
  1169  00004F                     _roundf$2949:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x4E
  1173  00004F                     	ds	1
  1174  000050                     ?_vfprintf:
  1175                           	callstack 0
  1176  000050                     vfprintf@fp:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x4F
  1180  000050                     	ds	2
  1181  000052                     vfprintf@fmt:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x51
  1185  000052                     	ds	1
  1186  000053                     roundf@u:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x52
  1190  000053                     	ds	1
  1191  000054                     vfprintf@ap:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x53
  1195  000054                     	ds	2
  1196  000056                     vfprintf@cfmt:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x55
  1200  000056                     	ds	1
  1201  000057                     roundf@y:
  1202                           	callstack 0
  1203                           
  1204                           ; 4 bytes @ 0x56
  1205  000057                     	ds	1
  1206  000058                     color_display@m:
  1207                           	callstack 0
  1208                           
  1209                           ; 2 bytes @ 0x57
  1210  000058                     	ds	2
  1211  00005A                     color_data_collection@m:
  1212                           	callstack 0
  1213                           
  1214                           ; 2 bytes @ 0x59
  1215  00005A                     	ds	1
  1216  00005B                     ?___fltol:
  1217                           	callstack 0
  1218  00005B                     ___fltol@f1:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x5A
  1222  00005B                     	ds	1
  1223  00005C                     ??_color_data_collection:
  1224                           
  1225                           ; 1 bytes @ 0x5B
  1226  00005C                     	ds	3
  1227  00005F                     
  1228                           ; 1 bytes @ 0x5E
  1229 ;;
  1230 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1231 ;;
  1232 ;; *************** function _main *****************
  1233 ;; Defined at:
  1234 ;;		line 27 in file "main.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  white          28   42[BANK1 ] struct white_card
  1239 ;;  motorR          9   79[BANK1 ] struct DC_motor
  1240 ;;  motorL          9   70[BANK1 ] struct DC_motor
  1241 ;;  rgb             8   34[BANK1 ] struct color_rgb
  1242 ;;  amb             8   18[BANK1 ] struct color_rgb
  1243 ;;  stop_time       2   32[BANK1 ] unsigned int 
  1244 ;;  start_time      2   30[BANK1 ] unsigned int 
  1245 ;;  amb_light       2   26[BANK1 ] unsigned int 
  1246 ;;  accident        1   29[BANK1 ] unsigned char 
  1247 ;;  stop_signal     1   28[BANK1 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1258 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1259 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1260 ;;      Totals:         0       0      74       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1261 ;;Total ram usage:       74 bytes
  1262 ;; Hardware stack levels required when called: 12
  1263 ;; This function calls:
  1264 ;;		_Interrupts_init
  1265 ;;		_Timer0_init
  1266 ;;		_color_click_init
  1267 ;;		_detect_color
  1268 ;;		_detect_wall
  1269 ;;		_fullSpeedAhead
  1270 ;;		_goback
  1271 ;;		_initDCmotorsPWM
  1272 ;;		_initDCmotors_parameter
  1273 ;;		_initUSART4
  1274 ;;		_pin_init
  1275 ;;		_setup
  1276 ;;		_short_burst
  1277 ;;		_stop
  1278 ;;		_test_function
  1279 ;;		_turning_action
  1280 ;;		_verify_color
  1281 ;; This function is called by:
  1282 ;;		Startup code after reset
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text0
  1287  003B2A                     __ptext0:
  1288                           	callstack 0
  1289  003B2A                     _main:
  1290                           	callstack 19
  1291  003B2A                     
  1292                           ;main.c: 29:     struct color_rgb rgb, amb;;main.c: 30:     struct white_card white;;mai
      +                          n.c: 31:     struct DC_motor motorL, motorR;;main.c: 35:     color_click_init();
  1293  003B2A  ECEE  F02E         	call	_color_click_init	;wreg free
  1294  003B2E                     
  1295                           ;main.c: 36:     pin_init();
  1296  003B2E  ECD4  F02E         	call	_pin_init	;wreg free
  1297  003B32                     
  1298                           ;main.c: 37:     initDCmotorsPWM(199);
  1299  003B32  0E00               	movlw	0
  1300  003B34  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1301  003B36  0EC7               	movlw	199
  1302  003B38  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1303  003B3A  EC07  F02E         	call	_initDCmotorsPWM	;wreg free
  1304  003B3E                     
  1305                           ;main.c: 38:     initDCmotors_parameter(&motorL, &motorR);
  1306  003B3E  0EEC               	movlw	low main@motorL
  1307  003B40  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1308  003B42  0E01               	movlw	high main@motorL
  1309  003B44  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1310  003B46  0EF5               	movlw	low main@motorR
  1311  003B48  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1312  003B4A  0E01               	movlw	high main@motorR
  1313  003B4C  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1314  003B4E  EC23  F029         	call	_initDCmotors_parameter	;wreg free
  1315  003B52                     
  1316                           ;main.c: 39:     initUSART4();
  1317  003B52  ECD3  F02F         	call	_initUSART4	;wreg free
  1318  003B56                     
  1319                           ;main.c: 40:     Timer0_init();
  1320  003B56  ECE2  F02F         	call	_Timer0_init	;wreg free
  1321  003B5A                     
  1322                           ;main.c: 41:     Interrupts_init();
  1323  003B5A  EC03  F030         	call	_Interrupts_init	;wreg free
  1324  003B5E                     
  1325                           ;main.c: 43:     unsigned char stop_signal = 0;
  1326  003B5E  0E00               	movlw	0
  1327  003B60  0101               	movlb	1	; () banked
  1328  003B62  6FC2               	movwf	main@stop_signal& (0+255),b
  1329  003B64                     
  1330                           ; BSR set to: 1
  1331                           ;main.c: 45:     unsigned char accident = 0;
  1332  003B64  0E00               	movlw	0
  1333  003B66  6FC3               	movwf	main@accident& (0+255),b
  1334  003B68                     
  1335                           ; BSR set to: 1
  1336                           ;main.c: 50:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1337  003B68  0ED0               	movlw	low main@white
  1338  003B6A  0100               	movlb	0	; () banked
  1339  003B6C  6F78               	movwf	setup@white& (0+255),b
  1340  003B6E  0E01               	movlw	high main@white
  1341  003B70  6F79               	movwf	(setup@white+1)& (0+255),b
  1342  003B72  0EB8               	movlw	low main@amb
  1343  003B74  6F7A               	movwf	setup@amb& (0+255),b
  1344  003B76  0E01               	movlw	high main@amb
  1345  003B78  6F7B               	movwf	(setup@amb+1)& (0+255),b
  1346  003B7A  0EEC               	movlw	low main@motorL
  1347  003B7C  6F7C               	movwf	setup@mL& (0+255),b
  1348  003B7E  0E01               	movlw	high main@motorL
  1349  003B80  6F7D               	movwf	(setup@mL+1)& (0+255),b
  1350  003B82  0EF5               	movlw	low main@motorR
  1351  003B84  6F7E               	movwf	setup@mR& (0+255),b
  1352  003B86  0E01               	movlw	high main@motorR
  1353  003B88  6F7F               	movwf	(setup@mR+1)& (0+255),b
  1354  003B8A  EC25  F025         	call	_setup	;wreg free
  1355  003B8E  C078  F1C0         	movff	?_setup,main@amb_light
  1356  003B92  C079  F1C1         	movff	?_setup+1,main@amb_light+1
  1357  003B96                     l5400:
  1358                           
  1359                           ;main.c: 56:             T0CON0bits.T0EN=1;
  1360  003B96  8ED5               	bsf	213,7,c	;volatile
  1361  003B98                     
  1362                           ;main.c: 57:             start_time = centisecond;
  1363  003B98  C182  F1C4         	movff	_centisecond,main@start_time
  1364  003B9C  C183  F1C5         	movff	_centisecond+1,main@start_time+1
  1365                           
  1366                           ;main.c: 58:             while (stop_signal == 0){
  1367  003BA0  EFED  F01D         	goto	l5408
  1368  003BA4                     l5404:
  1369                           
  1370                           ; BSR set to: 1
  1371                           ;main.c: 59:                 fullSpeedAhead(&motorL, &motorR);
  1372  003BA4  0EEC               	movlw	low main@motorL
  1373  003BA6  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1374  003BA8  0E01               	movlw	high main@motorL
  1375  003BAA  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1376  003BAC  0EF5               	movlw	low main@motorR
  1377  003BAE  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1378  003BB0  0E01               	movlw	high main@motorR
  1379  003BB2  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1380  003BB4  ECB7  F02A         	call	_fullSpeedAhead	;wreg free
  1381  003BB8                     
  1382                           ;main.c: 60:                 stop_signal = detect_wall(&motorL, &motorR, amb_light);
  1383  003BB8  0EEC               	movlw	low main@motorL
  1384  003BBA  0100               	movlb	0	; () banked
  1385  003BBC  6F6A               	movwf	detect_wall@mL& (0+255),b
  1386  003BBE  0E01               	movlw	high main@motorL
  1387  003BC0  6F6B               	movwf	(detect_wall@mL+1)& (0+255),b
  1388  003BC2  0EF5               	movlw	low main@motorR
  1389  003BC4  6F6C               	movwf	detect_wall@mR& (0+255),b
  1390  003BC6  0E01               	movlw	high main@motorR
  1391  003BC8  6F6D               	movwf	(detect_wall@mR+1)& (0+255),b
  1392  003BCA  C1C0  F06E         	movff	main@amb_light,detect_wall@amb_light
  1393  003BCE  C1C1  F06F         	movff	main@amb_light+1,detect_wall@amb_light+1
  1394  003BD2  ECF1  F029         	call	_detect_wall	;wreg free
  1395  003BD6  0101               	movlb	1	; () banked
  1396  003BD8  6FC2               	movwf	main@stop_signal& (0+255),b
  1397  003BDA                     l5408:
  1398                           
  1399                           ;main.c: 58:             while (stop_signal == 0){
  1400  003BDA  0101               	movlb	1	; () banked
  1401  003BDC  51C2               	movf	main@stop_signal& (0+255),w,b
  1402  003BDE  B4D8               	btfsc	status,2,c
  1403  003BE0  EFF4  F01D         	goto	u5851
  1404  003BE4  EFF6  F01D         	goto	u5850
  1405  003BE8                     u5851:
  1406  003BE8  EFD2  F01D         	goto	l5404
  1407  003BEC                     u5850:
  1408  003BEC                     
  1409                           ; BSR set to: 1
  1410                           ;main.c: 63:             T0CON0bits.T0EN=0;
  1411  003BEC  9ED5               	bcf	213,7,c	;volatile
  1412                           
  1413                           ;main.c: 64:             stop_time = centisecond;
  1414  003BEE  C182  F1C6         	movff	_centisecond,main@stop_time
  1415  003BF2  C183  F1C7         	movff	_centisecond+1,main@stop_time+1
  1416  003BF6                     
  1417                           ; BSR set to: 1
  1418                           ;main.c: 65:             if ((stop_time-start_time)>10){
  1419  003BF6  51C4               	movf	main@start_time& (0+255),w,b
  1420  003BF8  5DC6               	subwf	main@stop_time& (0+255),w,b
  1421  003BFA  6FB4               	movwf	??_main& (0+255),b
  1422  003BFC  51C5               	movf	(main@start_time+1)& (0+255),w,b
  1423  003BFE  59C7               	subwfb	(main@stop_time+1)& (0+255),w,b
  1424  003C00  6FB5               	movwf	(??_main+1)& (0+255),b
  1425  003C02  51B5               	movf	(??_main+1)& (0+255),w,b
  1426  003C04  E109               	bnz	u5860
  1427  003C06  0E0B               	movlw	11
  1428  003C08  5DB4               	subwf	??_main& (0+255),w,b
  1429  003C0A  A0D8               	btfss	status,0,c
  1430  003C0C  EF0A  F01E         	goto	u5861
  1431  003C10  EF0C  F01E         	goto	u5860
  1432  003C14                     u5861:
  1433  003C14  EF29  F01E         	goto	l5416
  1434  003C18                     u5860:
  1435  003C18                     
  1436                           ; BSR set to: 1
  1437                           ;main.c: 66:                 memory[array_index] = (stop_time-start_time-3);
  1438  003C18  0EFD               	movlw	253
  1439  003C1A  6FB4               	movwf	??_main& (0+255),b
  1440  003C1C  0EFF               	movlw	255
  1441  003C1E  6FB5               	movwf	(??_main+1)& (0+255),b
  1442  003C20  51C4               	movf	main@start_time& (0+255),w,b
  1443  003C22  5DC6               	subwf	main@stop_time& (0+255),w,b
  1444  003C24  6FB6               	movwf	(??_main+2)& (0+255),b
  1445  003C26  51C5               	movf	(main@start_time+1)& (0+255),w,b
  1446  003C28  59C7               	subwfb	(main@stop_time+1)& (0+255),w,b
  1447  003C2A  6FB7               	movwf	(??_main+3)& (0+255),b
  1448  003C2C  51B4               	movf	??_main& (0+255),w,b
  1449  003C2E  27B6               	addwf	(??_main+2)& (0+255),f,b
  1450  003C30  51B5               	movf	(??_main+1)& (0+255),w,b
  1451  003C32  23B7               	addwfc	(??_main+3)& (0+255),f,b
  1452  003C34  5185               	movf	_array_index& (0+255),w,b
  1453  003C36  0D02               	mullw	2
  1454  003C38  0E00               	movlw	low _memory
  1455  003C3A  24F3               	addwf	243,w,c
  1456  003C3C  6ED9               	movwf	fsr2l,c
  1457  003C3E  0E01               	movlw	high _memory
  1458  003C40  20F4               	addwfc	prodh,w,c
  1459  003C42  6EDA               	movwf	fsr2h,c
  1460  003C44  C1B6  FFDE         	movff	??_main+2,postinc2
  1461  003C48  C1B7  FFDD         	movff	??_main+3,postdec2
  1462  003C4C                     
  1463                           ; BSR set to: 1
  1464                           ;main.c: 67:                 array_index++;
  1465  003C4C  2B85               	incf	_array_index& (0+255),f,b
  1466                           
  1467                           ;main.c: 68:             }
  1468  003C4E  EF3F  F01E         	goto	l5424
  1469  003C52                     l5416:
  1470                           
  1471                           ; BSR set to: 1
  1472                           ;main.c: 70:                 accident++;
  1473  003C52  2BC3               	incf	main@accident& (0+255),f,b
  1474  003C54                     
  1475                           ; BSR set to: 1
  1476                           ;main.c: 71:                 if (accident >= 5){
  1477  003C54  0E04               	movlw	4
  1478  003C56  65C3               	cpfsgt	main@accident& (0+255),b
  1479  003C58  EF30  F01E         	goto	u5871
  1480  003C5C  EF32  F01E         	goto	u5870
  1481  003C60                     u5871:
  1482  003C60  EF3F  F01E         	goto	l5424
  1483  003C64                     u5870:
  1484  003C64                     
  1485                           ; BSR set to: 1
  1486                           ;main.c: 72:                     goback(&motorL, &motorR);
  1487  003C64  0EEC               	movlw	low main@motorL
  1488  003C66  6E2D               	movwf	goback@mL^0,c
  1489  003C68  0E01               	movlw	high main@motorL
  1490  003C6A  6E2E               	movwf	(goback@mL+1)^0,c
  1491  003C6C  0EF5               	movlw	low main@motorR
  1492  003C6E  6E2F               	movwf	goback@mR^0,c
  1493  003C70  0E01               	movlw	high main@motorR
  1494  003C72  6E30               	movwf	(goback@mR+1)^0,c
  1495  003C74  ECB2  F014         	call	_goback	;wreg free
  1496  003C78                     
  1497                           ;main.c: 73:                     accident = 0;
  1498  003C78  0E00               	movlw	0
  1499  003C7A  0101               	movlb	1	; () banked
  1500  003C7C  6FC3               	movwf	main@accident& (0+255),b
  1501  003C7E                     l5424:
  1502                           
  1503                           ; BSR set to: 1
  1504                           ;main.c: 76:             stop(&motorL, &motorR);
  1505  003C7E  0EEC               	movlw	low main@motorL
  1506  003C80  6E1A               	movwf	stop@mL^0,c
  1507  003C82  0E01               	movlw	high main@motorL
  1508  003C84  6E1B               	movwf	(stop@mL+1)^0,c
  1509  003C86  0EF5               	movlw	low main@motorR
  1510  003C88  6E1C               	movwf	stop@mR^0,c
  1511  003C8A  0E01               	movlw	high main@motorR
  1512  003C8C  6E1D               	movwf	(stop@mR+1)^0,c
  1513  003C8E  EC7B  F02B         	call	_stop	;wreg free
  1514  003C92                     
  1515                           ;main.c: 77:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1516  003C92  0E52               	movlw	82
  1517  003C94  0101               	movlb	1	; () banked
  1518  003C96  6FB5               	movwf	(??_main+1)& (0+255),b
  1519  003C98  0E2B               	movlw	43
  1520  003C9A  6FB4               	movwf	??_main& (0+255),b
  1521  003C9C  0E00               	movlw	0
  1522  003C9E                     u5907:
  1523  003C9E  2EE8               	decfsz	wreg,f,c
  1524  003CA0  D7FE               	bra	u5907
  1525  003CA2  2FB4               	decfsz	??_main& (0+255),f,b
  1526  003CA4  D7FC               	bra	u5907
  1527  003CA6  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1528  003CA8  D7FA               	bra	u5907
  1529  003CAA  F000               	nop	
  1530  003CAC                     
  1531                           ;main.c: 78:             short_burst(&motorL, &motorR);
  1532  003CAC  0EEC               	movlw	low main@motorL
  1533  003CAE  6E20               	movwf	short_burst@mL^0,c
  1534  003CB0  0E01               	movlw	high main@motorL
  1535  003CB2  6E21               	movwf	(short_burst@mL+1)^0,c
  1536  003CB4  0EF5               	movlw	low main@motorR
  1537  003CB6  6E22               	movwf	short_burst@mR^0,c
  1538  003CB8  0E01               	movlw	high main@motorR
  1539  003CBA  6E23               	movwf	(short_burst@mR+1)^0,c
  1540  003CBC  ECC5  F02D         	call	_short_burst	;wreg free
  1541  003CC0                     
  1542                           ;main.c: 79:             color = detect_color(&rgb, &white);
  1543  003CC0  0EC8               	movlw	low main@rgb
  1544  003CC2  0100               	movlb	0	; () banked
  1545  003CC4  6F79               	movwf	detect_color@m& (0+255),b
  1546  003CC6  0E01               	movlw	high main@rgb
  1547  003CC8  6F7A               	movwf	(detect_color@m+1)& (0+255),b
  1548  003CCA  0ED0               	movlw	low main@white
  1549  003CCC  6F7B               	movwf	detect_color@w& (0+255),b
  1550  003CCE  0E01               	movlw	high main@white
  1551  003CD0  6F7C               	movwf	(detect_color@w+1)& (0+255),b
  1552  003CD2  EC0A  F007         	call	_detect_color	;wreg free
  1553  003CD6  0101               	movlb	1	; () banked
  1554  003CD8  6F84               	movwf	_color& (0+255),b
  1555  003CDA                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 80:             color = verify_color(color, &rgb, &white);
  1558  003CDA  0EC8               	movlw	low main@rgb
  1559  003CDC  6FA6               	movwf	verify_color@m& (0+255),b
  1560  003CDE  0E01               	movlw	high main@rgb
  1561  003CE0  6FA7               	movwf	(verify_color@m+1)& (0+255),b
  1562  003CE2  0ED0               	movlw	low main@white
  1563  003CE4  6FA8               	movwf	verify_color@w& (0+255),b
  1564  003CE6  0E01               	movlw	high main@white
  1565  003CE8  6FA9               	movwf	(verify_color@w+1)& (0+255),b
  1566  003CEA  5184               	movf	_color& (0+255),w,b
  1567  003CEC  ECDA  F02B         	call	_verify_color
  1568  003CF0  0101               	movlb	1	; () banked
  1569  003CF2  6F84               	movwf	_color& (0+255),b
  1570  003CF4                     
  1571                           ; BSR set to: 1
  1572                           ;main.c: 81:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1573  003CF4  5184               	movf	_color& (0+255),w,b
  1574  003CF6  B4D8               	btfsc	status,2,c
  1575  003CF8  EF80  F01E         	goto	u5881
  1576  003CFC  EF82  F01E         	goto	u5880
  1577  003D00                     u5881:
  1578  003D00  EF90  F01E         	goto	l5440
  1579  003D04                     u5880:
  1580  003D04                     
  1581                           ; BSR set to: 1
  1582  003D04  0EEC               	movlw	low main@motorL
  1583  003D06  6E35               	movwf	turning_action@mL^0,c
  1584  003D08  0E01               	movlw	high main@motorL
  1585  003D0A  6E36               	movwf	(turning_action@mL+1)^0,c
  1586  003D0C  0EF5               	movlw	low main@motorR
  1587  003D0E  6E37               	movwf	turning_action@mR^0,c
  1588  003D10  0E01               	movlw	high main@motorR
  1589  003D12  6E38               	movwf	(turning_action@mR+1)^0,c
  1590  003D14  5184               	movf	_color& (0+255),w,b
  1591  003D16  EC51  F018         	call	_turning_action
  1592  003D1A  0E00               	movlw	0
  1593  003D1C  0101               	movlb	1	; () banked
  1594  003D1E  6F84               	movwf	_color& (0+255),b
  1595  003D20                     l5440:
  1596                           
  1597                           ; BSR set to: 1
  1598                           ;main.c: 82:             stop_signal = 0;
  1599  003D20  0E00               	movlw	0
  1600  003D22  6FC2               	movwf	main@stop_signal& (0+255),b
  1601  003D24  EFCB  F01D         	goto	l5400
  1602  003D28  EF18  F000         	goto	start
  1603  003D2C                     __end_of_main:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _verify_color *****************
  1607 ;; Defined at:
  1608 ;;		line 346 in file "color.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  color           1    wreg     unsigned char 
  1611 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1612 ;;		 -> main@rgb(8), 
  1613 ;;  w               2    2[BANK1 ] PTR struct white_card
  1614 ;;		 -> main@white(28), 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  color           1    6[BANK1 ] unsigned char 
  1617 ;;  color2          2    4[BANK1 ] unsigned int 
  1618 ;;  color3          2    0        unsigned int 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      unsigned char 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1628 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;Total ram usage:        9 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 10
  1635 ;; This function calls:
  1636 ;;		_detect_color
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text1
  1643  0057B4                     __ptext1:
  1644                           	callstack 0
  1645  0057B4                     _verify_color:
  1646                           	callstack 20
  1647                           
  1648                           ; BSR set to: 1
  1649                           ;incstack = 0
  1650                           ;verify_color@color stored from wreg
  1651  0057B4  0101               	movlb	1	; () banked
  1652  0057B6  6FAC               	movwf	verify_color@color& (0+255),b
  1653  0057B8                     
  1654                           ;color.c: 346: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 347: {;color.c: 348:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1655  0057B8  0E05               	movlw	5
  1656  0057BA  0100               	movlb	0	; () banked
  1657  0057BC  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1658  0057BE  0E0F               	movlw	15
  1659  0057C0  6FFE               	movwf	??_verify_color& (0+255),b
  1660  0057C2  0EF1               	movlw	241
  1661  0057C4                     u5917:
  1662  0057C4  2EE8               	decfsz	wreg,f,c
  1663  0057C6  D7FE               	bra	u5917
  1664  0057C8  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1665  0057CA  D7FC               	bra	u5917
  1666  0057CC  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1667  0057CE  D7FA               	bra	u5917
  1668  0057D0                     
  1669                           ;color.c: 349:     unsigned int color2, color3;;color.c: 350:     color2 = detect_color(
      +                          m,w);
  1670  0057D0  C1A6  F079         	movff	verify_color@m,detect_color@m
  1671  0057D4  C1A7  F07A         	movff	verify_color@m+1,detect_color@m+1
  1672  0057D8  C1A8  F07B         	movff	verify_color@w,detect_color@w
  1673  0057DC  C1A9  F07C         	movff	verify_color@w+1,detect_color@w+1
  1674  0057E0  EC0A  F007         	call	_detect_color	;wreg free
  1675  0057E4  0100               	movlb	0	; () banked
  1676  0057E6  6FFE               	movwf	??_verify_color& (0+255),b
  1677  0057E8  51FE               	movf	??_verify_color& (0+255),w,b
  1678  0057EA  0101               	movlb	1	; () banked
  1679  0057EC  6FAA               	movwf	verify_color@color2& (0+255),b
  1680  0057EE  6BAB               	clrf	(verify_color@color2+1)& (0+255),b
  1681  0057F0                     
  1682                           ; BSR set to: 1
  1683                           ;color.c: 351:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1684  0057F0  0E05               	movlw	5
  1685  0057F2  0100               	movlb	0	; () banked
  1686  0057F4  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1687  0057F6  0E0F               	movlw	15
  1688  0057F8  6FFE               	movwf	??_verify_color& (0+255),b
  1689  0057FA  0EF1               	movlw	241
  1690  0057FC                     u5927:
  1691  0057FC  2EE8               	decfsz	wreg,f,c
  1692  0057FE  D7FE               	bra	u5927
  1693  005800  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1694  005802  D7FC               	bra	u5927
  1695  005804  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1696  005806  D7FA               	bra	u5927
  1697  005808                     
  1698                           ;color.c: 353:     if (color == color2){return color;}
  1699  005808  0101               	movlb	1	; () banked
  1700  00580A  51AC               	movf	verify_color@color& (0+255),w,b
  1701  00580C  0100               	movlb	0	; () banked
  1702  00580E  6FFE               	movwf	??_verify_color& (0+255),b
  1703  005810  6BFF               	clrf	(??_verify_color+1)& (0+255),b
  1704  005812  0101               	movlb	1	; () banked
  1705  005814  51AA               	movf	verify_color@color2& (0+255),w,b
  1706  005816  0100               	movlb	0	; () banked
  1707  005818  19FE               	xorwf	??_verify_color& (0+255),w,b
  1708  00581A  E109               	bnz	u5561
  1709  00581C  0101               	movlb	1	; () banked
  1710  00581E  51AB               	movf	(verify_color@color2+1)& (0+255),w,b
  1711  005820  0100               	movlb	0	; () banked
  1712  005822  19FF               	xorwf	(??_verify_color+1)& (0+255),w,b
  1713  005824  A4D8               	btfss	status,2,c
  1714  005826  EF17  F02C         	goto	u5561
  1715  00582A  EF19  F02C         	goto	u5560
  1716  00582E                     u5561:
  1717  00582E  EF1D  F02C         	goto	l5158
  1718  005832                     u5560:
  1719  005832                     
  1720                           ; BSR set to: 0
  1721  005832  0101               	movlb	1	; () banked
  1722  005834  51AC               	movf	verify_color@color& (0+255),w,b
  1723  005836  EF1E  F02C         	goto	l141
  1724  00583A                     l5158:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;color.c: 356:         return color;}
  1728  00583A  0E00               	movlw	0
  1729  00583C                     l141:
  1730  00583C  0012               	return		;funcret
  1731  00583E                     __end_of_verify_color:
  1732                           	callstack 0
  1733                           
  1734 ;; *************** function _turning_action *****************
  1735 ;; Defined at:
  1736 ;;		line 14 in file "movement.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  color           1    wreg     unsigned char 
  1739 ;;  mL              2   52[COMRAM] PTR struct DC_motor
  1740 ;;		 -> main@motorL(9), 
  1741 ;;  mR              2   54[COMRAM] PTR struct DC_motor
  1742 ;;		 -> main@motorR(9), 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  color           1   56[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;Total ram usage:        5 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 6
  1761 ;; This function calls:
  1762 ;;		_fullSpeedBack
  1763 ;;		_goback
  1764 ;;		_toggle_light
  1765 ;;		_turn45
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text2
  1772  0030A2                     __ptext2:
  1773                           	callstack 0
  1774  0030A2                     _turning_action:
  1775                           	callstack 24
  1776                           
  1777                           ;incstack = 0
  1778                           ;turning_action@color stored from wreg
  1779  0030A2  6E39               	movwf	turning_action@color^0,c
  1780  0030A4                     
  1781                           ;movement.c: 14: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 15: { if (color != 0){
  1782  0030A4  5039               	movf	turning_action@color^0,w,c
  1783  0030A6  B4D8               	btfsc	status,2,c
  1784  0030A8  EF58  F018         	goto	u5761
  1785  0030AC  EF5A  F018         	goto	u5760
  1786  0030B0                     u5761:
  1787  0030B0  EFC8  F019         	goto	l450
  1788  0030B4                     u5760:
  1789  0030B4                     
  1790                           ;movement.c: 16:         if (color == 1){
  1791  0030B4  0439               	decf	turning_action@color^0,w,c
  1792  0030B6  A4D8               	btfss	status,2,c
  1793  0030B8  EF60  F018         	goto	u5771
  1794  0030BC  EF62  F018         	goto	u5770
  1795  0030C0                     u5771:
  1796  0030C0  EF8A  F018         	goto	l5318
  1797  0030C4                     u5770:
  1798  0030C4                     
  1799                           ;movement.c: 17:             fullSpeedBack(mL,mR,1);
  1800  0030C4  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1801  0030C8  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1802  0030CC  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1803  0030D0  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1804  0030D4  0E01               	movlw	1
  1805  0030D6  6E24               	movwf	fullSpeedBack@instruction^0,c
  1806  0030D8  ECD1  F025         	call	_fullSpeedBack	;wreg free
  1807                           
  1808                           ;movement.c: 18:             turn45(mL,mR,2,2);
  1809  0030DC  C035  F020         	movff	turning_action@mL,turn45@mL
  1810  0030E0  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1811  0030E4  C037  F022         	movff	turning_action@mR,turn45@mR
  1812  0030E8  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1813  0030EC  0E02               	movlw	2
  1814  0030EE  6E24               	movwf	turn45@turn_time^0,c
  1815  0030F0  0E02               	movlw	2
  1816  0030F2  6E25               	movwf	turn45@direction^0,c
  1817  0030F4  EC0C  F022         	call	_turn45	;wreg free
  1818  0030F8                     
  1819                           ;movement.c: 19:             memory[array_index] = 1;
  1820  0030F8  0101               	movlb	1	; () banked
  1821  0030FA  5185               	movf	_array_index& (0+255),w,b
  1822  0030FC  0D02               	mullw	2
  1823  0030FE  0E00               	movlw	low _memory
  1824  003100  24F3               	addwf	243,w,c
  1825  003102  6ED9               	movwf	fsr2l,c
  1826  003104  0E01               	movlw	high _memory
  1827  003106  20F4               	addwfc	prodh,w,c
  1828  003108  6EDA               	movwf	fsr2h,c
  1829  00310A  0E01               	movlw	1
  1830  00310C  6EDE               	movwf	postinc2,c
  1831  00310E  0E00               	movlw	0
  1832  003110  6EDD               	movwf	postdec2,c
  1833  003112                     
  1834                           ; BSR set to: 1
  1835                           ;movement.c: 20:             array_index++;
  1836  003112  2B85               	incf	_array_index& (0+255),f,b
  1837  003114                     l5318:
  1838                           
  1839                           ;movement.c: 22:         if (color == 2){
  1840  003114  0E02               	movlw	2
  1841  003116  1839               	xorwf	turning_action@color^0,w,c
  1842  003118  A4D8               	btfss	status,2,c
  1843  00311A  EF91  F018         	goto	u5781
  1844  00311E  EF93  F018         	goto	u5780
  1845  003122                     u5781:
  1846  003122  EFBB  F018         	goto	l5326
  1847  003126                     u5780:
  1848  003126                     
  1849                           ;movement.c: 23:             fullSpeedBack(mL,mR,1);
  1850  003126  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1851  00312A  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1852  00312E  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1853  003132  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1854  003136  0E01               	movlw	1
  1855  003138  6E24               	movwf	fullSpeedBack@instruction^0,c
  1856  00313A  ECD1  F025         	call	_fullSpeedBack	;wreg free
  1857                           
  1858                           ;movement.c: 24:             turn45(mL,mR,2,1);
  1859  00313E  C035  F020         	movff	turning_action@mL,turn45@mL
  1860  003142  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1861  003146  C037  F022         	movff	turning_action@mR,turn45@mR
  1862  00314A  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1863  00314E  0E02               	movlw	2
  1864  003150  6E24               	movwf	turn45@turn_time^0,c
  1865  003152  0E01               	movlw	1
  1866  003154  6E25               	movwf	turn45@direction^0,c
  1867  003156  EC0C  F022         	call	_turn45	;wreg free
  1868  00315A                     
  1869                           ;movement.c: 25:             memory[array_index] = 2;
  1870  00315A  0101               	movlb	1	; () banked
  1871  00315C  5185               	movf	_array_index& (0+255),w,b
  1872  00315E  0D02               	mullw	2
  1873  003160  0E00               	movlw	low _memory
  1874  003162  24F3               	addwf	243,w,c
  1875  003164  6ED9               	movwf	fsr2l,c
  1876  003166  0E01               	movlw	high _memory
  1877  003168  20F4               	addwfc	prodh,w,c
  1878  00316A  6EDA               	movwf	fsr2h,c
  1879  00316C  0E02               	movlw	2
  1880  00316E  6EDE               	movwf	postinc2,c
  1881  003170  0E00               	movlw	0
  1882  003172  6EDD               	movwf	postdec2,c
  1883  003174                     
  1884                           ; BSR set to: 1
  1885                           ;movement.c: 26:             array_index++;
  1886  003174  2B85               	incf	_array_index& (0+255),f,b
  1887  003176                     l5326:
  1888                           
  1889                           ;movement.c: 28:         if (color == 3){
  1890  003176  0E03               	movlw	3
  1891  003178  1839               	xorwf	turning_action@color^0,w,c
  1892  00317A  A4D8               	btfss	status,2,c
  1893  00317C  EFC2  F018         	goto	u5791
  1894  003180  EFC4  F018         	goto	u5790
  1895  003184                     u5791:
  1896  003184  EFEC  F018         	goto	l5334
  1897  003188                     u5790:
  1898  003188                     
  1899                           ;movement.c: 29:             fullSpeedBack(mL,mR,1);
  1900  003188  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1901  00318C  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1902  003190  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1903  003194  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1904  003198  0E01               	movlw	1
  1905  00319A  6E24               	movwf	fullSpeedBack@instruction^0,c
  1906  00319C  ECD1  F025         	call	_fullSpeedBack	;wreg free
  1907                           
  1908                           ;movement.c: 30:             turn45(mL,mR,4,1);
  1909  0031A0  C035  F020         	movff	turning_action@mL,turn45@mL
  1910  0031A4  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1911  0031A8  C037  F022         	movff	turning_action@mR,turn45@mR
  1912  0031AC  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1913  0031B0  0E04               	movlw	4
  1914  0031B2  6E24               	movwf	turn45@turn_time^0,c
  1915  0031B4  0E01               	movlw	1
  1916  0031B6  6E25               	movwf	turn45@direction^0,c
  1917  0031B8  EC0C  F022         	call	_turn45	;wreg free
  1918  0031BC                     
  1919                           ;movement.c: 31:             memory[array_index] = 3;
  1920  0031BC  0101               	movlb	1	; () banked
  1921  0031BE  5185               	movf	_array_index& (0+255),w,b
  1922  0031C0  0D02               	mullw	2
  1923  0031C2  0E00               	movlw	low _memory
  1924  0031C4  24F3               	addwf	243,w,c
  1925  0031C6  6ED9               	movwf	fsr2l,c
  1926  0031C8  0E01               	movlw	high _memory
  1927  0031CA  20F4               	addwfc	prodh,w,c
  1928  0031CC  6EDA               	movwf	fsr2h,c
  1929  0031CE  0E03               	movlw	3
  1930  0031D0  6EDE               	movwf	postinc2,c
  1931  0031D2  0E00               	movlw	0
  1932  0031D4  6EDD               	movwf	postdec2,c
  1933  0031D6                     
  1934                           ; BSR set to: 1
  1935                           ;movement.c: 32:             array_index++;
  1936  0031D6  2B85               	incf	_array_index& (0+255),f,b
  1937  0031D8                     l5334:
  1938                           
  1939                           ;movement.c: 34:         if (color == 4){
  1940  0031D8  0E04               	movlw	4
  1941  0031DA  1839               	xorwf	turning_action@color^0,w,c
  1942  0031DC  A4D8               	btfss	status,2,c
  1943  0031DE  EFF3  F018         	goto	u5801
  1944  0031E2  EFF5  F018         	goto	u5800
  1945  0031E6                     u5801:
  1946  0031E6  EF1D  F019         	goto	l5342
  1947  0031EA                     u5800:
  1948  0031EA                     
  1949                           ;movement.c: 35:             fullSpeedBack(mL,mR,3);
  1950  0031EA  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1951  0031EE  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1952  0031F2  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1953  0031F6  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1954  0031FA  0E03               	movlw	3
  1955  0031FC  6E24               	movwf	fullSpeedBack@instruction^0,c
  1956  0031FE  ECD1  F025         	call	_fullSpeedBack	;wreg free
  1957                           
  1958                           ;movement.c: 36:             turn45(mL,mR,2,2);
  1959  003202  C035  F020         	movff	turning_action@mL,turn45@mL
  1960  003206  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1961  00320A  C037  F022         	movff	turning_action@mR,turn45@mR
  1962  00320E  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1963  003212  0E02               	movlw	2
  1964  003214  6E24               	movwf	turn45@turn_time^0,c
  1965  003216  0E02               	movlw	2
  1966  003218  6E25               	movwf	turn45@direction^0,c
  1967  00321A  EC0C  F022         	call	_turn45	;wreg free
  1968  00321E                     
  1969                           ;movement.c: 37:             memory[array_index] = 4;
  1970  00321E  0101               	movlb	1	; () banked
  1971  003220  5185               	movf	_array_index& (0+255),w,b
  1972  003222  0D02               	mullw	2
  1973  003224  0E00               	movlw	low _memory
  1974  003226  24F3               	addwf	243,w,c
  1975  003228  6ED9               	movwf	fsr2l,c
  1976  00322A  0E01               	movlw	high _memory
  1977  00322C  20F4               	addwfc	prodh,w,c
  1978  00322E  6EDA               	movwf	fsr2h,c
  1979  003230  0E04               	movlw	4
  1980  003232  6EDE               	movwf	postinc2,c
  1981  003234  0E00               	movlw	0
  1982  003236  6EDD               	movwf	postdec2,c
  1983  003238                     
  1984                           ; BSR set to: 1
  1985                           ;movement.c: 38:             array_index++;
  1986  003238  2B85               	incf	_array_index& (0+255),f,b
  1987  00323A                     l5342:
  1988                           
  1989                           ;movement.c: 40:         if (color == 5){
  1990  00323A  0E05               	movlw	5
  1991  00323C  1839               	xorwf	turning_action@color^0,w,c
  1992  00323E  A4D8               	btfss	status,2,c
  1993  003240  EF24  F019         	goto	u5811
  1994  003244  EF26  F019         	goto	u5810
  1995  003248                     u5811:
  1996  003248  EF4E  F019         	goto	l5350
  1997  00324C                     u5810:
  1998  00324C                     
  1999                           ;movement.c: 41:             fullSpeedBack(mL,mR,3);
  2000  00324C  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2001  003250  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2002  003254  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2003  003258  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2004  00325C  0E03               	movlw	3
  2005  00325E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2006  003260  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2007                           
  2008                           ;movement.c: 42:             turn45(mL,mR,2,1);
  2009  003264  C035  F020         	movff	turning_action@mL,turn45@mL
  2010  003268  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2011  00326C  C037  F022         	movff	turning_action@mR,turn45@mR
  2012  003270  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2013  003274  0E02               	movlw	2
  2014  003276  6E24               	movwf	turn45@turn_time^0,c
  2015  003278  0E01               	movlw	1
  2016  00327A  6E25               	movwf	turn45@direction^0,c
  2017  00327C  EC0C  F022         	call	_turn45	;wreg free
  2018  003280                     
  2019                           ;movement.c: 43:             memory[array_index] = 5;
  2020  003280  0101               	movlb	1	; () banked
  2021  003282  5185               	movf	_array_index& (0+255),w,b
  2022  003284  0D02               	mullw	2
  2023  003286  0E00               	movlw	low _memory
  2024  003288  24F3               	addwf	243,w,c
  2025  00328A  6ED9               	movwf	fsr2l,c
  2026  00328C  0E01               	movlw	high _memory
  2027  00328E  20F4               	addwfc	prodh,w,c
  2028  003290  6EDA               	movwf	fsr2h,c
  2029  003292  0E05               	movlw	5
  2030  003294  6EDE               	movwf	postinc2,c
  2031  003296  0E00               	movlw	0
  2032  003298  6EDD               	movwf	postdec2,c
  2033  00329A                     
  2034                           ; BSR set to: 1
  2035                           ;movement.c: 44:             array_index++;
  2036  00329A  2B85               	incf	_array_index& (0+255),f,b
  2037  00329C                     l5350:
  2038                           
  2039                           ;movement.c: 46:         if (color == 6){
  2040  00329C  0E06               	movlw	6
  2041  00329E  1839               	xorwf	turning_action@color^0,w,c
  2042  0032A0  A4D8               	btfss	status,2,c
  2043  0032A2  EF55  F019         	goto	u5821
  2044  0032A6  EF57  F019         	goto	u5820
  2045  0032AA                     u5821:
  2046  0032AA  EF7F  F019         	goto	l5358
  2047  0032AE                     u5820:
  2048  0032AE                     
  2049                           ;movement.c: 47:             fullSpeedBack(mL,mR,1);
  2050  0032AE  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2051  0032B2  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2052  0032B6  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2053  0032BA  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2054  0032BE  0E01               	movlw	1
  2055  0032C0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2056  0032C2  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2057                           
  2058                           ;movement.c: 48:             turn45(mL,mR,3,2);
  2059  0032C6  C035  F020         	movff	turning_action@mL,turn45@mL
  2060  0032CA  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2061  0032CE  C037  F022         	movff	turning_action@mR,turn45@mR
  2062  0032D2  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2063  0032D6  0E03               	movlw	3
  2064  0032D8  6E24               	movwf	turn45@turn_time^0,c
  2065  0032DA  0E02               	movlw	2
  2066  0032DC  6E25               	movwf	turn45@direction^0,c
  2067  0032DE  EC0C  F022         	call	_turn45	;wreg free
  2068  0032E2                     
  2069                           ;movement.c: 49:             memory[array_index] = 6;
  2070  0032E2  0101               	movlb	1	; () banked
  2071  0032E4  5185               	movf	_array_index& (0+255),w,b
  2072  0032E6  0D02               	mullw	2
  2073  0032E8  0E00               	movlw	low _memory
  2074  0032EA  24F3               	addwf	243,w,c
  2075  0032EC  6ED9               	movwf	fsr2l,c
  2076  0032EE  0E01               	movlw	high _memory
  2077  0032F0  20F4               	addwfc	prodh,w,c
  2078  0032F2  6EDA               	movwf	fsr2h,c
  2079  0032F4  0E06               	movlw	6
  2080  0032F6  6EDE               	movwf	postinc2,c
  2081  0032F8  0E00               	movlw	0
  2082  0032FA  6EDD               	movwf	postdec2,c
  2083  0032FC                     
  2084                           ; BSR set to: 1
  2085                           ;movement.c: 50:             array_index++;
  2086  0032FC  2B85               	incf	_array_index& (0+255),f,b
  2087  0032FE                     l5358:
  2088                           
  2089                           ;movement.c: 52:         if (color == 7){
  2090  0032FE  0E07               	movlw	7
  2091  003300  1839               	xorwf	turning_action@color^0,w,c
  2092  003302  A4D8               	btfss	status,2,c
  2093  003304  EF86  F019         	goto	u5831
  2094  003308  EF88  F019         	goto	u5830
  2095  00330C                     u5831:
  2096  00330C  EFB0  F019         	goto	l5366
  2097  003310                     u5830:
  2098  003310                     
  2099                           ;movement.c: 53:             fullSpeedBack(mL,mR,1);
  2100  003310  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2101  003314  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2102  003318  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2103  00331C  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2104  003320  0E01               	movlw	1
  2105  003322  6E24               	movwf	fullSpeedBack@instruction^0,c
  2106  003324  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2107                           
  2108                           ;movement.c: 54:             turn45(mL,mR,3,1);
  2109  003328  C035  F020         	movff	turning_action@mL,turn45@mL
  2110  00332C  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2111  003330  C037  F022         	movff	turning_action@mR,turn45@mR
  2112  003334  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2113  003338  0E03               	movlw	3
  2114  00333A  6E24               	movwf	turn45@turn_time^0,c
  2115  00333C  0E01               	movlw	1
  2116  00333E  6E25               	movwf	turn45@direction^0,c
  2117  003340  EC0C  F022         	call	_turn45	;wreg free
  2118  003344                     
  2119                           ;movement.c: 55:             memory[array_index] = 7;
  2120  003344  0101               	movlb	1	; () banked
  2121  003346  5185               	movf	_array_index& (0+255),w,b
  2122  003348  0D02               	mullw	2
  2123  00334A  0E00               	movlw	low _memory
  2124  00334C  24F3               	addwf	243,w,c
  2125  00334E  6ED9               	movwf	fsr2l,c
  2126  003350  0E01               	movlw	high _memory
  2127  003352  20F4               	addwfc	prodh,w,c
  2128  003354  6EDA               	movwf	fsr2h,c
  2129  003356  0E07               	movlw	7
  2130  003358  6EDE               	movwf	postinc2,c
  2131  00335A  0E00               	movlw	0
  2132  00335C  6EDD               	movwf	postdec2,c
  2133  00335E                     
  2134                           ; BSR set to: 1
  2135                           ;movement.c: 56:             array_index++;
  2136  00335E  2B85               	incf	_array_index& (0+255),f,b
  2137  003360                     l5366:
  2138                           
  2139                           ;movement.c: 58:         if (color == 8){
  2140  003360  0E08               	movlw	8
  2141  003362  1839               	xorwf	turning_action@color^0,w,c
  2142  003364  A4D8               	btfss	status,2,c
  2143  003366  EFB7  F019         	goto	u5841
  2144  00336A  EFB9  F019         	goto	u5840
  2145  00336E                     u5841:
  2146  00336E  EFC8  F019         	goto	l450
  2147  003372                     u5840:
  2148  003372                     
  2149                           ;movement.c: 59:             toggle_light(2,1);
  2150  003372  0E01               	movlw	1
  2151  003374  6E01               	movwf	toggle_light@toggletime^0,c
  2152  003376  0E02               	movlw	2
  2153  003378  EC3A  F01B         	call	_toggle_light
  2154  00337C                     
  2155                           ;movement.c: 60:             goback(mL,mR);
  2156  00337C  C035  F02D         	movff	turning_action@mL,goback@mL
  2157  003380  C036  F02E         	movff	turning_action@mL+1,goback@mL+1
  2158  003384  C037  F02F         	movff	turning_action@mR,goback@mR
  2159  003388  C038  F030         	movff	turning_action@mR+1,goback@mR+1
  2160  00338C  ECB2  F014         	call	_goback	;wreg free
  2161  003390                     l450:
  2162  003390  0012               	return		;funcret
  2163  003392                     __end_of_turning_action:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _goback *****************
  2167 ;; Defined at:
  2168 ;;		line 65 in file "movement.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2171 ;;		 -> main@motorL(9), 
  2172 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2173 ;;		 -> main@motorR(9), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  i               2   50[COMRAM] unsigned int 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;Total ram usage:        8 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; Hardware stack levels required when called: 5
  2192 ;; This function calls:
  2193 ;;		_fullSpeedAhead
  2194 ;;		_fullSpeedBack
  2195 ;;		_stop
  2196 ;;		_turn45
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;;		_turning_action
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text3
  2204  002964                     __ptext3:
  2205                           	callstack 0
  2206  002964                     _goback:
  2207                           	callstack 24
  2208  002964                     
  2209                           ;movement.c: 65: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 66: {
      +                           fullSpeedBack(mL,mR,1);
  2210  002964  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2211  002968  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2212  00296C  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2213  002970  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2214  002974  0E01               	movlw	1
  2215  002976  6E24               	movwf	fullSpeedBack@instruction^0,c
  2216  002978  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2217                           
  2218                           ;movement.c: 67:     turn45(mL,mR,4,1);
  2219  00297C  C02D  F020         	movff	goback@mL,turn45@mL
  2220  002980  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2221  002984  C02F  F022         	movff	goback@mR,turn45@mR
  2222  002988  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2223  00298C  0E04               	movlw	4
  2224  00298E  6E24               	movwf	turn45@turn_time^0,c
  2225  002990  0E01               	movlw	1
  2226  002992  6E25               	movwf	turn45@direction^0,c
  2227  002994  EC0C  F022         	call	_turn45	;wreg free
  2228                           
  2229                           ;movement.c: 68:     fullSpeedBack(mL,mR,2);
  2230  002998  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2231  00299C  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2232  0029A0  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2233  0029A4  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2234  0029A8  0E02               	movlw	2
  2235  0029AA  6E24               	movwf	fullSpeedBack@instruction^0,c
  2236  0029AC  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2237  0029B0                     l4960:
  2238                           
  2239                           ;movement.c: 69:     array_index--;
  2240  0029B0  0101               	movlb	1	; () banked
  2241  0029B2  0785               	decf	_array_index& (0+255),f,b
  2242  0029B4                     l4962:
  2243                           
  2244                           ; BSR set to: 1
  2245                           ;movement.c: 71:         fullSpeedAhead(mL,mR);
  2246  0029B4  C02D  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2247  0029B8  C02E  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2248  0029BC  C02F  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2249  0029C0  C030  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2250  0029C4  ECB7  F02A         	call	_fullSpeedAhead	;wreg free
  2251  0029C8                     
  2252                           ;movement.c: 72:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2253  0029C8  0E00               	movlw	0
  2254  0029CA  6E34               	movwf	(goback@i+1)^0,c
  2255  0029CC  0E00               	movlw	0
  2256  0029CE  6E33               	movwf	goback@i^0,c
  2257  0029D0  EFF8  F014         	goto	l4970
  2258  0029D4                     l4966:
  2259                           
  2260                           ; BSR set to: 1
  2261  0029D4  0E09               	movlw	9
  2262  0029D6  6E32               	movwf	(??_goback+1)^0,c
  2263  0029D8  0E1E               	movlw	30
  2264  0029DA  6E31               	movwf	??_goback^0,c
  2265  0029DC  0EE4               	movlw	228
  2266  0029DE                     u5937:
  2267  0029DE  2EE8               	decfsz	wreg,f,c
  2268  0029E0  D7FE               	bra	u5937
  2269  0029E2  2E31               	decfsz	??_goback^0,f,c
  2270  0029E4  D7FC               	bra	u5937
  2271  0029E6  2E32               	decfsz	(??_goback+1)^0,f,c
  2272  0029E8  D7FA               	bra	u5937
  2273  0029EA  D000               	nop2	
  2274  0029EC  4A33               	infsnz	goback@i^0,f,c
  2275  0029EE  2A34               	incf	(goback@i+1)^0,f,c
  2276  0029F0                     l4970:
  2277  0029F0  0101               	movlb	1	; () banked
  2278  0029F2  5185               	movf	_array_index& (0+255),w,b
  2279  0029F4  0D02               	mullw	2
  2280  0029F6  0E00               	movlw	low _memory
  2281  0029F8  24F3               	addwf	243,w,c
  2282  0029FA  6ED9               	movwf	fsr2l,c
  2283  0029FC  0E01               	movlw	high _memory
  2284  0029FE  20F4               	addwfc	prodh,w,c
  2285  002A00  6EDA               	movwf	fsr2h,c
  2286  002A02  50DE               	movf	postinc2,w,c
  2287  002A04  5C33               	subwf	goback@i^0,w,c
  2288  002A06  50DE               	movf	postinc2,w,c
  2289  002A08  5834               	subwfb	(goback@i+1)^0,w,c
  2290  002A0A  A0D8               	btfss	status,0,c
  2291  002A0C  EF0A  F015         	goto	u5351
  2292  002A10  EF0C  F015         	goto	u5350
  2293  002A14                     u5351:
  2294  002A14  EFEA  F014         	goto	l4966
  2295  002A18                     u5350:
  2296  002A18                     
  2297                           ; BSR set to: 1
  2298                           ;movement.c: 73:         stop(mL,mR);
  2299  002A18  C02D  F01A         	movff	goback@mL,stop@mL
  2300  002A1C  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2301  002A20  C02F  F01C         	movff	goback@mR,stop@mR
  2302  002A24  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2303  002A28  EC7B  F02B         	call	_stop	;wreg free
  2304  002A2C                     
  2305                           ;movement.c: 74:         if (array_index == 0){break;}
  2306  002A2C  0101               	movlb	1	; () banked
  2307  002A2E  5185               	movf	_array_index& (0+255),w,b
  2308  002A30  A4D8               	btfss	status,2,c
  2309  002A32  EF1D  F015         	goto	u5361
  2310  002A36  EF1F  F015         	goto	u5360
  2311  002A3A                     u5361:
  2312  002A3A  EF21  F015         	goto	l4978
  2313  002A3E                     u5360:
  2314  002A3E  EF65  F016         	goto	l459
  2315  002A42                     l4978:
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;movement.c: 75:         array_index--;
  2319  002A42  0785               	decf	_array_index& (0+255),f,b
  2320  002A44                     
  2321                           ; BSR set to: 1
  2322                           ;movement.c: 76:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2323  002A44  5185               	movf	_array_index& (0+255),w,b
  2324  002A46  0D02               	mullw	2
  2325  002A48  0E00               	movlw	low _memory
  2326  002A4A  24F3               	addwf	243,w,c
  2327  002A4C  6ED9               	movwf	fsr2l,c
  2328  002A4E  0E01               	movlw	high _memory
  2329  002A50  20F4               	addwfc	prodh,w,c
  2330  002A52  6EDA               	movwf	fsr2h,c
  2331  002A54  04DE               	decf	postinc2,w,c
  2332  002A56  10DE               	iorwf	postinc2,w,c
  2333  002A58  A4D8               	btfss	status,2,c
  2334  002A5A  EF31  F015         	goto	u5371
  2335  002A5E  EF33  F015         	goto	u5370
  2336  002A62                     u5371:
  2337  002A62  EF4F  F015         	goto	l4986
  2338  002A66                     u5370:
  2339  002A66                     
  2340                           ; BSR set to: 1
  2341  002A66  C02D  F020         	movff	goback@mL,turn45@mL
  2342  002A6A  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2343  002A6E  C02F  F022         	movff	goback@mR,turn45@mR
  2344  002A72  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2345  002A76  0E02               	movlw	2
  2346  002A78  6E24               	movwf	turn45@turn_time^0,c
  2347  002A7A  0E01               	movlw	1
  2348  002A7C  6E25               	movwf	turn45@direction^0,c
  2349  002A7E  EC0C  F022         	call	_turn45	;wreg free
  2350  002A82  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2351  002A86  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2352  002A8A  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2353  002A8E  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2354  002A92  0E02               	movlw	2
  2355  002A94  6E24               	movwf	fullSpeedBack@instruction^0,c
  2356  002A96  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2357  002A9A  EFD8  F014         	goto	l4960
  2358  002A9E                     l4986:
  2359                           
  2360                           ; BSR set to: 1
  2361  002A9E  5185               	movf	_array_index& (0+255),w,b
  2362  002AA0  0D02               	mullw	2
  2363  002AA2  0E00               	movlw	low _memory
  2364  002AA4  24F3               	addwf	243,w,c
  2365  002AA6  6ED9               	movwf	fsr2l,c
  2366  002AA8  0E01               	movlw	high _memory
  2367  002AAA  20F4               	addwfc	prodh,w,c
  2368  002AAC  6EDA               	movwf	fsr2h,c
  2369  002AAE  0E02               	movlw	2
  2370  002AB0  18DE               	xorwf	postinc2,w,c
  2371  002AB2  10DE               	iorwf	postinc2,w,c
  2372  002AB4  A4D8               	btfss	status,2,c
  2373  002AB6  EF5F  F015         	goto	u5381
  2374  002ABA  EF61  F015         	goto	u5380
  2375  002ABE                     u5381:
  2376  002ABE  EF7D  F015         	goto	l4992
  2377  002AC2                     u5380:
  2378  002AC2                     
  2379                           ; BSR set to: 1
  2380  002AC2  C02D  F020         	movff	goback@mL,turn45@mL
  2381  002AC6  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2382  002ACA  C02F  F022         	movff	goback@mR,turn45@mR
  2383  002ACE  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2384  002AD2  0E02               	movlw	2
  2385  002AD4  6E24               	movwf	turn45@turn_time^0,c
  2386  002AD6  0E02               	movlw	2
  2387  002AD8  6E25               	movwf	turn45@direction^0,c
  2388  002ADA  EC0C  F022         	call	_turn45	;wreg free
  2389  002ADE  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2390  002AE2  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2391  002AE6  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2392  002AEA  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2393  002AEE  0E02               	movlw	2
  2394  002AF0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2395  002AF2  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2396  002AF6  EFD8  F014         	goto	l4960
  2397  002AFA                     l4992:
  2398                           
  2399                           ; BSR set to: 1
  2400  002AFA  5185               	movf	_array_index& (0+255),w,b
  2401  002AFC  0D02               	mullw	2
  2402  002AFE  0E00               	movlw	low _memory
  2403  002B00  24F3               	addwf	243,w,c
  2404  002B02  6ED9               	movwf	fsr2l,c
  2405  002B04  0E01               	movlw	high _memory
  2406  002B06  20F4               	addwfc	prodh,w,c
  2407  002B08  6EDA               	movwf	fsr2h,c
  2408  002B0A  0E03               	movlw	3
  2409  002B0C  18DE               	xorwf	postinc2,w,c
  2410  002B0E  10DE               	iorwf	postinc2,w,c
  2411  002B10  A4D8               	btfss	status,2,c
  2412  002B12  EF8D  F015         	goto	u5391
  2413  002B16  EF8F  F015         	goto	u5390
  2414  002B1A                     u5391:
  2415  002B1A  EFAB  F015         	goto	l4998
  2416  002B1E                     u5390:
  2417  002B1E                     
  2418                           ; BSR set to: 1
  2419  002B1E  C02D  F020         	movff	goback@mL,turn45@mL
  2420  002B22  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2421  002B26  C02F  F022         	movff	goback@mR,turn45@mR
  2422  002B2A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2423  002B2E  0E04               	movlw	4
  2424  002B30  6E24               	movwf	turn45@turn_time^0,c
  2425  002B32  0E02               	movlw	2
  2426  002B34  6E25               	movwf	turn45@direction^0,c
  2427  002B36  EC0C  F022         	call	_turn45	;wreg free
  2428  002B3A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2429  002B3E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2430  002B42  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2431  002B46  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2432  002B4A  0E02               	movlw	2
  2433  002B4C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2434  002B4E  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2435  002B52  EFD8  F014         	goto	l4960
  2436  002B56                     l4998:
  2437                           
  2438                           ; BSR set to: 1
  2439  002B56  5185               	movf	_array_index& (0+255),w,b
  2440  002B58  0D02               	mullw	2
  2441  002B5A  0E00               	movlw	low _memory
  2442  002B5C  24F3               	addwf	243,w,c
  2443  002B5E  6ED9               	movwf	fsr2l,c
  2444  002B60  0E01               	movlw	high _memory
  2445  002B62  20F4               	addwfc	prodh,w,c
  2446  002B64  6EDA               	movwf	fsr2h,c
  2447  002B66  0E04               	movlw	4
  2448  002B68  18DE               	xorwf	postinc2,w,c
  2449  002B6A  10DE               	iorwf	postinc2,w,c
  2450  002B6C  A4D8               	btfss	status,2,c
  2451  002B6E  EFBB  F015         	goto	u5401
  2452  002B72  EFBD  F015         	goto	u5400
  2453  002B76                     u5401:
  2454  002B76  EFD9  F015         	goto	l5004
  2455  002B7A                     u5400:
  2456  002B7A                     
  2457                           ; BSR set to: 1
  2458  002B7A  C02D  F020         	movff	goback@mL,turn45@mL
  2459  002B7E  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2460  002B82  C02F  F022         	movff	goback@mR,turn45@mR
  2461  002B86  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2462  002B8A  0E02               	movlw	2
  2463  002B8C  6E24               	movwf	turn45@turn_time^0,c
  2464  002B8E  0E01               	movlw	1
  2465  002B90  6E25               	movwf	turn45@direction^0,c
  2466  002B92  EC0C  F022         	call	_turn45	;wreg free
  2467  002B96  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2468  002B9A  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2469  002B9E  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2470  002BA2  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2471  002BA6  0E03               	movlw	3
  2472  002BA8  6E24               	movwf	fullSpeedBack@instruction^0,c
  2473  002BAA  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2474  002BAE  EFD8  F014         	goto	l4960
  2475  002BB2                     l5004:
  2476                           
  2477                           ; BSR set to: 1
  2478  002BB2  5185               	movf	_array_index& (0+255),w,b
  2479  002BB4  0D02               	mullw	2
  2480  002BB6  0E00               	movlw	low _memory
  2481  002BB8  24F3               	addwf	243,w,c
  2482  002BBA  6ED9               	movwf	fsr2l,c
  2483  002BBC  0E01               	movlw	high _memory
  2484  002BBE  20F4               	addwfc	prodh,w,c
  2485  002BC0  6EDA               	movwf	fsr2h,c
  2486  002BC2  0E05               	movlw	5
  2487  002BC4  18DE               	xorwf	postinc2,w,c
  2488  002BC6  10DE               	iorwf	postinc2,w,c
  2489  002BC8  A4D8               	btfss	status,2,c
  2490  002BCA  EFE9  F015         	goto	u5411
  2491  002BCE  EFEB  F015         	goto	u5410
  2492  002BD2                     u5411:
  2493  002BD2  EF07  F016         	goto	l5010
  2494  002BD6                     u5410:
  2495  002BD6                     
  2496                           ; BSR set to: 1
  2497  002BD6  C02D  F020         	movff	goback@mL,turn45@mL
  2498  002BDA  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2499  002BDE  C02F  F022         	movff	goback@mR,turn45@mR
  2500  002BE2  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2501  002BE6  0E02               	movlw	2
  2502  002BE8  6E24               	movwf	turn45@turn_time^0,c
  2503  002BEA  0E02               	movlw	2
  2504  002BEC  6E25               	movwf	turn45@direction^0,c
  2505  002BEE  EC0C  F022         	call	_turn45	;wreg free
  2506  002BF2  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2507  002BF6  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2508  002BFA  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2509  002BFE  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2510  002C02  0E03               	movlw	3
  2511  002C04  6E24               	movwf	fullSpeedBack@instruction^0,c
  2512  002C06  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2513  002C0A  EFD8  F014         	goto	l4960
  2514  002C0E                     l5010:
  2515                           
  2516                           ; BSR set to: 1
  2517  002C0E  5185               	movf	_array_index& (0+255),w,b
  2518  002C10  0D02               	mullw	2
  2519  002C12  0E00               	movlw	low _memory
  2520  002C14  24F3               	addwf	243,w,c
  2521  002C16  6ED9               	movwf	fsr2l,c
  2522  002C18  0E01               	movlw	high _memory
  2523  002C1A  20F4               	addwfc	prodh,w,c
  2524  002C1C  6EDA               	movwf	fsr2h,c
  2525  002C1E  0E06               	movlw	6
  2526  002C20  18DE               	xorwf	postinc2,w,c
  2527  002C22  10DE               	iorwf	postinc2,w,c
  2528  002C24  A4D8               	btfss	status,2,c
  2529  002C26  EF17  F016         	goto	u5421
  2530  002C2A  EF19  F016         	goto	u5420
  2531  002C2E                     u5421:
  2532  002C2E  EF35  F016         	goto	l5016
  2533  002C32                     u5420:
  2534  002C32                     
  2535                           ; BSR set to: 1
  2536  002C32  C02D  F020         	movff	goback@mL,turn45@mL
  2537  002C36  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2538  002C3A  C02F  F022         	movff	goback@mR,turn45@mR
  2539  002C3E  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2540  002C42  0E03               	movlw	3
  2541  002C44  6E24               	movwf	turn45@turn_time^0,c
  2542  002C46  0E01               	movlw	1
  2543  002C48  6E25               	movwf	turn45@direction^0,c
  2544  002C4A  EC0C  F022         	call	_turn45	;wreg free
  2545  002C4E  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2546  002C52  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2547  002C56  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2548  002C5A  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2549  002C5E  0E02               	movlw	2
  2550  002C60  6E24               	movwf	fullSpeedBack@instruction^0,c
  2551  002C62  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2552  002C66  EFD8  F014         	goto	l4960
  2553  002C6A                     l5016:
  2554                           
  2555                           ; BSR set to: 1
  2556  002C6A  5185               	movf	_array_index& (0+255),w,b
  2557  002C6C  0D02               	mullw	2
  2558  002C6E  0E00               	movlw	low _memory
  2559  002C70  24F3               	addwf	243,w,c
  2560  002C72  6ED9               	movwf	fsr2l,c
  2561  002C74  0E01               	movlw	high _memory
  2562  002C76  20F4               	addwfc	prodh,w,c
  2563  002C78  6EDA               	movwf	fsr2h,c
  2564  002C7A  0E07               	movlw	7
  2565  002C7C  18DE               	xorwf	postinc2,w,c
  2566  002C7E  10DE               	iorwf	postinc2,w,c
  2567  002C80  A4D8               	btfss	status,2,c
  2568  002C82  EF45  F016         	goto	u5431
  2569  002C86  EF47  F016         	goto	u5430
  2570  002C8A                     u5431:
  2571  002C8A  EF63  F016         	goto	l467
  2572  002C8E                     u5430:
  2573  002C8E                     
  2574                           ; BSR set to: 1
  2575  002C8E  C02D  F020         	movff	goback@mL,turn45@mL
  2576  002C92  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2577  002C96  C02F  F022         	movff	goback@mR,turn45@mR
  2578  002C9A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2579  002C9E  0E03               	movlw	3
  2580  002CA0  6E24               	movwf	turn45@turn_time^0,c
  2581  002CA2  0E02               	movlw	2
  2582  002CA4  6E25               	movwf	turn45@direction^0,c
  2583  002CA6  EC0C  F022         	call	_turn45	;wreg free
  2584  002CAA  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2585  002CAE  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2586  002CB2  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2587  002CB6  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2588  002CBA  0E02               	movlw	2
  2589  002CBC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2590  002CBE  ECD1  F025         	call	_fullSpeedBack	;wreg free
  2591  002CC2  EFD8  F014         	goto	l4960
  2592  002CC6                     l467:
  2593                           
  2594                           ; BSR set to: 1
  2595  002CC6  EFDA  F014         	goto	l4962
  2596  002CCA                     l459:
  2597                           
  2598                           ; BSR set to: 1
  2599                           ;movement.c: 84:     LATDbits.LATD7 = 1;
  2600  002CCA  8E7C               	bsf	124,7,c	;volatile
  2601                           
  2602                           ;movement.c: 85:     while(PORTFbits.RF2){
  2603  002CCC  EF7C  F016         	goto	l473
  2604  002CD0                     l5022:
  2605                           
  2606                           ;movement.c: 86:         stop(mL,mR);
  2607  002CD0  C02D  F01A         	movff	goback@mL,stop@mL
  2608  002CD4  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2609  002CD8  C02F  F01C         	movff	goback@mR,stop@mR
  2610  002CDC  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2611  002CE0  EC7B  F02B         	call	_stop	;wreg free
  2612  002CE4                     
  2613                           ;movement.c: 87:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2614  002CE4  B48E               	btfsc	142,2,c	;volatile
  2615  002CE6  EF77  F016         	goto	u5441
  2616  002CEA  EF79  F016         	goto	u5440
  2617  002CEE                     u5441:
  2618  002CEE  EF7C  F016         	goto	l473
  2619  002CF2                     u5440:
  2620  002CF2  9E7C               	bcf	124,7,c	;volatile
  2621  002CF4  EF83  F016         	goto	l477
  2622  002CF8                     l473:
  2623                           
  2624                           ;movement.c: 85:     while(PORTFbits.RF2){
  2625  002CF8  B48E               	btfsc	142,2,c	;volatile
  2626  002CFA  EF81  F016         	goto	u5451
  2627  002CFE  EF83  F016         	goto	u5450
  2628  002D02                     u5451:
  2629  002D02  EF68  F016         	goto	l5022
  2630  002D06                     u5450:
  2631  002D06                     l477:
  2632  002D06  0012               	return		;funcret
  2633  002D08                     __end_of_goback:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _fullSpeedBack *****************
  2637 ;; Defined at:
  2638 ;;		line 136 in file "dc_motor.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2641 ;;		 -> main@motorL(9), 
  2642 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2643 ;;		 -> main@motorR(9), 
  2644 ;;  instruction     1   35[COMRAM] unsigned char 
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;		None
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2656 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;Total ram usage:        7 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; Hardware stack levels required when called: 4
  2663 ;; This function calls:
  2664 ;;		_setMotorPWM
  2665 ;;		_stop
  2666 ;; This function is called by:
  2667 ;;		_turning_action
  2668 ;;		_goback
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text4
  2673  004BA2                     __ptext4:
  2674                           	callstack 0
  2675  004BA2                     _fullSpeedBack:
  2676                           	callstack 24
  2677  004BA2                     
  2678                           ;dc_motor.c: 136: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 137: {;dc_motor.c: 138:     mL->direction=0;
  2679  004BA2  EE20 F001          	lfsr	2,1
  2680  004BA6  5020               	movf	fullSpeedBack@mL^0,w,c
  2681  004BA8  26D9               	addwf	fsr2l,f,c
  2682  004BAA  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2683  004BAC  22DA               	addwfc	fsr2h,f,c
  2684  004BAE  0E00               	movlw	0
  2685  004BB0  6EDF               	movwf	indf2,c
  2686                           
  2687                           ;dc_motor.c: 139:     mR->direction=0;
  2688  004BB2  EE20 F001          	lfsr	2,1
  2689  004BB6  5022               	movf	fullSpeedBack@mR^0,w,c
  2690  004BB8  26D9               	addwf	fsr2l,f,c
  2691  004BBA  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2692  004BBC  22DA               	addwfc	fsr2h,f,c
  2693  004BBE  0E00               	movlw	0
  2694  004BC0  6EDF               	movwf	indf2,c
  2695                           
  2696                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2697  004BC2  EF1B  F026         	goto	l4484
  2698  004BC6                     l4470:
  2699                           
  2700                           ;dc_motor.c: 141:         if (mL->power<44) {mL->power += 2;}
  2701  004BC6  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2702  004BCA  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2703  004BCE  0E2C               	movlw	44
  2704  004BD0  60DF               	cpfslt	indf2,c
  2705  004BD2  EFED  F025         	goto	u4791
  2706  004BD6  EFEF  F025         	goto	u4790
  2707  004BDA                     u4791:
  2708  004BDA  EFF5  F025         	goto	l4474
  2709  004BDE                     u4790:
  2710  004BDE  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2711  004BE2  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2712  004BE6  0E02               	movlw	2
  2713  004BE8  26DF               	addwf	indf2,f,c
  2714  004BEA                     l4474:
  2715                           
  2716                           ;dc_motor.c: 142:         if (mR->power<44) {mR->power += 2;}
  2717  004BEA  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2718  004BEE  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2719  004BF2  0E2C               	movlw	44
  2720  004BF4  60DF               	cpfslt	indf2,c
  2721  004BF6  EFFF  F025         	goto	u4801
  2722  004BFA  EF01  F026         	goto	u4800
  2723  004BFE                     u4801:
  2724  004BFE  EF07  F026         	goto	l4478
  2725  004C02                     u4800:
  2726  004C02  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2727  004C06  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2728  004C0A  0E02               	movlw	2
  2729  004C0C  26DF               	addwf	indf2,f,c
  2730  004C0E                     l4478:
  2731                           
  2732                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2733  004C0E  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2734  004C12  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2735  004C16  EC96  F01E         	call	_setMotorPWM	;wreg free
  2736  004C1A                     
  2737                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2738  004C1A  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2739  004C1E  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2740  004C22  EC96  F01E         	call	_setMotorPWM	;wreg free
  2741  004C26                     
  2742                           ;dc_motor.c: 145:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2743  004C26  0E68               	movlw	104
  2744  004C28  6E25               	movwf	??_fullSpeedBack^0,c
  2745  004C2A  0EE4               	movlw	228
  2746  004C2C                     u5947:
  2747  004C2C  2EE8               	decfsz	wreg,f,c
  2748  004C2E  D7FE               	bra	u5947
  2749  004C30  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2750  004C32  D7FC               	bra	u5947
  2751  004C34  D000               	nop2	
  2752  004C36                     l4484:
  2753                           
  2754                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2755  004C36  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2756  004C3A  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2757  004C3E  0E2B               	movlw	43
  2758  004C40  64DF               	cpfsgt	indf2,c
  2759  004C42  EF25  F026         	goto	u4811
  2760  004C46  EF27  F026         	goto	u4810
  2761  004C4A                     u4811:
  2762  004C4A  EFE3  F025         	goto	l4470
  2763  004C4E                     u4810:
  2764  004C4E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2765  004C52  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2766  004C56  0E2B               	movlw	43
  2767  004C58  64DF               	cpfsgt	indf2,c
  2768  004C5A  EF31  F026         	goto	u4821
  2769  004C5E  EF33  F026         	goto	u4820
  2770  004C62                     u4821:
  2771  004C62  EFE3  F025         	goto	l4470
  2772  004C66                     u4820:
  2773  004C66                     
  2774                           ;dc_motor.c: 148:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2775  004C66  0424               	decf	fullSpeedBack@instruction^0,w,c
  2776  004C68  A4D8               	btfss	status,2,c
  2777  004C6A  EF39  F026         	goto	u4831
  2778  004C6E  EF3B  F026         	goto	u4830
  2779  004C72                     u4831:
  2780  004C72  EF46  F026         	goto	l4492
  2781  004C76                     u4830:
  2782  004C76  0E31               	movlw	49
  2783  004C78  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2784  004C7A  0EB4               	movlw	180
  2785  004C7C  6E25               	movwf	??_fullSpeedBack^0,c
  2786  004C7E  0E66               	movlw	102
  2787  004C80                     u5957:
  2788  004C80  2EE8               	decfsz	wreg,f,c
  2789  004C82  D7FE               	bra	u5957
  2790  004C84  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2791  004C86  D7FC               	bra	u5957
  2792  004C88  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2793  004C8A  D7FA               	bra	u5957
  2794  004C8C                     l4492:
  2795                           
  2796                           ;dc_motor.c: 149:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2797  004C8C  0E02               	movlw	2
  2798  004C8E  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2799  004C90  A4D8               	btfss	status,2,c
  2800  004C92  EF4D  F026         	goto	u4841
  2801  004C96  EF4F  F026         	goto	u4840
  2802  004C9A                     u4841:
  2803  004C9A  EF5B  F026         	goto	l4496
  2804  004C9E                     u4840:
  2805  004C9E  0E52               	movlw	82
  2806  004CA0  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2807  004CA2  0E2B               	movlw	43
  2808  004CA4  6E25               	movwf	??_fullSpeedBack^0,c
  2809  004CA6  0E00               	movlw	0
  2810  004CA8                     u5967:
  2811  004CA8  2EE8               	decfsz	wreg,f,c
  2812  004CAA  D7FE               	bra	u5967
  2813  004CAC  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2814  004CAE  D7FC               	bra	u5967
  2815  004CB0  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2816  004CB2  D7FA               	bra	u5967
  2817  004CB4  D000               	nop2	
  2818  004CB6                     l4496:
  2819                           
  2820                           ;dc_motor.c: 150:     if (instruction == 3) {_delay((unsigned long)((2000)*(64000000/400
      +                          0.0)));}
  2821  004CB6  0E03               	movlw	3
  2822  004CB8  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2823  004CBA  A4D8               	btfss	status,2,c
  2824  004CBC  EF62  F026         	goto	u4851
  2825  004CC0  EF64  F026         	goto	u4850
  2826  004CC4                     u4851:
  2827  004CC4  EF70  F026         	goto	l4500
  2828  004CC8                     u4850:
  2829  004CC8  0EA3               	movlw	163
  2830  004CCA  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2831  004CCC  0E57               	movlw	87
  2832  004CCE  6E25               	movwf	??_fullSpeedBack^0,c
  2833  004CD0  0E02               	movlw	2
  2834  004CD2                     u5977:
  2835  004CD2  2EE8               	decfsz	wreg,f,c
  2836  004CD4  D7FE               	bra	u5977
  2837  004CD6  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2838  004CD8  D7FC               	bra	u5977
  2839  004CDA  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2840  004CDC  D7FA               	bra	u5977
  2841  004CDE  D000               	nop2	
  2842  004CE0                     l4500:
  2843                           
  2844                           ;dc_motor.c: 151:     stop(mL,mR);
  2845  004CE0  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2846  004CE4  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2847  004CE8  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2848  004CEC  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2849  004CF0  EC7B  F02B         	call	_stop	;wreg free
  2850  004CF4  0012               	return		;funcret
  2851  004CF6                     __end_of_fullSpeedBack:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function _test_function *****************
  2855 ;; Defined at:
  2856 ;;		line 81 in file "test_and_calibration.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  test_code       1    wreg     unsigned char 
  2859 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  2860 ;;		 -> main@rgb(8), 
  2861 ;;  w               2    2[BANK1 ] PTR struct white_card
  2862 ;;		 -> main@white(28), 
  2863 ;;  mL              2    4[BANK1 ] PTR struct DC_motor
  2864 ;;		 -> main@motorL(9), 
  2865 ;;  mR              2    6[BANK1 ] PTR struct DC_motor
  2866 ;;		 -> main@motorR(9), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  test_code       1   13[BANK1 ] unsigned char 
  2869 ;;  amb_light       2    8[BANK1 ] unsigned int 
  2870 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  2871 ;;  color           1   11[BANK1 ] unsigned char 
  2872 ;;  complete        1   10[BANK1 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2882 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;Total ram usage:       16 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 11
  2889 ;; This function calls:
  2890 ;;		_LED_C
  2891 ;;		_amb_light_measure
  2892 ;;		_calibrate_white
  2893 ;;		_color_data_collection
  2894 ;;		_color_display
  2895 ;;		_color_predict
  2896 ;;		_detect_color
  2897 ;;		_detect_wall
  2898 ;;		_fullSpeedAhead
  2899 ;;		_read_color
  2900 ;;		_stop
  2901 ;;		_test_action
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text5
  2908  004268                     __ptext5:
  2909                           	callstack 0
  2910  004268                     _test_function:
  2911                           	callstack 19
  2912                           
  2913                           ;incstack = 0
  2914                           ;test_function@test_code stored from wreg
  2915  004268  0101               	movlb	1	; () banked
  2916  00426A  6FB3               	movwf	test_function@test_code& (0+255),b
  2917  00426C                     
  2918                           ;test_and_calibration.c: 81: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 82: {;test_and_calibration.c: 83:     unsigned char complete = 0;
  2919  00426C  0E00               	movlw	0
  2920  00426E  0101               	movlb	1	; () banked
  2921  004270  6FB0               	movwf	test_function@complete& (0+255),b
  2922                           
  2923                           ;test_and_calibration.c: 85:     unsigned char stop_signal = 0;
  2924  004272  0E00               	movlw	0
  2925  004274  6FB2               	movwf	test_function@stop_signal& (0+255),b
  2926                           
  2927                           ;test_and_calibration.c: 86:     unsigned int amb_light = 0;
  2928  004276  0E00               	movlw	0
  2929  004278  6FAF               	movwf	(test_function@amb_light+1)& (0+255),b
  2930  00427A  0E00               	movlw	0
  2931  00427C  6FAE               	movwf	test_function@amb_light& (0+255),b
  2932  00427E                     
  2933                           ; BSR set to: 1
  2934                           ;test_and_calibration.c: 88:     if (test_code == 2){calibrate_white(w);}
  2935  00427E  0E02               	movlw	2
  2936  004280  19B3               	xorwf	test_function@test_code& (0+255),w,b
  2937  004282  A4D8               	btfss	status,2,c
  2938  004284  EF46  F021         	goto	u5671
  2939  004288  EF48  F021         	goto	u5670
  2940  00428C                     u5671:
  2941  00428C  EF4E  F021         	goto	l5254
  2942  004290                     u5670:
  2943  004290                     
  2944                           ; BSR set to: 1
  2945  004290  C1A8  F00C         	movff	test_function@w,calibrate_white@w
  2946  004294  C1A9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2947  004298  EC90  F01C         	call	_calibrate_white	;wreg free
  2948  00429C                     l5254:
  2949                           
  2950                           ;test_and_calibration.c: 89:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2951  00429C  0E04               	movlw	4
  2952  00429E  0101               	movlb	1	; () banked
  2953  0042A0  19B3               	xorwf	test_function@test_code& (0+255),w,b
  2954  0042A2  A4D8               	btfss	status,2,c
  2955  0042A4  EF56  F021         	goto	u5681
  2956  0042A8  EF58  F021         	goto	u5680
  2957  0042AC                     u5681:
  2958  0042AC  EF62  F021         	goto	l5258
  2959  0042B0                     u5680:
  2960  0042B0                     
  2961                           ; BSR set to: 1
  2962  0042B0  C1A6  F06A         	movff	test_function@m,amb_light_measure@amb
  2963  0042B4  C1A7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2964  0042B8  EC12  F027         	call	_amb_light_measure	;wreg free
  2965  0042BC  C06A  F1AE         	movff	?_amb_light_measure,test_function@amb_light
  2966  0042C0  C06B  F1AF         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2967  0042C4                     l5258:
  2968                           
  2969                           ;test_and_calibration.c: 93:         if (test_code == 1){
  2970  0042C4  0101               	movlb	1	; () banked
  2971  0042C6  05B3               	decf	test_function@test_code& (0+255),w,b
  2972  0042C8  A4D8               	btfss	status,2,c
  2973  0042CA  EF69  F021         	goto	u5691
  2974  0042CE  EF6B  F021         	goto	u5690
  2975  0042D2                     u5691:
  2976  0042D2  EF79  F021         	goto	l5266
  2977  0042D6                     u5690:
  2978  0042D6                     
  2979                           ; BSR set to: 1
  2980                           ;test_and_calibration.c: 94:             LED_C();
  2981  0042D6  ECB3  F02F         	call	_LED_C	;wreg free
  2982  0042DA                     
  2983                           ;test_and_calibration.c: 95:             read_color(m);
  2984  0042DA  C1A6  F00C         	movff	test_function@m,read_color@m
  2985  0042DE  C1A7  F00D         	movff	test_function@m+1,read_color@m+1
  2986  0042E2  EC88  F02C         	call	_read_color	;wreg free
  2987  0042E6                     
  2988                           ;test_and_calibration.c: 96:             color_display(m);
  2989  0042E6  C1A6  F058         	movff	test_function@m,color_display@m
  2990  0042EA  C1A7  F059         	movff	test_function@m+1,color_display@m+1
  2991  0042EE  EC1F  F02C         	call	_color_display	;wreg free
  2992  0042F2                     l5266:
  2993                           
  2994                           ;test_and_calibration.c: 99:         if (test_code == 2){
  2995  0042F2  0E02               	movlw	2
  2996  0042F4  0101               	movlb	1	; () banked
  2997  0042F6  19B3               	xorwf	test_function@test_code& (0+255),w,b
  2998  0042F8  A4D8               	btfss	status,2,c
  2999  0042FA  EF81  F021         	goto	u5701
  3000  0042FE  EF83  F021         	goto	u5700
  3001  004302                     u5701:
  3002  004302  EF92  F021         	goto	l5272
  3003  004306                     u5700:
  3004  004306                     
  3005                           ; BSR set to: 1
  3006                           ;test_and_calibration.c: 100:             color = detect_color(m,w);
  3007  004306  C1A6  F079         	movff	test_function@m,detect_color@m
  3008  00430A  C1A7  F07A         	movff	test_function@m+1,detect_color@m+1
  3009  00430E  C1A8  F07B         	movff	test_function@w,detect_color@w
  3010  004312  C1A9  F07C         	movff	test_function@w+1,detect_color@w+1
  3011  004316  EC0A  F007         	call	_detect_color	;wreg free
  3012  00431A  0101               	movlb	1	; () banked
  3013  00431C  6FB1               	movwf	test_function@color& (0+255),b
  3014  00431E                     
  3015                           ; BSR set to: 1
  3016                           ;test_and_calibration.c: 102:             color_predict(color);
  3017  00431E  51B1               	movf	test_function@color& (0+255),w,b
  3018  004320  EC20  F02F         	call	_color_predict
  3019  004324                     l5272:
  3020                           
  3021                           ;test_and_calibration.c: 105:         if (test_code == 3){
  3022  004324  0E03               	movlw	3
  3023  004326  0101               	movlb	1	; () banked
  3024  004328  19B3               	xorwf	test_function@test_code& (0+255),w,b
  3025  00432A  A4D8               	btfss	status,2,c
  3026  00432C  EF9A  F021         	goto	u5711
  3027  004330  EF9C  F021         	goto	u5710
  3028  004334                     u5711:
  3029  004334  EFAF  F021         	goto	l5282
  3030  004338                     u5710:
  3031  004338  EFA7  F021         	goto	l5280
  3032  00433C                     l5276:
  3033                           
  3034                           ; BSR set to: 1
  3035                           ;test_and_calibration.c: 107:                 color_data_collection(m);
  3036  00433C  C1A6  F05A         	movff	test_function@m,color_data_collection@m
  3037  004340  C1A7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  3038  004344  ECE4  F022         	call	_color_data_collection	;wreg free
  3039  004348                     
  3040                           ;test_and_calibration.c: 108:                 complete = 1;
  3041  004348  0E01               	movlw	1
  3042  00434A  0101               	movlb	1	; () banked
  3043  00434C  6FB0               	movwf	test_function@complete& (0+255),b
  3044  00434E                     l5280:
  3045                           
  3046                           ; BSR set to: 1
  3047                           ;test_and_calibration.c: 106:             while (complete == 0){
  3048  00434E  51B0               	movf	test_function@complete& (0+255),w,b
  3049  004350  B4D8               	btfsc	status,2,c
  3050  004352  EFAD  F021         	goto	u5721
  3051  004356  EFAF  F021         	goto	u5720
  3052  00435A                     u5721:
  3053  00435A  EF9E  F021         	goto	l5276
  3054  00435E                     u5720:
  3055  00435E                     l5282:
  3056                           
  3057                           ; BSR set to: 1
  3058                           ;test_and_calibration.c: 112:         if (test_code == 4){
  3059  00435E  0E04               	movlw	4
  3060  004360  19B3               	xorwf	test_function@test_code& (0+255),w,b
  3061  004362  A4D8               	btfss	status,2,c
  3062  004364  EFB6  F021         	goto	u5731
  3063  004368  EFB8  F021         	goto	u5730
  3064  00436C                     u5731:
  3065  00436C  EFF6  F021         	goto	l5298
  3066  004370                     u5730:
  3067  004370  EFD4  F021         	goto	l5290
  3068  004374                     l5286:
  3069                           
  3070                           ; BSR set to: 1
  3071                           ;test_and_calibration.c: 114:                 fullSpeedAhead(mL, mR);
  3072  004374  C1AA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3073  004378  C1AB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3074  00437C  C1AC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3075  004380  C1AD  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3076  004384  ECB7  F02A         	call	_fullSpeedAhead	;wreg free
  3077  004388                     
  3078                           ;test_and_calibration.c: 115:                 stop_signal = detect_wall(mL, mR, amb_ligh
      +                          t);
  3079  004388  C1AA  F06A         	movff	test_function@mL,detect_wall@mL
  3080  00438C  C1AB  F06B         	movff	test_function@mL+1,detect_wall@mL+1
  3081  004390  C1AC  F06C         	movff	test_function@mR,detect_wall@mR
  3082  004394  C1AD  F06D         	movff	test_function@mR+1,detect_wall@mR+1
  3083  004398  C1AE  F06E         	movff	test_function@amb_light,detect_wall@amb_light
  3084  00439C  C1AF  F06F         	movff	test_function@amb_light+1,detect_wall@amb_light+1
  3085  0043A0  ECF1  F029         	call	_detect_wall	;wreg free
  3086  0043A4  0101               	movlb	1	; () banked
  3087  0043A6  6FB2               	movwf	test_function@stop_signal& (0+255),b
  3088  0043A8                     l5290:
  3089                           
  3090                           ; BSR set to: 1
  3091                           ;test_and_calibration.c: 113:             while (stop_signal == 0){
  3092  0043A8  51B2               	movf	test_function@stop_signal& (0+255),w,b
  3093  0043AA  B4D8               	btfsc	status,2,c
  3094  0043AC  EFDA  F021         	goto	u5741
  3095  0043B0  EFDC  F021         	goto	u5740
  3096  0043B4                     u5741:
  3097  0043B4  EFBA  F021         	goto	l5286
  3098  0043B8                     u5740:
  3099  0043B8                     
  3100                           ; BSR set to: 1
  3101                           ;test_and_calibration.c: 117:             stop(mL, mR);
  3102  0043B8  C1AA  F01A         	movff	test_function@mL,stop@mL
  3103  0043BC  C1AB  F01B         	movff	test_function@mL+1,stop@mL+1
  3104  0043C0  C1AC  F01C         	movff	test_function@mR,stop@mR
  3105  0043C4  C1AD  F01D         	movff	test_function@mR+1,stop@mR+1
  3106  0043C8  EC7B  F02B         	call	_stop	;wreg free
  3107  0043CC                     
  3108                           ;test_and_calibration.c: 118:             _delay((unsigned long)((1000)*(64000000/4000.0
      +                          )));
  3109  0043CC  0E52               	movlw	82
  3110  0043CE  0100               	movlb	0	; () banked
  3111  0043D0  6FFF               	movwf	(??_test_function+1)& (0+255),b
  3112  0043D2  0E2B               	movlw	43
  3113  0043D4  6FFE               	movwf	??_test_function& (0+255),b
  3114  0043D6  0E00               	movlw	0
  3115  0043D8                     u5987:
  3116  0043D8  2EE8               	decfsz	wreg,f,c
  3117  0043DA  D7FE               	bra	u5987
  3118  0043DC  2FFE               	decfsz	??_test_function& (0+255),f,b
  3119  0043DE  D7FC               	bra	u5987
  3120  0043E0  2FFF               	decfsz	(??_test_function+1)& (0+255),f,b
  3121  0043E2  D7FA               	bra	u5987
  3122  0043E4  F000               	nop	
  3123  0043E6                     
  3124                           ;test_and_calibration.c: 119:             stop_signal = 0;
  3125  0043E6  0E00               	movlw	0
  3126  0043E8  0101               	movlb	1	; () banked
  3127  0043EA  6FB2               	movwf	test_function@stop_signal& (0+255),b
  3128  0043EC                     l5298:
  3129                           
  3130                           ; BSR set to: 1
  3131                           ;test_and_calibration.c: 122:         if (test_code == 5){
  3132  0043EC  0E05               	movlw	5
  3133  0043EE  19B3               	xorwf	test_function@test_code& (0+255),w,b
  3134  0043F0  A4D8               	btfss	status,2,c
  3135  0043F2  EFFD  F021         	goto	u5751
  3136  0043F6  EFFF  F021         	goto	u5750
  3137  0043FA                     u5751:
  3138  0043FA  EF62  F021         	goto	l5258
  3139  0043FE                     u5750:
  3140  0043FE                     
  3141                           ; BSR set to: 1
  3142                           ;test_and_calibration.c: 123:             test_action(mL,mR);
  3143  0043FE  C1AA  F02D         	movff	test_function@mL,test_action@mL
  3144  004402  C1AB  F02E         	movff	test_function@mL+1,test_action@mL+1
  3145  004406  C1AC  F02F         	movff	test_function@mR,test_action@mR
  3146  00440A  C1AD  F030         	movff	test_function@mR+1,test_action@mR+1
  3147  00440E  EC7B  F026         	call	_test_action	;wreg free
  3148  004412  EF62  F021         	goto	l5258
  3149  004416  0012               	return		;funcret
  3150  004418                     __end_of_test_function:
  3151                           	callstack 0
  3152                           
  3153 ;; *************** function _detect_wall *****************
  3154 ;; Defined at:
  3155 ;;		line 382 in file "color.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  3158 ;;		 -> main@motorL(9), 
  3159 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  3160 ;;		 -> main@motorR(9), 
  3161 ;;  amb_light       2   14[BANK0 ] unsigned int 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  threshold       2   26[BANK0 ] unsigned int 
  3164 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  3165 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  3166 ;;  stop            1   28[BANK0 ] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      unsigned char 
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3176 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3179 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3180 ;;Total ram usage:       19 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 5
  3183 ;; This function calls:
  3184 ;;		_LED_C
  3185 ;;		___flmul
  3186 ;;		___xxtofl
  3187 ;;		_color_read_Clear
  3188 ;;		_color_read_Green
  3189 ;;		_lroundf
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;;		_test_function
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text6
  3197  0053E2                     __ptext6:
  3198                           	callstack 0
  3199  0053E2                     _detect_wall:
  3200                           	callstack 24
  3201  0053E2  0E00               	movlw	0
  3202  0053E4  0100               	movlb	0	; () banked
  3203  0053E6  6F73               	movwf	(detect_wall@CG_amb+1)& (0+255),b
  3204  0053E8  0E00               	movlw	0
  3205  0053EA  6F72               	movwf	detect_wall@CG_amb& (0+255),b
  3206                           
  3207                           ;color.c: 385:     unsigned char stop = 0;
  3208  0053EC  0E00               	movlw	0
  3209  0053EE  6F7C               	movwf	detect_wall@stop& (0+255),b
  3210                           
  3211                           ;color.c: 386:     unsigned int threshold = 0;
  3212  0053F0  0E00               	movlw	0
  3213  0053F2  6F7B               	movwf	(detect_wall@threshold+1)& (0+255),b
  3214  0053F4  0E00               	movlw	0
  3215  0053F6  6F7A               	movwf	detect_wall@threshold& (0+255),b
  3216  0053F8                     
  3217                           ; BSR set to: 0
  3218                           ;color.c: 387:     LED_C();
  3219  0053F8  ECB3  F02F         	call	_LED_C	;wreg free
  3220  0053FC                     
  3221                           ;color.c: 388:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3222  0053FC  0E09               	movlw	9
  3223  0053FE  0100               	movlb	0	; () banked
  3224  005400  6F71               	movwf	(??_detect_wall+1)& (0+255),b
  3225  005402  0E1E               	movlw	30
  3226  005404  6F70               	movwf	??_detect_wall& (0+255),b
  3227  005406  0EE4               	movlw	228
  3228  005408                     u5997:
  3229  005408  2EE8               	decfsz	wreg,f,c
  3230  00540A  D7FE               	bra	u5997
  3231  00540C  2F70               	decfsz	??_detect_wall& (0+255),f,b
  3232  00540E  D7FC               	bra	u5997
  3233  005410  2F71               	decfsz	(??_detect_wall+1)& (0+255),f,b
  3234  005412  D7FA               	bra	u5997
  3235  005414  F000               	nop	
  3236  005416                     
  3237                           ;color.c: 389:     CC_amb = color_read_Clear();
  3238  005416  EC58  F02D         	call	_color_read_Clear	;wreg free
  3239  00541A  C005  F078         	movff	?_color_read_Clear,detect_wall@CC_amb
  3240  00541E  C006  F079         	movff	?_color_read_Clear+1,detect_wall@CC_amb+1
  3241  005422  EC08  F02D         	call	_color_read_Green	;wreg free
  3242  005426                     
  3243                           ;color.c: 391:     threshold = lroundf((float)amb_light * 1.1);
  3244  005426  C06E  F001         	movff	detect_wall@amb_light,___xxtofl@val
  3245  00542A  C06F  F002         	movff	detect_wall@amb_light+1,___xxtofl@val+1
  3246  00542E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3247  005430  6A04               	clrf	(___xxtofl@val+3)^0,c
  3248  005432  0E00               	movlw	0
  3249  005434  EC5A  F020         	call	___xxtofl
  3250  005438  C001  F028         	movff	?___xxtofl,___flmul@b
  3251  00543C  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3252  005440  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3253  005444  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3254  005448  0ECD               	movlw	205
  3255  00544A  6E2C               	movwf	___flmul@a^0,c
  3256  00544C  0ECC               	movlw	204
  3257  00544E  6E2D               	movwf	(___flmul@a+1)^0,c
  3258  005450  0E8C               	movlw	140
  3259  005452  6E2E               	movwf	(___flmul@a+2)^0,c
  3260  005454  0E3F               	movlw	63
  3261  005456  6E2F               	movwf	(___flmul@a+3)^0,c
  3262  005458  ECC6  F010         	call	___flmul	;wreg free
  3263  00545C  C028  F074         	movff	?___flmul,_detect_wall$2948
  3264  005460  C029  F075         	movff	?___flmul+1,_detect_wall$2948+1
  3265  005464  C02A  F076         	movff	?___flmul+2,_detect_wall$2948+2
  3266  005468  C02B  F077         	movff	?___flmul+3,_detect_wall$2948+3
  3267  00546C                     
  3268                           ;color.c: 391:     threshold = lroundf((float)amb_light * 1.1);
  3269  00546C  C074  F066         	movff	_detect_wall$2948,lroundf@x
  3270  005470  C075  F067         	movff	_detect_wall$2948+1,lroundf@x+1
  3271  005474  C076  F068         	movff	_detect_wall$2948+2,lroundf@x+2
  3272  005478  C077  F069         	movff	_detect_wall$2948+3,lroundf@x+3
  3273  00547C  EC65  F02E         	call	_lroundf	;wreg free
  3274  005480  C066  F07A         	movff	?_lroundf,detect_wall@threshold
  3275  005484  C067  F07B         	movff	?_lroundf+1,detect_wall@threshold+1
  3276  005488                     
  3277                           ;color.c: 394:     if (CC_amb >= threshold){stop = 1;}
  3278  005488  0100               	movlb	0	; () banked
  3279  00548A  517A               	movf	detect_wall@threshold& (0+255),w,b
  3280  00548C  5D78               	subwf	detect_wall@CC_amb& (0+255),w,b
  3281  00548E  517B               	movf	(detect_wall@threshold+1)& (0+255),w,b
  3282  005490  5979               	subwfb	(detect_wall@CC_amb+1)& (0+255),w,b
  3283  005492  A0D8               	btfss	status,0,c
  3284  005494  EF4E  F02A         	goto	u5341
  3285  005498  EF50  F02A         	goto	u5340
  3286  00549C                     u5341:
  3287  00549C  EF52  F02A         	goto	l148
  3288  0054A0                     u5340:
  3289  0054A0                     
  3290                           ; BSR set to: 0
  3291  0054A0  0E01               	movlw	1
  3292  0054A2  6F7C               	movwf	detect_wall@stop& (0+255),b
  3293  0054A4                     l148:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;color.c: 395:     return stop;
  3297  0054A4  517C               	movf	detect_wall@stop& (0+255),w,b
  3298  0054A6                     
  3299                           ; BSR set to: 0
  3300  0054A6  0012               	return		;funcret
  3301  0054A8                     __end_of_detect_wall:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _detect_color *****************
  3305 ;; Defined at:
  3306 ;;		line 270 in file "color.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  3309 ;;		 -> main@rgb(8), 
  3310 ;;  w               2   27[BANK0 ] PTR struct white_card
  3311 ;;		 -> main@white(28), 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  buf           100   33[BANK0 ] unsigned char [100]
  3314 ;;  RR              2  152[BANK0 ] unsigned int 
  3315 ;;  BG              2  150[BANK0 ] unsigned int 
  3316 ;;  GG              2  147[BANK0 ] unsigned int 
  3317 ;;  GB              2  145[BANK0 ] unsigned int 
  3318 ;;  BB              2  143[BANK0 ] unsigned int 
  3319 ;;  RB              2  141[BANK0 ] unsigned int 
  3320 ;;  GR              2  139[BANK0 ] unsigned int 
  3321 ;;  BR              2  137[BANK0 ] unsigned int 
  3322 ;;  RG              2  135[BANK0 ] unsigned int 
  3323 ;;  BC              2  133[BANK0 ] unsigned int 
  3324 ;;  color           1  149[BANK0 ] unsigned char 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      unsigned char 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;      Locals:         0     125       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3336 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3337 ;;      Totals:         0     133       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3338 ;;Total ram usage:      133 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 9
  3341 ;; This function calls:
  3342 ;;		_LED_B
  3343 ;;		_LED_G
  3344 ;;		_LED_R
  3345 ;;		___fldiv
  3346 ;;		___flmul
  3347 ;;		___fltol
  3348 ;;		___xxtofl
  3349 ;;		_compare
  3350 ;;		_lroundf
  3351 ;;		_read_color
  3352 ;;		_sendStringSerial4
  3353 ;;		_sprintf
  3354 ;;		_toggle_light
  3355 ;; This function is called by:
  3356 ;;		_verify_color
  3357 ;;		_main
  3358 ;;		_test_function
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text7
  3363  000E14                     __ptext7:
  3364                           	callstack 0
  3365  000E14                     _detect_color:
  3366                           	callstack 20
  3367  000E14  0E00               	movlw	0
  3368  000E16  0100               	movlb	0	; () banked
  3369  000E18  6FE8               	movwf	(detect_color@RG+1)& (0+255),b
  3370  000E1A  0E00               	movlw	0
  3371  000E1C  6FE7               	movwf	detect_color@RG& (0+255),b
  3372  000E1E  0E00               	movlw	0
  3373  000E20  6FEE               	movwf	(detect_color@RB+1)& (0+255),b
  3374  000E22  0E00               	movlw	0
  3375  000E24  6FED               	movwf	detect_color@RB& (0+255),b
  3376  000E26  0E00               	movlw	0
  3377  000E28  6FEC               	movwf	(detect_color@GR+1)& (0+255),b
  3378  000E2A  0E00               	movlw	0
  3379  000E2C  6FEB               	movwf	detect_color@GR& (0+255),b
  3380  000E2E  0E00               	movlw	0
  3381  000E30  6FF4               	movwf	(detect_color@GG+1)& (0+255),b
  3382  000E32  0E00               	movlw	0
  3383  000E34  6FF3               	movwf	detect_color@GG& (0+255),b
  3384  000E36  0E00               	movlw	0
  3385  000E38  6FF2               	movwf	(detect_color@GB+1)& (0+255),b
  3386  000E3A  0E00               	movlw	0
  3387  000E3C  6FF1               	movwf	detect_color@GB& (0+255),b
  3388  000E3E  0E00               	movlw	0
  3389  000E40  6FEA               	movwf	(detect_color@BR+1)& (0+255),b
  3390  000E42  0E00               	movlw	0
  3391  000E44  6FE9               	movwf	detect_color@BR& (0+255),b
  3392  000E46  0E00               	movlw	0
  3393  000E48  6FF7               	movwf	(detect_color@BG+1)& (0+255),b
  3394  000E4A  0E00               	movlw	0
  3395  000E4C  6FF6               	movwf	detect_color@BG& (0+255),b
  3396  000E4E  0E00               	movlw	0
  3397  000E50  6FF0               	movwf	(detect_color@BB+1)& (0+255),b
  3398  000E52  0E00               	movlw	0
  3399  000E54  6FEF               	movwf	detect_color@BB& (0+255),b
  3400  000E56  0E00               	movlw	0
  3401  000E58  6FE6               	movwf	(detect_color@BC+1)& (0+255),b
  3402  000E5A  0E00               	movlw	0
  3403  000E5C  6FE5               	movwf	detect_color@BC& (0+255),b
  3404                           
  3405                           ;color.c: 276:     unsigned char color = 0;
  3406  000E5E  0E00               	movlw	0
  3407  000E60  6FF5               	movwf	detect_color@color& (0+255),b
  3408  000E62                     
  3409                           ; BSR set to: 0
  3410                           ;color.c: 278:     LED_R();
  3411  000E62  EC73  F02F         	call	_LED_R	;wreg free
  3412  000E66                     
  3413                           ;color.c: 279:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3414  000E66  0E09               	movlw	9
  3415  000E68  0100               	movlb	0	; () banked
  3416  000E6A  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3417  000E6C  0E1E               	movlw	30
  3418  000E6E  6F7D               	movwf	??_detect_color& (0+255),b
  3419  000E70  0EE4               	movlw	228
  3420  000E72                     u6007:
  3421  000E72  2EE8               	decfsz	wreg,f,c
  3422  000E74  D7FE               	bra	u6007
  3423  000E76  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3424  000E78  D7FC               	bra	u6007
  3425  000E7A  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3426  000E7C  D7FA               	bra	u6007
  3427  000E7E  F000               	nop	
  3428  000E80                     
  3429                           ;color.c: 280:     read_color(m);
  3430  000E80  C079  F00C         	movff	detect_color@m,read_color@m
  3431  000E84  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  3432  000E88  EC88  F02C         	call	_read_color	;wreg free
  3433  000E8C                     
  3434                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3435  000E8C  C07B  FFD9         	movff	detect_color@w,fsr2l
  3436  000E90  C07C  FFDA         	movff	detect_color@w+1,fsr2h
  3437  000E94  CFDE F07D          	movff	postinc2,??_detect_color
  3438  000E98  CFDD F07E          	movff	postdec2,??_detect_color+1
  3439  000E9C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3440  000EA0  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3441  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3442  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3443  000EA8  0E00               	movlw	0
  3444  000EAA  EC5A  F020         	call	___xxtofl
  3445  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3446  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3447  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3448  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3449  000EBE  C079  FFD9         	movff	detect_color@m,fsr2l
  3450  000EC2  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3451  000EC6  CFDE F07F          	movff	postinc2,??_detect_color+2
  3452  000ECA  CFDD F080          	movff	postdec2,??_detect_color+3
  3453  000ECE  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3454  000ED2  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3455  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3456  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3457  000EDA  0E00               	movlw	0
  3458  000EDC  EC5A  F020         	call	___xxtofl
  3459  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3460  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3461  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3462  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3463  000EF0  EC84  F016         	call	___fldiv	;wreg free
  3464  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  3465  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3466  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3467  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3468  000F04  0E00               	movlw	0
  3469  000F06  6E2C               	movwf	___flmul@a^0,c
  3470  000F08  0E00               	movlw	0
  3471  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  3472  000F0C  0EC8               	movlw	200
  3473  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  3474  000F10  0E42               	movlw	66
  3475  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  3476  000F14  ECC6  F010         	call	___flmul	;wreg free
  3477  000F18  C028  F0FA         	movff	?___flmul,_detect_color$2947
  3478  000F1C  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  3479  000F20  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  3480  000F24  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  3481  000F28                     
  3482                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3483  000F28  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  3484  000F2C  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  3485  000F30  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  3486  000F34  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  3487  000F38  EC65  F02E         	call	_lroundf	;wreg free
  3488  000F3C  C066  F0F8         	movff	?_lroundf,detect_color@RR
  3489  000F40  C067  F0F9         	movff	?_lroundf+1,detect_color@RR+1
  3490  000F44  0100               	movlb	0	; () banked
  3491  000F46  EE20 F002          	lfsr	2,2
  3492  000F4A  517B               	movf	detect_color@w& (0+255),w,b
  3493  000F4C  26D9               	addwf	fsr2l,f,c
  3494  000F4E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3495  000F50  22DA               	addwfc	fsr2h,f,c
  3496  000F52  CFDE F07D          	movff	postinc2,??_detect_color
  3497  000F56  CFDD F07E          	movff	postdec2,??_detect_color+1
  3498  000F5A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3499  000F5E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3500  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  3501  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  3502  000F66  0E00               	movlw	0
  3503  000F68  EC5A  F020         	call	___xxtofl
  3504  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3505  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3506  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3507  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3508  000F7C  0100               	movlb	0	; () banked
  3509  000F7E  EE20 F002          	lfsr	2,2
  3510  000F82  5179               	movf	detect_color@m& (0+255),w,b
  3511  000F84  26D9               	addwf	fsr2l,f,c
  3512  000F86  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3513  000F88  22DA               	addwfc	fsr2h,f,c
  3514  000F8A  CFDE F07F          	movff	postinc2,??_detect_color+2
  3515  000F8E  CFDD F080          	movff	postdec2,??_detect_color+3
  3516  000F92  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3517  000F96  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3518  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3519  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3520  000F9E  0E00               	movlw	0
  3521  000FA0  EC5A  F020         	call	___xxtofl
  3522  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3523  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3524  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3525  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3526  000FB4  EC84  F016         	call	___fldiv	;wreg free
  3527  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  3528  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3529  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3530  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3531  000FC8  0E00               	movlw	0
  3532  000FCA  6E2C               	movwf	___flmul@a^0,c
  3533  000FCC  0E00               	movlw	0
  3534  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  3535  000FD0  0EC8               	movlw	200
  3536  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  3537  000FD4  0E42               	movlw	66
  3538  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  3539  000FD8  ECC6  F010         	call	___flmul	;wreg free
  3540  000FDC  C028  F0FA         	movff	?___flmul,_detect_color$2947
  3541  000FE0  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  3542  000FE4  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  3543  000FE8  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  3544  000FEC  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  3545  000FF0  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  3546  000FF4  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  3547  000FF8  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  3548  000FFC  EC65  F02E         	call	_lroundf	;wreg free
  3549  001000  C066  F0E7         	movff	?_lroundf,detect_color@RG
  3550  001004  C067  F0E8         	movff	?_lroundf+1,detect_color@RG+1
  3551  001008  0100               	movlb	0	; () banked
  3552  00100A  EE20 F004          	lfsr	2,4
  3553  00100E  517B               	movf	detect_color@w& (0+255),w,b
  3554  001010  26D9               	addwf	fsr2l,f,c
  3555  001012  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3556  001014  22DA               	addwfc	fsr2h,f,c
  3557  001016  CFDE F07D          	movff	postinc2,??_detect_color
  3558  00101A  CFDD F07E          	movff	postdec2,??_detect_color+1
  3559  00101E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3560  001022  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3561  001026  6A03               	clrf	(___xxtofl@val+2)^0,c
  3562  001028  6A04               	clrf	(___xxtofl@val+3)^0,c
  3563  00102A  0E00               	movlw	0
  3564  00102C  EC5A  F020         	call	___xxtofl
  3565  001030  C001  F013         	movff	?___xxtofl,___fldiv@a
  3566  001034  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3567  001038  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3568  00103C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3569  001040  0100               	movlb	0	; () banked
  3570  001042  EE20 F004          	lfsr	2,4
  3571  001046  5179               	movf	detect_color@m& (0+255),w,b
  3572  001048  26D9               	addwf	fsr2l,f,c
  3573  00104A  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3574  00104C  22DA               	addwfc	fsr2h,f,c
  3575  00104E  CFDE F07F          	movff	postinc2,??_detect_color+2
  3576  001052  CFDD F080          	movff	postdec2,??_detect_color+3
  3577  001056  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3578  00105A  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3579  00105E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3580  001060  6A04               	clrf	(___xxtofl@val+3)^0,c
  3581  001062  0E00               	movlw	0
  3582  001064  EC5A  F020         	call	___xxtofl
  3583  001068  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3584  00106C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3585  001070  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3586  001074  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3587  001078  EC84  F016         	call	___fldiv	;wreg free
  3588  00107C  C00F  F028         	movff	?___fldiv,___flmul@b
  3589  001080  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3590  001084  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3591  001088  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3592  00108C  0E00               	movlw	0
  3593  00108E  6E2C               	movwf	___flmul@a^0,c
  3594  001090  0E00               	movlw	0
  3595  001092  6E2D               	movwf	(___flmul@a+1)^0,c
  3596  001094  0EC8               	movlw	200
  3597  001096  6E2E               	movwf	(___flmul@a+2)^0,c
  3598  001098  0E42               	movlw	66
  3599  00109A  6E2F               	movwf	(___flmul@a+3)^0,c
  3600  00109C  ECC6  F010         	call	___flmul	;wreg free
  3601  0010A0  C028  F0FA         	movff	?___flmul,_detect_color$2947
  3602  0010A4  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  3603  0010A8  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  3604  0010AC  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  3605  0010B0  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  3606  0010B4  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  3607  0010B8  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  3608  0010BC  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  3609  0010C0  EC65  F02E         	call	_lroundf	;wreg free
  3610  0010C4  C066  F0ED         	movff	?_lroundf,detect_color@RB
  3611  0010C8  C067  F0EE         	movff	?_lroundf+1,detect_color@RB+1
  3612  0010CC                     
  3613                           ;color.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3614  0010CC  0E05               	movlw	5
  3615  0010CE  0100               	movlb	0	; () banked
  3616  0010D0  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3617  0010D2  0E0F               	movlw	15
  3618  0010D4  6F7D               	movwf	??_detect_color& (0+255),b
  3619  0010D6  0EF1               	movlw	241
  3620  0010D8                     u6017:
  3621  0010D8  2EE8               	decfsz	wreg,f,c
  3622  0010DA  D7FE               	bra	u6017
  3623  0010DC  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3624  0010DE  D7FC               	bra	u6017
  3625  0010E0  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3626  0010E2  D7FA               	bra	u6017
  3627  0010E4                     
  3628                           ;color.c: 285:     char buf[100];;color.c: 286:     sprintf(buf,"%d\t%d\t%d\r\n", RR, RG
      +                          , RB);
  3629  0010E4  0E81               	movlw	low detect_color@buf
  3630  0010E6  0100               	movlb	0	; () banked
  3631  0010E8  6F60               	movwf	sprintf@s& (0+255),b
  3632  0010EA  0E00               	movlw	high detect_color@buf
  3633  0010EC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3634  0010EE  0E08               	movlw	low (STR_1+3)
  3635  0010F0  6F62               	movwf	sprintf@fmt& (0+255),b
  3636  0010F2  0E0E               	movlw	high (STR_1+3)
  3637  0010F4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3638  0010F6  C0F8  F064         	movff	detect_color@RR,?_sprintf+4
  3639  0010FA  C0F9  F065         	movff	detect_color@RR+1,?_sprintf+5
  3640  0010FE  C0E7  F066         	movff	detect_color@RG,?_sprintf+6
  3641  001102  C0E8  F067         	movff	detect_color@RG+1,?_sprintf+7
  3642  001106  C0ED  F068         	movff	detect_color@RB,?_sprintf+8
  3643  00110A  C0EE  F069         	movff	detect_color@RB+1,?_sprintf+9
  3644  00110E  ECB7  F02C         	call	_sprintf	;wreg free
  3645  001112                     
  3646                           ;color.c: 287:     sendStringSerial4(buf);
  3647  001112  0E81               	movlw	low detect_color@buf
  3648  001114  6E02               	movwf	sendStringSerial4@string^0,c
  3649  001116  0E00               	movlw	high detect_color@buf
  3650  001118  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3651  00111A  EC08  F02F         	call	_sendStringSerial4	;wreg free
  3652  00111E                     
  3653                           ;color.c: 289:     LED_G();
  3654  00111E  EC93  F02F         	call	_LED_G	;wreg free
  3655  001122                     
  3656                           ;color.c: 290:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3657  001122  0E09               	movlw	9
  3658  001124  0100               	movlb	0	; () banked
  3659  001126  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3660  001128  0E1E               	movlw	30
  3661  00112A  6F7D               	movwf	??_detect_color& (0+255),b
  3662  00112C  0EE4               	movlw	228
  3663  00112E                     u6027:
  3664  00112E  2EE8               	decfsz	wreg,f,c
  3665  001130  D7FE               	bra	u6027
  3666  001132  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3667  001134  D7FC               	bra	u6027
  3668  001136  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3669  001138  D7FA               	bra	u6027
  3670  00113A  F000               	nop	
  3671  00113C                     
  3672                           ;color.c: 291:     read_color(m);
  3673  00113C  C079  F00C         	movff	detect_color@m,read_color@m
  3674  001140  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  3675  001144  EC88  F02C         	call	_read_color	;wreg free
  3676  001148  0E00               	movlw	0
  3677  00114A  6E2C               	movwf	___flmul@a^0,c
  3678  00114C  0E00               	movlw	0
  3679  00114E  6E2D               	movwf	(___flmul@a+1)^0,c
  3680  001150  0EC8               	movlw	200
  3681  001152  6E2E               	movwf	(___flmul@a+2)^0,c
  3682  001154  0E42               	movlw	66
  3683  001156  6E2F               	movwf	(___flmul@a+3)^0,c
  3684  001158  0100               	movlb	0	; () banked
  3685  00115A  EE20 F006          	lfsr	2,6
  3686  00115E  517B               	movf	detect_color@w& (0+255),w,b
  3687  001160  26D9               	addwf	fsr2l,f,c
  3688  001162  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3689  001164  22DA               	addwfc	fsr2h,f,c
  3690  001166  CFDE F07D          	movff	postinc2,??_detect_color
  3691  00116A  CFDD F07E          	movff	postdec2,??_detect_color+1
  3692  00116E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3693  001172  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3694  001176  6A03               	clrf	(___xxtofl@val+2)^0,c
  3695  001178  6A04               	clrf	(___xxtofl@val+3)^0,c
  3696  00117A  0E00               	movlw	0
  3697  00117C  EC5A  F020         	call	___xxtofl
  3698  001180  C001  F013         	movff	?___xxtofl,___fldiv@a
  3699  001184  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3700  001188  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3701  00118C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3702  001190  C079  FFD9         	movff	detect_color@m,fsr2l
  3703  001194  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3704  001198  CFDE F07F          	movff	postinc2,??_detect_color+2
  3705  00119C  CFDD F080          	movff	postdec2,??_detect_color+3
  3706  0011A0  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3707  0011A4  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3708  0011A8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3709  0011AA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3710  0011AC  0E00               	movlw	0
  3711  0011AE  EC5A  F020         	call	___xxtofl
  3712  0011B2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3713  0011B6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3714  0011BA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3715  0011BE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3716  0011C2  EC84  F016         	call	___fldiv	;wreg free
  3717  0011C6  C00F  F028         	movff	?___fldiv,___flmul@b
  3718  0011CA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3719  0011CE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3720  0011D2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3721  0011D6  ECC6  F010         	call	___flmul	;wreg free
  3722  0011DA  C028  F05B         	movff	?___flmul,___fltol@f1
  3723  0011DE  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3724  0011E2  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3725  0011E6  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3726  0011EA  ECA6  F027         	call	___fltol	;wreg free
  3727  0011EE  0E00               	movlw	0
  3728  0011F0  6E2C               	movwf	___flmul@a^0,c
  3729  0011F2  0E00               	movlw	0
  3730  0011F4  6E2D               	movwf	(___flmul@a+1)^0,c
  3731  0011F6  0EC8               	movlw	200
  3732  0011F8  6E2E               	movwf	(___flmul@a+2)^0,c
  3733  0011FA  0E42               	movlw	66
  3734  0011FC  6E2F               	movwf	(___flmul@a+3)^0,c
  3735  0011FE  0100               	movlb	0	; () banked
  3736  001200  EE20 F008          	lfsr	2,8
  3737  001204  517B               	movf	detect_color@w& (0+255),w,b
  3738  001206  26D9               	addwf	fsr2l,f,c
  3739  001208  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3740  00120A  22DA               	addwfc	fsr2h,f,c
  3741  00120C  CFDE F07D          	movff	postinc2,??_detect_color
  3742  001210  CFDD F07E          	movff	postdec2,??_detect_color+1
  3743  001214  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3744  001218  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3745  00121C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3746  00121E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3747  001220  0E00               	movlw	0
  3748  001222  EC5A  F020         	call	___xxtofl
  3749  001226  C001  F013         	movff	?___xxtofl,___fldiv@a
  3750  00122A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3751  00122E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3752  001232  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3753  001236  0100               	movlb	0	; () banked
  3754  001238  EE20 F002          	lfsr	2,2
  3755  00123C  5179               	movf	detect_color@m& (0+255),w,b
  3756  00123E  26D9               	addwf	fsr2l,f,c
  3757  001240  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3758  001242  22DA               	addwfc	fsr2h,f,c
  3759  001244  CFDE F07F          	movff	postinc2,??_detect_color+2
  3760  001248  CFDD F080          	movff	postdec2,??_detect_color+3
  3761  00124C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3762  001250  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3763  001254  6A03               	clrf	(___xxtofl@val+2)^0,c
  3764  001256  6A04               	clrf	(___xxtofl@val+3)^0,c
  3765  001258  0E00               	movlw	0
  3766  00125A  EC5A  F020         	call	___xxtofl
  3767  00125E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3768  001262  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3769  001266  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3770  00126A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3771  00126E  EC84  F016         	call	___fldiv	;wreg free
  3772  001272  C00F  F028         	movff	?___fldiv,___flmul@b
  3773  001276  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3774  00127A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3775  00127E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3776  001282  ECC6  F010         	call	___flmul	;wreg free
  3777  001286  C028  F05B         	movff	?___flmul,___fltol@f1
  3778  00128A  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3779  00128E  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3780  001292  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3781  001296  ECA6  F027         	call	___fltol	;wreg free
  3782  00129A  0E00               	movlw	0
  3783  00129C  6E2C               	movwf	___flmul@a^0,c
  3784  00129E  0E00               	movlw	0
  3785  0012A0  6E2D               	movwf	(___flmul@a+1)^0,c
  3786  0012A2  0EC8               	movlw	200
  3787  0012A4  6E2E               	movwf	(___flmul@a+2)^0,c
  3788  0012A6  0E42               	movlw	66
  3789  0012A8  6E2F               	movwf	(___flmul@a+3)^0,c
  3790  0012AA  0100               	movlb	0	; () banked
  3791  0012AC  EE20 F00A          	lfsr	2,10
  3792  0012B0  517B               	movf	detect_color@w& (0+255),w,b
  3793  0012B2  26D9               	addwf	fsr2l,f,c
  3794  0012B4  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3795  0012B6  22DA               	addwfc	fsr2h,f,c
  3796  0012B8  CFDE F07D          	movff	postinc2,??_detect_color
  3797  0012BC  CFDD F07E          	movff	postdec2,??_detect_color+1
  3798  0012C0  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3799  0012C4  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3800  0012C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3801  0012CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3802  0012CC  0E00               	movlw	0
  3803  0012CE  EC5A  F020         	call	___xxtofl
  3804  0012D2  C001  F013         	movff	?___xxtofl,___fldiv@a
  3805  0012D6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3806  0012DA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3807  0012DE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3808  0012E2  0100               	movlb	0	; () banked
  3809  0012E4  EE20 F004          	lfsr	2,4
  3810  0012E8  5179               	movf	detect_color@m& (0+255),w,b
  3811  0012EA  26D9               	addwf	fsr2l,f,c
  3812  0012EC  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3813  0012EE  22DA               	addwfc	fsr2h,f,c
  3814  0012F0  CFDE F07F          	movff	postinc2,??_detect_color+2
  3815  0012F4  CFDD F080          	movff	postdec2,??_detect_color+3
  3816  0012F8  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3817  0012FC  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3818  001300  6A03               	clrf	(___xxtofl@val+2)^0,c
  3819  001302  6A04               	clrf	(___xxtofl@val+3)^0,c
  3820  001304  0E00               	movlw	0
  3821  001306  EC5A  F020         	call	___xxtofl
  3822  00130A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3823  00130E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3824  001312  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3825  001316  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3826  00131A  EC84  F016         	call	___fldiv	;wreg free
  3827  00131E  C00F  F028         	movff	?___fldiv,___flmul@b
  3828  001322  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3829  001326  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3830  00132A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3831  00132E  ECC6  F010         	call	___flmul	;wreg free
  3832  001332  C028  F05B         	movff	?___flmul,___fltol@f1
  3833  001336  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3834  00133A  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3835  00133E  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3836  001342  ECA6  F027         	call	___fltol	;wreg free
  3837  001346                     
  3838                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3839  001346  0100               	movlb	0	; () banked
  3840  001348  EE20 F006          	lfsr	2,6
  3841  00134C  517B               	movf	detect_color@w& (0+255),w,b
  3842  00134E  26D9               	addwf	fsr2l,f,c
  3843  001350  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3844  001352  22DA               	addwfc	fsr2h,f,c
  3845  001354  CFDE F07D          	movff	postinc2,??_detect_color
  3846  001358  CFDD F07E          	movff	postdec2,??_detect_color+1
  3847  00135C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3848  001360  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3849  001364  6A03               	clrf	(___xxtofl@val+2)^0,c
  3850  001366  6A04               	clrf	(___xxtofl@val+3)^0,c
  3851  001368  0E00               	movlw	0
  3852  00136A  EC5A  F020         	call	___xxtofl
  3853  00136E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3854  001372  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3855  001376  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3856  00137A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3857  00137E  C079  FFD9         	movff	detect_color@m,fsr2l
  3858  001382  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3859  001386  CFDE F07F          	movff	postinc2,??_detect_color+2
  3860  00138A  CFDD F080          	movff	postdec2,??_detect_color+3
  3861  00138E  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3862  001392  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3863  001396  6A03               	clrf	(___xxtofl@val+2)^0,c
  3864  001398  6A04               	clrf	(___xxtofl@val+3)^0,c
  3865  00139A  0E00               	movlw	0
  3866  00139C  EC5A  F020         	call	___xxtofl
  3867  0013A0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3868  0013A4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3869  0013A8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3870  0013AC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3871  0013B0  EC84  F016         	call	___fldiv	;wreg free
  3872  0013B4  C00F  F028         	movff	?___fldiv,___flmul@b
  3873  0013B8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3874  0013BC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3875  0013C0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3876  0013C4  0E00               	movlw	0
  3877  0013C6  6E2C               	movwf	___flmul@a^0,c
  3878  0013C8  0E00               	movlw	0
  3879  0013CA  6E2D               	movwf	(___flmul@a+1)^0,c
  3880  0013CC  0EC8               	movlw	200
  3881  0013CE  6E2E               	movwf	(___flmul@a+2)^0,c
  3882  0013D0  0E42               	movlw	66
  3883  0013D2  6E2F               	movwf	(___flmul@a+3)^0,c
  3884  0013D4  ECC6  F010         	call	___flmul	;wreg free
  3885  0013D8  C028  F0FA         	movff	?___flmul,_detect_color$2947
  3886  0013DC  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  3887  0013E0  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  3888  0013E4  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  3889  0013E8                     
  3890                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3891  0013E8  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  3892  0013EC  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  3893  0013F0  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  3894  0013F4  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  3895  0013F8  EC65  F02E         	call	_lroundf	;wreg free
  3896  0013FC  C066  F0EB         	movff	?_lroundf,detect_color@GR
  3897  001400  C067  F0EC         	movff	?_lroundf+1,detect_color@GR+1
  3898  001404  0100               	movlb	0	; () banked
  3899  001406  EE20 F008          	lfsr	2,8
  3900  00140A  517B               	movf	detect_color@w& (0+255),w,b
  3901  00140C  26D9               	addwf	fsr2l,f,c
  3902  00140E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3903  001410  22DA               	addwfc	fsr2h,f,c
  3904  001412  CFDE F07D          	movff	postinc2,??_detect_color
  3905  001416  CFDD F07E          	movff	postdec2,??_detect_color+1
  3906  00141A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3907  00141E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3908  001422  6A03               	clrf	(___xxtofl@val+2)^0,c
  3909  001424  6A04               	clrf	(___xxtofl@val+3)^0,c
  3910  001426  0E00               	movlw	0
  3911  001428  EC5A  F020         	call	___xxtofl
  3912  00142C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3913  001430  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3914  001434  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3915  001438  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3916  00143C  0100               	movlb	0	; () banked
  3917  00143E  EE20 F002          	lfsr	2,2
  3918  001442  5179               	movf	detect_color@m& (0+255),w,b
  3919  001444  26D9               	addwf	fsr2l,f,c
  3920  001446  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3921  001448  22DA               	addwfc	fsr2h,f,c
  3922  00144A  CFDE F07F          	movff	postinc2,??_detect_color+2
  3923  00144E  CFDD F080          	movff	postdec2,??_detect_color+3
  3924  001452  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3925  001456  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3926  00145A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3927  00145C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3928  00145E  0E00               	movlw	0
  3929  001460  EC5A  F020         	call	___xxtofl
  3930  001464  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3931  001468  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3932  00146C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3933  001470  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3934  001474  EC84  F016         	call	___fldiv	;wreg free
  3935  001478  C00F  F028         	movff	?___fldiv,___flmul@b
  3936  00147C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3937  001480  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3938  001484  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3939  001488  0E00               	movlw	0
  3940  00148A  6E2C               	movwf	___flmul@a^0,c
  3941  00148C  0E00               	movlw	0
  3942  00148E  6E2D               	movwf	(___flmul@a+1)^0,c
  3943  001490  0EC8               	movlw	200
  3944  001492  6E2E               	movwf	(___flmul@a+2)^0,c
  3945  001494  0E42               	movlw	66
  3946  001496  6E2F               	movwf	(___flmul@a+3)^0,c
  3947  001498  ECC6  F010         	call	___flmul	;wreg free
  3948  00149C  C028  F0FA         	movff	?___flmul,_detect_color$2947
  3949  0014A0  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  3950  0014A4  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  3951  0014A8  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  3952  0014AC  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  3953  0014B0  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  3954  0014B4  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  3955  0014B8  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  3956  0014BC  EC65  F02E         	call	_lroundf	;wreg free
  3957  0014C0  C066  F0F3         	movff	?_lroundf,detect_color@GG
  3958  0014C4  C067  F0F4         	movff	?_lroundf+1,detect_color@GG+1
  3959  0014C8  0100               	movlb	0	; () banked
  3960  0014CA  EE20 F00A          	lfsr	2,10
  3961  0014CE  517B               	movf	detect_color@w& (0+255),w,b
  3962  0014D0  26D9               	addwf	fsr2l,f,c
  3963  0014D2  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3964  0014D4  22DA               	addwfc	fsr2h,f,c
  3965  0014D6  CFDE F07D          	movff	postinc2,??_detect_color
  3966  0014DA  CFDD F07E          	movff	postdec2,??_detect_color+1
  3967  0014DE  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3968  0014E2  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3969  0014E6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3970  0014E8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3971  0014EA  0E00               	movlw	0
  3972  0014EC  EC5A  F020         	call	___xxtofl
  3973  0014F0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3974  0014F4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3975  0014F8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3976  0014FC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3977  001500  0100               	movlb	0	; () banked
  3978  001502  EE20 F004          	lfsr	2,4
  3979  001506  5179               	movf	detect_color@m& (0+255),w,b
  3980  001508  26D9               	addwf	fsr2l,f,c
  3981  00150A  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3982  00150C  22DA               	addwfc	fsr2h,f,c
  3983  00150E  CFDE F07F          	movff	postinc2,??_detect_color+2
  3984  001512  CFDD F080          	movff	postdec2,??_detect_color+3
  3985  001516  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3986  00151A  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3987  00151E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3988  001520  6A04               	clrf	(___xxtofl@val+3)^0,c
  3989  001522  0E00               	movlw	0
  3990  001524  EC5A  F020         	call	___xxtofl
  3991  001528  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3992  00152C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3993  001530  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3994  001534  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3995  001538  EC84  F016         	call	___fldiv	;wreg free
  3996  00153C  C00F  F028         	movff	?___fldiv,___flmul@b
  3997  001540  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3998  001544  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3999  001548  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4000  00154C  0E00               	movlw	0
  4001  00154E  6E2C               	movwf	___flmul@a^0,c
  4002  001550  0E00               	movlw	0
  4003  001552  6E2D               	movwf	(___flmul@a+1)^0,c
  4004  001554  0EC8               	movlw	200
  4005  001556  6E2E               	movwf	(___flmul@a+2)^0,c
  4006  001558  0E42               	movlw	66
  4007  00155A  6E2F               	movwf	(___flmul@a+3)^0,c
  4008  00155C  ECC6  F010         	call	___flmul	;wreg free
  4009  001560  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4010  001564  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4011  001568  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4012  00156C  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4013  001570  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4014  001574  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4015  001578  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4016  00157C  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4017  001580  EC65  F02E         	call	_lroundf	;wreg free
  4018  001584  C066  F0F1         	movff	?_lroundf,detect_color@GB
  4019  001588  C067  F0F2         	movff	?_lroundf+1,detect_color@GB+1
  4020  00158C                     
  4021                           ;color.c: 296:     sprintf(buf,"%d\t%d\t%d\r\n", GR, GG, GB);
  4022  00158C  0E81               	movlw	low detect_color@buf
  4023  00158E  0100               	movlb	0	; () banked
  4024  001590  6F60               	movwf	sprintf@s& (0+255),b
  4025  001592  0E00               	movlw	high detect_color@buf
  4026  001594  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4027  001596  0E08               	movlw	low (STR_1+3)
  4028  001598  6F62               	movwf	sprintf@fmt& (0+255),b
  4029  00159A  0E0E               	movlw	high (STR_1+3)
  4030  00159C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4031  00159E  C0EB  F064         	movff	detect_color@GR,?_sprintf+4
  4032  0015A2  C0EC  F065         	movff	detect_color@GR+1,?_sprintf+5
  4033  0015A6  C0F3  F066         	movff	detect_color@GG,?_sprintf+6
  4034  0015AA  C0F4  F067         	movff	detect_color@GG+1,?_sprintf+7
  4035  0015AE  C0F1  F068         	movff	detect_color@GB,?_sprintf+8
  4036  0015B2  C0F2  F069         	movff	detect_color@GB+1,?_sprintf+9
  4037  0015B6  ECB7  F02C         	call	_sprintf	;wreg free
  4038  0015BA                     
  4039                           ;color.c: 297:     sendStringSerial4(buf);
  4040  0015BA  0E81               	movlw	low detect_color@buf
  4041  0015BC  6E02               	movwf	sendStringSerial4@string^0,c
  4042  0015BE  0E00               	movlw	high detect_color@buf
  4043  0015C0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4044  0015C2  EC08  F02F         	call	_sendStringSerial4	;wreg free
  4045  0015C6                     
  4046                           ;color.c: 299:     LED_B();
  4047  0015C6  ECA3  F02F         	call	_LED_B	;wreg free
  4048  0015CA                     
  4049                           ;color.c: 300:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4050  0015CA  0E09               	movlw	9
  4051  0015CC  0100               	movlb	0	; () banked
  4052  0015CE  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  4053  0015D0  0E1E               	movlw	30
  4054  0015D2  6F7D               	movwf	??_detect_color& (0+255),b
  4055  0015D4  0EE4               	movlw	228
  4056  0015D6                     u6037:
  4057  0015D6  2EE8               	decfsz	wreg,f,c
  4058  0015D8  D7FE               	bra	u6037
  4059  0015DA  2F7D               	decfsz	??_detect_color& (0+255),f,b
  4060  0015DC  D7FC               	bra	u6037
  4061  0015DE  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  4062  0015E0  D7FA               	bra	u6037
  4063  0015E2  F000               	nop	
  4064  0015E4                     
  4065                           ;color.c: 301:     read_color(m);
  4066  0015E4  C079  F00C         	movff	detect_color@m,read_color@m
  4067  0015E8  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  4068  0015EC  EC88  F02C         	call	_read_color	;wreg free
  4069  0015F0                     
  4070                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  4071  0015F0  0100               	movlb	0	; () banked
  4072  0015F2  EE20 F00C          	lfsr	2,12
  4073  0015F6  517B               	movf	detect_color@w& (0+255),w,b
  4074  0015F8  26D9               	addwf	fsr2l,f,c
  4075  0015FA  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4076  0015FC  22DA               	addwfc	fsr2h,f,c
  4077  0015FE  CFDE F07D          	movff	postinc2,??_detect_color
  4078  001602  CFDD F07E          	movff	postdec2,??_detect_color+1
  4079  001606  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4080  00160A  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4081  00160E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4082  001610  6A04               	clrf	(___xxtofl@val+3)^0,c
  4083  001612  0E00               	movlw	0
  4084  001614  EC5A  F020         	call	___xxtofl
  4085  001618  C001  F013         	movff	?___xxtofl,___fldiv@a
  4086  00161C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4087  001620  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4088  001624  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4089  001628  C079  FFD9         	movff	detect_color@m,fsr2l
  4090  00162C  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  4091  001630  CFDE F07F          	movff	postinc2,??_detect_color+2
  4092  001634  CFDD F080          	movff	postdec2,??_detect_color+3
  4093  001638  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4094  00163C  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4095  001640  6A03               	clrf	(___xxtofl@val+2)^0,c
  4096  001642  6A04               	clrf	(___xxtofl@val+3)^0,c
  4097  001644  0E00               	movlw	0
  4098  001646  EC5A  F020         	call	___xxtofl
  4099  00164A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4100  00164E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4101  001652  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4102  001656  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4103  00165A  EC84  F016         	call	___fldiv	;wreg free
  4104  00165E  C00F  F028         	movff	?___fldiv,___flmul@b
  4105  001662  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4106  001666  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4107  00166A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4108  00166E  0E00               	movlw	0
  4109  001670  6E2C               	movwf	___flmul@a^0,c
  4110  001672  0E00               	movlw	0
  4111  001674  6E2D               	movwf	(___flmul@a+1)^0,c
  4112  001676  0EC8               	movlw	200
  4113  001678  6E2E               	movwf	(___flmul@a+2)^0,c
  4114  00167A  0E42               	movlw	66
  4115  00167C  6E2F               	movwf	(___flmul@a+3)^0,c
  4116  00167E  ECC6  F010         	call	___flmul	;wreg free
  4117  001682  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4118  001686  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4119  00168A  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4120  00168E  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4121  001692                     
  4122                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  4123  001692  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4124  001696  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4125  00169A  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4126  00169E  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4127  0016A2  EC65  F02E         	call	_lroundf	;wreg free
  4128  0016A6  C066  F0E9         	movff	?_lroundf,detect_color@BR
  4129  0016AA  C067  F0EA         	movff	?_lroundf+1,detect_color@BR+1
  4130  0016AE  0100               	movlb	0	; () banked
  4131  0016B0  EE20 F00E          	lfsr	2,14
  4132  0016B4  517B               	movf	detect_color@w& (0+255),w,b
  4133  0016B6  26D9               	addwf	fsr2l,f,c
  4134  0016B8  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4135  0016BA  22DA               	addwfc	fsr2h,f,c
  4136  0016BC  CFDE F07D          	movff	postinc2,??_detect_color
  4137  0016C0  CFDD F07E          	movff	postdec2,??_detect_color+1
  4138  0016C4  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4139  0016C8  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4140  0016CC  6A03               	clrf	(___xxtofl@val+2)^0,c
  4141  0016CE  6A04               	clrf	(___xxtofl@val+3)^0,c
  4142  0016D0  0E00               	movlw	0
  4143  0016D2  EC5A  F020         	call	___xxtofl
  4144  0016D6  C001  F013         	movff	?___xxtofl,___fldiv@a
  4145  0016DA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4146  0016DE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4147  0016E2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4148  0016E6  0100               	movlb	0	; () banked
  4149  0016E8  EE20 F002          	lfsr	2,2
  4150  0016EC  5179               	movf	detect_color@m& (0+255),w,b
  4151  0016EE  26D9               	addwf	fsr2l,f,c
  4152  0016F0  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4153  0016F2  22DA               	addwfc	fsr2h,f,c
  4154  0016F4  CFDE F07F          	movff	postinc2,??_detect_color+2
  4155  0016F8  CFDD F080          	movff	postdec2,??_detect_color+3
  4156  0016FC  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4157  001700  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4158  001704  6A03               	clrf	(___xxtofl@val+2)^0,c
  4159  001706  6A04               	clrf	(___xxtofl@val+3)^0,c
  4160  001708  0E00               	movlw	0
  4161  00170A  EC5A  F020         	call	___xxtofl
  4162  00170E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4163  001712  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4164  001716  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4165  00171A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4166  00171E  EC84  F016         	call	___fldiv	;wreg free
  4167  001722  C00F  F028         	movff	?___fldiv,___flmul@b
  4168  001726  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4169  00172A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4170  00172E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4171  001732  0E00               	movlw	0
  4172  001734  6E2C               	movwf	___flmul@a^0,c
  4173  001736  0E00               	movlw	0
  4174  001738  6E2D               	movwf	(___flmul@a+1)^0,c
  4175  00173A  0EC8               	movlw	200
  4176  00173C  6E2E               	movwf	(___flmul@a+2)^0,c
  4177  00173E  0E42               	movlw	66
  4178  001740  6E2F               	movwf	(___flmul@a+3)^0,c
  4179  001742  ECC6  F010         	call	___flmul	;wreg free
  4180  001746  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4181  00174A  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4182  00174E  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4183  001752  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4184  001756  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4185  00175A  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4186  00175E  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4187  001762  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4188  001766  EC65  F02E         	call	_lroundf	;wreg free
  4189  00176A  C066  F0F6         	movff	?_lroundf,detect_color@BG
  4190  00176E  C067  F0F7         	movff	?_lroundf+1,detect_color@BG+1
  4191  001772  0100               	movlb	0	; () banked
  4192  001774  EE20 F010          	lfsr	2,16
  4193  001778  517B               	movf	detect_color@w& (0+255),w,b
  4194  00177A  26D9               	addwf	fsr2l,f,c
  4195  00177C  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4196  00177E  22DA               	addwfc	fsr2h,f,c
  4197  001780  CFDE F07D          	movff	postinc2,??_detect_color
  4198  001784  CFDD F07E          	movff	postdec2,??_detect_color+1
  4199  001788  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4200  00178C  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4201  001790  6A03               	clrf	(___xxtofl@val+2)^0,c
  4202  001792  6A04               	clrf	(___xxtofl@val+3)^0,c
  4203  001794  0E00               	movlw	0
  4204  001796  EC5A  F020         	call	___xxtofl
  4205  00179A  C001  F013         	movff	?___xxtofl,___fldiv@a
  4206  00179E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4207  0017A2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4208  0017A6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4209  0017AA  0100               	movlb	0	; () banked
  4210  0017AC  EE20 F004          	lfsr	2,4
  4211  0017B0  5179               	movf	detect_color@m& (0+255),w,b
  4212  0017B2  26D9               	addwf	fsr2l,f,c
  4213  0017B4  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4214  0017B6  22DA               	addwfc	fsr2h,f,c
  4215  0017B8  CFDE F07F          	movff	postinc2,??_detect_color+2
  4216  0017BC  CFDD F080          	movff	postdec2,??_detect_color+3
  4217  0017C0  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4218  0017C4  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4219  0017C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  4220  0017CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  4221  0017CC  0E00               	movlw	0
  4222  0017CE  EC5A  F020         	call	___xxtofl
  4223  0017D2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4224  0017D6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4225  0017DA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4226  0017DE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4227  0017E2  EC84  F016         	call	___fldiv	;wreg free
  4228  0017E6  C00F  F028         	movff	?___fldiv,___flmul@b
  4229  0017EA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4230  0017EE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4231  0017F2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4232  0017F6  0E00               	movlw	0
  4233  0017F8  6E2C               	movwf	___flmul@a^0,c
  4234  0017FA  0E00               	movlw	0
  4235  0017FC  6E2D               	movwf	(___flmul@a+1)^0,c
  4236  0017FE  0EC8               	movlw	200
  4237  001800  6E2E               	movwf	(___flmul@a+2)^0,c
  4238  001802  0E42               	movlw	66
  4239  001804  6E2F               	movwf	(___flmul@a+3)^0,c
  4240  001806  ECC6  F010         	call	___flmul	;wreg free
  4241  00180A  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4242  00180E  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4243  001812  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4244  001816  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4245  00181A  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4246  00181E  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4247  001822  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4248  001826  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4249  00182A  EC65  F02E         	call	_lroundf	;wreg free
  4250  00182E  C066  F0EF         	movff	?_lroundf,detect_color@BB
  4251  001832  C067  F0F0         	movff	?_lroundf+1,detect_color@BB+1
  4252  001836                     
  4253                           ;color.c: 303:     BC = lroundf((float)(m->C)/(w->BC)*100);
  4254  001836  0100               	movlb	0	; () banked
  4255  001838  EE20 F01A          	lfsr	2,26
  4256  00183C  517B               	movf	detect_color@w& (0+255),w,b
  4257  00183E  26D9               	addwf	fsr2l,f,c
  4258  001840  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4259  001842  22DA               	addwfc	fsr2h,f,c
  4260  001844  CFDE F07D          	movff	postinc2,??_detect_color
  4261  001848  CFDD F07E          	movff	postdec2,??_detect_color+1
  4262  00184C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4263  001850  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4264  001854  6A03               	clrf	(___xxtofl@val+2)^0,c
  4265  001856  6A04               	clrf	(___xxtofl@val+3)^0,c
  4266  001858  0E00               	movlw	0
  4267  00185A  EC5A  F020         	call	___xxtofl
  4268  00185E  C001  F013         	movff	?___xxtofl,___fldiv@a
  4269  001862  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4270  001866  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4271  00186A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4272  00186E  0100               	movlb	0	; () banked
  4273  001870  EE20 F006          	lfsr	2,6
  4274  001874  5179               	movf	detect_color@m& (0+255),w,b
  4275  001876  26D9               	addwf	fsr2l,f,c
  4276  001878  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4277  00187A  22DA               	addwfc	fsr2h,f,c
  4278  00187C  CFDE F07F          	movff	postinc2,??_detect_color+2
  4279  001880  CFDD F080          	movff	postdec2,??_detect_color+3
  4280  001884  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4281  001888  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4282  00188C  6A03               	clrf	(___xxtofl@val+2)^0,c
  4283  00188E  6A04               	clrf	(___xxtofl@val+3)^0,c
  4284  001890  0E00               	movlw	0
  4285  001892  EC5A  F020         	call	___xxtofl
  4286  001896  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4287  00189A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4288  00189E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4289  0018A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4290  0018A6  EC84  F016         	call	___fldiv	;wreg free
  4291  0018AA  C00F  F028         	movff	?___fldiv,___flmul@b
  4292  0018AE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4293  0018B2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4294  0018B6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4295  0018BA  0E00               	movlw	0
  4296  0018BC  6E2C               	movwf	___flmul@a^0,c
  4297  0018BE  0E00               	movlw	0
  4298  0018C0  6E2D               	movwf	(___flmul@a+1)^0,c
  4299  0018C2  0EC8               	movlw	200
  4300  0018C4  6E2E               	movwf	(___flmul@a+2)^0,c
  4301  0018C6  0E42               	movlw	66
  4302  0018C8  6E2F               	movwf	(___flmul@a+3)^0,c
  4303  0018CA  ECC6  F010         	call	___flmul	;wreg free
  4304  0018CE  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4305  0018D2  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4306  0018D6  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4307  0018DA  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4308  0018DE  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4309  0018E2  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4310  0018E6  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4311  0018EA  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4312  0018EE  EC65  F02E         	call	_lroundf	;wreg free
  4313  0018F2                     
  4314                           ;color.c: 305:     sprintf(buf,"%d\t%d\t%d\r\n", BR, BG, BB);
  4315  0018F2  0E81               	movlw	low detect_color@buf
  4316  0018F4  0100               	movlb	0	; () banked
  4317  0018F6  6F60               	movwf	sprintf@s& (0+255),b
  4318  0018F8  0E00               	movlw	high detect_color@buf
  4319  0018FA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4320  0018FC  0E08               	movlw	low (STR_1+3)
  4321  0018FE  6F62               	movwf	sprintf@fmt& (0+255),b
  4322  001900  0E0E               	movlw	high (STR_1+3)
  4323  001902  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4324  001904  C0E9  F064         	movff	detect_color@BR,?_sprintf+4
  4325  001908  C0EA  F065         	movff	detect_color@BR+1,?_sprintf+5
  4326  00190C  C0F6  F066         	movff	detect_color@BG,?_sprintf+6
  4327  001910  C0F7  F067         	movff	detect_color@BG+1,?_sprintf+7
  4328  001914  C0EF  F068         	movff	detect_color@BB,?_sprintf+8
  4329  001918  C0F0  F069         	movff	detect_color@BB+1,?_sprintf+9
  4330  00191C  ECB7  F02C         	call	_sprintf	;wreg free
  4331  001920                     
  4332                           ;color.c: 306:     sendStringSerial4(buf);
  4333  001920  0E81               	movlw	low detect_color@buf
  4334  001922  6E02               	movwf	sendStringSerial4@string^0,c
  4335  001924  0E00               	movlw	high detect_color@buf
  4336  001926  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4337  001928  EC08  F02F         	call	_sendStringSerial4	;wreg free
  4338  00192C                     
  4339                           ;color.c: 309:     if (compare(0, RR, 45)){
  4340  00192C  0E00               	movlw	0
  4341  00192E  0100               	movlb	0	; () banked
  4342  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4343  001932  0E00               	movlw	0
  4344  001934  6F6A               	movwf	compare@lower& (0+255),b
  4345  001936  C0F8  F06C         	movff	detect_color@RR,compare@value2compare
  4346  00193A  C0F9  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4347  00193E  0E00               	movlw	0
  4348  001940  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4349  001942  0E2D               	movlw	45
  4350  001944  6F6E               	movwf	compare@upper& (0+255),b
  4351  001946  EC48  F02E         	call	_compare	;wreg free
  4352  00194A  0900               	iorlw	0
  4353  00194C  B4D8               	btfsc	status,2,c
  4354  00194E  EFAB  F00C         	goto	u5191
  4355  001952  EFAD  F00C         	goto	u5190
  4356  001956                     u5191:
  4357  001956  EF1E  F00D         	goto	l4862
  4358  00195A                     u5190:
  4359  00195A                     
  4360                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4361  00195A  C0EF  F001         	movff	detect_color@BB,___xxtofl@val
  4362  00195E  C0F0  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4363  001962  6A03               	clrf	(___xxtofl@val+2)^0,c
  4364  001964  6A04               	clrf	(___xxtofl@val+3)^0,c
  4365  001966  0E00               	movlw	0
  4366  001968  EC5A  F020         	call	___xxtofl
  4367  00196C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4368  001970  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4369  001974  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4370  001978  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4371  00197C  0100               	movlb	0	; () banked
  4372  00197E  51F6               	movf	detect_color@BG& (0+255),w,b
  4373  001980  25F3               	addwf	detect_color@GG& (0+255),w,b
  4374  001982  6F7D               	movwf	??_detect_color& (0+255),b
  4375  001984  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  4376  001986  21F4               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4377  001988  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  4378  00198A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4379  00198E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4380  001992  6A03               	clrf	(___xxtofl@val+2)^0,c
  4381  001994  6A04               	clrf	(___xxtofl@val+3)^0,c
  4382  001996  0E00               	movlw	0
  4383  001998  EC5A  F020         	call	___xxtofl
  4384  00199C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4385  0019A0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4386  0019A4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4387  0019A8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4388  0019AC  EC84  F016         	call	___fldiv	;wreg free
  4389  0019B0  C00F  F028         	movff	?___fldiv,___flmul@b
  4390  0019B4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4391  0019B8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4392  0019BC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4393  0019C0  0E00               	movlw	0
  4394  0019C2  6E2C               	movwf	___flmul@a^0,c
  4395  0019C4  0E00               	movlw	0
  4396  0019C6  6E2D               	movwf	(___flmul@a+1)^0,c
  4397  0019C8  0E48               	movlw	72
  4398  0019CA  6E2E               	movwf	(___flmul@a+2)^0,c
  4399  0019CC  0E43               	movlw	67
  4400  0019CE  6E2F               	movwf	(___flmul@a+3)^0,c
  4401  0019D0  ECC6  F010         	call	___flmul	;wreg free
  4402  0019D4  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4403  0019D8  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4404  0019DC  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4405  0019E0  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4406                           
  4407                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4408  0019E4  0E00               	movlw	0
  4409  0019E6  0100               	movlb	0	; () banked
  4410  0019E8  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4411  0019EA  0E00               	movlw	0
  4412  0019EC  6F6A               	movwf	compare@lower& (0+255),b
  4413  0019EE  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4414  0019F2  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4415  0019F6  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4416  0019FA  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4417  0019FE  EC65  F02E         	call	_lroundf	;wreg free
  4418  001A02  C066  F06C         	movff	?_lroundf,compare@value2compare
  4419  001A06  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4420  001A0A  0E01               	movlw	1
  4421  001A0C  0100               	movlb	0	; () banked
  4422  001A0E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4423  001A10  0ED3               	movlw	211
  4424  001A12  6F6E               	movwf	compare@upper& (0+255),b
  4425  001A14  EC48  F02E         	call	_compare	;wreg free
  4426  001A18  0900               	iorlw	0
  4427  001A1A  B4D8               	btfsc	status,2,c
  4428  001A1C  EF12  F00D         	goto	u5201
  4429  001A20  EF14  F00D         	goto	u5200
  4430  001A24                     u5201:
  4431  001A24  EF19  F00D         	goto	l4860
  4432  001A28                     u5200:
  4433  001A28  0E03               	movlw	3
  4434  001A2A  0100               	movlb	0	; () banked
  4435  001A2C  6FF5               	movwf	detect_color@color& (0+255),b
  4436  001A2E  EFD9  F00D         	goto	l4888
  4437  001A32                     l4860:
  4438  001A32  0E02               	movlw	2
  4439  001A34  0100               	movlb	0	; () banked
  4440  001A36  6FF5               	movwf	detect_color@color& (0+255),b
  4441  001A38  EFD9  F00D         	goto	l4888
  4442  001A3C                     l4862:
  4443                           
  4444                           ;color.c: 314:         if (GG <= 30 && GB <= 30){
  4445  001A3C  0100               	movlb	0	; () banked
  4446  001A3E  51F4               	movf	(detect_color@GG+1)& (0+255),w,b
  4447  001A40  E107               	bnz	u5211
  4448  001A42  0E1F               	movlw	31
  4449  001A44  5DF3               	subwf	detect_color@GG& (0+255),w,b
  4450  001A46  B0D8               	btfsc	status,0,c
  4451  001A48  EF28  F00D         	goto	u5211
  4452  001A4C  EF2A  F00D         	goto	u5210
  4453  001A50                     u5211:
  4454  001A50  EF9F  F00D         	goto	l4872
  4455  001A54                     u5210:
  4456  001A54                     
  4457                           ; BSR set to: 0
  4458  001A54  51F2               	movf	(detect_color@GB+1)& (0+255),w,b
  4459  001A56  E107               	bnz	u5221
  4460  001A58  0E1F               	movlw	31
  4461  001A5A  5DF1               	subwf	detect_color@GB& (0+255),w,b
  4462  001A5C  B0D8               	btfsc	status,0,c
  4463  001A5E  EF33  F00D         	goto	u5221
  4464  001A62  EF35  F00D         	goto	u5220
  4465  001A66                     u5221:
  4466  001A66  EF9F  F00D         	goto	l4872
  4467  001A6A                     u5220:
  4468  001A6A                     
  4469                           ; BSR set to: 0
  4470                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4471  001A6A  C0F8  F001         	movff	detect_color@RR,___xxtofl@val
  4472  001A6E  C0F9  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4473  001A72  6A03               	clrf	(___xxtofl@val+2)^0,c
  4474  001A74  6A04               	clrf	(___xxtofl@val+3)^0,c
  4475  001A76  0E00               	movlw	0
  4476  001A78  EC5A  F020         	call	___xxtofl
  4477  001A7C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4478  001A80  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4479  001A84  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4480  001A88  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4481  001A8C  C0EB  F001         	movff	detect_color@GR,___xxtofl@val
  4482  001A90  C0EC  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4483  001A94  6A03               	clrf	(___xxtofl@val+2)^0,c
  4484  001A96  6A04               	clrf	(___xxtofl@val+3)^0,c
  4485  001A98  0E00               	movlw	0
  4486  001A9A  EC5A  F020         	call	___xxtofl
  4487  001A9E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4488  001AA2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4489  001AA6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4490  001AAA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4491  001AAE  EC84  F016         	call	___fldiv	;wreg free
  4492  001AB2  C00F  F028         	movff	?___fldiv,___flmul@b
  4493  001AB6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4494  001ABA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4495  001ABE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4496  001AC2  0E00               	movlw	0
  4497  001AC4  6E2C               	movwf	___flmul@a^0,c
  4498  001AC6  0E00               	movlw	0
  4499  001AC8  6E2D               	movwf	(___flmul@a+1)^0,c
  4500  001ACA  0EFA               	movlw	250
  4501  001ACC  6E2E               	movwf	(___flmul@a+2)^0,c
  4502  001ACE  0E43               	movlw	67
  4503  001AD0  6E2F               	movwf	(___flmul@a+3)^0,c
  4504  001AD2  ECC6  F010         	call	___flmul	;wreg free
  4505  001AD6  C028  F0FA         	movff	?___flmul,_detect_color$2947
  4506  001ADA  C029  F0FB         	movff	?___flmul+1,_detect_color$2947+1
  4507  001ADE  C02A  F0FC         	movff	?___flmul+2,_detect_color$2947+2
  4508  001AE2  C02B  F0FD         	movff	?___flmul+3,_detect_color$2947+3
  4509                           
  4510                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4511  001AE6  0E00               	movlw	0
  4512  001AE8  0100               	movlb	0	; () banked
  4513  001AEA  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4514  001AEC  0E00               	movlw	0
  4515  001AEE  6F6A               	movwf	compare@lower& (0+255),b
  4516  001AF0  C0FA  F066         	movff	_detect_color$2947,lroundf@x
  4517  001AF4  C0FB  F067         	movff	_detect_color$2947+1,lroundf@x+1
  4518  001AF8  C0FC  F068         	movff	_detect_color$2947+2,lroundf@x+2
  4519  001AFC  C0FD  F069         	movff	_detect_color$2947+3,lroundf@x+3
  4520  001B00  EC65  F02E         	call	_lroundf	;wreg free
  4521  001B04  C066  F06C         	movff	?_lroundf,compare@value2compare
  4522  001B08  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4523  001B0C  0E00               	movlw	0
  4524  001B0E  0100               	movlb	0	; () banked
  4525  001B10  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4526  001B12  0E96               	movlw	150
  4527  001B14  6F6E               	movwf	compare@upper& (0+255),b
  4528  001B16  EC48  F02E         	call	_compare	;wreg free
  4529  001B1A  0900               	iorlw	0
  4530  001B1C  B4D8               	btfsc	status,2,c
  4531  001B1E  EF93  F00D         	goto	u5231
  4532  001B22  EF95  F00D         	goto	u5230
  4533  001B26                     u5231:
  4534  001B26  EF9A  F00D         	goto	l4870
  4535  001B2A                     u5230:
  4536  001B2A  0E01               	movlw	1
  4537  001B2C  0100               	movlb	0	; () banked
  4538  001B2E  6FF5               	movwf	detect_color@color& (0+255),b
  4539  001B30  EFD9  F00D         	goto	l4888
  4540  001B34                     l4870:
  4541  001B34  0E06               	movlw	6
  4542  001B36  0100               	movlb	0	; () banked
  4543  001B38  6FF5               	movwf	detect_color@color& (0+255),b
  4544  001B3A  EFD9  F00D         	goto	l4888
  4545  001B3E                     l4872:
  4546                           
  4547                           ; BSR set to: 0
  4548  001B3E  51F4               	movf	(detect_color@GG+1)& (0+255),w,b
  4549  001B40  E109               	bnz	u5240
  4550  001B42  0E1F               	movlw	31
  4551  001B44  5DF3               	subwf	detect_color@GG& (0+255),w,b
  4552  001B46  A0D8               	btfss	status,0,c
  4553  001B48  EFA8  F00D         	goto	u5241
  4554  001B4C  EFAA  F00D         	goto	u5240
  4555  001B50                     u5241:
  4556  001B50  EFD7  F00D         	goto	l4886
  4557  001B54                     u5240:
  4558  001B54                     
  4559                           ; BSR set to: 0
  4560  001B54  51F2               	movf	(detect_color@GB+1)& (0+255),w,b
  4561  001B56  E109               	bnz	u5250
  4562  001B58  0E1F               	movlw	31
  4563  001B5A  5DF1               	subwf	detect_color@GB& (0+255),w,b
  4564  001B5C  A0D8               	btfss	status,0,c
  4565  001B5E  EFB3  F00D         	goto	u5251
  4566  001B62  EFB5  F00D         	goto	u5250
  4567  001B66                     u5251:
  4568  001B66  EFD7  F00D         	goto	l4886
  4569  001B6A                     u5250:
  4570  001B6A                     
  4571                           ; BSR set to: 0
  4572                           ;color.c: 321:             if (BB >= 80){color = 7;}
  4573  001B6A  51F0               	movf	(detect_color@BB+1)& (0+255),w,b
  4574  001B6C  E109               	bnz	u5260
  4575  001B6E  0E50               	movlw	80
  4576  001B70  5DEF               	subwf	detect_color@BB& (0+255),w,b
  4577  001B72  A0D8               	btfss	status,0,c
  4578  001B74  EFBE  F00D         	goto	u5261
  4579  001B78  EFC0  F00D         	goto	u5260
  4580  001B7C                     u5261:
  4581  001B7C  EFC4  F00D         	goto	l4880
  4582  001B80                     u5260:
  4583  001B80                     
  4584                           ; BSR set to: 0
  4585  001B80  0E07               	movlw	7
  4586  001B82  6FF5               	movwf	detect_color@color& (0+255),b
  4587  001B84  EFD9  F00D         	goto	l4888
  4588  001B88                     l4880:
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;color.c: 324:                 if (BG < 48){color = 4;}
  4592  001B88  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  4593  001B8A  E107               	bnz	u5271
  4594  001B8C  0E30               	movlw	48
  4595  001B8E  5DF6               	subwf	detect_color@BG& (0+255),w,b
  4596  001B90  B0D8               	btfsc	status,0,c
  4597  001B92  EFCD  F00D         	goto	u5271
  4598  001B96  EFCF  F00D         	goto	u5270
  4599  001B9A                     u5271:
  4600  001B9A  EFD3  F00D         	goto	l4884
  4601  001B9E                     u5270:
  4602  001B9E                     
  4603                           ; BSR set to: 0
  4604  001B9E  0E04               	movlw	4
  4605  001BA0  6FF5               	movwf	detect_color@color& (0+255),b
  4606  001BA2  EFD9  F00D         	goto	l4888
  4607  001BA6                     l4884:
  4608                           
  4609                           ; BSR set to: 0
  4610  001BA6  0E05               	movlw	5
  4611  001BA8  6FF5               	movwf	detect_color@color& (0+255),b
  4612  001BAA  EFD9  F00D         	goto	l4888
  4613  001BAE                     l4886:
  4614                           
  4615                           ; BSR set to: 0
  4616  001BAE  0E00               	movlw	0
  4617  001BB0  6FF5               	movwf	detect_color@color& (0+255),b
  4618  001BB2                     l4888:
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;color.c: 331:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4622  001BB2  0E00               	movlw	0
  4623  001BB4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4624  001BB6  0E5A               	movlw	90
  4625  001BB8  6F6A               	movwf	compare@lower& (0+255),b
  4626  001BBA  C0F8  F06C         	movff	detect_color@RR,compare@value2compare
  4627  001BBE  C0F9  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4628  001BC2  90D8               	bcf	status,0,c
  4629  001BC4  35F8               	rlcf	detect_color@RR& (0+255),w,b
  4630  001BC6  6F6E               	movwf	compare@upper& (0+255),b
  4631  001BC8  35F9               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4632  001BCA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4633  001BCC  EC48  F02E         	call	_compare	;wreg free
  4634  001BD0  0900               	iorlw	0
  4635  001BD2  B4D8               	btfsc	status,2,c
  4636  001BD4  EFEE  F00D         	goto	u5281
  4637  001BD8  EFF0  F00D         	goto	u5280
  4638  001BDC                     u5281:
  4639  001BDC  EF23  F00E         	goto	l4896
  4640  001BE0                     u5280:
  4641  001BE0  0E00               	movlw	0
  4642  001BE2  0100               	movlb	0	; () banked
  4643  001BE4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4644  001BE6  0E5A               	movlw	90
  4645  001BE8  6F6A               	movwf	compare@lower& (0+255),b
  4646  001BEA  C0ED  F06C         	movff	detect_color@RB,compare@value2compare
  4647  001BEE  C0EE  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  4648  001BF2  90D8               	bcf	status,0,c
  4649  001BF4  35ED               	rlcf	detect_color@RB& (0+255),w,b
  4650  001BF6  6F6E               	movwf	compare@upper& (0+255),b
  4651  001BF8  35EE               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4652  001BFA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4653  001BFC  EC48  F02E         	call	_compare	;wreg free
  4654  001C00  0900               	iorlw	0
  4655  001C02  B4D8               	btfsc	status,2,c
  4656  001C04  EF06  F00E         	goto	u5291
  4657  001C08  EF08  F00E         	goto	u5290
  4658  001C0C                     u5291:
  4659  001C0C  EF23  F00E         	goto	l4896
  4660  001C10                     u5290:
  4661  001C10  0E00               	movlw	0
  4662  001C12  0100               	movlb	0	; () banked
  4663  001C14  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4664  001C16  0E5A               	movlw	90
  4665  001C18  6F6A               	movwf	compare@lower& (0+255),b
  4666  001C1A  C0F6  F06C         	movff	detect_color@BG,compare@value2compare
  4667  001C1E  C0F7  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4668  001C22  90D8               	bcf	status,0,c
  4669  001C24  35F6               	rlcf	detect_color@BG& (0+255),w,b
  4670  001C26  6F6E               	movwf	compare@upper& (0+255),b
  4671  001C28  35F7               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4672  001C2A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4673  001C2C  EC48  F02E         	call	_compare	;wreg free
  4674  001C30  0900               	iorlw	0
  4675  001C32  B4D8               	btfsc	status,2,c
  4676  001C34  EF1E  F00E         	goto	u5301
  4677  001C38  EF20  F00E         	goto	u5300
  4678  001C3C                     u5301:
  4679  001C3C  EF23  F00E         	goto	l4896
  4680  001C40                     u5300:
  4681  001C40  0E08               	movlw	8
  4682  001C42  0100               	movlb	0	; () banked
  4683  001C44  6FF5               	movwf	detect_color@color& (0+255),b
  4684  001C46                     l4896:
  4685                           
  4686                           ;color.c: 332:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  4687  001C46  0E00               	movlw	0
  4688  001C48  0100               	movlb	0	; () banked
  4689  001C4A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4690  001C4C  0E00               	movlw	0
  4691  001C4E  6F6A               	movwf	compare@lower& (0+255),b
  4692  001C50  C0E9  F06C         	movff	detect_color@BR,compare@value2compare
  4693  001C54  C0EA  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  4694  001C58  0E00               	movlw	0
  4695  001C5A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4696  001C5C  0E19               	movlw	25
  4697  001C5E  6F6E               	movwf	compare@upper& (0+255),b
  4698  001C60  EC48  F02E         	call	_compare	;wreg free
  4699  001C64  0900               	iorlw	0
  4700  001C66  B4D8               	btfsc	status,2,c
  4701  001C68  EF38  F00E         	goto	u5311
  4702  001C6C  EF3A  F00E         	goto	u5310
  4703  001C70                     u5311:
  4704  001C70  EF54  F00E         	goto	l4902
  4705  001C74                     u5310:
  4706  001C74  0E00               	movlw	0
  4707  001C76  0100               	movlb	0	; () banked
  4708  001C78  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4709  001C7A  0E00               	movlw	0
  4710  001C7C  6F6A               	movwf	compare@lower& (0+255),b
  4711  001C7E  C0F8  F06C         	movff	detect_color@RR,compare@value2compare
  4712  001C82  C0F9  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4713  001C86  0E00               	movlw	0
  4714  001C88  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4715  001C8A  0E1E               	movlw	30
  4716  001C8C  6F6E               	movwf	compare@upper& (0+255),b
  4717  001C8E  EC48  F02E         	call	_compare	;wreg free
  4718  001C92  0900               	iorlw	0
  4719  001C94  B4D8               	btfsc	status,2,c
  4720  001C96  EF4F  F00E         	goto	u5321
  4721  001C9A  EF51  F00E         	goto	u5320
  4722  001C9E                     u5321:
  4723  001C9E  EF54  F00E         	goto	l4902
  4724  001CA2                     u5320:
  4725  001CA2  0E00               	movlw	0
  4726  001CA4  0100               	movlb	0	; () banked
  4727  001CA6  6FF5               	movwf	detect_color@color& (0+255),b
  4728  001CA8                     l4902:
  4729                           
  4730                           ;color.c: 334:     if (color == 8) {toggle_light(2,1);}
  4731  001CA8  0E08               	movlw	8
  4732  001CAA  0100               	movlb	0	; () banked
  4733  001CAC  19F5               	xorwf	detect_color@color& (0+255),w,b
  4734  001CAE  A4D8               	btfss	status,2,c
  4735  001CB0  EF5C  F00E         	goto	u5331
  4736  001CB4  EF5E  F00E         	goto	u5330
  4737  001CB8                     u5331:
  4738  001CB8  EF63  F00E         	goto	l4906
  4739  001CBC                     u5330:
  4740  001CBC                     
  4741                           ; BSR set to: 0
  4742  001CBC  0E01               	movlw	1
  4743  001CBE  6E01               	movwf	toggle_light@toggletime^0,c
  4744  001CC0  0E02               	movlw	2
  4745  001CC2  EC3A  F01B         	call	_toggle_light
  4746  001CC6                     l4906:
  4747                           
  4748                           ;color.c: 335:     return color;
  4749  001CC6  0100               	movlb	0	; () banked
  4750  001CC8  51F5               	movf	detect_color@color& (0+255),w,b
  4751  001CCA                     
  4752                           ; BSR set to: 0
  4753  001CCA  0012               	return		;funcret
  4754  001CCC                     __end_of_detect_color:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _compare *****************
  4758 ;; Defined at:
  4759 ;;		line 338 in file "color.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  lower           2   10[BANK0 ] unsigned int 
  4762 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4763 ;;  upper           2   14[BANK0 ] unsigned int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  result          1   16[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      unsigned char 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4778 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;Total ram usage:        7 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 1
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_detect_color
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text8
  4790  005C90                     __ptext8:
  4791                           	callstack 0
  4792  005C90                     _compare:
  4793                           	callstack 27
  4794  005C90                     
  4795                           ;color.c: 338: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 339: {;color.c: 340:     unsigned char result = 0;
  4796  005C90  0E00               	movlw	0
  4797  005C92  0100               	movlb	0	; () banked
  4798  005C94  6F70               	movwf	compare@result& (0+255),b
  4799  005C96                     
  4800                           ; BSR set to: 0
  4801                           ;color.c: 341:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4802  005C96  516C               	movf	compare@value2compare& (0+255),w,b
  4803  005C98  5D6A               	subwf	compare@lower& (0+255),w,b
  4804  005C9A  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4805  005C9C  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4806  005C9E  B0D8               	btfsc	status,0,c
  4807  005CA0  EF54  F02E         	goto	u4771
  4808  005CA4  EF56  F02E         	goto	u4770
  4809  005CA8                     u4771:
  4810  005CA8  EF63  F02E         	goto	l136
  4811  005CAC                     u4770:
  4812  005CAC                     
  4813                           ; BSR set to: 0
  4814  005CAC  516C               	movf	compare@value2compare& (0+255),w,b
  4815  005CAE  5D6E               	subwf	compare@upper& (0+255),w,b
  4816  005CB0  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4817  005CB2  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4818  005CB4  A0D8               	btfss	status,0,c
  4819  005CB6  EF5F  F02E         	goto	u4781
  4820  005CBA  EF61  F02E         	goto	u4780
  4821  005CBE                     u4781:
  4822  005CBE  EF63  F02E         	goto	l136
  4823  005CC2                     u4780:
  4824  005CC2                     
  4825                           ; BSR set to: 0
  4826  005CC2  0E01               	movlw	1
  4827  005CC4  6F70               	movwf	compare@result& (0+255),b
  4828  005CC6                     l136:
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;color.c: 342:     return result;
  4832  005CC6  5170               	movf	compare@result& (0+255),w,b
  4833  005CC8                     
  4834                           ; BSR set to: 0
  4835  005CC8  0012               	return		;funcret
  4836  005CCA                     __end_of_compare:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _color_data_collection *****************
  4840 ;; Defined at:
  4841 ;;		line 29 in file "test_and_calibration.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4844 ;;		 -> main@rgb(8), 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  x               2  132[BANK0 ] int 
  4847 ;;  k               2  130[BANK0 ] int 
  4848 ;;  j               2  128[BANK0 ] int 
  4849 ;;  i               2  126[BANK0 ] int 
  4850 ;; Return value:  Size  Location     Type
  4851 ;;                  1    wreg      void 
  4852 ;; Registers used:
  4853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;Total ram usage:       12 bytes
  4864 ;; Hardware stack levels used: 1
  4865 ;; Hardware stack levels required when called: 10
  4866 ;; This function calls:
  4867 ;;		_LED_B
  4868 ;;		_LED_C
  4869 ;;		_LED_G
  4870 ;;		_LED_R
  4871 ;;		_color_display
  4872 ;;		_color_predict
  4873 ;;		_read_color
  4874 ;; This function is called by:
  4875 ;;		_test_function
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878                           
  4879                           	psect	text9
  4880  0045C8                     __ptext9:
  4881                           	callstack 0
  4882  0045C8                     _color_data_collection:
  4883                           	callstack 19
  4884  0045C8                     
  4885                           ;test_and_calibration.c: 29: void color_data_collection(struct color_rgb *m);test_and_ca
      +                          libration.c: 30: {;test_and_calibration.c: 31:     int i = 0; int j = 0; int k = 0; int 
      +                          x = 0;
  4886  0045C8  0E00               	movlw	0
  4887  0045CA  0100               	movlb	0	; () banked
  4888  0045CC  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4889  0045CE  0E00               	movlw	0
  4890  0045D0  6FDE               	movwf	color_data_collection@i& (0+255),b
  4891  0045D2  0E00               	movlw	0
  4892  0045D4  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4893  0045D6  0E00               	movlw	0
  4894  0045D8  6FE2               	movwf	color_data_collection@k& (0+255),b
  4895  0045DA  0E00               	movlw	0
  4896  0045DC  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4897  0045DE  0E00               	movlw	0
  4898  0045E0  6FE4               	movwf	color_data_collection@x& (0+255),b
  4899                           
  4900                           ;test_and_calibration.c: 32:     for (i = 0; i < 1; ++i){
  4901  0045E2  0E00               	movlw	0
  4902  0045E4  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4903  0045E6  0E00               	movlw	0
  4904  0045E8  6FDE               	movwf	color_data_collection@i& (0+255),b
  4905  0045EA                     l5062:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;test_and_calibration.c: 33:         LED_C();
  4909  0045EA  ECB3  F02F         	call	_LED_C	;wreg free
  4910  0045EE                     
  4911                           ;test_and_calibration.c: 34:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4912  0045EE  0E09               	movlw	9
  4913  0045F0  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4914  0045F2  0E1E               	movlw	30
  4915  0045F4  6E5C               	movwf	??_color_data_collection^0,c
  4916  0045F6  0EE4               	movlw	228
  4917  0045F8                     u6047:
  4918  0045F8  2EE8               	decfsz	wreg,f,c
  4919  0045FA  D7FE               	bra	u6047
  4920  0045FC  2E5C               	decfsz	??_color_data_collection^0,f,c
  4921  0045FE  D7FC               	bra	u6047
  4922  004600  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4923  004602  D7FA               	bra	u6047
  4924  004604  D000               	nop2	
  4925  004606                     
  4926                           ;test_and_calibration.c: 35:         read_color(m);
  4927  004606  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4928  00460A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4929  00460E  EC88  F02C         	call	_read_color	;wreg free
  4930  004612                     
  4931                           ;test_and_calibration.c: 36:         color_display(m);
  4932  004612  C05A  F058         	movff	color_data_collection@m,color_display@m
  4933  004616  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4934  00461A  EC1F  F02C         	call	_color_display	;wreg free
  4935  00461E                     
  4936                           ;test_and_calibration.c: 37:     }
  4937  00461E  0100               	movlb	0	; () banked
  4938  004620  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4939  004622  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4940  004624                     
  4941                           ; BSR set to: 0
  4942  004624  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4943  004626  EF1D  F023         	goto	u5521
  4944  00462A  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4945  00462C  E108               	bnz	u5520
  4946  00462E  05DE               	decf	color_data_collection@i& (0+255),w,b
  4947  004630  A0D8               	btfss	status,0,c
  4948  004632  EF1D  F023         	goto	u5521
  4949  004636  EF1F  F023         	goto	u5520
  4950  00463A                     u5521:
  4951  00463A  EFF5  F022         	goto	l5062
  4952  00463E                     u5520:
  4953  00463E                     
  4954                           ; BSR set to: 0
  4955                           ;test_and_calibration.c: 39:     for (j = 0; j < 1; ++j){
  4956  00463E  0E00               	movlw	0
  4957  004640  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  4958  004642  0E00               	movlw	0
  4959  004644  6FE0               	movwf	color_data_collection@j& (0+255),b
  4960  004646                     l5080:
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;test_and_calibration.c: 40:         LED_R();
  4964  004646  EC73  F02F         	call	_LED_R	;wreg free
  4965  00464A                     
  4966                           ;test_and_calibration.c: 41:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4967  00464A  0E09               	movlw	9
  4968  00464C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4969  00464E  0E1E               	movlw	30
  4970  004650  6E5C               	movwf	??_color_data_collection^0,c
  4971  004652  0EE4               	movlw	228
  4972  004654                     u6057:
  4973  004654  2EE8               	decfsz	wreg,f,c
  4974  004656  D7FE               	bra	u6057
  4975  004658  2E5C               	decfsz	??_color_data_collection^0,f,c
  4976  00465A  D7FC               	bra	u6057
  4977  00465C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4978  00465E  D7FA               	bra	u6057
  4979  004660  D000               	nop2	
  4980  004662                     
  4981                           ;test_and_calibration.c: 42:         read_color(m);
  4982  004662  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4983  004666  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4984  00466A  EC88  F02C         	call	_read_color	;wreg free
  4985  00466E                     
  4986                           ;test_and_calibration.c: 43:         color_display(m);
  4987  00466E  C05A  F058         	movff	color_data_collection@m,color_display@m
  4988  004672  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4989  004676  EC1F  F02C         	call	_color_display	;wreg free
  4990  00467A                     
  4991                           ;test_and_calibration.c: 44:     }
  4992  00467A  0100               	movlb	0	; () banked
  4993  00467C  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  4994  00467E  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  4995  004680                     
  4996                           ; BSR set to: 0
  4997  004680  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  4998  004682  EF4B  F023         	goto	u5531
  4999  004686  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  5000  004688  E108               	bnz	u5530
  5001  00468A  05E0               	decf	color_data_collection@j& (0+255),w,b
  5002  00468C  A0D8               	btfss	status,0,c
  5003  00468E  EF4B  F023         	goto	u5531
  5004  004692  EF4D  F023         	goto	u5530
  5005  004696                     u5531:
  5006  004696  EF23  F023         	goto	l5080
  5007  00469A                     u5530:
  5008  00469A                     
  5009                           ; BSR set to: 0
  5010                           ;test_and_calibration.c: 46:     for (k = 0; k < 1; ++k){
  5011  00469A  0E00               	movlw	0
  5012  00469C  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5013  00469E  0E00               	movlw	0
  5014  0046A0  6FE2               	movwf	color_data_collection@k& (0+255),b
  5015  0046A2                     l5098:
  5016                           
  5017                           ; BSR set to: 0
  5018                           ;test_and_calibration.c: 47:         LED_G();
  5019  0046A2  EC93  F02F         	call	_LED_G	;wreg free
  5020  0046A6                     
  5021                           ;test_and_calibration.c: 48:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5022  0046A6  0E09               	movlw	9
  5023  0046A8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5024  0046AA  0E1E               	movlw	30
  5025  0046AC  6E5C               	movwf	??_color_data_collection^0,c
  5026  0046AE  0EE4               	movlw	228
  5027  0046B0                     u6067:
  5028  0046B0  2EE8               	decfsz	wreg,f,c
  5029  0046B2  D7FE               	bra	u6067
  5030  0046B4  2E5C               	decfsz	??_color_data_collection^0,f,c
  5031  0046B6  D7FC               	bra	u6067
  5032  0046B8  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5033  0046BA  D7FA               	bra	u6067
  5034  0046BC  D000               	nop2	
  5035  0046BE                     
  5036                           ;test_and_calibration.c: 49:         read_color(m);
  5037  0046BE  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5038  0046C2  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5039  0046C6  EC88  F02C         	call	_read_color	;wreg free
  5040  0046CA                     
  5041                           ;test_and_calibration.c: 50:         color_display(m);
  5042  0046CA  C05A  F058         	movff	color_data_collection@m,color_display@m
  5043  0046CE  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5044  0046D2  EC1F  F02C         	call	_color_display	;wreg free
  5045  0046D6                     
  5046                           ;test_and_calibration.c: 51:     }
  5047  0046D6  0100               	movlb	0	; () banked
  5048  0046D8  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  5049  0046DA  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  5050  0046DC                     
  5051                           ; BSR set to: 0
  5052  0046DC  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  5053  0046DE  EF79  F023         	goto	u5541
  5054  0046E2  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  5055  0046E4  E108               	bnz	u5540
  5056  0046E6  05E2               	decf	color_data_collection@k& (0+255),w,b
  5057  0046E8  A0D8               	btfss	status,0,c
  5058  0046EA  EF79  F023         	goto	u5541
  5059  0046EE  EF7B  F023         	goto	u5540
  5060  0046F2                     u5541:
  5061  0046F2  EF51  F023         	goto	l5098
  5062  0046F6                     u5540:
  5063  0046F6                     
  5064                           ; BSR set to: 0
  5065                           ;test_and_calibration.c: 53:     for (x = 0; x < 1; ++x){
  5066  0046F6  0E00               	movlw	0
  5067  0046F8  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5068  0046FA  0E00               	movlw	0
  5069  0046FC  6FE4               	movwf	color_data_collection@x& (0+255),b
  5070  0046FE                     l5116:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;test_and_calibration.c: 54:         LED_B();
  5074  0046FE  ECA3  F02F         	call	_LED_B	;wreg free
  5075  004702                     
  5076                           ;test_and_calibration.c: 55:         _delay((unsigned long)((100)*(64000000/4000.0)));
  5077  004702  0E09               	movlw	9
  5078  004704  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5079  004706  0E1E               	movlw	30
  5080  004708  6E5C               	movwf	??_color_data_collection^0,c
  5081  00470A  0EE4               	movlw	228
  5082  00470C                     u6077:
  5083  00470C  2EE8               	decfsz	wreg,f,c
  5084  00470E  D7FE               	bra	u6077
  5085  004710  2E5C               	decfsz	??_color_data_collection^0,f,c
  5086  004712  D7FC               	bra	u6077
  5087  004714  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5088  004716  D7FA               	bra	u6077
  5089  004718  D000               	nop2	
  5090  00471A                     
  5091                           ;test_and_calibration.c: 56:         read_color(m);
  5092  00471A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5093  00471E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5094  004722  EC88  F02C         	call	_read_color	;wreg free
  5095  004726                     
  5096                           ;test_and_calibration.c: 57:         color_display(m);
  5097  004726  C05A  F058         	movff	color_data_collection@m,color_display@m
  5098  00472A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5099  00472E  EC1F  F02C         	call	_color_display	;wreg free
  5100  004732                     
  5101                           ;test_and_calibration.c: 58:     }
  5102  004732  0100               	movlb	0	; () banked
  5103  004734  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  5104  004736  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  5105  004738                     
  5106                           ; BSR set to: 0
  5107  004738  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  5108  00473A  EFA7  F023         	goto	u5551
  5109  00473E  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  5110  004740  E108               	bnz	u5550
  5111  004742  05E4               	decf	color_data_collection@x& (0+255),w,b
  5112  004744  A0D8               	btfss	status,0,c
  5113  004746  EFA7  F023         	goto	u5551
  5114  00474A  EFA9  F023         	goto	u5550
  5115  00474E                     u5551:
  5116  00474E  EF7F  F023         	goto	l5116
  5117  004752                     u5550:
  5118  004752                     
  5119                           ; BSR set to: 0
  5120                           ;test_and_calibration.c: 59:     color_predict(1);
  5121  004752  0E01               	movlw	1
  5122  004754  EC20  F02F         	call	_color_predict
  5123  004758                     
  5124                           ;test_and_calibration.c: 60:     LED_C();
  5125  004758  ECB3  F02F         	call	_LED_C	;wreg free
  5126  00475C  0012               	return		;funcret
  5127  00475E                     __end_of_color_data_collection:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _read_color *****************
  5131 ;; Defined at:
  5132 ;;		line 167 in file "color.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  m               2   11[COMRAM] PTR struct color_rgb
  5135 ;;		 -> main@rgb(8), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 4
  5154 ;; This function calls:
  5155 ;;		_color_read_Blue
  5156 ;;		_color_read_Clear
  5157 ;;		_color_read_Green
  5158 ;;		_color_read_Red
  5159 ;; This function is called by:
  5160 ;;		_detect_color
  5161 ;;		_color_data_collection
  5162 ;;		_test_function
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166                           	psect	text10
  5167  005910                     __ptext10:
  5168                           	callstack 0
  5169  005910                     _read_color:
  5170                           	callstack 24
  5171  005910                     
  5172                           ;color.c: 167: void read_color (struct color_rgb *m);color.c: 168: {;color.c: 169:     m
      +                          ->R = color_read_Red();
  5173  005910  ECE0  F02C         	call	_color_read_Red	;wreg free
  5174  005914  C00C  FFD9         	movff	read_color@m,fsr2l
  5175  005918  C00D  FFDA         	movff	read_color@m+1,fsr2h
  5176  00591C  C005  FFDE         	movff	?_color_read_Red,postinc2
  5177  005920  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5178                           
  5179                           ;color.c: 170:     m->B = color_read_Blue();
  5180  005924  EC30  F02D         	call	_color_read_Blue	;wreg free
  5181  005928  EE20 F004          	lfsr	2,4
  5182  00592C  500C               	movf	read_color@m^0,w,c
  5183  00592E  26D9               	addwf	fsr2l,f,c
  5184  005930  500D               	movf	(read_color@m+1)^0,w,c
  5185  005932  22DA               	addwfc	fsr2h,f,c
  5186  005934  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5187  005938  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5188                           
  5189                           ;color.c: 171:     m->G = color_read_Green();
  5190  00593C  EC08  F02D         	call	_color_read_Green	;wreg free
  5191  005940  EE20 F002          	lfsr	2,2
  5192  005944  500C               	movf	read_color@m^0,w,c
  5193  005946  26D9               	addwf	fsr2l,f,c
  5194  005948  500D               	movf	(read_color@m+1)^0,w,c
  5195  00594A  22DA               	addwfc	fsr2h,f,c
  5196  00594C  C005  FFDE         	movff	?_color_read_Green,postinc2
  5197  005950  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5198                           
  5199                           ;color.c: 172:     m->C = color_read_Clear();
  5200  005954  EC58  F02D         	call	_color_read_Clear	;wreg free
  5201  005958  EE20 F006          	lfsr	2,6
  5202  00595C  500C               	movf	read_color@m^0,w,c
  5203  00595E  26D9               	addwf	fsr2l,f,c
  5204  005960  500D               	movf	(read_color@m+1)^0,w,c
  5205  005962  22DA               	addwfc	fsr2h,f,c
  5206  005964  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5207  005968  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5208  00596C  0012               	return		;funcret
  5209  00596E                     __end_of_read_color:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _color_predict *****************
  5213 ;; Defined at:
  5214 ;;		line 230 in file "color.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  color           1    wreg     unsigned char 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  color           1  125[BANK0 ] unsigned char 
  5219 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;Total ram usage:      101 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 9
  5236 ;; This function calls:
  5237 ;;		_sendStringSerial4
  5238 ;;		_sprintf
  5239 ;; This function is called by:
  5240 ;;		_color_data_collection
  5241 ;;		_test_function
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           	psect	text11
  5246  005E40                     __ptext11:
  5247                           	callstack 0
  5248  005E40                     _color_predict:
  5249                           	callstack 20
  5250                           
  5251                           ;incstack = 0
  5252                           ;color_predict@color stored from wreg
  5253  005E40  0100               	movlb	0	; () banked
  5254  005E42  6FDD               	movwf	color_predict@color& (0+255),b
  5255  005E44                     
  5256                           ;color.c: 230: void color_predict(unsigned char color);color.c: 231: {;color.c: 232:    
      +                           char buf[100];;color.c: 233:     sprintf(buf,"\t%d\r\n", color);
  5257  005E44  0E79               	movlw	low color_predict@buf
  5258  005E46  0100               	movlb	0	; () banked
  5259  005E48  6F60               	movwf	sprintf@s& (0+255),b
  5260  005E4A  0E00               	movlw	high color_predict@buf
  5261  005E4C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5262  005E4E  0E0D               	movlw	low (STR_1+8)
  5263  005E50  6F62               	movwf	sprintf@fmt& (0+255),b
  5264  005E52  0E0E               	movlw	high (STR_1+8)
  5265  005E54  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5266  005E56  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5267  005E5A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5268  005E5C  ECB7  F02C         	call	_sprintf	;wreg free
  5269  005E60                     
  5270                           ;color.c: 234:     sendStringSerial4(buf);
  5271  005E60  0E79               	movlw	low color_predict@buf
  5272  005E62  6E02               	movwf	sendStringSerial4@string^0,c
  5273  005E64  0E00               	movlw	high color_predict@buf
  5274  005E66  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5275  005E68  EC08  F02F         	call	_sendStringSerial4	;wreg free
  5276  005E6C  0012               	return		;funcret
  5277  005E6E                     __end_of_color_predict:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function _color_display *****************
  5281 ;; Defined at:
  5282 ;;		line 222 in file "color.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5285 ;;		 -> main@rgb(8), 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5298 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5301 ;;Total ram usage:      102 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; Hardware stack levels required when called: 9
  5304 ;; This function calls:
  5305 ;;		_sendStringSerial4
  5306 ;;		_sprintf
  5307 ;; This function is called by:
  5308 ;;		_color_data_collection
  5309 ;;		_test_function
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           	psect	text12
  5314  00583E                     __ptext12:
  5315                           	callstack 0
  5316  00583E                     _color_display:
  5317                           	callstack 20
  5318  00583E                     
  5319                           ;color.c: 222: void color_display(struct color_rgb *m);color.c: 223: {;color.c: 224:    
      +                           char buf[100];;color.c: 225:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  5320  00583E  0E79               	movlw	low color_display@buf
  5321  005840  0100               	movlb	0	; () banked
  5322  005842  6F60               	movwf	sprintf@s& (0+255),b
  5323  005844  0E00               	movlw	high color_display@buf
  5324  005846  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5325  005848  0E05               	movlw	low STR_1
  5326  00584A  6F62               	movwf	sprintf@fmt& (0+255),b
  5327  00584C  0E0E               	movlw	high STR_1
  5328  00584E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5329  005850  C058  FFD9         	movff	color_display@m,fsr2l
  5330  005854  C059  FFDA         	movff	color_display@m+1,fsr2h
  5331  005858  CFDE F064          	movff	postinc2,?_sprintf+4
  5332  00585C  CFDD F065          	movff	postdec2,?_sprintf+5
  5333  005860  EE20 F002          	lfsr	2,2
  5334  005864  5058               	movf	color_display@m^0,w,c
  5335  005866  26D9               	addwf	fsr2l,f,c
  5336  005868  5059               	movf	(color_display@m+1)^0,w,c
  5337  00586A  22DA               	addwfc	fsr2h,f,c
  5338  00586C  CFDE F066          	movff	postinc2,?_sprintf+6
  5339  005870  CFDD F067          	movff	postdec2,?_sprintf+7
  5340  005874  EE20 F004          	lfsr	2,4
  5341  005878  5058               	movf	color_display@m^0,w,c
  5342  00587A  26D9               	addwf	fsr2l,f,c
  5343  00587C  5059               	movf	(color_display@m+1)^0,w,c
  5344  00587E  22DA               	addwfc	fsr2h,f,c
  5345  005880  CFDE F068          	movff	postinc2,?_sprintf+8
  5346  005884  CFDD F069          	movff	postdec2,?_sprintf+9
  5347  005888  EE20 F006          	lfsr	2,6
  5348  00588C  5058               	movf	color_display@m^0,w,c
  5349  00588E  26D9               	addwf	fsr2l,f,c
  5350  005890  5059               	movf	(color_display@m+1)^0,w,c
  5351  005892  22DA               	addwfc	fsr2h,f,c
  5352  005894  CFDE F06A          	movff	postinc2,?_sprintf+10
  5353  005898  CFDD F06B          	movff	postdec2,?_sprintf+11
  5354  00589C  ECB7  F02C         	call	_sprintf	;wreg free
  5355  0058A0                     
  5356                           ;color.c: 226:     sendStringSerial4(buf);
  5357  0058A0  0E79               	movlw	low color_display@buf
  5358  0058A2  6E02               	movwf	sendStringSerial4@string^0,c
  5359  0058A4  0E00               	movlw	high color_display@buf
  5360  0058A6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5361  0058A8  EC08  F02F         	call	_sendStringSerial4	;wreg free
  5362  0058AC  0012               	return		;funcret
  5363  0058AE                     __end_of_color_display:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function _sprintf *****************
  5367 ;; Defined at:
  5368 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5371 ;;		 -> detect_color@buf(100), color_predict@buf(100), color_display@buf(100), 
  5372 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5373 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(6), 
  5374 ;;		 -> STR_1(14), 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5377 ;;  ap              2   12[BANK0 ] PTR void [1]
  5378 ;;		 -> ?_sprintf(2), 
  5379 ;;  ret             2    0        int 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  2    0[BANK0 ] int 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5389 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;Total ram usage:       25 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 8
  5396 ;; This function calls:
  5397 ;;		_vfprintf
  5398 ;; This function is called by:
  5399 ;;		_color_display
  5400 ;;		_color_predict
  5401 ;;		_detect_color
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text13
  5406  00596E                     __ptext13:
  5407                           	callstack 0
  5408  00596E                     _sprintf:
  5409                           	callstack 20
  5410  00596E  0E64               	movlw	low (?_sprintf+4)
  5411  005970  0100               	movlb	0	; () banked
  5412  005972  6F6C               	movwf	sprintf@ap& (0+255),b
  5413  005974  0E00               	movlw	high (?_sprintf+4)
  5414  005976  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5415  005978  C060  F06E         	movff	sprintf@s,sprintf@f
  5416  00597C  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5417  005980                     
  5418                           ; BSR set to: 0
  5419  005980  0E00               	movlw	0
  5420  005982  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5421  005984  0E00               	movlw	0
  5422  005986  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5423  005988                     
  5424                           ; BSR set to: 0
  5425  005988  0E00               	movlw	0
  5426  00598A  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5427  00598C  0E00               	movlw	0
  5428  00598E  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5429  005990                     
  5430                           ; BSR set to: 0
  5431  005990  0E6E               	movlw	low sprintf@f
  5432  005992  6E50               	movwf	vfprintf@fp^0,c
  5433  005994  0E00               	movlw	high sprintf@f
  5434  005996  6E51               	movwf	(vfprintf@fp+1)^0,c
  5435  005998  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5436  00599C  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5437  0059A0  0E6C               	movlw	low sprintf@ap
  5438  0059A2  6E54               	movwf	vfprintf@ap^0,c
  5439  0059A4  0E00               	movlw	high sprintf@ap
  5440  0059A6  6E55               	movwf	(vfprintf@ap+1)^0,c
  5441  0059A8  EC57  F02C         	call	_vfprintf	;wreg free
  5442  0059AC  0100               	movlb	0	; () banked
  5443  0059AE  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5444  0059B0  2560               	addwf	sprintf@s& (0+255),w,b
  5445  0059B2  6ED9               	movwf	fsr2l,c
  5446  0059B4  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5447  0059B6  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5448  0059B8  6EDA               	movwf	fsr2h,c
  5449  0059BA  0E00               	movlw	0
  5450  0059BC  6EDF               	movwf	indf2,c
  5451  0059BE                     
  5452                           ; BSR set to: 0
  5453  0059BE  0012               	return		;funcret
  5454  0059C0                     __end_of_sprintf:
  5455                           	callstack 0
  5456                           
  5457 ;; *************** function _vfprintf *****************
  5458 ;; Defined at:
  5459 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5462 ;;		 -> sprintf@f(11), 
  5463 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5464 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(6), 
  5465 ;;		 -> STR_1(14), 
  5466 ;;  ap              2   83[COMRAM] PTR PTR void 
  5467 ;;		 -> sprintf@ap(2), 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5470 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(6), 
  5471 ;;		 -> STR_1(14), 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  2   79[COMRAM] int 
  5474 ;; Registers used:
  5475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5481 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;Total ram usage:        8 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 7
  5488 ;; This function calls:
  5489 ;;		_vfpfcnvrt
  5490 ;; This function is called by:
  5491 ;;		_sprintf
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text14
  5496  0058AE                     __ptext14:
  5497                           	callstack 0
  5498  0058AE                     _vfprintf:
  5499                           	callstack 20
  5500  0058AE                     
  5501                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5502  0058AE  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5503  0058B2  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5504  0058B6                     
  5505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5506  0058B6  0E00               	movlw	0
  5507  0058B8  0101               	movlb	1	; () banked
  5508  0058BA  6F7B               	movwf	(_nout+1)& (0+255),b
  5509  0058BC  0E00               	movlw	0
  5510  0058BE  6F7A               	movwf	_nout& (0+255),b
  5511                           
  5512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5513  0058C0  EF75  F02C         	goto	l4184
  5514  0058C4                     l4182:
  5515                           
  5516                           ; BSR set to: 1
  5517                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5518  0058C4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5519  0058C8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5520  0058CC  0E56               	movlw	low vfprintf@cfmt
  5521  0058CE  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5522  0058D0  0E00               	movlw	high vfprintf@cfmt
  5523  0058D2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5524  0058D4  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5525  0058D8  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5526  0058DC  EC80  F01F         	call	_vfpfcnvrt	;wreg free
  5527  0058E0  5040               	movf	?_vfpfcnvrt^0,w,c
  5528  0058E2  0101               	movlb	1	; () banked
  5529  0058E4  277A               	addwf	_nout& (0+255),f,b
  5530  0058E6  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5531  0058E8  237B               	addwfc	(_nout+1)& (0+255),f,b
  5532  0058EA                     l4184:
  5533                           
  5534                           ; BSR set to: 1
  5535                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5536  0058EA  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5537  0058EE  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5538  0058F2                     	if	0	;tblptru may be non-zero
  5539  0058F2                     	endif
  5540  0058F2                     	if	0	;tblptru may be non-zero
  5541  0058F2                     	endif
  5542  0058F2  0008               	tblrd		*
  5543  0058F4  50F5               	movf	tablat,w,c
  5544  0058F6  0900               	iorlw	0
  5545  0058F8  A4D8               	btfss	status,2,c
  5546  0058FA  EF81  F02C         	goto	u4221
  5547  0058FE  EF83  F02C         	goto	u4220
  5548  005902                     u4221:
  5549  005902  EF62  F02C         	goto	l4182
  5550  005906                     u4220:
  5551  005906                     
  5552                           ; BSR set to: 1
  5553                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5554  005906  C17A  F050         	movff	_nout,?_vfprintf
  5555  00590A  C17B  F051         	movff	_nout+1,?_vfprintf+1
  5556  00590E                     
  5557                           ; BSR set to: 1
  5558  00590E  0012               	return		;funcret
  5559  005910                     __end_of_vfprintf:
  5560                           	callstack 0
  5561                           
  5562 ;; *************** function _vfpfcnvrt *****************
  5563 ;; Defined at:
  5564 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5567 ;;		 -> sprintf@f(11), 
  5568 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5569 ;;		 -> vfprintf@cfmt(2), 
  5570 ;;  ap              2   67[COMRAM] PTR PTR void 
  5571 ;;		 -> sprintf@ap(2), 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  ll              8   71[COMRAM] long long 
  5574 ;;  llu             8    0        unsigned long long 
  5575 ;;  f               4    0        unsigned long long 
  5576 ;;  vp              3    0        PTR void 
  5577 ;;  ct              3    0        unsigned char [3]
  5578 ;;  cp              3    0        PTR unsigned char 
  5579 ;;  i               2    0        int 
  5580 ;;  done            2    0        int 
  5581 ;;  c               1    0        unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  2   63[COMRAM] int 
  5584 ;; Registers used:
  5585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5592 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;Total ram usage:       16 bytes
  5596 ;; Hardware stack levels used: 1
  5597 ;; Hardware stack levels required when called: 6
  5598 ;; This function calls:
  5599 ;;		_dtoa
  5600 ;;		_fputc
  5601 ;; This function is called by:
  5602 ;;		_vfprintf
  5603 ;; This function uses a non-reentrant model
  5604 ;;
  5605                           
  5606                           	psect	text15
  5607  003F00                     __ptext15:
  5608                           	callstack 0
  5609  003F00                     _vfpfcnvrt:
  5610                           	callstack 20
  5611  003F00                     
  5612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5613  003F00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5614  003F04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5615  003F08  CFDE FFF6          	movff	postinc2,tblptrl
  5616  003F0C  CFDD FFF7          	movff	postdec2,tblptrh
  5617  003F10                     	if	0	;tblptru may be non-zero
  5618  003F10                     	endif
  5619  003F10                     	if	0	;tblptru may be non-zero
  5620  003F10                     	endif
  5621  003F10  0008               	tblrd		*
  5622  003F12  50F5               	movf	tablat,w,c
  5623  003F14  0A25               	xorlw	37
  5624  003F16  A4D8               	btfss	status,2,c
  5625  003F18  EF90  F01F         	goto	u3861
  5626  003F1C  EF92  F01F         	goto	u3860
  5627  003F20                     u3861:
  5628  003F20  EF3E  F020         	goto	l3948
  5629  003F24                     u3860:
  5630  003F24                     
  5631                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5632  003F24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5633  003F28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5634  003F2C  2ADE               	incf	postinc2,f,c
  5635  003F2E  0E00               	movlw	0
  5636  003F30  22DD               	addwfc	postdec2,f,c
  5637  003F32                     
  5638                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5639  003F32  0E00               	movlw	0
  5640  003F34  0101               	movlb	1	; () banked
  5641  003F36  6F7D               	movwf	(_width+1)& (0+255),b
  5642  003F38  0E00               	movlw	0
  5643  003F3A  6F7C               	movwf	_width& (0+255),b
  5644  003F3C  C17C  F180         	movff	_width,_flags
  5645  003F40  C17D  F181         	movff	_width+1,_flags+1
  5646  003F44                     
  5647                           ; BSR set to: 1
  5648                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5649  003F44  697E               	setf	_prec& (0+255),b
  5650  003F46  697F               	setf	(_prec+1)& (0+255),b
  5651  003F48                     
  5652                           ; BSR set to: 1
  5653                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5654  003F48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5655  003F4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5656  003F50  CFDE FFF6          	movff	postinc2,tblptrl
  5657  003F54  CFDD FFF7          	movff	postdec2,tblptrh
  5658  003F58                     	if	0	;tblptru may be non-zero
  5659  003F58                     	endif
  5660  003F58                     	if	0	;tblptru may be non-zero
  5661  003F58                     	endif
  5662  003F58  0008               	tblrd		*
  5663  003F5A  50F5               	movf	tablat,w,c
  5664  003F5C  0A64               	xorlw	100
  5665  003F5E  B4D8               	btfsc	status,2,c
  5666  003F60  EFB4  F01F         	goto	u3871
  5667  003F64  EFB6  F01F         	goto	u3870
  5668  003F68                     u3871:
  5669  003F68  EFC8  F01F         	goto	l3926
  5670  003F6C                     u3870:
  5671  003F6C                     
  5672                           ; BSR set to: 1
  5673  003F6C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5674  003F70  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5675  003F74  CFDE FFF6          	movff	postinc2,tblptrl
  5676  003F78  CFDD FFF7          	movff	postdec2,tblptrh
  5677  003F7C                     	if	0	;tblptru may be non-zero
  5678  003F7C                     	endif
  5679  003F7C                     	if	0	;tblptru may be non-zero
  5680  003F7C                     	endif
  5681  003F7C  0008               	tblrd		*
  5682  003F7E  50F5               	movf	tablat,w,c
  5683  003F80  0A69               	xorlw	105
  5684  003F82  A4D8               	btfss	status,2,c
  5685  003F84  EFC6  F01F         	goto	u3881
  5686  003F88  EFC8  F01F         	goto	u3880
  5687  003F8C                     u3881:
  5688  003F8C  EF08  F020         	goto	l3932
  5689  003F90                     u3880:
  5690  003F90                     l3926:
  5691                           
  5692                           ; BSR set to: 1
  5693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5694  003F90  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5695  003F94  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5696  003F98  2ADE               	incf	postinc2,f,c
  5697  003F9A  0E00               	movlw	0
  5698  003F9C  22DD               	addwfc	postdec2,f,c
  5699                           
  5700                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5701  003F9E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5702  003FA2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5703  003FA6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5704  003FAA  0E02               	movlw	2
  5705  003FAC  26DE               	addwf	postinc2,f,c
  5706  003FAE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5707  003FB2  0E00               	movlw	0
  5708  003FB4  22DD               	addwfc	postdec2,f,c
  5709  003FB6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5710  003FBA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5711  003FBE  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5712  003FC2  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5713  003FC6  0E00               	movlw	0
  5714  003FC8  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5715  003FCA  0EFF               	movlw	-1
  5716  003FCC  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5717  003FCE  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5718  003FD0  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5719  003FD2  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5720  003FD4  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5721  003FD6  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5722  003FD8                     
  5723                           ; BSR set to: 1
  5724                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5725  003FD8  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5726  003FDC  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5727  003FE0  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5728  003FE4  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5729  003FE8  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5730  003FEC  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5731  003FF0  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5732  003FF4  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5733  003FF8  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5734  003FFC  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5735  004000  ECC9  F019         	call	_dtoa	;wreg free
  5736  004004  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5737  004008  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5738  00400C  EF59  F020         	goto	l1372
  5739  004010                     l3932:
  5740                           
  5741                           ; BSR set to: 1
  5742                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5743  004010  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5744  004014  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5745  004018  CFDE FFF6          	movff	postinc2,tblptrl
  5746  00401C  CFDD FFF7          	movff	postdec2,tblptrh
  5747  004020                     	if	0	;tblptru may be non-zero
  5748  004020                     	endif
  5749  004020                     	if	0	;tblptru may be non-zero
  5750  004020                     	endif
  5751  004020  0008               	tblrd		*
  5752  004022  50F5               	movf	tablat,w,c
  5753  004024  0A25               	xorlw	37
  5754  004026  A4D8               	btfss	status,2,c
  5755  004028  EF18  F020         	goto	u3891
  5756  00402C  EF1A  F020         	goto	u3890
  5757  004030                     u3891:
  5758  004030  EF31  F020         	goto	l3942
  5759  004034                     u3890:
  5760  004034                     
  5761                           ; BSR set to: 1
  5762                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5763  004034  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5764  004038  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5765  00403C  2ADE               	incf	postinc2,f,c
  5766  00403E  0E00               	movlw	0
  5767  004040  22DD               	addwfc	postdec2,f,c
  5768  004042                     
  5769                           ; BSR set to: 1
  5770                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5771  004042  0E00               	movlw	0
  5772  004044  6E02               	movwf	(fputc@c+1)^0,c
  5773  004046  0E25               	movlw	37
  5774  004048  6E01               	movwf	fputc@c^0,c
  5775  00404A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5776  00404E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5777  004052  EC8C  F029         	call	_fputc	;wreg free
  5778  004056                     l3938:
  5779                           
  5780                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5781  004056  0E00               	movlw	0
  5782  004058  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5783  00405A  0E01               	movlw	1
  5784  00405C  6E40               	movwf	?_vfpfcnvrt^0,c
  5785  00405E  EF59  F020         	goto	l1372
  5786  004062                     l3942:
  5787                           
  5788                           ; BSR set to: 1
  5789                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5790  004062  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5791  004066  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5792  00406A  2ADE               	incf	postinc2,f,c
  5793  00406C  0E00               	movlw	0
  5794  00406E  22DD               	addwfc	postdec2,f,c
  5795  004070                     
  5796                           ; BSR set to: 1
  5797                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5798  004070  0E00               	movlw	0
  5799  004072  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5800  004074  0E00               	movlw	0
  5801  004076  6E40               	movwf	?_vfpfcnvrt^0,c
  5802  004078  EF59  F020         	goto	l1372
  5803  00407C                     l3948:
  5804                           
  5805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5806  00407C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5807  004080  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5808  004084  CFDE FFF6          	movff	postinc2,tblptrl
  5809  004088  CFDD FFF7          	movff	postdec2,tblptrh
  5810  00408C                     	if	0	;tblptru may be non-zero
  5811  00408C                     	endif
  5812  00408C                     	if	0	;tblptru may be non-zero
  5813  00408C                     	endif
  5814  00408C  0008               	tblrd		*
  5815  00408E  50F5               	movf	tablat,w,c
  5816  004090  6E01               	movwf	fputc@c^0,c
  5817  004092  6A02               	clrf	(fputc@c+1)^0,c
  5818  004094  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5819  004098  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5820  00409C  EC8C  F029         	call	_fputc	;wreg free
  5821  0040A0                     
  5822                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5823  0040A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5824  0040A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5825  0040A8  2ADE               	incf	postinc2,f,c
  5826  0040AA  0E00               	movlw	0
  5827  0040AC  22DD               	addwfc	postdec2,f,c
  5828  0040AE  EF2B  F020         	goto	l3938
  5829  0040B2                     l1372:
  5830  0040B2  0012               	return		;funcret
  5831  0040B4                     __end_of_vfpfcnvrt:
  5832                           	callstack 0
  5833                           
  5834 ;; *************** function _dtoa *****************
  5835 ;; Defined at:
  5836 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5839 ;;		 -> sprintf@f(11), 
  5840 ;;  d               8   29[COMRAM] long long 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  n               8   53[COMRAM] long long 
  5843 ;;  i               2   61[COMRAM] int 
  5844 ;;  s               2   51[COMRAM] int 
  5845 ;;  w               2   49[COMRAM] int 
  5846 ;;  p               2   47[COMRAM] int 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  2   27[COMRAM] int 
  5849 ;; Registers used:
  5850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5856 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5860 ;;Total ram usage:       36 bytes
  5861 ;; Hardware stack levels used: 1
  5862 ;; Hardware stack levels required when called: 5
  5863 ;; This function calls:
  5864 ;;		___aodiv
  5865 ;;		___aomod
  5866 ;;		_abs
  5867 ;;		_pad
  5868 ;; This function is called by:
  5869 ;;		_vfpfcnvrt
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text16
  5874  003392                     __ptext16:
  5875                           	callstack 0
  5876  003392                     _dtoa:
  5877                           	callstack 20
  5878  003392                     
  5879                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5880  003392  C01E  F036         	movff	dtoa@d,dtoa@n
  5881  003396  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5882  00339A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5883  00339E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5884  0033A2  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5885  0033A6  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5886  0033AA  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5887  0033AE  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5888  0033B2                     
  5889                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5890  0033B2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5891  0033B4  EFDE  F019         	goto	u3261
  5892  0033B8  EFE1  F019         	goto	u3260
  5893  0033BC                     u3261:
  5894  0033BC  0E01               	movlw	1
  5895  0033BE  EFE2  F019         	goto	u3270
  5896  0033C2                     u3260:
  5897  0033C2  0E00               	movlw	0
  5898  0033C4                     u3270:
  5899  0033C4  6E34               	movwf	dtoa@s^0,c
  5900  0033C6  6A35               	clrf	(dtoa@s+1)^0,c
  5901                           
  5902                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5903  0033C8  5034               	movf	dtoa@s^0,w,c
  5904  0033CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  5905  0033CC  B4D8               	btfsc	status,2,c
  5906  0033CE  EFEB  F019         	goto	u3281
  5907  0033D2  EFED  F019         	goto	u3280
  5908  0033D6                     u3281:
  5909  0033D6  EFFD  F019         	goto	l3638
  5910  0033DA                     u3280:
  5911  0033DA                     
  5912                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5913  0033DA  1E3D               	comf	(dtoa@n+7)^0,f,c
  5914  0033DC  1E3C               	comf	(dtoa@n+6)^0,f,c
  5915  0033DE  1E3B               	comf	(dtoa@n+5)^0,f,c
  5916  0033E0  1E3A               	comf	(dtoa@n+4)^0,f,c
  5917  0033E2  1E39               	comf	(dtoa@n+3)^0,f,c
  5918  0033E4  1E38               	comf	(dtoa@n+2)^0,f,c
  5919  0033E6  1E37               	comf	(dtoa@n+1)^0,f,c
  5920  0033E8  6C36               	negf	dtoa@n^0,c
  5921  0033EA  0E00               	movlw	0
  5922  0033EC  2237               	addwfc	(dtoa@n+1)^0,f,c
  5923  0033EE  2238               	addwfc	(dtoa@n+2)^0,f,c
  5924  0033F0  2239               	addwfc	(dtoa@n+3)^0,f,c
  5925  0033F2  223A               	addwfc	(dtoa@n+4)^0,f,c
  5926  0033F4  223B               	addwfc	(dtoa@n+5)^0,f,c
  5927  0033F6  223C               	addwfc	(dtoa@n+6)^0,f,c
  5928  0033F8  223D               	addwfc	(dtoa@n+7)^0,f,c
  5929  0033FA                     l3638:
  5930                           
  5931                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5932  0033FA  0101               	movlb	1	; () banked
  5933  0033FC  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  5934  0033FE  EF03  F01A         	goto	u3291
  5935  003402  EF05  F01A         	goto	u3290
  5936  003406                     u3291:
  5937  003406  EF06  F01A         	goto	l3642
  5938  00340A                     u3290:
  5939  00340A                     
  5940                           ; BSR set to: 1
  5941                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5942  00340A  9380               	bcf	_flags& (0+255),1,b
  5943  00340C                     l3642:
  5944                           
  5945                           ; BSR set to: 1
  5946                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5947  00340C  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  5948  00340E  EF13  F01A         	goto	u3300
  5949  003412  517F               	movf	(_prec+1)& (0+255),w,b
  5950  003414  E106               	bnz	u3301
  5951  003416  057E               	decf	_prec& (0+255),w,b
  5952  003418  B0D8               	btfsc	status,0,c
  5953  00341A  EF11  F01A         	goto	u3301
  5954  00341E  EF13  F01A         	goto	u3300
  5955  003422                     u3301:
  5956  003422  EF19  F01A         	goto	l1345
  5957  003426                     u3300:
  5958  003426                     
  5959                           ; BSR set to: 1
  5960  003426  0E00               	movlw	0
  5961  003428  6E31               	movwf	(dtoa@p+1)^0,c
  5962  00342A  0E01               	movlw	1
  5963  00342C  6E30               	movwf	dtoa@p^0,c
  5964  00342E  EF1D  F01A         	goto	l1347
  5965  003432                     l1345:
  5966                           
  5967                           ; BSR set to: 1
  5968  003432  C17E  F030         	movff	_prec,dtoa@p
  5969  003436  C17F  F031         	movff	_prec+1,dtoa@p+1
  5970  00343A                     l1347:
  5971                           
  5972                           ; BSR set to: 1
  5973                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5974  00343A  C17C  F032         	movff	_width,dtoa@w
  5975  00343E  C17D  F033         	movff	_width+1,dtoa@w+1
  5976  003442                     
  5977                           ; BSR set to: 1
  5978                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5979  003442  5034               	movf	dtoa@s^0,w,c
  5980  003444  1035               	iorwf	(dtoa@s+1)^0,w,c
  5981  003446  A4D8               	btfss	status,2,c
  5982  003448  EF28  F01A         	goto	u3311
  5983  00344C  EF2A  F01A         	goto	u3310
  5984  003450                     u3311:
  5985  003450  EF31  F01A         	goto	l3650
  5986  003454                     u3310:
  5987  003454                     
  5988                           ; BSR set to: 1
  5989  003454  A580               	btfss	_flags& (0+255),2,b
  5990  003456  EF2F  F01A         	goto	u3321
  5991  00345A  EF31  F01A         	goto	u3320
  5992  00345E                     u3321:
  5993  00345E  EF34  F01A         	goto	l3652
  5994  003462                     u3320:
  5995  003462                     l3650:
  5996                           
  5997                           ; BSR set to: 1
  5998                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5999  003462  0632               	decf	dtoa@w^0,f,c
  6000  003464  A0D8               	btfss	status,0,c
  6001  003466  0633               	decf	(dtoa@w+1)^0,f,c
  6002  003468                     l3652:
  6003                           
  6004                           ; BSR set to: 1
  6005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6006  003468  0E00               	movlw	0
  6007  00346A  6E3F               	movwf	(dtoa@i+1)^0,c
  6008  00346C  0E1F               	movlw	31
  6009  00346E  6E3E               	movwf	dtoa@i^0,c
  6010  003470                     
  6011                           ; BSR set to: 1
  6012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6013  003470  0E00               	movlw	0
  6014  003472  6FA5               	movwf	(_dbuf+31)& (0+255),b
  6015                           
  6016                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6017  003474  EFB8  F01A         	goto	l3666
  6018  003478                     l3656:
  6019                           
  6020                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  6021  003478  063E               	decf	dtoa@i^0,f,c
  6022  00347A  A0D8               	btfss	status,0,c
  6023  00347C  063F               	decf	(dtoa@i+1)^0,f,c
  6024  00347E                     
  6025                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6026  00347E  0E86               	movlw	low _dbuf
  6027  003480  243E               	addwf	dtoa@i^0,w,c
  6028  003482  6ED9               	movwf	fsr2l,c
  6029  003484  0E01               	movlw	high _dbuf
  6030  003486  203F               	addwfc	(dtoa@i+1)^0,w,c
  6031  003488  6EDA               	movwf	fsr2h,c
  6032  00348A  C036  F001         	movff	dtoa@n,___aomod@dividend
  6033  00348E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6034  003492  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6035  003496  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6036  00349A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6037  00349E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6038  0034A2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6039  0034A6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6040  0034AA  0E0A               	movlw	10
  6041  0034AC  6E09               	movwf	___aomod@divisor^0,c
  6042  0034AE  0E00               	movlw	0
  6043  0034B0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6044  0034B2  0E00               	movlw	0
  6045  0034B4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6046  0034B6  0E00               	movlw	0
  6047  0034B8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6048  0034BA  0E00               	movlw	0
  6049  0034BC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6050  0034BE  0E00               	movlw	0
  6051  0034C0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6052  0034C2  0E00               	movlw	0
  6053  0034C4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6054  0034C6  0E00               	movlw	0
  6055  0034C8  6E10               	movwf	(___aomod@divisor+7)^0,c
  6056  0034CA  EC73  F024         	call	___aomod	;wreg free
  6057  0034CE  C001  F026         	movff	?___aomod,??_dtoa
  6058  0034D2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6059  0034D6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6060  0034DA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6061  0034DE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6062  0034E2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6063  0034E6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6064  0034EA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6065  0034EE  C026  F013         	movff	??_dtoa,abs@a
  6066  0034F2  C028  F014         	movff	??_dtoa+2,abs@a+1
  6067  0034F6  EC28  F02E         	call	_abs	;wreg free
  6068  0034FA  5013               	movf	?_abs^0,w,c
  6069  0034FC  0F30               	addlw	48
  6070  0034FE  6EDF               	movwf	indf2,c
  6071  003500                     
  6072                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  6073  003500  0630               	decf	dtoa@p^0,f,c
  6074  003502  A0D8               	btfss	status,0,c
  6075  003504  0631               	decf	(dtoa@p+1)^0,f,c
  6076  003506                     
  6077                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  6078  003506  0632               	decf	dtoa@w^0,f,c
  6079  003508  A0D8               	btfss	status,0,c
  6080  00350A  0633               	decf	(dtoa@w+1)^0,f,c
  6081  00350C                     
  6082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6083  00350C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6084  003510  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6085  003514  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6086  003518  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6087  00351C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6088  003520  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6089  003524  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6090  003528  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6091  00352C  0E0A               	movlw	10
  6092  00352E  6E09               	movwf	___aodiv@divisor^0,c
  6093  003530  0E00               	movlw	0
  6094  003532  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6095  003534  0E00               	movlw	0
  6096  003536  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6097  003538  0E00               	movlw	0
  6098  00353A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6099  00353C  0E00               	movlw	0
  6100  00353E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6101  003540  0E00               	movlw	0
  6102  003542  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6103  003544  0E00               	movlw	0
  6104  003546  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6105  003548  0E00               	movlw	0
  6106  00354A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6107  00354C  ECAF  F023         	call	___aodiv	;wreg free
  6108  003550  C001  F036         	movff	?___aodiv,dtoa@n
  6109  003554  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6110  003558  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6111  00355C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6112  003560  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6113  003564  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6114  003568  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6115  00356C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6116  003570                     l3666:
  6117                           
  6118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6119  003570  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6120  003572  EFC3  F01A         	goto	u3331
  6121  003576  503F               	movf	(dtoa@i+1)^0,w,c
  6122  003578  E108               	bnz	u3330
  6123  00357A  043E               	decf	dtoa@i^0,w,c
  6124  00357C  A0D8               	btfss	status,0,c
  6125  00357E  EFC3  F01A         	goto	u3331
  6126  003582  EFC5  F01A         	goto	u3330
  6127  003586                     u3331:
  6128  003586  EFF6  F01A         	goto	l3676
  6129  00358A                     u3330:
  6130  00358A  5036               	movf	dtoa@n^0,w,c
  6131  00358C  1037               	iorwf	(dtoa@n+1)^0,w,c
  6132  00358E  1038               	iorwf	(dtoa@n+2)^0,w,c
  6133  003590  1039               	iorwf	(dtoa@n+3)^0,w,c
  6134  003592  103A               	iorwf	(dtoa@n+4)^0,w,c
  6135  003594  103B               	iorwf	(dtoa@n+5)^0,w,c
  6136  003596  103C               	iorwf	(dtoa@n+6)^0,w,c
  6137  003598  103D               	iorwf	(dtoa@n+7)^0,w,c
  6138  00359A  A4D8               	btfss	status,2,c
  6139  00359C  EFD2  F01A         	goto	u3341
  6140  0035A0  EFD4  F01A         	goto	u3340
  6141  0035A4                     u3341:
  6142  0035A4  EF3C  F01A         	goto	l3656
  6143  0035A8                     u3340:
  6144  0035A8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6145  0035AA  EFE1  F01A         	goto	u3350
  6146  0035AE  5031               	movf	(dtoa@p+1)^0,w,c
  6147  0035B0  E106               	bnz	u3351
  6148  0035B2  0430               	decf	dtoa@p^0,w,c
  6149  0035B4  B0D8               	btfsc	status,0,c
  6150  0035B6  EFDF  F01A         	goto	u3351
  6151  0035BA  EFE1  F01A         	goto	u3350
  6152  0035BE                     u3351:
  6153  0035BE  EF3C  F01A         	goto	l3656
  6154  0035C2                     u3350:
  6155  0035C2  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6156  0035C4  EFEC  F01A         	goto	u3361
  6157  0035C8  5033               	movf	(dtoa@w+1)^0,w,c
  6158  0035CA  E108               	bnz	u3360
  6159  0035CC  0432               	decf	dtoa@w^0,w,c
  6160  0035CE  A0D8               	btfss	status,0,c
  6161  0035D0  EFEC  F01A         	goto	u3361
  6162  0035D4  EFEE  F01A         	goto	u3360
  6163  0035D8                     u3361:
  6164  0035D8  EFF6  F01A         	goto	l3676
  6165  0035DC                     u3360:
  6166  0035DC  0101               	movlb	1	; () banked
  6167  0035DE  B380               	btfsc	_flags& (0+255),1,b
  6168  0035E0  EFF4  F01A         	goto	u3371
  6169  0035E4  EFF6  F01A         	goto	u3370
  6170  0035E8                     u3371:
  6171  0035E8  EF3C  F01A         	goto	l3656
  6172  0035EC                     u3370:
  6173  0035EC                     l3676:
  6174                           
  6175                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6176  0035EC  5034               	movf	dtoa@s^0,w,c
  6177  0035EE  1035               	iorwf	(dtoa@s+1)^0,w,c
  6178  0035F0  A4D8               	btfss	status,2,c
  6179  0035F2  EFFD  F01A         	goto	u3381
  6180  0035F6  EFFF  F01A         	goto	u3380
  6181  0035FA                     u3381:
  6182  0035FA  EF07  F01B         	goto	l3680
  6183  0035FE                     u3380:
  6184  0035FE  0101               	movlb	1	; () banked
  6185  003600  A580               	btfss	_flags& (0+255),2,b
  6186  003602  EF05  F01B         	goto	u3391
  6187  003606  EF07  F01B         	goto	u3390
  6188  00360A                     u3391:
  6189  00360A  EF25  F01B         	goto	l3690
  6190  00360E                     u3390:
  6191  00360E                     l3680:
  6192                           
  6193                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  6194  00360E  063E               	decf	dtoa@i^0,f,c
  6195  003610  A0D8               	btfss	status,0,c
  6196  003612  063F               	decf	(dtoa@i+1)^0,f,c
  6197  003614                     
  6198                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6199  003614  5034               	movf	dtoa@s^0,w,c
  6200  003616  1035               	iorwf	(dtoa@s+1)^0,w,c
  6201  003618  A4D8               	btfss	status,2,c
  6202  00361A  EF11  F01B         	goto	u3401
  6203  00361E  EF13  F01B         	goto	u3400
  6204  003622                     u3401:
  6205  003622  EF19  F01B         	goto	l3686
  6206  003626                     u3400:
  6207  003626  0E00               	movlw	0
  6208  003628  6E2F               	movwf	(_dtoa$2619+1)^0,c
  6209  00362A  0E2B               	movlw	43
  6210  00362C  6E2E               	movwf	_dtoa$2619^0,c
  6211  00362E  EF1D  F01B         	goto	l3688
  6212  003632                     l3686:
  6213  003632  0E00               	movlw	0
  6214  003634  6E2F               	movwf	(_dtoa$2619+1)^0,c
  6215  003636  0E2D               	movlw	45
  6216  003638  6E2E               	movwf	_dtoa$2619^0,c
  6217  00363A                     l3688:
  6218  00363A  0E86               	movlw	low _dbuf
  6219  00363C  243E               	addwf	dtoa@i^0,w,c
  6220  00363E  6ED9               	movwf	fsr2l,c
  6221  003640  0E01               	movlw	high _dbuf
  6222  003642  203F               	addwfc	(dtoa@i+1)^0,w,c
  6223  003644  6EDA               	movwf	fsr2h,c
  6224  003646  C02E  FFDF         	movff	_dtoa$2619,indf2
  6225  00364A                     l3690:
  6226                           
  6227                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6228  00364A  C01C  F011         	movff	dtoa@fp,pad@fp
  6229  00364E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6230  003652  0E86               	movlw	low _dbuf
  6231  003654  243E               	addwf	dtoa@i^0,w,c
  6232  003656  6E13               	movwf	pad@buf^0,c
  6233  003658  0E01               	movlw	high _dbuf
  6234  00365A  203F               	addwfc	(dtoa@i+1)^0,w,c
  6235  00365C  6E14               	movwf	(pad@buf+1)^0,c
  6236  00365E  C032  F015         	movff	dtoa@w,pad@p
  6237  003662  C033  F016         	movff	dtoa@w+1,pad@p+1
  6238  003666  EC54  F02A         	call	_pad	;wreg free
  6239  00366A  C011  F01C         	movff	?_pad,?_dtoa
  6240  00366E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6241  003672  0012               	return		;funcret
  6242  003674                     __end_of_dtoa:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _pad *****************
  6246 ;; Defined at:
  6247 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6250 ;;		 -> sprintf@f(11), 
  6251 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6252 ;;		 -> dbuf(32), 
  6253 ;;  p               2   20[COMRAM] int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  w               2   25[COMRAM] int 
  6256 ;;  i               2   23[COMRAM] int 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  2   16[COMRAM] int 
  6259 ;; Registers used:
  6260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6269 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6270 ;;Total ram usage:       11 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; Hardware stack levels required when called: 4
  6273 ;; This function calls:
  6274 ;;		_fputc
  6275 ;;		_fputs
  6276 ;;		_strlen
  6277 ;; This function is called by:
  6278 ;;		_dtoa
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text17
  6283  0054A8                     __ptext17:
  6284                           	callstack 0
  6285  0054A8                     _pad:
  6286                           	callstack 20
  6287  0054A8                     
  6288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6289  0054A8  0101               	movlb	1	; () banked
  6290  0054AA  A180               	btfss	_flags& (0+255),0,b
  6291  0054AC  EF5A  F02A         	goto	u3151
  6292  0054B0  EF5C  F02A         	goto	u3150
  6293  0054B4                     u3151:
  6294  0054B4  EF66  F02A         	goto	l3560
  6295  0054B8                     u3150:
  6296  0054B8                     
  6297                           ; BSR set to: 1
  6298                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6299  0054B8  C013  F00A         	movff	pad@buf,fputs@s
  6300  0054BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6301  0054C0  C011  F00C         	movff	pad@fp,fputs@fp
  6302  0054C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6303  0054C8  ECA3  F02D         	call	_fputs	;wreg free
  6304  0054CC                     l3560:
  6305                           
  6306                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6307  0054CC  BE16               	btfsc	(pad@p+1)^0,7,c
  6308  0054CE  EF6B  F02A         	goto	u3161
  6309  0054D2  EF6D  F02A         	goto	u3160
  6310  0054D6                     u3161:
  6311  0054D6  EF73  F02A         	goto	l3564
  6312  0054DA                     u3160:
  6313  0054DA  C015  F01A         	movff	pad@p,pad@w
  6314  0054DE  C016  F01B         	movff	pad@p+1,pad@w+1
  6315  0054E2  EF77  F02A         	goto	l1334
  6316  0054E6                     l3564:
  6317  0054E6  0E00               	movlw	0
  6318  0054E8  6E1B               	movwf	(pad@w+1)^0,c
  6319  0054EA  0E00               	movlw	0
  6320  0054EC  6E1A               	movwf	pad@w^0,c
  6321  0054EE                     l1334:
  6322                           
  6323                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6324  0054EE  0E00               	movlw	0
  6325  0054F0  6E19               	movwf	(pad@i+1)^0,c
  6326  0054F2  0E00               	movlw	0
  6327  0054F4  6E18               	movwf	pad@i^0,c
  6328                           
  6329                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6330  0054F6  EF89  F02A         	goto	l3570
  6331  0054FA                     l3566:
  6332                           
  6333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6334  0054FA  0E00               	movlw	0
  6335  0054FC  6E02               	movwf	(fputc@c+1)^0,c
  6336  0054FE  0E20               	movlw	32
  6337  005500  6E01               	movwf	fputc@c^0,c
  6338  005502  C011  F003         	movff	pad@fp,fputc@fp
  6339  005506  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6340  00550A  EC8C  F029         	call	_fputc	;wreg free
  6341  00550E                     
  6342                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6343  00550E  4A18               	infsnz	pad@i^0,f,c
  6344  005510  2A19               	incf	(pad@i+1)^0,f,c
  6345  005512                     l3570:
  6346                           
  6347                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6348  005512  501A               	movf	pad@w^0,w,c
  6349  005514  5C18               	subwf	pad@i^0,w,c
  6350  005516  5019               	movf	(pad@i+1)^0,w,c
  6351  005518  0A80               	xorlw	128
  6352  00551A  6E17               	movwf	??_pad^0,c
  6353  00551C  501B               	movf	(pad@w+1)^0,w,c
  6354  00551E  0A80               	xorlw	128
  6355  005520  5817               	subwfb	??_pad^0,w,c
  6356  005522  A0D8               	btfss	status,0,c
  6357  005524  EF96  F02A         	goto	u3171
  6358  005528  EF98  F02A         	goto	u3170
  6359  00552C                     u3171:
  6360  00552C  EF7D  F02A         	goto	l3566
  6361  005530                     u3170:
  6362  005530                     
  6363                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6364  005530  0101               	movlb	1	; () banked
  6365  005532  B180               	btfsc	_flags& (0+255),0,b
  6366  005534  EF9E  F02A         	goto	u3181
  6367  005538  EFA0  F02A         	goto	u3180
  6368  00553C                     u3181:
  6369  00553C  EFAA  F02A         	goto	l3574
  6370  005540                     u3180:
  6371  005540                     
  6372                           ; BSR set to: 1
  6373                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6374  005540  C013  F00A         	movff	pad@buf,fputs@s
  6375  005544  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6376  005548  C011  F00C         	movff	pad@fp,fputs@fp
  6377  00554C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6378  005550  ECA3  F02D         	call	_fputs	;wreg free
  6379  005554                     l3574:
  6380                           
  6381                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6382  005554  C013  F001         	movff	pad@buf,strlen@s
  6383  005558  C014  F002         	movff	pad@buf+1,strlen@s+1
  6384  00555C  ECB9  F02E         	call	_strlen	;wreg free
  6385  005560  501A               	movf	pad@w^0,w,c
  6386  005562  2401               	addwf	?_strlen^0,w,c
  6387  005564  6E11               	movwf	?_pad^0,c
  6388  005566  501B               	movf	(pad@w+1)^0,w,c
  6389  005568  2002               	addwfc	(?_strlen+1)^0,w,c
  6390  00556A  6E12               	movwf	(?_pad+1)^0,c
  6391  00556C  0012               	return		;funcret
  6392  00556E                     __end_of_pad:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function _strlen *****************
  6396 ;; Defined at:
  6397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6400 ;;		 -> dbuf(32), 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6403 ;;		 -> dbuf(32), 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  2    0[COMRAM] unsigned int 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;Total ram usage:        4 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 1
  6420 ;; This function calls:
  6421 ;;		Nothing
  6422 ;; This function is called by:
  6423 ;;		_pad
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text18
  6428  005D72                     __ptext18:
  6429                           	callstack 0
  6430  005D72                     _strlen:
  6431                           	callstack 22
  6432  005D72  C001  F003         	movff	strlen@s,strlen@a
  6433  005D76  C002  F004         	movff	strlen@s+1,strlen@a+1
  6434  005D7A  EFC1  F02E         	goto	l3470
  6435  005D7E                     l3468:
  6436  005D7E  4A01               	infsnz	strlen@s^0,f,c
  6437  005D80  2A02               	incf	(strlen@s+1)^0,f,c
  6438  005D82                     l3470:
  6439  005D82  C001  FFD9         	movff	strlen@s,fsr2l
  6440  005D86  C002  FFDA         	movff	strlen@s+1,fsr2h
  6441  005D8A  50DF               	movf	indf2,w,c
  6442  005D8C  A4D8               	btfss	status,2,c
  6443  005D8E  EFCB  F02E         	goto	u3011
  6444  005D92  EFCD  F02E         	goto	u3010
  6445  005D96                     u3011:
  6446  005D96  EFBF  F02E         	goto	l3468
  6447  005D9A                     u3010:
  6448  005D9A  5003               	movf	strlen@a^0,w,c
  6449  005D9C  5C01               	subwf	strlen@s^0,w,c
  6450  005D9E  6E01               	movwf	?_strlen^0,c
  6451  005DA0  5004               	movf	(strlen@a+1)^0,w,c
  6452  005DA2  5802               	subwfb	(strlen@s+1)^0,w,c
  6453  005DA4  6E02               	movwf	(?_strlen+1)^0,c
  6454  005DA6  0012               	return		;funcret
  6455  005DA8                     __end_of_strlen:
  6456                           	callstack 0
  6457                           
  6458 ;; *************** function _fputs *****************
  6459 ;; Defined at:
  6460 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6463 ;;		 -> dbuf(32), 
  6464 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6465 ;;		 -> sprintf@f(11), 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  i               2   14[COMRAM] int 
  6468 ;;  c               1   13[COMRAM] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  2    9[COMRAM] int 
  6471 ;; Registers used:
  6472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6481 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;Total ram usage:        7 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; Hardware stack levels required when called: 3
  6485 ;; This function calls:
  6486 ;;		_fputc
  6487 ;; This function is called by:
  6488 ;;		_pad
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text19
  6493  005B46                     __ptext19:
  6494                           	callstack 0
  6495  005B46                     _fputs:
  6496                           	callstack 20
  6497  005B46  0E00               	movlw	0
  6498  005B48  6E10               	movwf	(fputs@i+1)^0,c
  6499  005B4A  0E00               	movlw	0
  6500  005B4C  6E0F               	movwf	fputs@i^0,c
  6501  005B4E  EFB4  F02D         	goto	l3464
  6502  005B52                     l3460:
  6503  005B52  C00E  F001         	movff	fputs@c,fputc@c
  6504  005B56  6A02               	clrf	(fputc@c+1)^0,c
  6505  005B58  C00C  F003         	movff	fputs@fp,fputc@fp
  6506  005B5C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6507  005B60  EC8C  F029         	call	_fputc	;wreg free
  6508  005B64  4A0F               	infsnz	fputs@i^0,f,c
  6509  005B66  2A10               	incf	(fputs@i+1)^0,f,c
  6510  005B68                     l3464:
  6511  005B68  500F               	movf	fputs@i^0,w,c
  6512  005B6A  240A               	addwf	fputs@s^0,w,c
  6513  005B6C  6ED9               	movwf	fsr2l,c
  6514  005B6E  5010               	movf	(fputs@i+1)^0,w,c
  6515  005B70  200B               	addwfc	(fputs@s+1)^0,w,c
  6516  005B72  6EDA               	movwf	fsr2h,c
  6517  005B74  50DF               	movf	indf2,w,c
  6518  005B76  6E0E               	movwf	fputs@c^0,c
  6519  005B78  500E               	movf	fputs@c^0,w,c
  6520  005B7A  A4D8               	btfss	status,2,c
  6521  005B7C  EFC2  F02D         	goto	u3001
  6522  005B80  EFC4  F02D         	goto	u3000
  6523  005B84                     u3001:
  6524  005B84  EFA9  F02D         	goto	l3460
  6525  005B88                     u3000:
  6526  005B88  0012               	return		;funcret
  6527  005B8A                     __end_of_fputs:
  6528                           	callstack 0
  6529                           
  6530 ;; *************** function _fputc *****************
  6531 ;; Defined at:
  6532 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  c               2    0[COMRAM] int 
  6535 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6536 ;;		 -> sprintf@f(11), 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  2    0[COMRAM] int 
  6541 ;; Registers used:
  6542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6548 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;Total ram usage:        9 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 2
  6555 ;; This function calls:
  6556 ;;		_putch
  6557 ;; This function is called by:
  6558 ;;		_pad
  6559 ;;		_vfpfcnvrt
  6560 ;;		_fputs
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text20
  6565  005318                     __ptext20:
  6566                           	callstack 0
  6567  005318                     _fputc:
  6568                           	callstack 23
  6569  005318  5003               	movf	fputc@fp^0,w,c
  6570  00531A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6571  00531C  B4D8               	btfsc	status,2,c
  6572  00531E  EF93  F029         	goto	u2961
  6573  005322  EF95  F029         	goto	u2960
  6574  005326                     u2961:
  6575  005326  EF9E  F029         	goto	l3448
  6576  00532A                     u2960:
  6577  00532A  5003               	movf	fputc@fp^0,w,c
  6578  00532C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6579  00532E  A4D8               	btfss	status,2,c
  6580  005330  EF9C  F029         	goto	u2971
  6581  005334  EF9E  F029         	goto	u2970
  6582  005338                     u2971:
  6583  005338  EFA3  F029         	goto	l3450
  6584  00533C                     u2970:
  6585  00533C                     l3448:
  6586  00533C  5001               	movf	fputc@c^0,w,c
  6587  00533E  EC19  F030         	call	_putch
  6588  005342  EFF0  F029         	goto	l1398
  6589  005346                     l3450:
  6590  005346  EE20 F009          	lfsr	2,9
  6591  00534A  5003               	movf	fputc@fp^0,w,c
  6592  00534C  26D9               	addwf	fsr2l,f,c
  6593  00534E  5004               	movf	(fputc@fp+1)^0,w,c
  6594  005350  22DA               	addwfc	fsr2h,f,c
  6595  005352  50DE               	movf	postinc2,w,c
  6596  005354  10DE               	iorwf	postinc2,w,c
  6597  005356  B4D8               	btfsc	status,2,c
  6598  005358  EFB0  F029         	goto	u2981
  6599  00535C  EFB2  F029         	goto	u2980
  6600  005360                     u2981:
  6601  005360  EFCD  F029         	goto	l3454
  6602  005364                     u2980:
  6603  005364  EE20 F009          	lfsr	2,9
  6604  005368  5003               	movf	fputc@fp^0,w,c
  6605  00536A  26D9               	addwf	fsr2l,f,c
  6606  00536C  5004               	movf	(fputc@fp+1)^0,w,c
  6607  00536E  22DA               	addwfc	fsr2h,f,c
  6608  005370  EE10 F003          	lfsr	1,3
  6609  005374  5003               	movf	fputc@fp^0,w,c
  6610  005376  26E1               	addwf	fsr1l,f,c
  6611  005378  5004               	movf	(fputc@fp+1)^0,w,c
  6612  00537A  22E2               	addwfc	fsr1h,f,c
  6613  00537C  50DE               	movf	postinc2,w,c
  6614  00537E  5CE6               	subwf	postinc1,w,c
  6615  005380  50E6               	movf	postinc1,w,c
  6616  005382  0A80               	xorlw	128
  6617  005384  6E09               	movwf	(??_fputc+4)^0,c
  6618  005386  50DE               	movf	postinc2,w,c
  6619  005388  0A80               	xorlw	128
  6620  00538A  5809               	subwfb	(??_fputc+4)^0,w,c
  6621  00538C  B0D8               	btfsc	status,0,c
  6622  00538E  EFCB  F029         	goto	u2991
  6623  005392  EFCD  F029         	goto	u2990
  6624  005396                     u2991:
  6625  005396  EFF0  F029         	goto	l1398
  6626  00539A                     u2990:
  6627  00539A                     l3454:
  6628  00539A  EE20 F003          	lfsr	2,3
  6629  00539E  5003               	movf	fputc@fp^0,w,c
  6630  0053A0  26D9               	addwf	fsr2l,f,c
  6631  0053A2  5004               	movf	(fputc@fp+1)^0,w,c
  6632  0053A4  22DA               	addwfc	fsr2h,f,c
  6633  0053A6  CFDE F005          	movff	postinc2,??_fputc
  6634  0053AA  CFDD F006          	movff	postdec2,??_fputc+1
  6635  0053AE  C003  FFD9         	movff	fputc@fp,fsr2l
  6636  0053B2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6637  0053B6  CFDE F007          	movff	postinc2,??_fputc+2
  6638  0053BA  CFDD F008          	movff	postdec2,??_fputc+3
  6639  0053BE  5005               	movf	??_fputc^0,w,c
  6640  0053C0  2407               	addwf	(??_fputc+2)^0,w,c
  6641  0053C2  6ED9               	movwf	fsr2l,c
  6642  0053C4  5006               	movf	(??_fputc+1)^0,w,c
  6643  0053C6  2008               	addwfc	(??_fputc+3)^0,w,c
  6644  0053C8  6EDA               	movwf	fsr2h,c
  6645  0053CA  C001  FFDF         	movff	fputc@c,indf2
  6646  0053CE  EE20 F003          	lfsr	2,3
  6647  0053D2  5003               	movf	fputc@fp^0,w,c
  6648  0053D4  26D9               	addwf	fsr2l,f,c
  6649  0053D6  5004               	movf	(fputc@fp+1)^0,w,c
  6650  0053D8  22DA               	addwfc	fsr2h,f,c
  6651  0053DA  2ADE               	incf	postinc2,f,c
  6652  0053DC  0E00               	movlw	0
  6653  0053DE  22DD               	addwfc	postdec2,f,c
  6654  0053E0                     l1398:
  6655  0053E0  0012               	return		;funcret
  6656  0053E2                     __end_of_fputc:
  6657                           	callstack 0
  6658                           
  6659 ;; *************** function _putch *****************
  6660 ;; Defined at:
  6661 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;  c               1    wreg     unsigned char 
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;  c               1    0[COMRAM] unsigned char 
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      void 
  6668 ;; Registers used:
  6669 ;;		wreg
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;Total ram usage:        0 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; Hardware stack levels required when called: 1
  6682 ;; This function calls:
  6683 ;;		Nothing
  6684 ;; This function is called by:
  6685 ;;		_fputc
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text21
  6690  006032                     __ptext21:
  6691                           	callstack 0
  6692  006032                     _putch:
  6693                           	callstack 23
  6694  006032  0012               	return		;funcret
  6695  006034                     __end_of_putch:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _abs *****************
  6699 ;; Defined at:
  6700 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  a               2   18[COMRAM] int 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  2   18[COMRAM] int 
  6707 ;; Registers used:
  6708 ;;		wreg, status,2, status,0
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;Total ram usage:        4 bytes
  6719 ;; Hardware stack levels used: 1
  6720 ;; Hardware stack levels required when called: 1
  6721 ;; This function calls:
  6722 ;;		Nothing
  6723 ;; This function is called by:
  6724 ;;		_dtoa
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text22
  6729  005C50                     __ptext22:
  6730                           	callstack 0
  6731  005C50                     _abs:
  6732                           	callstack 23
  6733  005C50  BE14               	btfsc	(abs@a+1)^0,7,c
  6734  005C52  EF35  F02E         	goto	u3190
  6735  005C56  5014               	movf	(abs@a+1)^0,w,c
  6736  005C58  E106               	bnz	u3191
  6737  005C5A  0413               	decf	abs@a^0,w,c
  6738  005C5C  B0D8               	btfsc	status,0,c
  6739  005C5E  EF33  F02E         	goto	u3191
  6740  005C62  EF35  F02E         	goto	u3190
  6741  005C66                     u3191:
  6742  005C66  EF43  F02E         	goto	l1383
  6743  005C6A                     u3190:
  6744  005C6A  C013  F015         	movff	abs@a,??_abs
  6745  005C6E  C014  F016         	movff	abs@a+1,??_abs+1
  6746  005C72  1E15               	comf	??_abs^0,f,c
  6747  005C74  1E16               	comf	(??_abs+1)^0,f,c
  6748  005C76  4A15               	infsnz	??_abs^0,f,c
  6749  005C78  2A16               	incf	(??_abs+1)^0,f,c
  6750  005C7A  C015  F013         	movff	??_abs,?_abs
  6751  005C7E  C016  F014         	movff	??_abs+1,?_abs+1
  6752  005C82  EF47  F02E         	goto	l1386
  6753  005C86                     l1383:
  6754  005C86  C013  F013         	movff	abs@a,?_abs
  6755  005C8A  C014  F014         	movff	abs@a+1,?_abs+1
  6756  005C8E                     l1386:
  6757  005C8E  0012               	return		;funcret
  6758  005C90                     __end_of_abs:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function ___aomod *****************
  6762 ;; Defined at:
  6763 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  dividend        8    0[COMRAM] long long 
  6766 ;;  divisor         8    8[COMRAM] long long 
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  sign            1   17[COMRAM] unsigned char 
  6769 ;;  counter         1   16[COMRAM] unsigned char 
  6770 ;; Return value:  Size  Location     Type
  6771 ;;                  8    0[COMRAM] long long 
  6772 ;; Registers used:
  6773 ;;		wreg, status,2, status,0
  6774 ;; Tracked objects:
  6775 ;;		On entry : 0/0
  6776 ;;		On exit  : 0/0
  6777 ;;		Unchanged: 0/0
  6778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6779 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6782 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6783 ;;Total ram usage:       18 bytes
  6784 ;; Hardware stack levels used: 1
  6785 ;; Hardware stack levels required when called: 1
  6786 ;; This function calls:
  6787 ;;		Nothing
  6788 ;; This function is called by:
  6789 ;;		_dtoa
  6790 ;; This function uses a non-reentrant model
  6791 ;;
  6792                           
  6793                           	psect	text23
  6794  0048E6                     __ptext23:
  6795                           	callstack 0
  6796  0048E6                     ___aomod:
  6797                           	callstack 23
  6798  0048E6  0E00               	movlw	0
  6799  0048E8  6E12               	movwf	___aomod@sign^0,c
  6800  0048EA  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6801  0048EC  EF7C  F024         	goto	u3090
  6802  0048F0  EF7A  F024         	goto	u3091
  6803  0048F4                     u3091:
  6804  0048F4  EF8E  F024         	goto	l3528
  6805  0048F8                     u3090:
  6806  0048F8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6807  0048FA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6808  0048FC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6809  0048FE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6810  004900  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6811  004902  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6812  004904  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6813  004906  6C01               	negf	___aomod@dividend^0,c
  6814  004908  0E00               	movlw	0
  6815  00490A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6816  00490C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6817  00490E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6818  004910  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6819  004912  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6820  004914  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6821  004916  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6822  004918  0E01               	movlw	1
  6823  00491A  6E12               	movwf	___aomod@sign^0,c
  6824  00491C                     l3528:
  6825  00491C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6826  00491E  EF95  F024         	goto	u3100
  6827  004922  EF93  F024         	goto	u3101
  6828  004926                     u3101:
  6829  004926  EFA5  F024         	goto	l3532
  6830  00492A                     u3100:
  6831  00492A  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6832  00492C  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6833  00492E  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6834  004930  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6835  004932  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6836  004934  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6837  004936  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6838  004938  6C09               	negf	___aomod@divisor^0,c
  6839  00493A  0E00               	movlw	0
  6840  00493C  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6841  00493E  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6842  004940  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6843  004942  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6844  004944  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6845  004946  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6846  004948  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6847  00494A                     l3532:
  6848  00494A  5009               	movf	___aomod@divisor^0,w,c
  6849  00494C  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6850  00494E  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6851  004950  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6852  004952  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6853  004954  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6854  004956  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6855  004958  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6856  00495A  B4D8               	btfsc	status,2,c
  6857  00495C  EFB2  F024         	goto	u3111
  6858  004960  EFB4  F024         	goto	u3110
  6859  004964                     u3111:
  6860  004964  EFFC  F024         	goto	l3548
  6861  004968                     u3110:
  6862  004968  0E01               	movlw	1
  6863  00496A  6E11               	movwf	___aomod@counter^0,c
  6864  00496C  EFC2  F024         	goto	l3538
  6865  004970                     l3536:
  6866  004970  90D8               	bcf	status,0,c
  6867  004972  3609               	rlcf	___aomod@divisor^0,f,c
  6868  004974  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6869  004976  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6870  004978  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6871  00497A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6872  00497C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6873  00497E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6874  004980  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6875  004982  2A11               	incf	___aomod@counter^0,f,c
  6876  004984                     l3538:
  6877  004984  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6878  004986  EFC7  F024         	goto	u3121
  6879  00498A  EFC9  F024         	goto	u3120
  6880  00498E                     u3121:
  6881  00498E  EFB8  F024         	goto	l3536
  6882  004992                     u3120:
  6883  004992                     l3540:
  6884  004992  5009               	movf	___aomod@divisor^0,w,c
  6885  004994  5C01               	subwf	___aomod@dividend^0,w,c
  6886  004996  500A               	movf	(___aomod@divisor+1)^0,w,c
  6887  004998  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6888  00499A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6889  00499C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6890  00499E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6891  0049A0  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6892  0049A2  500D               	movf	(___aomod@divisor+4)^0,w,c
  6893  0049A4  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6894  0049A6  500E               	movf	(___aomod@divisor+5)^0,w,c
  6895  0049A8  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6896  0049AA  500F               	movf	(___aomod@divisor+6)^0,w,c
  6897  0049AC  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6898  0049AE  5010               	movf	(___aomod@divisor+7)^0,w,c
  6899  0049B0  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6900  0049B2  A0D8               	btfss	status,0,c
  6901  0049B4  EFDE  F024         	goto	u3131
  6902  0049B8  EFE0  F024         	goto	u3130
  6903  0049BC                     u3131:
  6904  0049BC  EFF0  F024         	goto	l3544
  6905  0049C0                     u3130:
  6906  0049C0  5009               	movf	___aomod@divisor^0,w,c
  6907  0049C2  5E01               	subwf	___aomod@dividend^0,f,c
  6908  0049C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  6909  0049C6  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6910  0049C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  6911  0049CA  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6912  0049CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  6913  0049CE  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6914  0049D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  6915  0049D2  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6916  0049D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  6917  0049D6  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6918  0049D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  6919  0049DA  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6920  0049DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  6921  0049DE  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6922  0049E0                     l3544:
  6923  0049E0  90D8               	bcf	status,0,c
  6924  0049E2  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6925  0049E4  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6926  0049E6  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6927  0049E8  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6928  0049EA  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6929  0049EC  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6930  0049EE  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6931  0049F0  3209               	rrcf	___aomod@divisor^0,f,c
  6932  0049F2  2E11               	decfsz	___aomod@counter^0,f,c
  6933  0049F4  EFC9  F024         	goto	l3540
  6934  0049F8                     l3548:
  6935  0049F8  5012               	movf	___aomod@sign^0,w,c
  6936  0049FA  B4D8               	btfsc	status,2,c
  6937  0049FC  EF02  F025         	goto	u3141
  6938  004A00  EF04  F025         	goto	u3140
  6939  004A04                     u3141:
  6940  004A04  EF14  F025         	goto	l3552
  6941  004A08                     u3140:
  6942  004A08  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6943  004A0A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6944  004A0C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6945  004A0E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6946  004A10  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6947  004A12  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6948  004A14  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6949  004A16  6C01               	negf	___aomod@dividend^0,c
  6950  004A18  0E00               	movlw	0
  6951  004A1A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6952  004A1C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6953  004A1E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6954  004A20  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6955  004A22  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6956  004A24  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6957  004A26  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6958  004A28                     l3552:
  6959  004A28  C001  F001         	movff	___aomod@dividend,?___aomod
  6960  004A2C  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6961  004A30  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6962  004A34  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6963  004A38  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6964  004A3C  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6965  004A40  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6966  004A44  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6967  004A48  0012               	return		;funcret
  6968  004A4A                     __end_of___aomod:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function ___aodiv *****************
  6972 ;; Defined at:
  6973 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  dividend        8    0[COMRAM] long long 
  6976 ;;  divisor         8    8[COMRAM] long long 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  quotient        8   18[COMRAM] long long 
  6979 ;;  sign            1   17[COMRAM] unsigned char 
  6980 ;;  counter         1   16[COMRAM] unsigned char 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  8    0[COMRAM] long long 
  6983 ;; Registers used:
  6984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6990 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;Total ram usage:       26 bytes
  6995 ;; Hardware stack levels used: 1
  6996 ;; Hardware stack levels required when called: 1
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_dtoa
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           	psect	text24
  7005  00475E                     __ptext24:
  7006                           	callstack 0
  7007  00475E                     ___aodiv:
  7008                           	callstack 23
  7009  00475E  0E00               	movlw	0
  7010  004760  6E12               	movwf	___aodiv@sign^0,c
  7011  004762  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7012  004764  EFB8  F023         	goto	u3020
  7013  004768  EFB6  F023         	goto	u3021
  7014  00476C                     u3021:
  7015  00476C  EFCA  F023         	goto	l3484
  7016  004770                     u3020:
  7017  004770  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7018  004772  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7019  004774  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7020  004776  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7021  004778  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7022  00477A  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7023  00477C  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7024  00477E  6C09               	negf	___aodiv@divisor^0,c
  7025  004780  0E00               	movlw	0
  7026  004782  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7027  004784  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7028  004786  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7029  004788  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7030  00478A  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7031  00478C  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7032  00478E  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7033  004790  0E01               	movlw	1
  7034  004792  6E12               	movwf	___aodiv@sign^0,c
  7035  004794                     l3484:
  7036  004794  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7037  004796  EFD1  F023         	goto	u3030
  7038  00479A  EFCF  F023         	goto	u3031
  7039  00479E                     u3031:
  7040  00479E  EFE3  F023         	goto	l3490
  7041  0047A2                     u3030:
  7042  0047A2  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7043  0047A4  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7044  0047A6  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7045  0047A8  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7046  0047AA  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7047  0047AC  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7048  0047AE  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7049  0047B0  6C01               	negf	___aodiv@dividend^0,c
  7050  0047B2  0E00               	movlw	0
  7051  0047B4  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7052  0047B6  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7053  0047B8  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7054  0047BA  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7055  0047BC  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7056  0047BE  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7057  0047C0  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7058  0047C2  0E01               	movlw	1
  7059  0047C4  1A12               	xorwf	___aodiv@sign^0,f,c
  7060  0047C6                     l3490:
  7061  0047C6  EE20  F013         	lfsr	2,___aodiv@quotient
  7062  0047CA  0E07               	movlw	7
  7063  0047CC                     u3041:
  7064  0047CC  6ADE               	clrf	postinc2,c
  7065  0047CE  06E8               	decf	wreg,f,c
  7066  0047D0  E2FD               	bc	u3041
  7067  0047D2  5009               	movf	___aodiv@divisor^0,w,c
  7068  0047D4  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7069  0047D6  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7070  0047D8  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7071  0047DA  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7072  0047DC  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7073  0047DE  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7074  0047E0  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7075  0047E2  B4D8               	btfsc	status,2,c
  7076  0047E4  EFF6  F023         	goto	u3051
  7077  0047E8  EFF8  F023         	goto	u3050
  7078  0047EC                     u3051:
  7079  0047EC  EF4A  F024         	goto	l3512
  7080  0047F0                     u3050:
  7081  0047F0  0E01               	movlw	1
  7082  0047F2  6E11               	movwf	___aodiv@counter^0,c
  7083  0047F4  EF06  F024         	goto	l3498
  7084  0047F8                     l3496:
  7085  0047F8  90D8               	bcf	status,0,c
  7086  0047FA  3609               	rlcf	___aodiv@divisor^0,f,c
  7087  0047FC  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7088  0047FE  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7089  004800  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7090  004802  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7091  004804  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7092  004806  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7093  004808  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7094  00480A  2A11               	incf	___aodiv@counter^0,f,c
  7095  00480C                     l3498:
  7096  00480C  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7097  00480E  EF0B  F024         	goto	u3061
  7098  004812  EF0D  F024         	goto	u3060
  7099  004816                     u3061:
  7100  004816  EFFC  F023         	goto	l3496
  7101  00481A                     u3060:
  7102  00481A                     l3500:
  7103  00481A  90D8               	bcf	status,0,c
  7104  00481C  3613               	rlcf	___aodiv@quotient^0,f,c
  7105  00481E  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7106  004820  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7107  004822  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7108  004824  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7109  004826  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7110  004828  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7111  00482A  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7112  00482C  5009               	movf	___aodiv@divisor^0,w,c
  7113  00482E  5C01               	subwf	___aodiv@dividend^0,w,c
  7114  004830  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7115  004832  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7116  004834  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7117  004836  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7118  004838  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7119  00483A  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7120  00483C  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7121  00483E  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7122  004840  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7123  004842  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7124  004844  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7125  004846  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7126  004848  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7127  00484A  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7128  00484C  A0D8               	btfss	status,0,c
  7129  00484E  EF2B  F024         	goto	u3071
  7130  004852  EF2D  F024         	goto	u3070
  7131  004856                     u3071:
  7132  004856  EF3E  F024         	goto	l3508
  7133  00485A                     u3070:
  7134  00485A  5009               	movf	___aodiv@divisor^0,w,c
  7135  00485C  5E01               	subwf	___aodiv@dividend^0,f,c
  7136  00485E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7137  004860  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7138  004862  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7139  004864  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7140  004866  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7141  004868  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7142  00486A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7143  00486C  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7144  00486E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7145  004870  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7146  004872  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7147  004874  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7148  004876  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7149  004878  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7150  00487A  8013               	bsf	___aodiv@quotient^0,0,c
  7151  00487C                     l3508:
  7152  00487C  90D8               	bcf	status,0,c
  7153  00487E  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7154  004880  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7155  004882  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7156  004884  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7157  004886  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7158  004888  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7159  00488A  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7160  00488C  3209               	rrcf	___aodiv@divisor^0,f,c
  7161  00488E  2E11               	decfsz	___aodiv@counter^0,f,c
  7162  004890  EF0D  F024         	goto	l3500
  7163  004894                     l3512:
  7164  004894  5012               	movf	___aodiv@sign^0,w,c
  7165  004896  B4D8               	btfsc	status,2,c
  7166  004898  EF50  F024         	goto	u3081
  7167  00489C  EF52  F024         	goto	u3080
  7168  0048A0                     u3081:
  7169  0048A0  EF62  F024         	goto	l3516
  7170  0048A4                     u3080:
  7171  0048A4  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7172  0048A6  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7173  0048A8  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7174  0048AA  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7175  0048AC  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7176  0048AE  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7177  0048B0  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7178  0048B2  6C13               	negf	___aodiv@quotient^0,c
  7179  0048B4  0E00               	movlw	0
  7180  0048B6  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7181  0048B8  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7182  0048BA  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7183  0048BC  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7184  0048BE  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7185  0048C0  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7186  0048C2  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7187  0048C4                     l3516:
  7188  0048C4  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7189  0048C8  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7190  0048CC  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7191  0048D0  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7192  0048D4  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7193  0048D8  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7194  0048DC  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7195  0048E0  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7196  0048E4  0012               	return		;funcret
  7197  0048E6                     __end_of___aodiv:
  7198                           	callstack 0
  7199                           
  7200 ;; *************** function _sendStringSerial4 *****************
  7201 ;; Defined at:
  7202 ;;		line 35 in file "serial.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  string          2    1[COMRAM] PTR unsigned char 
  7205 ;;		 -> detect_color@buf(100), color_predict@buf(100), color_display@buf(100), 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;		None
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  1    wreg      void 
  7210 ;; Registers used:
  7211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;Total ram usage:        2 bytes
  7222 ;; Hardware stack levels used: 1
  7223 ;; Hardware stack levels required when called: 2
  7224 ;; This function calls:
  7225 ;;		_sendCharSerial4
  7226 ;; This function is called by:
  7227 ;;		_color_display
  7228 ;;		_color_predict
  7229 ;;		_detect_color
  7230 ;; This function uses a non-reentrant model
  7231 ;;
  7232                           
  7233                           	psect	text25
  7234  005E10                     __ptext25:
  7235                           	callstack 0
  7236  005E10                     _sendStringSerial4:
  7237                           	callstack 26
  7238  005E10                     
  7239                           ;serial.c: 37:     while(*string != 0){
  7240  005E10  EF13  F02F         	goto	l4228
  7241  005E14                     l4224:
  7242                           
  7243                           ;serial.c: 38:   sendCharSerial4(*string++);}
  7244  005E14  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7245  005E18  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7246  005E1C  50DF               	movf	indf2,w,c
  7247  005E1E  ECF1  F02F         	call	_sendCharSerial4
  7248  005E22  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7249  005E24  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7250  005E26                     l4228:
  7251                           
  7252                           ;serial.c: 37:     while(*string != 0){
  7253  005E26  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7254  005E2A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7255  005E2E  50DF               	movf	indf2,w,c
  7256  005E30  A4D8               	btfss	status,2,c
  7257  005E32  EF1D  F02F         	goto	u4231
  7258  005E36  EF1F  F02F         	goto	u4230
  7259  005E3A                     u4231:
  7260  005E3A  EF0A  F02F         	goto	l4224
  7261  005E3E                     u4230:
  7262  005E3E  0012               	return		;funcret
  7263  005E40                     __end_of_sendStringSerial4:
  7264                           	callstack 0
  7265                           
  7266 ;; *************** function _sendCharSerial4 *****************
  7267 ;; Defined at:
  7268 ;;		line 29 in file "serial.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  charToSend      1    wreg     unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  charToSend      1    0[COMRAM] unsigned char 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  1    wreg      void 
  7275 ;; Registers used:
  7276 ;;		wreg
  7277 ;; Tracked objects:
  7278 ;;		On entry : 0/0
  7279 ;;		On exit  : 0/0
  7280 ;;		Unchanged: 0/0
  7281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7286 ;;Total ram usage:        1 bytes
  7287 ;; Hardware stack levels used: 1
  7288 ;; Hardware stack levels required when called: 1
  7289 ;; This function calls:
  7290 ;;		Nothing
  7291 ;; This function is called by:
  7292 ;;		_sendStringSerial4
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           	psect	text26
  7297  005FE2                     __ptext26:
  7298                           	callstack 0
  7299  005FE2                     _sendCharSerial4:
  7300                           	callstack 26
  7301                           
  7302                           ;incstack = 0
  7303                           ;sendCharSerial4@charToSend stored from wreg
  7304  005FE2  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7305  005FE4                     l334:
  7306  005FE4  010E               	movlb	14	; () banked
  7307  005FE6  A537               	btfss	55,2,b	;volatile
  7308  005FE8  EFF8  F02F         	goto	u3961
  7309  005FEC  EFFA  F02F         	goto	u3960
  7310  005FF0                     u3961:
  7311  005FF0  EFF2  F02F         	goto	l334
  7312  005FF4                     u3960:
  7313  005FF4                     
  7314                           ; BSR set to: 14
  7315                           ;serial.c: 31:     TX4REG = charToSend;
  7316  005FF4  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7317  005FF8                     
  7318                           ; BSR set to: 14
  7319  005FF8  0012               	return		;funcret
  7320  005FFA                     __end_of_sendCharSerial4:
  7321                           	callstack 0
  7322                           
  7323 ;; *************** function _short_burst *****************
  7324 ;; Defined at:
  7325 ;;		line 7 in file "movement.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7328 ;;		 -> main@motorL(9), 
  7329 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7330 ;;		 -> main@motorR(9), 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;Total ram usage:        6 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; Hardware stack levels required when called: 4
  7349 ;; This function calls:
  7350 ;;		_fullSpeedAhead
  7351 ;;		_stop
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text27
  7358  005B8A                     __ptext27:
  7359                           	callstack 0
  7360  005B8A                     _short_burst:
  7361                           	callstack 26
  7362  005B8A                     
  7363                           ;movement.c: 7: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 8
      +                          : {;movement.c: 9:     fullSpeedAhead(mL,mR);
  7364  005B8A  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  7365  005B8E  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  7366  005B92  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  7367  005B96  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  7368  005B9A  ECB7  F02A         	call	_fullSpeedAhead	;wreg free
  7369  005B9E                     
  7370                           ;movement.c: 10:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7371  005B9E  0E21               	movlw	33
  7372  005BA0  6E25               	movwf	(??_short_burst+1)^0,c
  7373  005BA2  0E78               	movlw	120
  7374  005BA4  6E24               	movwf	??_short_burst^0,c
  7375  005BA6  0E98               	movlw	152
  7376  005BA8                     u6087:
  7377  005BA8  2EE8               	decfsz	wreg,f,c
  7378  005BAA  D7FE               	bra	u6087
  7379  005BAC  2E24               	decfsz	??_short_burst^0,f,c
  7380  005BAE  D7FC               	bra	u6087
  7381  005BB0  2E25               	decfsz	(??_short_burst+1)^0,f,c
  7382  005BB2  D7FA               	bra	u6087
  7383  005BB4  D000               	nop2	
  7384  005BB6                     
  7385                           ;movement.c: 11:     stop(mL,mR);
  7386  005BB6  C020  F01A         	movff	short_burst@mL,stop@mL
  7387  005BBA  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  7388  005BBE  C022  F01C         	movff	short_burst@mR,stop@mR
  7389  005BC2  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  7390  005BC6  EC7B  F02B         	call	_stop	;wreg free
  7391  005BCA  0012               	return		;funcret
  7392  005BCC                     __end_of_short_burst:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _setup *****************
  7396 ;; Defined at:
  7397 ;;		line 6 in file "test_and_calibration.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  white           2   24[BANK0 ] PTR struct white_card
  7400 ;;		 -> main@white(28), 
  7401 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  7402 ;;		 -> main@amb(8), 
  7403 ;;  mL              2   28[BANK0 ] PTR struct DC_motor
  7404 ;;		 -> main@motorL(9), 
  7405 ;;  mR              2   30[BANK0 ] PTR struct DC_motor
  7406 ;;		 -> main@motorR(9), 
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  amb_light       2   34[BANK0 ] unsigned int 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  2   24[BANK0 ] unsigned int 
  7411 ;; Registers used:
  7412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7418 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;Total ram usage:       12 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; Hardware stack levels required when called: 7
  7425 ;; This function calls:
  7426 ;;		_LED_OFF
  7427 ;;		_amb_light_measure
  7428 ;;		_calibrate_white
  7429 ;;		_calibration_motor
  7430 ;; This function is called by:
  7431 ;;		_main
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text28
  7436  004A4A                     __ptext28:
  7437                           	callstack 0
  7438  004A4A                     _setup:
  7439                           	callstack 23
  7440  004A4A                     
  7441                           ;test_and_calibration.c: 6: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 7: {;test_and_cal
      +                          ibration.c: 8:     unsigned int amb_light = 0;
  7442  004A4A  0E00               	movlw	0
  7443  004A4C  0100               	movlb	0	; () banked
  7444  004A4E  6F83               	movwf	(setup@amb_light+1)& (0+255),b
  7445  004A50  0E00               	movlw	0
  7446  004A52  6F82               	movwf	setup@amb_light& (0+255),b
  7447  004A54                     
  7448                           ; BSR set to: 0
  7449                           ;test_and_calibration.c: 9:     LED_OFF();
  7450  004A54  EC83  F02F         	call	_LED_OFF	;wreg free
  7451  004A58                     
  7452                           ;test_and_calibration.c: 10:     LATDbits.LATD7 = 1;
  7453  004A58  8E7C               	bsf	124,7,c	;volatile
  7454  004A5A                     
  7455                           ;test_and_calibration.c: 11:     LATHbits.LATH3 = 1;
  7456  004A5A  8680               	bsf	128,3,c	;volatile
  7457  004A5C                     l558:
  7458  004A5C  B48E               	btfsc	142,2,c	;volatile
  7459  004A5E  EF33  F025         	goto	u5571
  7460  004A62  EF35  F025         	goto	u5570
  7461  004A66                     u5571:
  7462  004A66  EF2E  F025         	goto	l558
  7463  004A6A                     u5570:
  7464  004A6A                     
  7465                           ;test_and_calibration.c: 14:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7466  004A6A  B48E               	btfsc	142,2,c	;volatile
  7467  004A6C  EF3A  F025         	goto	u5581
  7468  004A70  EF3C  F025         	goto	u5580
  7469  004A74                     u5581:
  7470  004A74  EF4F  F025         	goto	l562
  7471  004A78                     u5580:
  7472  004A78  C078  F00C         	movff	setup@white,calibrate_white@w
  7473  004A7C  C079  F00D         	movff	setup@white+1,calibrate_white@w+1
  7474  004A80  EC90  F01C         	call	_calibrate_white	;wreg free
  7475  004A84  9E7C               	bcf	124,7,c	;volatile
  7476  004A86  0E29               	movlw	41
  7477  004A88  0100               	movlb	0	; () banked
  7478  004A8A  6F81               	movwf	(??_setup+1)& (0+255),b
  7479  004A8C  0E96               	movlw	150
  7480  004A8E  6F80               	movwf	??_setup& (0+255),b
  7481  004A90  0E7F               	movlw	127
  7482  004A92                     u6097:
  7483  004A92  2EE8               	decfsz	wreg,f,c
  7484  004A94  D7FE               	bra	u6097
  7485  004A96  2F80               	decfsz	??_setup& (0+255),f,b
  7486  004A98  D7FC               	bra	u6097
  7487  004A9A  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7488  004A9C  D7FA               	bra	u6097
  7489  004A9E                     l562:
  7490  004A9E  B68E               	btfsc	142,3,c	;volatile
  7491  004AA0  EF54  F025         	goto	u5591
  7492  004AA4  EF56  F025         	goto	u5590
  7493  004AA8                     u5591:
  7494  004AA8  EF4F  F025         	goto	l562
  7495  004AAC                     u5590:
  7496  004AAC                     
  7497                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7498  004AAC  B68E               	btfsc	142,3,c	;volatile
  7499  004AAE  EF5B  F025         	goto	u5601
  7500  004AB2  EF5D  F025         	goto	u5600
  7501  004AB6                     u5601:
  7502  004AB6  EF97  F025         	goto	l5230
  7503  004ABA                     u5600:
  7504  004ABA  C07A  F06A         	movff	setup@amb,amb_light_measure@amb
  7505  004ABE  C07B  F06B         	movff	setup@amb+1,amb_light_measure@amb+1
  7506  004AC2  EC12  F027         	call	_amb_light_measure	;wreg free
  7507  004AC6  C06A  F082         	movff	?_amb_light_measure,setup@amb_light
  7508  004ACA  C06B  F083         	movff	?_amb_light_measure+1,setup@amb_light+1
  7509  004ACE  9680               	bcf	128,3,c	;volatile
  7510  004AD0  0E29               	movlw	41
  7511  004AD2  0100               	movlb	0	; () banked
  7512  004AD4  6F81               	movwf	(??_setup+1)& (0+255),b
  7513  004AD6  0E96               	movlw	150
  7514  004AD8  6F80               	movwf	??_setup& (0+255),b
  7515  004ADA  0E7F               	movlw	127
  7516  004ADC                     u6107:
  7517  004ADC  2EE8               	decfsz	wreg,f,c
  7518  004ADE  D7FE               	bra	u6107
  7519  004AE0  2F80               	decfsz	??_setup& (0+255),f,b
  7520  004AE2  D7FC               	bra	u6107
  7521  004AE4  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7522  004AE6  D7FA               	bra	u6107
  7523  004AE8  EF97  F025         	goto	l5230
  7524  004AEC                     l568:
  7525  004AEC  8E7C               	bsf	124,7,c	;volatile
  7526  004AEE  A680               	btfss	128,3,c	;volatile
  7527  004AF0  EF7C  F025         	goto	u5611
  7528  004AF4  EF81  F025         	goto	u5610
  7529  004AF8                     u5611:
  7530  004AF8  0100               	movlb	0	; () banked
  7531  004AFA  6B80               	clrf	??_setup& (0+255),b
  7532  004AFC  2B80               	incf	??_setup& (0+255),f,b
  7533  004AFE  EF83  F025         	goto	u5628
  7534  004B02                     u5610:
  7535  004B02  0100               	movlb	0	; () banked
  7536  004B04  6B80               	clrf	??_setup& (0+255),b
  7537  004B06                     u5628:
  7538  004B06  4780               	rlncf	??_setup& (0+255),f,b
  7539  004B08  4780               	rlncf	??_setup& (0+255),f,b
  7540  004B0A  4780               	rlncf	??_setup& (0+255),f,b
  7541  004B0C  5080               	movf	128,w,c	;volatile
  7542  004B0E  1980               	xorwf	??_setup& (0+255),w,b
  7543  004B10  0BF7               	andlw	-9
  7544  004B12  1980               	xorwf	??_setup& (0+255),w,b
  7545  004B14  6E80               	movwf	128,c	;volatile
  7546  004B16                     
  7547                           ; BSR set to: 0
  7548  004B16  0E11               	movlw	17
  7549  004B18  0100               	movlb	0	; () banked
  7550  004B1A  6F81               	movwf	(??_setup+1)& (0+255),b
  7551  004B1C  0E3C               	movlw	60
  7552  004B1E  6F80               	movwf	??_setup& (0+255),b
  7553  004B20  0ECB               	movlw	203
  7554  004B22                     u6117:
  7555  004B22  2EE8               	decfsz	wreg,f,c
  7556  004B24  D7FE               	bra	u6117
  7557  004B26  2F80               	decfsz	??_setup& (0+255),f,b
  7558  004B28  D7FC               	bra	u6117
  7559  004B2A  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7560  004B2C  D7FA               	bra	u6117
  7561  004B2E                     l5230:
  7562  004B2E  A68E               	btfss	142,3,c	;volatile
  7563  004B30  EF9C  F025         	goto	u5631
  7564  004B34  EF9E  F025         	goto	u5630
  7565  004B38                     u5631:
  7566  004B38  EFA5  F025         	goto	l571
  7567  004B3C                     u5630:
  7568  004B3C  B48E               	btfsc	142,2,c	;volatile
  7569  004B3E  EFA3  F025         	goto	u5641
  7570  004B42  EFA5  F025         	goto	u5640
  7571  004B46                     u5641:
  7572  004B46  EF76  F025         	goto	l568
  7573  004B4A                     u5640:
  7574  004B4A                     l571:
  7575                           
  7576                           ;test_and_calibration.c: 22:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7577  004B4A  B68E               	btfsc	142,3,c	;volatile
  7578  004B4C  EFAA  F025         	goto	u5651
  7579  004B50  EFAC  F025         	goto	u5650
  7580  004B54                     u5651:
  7581  004B54  EFB7  F025         	goto	l5238
  7582  004B58                     u5650:
  7583  004B58  C07C  F033         	movff	setup@mL,calibration_motor@mL
  7584  004B5C  C07D  F034         	movff	setup@mL+1,calibration_motor@mL+1
  7585  004B60  C07E  F035         	movff	setup@mR,calibration_motor@mR
  7586  004B64  C07F  F036         	movff	setup@mR+1,calibration_motor@mR+1
  7587  004B68  ECAC  F028         	call	_calibration_motor	;wreg free
  7588  004B6C  9E7C               	bcf	124,7,c	;volatile
  7589  004B6E                     l5238:
  7590                           
  7591                           ;test_and_calibration.c: 23:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7592  004B6E  B48E               	btfsc	142,2,c	;volatile
  7593  004B70  EFBC  F025         	goto	u5661
  7594  004B74  EFBE  F025         	goto	u5660
  7595  004B78                     u5661:
  7596  004B78  EF97  F025         	goto	l5230
  7597  004B7C                     u5660:
  7598  004B7C  9E7C               	bcf	124,7,c	;volatile
  7599  004B7E  9680               	bcf	128,3,c	;volatile
  7600  004B80  0E29               	movlw	41
  7601  004B82  0100               	movlb	0	; () banked
  7602  004B84  6F81               	movwf	(??_setup+1)& (0+255),b
  7603  004B86  0E96               	movlw	150
  7604  004B88  6F80               	movwf	??_setup& (0+255),b
  7605  004B8A  0E7F               	movlw	127
  7606  004B8C                     u6127:
  7607  004B8C  2EE8               	decfsz	wreg,f,c
  7608  004B8E  D7FE               	bra	u6127
  7609  004B90  2F80               	decfsz	??_setup& (0+255),f,b
  7610  004B92  D7FC               	bra	u6127
  7611  004B94  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7612  004B96  D7FA               	bra	u6127
  7613  004B98  C082  F078         	movff	setup@amb_light,?_setup
  7614  004B9C  C083  F079         	movff	setup@amb_light+1,?_setup+1
  7615  004BA0  0012               	return		;funcret
  7616  004BA2                     __end_of_setup:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _calibration_motor *****************
  7620 ;; Defined at:
  7621 ;;		line 128 in file "test_and_calibration.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  mL              2   50[COMRAM] PTR struct DC_motor
  7624 ;;		 -> main@motorL(9), 
  7625 ;;  mR              2   52[COMRAM] PTR struct DC_motor
  7626 ;;		 -> main@motorR(9), 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;		None
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      void 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7638 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;Total ram usage:        6 bytes
  7643 ;; Hardware stack levels used: 1
  7644 ;; Hardware stack levels required when called: 6
  7645 ;; This function calls:
  7646 ;;		_test_action
  7647 ;; This function is called by:
  7648 ;;		_setup
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text29
  7653  005158                     __ptext29:
  7654                           	callstack 0
  7655  005158                     _calibration_motor:
  7656                           	callstack 23
  7657  005158                     l612:
  7658                           
  7659                           ;test_and_calibration.c: 131:         LATDbits.LATD7 = 1;
  7660  005158  8E7C               	bsf	124,7,c	;volatile
  7661                           
  7662                           ;test_and_calibration.c: 132:         LATHbits.LATH3 = 1;
  7663  00515A  8680               	bsf	128,3,c	;volatile
  7664                           
  7665                           ;test_and_calibration.c: 133:         if (!PORTFbits.RF2) {
  7666  00515C  B48E               	btfsc	142,2,c	;volatile
  7667  00515E  EFB3  F028         	goto	u5461
  7668  005162  EFB5  F028         	goto	u5460
  7669  005166                     u5461:
  7670  005166  EFE1  F028         	goto	l613
  7671  00516A                     u5460:
  7672  00516A                     
  7673                           ;test_and_calibration.c: 134:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7674  00516A  0E19               	movlw	25
  7675  00516C  6E38               	movwf	(??_calibration_motor+1)^0,c
  7676  00516E  0E5A               	movlw	90
  7677  005170  6E37               	movwf	??_calibration_motor^0,c
  7678  005172  0EB2               	movlw	178
  7679  005174                     u6137:
  7680  005174  2EE8               	decfsz	wreg,f,c
  7681  005176  D7FE               	bra	u6137
  7682  005178  2E37               	decfsz	??_calibration_motor^0,f,c
  7683  00517A  D7FC               	bra	u6137
  7684  00517C  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7685  00517E  D7FA               	bra	u6137
  7686  005180                     
  7687                           ;test_and_calibration.c: 135:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7688  005180  B48E               	btfsc	142,2,c	;volatile
  7689  005182  EFC5  F028         	goto	u5471
  7690  005186  EFC7  F028         	goto	u5470
  7691  00518A                     u5471:
  7692  00518A  EFD8  F028         	goto	l5038
  7693  00518E                     u5470:
  7694  00518E  9E7C               	bcf	124,7,c	;volatile
  7695  005190  0E19               	movlw	25
  7696  005192  6E38               	movwf	(??_calibration_motor+1)^0,c
  7697  005194  0E5A               	movlw	90
  7698  005196  6E37               	movwf	??_calibration_motor^0,c
  7699  005198  0EB2               	movlw	178
  7700  00519A                     u6147:
  7701  00519A  2EE8               	decfsz	wreg,f,c
  7702  00519C  D7FE               	bra	u6147
  7703  00519E  2E37               	decfsz	??_calibration_motor^0,f,c
  7704  0051A0  D7FC               	bra	u6147
  7705  0051A2  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7706  0051A4  D7FA               	bra	u6147
  7707  0051A6  0E05               	movlw	5
  7708  0051A8  0101               	movlb	1	; () banked
  7709  0051AA  27FE               	addwf	_SENSITIVITY& (0+255),f,b
  7710  0051AC  0E00               	movlw	0
  7711  0051AE  23FF               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7712  0051B0                     l5038:
  7713                           
  7714                           ;test_and_calibration.c: 136:             if (!PORTFbits.RF3){break;}
  7715  0051B0  B68E               	btfsc	142,3,c	;volatile
  7716  0051B2  EFDD  F028         	goto	u5481
  7717  0051B6  EFDF  F028         	goto	u5480
  7718  0051BA                     u5481:
  7719  0051BA  EFE1  F028         	goto	l613
  7720  0051BE                     u5480:
  7721  0051BE  EF16  F029         	goto	l616
  7722  0051C2                     l613:
  7723                           
  7724                           ;test_and_calibration.c: 138:         if (!PORTFbits.RF3) {
  7725  0051C2  B68E               	btfsc	142,3,c	;volatile
  7726  0051C4  EFE6  F028         	goto	u5491
  7727  0051C8  EFE8  F028         	goto	u5490
  7728  0051CC                     u5491:
  7729  0051CC  EFAC  F028         	goto	l612
  7730  0051D0                     u5490:
  7731  0051D0                     
  7732                           ;test_and_calibration.c: 139:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7733  0051D0  0E19               	movlw	25
  7734  0051D2  6E38               	movwf	(??_calibration_motor+1)^0,c
  7735  0051D4  0E5A               	movlw	90
  7736  0051D6  6E37               	movwf	??_calibration_motor^0,c
  7737  0051D8  0EB2               	movlw	178
  7738  0051DA                     u6157:
  7739  0051DA  2EE8               	decfsz	wreg,f,c
  7740  0051DC  D7FE               	bra	u6157
  7741  0051DE  2E37               	decfsz	??_calibration_motor^0,f,c
  7742  0051E0  D7FC               	bra	u6157
  7743  0051E2  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7744  0051E4  D7FA               	bra	u6157
  7745  0051E6                     
  7746                           ;test_and_calibration.c: 140:             if (!PORTFbits.RF2){break;}
  7747  0051E6  B48E               	btfsc	142,2,c	;volatile
  7748  0051E8  EFF8  F028         	goto	u5501
  7749  0051EC  EFFA  F028         	goto	u5500
  7750  0051F0                     u5501:
  7751  0051F0  EFFC  F028         	goto	l618
  7752  0051F4                     u5500:
  7753  0051F4  EF16  F029         	goto	l616
  7754  0051F8                     l618:
  7755                           
  7756                           ;test_and_calibration.c: 141:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7757  0051F8  B68E               	btfsc	142,3,c	;volatile
  7758  0051FA  EF01  F029         	goto	u5511
  7759  0051FE  EF03  F029         	goto	u5510
  7760  005202                     u5511:
  7761  005202  EFAC  F028         	goto	l612
  7762  005206                     u5510:
  7763  005206  9680               	bcf	128,3,c	;volatile
  7764  005208  0E19               	movlw	25
  7765  00520A  6E38               	movwf	(??_calibration_motor+1)^0,c
  7766  00520C  0E5A               	movlw	90
  7767  00520E  6E37               	movwf	??_calibration_motor^0,c
  7768  005210  0EB2               	movlw	178
  7769  005212                     u6167:
  7770  005212  2EE8               	decfsz	wreg,f,c
  7771  005214  D7FE               	bra	u6167
  7772  005216  2E37               	decfsz	??_calibration_motor^0,f,c
  7773  005218  D7FC               	bra	u6167
  7774  00521A  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7775  00521C  D7FA               	bra	u6167
  7776  00521E  0E05               	movlw	5
  7777  005220  0101               	movlb	1	; () banked
  7778  005222  5FFE               	subwf	_SENSITIVITY& (0+255),f,b
  7779  005224  0E00               	movlw	0
  7780  005226  5BFF               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7781  005228  EFAC  F028         	goto	l612
  7782  00522C                     l616:
  7783                           
  7784                           ;test_and_calibration.c: 144:     LATDbits.LATD7 = 0;
  7785  00522C  9E7C               	bcf	124,7,c	;volatile
  7786                           
  7787                           ;test_and_calibration.c: 145:     LATHbits.LATH3 = 0;
  7788  00522E  9680               	bcf	128,3,c	;volatile
  7789  005230                     
  7790                           ;test_and_calibration.c: 146:     test_action(mL, mR);
  7791  005230  C033  F02D         	movff	calibration_motor@mL,test_action@mL
  7792  005234  C034  F02E         	movff	calibration_motor@mL+1,test_action@mL+1
  7793  005238  C035  F02F         	movff	calibration_motor@mR,test_action@mR
  7794  00523C  C036  F030         	movff	calibration_motor@mR+1,test_action@mR+1
  7795  005240  EC7B  F026         	call	_test_action	;wreg free
  7796  005244  0012               	return		;funcret
  7797  005246                     __end_of_calibration_motor:
  7798                           	callstack 0
  7799                           
  7800 ;; *************** function _test_action *****************
  7801 ;; Defined at:
  7802 ;;		line 63 in file "test_and_calibration.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7805 ;;		 -> main@motorL(9), 
  7806 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7807 ;;		 -> main@motorR(9), 
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      void 
  7812 ;; Registers used:
  7813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;Total ram usage:        6 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; Hardware stack levels required when called: 5
  7826 ;; This function calls:
  7827 ;;		_fullSpeedAhead
  7828 ;;		_stop
  7829 ;;		_turn45
  7830 ;; This function is called by:
  7831 ;;		_test_function
  7832 ;;		_calibration_motor
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text30
  7837  004CF6                     __ptext30:
  7838                           	callstack 0
  7839  004CF6                     _test_action:
  7840                           	callstack 24
  7841  004CF6                     
  7842                           ;test_and_calibration.c: 63: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 64: {;test_and_calibration.c: 65:     stop(mL,mR);
  7843  004CF6  C02D  F01A         	movff	test_action@mL,stop@mL
  7844  004CFA  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7845  004CFE  C02F  F01C         	movff	test_action@mR,stop@mR
  7846  004D02  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7847  004D06  EC7B  F02B         	call	_stop	;wreg free
  7848  004D0A                     
  7849                           ;test_and_calibration.c: 66:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7850  004D0A  0EA3               	movlw	163
  7851  004D0C  6E32               	movwf	(??_test_action+1)^0,c
  7852  004D0E  0E57               	movlw	87
  7853  004D10  6E31               	movwf	??_test_action^0,c
  7854  004D12  0E02               	movlw	2
  7855  004D14                     u6177:
  7856  004D14  2EE8               	decfsz	wreg,f,c
  7857  004D16  D7FE               	bra	u6177
  7858  004D18  2E31               	decfsz	??_test_action^0,f,c
  7859  004D1A  D7FC               	bra	u6177
  7860  004D1C  2E32               	decfsz	(??_test_action+1)^0,f,c
  7861  004D1E  D7FA               	bra	u6177
  7862  004D20  D000               	nop2	
  7863  004D22                     
  7864                           ;test_and_calibration.c: 67:     turn45(mL,mR,8,1);
  7865  004D22  C02D  F020         	movff	test_action@mL,turn45@mL
  7866  004D26  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7867  004D2A  C02F  F022         	movff	test_action@mR,turn45@mR
  7868  004D2E  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7869  004D32  0E08               	movlw	8
  7870  004D34  6E24               	movwf	turn45@turn_time^0,c
  7871  004D36  0E01               	movlw	1
  7872  004D38  6E25               	movwf	turn45@direction^0,c
  7873  004D3A  EC0C  F022         	call	_turn45	;wreg free
  7874  004D3E                     
  7875                           ;test_and_calibration.c: 68:     stop(mL,mR);
  7876  004D3E  C02D  F01A         	movff	test_action@mL,stop@mL
  7877  004D42  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7878  004D46  C02F  F01C         	movff	test_action@mR,stop@mR
  7879  004D4A  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7880  004D4E  EC7B  F02B         	call	_stop	;wreg free
  7881  004D52                     
  7882                           ;test_and_calibration.c: 69:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7883  004D52  0EA3               	movlw	163
  7884  004D54  6E32               	movwf	(??_test_action+1)^0,c
  7885  004D56  0E57               	movlw	87
  7886  004D58  6E31               	movwf	??_test_action^0,c
  7887  004D5A  0E02               	movlw	2
  7888  004D5C                     u6187:
  7889  004D5C  2EE8               	decfsz	wreg,f,c
  7890  004D5E  D7FE               	bra	u6187
  7891  004D60  2E31               	decfsz	??_test_action^0,f,c
  7892  004D62  D7FC               	bra	u6187
  7893  004D64  2E32               	decfsz	(??_test_action+1)^0,f,c
  7894  004D66  D7FA               	bra	u6187
  7895  004D68  D000               	nop2	
  7896                           
  7897                           ;test_and_calibration.c: 70:     turn45(mL,mR,8,2);
  7898  004D6A  C02D  F020         	movff	test_action@mL,turn45@mL
  7899  004D6E  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7900  004D72  C02F  F022         	movff	test_action@mR,turn45@mR
  7901  004D76  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7902  004D7A  0E08               	movlw	8
  7903  004D7C  6E24               	movwf	turn45@turn_time^0,c
  7904  004D7E  0E02               	movlw	2
  7905  004D80  6E25               	movwf	turn45@direction^0,c
  7906  004D82  EC0C  F022         	call	_turn45	;wreg free
  7907                           
  7908                           ;test_and_calibration.c: 71:     fullSpeedAhead(mL,mR);
  7909  004D86  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7910  004D8A  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7911  004D8E  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7912  004D92  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7913  004D96  ECB7  F02A         	call	_fullSpeedAhead	;wreg free
  7914  004D9A                     
  7915                           ;test_and_calibration.c: 72:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7916  004D9A  0EF4               	movlw	244
  7917  004D9C  6E32               	movwf	(??_test_action+1)^0,c
  7918  004D9E  0E82               	movlw	130
  7919  004DA0  6E31               	movwf	??_test_action^0,c
  7920  004DA2  0E05               	movlw	5
  7921  004DA4                     u6197:
  7922  004DA4  2EE8               	decfsz	wreg,f,c
  7923  004DA6  D7FE               	bra	u6197
  7924  004DA8  2E31               	decfsz	??_test_action^0,f,c
  7925  004DAA  D7FC               	bra	u6197
  7926  004DAC  2E32               	decfsz	(??_test_action+1)^0,f,c
  7927  004DAE  D7FA               	bra	u6197
  7928  004DB0  F000               	nop	
  7929  004DB2                     
  7930                           ;test_and_calibration.c: 73:     stop(mL,mR);
  7931  004DB2  C02D  F01A         	movff	test_action@mL,stop@mL
  7932  004DB6  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7933  004DBA  C02F  F01C         	movff	test_action@mR,stop@mR
  7934  004DBE  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7935  004DC2  EC7B  F02B         	call	_stop	;wreg free
  7936  004DC6                     
  7937                           ;test_and_calibration.c: 74:     turn45(mL,mR,4,1);
  7938  004DC6  C02D  F020         	movff	test_action@mL,turn45@mL
  7939  004DCA  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7940  004DCE  C02F  F022         	movff	test_action@mR,turn45@mR
  7941  004DD2  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7942  004DD6  0E04               	movlw	4
  7943  004DD8  6E24               	movwf	turn45@turn_time^0,c
  7944  004DDA  0E01               	movlw	1
  7945  004DDC  6E25               	movwf	turn45@direction^0,c
  7946  004DDE  EC0C  F022         	call	_turn45	;wreg free
  7947  004DE2                     
  7948                           ;test_and_calibration.c: 75:     fullSpeedAhead(mL,mR);
  7949  004DE2  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7950  004DE6  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7951  004DEA  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7952  004DEE  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7953  004DF2  ECB7  F02A         	call	_fullSpeedAhead	;wreg free
  7954                           
  7955                           ;test_and_calibration.c: 76:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7956  004DF6  0EF4               	movlw	244
  7957  004DF8  6E32               	movwf	(??_test_action+1)^0,c
  7958  004DFA  0E82               	movlw	130
  7959  004DFC  6E31               	movwf	??_test_action^0,c
  7960  004DFE  0E05               	movlw	5
  7961  004E00                     u6207:
  7962  004E00  2EE8               	decfsz	wreg,f,c
  7963  004E02  D7FE               	bra	u6207
  7964  004E04  2E31               	decfsz	??_test_action^0,f,c
  7965  004E06  D7FC               	bra	u6207
  7966  004E08  2E32               	decfsz	(??_test_action+1)^0,f,c
  7967  004E0A  D7FA               	bra	u6207
  7968  004E0C  F000               	nop	
  7969  004E0E                     
  7970                           ;test_and_calibration.c: 77:     stop(mL,mR);
  7971  004E0E  C02D  F01A         	movff	test_action@mL,stop@mL
  7972  004E12  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7973  004E16  C02F  F01C         	movff	test_action@mR,stop@mR
  7974  004E1A  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7975  004E1E  EC7B  F02B         	call	_stop	;wreg free
  7976  004E22  0012               	return		;funcret
  7977  004E24                     __end_of_test_action:
  7978                           	callstack 0
  7979                           
  7980 ;; *************** function _turn45 *****************
  7981 ;; Defined at:
  7982 ;;		line 88 in file "dc_motor.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7985 ;;		 -> main@motorL(9), 
  7986 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7987 ;;		 -> main@motorR(9), 
  7988 ;;  turn_time       1   35[COMRAM] unsigned char 
  7989 ;;  direction       1   36[COMRAM] unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  i               2   41[COMRAM] unsigned int 
  7992 ;;  i               2   39[COMRAM] unsigned int 
  7993 ;;  i               1   43[COMRAM] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1    wreg      void 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7998 ;; Tracked objects:
  7999 ;;		On entry : 0/0
  8000 ;;		On exit  : 0/0
  8001 ;;		Unchanged: 0/0
  8002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8003 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8004 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8006 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8007 ;;Total ram usage:       13 bytes
  8008 ;; Hardware stack levels used: 1
  8009 ;; Hardware stack levels required when called: 4
  8010 ;; This function calls:
  8011 ;;		_setMotorPWM
  8012 ;;		_stop
  8013 ;; This function is called by:
  8014 ;;		_turning_action
  8015 ;;		_goback
  8016 ;;		_test_action
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           	psect	text31
  8021  004418                     __ptext31:
  8022                           	callstack 0
  8023  004418                     _turn45:
  8024                           	callstack 25
  8025  004418                     
  8026                           ;dc_motor.c: 88: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 89: {;dc_motor.c: 91:     unsigned char i =
      +                           0;
  8027  004418  0E00               	movlw	0
  8028  00441A  6E2C               	movwf	turn45@i^0,c
  8029                           
  8030                           ;dc_motor.c: 92:     for (i = 0; i < turn_time; i++){
  8031  00441C  0E00               	movlw	0
  8032  00441E  6E2C               	movwf	turn45@i^0,c
  8033  004420  EFDA  F022         	goto	l4280
  8034  004424                     l4232:
  8035                           
  8036                           ;dc_motor.c: 93:         mL->direction=1;
  8037  004424  EE20 F001          	lfsr	2,1
  8038  004428  5020               	movf	turn45@mL^0,w,c
  8039  00442A  26D9               	addwf	fsr2l,f,c
  8040  00442C  5021               	movf	(turn45@mL+1)^0,w,c
  8041  00442E  22DA               	addwfc	fsr2h,f,c
  8042  004430  0E01               	movlw	1
  8043  004432  6EDF               	movwf	indf2,c
  8044                           
  8045                           ;dc_motor.c: 94:         mR->direction=1;
  8046  004434  EE20 F001          	lfsr	2,1
  8047  004438  5022               	movf	turn45@mR^0,w,c
  8048  00443A  26D9               	addwf	fsr2l,f,c
  8049  00443C  5023               	movf	(turn45@mR+1)^0,w,c
  8050  00443E  22DA               	addwfc	fsr2h,f,c
  8051  004440  0E01               	movlw	1
  8052  004442  6EDF               	movwf	indf2,c
  8053  004444                     
  8054                           ;dc_motor.c: 95:         if (direction == 1){
  8055  004444  0425               	decf	turn45@direction^0,w,c
  8056  004446  A4D8               	btfss	status,2,c
  8057  004448  EF28  F022         	goto	u4241
  8058  00444C  EF2A  F022         	goto	u4240
  8059  004450                     u4241:
  8060  004450  EF85  F022         	goto	l4256
  8061  004454                     u4240:
  8062  004454  EF4B  F022         	goto	l4246
  8063  004458                     l4238:
  8064                           
  8065                           ;dc_motor.c: 97:                 mR->power += 5;
  8066  004458  C022  FFD9         	movff	turn45@mR,fsr2l
  8067  00445C  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8068  004460  0E05               	movlw	5
  8069  004462  26DF               	addwf	indf2,f,c
  8070                           
  8071                           ;dc_motor.c: 98:                 mL->power = 0;
  8072  004464  C020  FFD9         	movff	turn45@mL,fsr2l
  8073  004468  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8074  00446C  0E00               	movlw	0
  8075  00446E  6EDF               	movwf	indf2,c
  8076  004470                     
  8077                           ;dc_motor.c: 99:                 setMotorPWM(mL);
  8078  004470  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  8079  004474  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  8080  004478  EC96  F01E         	call	_setMotorPWM	;wreg free
  8081  00447C                     
  8082                           ;dc_motor.c: 100:                 setMotorPWM(mR);
  8083  00447C  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  8084  004480  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  8085  004484  EC96  F01E         	call	_setMotorPWM	;wreg free
  8086  004488                     
  8087                           ;dc_motor.c: 101:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  8088  004488  0ED0               	movlw	208
  8089  00448A  6E26               	movwf	??_turn45^0,c
  8090  00448C  0ECA               	movlw	202
  8091  00448E                     u6217:
  8092  00448E  2EE8               	decfsz	wreg,f,c
  8093  004490  D7FE               	bra	u6217
  8094  004492  2E26               	decfsz	??_turn45^0,f,c
  8095  004494  D7FC               	bra	u6217
  8096  004496                     l4246:
  8097                           
  8098                           ;dc_motor.c: 96:             while (mR->power <50){
  8099  004496  C022  FFD9         	movff	turn45@mR,fsr2l
  8100  00449A  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8101  00449E  0E31               	movlw	49
  8102  0044A0  64DF               	cpfsgt	indf2,c
  8103  0044A2  EF55  F022         	goto	u4251
  8104  0044A6  EF57  F022         	goto	u4250
  8105  0044AA                     u4251:
  8106  0044AA  EF2C  F022         	goto	l4238
  8107  0044AE                     u4250:
  8108  0044AE                     
  8109                           ;dc_motor.c: 103:             for(unsigned int i = 0; i<SENSITIVITY + 15; i++){_delay((u
      +                          nsigned long)((1)*(64000000/4000.0)));}
  8110  0044AE  0E00               	movlw	0
  8111  0044B0  6E29               	movwf	(turn45@i_1335+1)^0,c
  8112  0044B2  0E00               	movlw	0
  8113  0044B4  6E28               	movwf	turn45@i_1335^0,c
  8114  0044B6  EF67  F022         	goto	l271
  8115  0044BA                     l4250:
  8116                           
  8117                           ; BSR set to: 1
  8118  0044BA  0E15               	movlw	21
  8119  0044BC  6E26               	movwf	??_turn45^0,c
  8120  0044BE  0EC6               	movlw	198
  8121  0044C0                     u6227:
  8122  0044C0  2EE8               	decfsz	wreg,f,c
  8123  0044C2  D7FE               	bra	u6227
  8124  0044C4  2E26               	decfsz	??_turn45^0,f,c
  8125  0044C6  D7FC               	bra	u6227
  8126  0044C8  D000               	nop2	
  8127  0044CA  4A28               	infsnz	turn45@i_1335^0,f,c
  8128  0044CC  2A29               	incf	(turn45@i_1335+1)^0,f,c
  8129  0044CE                     l271:
  8130  0044CE  0E0F               	movlw	15
  8131  0044D0  0101               	movlb	1	; () banked
  8132  0044D2  25FE               	addwf	_SENSITIVITY& (0+255),w,b
  8133  0044D4  6E26               	movwf	??_turn45^0,c
  8134  0044D6  0E00               	movlw	0
  8135  0044D8  21FF               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
  8136  0044DA  6E27               	movwf	(??_turn45+1)^0,c
  8137  0044DC  5026               	movf	??_turn45^0,w,c
  8138  0044DE  5C28               	subwf	turn45@i_1335^0,w,c
  8139  0044E0  5027               	movf	(??_turn45+1)^0,w,c
  8140  0044E2  5829               	subwfb	(turn45@i_1335+1)^0,w,c
  8141  0044E4  A0D8               	btfss	status,0,c
  8142  0044E6  EF77  F022         	goto	u4261
  8143  0044EA  EF79  F022         	goto	u4260
  8144  0044EE                     u4261:
  8145  0044EE  EF5D  F022         	goto	l4250
  8146  0044F2                     u4260:
  8147  0044F2                     l4254:
  8148                           
  8149                           ; BSR set to: 1
  8150                           ;dc_motor.c: 104:             stop(mL,mR);
  8151  0044F2  C020  F01A         	movff	turn45@mL,stop@mL
  8152  0044F6  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  8153  0044FA  C022  F01C         	movff	turn45@mR,stop@mR
  8154  0044FE  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  8155  004502  EC7B  F02B         	call	_stop	;wreg free
  8156                           
  8157                           ;dc_motor.c: 105:         }
  8158  004506  EFD9  F022         	goto	l4278
  8159  00450A                     l4256:
  8160  00450A  0E02               	movlw	2
  8161  00450C  1825               	xorwf	turn45@direction^0,w,c
  8162  00450E  A4D8               	btfss	status,2,c
  8163  004510  EF8C  F022         	goto	u4271
  8164  004514  EF8E  F022         	goto	u4270
  8165  004518                     u4271:
  8166  004518  EFD9  F022         	goto	l4278
  8167  00451C                     u4270:
  8168  00451C  EFAF  F022         	goto	l4268
  8169  004520                     l4260:
  8170                           
  8171                           ;dc_motor.c: 108:                 mL->power += 5;
  8172  004520  C020  FFD9         	movff	turn45@mL,fsr2l
  8173  004524  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8174  004528  0E05               	movlw	5
  8175  00452A  26DF               	addwf	indf2,f,c
  8176                           
  8177                           ;dc_motor.c: 109:                 mR->power = 0;
  8178  00452C  C022  FFD9         	movff	turn45@mR,fsr2l
  8179  004530  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8180  004534  0E00               	movlw	0
  8181  004536  6EDF               	movwf	indf2,c
  8182  004538                     
  8183                           ;dc_motor.c: 110:                 setMotorPWM(mL);
  8184  004538  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  8185  00453C  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  8186  004540  EC96  F01E         	call	_setMotorPWM	;wreg free
  8187  004544                     
  8188                           ;dc_motor.c: 111:                 setMotorPWM(mR);
  8189  004544  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  8190  004548  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  8191  00454C  EC96  F01E         	call	_setMotorPWM	;wreg free
  8192  004550                     
  8193                           ;dc_motor.c: 112:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  8194  004550  0ED0               	movlw	208
  8195  004552  6E26               	movwf	??_turn45^0,c
  8196  004554  0ECA               	movlw	202
  8197  004556                     u6237:
  8198  004556  2EE8               	decfsz	wreg,f,c
  8199  004558  D7FE               	bra	u6237
  8200  00455A  2E26               	decfsz	??_turn45^0,f,c
  8201  00455C  D7FC               	bra	u6237
  8202  00455E                     l4268:
  8203                           
  8204                           ;dc_motor.c: 107:             while (mL->power <50){
  8205  00455E  C020  FFD9         	movff	turn45@mL,fsr2l
  8206  004562  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8207  004566  0E31               	movlw	49
  8208  004568  64DF               	cpfsgt	indf2,c
  8209  00456A  EFB9  F022         	goto	u4281
  8210  00456E  EFBB  F022         	goto	u4280
  8211  004572                     u4281:
  8212  004572  EF90  F022         	goto	l4260
  8213  004576                     u4280:
  8214  004576                     
  8215                           ;dc_motor.c: 114:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  8216  004576  0E00               	movlw	0
  8217  004578  6E2B               	movwf	(turn45@i_1337+1)^0,c
  8218  00457A  0E00               	movlw	0
  8219  00457C  6E2A               	movwf	turn45@i_1337^0,c
  8220  00457E  EFCB  F022         	goto	l279
  8221  004582                     l4272:
  8222                           
  8223                           ; BSR set to: 1
  8224  004582  0E15               	movlw	21
  8225  004584  6E26               	movwf	??_turn45^0,c
  8226  004586  0EC6               	movlw	198
  8227  004588                     u6247:
  8228  004588  2EE8               	decfsz	wreg,f,c
  8229  00458A  D7FE               	bra	u6247
  8230  00458C  2E26               	decfsz	??_turn45^0,f,c
  8231  00458E  D7FC               	bra	u6247
  8232  004590  D000               	nop2	
  8233  004592  4A2A               	infsnz	turn45@i_1337^0,f,c
  8234  004594  2A2B               	incf	(turn45@i_1337+1)^0,f,c
  8235  004596                     l279:
  8236  004596  0101               	movlb	1	; () banked
  8237  004598  51FE               	movf	_SENSITIVITY& (0+255),w,b
  8238  00459A  5C2A               	subwf	turn45@i_1337^0,w,c
  8239  00459C  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  8240  00459E  582B               	subwfb	(turn45@i_1337+1)^0,w,c
  8241  0045A0  A0D8               	btfss	status,0,c
  8242  0045A2  EFD5  F022         	goto	u4291
  8243  0045A6  EFD7  F022         	goto	u4290
  8244  0045AA                     u4291:
  8245  0045AA  EFC1  F022         	goto	l4272
  8246  0045AE                     u4290:
  8247  0045AE  EF79  F022         	goto	l4254
  8248  0045B2                     l4278:
  8249                           
  8250                           ;dc_motor.c: 117:     }
  8251  0045B2  2A2C               	incf	turn45@i^0,f,c
  8252  0045B4                     l4280:
  8253  0045B4  5024               	movf	turn45@turn_time^0,w,c
  8254  0045B6  5C2C               	subwf	turn45@i^0,w,c
  8255  0045B8  A0D8               	btfss	status,0,c
  8256  0045BA  EFE1  F022         	goto	u4301
  8257  0045BE  EFE3  F022         	goto	u4300
  8258  0045C2                     u4301:
  8259  0045C2  EF12  F022         	goto	l4232
  8260  0045C6                     u4300:
  8261  0045C6  0012               	return		;funcret
  8262  0045C8                     __end_of_turn45:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _stop *****************
  8266 ;; Defined at:
  8267 ;;		line 76 in file "dc_motor.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8270 ;;		 -> main@motorL(9), 
  8271 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8272 ;;		 -> main@motorR(9), 
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8284 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8287 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8288 ;;Total ram usage:        6 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 3
  8291 ;; This function calls:
  8292 ;;		_setMotorPWM
  8293 ;; This function is called by:
  8294 ;;		_turn45
  8295 ;;		_fullSpeedBack
  8296 ;;		_main
  8297 ;;		_short_burst
  8298 ;;		_goback
  8299 ;;		_test_action
  8300 ;;		_test_function
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text32
  8305  0056F6                     __ptext32:
  8306                           	callstack 0
  8307  0056F6                     _stop:
  8308                           	callstack 25
  8309  0056F6                     
  8310                           ;dc_motor.c: 76: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: {;d
      +                          c_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8311  0056F6  EFB5  F02B         	goto	l4002
  8312  0056FA                     l3988:
  8313                           
  8314                           ;dc_motor.c: 79:         if (mL->power !=0){mL->power -= 2;}
  8315  0056FA  C01A  FFD9         	movff	stop@mL,fsr2l
  8316  0056FE  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8317  005702  50DF               	movf	indf2,w,c
  8318  005704  B4D8               	btfsc	status,2,c
  8319  005706  EF87  F02B         	goto	u3921
  8320  00570A  EF89  F02B         	goto	u3920
  8321  00570E                     u3921:
  8322  00570E  EF8F  F02B         	goto	l3992
  8323  005712                     u3920:
  8324  005712  C01A  FFD9         	movff	stop@mL,fsr2l
  8325  005716  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8326  00571A  0E02               	movlw	2
  8327  00571C  5EDF               	subwf	indf2,f,c
  8328  00571E                     l3992:
  8329                           
  8330                           ;dc_motor.c: 80:         if (mR->power !=0){mR->power -= 2;}
  8331  00571E  C01C  FFD9         	movff	stop@mR,fsr2l
  8332  005722  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8333  005726  50DF               	movf	indf2,w,c
  8334  005728  B4D8               	btfsc	status,2,c
  8335  00572A  EF99  F02B         	goto	u3931
  8336  00572E  EF9B  F02B         	goto	u3930
  8337  005732                     u3931:
  8338  005732  EFA1  F02B         	goto	l3996
  8339  005736                     u3930:
  8340  005736  C01C  FFD9         	movff	stop@mR,fsr2l
  8341  00573A  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8342  00573E  0E02               	movlw	2
  8343  005740  5EDF               	subwf	indf2,f,c
  8344  005742                     l3996:
  8345                           
  8346                           ;dc_motor.c: 81:         setMotorPWM(mL);
  8347  005742  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  8348  005746  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  8349  00574A  EC96  F01E         	call	_setMotorPWM	;wreg free
  8350  00574E                     
  8351                           ;dc_motor.c: 82:         setMotorPWM(mR);
  8352  00574E  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  8353  005752  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  8354  005756  EC96  F01E         	call	_setMotorPWM	;wreg free
  8355  00575A                     
  8356                           ;dc_motor.c: 83:         _delay((unsigned long)((5)*(64000000/4000.0)));
  8357  00575A  0E68               	movlw	104
  8358  00575C  6E1E               	movwf	??_stop^0,c
  8359  00575E  0EE4               	movlw	228
  8360  005760                     u6257:
  8361  005760  2EE8               	decfsz	wreg,f,c
  8362  005762  D7FE               	bra	u6257
  8363  005764  2E1E               	decfsz	??_stop^0,f,c
  8364  005766  D7FC               	bra	u6257
  8365  005768  D000               	nop2	
  8366  00576A                     l4002:
  8367                           
  8368                           ;dc_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8369  00576A  C01A  FFD9         	movff	stop@mL,fsr2l
  8370  00576E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8371  005772  50DF               	movf	indf2,w,c
  8372  005774  A4D8               	btfss	status,2,c
  8373  005776  EFBF  F02B         	goto	u3941
  8374  00577A  EFC1  F02B         	goto	u3940
  8375  00577E                     u3941:
  8376  00577E  EF7D  F02B         	goto	l3988
  8377  005782                     u3940:
  8378  005782  C01C  FFD9         	movff	stop@mR,fsr2l
  8379  005786  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8380  00578A  50DF               	movf	indf2,w,c
  8381  00578C  A4D8               	btfss	status,2,c
  8382  00578E  EFCB  F02B         	goto	u3951
  8383  005792  EFCD  F02B         	goto	u3950
  8384  005796                     u3951:
  8385  005796  EF7D  F02B         	goto	l3988
  8386  00579A                     u3950:
  8387  00579A                     
  8388                           ;dc_motor.c: 85:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8389  00579A  0E29               	movlw	41
  8390  00579C  6E1F               	movwf	(??_stop+1)^0,c
  8391  00579E  0E96               	movlw	150
  8392  0057A0  6E1E               	movwf	??_stop^0,c
  8393  0057A2  0E7F               	movlw	127
  8394  0057A4                     u6267:
  8395  0057A4  2EE8               	decfsz	wreg,f,c
  8396  0057A6  D7FE               	bra	u6267
  8397  0057A8  2E1E               	decfsz	??_stop^0,f,c
  8398  0057AA  D7FC               	bra	u6267
  8399  0057AC  2E1F               	decfsz	(??_stop+1)^0,f,c
  8400  0057AE  D7FA               	bra	u6267
  8401  0057B0  F000               	nop	
  8402  0057B2  0012               	return		;funcret
  8403  0057B4                     __end_of_stop:
  8404                           	callstack 0
  8405                           
  8406 ;; *************** function _fullSpeedAhead *****************
  8407 ;; Defined at:
  8408 ;;		line 121 in file "dc_motor.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8411 ;;		 -> main@motorL(9), 
  8412 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8413 ;;		 -> main@motorR(9), 
  8414 ;; Auto vars:     Size  Location     Type
  8415 ;;		None
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8428 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8429 ;;Total ram usage:        5 bytes
  8430 ;; Hardware stack levels used: 1
  8431 ;; Hardware stack levels required when called: 3
  8432 ;; This function calls:
  8433 ;;		_setMotorPWM
  8434 ;; This function is called by:
  8435 ;;		_main
  8436 ;;		_short_burst
  8437 ;;		_goback
  8438 ;;		_test_action
  8439 ;;		_test_function
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text33
  8444  00556E                     __ptext33:
  8445                           	callstack 0
  8446  00556E                     _fullSpeedAhead:
  8447                           	callstack 25
  8448  00556E                     
  8449                           ;dc_motor.c: 121: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 122: {;dc_motor.c: 123:     mL->direction=1;
  8450  00556E  EE20 F001          	lfsr	2,1
  8451  005572  501A               	movf	fullSpeedAhead@mL^0,w,c
  8452  005574  26D9               	addwf	fsr2l,f,c
  8453  005576  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8454  005578  22DA               	addwfc	fsr2h,f,c
  8455  00557A  0E01               	movlw	1
  8456  00557C  6EDF               	movwf	indf2,c
  8457                           
  8458                           ;dc_motor.c: 124:     mR->direction=1;
  8459  00557E  EE20 F001          	lfsr	2,1
  8460  005582  501C               	movf	fullSpeedAhead@mR^0,w,c
  8461  005584  26D9               	addwf	fsr2l,f,c
  8462  005586  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8463  005588  22DA               	addwfc	fsr2h,f,c
  8464  00558A  0E01               	movlw	1
  8465  00558C  6EDF               	movwf	indf2,c
  8466                           
  8467                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8468  00558E  EF00  F02B         	goto	l4298
  8469  005592                     l4284:
  8470                           
  8471                           ;dc_motor.c: 126:         if (mL->power<30) {mL->power += 2;}
  8472  005592  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8473  005596  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8474  00559A  0E1E               	movlw	30
  8475  00559C  60DF               	cpfslt	indf2,c
  8476  00559E  EFD3  F02A         	goto	u4311
  8477  0055A2  EFD5  F02A         	goto	u4310
  8478  0055A6                     u4311:
  8479  0055A6  EFDB  F02A         	goto	l4288
  8480  0055AA                     u4310:
  8481  0055AA  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8482  0055AE  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8483  0055B2  0E02               	movlw	2
  8484  0055B4  26DF               	addwf	indf2,f,c
  8485  0055B6                     l4288:
  8486                           
  8487                           ;dc_motor.c: 127:         if (mR->power<30) {mR->power += 2;}
  8488  0055B6  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8489  0055BA  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8490  0055BE  0E1E               	movlw	30
  8491  0055C0  60DF               	cpfslt	indf2,c
  8492  0055C2  EFE5  F02A         	goto	u4321
  8493  0055C6  EFE7  F02A         	goto	u4320
  8494  0055CA                     u4321:
  8495  0055CA  EFED  F02A         	goto	l4292
  8496  0055CE                     u4320:
  8497  0055CE  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8498  0055D2  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8499  0055D6  0E02               	movlw	2
  8500  0055D8  26DF               	addwf	indf2,f,c
  8501  0055DA                     l4292:
  8502                           
  8503                           ;dc_motor.c: 128:         setMotorPWM(mL);
  8504  0055DA  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8505  0055DE  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8506  0055E2  EC96  F01E         	call	_setMotorPWM	;wreg free
  8507  0055E6                     
  8508                           ;dc_motor.c: 129:         setMotorPWM(mR);
  8509  0055E6  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8510  0055EA  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8511  0055EE  EC96  F01E         	call	_setMotorPWM	;wreg free
  8512  0055F2                     
  8513                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8514  0055F2  0ED0               	movlw	208
  8515  0055F4  6E1E               	movwf	??_fullSpeedAhead^0,c
  8516  0055F6  0ECA               	movlw	202
  8517  0055F8                     u6277:
  8518  0055F8  2EE8               	decfsz	wreg,f,c
  8519  0055FA  D7FE               	bra	u6277
  8520  0055FC  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8521  0055FE  D7FC               	bra	u6277
  8522  005600                     l4298:
  8523                           
  8524                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8525  005600  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8526  005604  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8527  005608  0E1D               	movlw	29
  8528  00560A  64DF               	cpfsgt	indf2,c
  8529  00560C  EF0A  F02B         	goto	u4331
  8530  005610  EF0C  F02B         	goto	u4330
  8531  005614                     u4331:
  8532  005614  EFC9  F02A         	goto	l4284
  8533  005618                     u4330:
  8534  005618  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8535  00561C  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8536  005620  0E1D               	movlw	29
  8537  005622  64DF               	cpfsgt	indf2,c
  8538  005624  EF16  F02B         	goto	u4341
  8539  005628  EF18  F02B         	goto	u4340
  8540  00562C                     u4341:
  8541  00562C  EFC9  F02A         	goto	l4284
  8542  005630                     u4340:
  8543  005630  0012               	return		;funcret
  8544  005632                     __end_of_fullSpeedAhead:
  8545                           	callstack 0
  8546                           
  8547 ;; *************** function _setMotorPWM *****************
  8548 ;; Defined at:
  8549 ;;		line 56 in file "dc_motor.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8552 ;;		 -> main@motorR(9), main@motorL(9), 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;  PWMduty         2   23[COMRAM] int 
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8566 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8568 ;;Total ram usage:       11 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 2
  8571 ;; This function calls:
  8572 ;;		___awdiv
  8573 ;;		___wmul
  8574 ;; This function is called by:
  8575 ;;		_stop
  8576 ;;		_turn45
  8577 ;;		_fullSpeedAhead
  8578 ;;		_fullSpeedBack
  8579 ;; This function uses a non-reentrant model
  8580 ;;
  8581                           
  8582                           	psect	text34
  8583  003D2C                     __ptext34:
  8584                           	callstack 0
  8585  003D2C                     _setMotorPWM:
  8586                           	callstack 25
  8587  003D2C                     
  8588                           ;dc_motor.c: 56: void setMotorPWM(struct DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58: 
      +                           int PWMduty;;dc_motor.c: 59:  if (m->direction){
  8589  003D2C  EE20 F001          	lfsr	2,1
  8590  003D30  500F               	movf	setMotorPWM@m^0,w,c
  8591  003D32  26D9               	addwf	fsr2l,f,c
  8592  003D34  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8593  003D36  22DA               	addwfc	fsr2h,f,c
  8594  003D38  50DF               	movf	indf2,w,c
  8595  003D3A  B4D8               	btfsc	status,2,c
  8596  003D3C  EFA2  F01E         	goto	u3431
  8597  003D40  EFA4  F01E         	goto	u3430
  8598  003D44                     u3431:
  8599  003D44  EFD5  F01E         	goto	l3702
  8600  003D48                     u3430:
  8601  003D48                     
  8602                           ;dc_motor.c: 61:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8603  003D48  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8604  003D4C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8605  003D50  50DF               	movf	indf2,w,c
  8606  003D52  6E11               	movwf	??_setMotorPWM^0,c
  8607  003D54  5011               	movf	??_setMotorPWM^0,w,c
  8608  003D56  6E01               	movwf	___wmul@multiplier^0,c
  8609  003D58  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8610  003D5A  EE20 F007          	lfsr	2,7
  8611  003D5E  500F               	movf	setMotorPWM@m^0,w,c
  8612  003D60  26D9               	addwf	fsr2l,f,c
  8613  003D62  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8614  003D64  22DA               	addwfc	fsr2h,f,c
  8615  003D66  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8616  003D6A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8617  003D6E  EC60  F02F         	call	___wmul	;wreg free
  8618  003D72  C001  F007         	movff	?___wmul,___awdiv@dividend
  8619  003D76  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8620  003D7A  0E00               	movlw	0
  8621  003D7C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8622  003D7E  0E64               	movlw	100
  8623  003D80  6E09               	movwf	___awdiv@divisor^0,c
  8624  003D82  EC19  F02B         	call	___awdiv	;wreg free
  8625  003D86  EE20 F007          	lfsr	2,7
  8626  003D8A  500F               	movf	setMotorPWM@m^0,w,c
  8627  003D8C  26D9               	addwf	fsr2l,f,c
  8628  003D8E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8629  003D90  22DA               	addwfc	fsr2h,f,c
  8630  003D92  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8631  003D96  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8632  003D9A  5007               	movf	?___awdiv^0,w,c
  8633  003D9C  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8634  003D9E  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8635  003DA0  5008               	movf	(?___awdiv+1)^0,w,c
  8636  003DA2  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8637  003DA4  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8638                           
  8639                           ;dc_motor.c: 62:  }
  8640  003DA6  EFF8  F01E         	goto	l3704
  8641  003DAA                     l3702:
  8642                           
  8643                           ;dc_motor.c: 65:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8644  003DAA  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8645  003DAE  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8646  003DB2  50DF               	movf	indf2,w,c
  8647  003DB4  6E11               	movwf	??_setMotorPWM^0,c
  8648  003DB6  5011               	movf	??_setMotorPWM^0,w,c
  8649  003DB8  6E01               	movwf	___wmul@multiplier^0,c
  8650  003DBA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8651  003DBC  EE20 F007          	lfsr	2,7
  8652  003DC0  500F               	movf	setMotorPWM@m^0,w,c
  8653  003DC2  26D9               	addwf	fsr2l,f,c
  8654  003DC4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8655  003DC6  22DA               	addwfc	fsr2h,f,c
  8656  003DC8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8657  003DCC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8658  003DD0  EC60  F02F         	call	___wmul	;wreg free
  8659  003DD4  C001  F007         	movff	?___wmul,___awdiv@dividend
  8660  003DD8  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8661  003DDC  0E00               	movlw	0
  8662  003DDE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8663  003DE0  0E64               	movlw	100
  8664  003DE2  6E09               	movwf	___awdiv@divisor^0,c
  8665  003DE4  EC19  F02B         	call	___awdiv	;wreg free
  8666  003DE8  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8667  003DEC  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8668  003DF0                     l3704:
  8669                           
  8670                           ;dc_motor.c: 67:  *(m->dutyHighByte) = PWMduty;
  8671  003DF0  EE20 F002          	lfsr	2,2
  8672  003DF4  500F               	movf	setMotorPWM@m^0,w,c
  8673  003DF6  26D9               	addwf	fsr2l,f,c
  8674  003DF8  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8675  003DFA  22DA               	addwfc	fsr2h,f,c
  8676  003DFC  CFDE F011          	movff	postinc2,??_setMotorPWM
  8677  003E00  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8678  003E04  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8679  003E08  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8680  003E0C  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8681  003E10                     
  8682                           ;dc_motor.c: 68:  if (m->direction){
  8683  003E10  EE20 F001          	lfsr	2,1
  8684  003E14  500F               	movf	setMotorPWM@m^0,w,c
  8685  003E16  26D9               	addwf	fsr2l,f,c
  8686  003E18  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8687  003E1A  22DA               	addwfc	fsr2h,f,c
  8688  003E1C  50DF               	movf	indf2,w,c
  8689  003E1E  B4D8               	btfsc	status,2,c
  8690  003E20  EF14  F01F         	goto	u3441
  8691  003E24  EF16  F01F         	goto	u3440
  8692  003E28                     u3441:
  8693  003E28  EF4B  F01F         	goto	l3710
  8694  003E2C                     u3440:
  8695  003E2C                     
  8696                           ;dc_motor.c: 69:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8697  003E2C  EE20 F004          	lfsr	2,4
  8698  003E30  500F               	movf	setMotorPWM@m^0,w,c
  8699  003E32  26D9               	addwf	fsr2l,f,c
  8700  003E34  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8701  003E36  22DA               	addwfc	fsr2h,f,c
  8702  003E38  CFDE F011          	movff	postinc2,??_setMotorPWM
  8703  003E3C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8704  003E40  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8705  003E44  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8706  003E48  EE10 F004          	lfsr	1,4
  8707  003E4C  500F               	movf	setMotorPWM@m^0,w,c
  8708  003E4E  26E1               	addwf	fsr1l,f,c
  8709  003E50  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8710  003E52  22E2               	addwfc	fsr1h,f,c
  8711  003E54  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8712  003E58  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8713  003E5C  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8714  003E60  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8715  003E64  50E7               	movf	indf1,w,c
  8716  003E66  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8717  003E68  EE10 F006          	lfsr	1,6
  8718  003E6C  500F               	movf	setMotorPWM@m^0,w,c
  8719  003E6E  26E1               	addwf	fsr1l,f,c
  8720  003E70  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8721  003E72  22E2               	addwfc	fsr1h,f,c
  8722  003E74  50E7               	movf	indf1,w,c
  8723  003E76  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8724  003E78  0E01               	movlw	1
  8725  003E7A  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8726  003E7C  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8727  003E7E  EF43  F01F         	goto	u3454
  8728  003E82                     u3455:
  8729  003E82  90D8               	bcf	status,0,c
  8730  003E84  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8731  003E86                     u3454:
  8732  003E86  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8733  003E88  EF41  F01F         	goto	u3455
  8734  003E8C  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8735  003E8E  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8736  003E90  6EDF               	movwf	indf2,c
  8737                           
  8738                           ;dc_motor.c: 70:  } else {
  8739  003E92  EF7F  F01F         	goto	l254
  8740  003E96                     l3710:
  8741                           
  8742                           ;dc_motor.c: 71:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8743  003E96  EE20 F004          	lfsr	2,4
  8744  003E9A  500F               	movf	setMotorPWM@m^0,w,c
  8745  003E9C  26D9               	addwf	fsr2l,f,c
  8746  003E9E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8747  003EA0  22DA               	addwfc	fsr2h,f,c
  8748  003EA2  CFDE F011          	movff	postinc2,??_setMotorPWM
  8749  003EA6  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8750  003EAA  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8751  003EAE  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8752  003EB2  EE10 F004          	lfsr	1,4
  8753  003EB6  500F               	movf	setMotorPWM@m^0,w,c
  8754  003EB8  26E1               	addwf	fsr1l,f,c
  8755  003EBA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8756  003EBC  22E2               	addwfc	fsr1h,f,c
  8757  003EBE  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8758  003EC2  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8759  003EC6  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8760  003ECA  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8761  003ECE  50E7               	movf	indf1,w,c
  8762  003ED0  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8763  003ED2  EE10 F006          	lfsr	1,6
  8764  003ED6  500F               	movf	setMotorPWM@m^0,w,c
  8765  003ED8  26E1               	addwf	fsr1l,f,c
  8766  003EDA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8767  003EDC  22E2               	addwfc	fsr1h,f,c
  8768  003EDE  50E7               	movf	indf1,w,c
  8769  003EE0  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8770  003EE2  0E01               	movlw	1
  8771  003EE4  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8772  003EE6  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8773  003EE8  EF78  F01F         	goto	u3464
  8774  003EEC                     u3465:
  8775  003EEC  90D8               	bcf	status,0,c
  8776  003EEE  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8777  003EF0                     u3464:
  8778  003EF0  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8779  003EF2  EF76  F01F         	goto	u3465
  8780  003EF6  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8781  003EF8  0AFF               	xorlw	255
  8782  003EFA  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8783  003EFC  6EDF               	movwf	indf2,c
  8784  003EFE                     l254:
  8785  003EFE  0012               	return		;funcret
  8786  003F00                     __end_of_setMotorPWM:
  8787                           	callstack 0
  8788                           
  8789 ;; *************** function ___wmul *****************
  8790 ;; Defined at:
  8791 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;  multiplier      2    0[COMRAM] unsigned int 
  8794 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8795 ;; Auto vars:     Size  Location     Type
  8796 ;;  product         2    4[COMRAM] unsigned int 
  8797 ;; Return value:  Size  Location     Type
  8798 ;;                  2    0[COMRAM] unsigned int 
  8799 ;; Registers used:
  8800 ;;		wreg, status,2, status,0, prodl, prodh
  8801 ;; Tracked objects:
  8802 ;;		On entry : 0/0
  8803 ;;		On exit  : 0/0
  8804 ;;		Unchanged: 0/0
  8805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8810 ;;Total ram usage:        6 bytes
  8811 ;; Hardware stack levels used: 1
  8812 ;; Hardware stack levels required when called: 1
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_setMotorPWM
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           	psect	text35
  8821  005EC0                     __ptext35:
  8822                           	callstack 0
  8823  005EC0                     ___wmul:
  8824                           	callstack 25
  8825  005EC0  5001               	movf	___wmul@multiplier^0,w,c
  8826  005EC2  0203               	mulwf	___wmul@multiplicand^0,c
  8827  005EC4  CFF3 F005          	movff	prodl,___wmul@product
  8828  005EC8  CFF4 F006          	movff	prodh,___wmul@product+1
  8829  005ECC  5001               	movf	___wmul@multiplier^0,w,c
  8830  005ECE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8831  005ED0  50F3               	movf	243,w,c
  8832  005ED2  2606               	addwf	(___wmul@product+1)^0,f,c
  8833  005ED4  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8834  005ED6  0203               	mulwf	___wmul@multiplicand^0,c
  8835  005ED8  50F3               	movf	243,w,c
  8836  005EDA  2606               	addwf	(___wmul@product+1)^0,f,c
  8837  005EDC  C005  F001         	movff	___wmul@product,?___wmul
  8838  005EE0  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8839  005EE4  0012               	return		;funcret
  8840  005EE6                     __end_of___wmul:
  8841                           	callstack 0
  8842                           
  8843 ;; *************** function ___awdiv *****************
  8844 ;; Defined at:
  8845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;  dividend        2    6[COMRAM] int 
  8848 ;;  divisor         2    8[COMRAM] int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;  quotient        2   12[COMRAM] int 
  8851 ;;  sign            1   11[COMRAM] unsigned char 
  8852 ;;  counter         1   10[COMRAM] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  2    6[COMRAM] int 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;Total ram usage:        8 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; Hardware stack levels required when called: 1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_setMotorPWM
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text36
  8877  005632                     __ptext36:
  8878                           	callstack 0
  8879  005632                     ___awdiv:
  8880                           	callstack 25
  8881  005632  0E00               	movlw	0
  8882  005634  6E0C               	movwf	___awdiv@sign^0,c
  8883  005636  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8884  005638  EF22  F02B         	goto	u3200
  8885  00563C  EF20  F02B         	goto	u3201
  8886  005640                     u3201:
  8887  005640  EF28  F02B         	goto	l3596
  8888  005644                     u3200:
  8889  005644  6C09               	negf	___awdiv@divisor^0,c
  8890  005646  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8891  005648  B0D8               	btfsc	status,0,c
  8892  00564A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8893  00564C  0E01               	movlw	1
  8894  00564E  6E0C               	movwf	___awdiv@sign^0,c
  8895  005650                     l3596:
  8896  005650  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8897  005652  EF2F  F02B         	goto	u3210
  8898  005656  EF2D  F02B         	goto	u3211
  8899  00565A                     u3211:
  8900  00565A  EF35  F02B         	goto	l3602
  8901  00565E                     u3210:
  8902  00565E  6C07               	negf	___awdiv@dividend^0,c
  8903  005660  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8904  005662  B0D8               	btfsc	status,0,c
  8905  005664  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8906  005666  0E01               	movlw	1
  8907  005668  1A0C               	xorwf	___awdiv@sign^0,f,c
  8908  00566A                     l3602:
  8909  00566A  0E00               	movlw	0
  8910  00566C  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8911  00566E  0E00               	movlw	0
  8912  005670  6E0D               	movwf	___awdiv@quotient^0,c
  8913  005672  5009               	movf	___awdiv@divisor^0,w,c
  8914  005674  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8915  005676  B4D8               	btfsc	status,2,c
  8916  005678  EF40  F02B         	goto	u3221
  8917  00567C  EF42  F02B         	goto	u3220
  8918  005680                     u3221:
  8919  005680  EF6A  F02B         	goto	l3624
  8920  005684                     u3220:
  8921  005684  0E01               	movlw	1
  8922  005686  6E0B               	movwf	___awdiv@counter^0,c
  8923  005688  EF4A  F02B         	goto	l3610
  8924  00568C                     l3608:
  8925  00568C  90D8               	bcf	status,0,c
  8926  00568E  3609               	rlcf	___awdiv@divisor^0,f,c
  8927  005690  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8928  005692  2A0B               	incf	___awdiv@counter^0,f,c
  8929  005694                     l3610:
  8930  005694  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8931  005696  EF4F  F02B         	goto	u3231
  8932  00569A  EF51  F02B         	goto	u3230
  8933  00569E                     u3231:
  8934  00569E  EF46  F02B         	goto	l3608
  8935  0056A2                     u3230:
  8936  0056A2                     l3612:
  8937  0056A2  90D8               	bcf	status,0,c
  8938  0056A4  360D               	rlcf	___awdiv@quotient^0,f,c
  8939  0056A6  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8940  0056A8  5009               	movf	___awdiv@divisor^0,w,c
  8941  0056AA  5C07               	subwf	___awdiv@dividend^0,w,c
  8942  0056AC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8943  0056AE  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8944  0056B0  A0D8               	btfss	status,0,c
  8945  0056B2  EF5D  F02B         	goto	u3241
  8946  0056B6  EF5F  F02B         	goto	u3240
  8947  0056BA                     u3241:
  8948  0056BA  EF64  F02B         	goto	l3620
  8949  0056BE                     u3240:
  8950  0056BE  5009               	movf	___awdiv@divisor^0,w,c
  8951  0056C0  5E07               	subwf	___awdiv@dividend^0,f,c
  8952  0056C2  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8953  0056C4  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8954  0056C6  800D               	bsf	___awdiv@quotient^0,0,c
  8955  0056C8                     l3620:
  8956  0056C8  90D8               	bcf	status,0,c
  8957  0056CA  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8958  0056CC  3209               	rrcf	___awdiv@divisor^0,f,c
  8959  0056CE  2E0B               	decfsz	___awdiv@counter^0,f,c
  8960  0056D0  EF51  F02B         	goto	l3612
  8961  0056D4                     l3624:
  8962  0056D4  500C               	movf	___awdiv@sign^0,w,c
  8963  0056D6  B4D8               	btfsc	status,2,c
  8964  0056D8  EF70  F02B         	goto	u3251
  8965  0056DC  EF72  F02B         	goto	u3250
  8966  0056E0                     u3251:
  8967  0056E0  EF76  F02B         	goto	l3628
  8968  0056E4                     u3250:
  8969  0056E4  6C0D               	negf	___awdiv@quotient^0,c
  8970  0056E6  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8971  0056E8  B0D8               	btfsc	status,0,c
  8972  0056EA  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8973  0056EC                     l3628:
  8974  0056EC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8975  0056F0  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8976  0056F4  0012               	return		;funcret
  8977  0056F6                     __end_of___awdiv:
  8978                           	callstack 0
  8979                           
  8980 ;; *************** function _calibrate_white *****************
  8981 ;; Defined at:
  8982 ;;		line 238 in file "color.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;  w               2   11[COMRAM] PTR struct white_card
  8985 ;;		 -> main@white(28), 
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;		None
  8988 ;; Return value:  Size  Location     Type
  8989 ;;                  1    wreg      void 
  8990 ;; Registers used:
  8991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 0/0
  8994 ;;		On exit  : 0/0
  8995 ;;		Unchanged: 0/0
  8996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;Total ram usage:        4 bytes
  9002 ;; Hardware stack levels used: 1
  9003 ;; Hardware stack levels required when called: 4
  9004 ;; This function calls:
  9005 ;;		_LED_B
  9006 ;;		_LED_C
  9007 ;;		_LED_G
  9008 ;;		_LED_OFF
  9009 ;;		_LED_R
  9010 ;;		_color_read_Blue
  9011 ;;		_color_read_Clear
  9012 ;;		_color_read_Green
  9013 ;;		_color_read_Red
  9014 ;;		_toggle_light
  9015 ;; This function is called by:
  9016 ;;		_setup
  9017 ;;		_test_function
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text37
  9022  003920                     __ptext37:
  9023                           	callstack 0
  9024  003920                     _calibrate_white:
  9025                           	callstack 25
  9026  003920                     
  9027                           ;color.c: 238: void calibrate_white(struct white_card *w);color.c: 239: {;color.c: 240: 
      +                              LED_OFF();
  9028  003920  EC83  F02F         	call	_LED_OFF	;wreg free
  9029  003924                     
  9030                           ;color.c: 241:     toggle_light(1,2);
  9031  003924  0E02               	movlw	2
  9032  003926  6E01               	movwf	toggle_light@toggletime^0,c
  9033  003928  0E01               	movlw	1
  9034  00392A  EC3A  F01B         	call	_toggle_light
  9035  00392E                     
  9036                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9037  00392E  0E29               	movlw	41
  9038  003930  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9039  003932  0E96               	movlw	150
  9040  003934  6E0E               	movwf	??_calibrate_white^0,c
  9041  003936  0E7F               	movlw	127
  9042  003938                     u6287:
  9043  003938  2EE8               	decfsz	wreg,f,c
  9044  00393A  D7FE               	bra	u6287
  9045  00393C  2E0E               	decfsz	??_calibrate_white^0,f,c
  9046  00393E  D7FC               	bra	u6287
  9047  003940  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9048  003942  D7FA               	bra	u6287
  9049  003944  F000               	nop	
  9050  003946                     
  9051                           ;color.c: 244:     LED_R();
  9052  003946  EC73  F02F         	call	_LED_R	;wreg free
  9053  00394A                     
  9054                           ;color.c: 245:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9055  00394A  0E09               	movlw	9
  9056  00394C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9057  00394E  0E1E               	movlw	30
  9058  003950  6E0E               	movwf	??_calibrate_white^0,c
  9059  003952  0EE4               	movlw	228
  9060  003954                     u6297:
  9061  003954  2EE8               	decfsz	wreg,f,c
  9062  003956  D7FE               	bra	u6297
  9063  003958  2E0E               	decfsz	??_calibrate_white^0,f,c
  9064  00395A  D7FC               	bra	u6297
  9065  00395C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9066  00395E  D7FA               	bra	u6297
  9067  003960  D000               	nop2	
  9068  003962                     
  9069                           ;color.c: 246:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  9070  003962  ECE0  F02C         	call	_color_read_Red	;wreg free
  9071  003966  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  9072  00396A  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  9073  00396E  C005  FFDE         	movff	?_color_read_Red,postinc2
  9074  003972  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9075  003976  EC08  F02D         	call	_color_read_Green	;wreg free
  9076  00397A  EE20 F002          	lfsr	2,2
  9077  00397E  500C               	movf	calibrate_white@w^0,w,c
  9078  003980  26D9               	addwf	fsr2l,f,c
  9079  003982  500D               	movf	(calibrate_white@w+1)^0,w,c
  9080  003984  22DA               	addwfc	fsr2h,f,c
  9081  003986  C005  FFDE         	movff	?_color_read_Green,postinc2
  9082  00398A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9083  00398E  EC30  F02D         	call	_color_read_Blue	;wreg free
  9084  003992  EE20 F004          	lfsr	2,4
  9085  003996  500C               	movf	calibrate_white@w^0,w,c
  9086  003998  26D9               	addwf	fsr2l,f,c
  9087  00399A  500D               	movf	(calibrate_white@w+1)^0,w,c
  9088  00399C  22DA               	addwfc	fsr2h,f,c
  9089  00399E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9090  0039A2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9091  0039A6                     
  9092                           ;color.c: 249:     LED_G();
  9093  0039A6  EC93  F02F         	call	_LED_G	;wreg free
  9094  0039AA                     
  9095                           ;color.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9096  0039AA  0E09               	movlw	9
  9097  0039AC  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9098  0039AE  0E1E               	movlw	30
  9099  0039B0  6E0E               	movwf	??_calibrate_white^0,c
  9100  0039B2  0EE4               	movlw	228
  9101  0039B4                     u6307:
  9102  0039B4  2EE8               	decfsz	wreg,f,c
  9103  0039B6  D7FE               	bra	u6307
  9104  0039B8  2E0E               	decfsz	??_calibrate_white^0,f,c
  9105  0039BA  D7FC               	bra	u6307
  9106  0039BC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9107  0039BE  D7FA               	bra	u6307
  9108  0039C0  D000               	nop2	
  9109  0039C2                     
  9110                           ;color.c: 251:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9111  0039C2  ECE0  F02C         	call	_color_read_Red	;wreg free
  9112  0039C6  EE20 F006          	lfsr	2,6
  9113  0039CA  500C               	movf	calibrate_white@w^0,w,c
  9114  0039CC  26D9               	addwf	fsr2l,f,c
  9115  0039CE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9116  0039D0  22DA               	addwfc	fsr2h,f,c
  9117  0039D2  C005  FFDE         	movff	?_color_read_Red,postinc2
  9118  0039D6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9119  0039DA  EC08  F02D         	call	_color_read_Green	;wreg free
  9120  0039DE  EE20 F008          	lfsr	2,8
  9121  0039E2  500C               	movf	calibrate_white@w^0,w,c
  9122  0039E4  26D9               	addwf	fsr2l,f,c
  9123  0039E6  500D               	movf	(calibrate_white@w+1)^0,w,c
  9124  0039E8  22DA               	addwfc	fsr2h,f,c
  9125  0039EA  C005  FFDE         	movff	?_color_read_Green,postinc2
  9126  0039EE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9127  0039F2  EC30  F02D         	call	_color_read_Blue	;wreg free
  9128  0039F6  EE20 F00A          	lfsr	2,10
  9129  0039FA  500C               	movf	calibrate_white@w^0,w,c
  9130  0039FC  26D9               	addwf	fsr2l,f,c
  9131  0039FE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9132  003A00  22DA               	addwfc	fsr2h,f,c
  9133  003A02  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9134  003A06  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9135  003A0A                     
  9136                           ;color.c: 255:     LED_B();
  9137  003A0A  ECA3  F02F         	call	_LED_B	;wreg free
  9138  003A0E                     
  9139                           ;color.c: 256:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9140  003A0E  0E09               	movlw	9
  9141  003A10  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9142  003A12  0E1E               	movlw	30
  9143  003A14  6E0E               	movwf	??_calibrate_white^0,c
  9144  003A16  0EE4               	movlw	228
  9145  003A18                     u6317:
  9146  003A18  2EE8               	decfsz	wreg,f,c
  9147  003A1A  D7FE               	bra	u6317
  9148  003A1C  2E0E               	decfsz	??_calibrate_white^0,f,c
  9149  003A1E  D7FC               	bra	u6317
  9150  003A20  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9151  003A22  D7FA               	bra	u6317
  9152  003A24  D000               	nop2	
  9153  003A26                     
  9154                           ;color.c: 257:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  9155  003A26  ECE0  F02C         	call	_color_read_Red	;wreg free
  9156  003A2A  EE20 F00C          	lfsr	2,12
  9157  003A2E  500C               	movf	calibrate_white@w^0,w,c
  9158  003A30  26D9               	addwf	fsr2l,f,c
  9159  003A32  500D               	movf	(calibrate_white@w+1)^0,w,c
  9160  003A34  22DA               	addwfc	fsr2h,f,c
  9161  003A36  C005  FFDE         	movff	?_color_read_Red,postinc2
  9162  003A3A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9163  003A3E  EC08  F02D         	call	_color_read_Green	;wreg free
  9164  003A42  EE20 F00E          	lfsr	2,14
  9165  003A46  500C               	movf	calibrate_white@w^0,w,c
  9166  003A48  26D9               	addwf	fsr2l,f,c
  9167  003A4A  500D               	movf	(calibrate_white@w+1)^0,w,c
  9168  003A4C  22DA               	addwfc	fsr2h,f,c
  9169  003A4E  C005  FFDE         	movff	?_color_read_Green,postinc2
  9170  003A52  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9171  003A56  EC30  F02D         	call	_color_read_Blue	;wreg free
  9172  003A5A  EE20 F010          	lfsr	2,16
  9173  003A5E  500C               	movf	calibrate_white@w^0,w,c
  9174  003A60  26D9               	addwf	fsr2l,f,c
  9175  003A62  500D               	movf	(calibrate_white@w+1)^0,w,c
  9176  003A64  22DA               	addwfc	fsr2h,f,c
  9177  003A66  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9178  003A6A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9179  003A6E  EC58  F02D         	call	_color_read_Clear	;wreg free
  9180  003A72  EE20 F01A          	lfsr	2,26
  9181  003A76  500C               	movf	calibrate_white@w^0,w,c
  9182  003A78  26D9               	addwf	fsr2l,f,c
  9183  003A7A  500D               	movf	(calibrate_white@w+1)^0,w,c
  9184  003A7C  22DA               	addwfc	fsr2h,f,c
  9185  003A7E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9186  003A82  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9187  003A86                     
  9188                           ;color.c: 260:     LED_C();
  9189  003A86  ECB3  F02F         	call	_LED_C	;wreg free
  9190  003A8A                     
  9191                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9192  003A8A  0E09               	movlw	9
  9193  003A8C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9194  003A8E  0E1E               	movlw	30
  9195  003A90  6E0E               	movwf	??_calibrate_white^0,c
  9196  003A92  0EE4               	movlw	228
  9197  003A94                     u6327:
  9198  003A94  2EE8               	decfsz	wreg,f,c
  9199  003A96  D7FE               	bra	u6327
  9200  003A98  2E0E               	decfsz	??_calibrate_white^0,f,c
  9201  003A9A  D7FC               	bra	u6327
  9202  003A9C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9203  003A9E  D7FA               	bra	u6327
  9204  003AA0  D000               	nop2	
  9205  003AA2                     
  9206                           ;color.c: 262:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  9207  003AA2  ECE0  F02C         	call	_color_read_Red	;wreg free
  9208  003AA6  EE20 F012          	lfsr	2,18
  9209  003AAA  500C               	movf	calibrate_white@w^0,w,c
  9210  003AAC  26D9               	addwf	fsr2l,f,c
  9211  003AAE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9212  003AB0  22DA               	addwfc	fsr2h,f,c
  9213  003AB2  C005  FFDE         	movff	?_color_read_Red,postinc2
  9214  003AB6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9215  003ABA  EC08  F02D         	call	_color_read_Green	;wreg free
  9216  003ABE  EE20 F014          	lfsr	2,20
  9217  003AC2  500C               	movf	calibrate_white@w^0,w,c
  9218  003AC4  26D9               	addwf	fsr2l,f,c
  9219  003AC6  500D               	movf	(calibrate_white@w+1)^0,w,c
  9220  003AC8  22DA               	addwfc	fsr2h,f,c
  9221  003ACA  C005  FFDE         	movff	?_color_read_Green,postinc2
  9222  003ACE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9223  003AD2  EC30  F02D         	call	_color_read_Blue	;wreg free
  9224  003AD6  EE20 F016          	lfsr	2,22
  9225  003ADA  500C               	movf	calibrate_white@w^0,w,c
  9226  003ADC  26D9               	addwf	fsr2l,f,c
  9227  003ADE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9228  003AE0  22DA               	addwfc	fsr2h,f,c
  9229  003AE2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9230  003AE6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9231  003AEA  EC58  F02D         	call	_color_read_Clear	;wreg free
  9232  003AEE  EE20 F018          	lfsr	2,24
  9233  003AF2  500C               	movf	calibrate_white@w^0,w,c
  9234  003AF4  26D9               	addwf	fsr2l,f,c
  9235  003AF6  500D               	movf	(calibrate_white@w+1)^0,w,c
  9236  003AF8  22DA               	addwfc	fsr2h,f,c
  9237  003AFA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9238  003AFE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9239  003B02                     
  9240                           ;color.c: 264:     LED_OFF();
  9241  003B02  EC83  F02F         	call	_LED_OFF	;wreg free
  9242  003B06                     
  9243                           ;color.c: 265:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9244  003B06  0E29               	movlw	41
  9245  003B08  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9246  003B0A  0E96               	movlw	150
  9247  003B0C  6E0E               	movwf	??_calibrate_white^0,c
  9248  003B0E  0E7F               	movlw	127
  9249  003B10                     u6337:
  9250  003B10  2EE8               	decfsz	wreg,f,c
  9251  003B12  D7FE               	bra	u6337
  9252  003B14  2E0E               	decfsz	??_calibrate_white^0,f,c
  9253  003B16  D7FC               	bra	u6337
  9254  003B18  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9255  003B1A  D7FA               	bra	u6337
  9256  003B1C  F000               	nop	
  9257                           
  9258                           ;color.c: 266:     toggle_light(1,2);
  9259  003B1E  0E02               	movlw	2
  9260  003B20  6E01               	movwf	toggle_light@toggletime^0,c
  9261  003B22  0E01               	movlw	1
  9262  003B24  EC3A  F01B         	call	_toggle_light
  9263  003B28  0012               	return		;funcret
  9264  003B2A                     __end_of_calibrate_white:
  9265                           	callstack 0
  9266                           
  9267 ;; *************** function _color_read_Red *****************
  9268 ;; Defined at:
  9269 ;;		line 111 in file "color.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;		None
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;  tmp             2    9[COMRAM] unsigned int 
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  2    4[COMRAM] unsigned int 
  9276 ;; Registers used:
  9277 ;;		wreg, status,2, status,0, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9285 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9286 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9287 ;;Total ram usage:        7 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; Hardware stack levels required when called: 3
  9290 ;; This function calls:
  9291 ;;		_I2C_2_Master_Read
  9292 ;;		_I2C_2_Master_RepStart
  9293 ;;		_I2C_2_Master_Start
  9294 ;;		_I2C_2_Master_Stop
  9295 ;;		_I2C_2_Master_Write
  9296 ;; This function is called by:
  9297 ;;		_read_color
  9298 ;;		_calibrate_white
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text38
  9303  0059C0                     __ptext38:
  9304                           	callstack 0
  9305  0059C0                     _color_read_Red:
  9306                           	callstack 24
  9307  0059C0                     
  9308                           ;color.c: 113:  unsigned int tmp;;color.c: 114:  I2C_2_Master_Start();
  9309  0059C0  EC13  F030         	call	_I2C_2_Master_Start	;wreg free
  9310                           
  9311                           ;color.c: 115:  I2C_2_Master_Write(0x52 | 0x00);
  9312  0059C4  0E52               	movlw	82
  9313  0059C6  ECFD  F02F         	call	_I2C_2_Master_Write
  9314                           
  9315                           ;color.c: 116:  I2C_2_Master_Write(0xA0 | 0x16);
  9316  0059CA  0EB6               	movlw	182
  9317  0059CC  ECFD  F02F         	call	_I2C_2_Master_Write
  9318                           
  9319                           ;color.c: 117:  I2C_2_Master_RepStart();
  9320  0059D0  EC09  F030         	call	_I2C_2_Master_RepStart	;wreg free
  9321                           
  9322                           ;color.c: 118:  I2C_2_Master_Write(0x52 | 0x01);
  9323  0059D4  0E53               	movlw	83
  9324  0059D6  ECFD  F02F         	call	_I2C_2_Master_Write
  9325                           
  9326                           ;color.c: 119:  tmp=I2C_2_Master_Read(1);
  9327  0059DA  0E01               	movlw	1
  9328  0059DC  ECE6  F02D         	call	_I2C_2_Master_Read
  9329  0059E0  6E07               	movwf	??_color_read_Red^0,c
  9330  0059E2  5007               	movf	??_color_read_Red^0,w,c
  9331  0059E4  6E0A               	movwf	color_read_Red@tmp^0,c
  9332  0059E6  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9333                           
  9334                           ;color.c: 120:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9335  0059E8  0E00               	movlw	0
  9336  0059EA  ECE6  F02D         	call	_I2C_2_Master_Read
  9337  0059EE  6E07               	movwf	??_color_read_Red^0,c
  9338  0059F0  5007               	movf	??_color_read_Red^0,w,c
  9339  0059F2  6E09               	movwf	(??_color_read_Red+2)^0,c
  9340  0059F4  6A08               	clrf	(??_color_read_Red+1)^0,c
  9341  0059F6  500A               	movf	color_read_Red@tmp^0,w,c
  9342  0059F8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9343  0059FA  6E0A               	movwf	color_read_Red@tmp^0,c
  9344  0059FC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9345  0059FE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9346  005A00  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9347                           
  9348                           ;color.c: 121:  I2C_2_Master_Stop();
  9349  005A02  EC0E  F030         	call	_I2C_2_Master_Stop	;wreg free
  9350  005A06                     
  9351                           ;color.c: 122:  return tmp;
  9352  005A06  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9353  005A0A  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9354  005A0E  0012               	return		;funcret
  9355  005A10                     __end_of_color_read_Red:
  9356                           	callstack 0
  9357                           
  9358 ;; *************** function _color_read_Green *****************
  9359 ;; Defined at:
  9360 ;;		line 139 in file "color.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;  tmp             2    9[COMRAM] unsigned int 
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  2    4[COMRAM] unsigned int 
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9376 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9378 ;;Total ram usage:        7 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; Hardware stack levels required when called: 3
  9381 ;; This function calls:
  9382 ;;		_I2C_2_Master_Read
  9383 ;;		_I2C_2_Master_RepStart
  9384 ;;		_I2C_2_Master_Start
  9385 ;;		_I2C_2_Master_Stop
  9386 ;;		_I2C_2_Master_Write
  9387 ;; This function is called by:
  9388 ;;		_read_color
  9389 ;;		_calibrate_white
  9390 ;;		_detect_wall
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           	psect	text39
  9395  005A10                     __ptext39:
  9396                           	callstack 0
  9397  005A10                     _color_read_Green:
  9398                           	callstack 24
  9399  005A10                     
  9400                           ;color.c: 141:  unsigned int tmp;;color.c: 142:  I2C_2_Master_Start();
  9401  005A10  EC13  F030         	call	_I2C_2_Master_Start	;wreg free
  9402                           
  9403                           ;color.c: 143:  I2C_2_Master_Write(0x52 | 0x00);
  9404  005A14  0E52               	movlw	82
  9405  005A16  ECFD  F02F         	call	_I2C_2_Master_Write
  9406                           
  9407                           ;color.c: 144:  I2C_2_Master_Write(0xA0 | 0x18);
  9408  005A1A  0EB8               	movlw	184
  9409  005A1C  ECFD  F02F         	call	_I2C_2_Master_Write
  9410                           
  9411                           ;color.c: 145:  I2C_2_Master_RepStart();
  9412  005A20  EC09  F030         	call	_I2C_2_Master_RepStart	;wreg free
  9413                           
  9414                           ;color.c: 146:  I2C_2_Master_Write(0x52 | 0x01);
  9415  005A24  0E53               	movlw	83
  9416  005A26  ECFD  F02F         	call	_I2C_2_Master_Write
  9417                           
  9418                           ;color.c: 147:  tmp=I2C_2_Master_Read(1);
  9419  005A2A  0E01               	movlw	1
  9420  005A2C  ECE6  F02D         	call	_I2C_2_Master_Read
  9421  005A30  6E07               	movwf	??_color_read_Green^0,c
  9422  005A32  5007               	movf	??_color_read_Green^0,w,c
  9423  005A34  6E0A               	movwf	color_read_Green@tmp^0,c
  9424  005A36  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9425                           
  9426                           ;color.c: 148:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9427  005A38  0E00               	movlw	0
  9428  005A3A  ECE6  F02D         	call	_I2C_2_Master_Read
  9429  005A3E  6E07               	movwf	??_color_read_Green^0,c
  9430  005A40  5007               	movf	??_color_read_Green^0,w,c
  9431  005A42  6E09               	movwf	(??_color_read_Green+2)^0,c
  9432  005A44  6A08               	clrf	(??_color_read_Green+1)^0,c
  9433  005A46  500A               	movf	color_read_Green@tmp^0,w,c
  9434  005A48  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9435  005A4A  6E0A               	movwf	color_read_Green@tmp^0,c
  9436  005A4C  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9437  005A4E  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9438  005A50  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9439                           
  9440                           ;color.c: 149:  I2C_2_Master_Stop();
  9441  005A52  EC0E  F030         	call	_I2C_2_Master_Stop	;wreg free
  9442  005A56                     
  9443                           ;color.c: 150:  return tmp;
  9444  005A56  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9445  005A5A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9446  005A5E  0012               	return		;funcret
  9447  005A60                     __end_of_color_read_Green:
  9448                           	callstack 0
  9449                           
  9450 ;; *************** function _color_read_Blue *****************
  9451 ;; Defined at:
  9452 ;;		line 125 in file "color.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;  tmp             2    9[COMRAM] unsigned int 
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  2    4[COMRAM] unsigned int 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0, cstack
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;Total ram usage:        7 bytes
  9471 ;; Hardware stack levels used: 1
  9472 ;; Hardware stack levels required when called: 3
  9473 ;; This function calls:
  9474 ;;		_I2C_2_Master_Read
  9475 ;;		_I2C_2_Master_RepStart
  9476 ;;		_I2C_2_Master_Start
  9477 ;;		_I2C_2_Master_Stop
  9478 ;;		_I2C_2_Master_Write
  9479 ;; This function is called by:
  9480 ;;		_read_color
  9481 ;;		_calibrate_white
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           	psect	text40
  9486  005A60                     __ptext40:
  9487                           	callstack 0
  9488  005A60                     _color_read_Blue:
  9489                           	callstack 24
  9490  005A60                     
  9491                           ;color.c: 127:  unsigned int tmp;;color.c: 128:  I2C_2_Master_Start();
  9492  005A60  EC13  F030         	call	_I2C_2_Master_Start	;wreg free
  9493                           
  9494                           ;color.c: 129:  I2C_2_Master_Write(0x52 | 0x00);
  9495  005A64  0E52               	movlw	82
  9496  005A66  ECFD  F02F         	call	_I2C_2_Master_Write
  9497                           
  9498                           ;color.c: 130:  I2C_2_Master_Write(0xA0 | 0x1A);
  9499  005A6A  0EBA               	movlw	186
  9500  005A6C  ECFD  F02F         	call	_I2C_2_Master_Write
  9501                           
  9502                           ;color.c: 131:  I2C_2_Master_RepStart();
  9503  005A70  EC09  F030         	call	_I2C_2_Master_RepStart	;wreg free
  9504                           
  9505                           ;color.c: 132:  I2C_2_Master_Write(0x52 | 0x01);
  9506  005A74  0E53               	movlw	83
  9507  005A76  ECFD  F02F         	call	_I2C_2_Master_Write
  9508                           
  9509                           ;color.c: 133:  tmp=I2C_2_Master_Read(1);
  9510  005A7A  0E01               	movlw	1
  9511  005A7C  ECE6  F02D         	call	_I2C_2_Master_Read
  9512  005A80  6E07               	movwf	??_color_read_Blue^0,c
  9513  005A82  5007               	movf	??_color_read_Blue^0,w,c
  9514  005A84  6E0A               	movwf	color_read_Blue@tmp^0,c
  9515  005A86  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9516                           
  9517                           ;color.c: 134:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9518  005A88  0E00               	movlw	0
  9519  005A8A  ECE6  F02D         	call	_I2C_2_Master_Read
  9520  005A8E  6E07               	movwf	??_color_read_Blue^0,c
  9521  005A90  5007               	movf	??_color_read_Blue^0,w,c
  9522  005A92  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9523  005A94  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9524  005A96  500A               	movf	color_read_Blue@tmp^0,w,c
  9525  005A98  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9526  005A9A  6E0A               	movwf	color_read_Blue@tmp^0,c
  9527  005A9C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9528  005A9E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9529  005AA0  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9530                           
  9531                           ;color.c: 135:  I2C_2_Master_Stop();
  9532  005AA2  EC0E  F030         	call	_I2C_2_Master_Stop	;wreg free
  9533  005AA6                     
  9534                           ;color.c: 136:  return tmp;
  9535  005AA6  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9536  005AAA  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9537  005AAE  0012               	return		;funcret
  9538  005AB0                     __end_of_color_read_Blue:
  9539                           	callstack 0
  9540                           
  9541 ;; *************** function _LED_R *****************
  9542 ;; Defined at:
  9543 ;;		line 184 in file "color.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9561 ;;Total ram usage:        2 bytes
  9562 ;; Hardware stack levels used: 1
  9563 ;; Hardware stack levels required when called: 1
  9564 ;; This function calls:
  9565 ;;		Nothing
  9566 ;; This function is called by:
  9567 ;;		_calibrate_white
  9568 ;;		_detect_color
  9569 ;;		_color_data_collection
  9570 ;; This function uses a non-reentrant model
  9571 ;;
  9572                           
  9573                           	psect	text41
  9574  005EE6                     __ptext41:
  9575                           	callstack 0
  9576  005EE6                     _LED_R:
  9577                           	callstack 27
  9578  005EE6                     
  9579                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9580  005EE6  827F               	bsf	127,1,c	;volatile
  9581                           
  9582                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9583  005EE8  9E7E               	bcf	126,7,c	;volatile
  9584                           
  9585                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9586  005EEA  9879               	bcf	121,4,c	;volatile
  9587  005EEC                     
  9588                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9589  005EEC  0E11               	movlw	17
  9590  005EEE  6E02               	movwf	(??_LED_R+1)^0,c
  9591  005EF0  0E3C               	movlw	60
  9592  005EF2  6E01               	movwf	??_LED_R^0,c
  9593  005EF4  0ECB               	movlw	203
  9594  005EF6                     u6347:
  9595  005EF6  2EE8               	decfsz	wreg,f,c
  9596  005EF8  D7FE               	bra	u6347
  9597  005EFA  2E01               	decfsz	??_LED_R^0,f,c
  9598  005EFC  D7FC               	bra	u6347
  9599  005EFE  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9600  005F00  D7FA               	bra	u6347
  9601  005F02  F000               	nop	
  9602  005F04  0012               	return		;funcret
  9603  005F06                     __end_of_LED_R:
  9604                           	callstack 0
  9605                           
  9606 ;; *************** function _LED_OFF *****************
  9607 ;; Defined at:
  9608 ;;		line 175 in file "color.c"
  9609 ;; Parameters:    Size  Location     Type
  9610 ;;		None
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;		None
  9613 ;; Return value:  Size  Location     Type
  9614 ;;                  1    wreg      void 
  9615 ;; Registers used:
  9616 ;;		wreg
  9617 ;; Tracked objects:
  9618 ;;		On entry : 0/0
  9619 ;;		On exit  : 0/0
  9620 ;;		Unchanged: 0/0
  9621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9626 ;;Total ram usage:        2 bytes
  9627 ;; Hardware stack levels used: 1
  9628 ;; Hardware stack levels required when called: 1
  9629 ;; This function calls:
  9630 ;;		Nothing
  9631 ;; This function is called by:
  9632 ;;		_calibrate_white
  9633 ;;		_setup
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           	psect	text42
  9638  005F06                     __ptext42:
  9639                           	callstack 0
  9640  005F06                     _LED_OFF:
  9641                           	callstack 27
  9642  005F06                     
  9643                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9644  005F06  927F               	bcf	127,1,c	;volatile
  9645                           
  9646                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9647  005F08  9E7E               	bcf	126,7,c	;volatile
  9648                           
  9649                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9650  005F0A  9879               	bcf	121,4,c	;volatile
  9651  005F0C                     
  9652                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9653  005F0C  0E11               	movlw	17
  9654  005F0E  6E02               	movwf	(??_LED_OFF+1)^0,c
  9655  005F10  0E3C               	movlw	60
  9656  005F12  6E01               	movwf	??_LED_OFF^0,c
  9657  005F14  0ECB               	movlw	203
  9658  005F16                     u6357:
  9659  005F16  2EE8               	decfsz	wreg,f,c
  9660  005F18  D7FE               	bra	u6357
  9661  005F1A  2E01               	decfsz	??_LED_OFF^0,f,c
  9662  005F1C  D7FC               	bra	u6357
  9663  005F1E  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9664  005F20  D7FA               	bra	u6357
  9665  005F22  F000               	nop	
  9666  005F24  0012               	return		;funcret
  9667  005F26                     __end_of_LED_OFF:
  9668                           	callstack 0
  9669                           
  9670 ;; *************** function _LED_G *****************
  9671 ;; Defined at:
  9672 ;;		line 211 in file "color.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;		None
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1    wreg      void 
  9679 ;; Registers used:
  9680 ;;		wreg
  9681 ;; Tracked objects:
  9682 ;;		On entry : 0/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9690 ;;Total ram usage:        2 bytes
  9691 ;; Hardware stack levels used: 1
  9692 ;; Hardware stack levels required when called: 1
  9693 ;; This function calls:
  9694 ;;		Nothing
  9695 ;; This function is called by:
  9696 ;;		_calibrate_white
  9697 ;;		_detect_color
  9698 ;;		_color_data_collection
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text43
  9703  005F26                     __ptext43:
  9704                           	callstack 0
  9705  005F26                     _LED_G:
  9706                           	callstack 27
  9707  005F26                     
  9708                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9709  005F26  927F               	bcf	127,1,c	;volatile
  9710                           
  9711                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9712  005F28  9E7E               	bcf	126,7,c	;volatile
  9713                           
  9714                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9715  005F2A  8879               	bsf	121,4,c	;volatile
  9716  005F2C                     
  9717                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9718  005F2C  0E11               	movlw	17
  9719  005F2E  6E02               	movwf	(??_LED_G+1)^0,c
  9720  005F30  0E3C               	movlw	60
  9721  005F32  6E01               	movwf	??_LED_G^0,c
  9722  005F34  0ECB               	movlw	203
  9723  005F36                     u6367:
  9724  005F36  2EE8               	decfsz	wreg,f,c
  9725  005F38  D7FE               	bra	u6367
  9726  005F3A  2E01               	decfsz	??_LED_G^0,f,c
  9727  005F3C  D7FC               	bra	u6367
  9728  005F3E  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9729  005F40  D7FA               	bra	u6367
  9730  005F42  F000               	nop	
  9731  005F44  0012               	return		;funcret
  9732  005F46                     __end_of_LED_G:
  9733                           	callstack 0
  9734                           
  9735 ;; *************** function _LED_B *****************
  9736 ;; Defined at:
  9737 ;;		line 202 in file "color.c"
  9738 ;; Parameters:    Size  Location     Type
  9739 ;;		None
  9740 ;; Auto vars:     Size  Location     Type
  9741 ;;		None
  9742 ;; Return value:  Size  Location     Type
  9743 ;;                  1    wreg      void 
  9744 ;; Registers used:
  9745 ;;		wreg
  9746 ;; Tracked objects:
  9747 ;;		On entry : 0/0
  9748 ;;		On exit  : 0/0
  9749 ;;		Unchanged: 0/0
  9750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;Total ram usage:        2 bytes
  9756 ;; Hardware stack levels used: 1
  9757 ;; Hardware stack levels required when called: 1
  9758 ;; This function calls:
  9759 ;;		Nothing
  9760 ;; This function is called by:
  9761 ;;		_calibrate_white
  9762 ;;		_detect_color
  9763 ;;		_color_data_collection
  9764 ;; This function uses a non-reentrant model
  9765 ;;
  9766                           
  9767                           	psect	text44
  9768  005F46                     __ptext44:
  9769                           	callstack 0
  9770  005F46                     _LED_B:
  9771                           	callstack 27
  9772  005F46                     
  9773                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9774  005F46  927F               	bcf	127,1,c	;volatile
  9775                           
  9776                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9777  005F48  8E7E               	bsf	126,7,c	;volatile
  9778                           
  9779                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9780  005F4A  9879               	bcf	121,4,c	;volatile
  9781  005F4C                     
  9782                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9783  005F4C  0E11               	movlw	17
  9784  005F4E  6E02               	movwf	(??_LED_B+1)^0,c
  9785  005F50  0E3C               	movlw	60
  9786  005F52  6E01               	movwf	??_LED_B^0,c
  9787  005F54  0ECB               	movlw	203
  9788  005F56                     u6377:
  9789  005F56  2EE8               	decfsz	wreg,f,c
  9790  005F58  D7FE               	bra	u6377
  9791  005F5A  2E01               	decfsz	??_LED_B^0,f,c
  9792  005F5C  D7FC               	bra	u6377
  9793  005F5E  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9794  005F60  D7FA               	bra	u6377
  9795  005F62  F000               	nop	
  9796  005F64  0012               	return		;funcret
  9797  005F66                     __end_of_LED_B:
  9798                           	callstack 0
  9799                           
  9800 ;; *************** function _amb_light_measure *****************
  9801 ;; Defined at:
  9802 ;;		line 359 in file "color.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  9805 ;;		 -> main@rgb(8), main@amb(8), 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  9808 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  9809 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  9810 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  9811 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  2   10[BANK0 ] unsigned int 
  9814 ;; Registers used:
  9815 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9821 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9822 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9823 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9824 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9825 ;;Total ram usage:       14 bytes
  9826 ;; Hardware stack levels used: 1
  9827 ;; Hardware stack levels required when called: 5
  9828 ;; This function calls:
  9829 ;;		_LED_C
  9830 ;;		___fldiv
  9831 ;;		___xxtofl
  9832 ;;		_color_read_Clear
  9833 ;;		_lroundf
  9834 ;;		_toggle_light
  9835 ;; This function is called by:
  9836 ;;		_setup
  9837 ;;		_test_function
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           	psect	text45
  9842  004E24                     __ptext45:
  9843                           	callstack 0
  9844  004E24                     _amb_light_measure:
  9845                           	callstack 24
  9846  004E24  0E00               	movlw	0
  9847  004E26  0100               	movlb	0	; () banked
  9848  004E28  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  9849  004E2A  0E00               	movlw	0
  9850  004E2C  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  9851  004E2E  0E00               	movlw	0
  9852  004E30  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  9853  004E32  0E00               	movlw	0
  9854  004E34  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  9855  004E36  0E00               	movlw	0
  9856  004E38  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  9857  004E3A  0E00               	movlw	0
  9858  004E3C  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  9859  004E3E                     
  9860                           ; BSR set to: 0
  9861                           ;color.c: 362:     toggle_light(2,2);
  9862  004E3E  0E02               	movlw	2
  9863  004E40  6E01               	movwf	toggle_light@toggletime^0,c
  9864  004E42  0E02               	movlw	2
  9865  004E44  EC3A  F01B         	call	_toggle_light
  9866  004E48                     
  9867                           ;color.c: 363:     LED_C();
  9868  004E48  ECB3  F02F         	call	_LED_C	;wreg free
  9869  004E4C                     
  9870                           ;color.c: 364:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9871  004E4C  0E29               	movlw	41
  9872  004E4E  0100               	movlb	0	; () banked
  9873  004E50  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9874  004E52  0E96               	movlw	150
  9875  004E54  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9876  004E56  0E7F               	movlw	127
  9877  004E58                     u6387:
  9878  004E58  2EE8               	decfsz	wreg,f,c
  9879  004E5A  D7FE               	bra	u6387
  9880  004E5C  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9881  004E5E  D7FC               	bra	u6387
  9882  004E60  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9883  004E62  D7FA               	bra	u6387
  9884  004E64                     
  9885                           ;color.c: 366:     CC_amb_1 = color_read_Clear();
  9886  004E64  EC58  F02D         	call	_color_read_Clear	;wreg free
  9887  004E68  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9888  004E6C  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9889  004E70                     
  9890                           ;color.c: 367:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9891  004E70  0E11               	movlw	17
  9892  004E72  0100               	movlb	0	; () banked
  9893  004E74  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9894  004E76  0E3C               	movlw	60
  9895  004E78  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9896  004E7A  0ECB               	movlw	203
  9897  004E7C                     u6397:
  9898  004E7C  2EE8               	decfsz	wreg,f,c
  9899  004E7E  D7FE               	bra	u6397
  9900  004E80  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9901  004E82  D7FC               	bra	u6397
  9902  004E84  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9903  004E86  D7FA               	bra	u6397
  9904  004E88                     
  9905                           ;color.c: 369:     CC_amb_2 = color_read_Clear();
  9906  004E88  EC58  F02D         	call	_color_read_Clear	;wreg free
  9907  004E8C  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9908  004E90  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9909  004E94                     
  9910                           ;color.c: 370:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9911  004E94  0E11               	movlw	17
  9912  004E96  0100               	movlb	0	; () banked
  9913  004E98  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9914  004E9A  0E3C               	movlw	60
  9915  004E9C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9916  004E9E  0ECB               	movlw	203
  9917  004EA0                     u6407:
  9918  004EA0  2EE8               	decfsz	wreg,f,c
  9919  004EA2  D7FE               	bra	u6407
  9920  004EA4  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9921  004EA6  D7FC               	bra	u6407
  9922  004EA8  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9923  004EAA  D7FA               	bra	u6407
  9924  004EAC                     
  9925                           ;color.c: 372:     CC_amb_3 = color_read_Clear();
  9926  004EAC  EC58  F02D         	call	_color_read_Clear	;wreg free
  9927  004EB0  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9928  004EB4  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9929  004EB8                     
  9930                           ;color.c: 373:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9931  004EB8  0E11               	movlw	17
  9932  004EBA  0100               	movlb	0	; () banked
  9933  004EBC  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9934  004EBE  0E3C               	movlw	60
  9935  004EC0  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9936  004EC2  0ECB               	movlw	203
  9937  004EC4                     u6417:
  9938  004EC4  2EE8               	decfsz	wreg,f,c
  9939  004EC6  D7FE               	bra	u6417
  9940  004EC8  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9941  004ECA  D7FC               	bra	u6417
  9942  004ECC  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9943  004ECE  D7FA               	bra	u6417
  9944  004ED0                     
  9945                           ;color.c: 375:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9946  004ED0  0100               	movlb	0	; () banked
  9947  004ED2  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  9948  004ED4  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  9949  004ED6  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9950  004ED8  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  9951  004EDA  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  9952  004EDC  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9953  004EDE  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  9954  004EE0  276C               	addwf	??_amb_light_measure& (0+255),f,b
  9955  004EE2  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  9956  004EE4  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  9957  004EE6  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  9958  004EEA  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9959  004EEE  6A03               	clrf	(___xxtofl@val+2)^0,c
  9960  004EF0  6A04               	clrf	(___xxtofl@val+3)^0,c
  9961  004EF2  0E00               	movlw	0
  9962  004EF4  EC5A  F020         	call	___xxtofl
  9963  004EF8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9964  004EFC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9965  004F00  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9966  004F04  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9967  004F08  0E00               	movlw	0
  9968  004F0A  6E13               	movwf	___fldiv@a^0,c
  9969  004F0C  0E00               	movlw	0
  9970  004F0E  6E14               	movwf	(___fldiv@a+1)^0,c
  9971  004F10  0E40               	movlw	64
  9972  004F12  6E15               	movwf	(___fldiv@a+2)^0,c
  9973  004F14  0E40               	movlw	64
  9974  004F16  6E16               	movwf	(___fldiv@a+3)^0,c
  9975  004F18  EC84  F016         	call	___fldiv	;wreg free
  9976  004F1C  C00F  F066         	movff	?___fldiv,lroundf@x
  9977  004F20  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  9978  004F24  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  9979  004F28  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  9980  004F2C  EC65  F02E         	call	_lroundf	;wreg free
  9981  004F30  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9982  004F34  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9983  004F38                     
  9984                           ;color.c: 377:     toggle_light(2,2);
  9985  004F38  0E02               	movlw	2
  9986  004F3A  6E01               	movwf	toggle_light@toggletime^0,c
  9987  004F3C  0E02               	movlw	2
  9988  004F3E  EC3A  F01B         	call	_toggle_light
  9989  004F42                     
  9990                           ;color.c: 379:     return CC_amb_ave;
  9991  004F42  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9992  004F46  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9993  004F4A  0012               	return		;funcret
  9994  004F4C                     __end_of_amb_light_measure:
  9995                           	callstack 0
  9996                           
  9997 ;; *************** function _toggle_light *****************
  9998 ;; Defined at:
  9999 ;;		line 49 in file "color.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  lightnumber     1    wreg     unsigned char 
 10002 ;;  toggletime      1    0[COMRAM] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  lightnumber     1    4[COMRAM] unsigned char 
 10005 ;;  i               1    3[COMRAM] unsigned char 
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1    wreg      void 
 10008 ;; Registers used:
 10009 ;;		wreg, status,2, status,0
 10010 ;; Tracked objects:
 10011 ;;		On entry : 0/0
 10012 ;;		On exit  : 0/0
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10015 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10017 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10018 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10019 ;;Total ram usage:        5 bytes
 10020 ;; Hardware stack levels used: 1
 10021 ;; Hardware stack levels required when called: 1
 10022 ;; This function calls:
 10023 ;;		Nothing
 10024 ;; This function is called by:
 10025 ;;		_calibrate_white
 10026 ;;		_detect_color
 10027 ;;		_amb_light_measure
 10028 ;;		_turning_action
 10029 ;; This function uses a non-reentrant model
 10030 ;;
 10031                           
 10032                           	psect	text46
 10033  003674                     __ptext46:
 10034                           	callstack 0
 10035  003674                     _toggle_light:
 10036                           	callstack 27
 10037                           
 10038                           ;incstack = 0
 10039                           ;toggle_light@lightnumber stored from wreg
 10040  003674  6E05               	movwf	toggle_light@lightnumber^0,c
 10041  003676                     
 10042                           ;color.c: 49: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 50: {;color.c: 51:     unsigned char i = 0;
 10043  003676  0E00               	movlw	0
 10044  003678  6E04               	movwf	toggle_light@i^0,c
 10045                           
 10046                           ;color.c: 53:     for (i = 0; i < toggletime; i++){
 10047  00367A  0E00               	movlw	0
 10048  00367C  6E04               	movwf	toggle_light@i^0,c
 10049  00367E  EF86  F01C         	goto	l60
 10050  003682                     l4382:
 10051                           
 10052                           ;color.c: 54:         if (lightnumber == 1){
 10053  003682  0405               	decf	toggle_light@lightnumber^0,w,c
 10054  003684  A4D8               	btfss	status,2,c
 10055  003686  EF47  F01B         	goto	u4511
 10056  00368A  EF49  F01B         	goto	u4510
 10057  00368E                     u4511:
 10058  00368E  EF81  F01B         	goto	l4390
 10059  003692                     u4510:
 10060  003692                     
 10061                           ;color.c: 55:             LATHbits.LATH1 = !LATHbits.LATH1;
 10062  003692  A280               	btfss	128,1,c	;volatile
 10063  003694  EF4E  F01B         	goto	u4521
 10064  003698  EF52  F01B         	goto	u4520
 10065  00369C                     u4521:
 10066  00369C  6A02               	clrf	??_toggle_light^0,c
 10067  00369E  2A02               	incf	??_toggle_light^0,f,c
 10068  0036A0  EF53  F01B         	goto	u4538
 10069  0036A4                     u4520:
 10070  0036A4  6A02               	clrf	??_toggle_light^0,c
 10071  0036A6                     u4538:
 10072  0036A6  4602               	rlncf	??_toggle_light^0,f,c
 10073  0036A8  5080               	movf	128,w,c	;volatile
 10074  0036AA  1802               	xorwf	??_toggle_light^0,w,c
 10075  0036AC  0BFD               	andlw	-3
 10076  0036AE  1802               	xorwf	??_toggle_light^0,w,c
 10077  0036B0  6E80               	movwf	128,c	;volatile
 10078  0036B2                     
 10079                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10080  0036B2  0E29               	movlw	41
 10081  0036B4  6E03               	movwf	(??_toggle_light+1)^0,c
 10082  0036B6  0E96               	movlw	150
 10083  0036B8  6E02               	movwf	??_toggle_light^0,c
 10084  0036BA  0E7F               	movlw	127
 10085  0036BC                     u6427:
 10086  0036BC  2EE8               	decfsz	wreg,f,c
 10087  0036BE  D7FE               	bra	u6427
 10088  0036C0  2E02               	decfsz	??_toggle_light^0,f,c
 10089  0036C2  D7FC               	bra	u6427
 10090  0036C4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10091  0036C6  D7FA               	bra	u6427
 10092  0036C8  F000               	nop	
 10093  0036CA                     
 10094                           ;color.c: 57:             LATHbits.LATH1 = !LATHbits.LATH1;
 10095  0036CA  A280               	btfss	128,1,c	;volatile
 10096  0036CC  EF6A  F01B         	goto	u4541
 10097  0036D0  EF6E  F01B         	goto	u4540
 10098  0036D4                     u4541:
 10099  0036D4  6A02               	clrf	??_toggle_light^0,c
 10100  0036D6  2A02               	incf	??_toggle_light^0,f,c
 10101  0036D8  EF6F  F01B         	goto	u4558
 10102  0036DC                     u4540:
 10103  0036DC  6A02               	clrf	??_toggle_light^0,c
 10104  0036DE                     u4558:
 10105  0036DE  4602               	rlncf	??_toggle_light^0,f,c
 10106  0036E0  5080               	movf	128,w,c	;volatile
 10107  0036E2  1802               	xorwf	??_toggle_light^0,w,c
 10108  0036E4  0BFD               	andlw	-3
 10109  0036E6  1802               	xorwf	??_toggle_light^0,w,c
 10110  0036E8  6E80               	movwf	128,c	;volatile
 10111                           
 10112                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10113  0036EA  0E29               	movlw	41
 10114  0036EC  6E03               	movwf	(??_toggle_light+1)^0,c
 10115  0036EE  0E96               	movlw	150
 10116  0036F0  6E02               	movwf	??_toggle_light^0,c
 10117  0036F2  0E7F               	movlw	127
 10118  0036F4                     u6437:
 10119  0036F4  2EE8               	decfsz	wreg,f,c
 10120  0036F6  D7FE               	bra	u6437
 10121  0036F8  2E02               	decfsz	??_toggle_light^0,f,c
 10122  0036FA  D7FC               	bra	u6437
 10123  0036FC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10124  0036FE  D7FA               	bra	u6437
 10125  003700  F000               	nop	
 10126  003702                     l4390:
 10127                           
 10128                           ;color.c: 60:         if (lightnumber == 2){
 10129  003702  0E02               	movlw	2
 10130  003704  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10131  003706  A4D8               	btfss	status,2,c
 10132  003708  EF88  F01B         	goto	u4561
 10133  00370C  EF8A  F01B         	goto	u4560
 10134  003710                     u4561:
 10135  003710  EFC2  F01B         	goto	l4398
 10136  003714                     u4560:
 10137  003714                     
 10138                           ;color.c: 61:             LATDbits.LATD4 = !LATDbits.LATD4;
 10139  003714  A87C               	btfss	124,4,c	;volatile
 10140  003716  EF8F  F01B         	goto	u4571
 10141  00371A  EF93  F01B         	goto	u4570
 10142  00371E                     u4571:
 10143  00371E  6A02               	clrf	??_toggle_light^0,c
 10144  003720  2A02               	incf	??_toggle_light^0,f,c
 10145  003722  EF94  F01B         	goto	u4588
 10146  003726                     u4570:
 10147  003726  6A02               	clrf	??_toggle_light^0,c
 10148  003728                     u4588:
 10149  003728  3A02               	swapf	??_toggle_light^0,f,c
 10150  00372A  507C               	movf	124,w,c	;volatile
 10151  00372C  1802               	xorwf	??_toggle_light^0,w,c
 10152  00372E  0BEF               	andlw	-17
 10153  003730  1802               	xorwf	??_toggle_light^0,w,c
 10154  003732  6E7C               	movwf	124,c	;volatile
 10155  003734                     
 10156                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10157  003734  0E29               	movlw	41
 10158  003736  6E03               	movwf	(??_toggle_light+1)^0,c
 10159  003738  0E96               	movlw	150
 10160  00373A  6E02               	movwf	??_toggle_light^0,c
 10161  00373C  0E7F               	movlw	127
 10162  00373E                     u6447:
 10163  00373E  2EE8               	decfsz	wreg,f,c
 10164  003740  D7FE               	bra	u6447
 10165  003742  2E02               	decfsz	??_toggle_light^0,f,c
 10166  003744  D7FC               	bra	u6447
 10167  003746  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10168  003748  D7FA               	bra	u6447
 10169  00374A  F000               	nop	
 10170  00374C                     
 10171                           ;color.c: 63:             LATDbits.LATD4 = !LATDbits.LATD4;
 10172  00374C  A87C               	btfss	124,4,c	;volatile
 10173  00374E  EFAB  F01B         	goto	u4591
 10174  003752  EFAF  F01B         	goto	u4590
 10175  003756                     u4591:
 10176  003756  6A02               	clrf	??_toggle_light^0,c
 10177  003758  2A02               	incf	??_toggle_light^0,f,c
 10178  00375A  EFB0  F01B         	goto	u4608
 10179  00375E                     u4590:
 10180  00375E  6A02               	clrf	??_toggle_light^0,c
 10181  003760                     u4608:
 10182  003760  3A02               	swapf	??_toggle_light^0,f,c
 10183  003762  507C               	movf	124,w,c	;volatile
 10184  003764  1802               	xorwf	??_toggle_light^0,w,c
 10185  003766  0BEF               	andlw	-17
 10186  003768  1802               	xorwf	??_toggle_light^0,w,c
 10187  00376A  6E7C               	movwf	124,c	;volatile
 10188                           
 10189                           ;color.c: 64:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10190  00376C  0E29               	movlw	41
 10191  00376E  6E03               	movwf	(??_toggle_light+1)^0,c
 10192  003770  0E96               	movlw	150
 10193  003772  6E02               	movwf	??_toggle_light^0,c
 10194  003774  0E7F               	movlw	127
 10195  003776                     u6457:
 10196  003776  2EE8               	decfsz	wreg,f,c
 10197  003778  D7FE               	bra	u6457
 10198  00377A  2E02               	decfsz	??_toggle_light^0,f,c
 10199  00377C  D7FC               	bra	u6457
 10200  00377E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10201  003780  D7FA               	bra	u6457
 10202  003782  F000               	nop	
 10203  003784                     l4398:
 10204                           
 10205                           ;color.c: 66:         if (lightnumber == 3){
 10206  003784  0E03               	movlw	3
 10207  003786  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10208  003788  A4D8               	btfss	status,2,c
 10209  00378A  EFC9  F01B         	goto	u4611
 10210  00378E  EFCB  F01B         	goto	u4610
 10211  003792                     u4611:
 10212  003792  EF07  F01C         	goto	l4406
 10213  003796                     u4610:
 10214  003796                     
 10215                           ;color.c: 67:             LATDbits.LATD3 = !LATDbits.LATD3;
 10216  003796  A67C               	btfss	124,3,c	;volatile
 10217  003798  EFD0  F01B         	goto	u4621
 10218  00379C  EFD4  F01B         	goto	u4620
 10219  0037A0                     u4621:
 10220  0037A0  6A02               	clrf	??_toggle_light^0,c
 10221  0037A2  2A02               	incf	??_toggle_light^0,f,c
 10222  0037A4  EFD5  F01B         	goto	u4638
 10223  0037A8                     u4620:
 10224  0037A8  6A02               	clrf	??_toggle_light^0,c
 10225  0037AA                     u4638:
 10226  0037AA  4602               	rlncf	??_toggle_light^0,f,c
 10227  0037AC  4602               	rlncf	??_toggle_light^0,f,c
 10228  0037AE  4602               	rlncf	??_toggle_light^0,f,c
 10229  0037B0  507C               	movf	124,w,c	;volatile
 10230  0037B2  1802               	xorwf	??_toggle_light^0,w,c
 10231  0037B4  0BF7               	andlw	-9
 10232  0037B6  1802               	xorwf	??_toggle_light^0,w,c
 10233  0037B8  6E7C               	movwf	124,c	;volatile
 10234  0037BA                     
 10235                           ;color.c: 68:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10236  0037BA  0E29               	movlw	41
 10237  0037BC  6E03               	movwf	(??_toggle_light+1)^0,c
 10238  0037BE  0E96               	movlw	150
 10239  0037C0  6E02               	movwf	??_toggle_light^0,c
 10240  0037C2  0E7F               	movlw	127
 10241  0037C4                     u6467:
 10242  0037C4  2EE8               	decfsz	wreg,f,c
 10243  0037C6  D7FE               	bra	u6467
 10244  0037C8  2E02               	decfsz	??_toggle_light^0,f,c
 10245  0037CA  D7FC               	bra	u6467
 10246  0037CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10247  0037CE  D7FA               	bra	u6467
 10248  0037D0  F000               	nop	
 10249  0037D2                     
 10250                           ;color.c: 69:             LATDbits.LATD3 = !LATDbits.LATD3;
 10251  0037D2  A67C               	btfss	124,3,c	;volatile
 10252  0037D4  EFEE  F01B         	goto	u4641
 10253  0037D8  EFF2  F01B         	goto	u4640
 10254  0037DC                     u4641:
 10255  0037DC  6A02               	clrf	??_toggle_light^0,c
 10256  0037DE  2A02               	incf	??_toggle_light^0,f,c
 10257  0037E0  EFF3  F01B         	goto	u4658
 10258  0037E4                     u4640:
 10259  0037E4  6A02               	clrf	??_toggle_light^0,c
 10260  0037E6                     u4658:
 10261  0037E6  4602               	rlncf	??_toggle_light^0,f,c
 10262  0037E8  4602               	rlncf	??_toggle_light^0,f,c
 10263  0037EA  4602               	rlncf	??_toggle_light^0,f,c
 10264  0037EC  507C               	movf	124,w,c	;volatile
 10265  0037EE  1802               	xorwf	??_toggle_light^0,w,c
 10266  0037F0  0BF7               	andlw	-9
 10267  0037F2  1802               	xorwf	??_toggle_light^0,w,c
 10268  0037F4  6E7C               	movwf	124,c	;volatile
 10269                           
 10270                           ;color.c: 70:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10271  0037F6  0E29               	movlw	41
 10272  0037F8  6E03               	movwf	(??_toggle_light+1)^0,c
 10273  0037FA  0E96               	movlw	150
 10274  0037FC  6E02               	movwf	??_toggle_light^0,c
 10275  0037FE  0E7F               	movlw	127
 10276  003800                     u6477:
 10277  003800  2EE8               	decfsz	wreg,f,c
 10278  003802  D7FE               	bra	u6477
 10279  003804  2E02               	decfsz	??_toggle_light^0,f,c
 10280  003806  D7FC               	bra	u6477
 10281  003808  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10282  00380A  D7FA               	bra	u6477
 10283  00380C  F000               	nop	
 10284  00380E                     l4406:
 10285                           
 10286                           ;color.c: 72:         if (lightnumber == 4){
 10287  00380E  0E04               	movlw	4
 10288  003810  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10289  003812  A4D8               	btfss	status,2,c
 10290  003814  EF0E  F01C         	goto	u4661
 10291  003818  EF10  F01C         	goto	u4660
 10292  00381C                     u4661:
 10293  00381C  EF46  F01C         	goto	l4414
 10294  003820                     u4660:
 10295  003820                     
 10296                           ;color.c: 73:             LATFbits.LATF0 = !LATFbits.LATF0;
 10297  003820  A07E               	btfss	126,0,c	;volatile
 10298  003822  EF15  F01C         	goto	u4671
 10299  003826  EF19  F01C         	goto	u4670
 10300  00382A                     u4671:
 10301  00382A  6A02               	clrf	??_toggle_light^0,c
 10302  00382C  2A02               	incf	??_toggle_light^0,f,c
 10303  00382E  EF1A  F01C         	goto	u4688
 10304  003832                     u4670:
 10305  003832  6A02               	clrf	??_toggle_light^0,c
 10306  003834                     u4688:
 10307  003834  507E               	movf	126,w,c	;volatile
 10308  003836  1802               	xorwf	??_toggle_light^0,w,c
 10309  003838  0BFE               	andlw	-2
 10310  00383A  1802               	xorwf	??_toggle_light^0,w,c
 10311  00383C  6E7E               	movwf	126,c	;volatile
 10312  00383E                     
 10313                           ;color.c: 74:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10314  00383E  0E29               	movlw	41
 10315  003840  6E03               	movwf	(??_toggle_light+1)^0,c
 10316  003842  0E96               	movlw	150
 10317  003844  6E02               	movwf	??_toggle_light^0,c
 10318  003846  0E7F               	movlw	127
 10319  003848                     u6487:
 10320  003848  2EE8               	decfsz	wreg,f,c
 10321  00384A  D7FE               	bra	u6487
 10322  00384C  2E02               	decfsz	??_toggle_light^0,f,c
 10323  00384E  D7FC               	bra	u6487
 10324  003850  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10325  003852  D7FA               	bra	u6487
 10326  003854  F000               	nop	
 10327  003856                     
 10328                           ;color.c: 75:             LATFbits.LATF0 = !LATFbits.LATF0;
 10329  003856  A07E               	btfss	126,0,c	;volatile
 10330  003858  EF30  F01C         	goto	u4691
 10331  00385C  EF34  F01C         	goto	u4690
 10332  003860                     u4691:
 10333  003860  6A02               	clrf	??_toggle_light^0,c
 10334  003862  2A02               	incf	??_toggle_light^0,f,c
 10335  003864  EF35  F01C         	goto	u4708
 10336  003868                     u4690:
 10337  003868  6A02               	clrf	??_toggle_light^0,c
 10338  00386A                     u4708:
 10339  00386A  507E               	movf	126,w,c	;volatile
 10340  00386C  1802               	xorwf	??_toggle_light^0,w,c
 10341  00386E  0BFE               	andlw	-2
 10342  003870  1802               	xorwf	??_toggle_light^0,w,c
 10343  003872  6E7E               	movwf	126,c	;volatile
 10344                           
 10345                           ;color.c: 76:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10346  003874  0E29               	movlw	41
 10347  003876  6E03               	movwf	(??_toggle_light+1)^0,c
 10348  003878  0E96               	movlw	150
 10349  00387A  6E02               	movwf	??_toggle_light^0,c
 10350  00387C  0E7F               	movlw	127
 10351  00387E                     u6497:
 10352  00387E  2EE8               	decfsz	wreg,f,c
 10353  003880  D7FE               	bra	u6497
 10354  003882  2E02               	decfsz	??_toggle_light^0,f,c
 10355  003884  D7FC               	bra	u6497
 10356  003886  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10357  003888  D7FA               	bra	u6497
 10358  00388A  F000               	nop	
 10359  00388C                     l4414:
 10360                           
 10361                           ;color.c: 78:         if (lightnumber == 3){
 10362  00388C  0E03               	movlw	3
 10363  00388E  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10364  003890  A4D8               	btfss	status,2,c
 10365  003892  EF4D  F01C         	goto	u4711
 10366  003896  EF4F  F01C         	goto	u4710
 10367  00389A                     u4711:
 10368  00389A  EF85  F01C         	goto	l4422
 10369  00389E                     u4710:
 10370  00389E                     
 10371                           ;color.c: 79:             LATHbits.LATH0 = !LATHbits.LATH0;
 10372  00389E  A080               	btfss	128,0,c	;volatile
 10373  0038A0  EF54  F01C         	goto	u4721
 10374  0038A4  EF58  F01C         	goto	u4720
 10375  0038A8                     u4721:
 10376  0038A8  6A02               	clrf	??_toggle_light^0,c
 10377  0038AA  2A02               	incf	??_toggle_light^0,f,c
 10378  0038AC  EF59  F01C         	goto	u4738
 10379  0038B0                     u4720:
 10380  0038B0  6A02               	clrf	??_toggle_light^0,c
 10381  0038B2                     u4738:
 10382  0038B2  5080               	movf	128,w,c	;volatile
 10383  0038B4  1802               	xorwf	??_toggle_light^0,w,c
 10384  0038B6  0BFE               	andlw	-2
 10385  0038B8  1802               	xorwf	??_toggle_light^0,w,c
 10386  0038BA  6E80               	movwf	128,c	;volatile
 10387  0038BC                     
 10388                           ;color.c: 80:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10389  0038BC  0E29               	movlw	41
 10390  0038BE  6E03               	movwf	(??_toggle_light+1)^0,c
 10391  0038C0  0E96               	movlw	150
 10392  0038C2  6E02               	movwf	??_toggle_light^0,c
 10393  0038C4  0E7F               	movlw	127
 10394  0038C6                     u6507:
 10395  0038C6  2EE8               	decfsz	wreg,f,c
 10396  0038C8  D7FE               	bra	u6507
 10397  0038CA  2E02               	decfsz	??_toggle_light^0,f,c
 10398  0038CC  D7FC               	bra	u6507
 10399  0038CE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10400  0038D0  D7FA               	bra	u6507
 10401  0038D2  F000               	nop	
 10402  0038D4                     
 10403                           ;color.c: 81:             LATHbits.LATH0 = !LATHbits.LATH0;
 10404  0038D4  A080               	btfss	128,0,c	;volatile
 10405  0038D6  EF6F  F01C         	goto	u4741
 10406  0038DA  EF73  F01C         	goto	u4740
 10407  0038DE                     u4741:
 10408  0038DE  6A02               	clrf	??_toggle_light^0,c
 10409  0038E0  2A02               	incf	??_toggle_light^0,f,c
 10410  0038E2  EF74  F01C         	goto	u4758
 10411  0038E6                     u4740:
 10412  0038E6  6A02               	clrf	??_toggle_light^0,c
 10413  0038E8                     u4758:
 10414  0038E8  5080               	movf	128,w,c	;volatile
 10415  0038EA  1802               	xorwf	??_toggle_light^0,w,c
 10416  0038EC  0BFE               	andlw	-2
 10417  0038EE  1802               	xorwf	??_toggle_light^0,w,c
 10418  0038F0  6E80               	movwf	128,c	;volatile
 10419                           
 10420                           ;color.c: 82:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10421  0038F2  0E29               	movlw	41
 10422  0038F4  6E03               	movwf	(??_toggle_light+1)^0,c
 10423  0038F6  0E96               	movlw	150
 10424  0038F8  6E02               	movwf	??_toggle_light^0,c
 10425  0038FA  0E7F               	movlw	127
 10426  0038FC                     u6517:
 10427  0038FC  2EE8               	decfsz	wreg,f,c
 10428  0038FE  D7FE               	bra	u6517
 10429  003900  2E02               	decfsz	??_toggle_light^0,f,c
 10430  003902  D7FC               	bra	u6517
 10431  003904  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10432  003906  D7FA               	bra	u6517
 10433  003908  F000               	nop	
 10434  00390A                     l4422:
 10435                           
 10436                           ;color.c: 84:     }
 10437  00390A  2A04               	incf	toggle_light@i^0,f,c
 10438  00390C                     l60:
 10439  00390C  5001               	movf	toggle_light@toggletime^0,w,c
 10440  00390E  5C04               	subwf	toggle_light@i^0,w,c
 10441  003910  A0D8               	btfss	status,0,c
 10442  003912  EF8D  F01C         	goto	u4761
 10443  003916  EF8F  F01C         	goto	u4760
 10444  00391A                     u4761:
 10445  00391A  EF41  F01B         	goto	l4382
 10446  00391E                     u4760:
 10447  00391E  0012               	return		;funcret
 10448  003920                     __end_of_toggle_light:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _lroundf *****************
 10452 ;; Defined at:
 10453 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  x               4    6[BANK0 ] float 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  4    6[BANK0 ] long 
 10460 ;; Registers used:
 10461 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10467 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;Total ram usage:        4 bytes
 10472 ;; Hardware stack levels used: 1
 10473 ;; Hardware stack levels required when called: 4
 10474 ;; This function calls:
 10475 ;;		___fltol
 10476 ;;		_roundf
 10477 ;; This function is called by:
 10478 ;;		_detect_color
 10479 ;;		_amb_light_measure
 10480 ;;		_detect_wall
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text47
 10485  005CCA                     __ptext47:
 10486                           	callstack 0
 10487  005CCA                     _lroundf:
 10488                           	callstack 24
 10489  005CCA  C066  F041         	movff	lroundf@x,roundf@x
 10490  005CCE  C067  F042         	movff	lroundf@x+1,roundf@x+1
 10491  005CD2  C068  F043         	movff	lroundf@x+2,roundf@x+2
 10492  005CD6  C069  F044         	movff	lroundf@x+3,roundf@x+3
 10493  005CDA  ECDB  F012         	call	_roundf	;wreg free
 10494  005CDE  C041  F05B         	movff	?_roundf,___fltol@f1
 10495  005CE2  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
 10496  005CE6  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
 10497  005CEA  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
 10498  005CEE  ECA6  F027         	call	___fltol	;wreg free
 10499  005CF2  C05B  F066         	movff	?___fltol,?_lroundf
 10500  005CF6  C05C  F067         	movff	?___fltol+1,?_lroundf+1
 10501  005CFA  C05D  F068         	movff	?___fltol+2,?_lroundf+2
 10502  005CFE  C05E  F069         	movff	?___fltol+3,?_lroundf+3
 10503  005D02  0012               	return		;funcret
 10504  005D04                     __end_of_lroundf:
 10505                           	callstack 0
 10506                           
 10507 ;; *************** function _roundf *****************
 10508 ;; Defined at:
 10509 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;  x               4   64[COMRAM] float 
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;  y               4   86[COMRAM] float 
 10514 ;;  u               4   82[COMRAM] struct .
 10515 ;;  e               2   76[COMRAM] int 
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  4   64[COMRAM] float 
 10518 ;; Registers used:
 10519 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10526 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10529 ;;Total ram usage:       26 bytes
 10530 ;; Hardware stack levels used: 1
 10531 ;; Hardware stack levels required when called: 3
 10532 ;; This function calls:
 10533 ;;		___fladd
 10534 ;;		___flge
 10535 ;;		___flmul
 10536 ;;		___flneg
 10537 ;;		___flsub
 10538 ;; This function is called by:
 10539 ;;		_lroundf
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           	psect	text48
 10544  0025B6                     __ptext48:
 10545                           	callstack 0
 10546  0025B6                     _roundf:
 10547                           	callstack 24
 10548  0025B6  C176  F053         	movff	roundf@F527,roundf@u
 10549  0025BA  C177  F054         	movff	roundf@F527+1,roundf@u+1
 10550  0025BE  C178  F055         	movff	roundf@F527+2,roundf@u+2
 10551  0025C2  C179  F056         	movff	roundf@F527+3,roundf@u+3
 10552  0025C6  C041  F053         	movff	roundf@x,roundf@u
 10553  0025CA  C042  F054         	movff	roundf@x+1,roundf@u+1
 10554  0025CE  C043  F055         	movff	roundf@x+2,roundf@u+2
 10555  0025D2  C044  F056         	movff	roundf@x+3,roundf@u+3
 10556  0025D6  C053  F045         	movff	roundf@u,??_roundf
 10557  0025DA  C054  F046         	movff	roundf@u+1,??_roundf+1
 10558  0025DE  C055  F047         	movff	roundf@u+2,??_roundf+2
 10559  0025E2  C056  F048         	movff	roundf@u+3,??_roundf+3
 10560  0025E6  0E18               	movlw	24
 10561  0025E8  EFFB  F012         	goto	u4420
 10562  0025EC                     u4425:
 10563  0025EC  90D8               	bcf	status,0,c
 10564  0025EE  3248               	rrcf	(??_roundf+3)^0,f,c
 10565  0025F0  3247               	rrcf	(??_roundf+2)^0,f,c
 10566  0025F2  3246               	rrcf	(??_roundf+1)^0,f,c
 10567  0025F4  3245               	rrcf	??_roundf^0,f,c
 10568  0025F6                     u4420:
 10569  0025F6  2EE8               	decfsz	wreg,f,c
 10570  0025F8  EFF6  F012         	goto	u4425
 10571  0025FC  5045               	movf	??_roundf^0,w,c
 10572  0025FE  6E4D               	movwf	roundf@e^0,c
 10573  002600  6A4E               	clrf	(roundf@e+1)^0,c
 10574  002602  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10575  002604  EF0D  F013         	goto	u4431
 10576  002608  504E               	movf	(roundf@e+1)^0,w,c
 10577  00260A  E109               	bnz	u4430
 10578  00260C  0E96               	movlw	150
 10579  00260E  5C4D               	subwf	roundf@e^0,w,c
 10580  002610  A0D8               	btfss	status,0,c
 10581  002612  EF0D  F013         	goto	u4431
 10582  002616  EF0F  F013         	goto	u4430
 10583  00261A                     u4431:
 10584  00261A  EF19  F013         	goto	l4352
 10585  00261E                     u4430:
 10586  00261E  C041  F041         	movff	roundf@x,?_roundf
 10587  002622  C042  F042         	movff	roundf@x+1,?_roundf+1
 10588  002626  C043  F043         	movff	roundf@x+2,?_roundf+2
 10589  00262A  C044  F044         	movff	roundf@x+3,?_roundf+3
 10590  00262E  EFB1  F014         	goto	l1417
 10591  002632                     l4352:
 10592  002632  C053  F045         	movff	roundf@u,??_roundf
 10593  002636  C054  F046         	movff	roundf@u+1,??_roundf+1
 10594  00263A  C055  F047         	movff	roundf@u+2,??_roundf+2
 10595  00263E  C056  F048         	movff	roundf@u+3,??_roundf+3
 10596  002642  0E20               	movlw	32
 10597  002644  EF29  F013         	goto	u4440
 10598  002648                     u4445:
 10599  002648  90D8               	bcf	status,0,c
 10600  00264A  3248               	rrcf	(??_roundf+3)^0,f,c
 10601  00264C  3247               	rrcf	(??_roundf+2)^0,f,c
 10602  00264E  3246               	rrcf	(??_roundf+1)^0,f,c
 10603  002650  3245               	rrcf	??_roundf^0,f,c
 10604  002652                     u4440:
 10605  002652  2EE8               	decfsz	wreg,f,c
 10606  002654  EF24  F013         	goto	u4445
 10607  002658  5045               	movf	??_roundf^0,w,c
 10608  00265A  1046               	iorwf	(??_roundf+1)^0,w,c
 10609  00265C  1047               	iorwf	(??_roundf+2)^0,w,c
 10610  00265E  1048               	iorwf	(??_roundf+3)^0,w,c
 10611  002660  B4D8               	btfsc	status,2,c
 10612  002662  EF35  F013         	goto	u4451
 10613  002666  EF37  F013         	goto	u4450
 10614  00266A                     u4451:
 10615  00266A  EF49  F013         	goto	l4356
 10616  00266E                     u4450:
 10617  00266E  C041  F001         	movff	roundf@x,___flneg@f1
 10618  002672  C042  F002         	movff	roundf@x+1,___flneg@f1+1
 10619  002676  C043  F003         	movff	roundf@x+2,___flneg@f1+2
 10620  00267A  C044  F004         	movff	roundf@x+3,___flneg@f1+3
 10621  00267E  EC82  F02E         	call	___flneg	;wreg free
 10622  002682  C001  F041         	movff	?___flneg,roundf@x
 10623  002686  C002  F042         	movff	?___flneg+1,roundf@x+1
 10624  00268A  C003  F043         	movff	?___flneg+2,roundf@x+2
 10625  00268E  C004  F044         	movff	?___flneg+3,roundf@x+3
 10626  002692                     l4356:
 10627  002692  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10628  002694  EF57  F013         	goto	u4460
 10629  002698  504E               	movf	(roundf@e+1)^0,w,c
 10630  00269A  E107               	bnz	u4461
 10631  00269C  0E7E               	movlw	126
 10632  00269E  5C4D               	subwf	roundf@e^0,w,c
 10633  0026A0  B0D8               	btfsc	status,0,c
 10634  0026A2  EF55  F013         	goto	u4461
 10635  0026A6  EF57  F013         	goto	u4460
 10636  0026AA                     u4461:
 10637  0026AA  EF73  F013         	goto	l4362
 10638  0026AE                     u4460:
 10639  0026AE  C053  F028         	movff	roundf@u,___flmul@b
 10640  0026B2  C054  F029         	movff	roundf@u+1,___flmul@b+1
 10641  0026B6  C055  F02A         	movff	roundf@u+2,___flmul@b+2
 10642  0026BA  C056  F02B         	movff	roundf@u+3,___flmul@b+3
 10643  0026BE  0E00               	movlw	0
 10644  0026C0  6E2C               	movwf	___flmul@a^0,c
 10645  0026C2  0E00               	movlw	0
 10646  0026C4  6E2D               	movwf	(___flmul@a+1)^0,c
 10647  0026C6  0E00               	movlw	0
 10648  0026C8  6E2E               	movwf	(___flmul@a+2)^0,c
 10649  0026CA  0E00               	movlw	0
 10650  0026CC  6E2F               	movwf	(___flmul@a+3)^0,c
 10651  0026CE  ECC6  F010         	call	___flmul	;wreg free
 10652  0026D2  C028  F041         	movff	?___flmul,?_roundf
 10653  0026D6  C029  F042         	movff	?___flmul+1,?_roundf+1
 10654  0026DA  C02A  F043         	movff	?___flmul+2,?_roundf+2
 10655  0026DE  C02B  F044         	movff	?___flmul+3,?_roundf+3
 10656  0026E2  EFB1  F014         	goto	l1417
 10657  0026E6                     l4362:
 10658  0026E6  0E00               	movlw	0
 10659  0026E8  6E05               	movwf	___fladd@a^0,c
 10660  0026EA  0E00               	movlw	0
 10661  0026EC  6E06               	movwf	(___fladd@a+1)^0,c
 10662  0026EE  0E00               	movlw	0
 10663  0026F0  6E07               	movwf	(___fladd@a+2)^0,c
 10664  0026F2  0E4B               	movlw	75
 10665  0026F4  6E08               	movwf	(___fladd@a+3)^0,c
 10666  0026F6  C041  F001         	movff	roundf@x,___fladd@b
 10667  0026FA  C042  F002         	movff	roundf@x+1,___fladd@b+1
 10668  0026FE  C043  F003         	movff	roundf@x+2,___fladd@b+2
 10669  002702  C044  F004         	movff	roundf@x+3,___fladd@b+3
 10670  002706  EC66  F00E         	call	___fladd	;wreg free
 10671  00270A  C001  F04F         	movff	?___fladd,_roundf$2949
 10672  00270E  C002  F050         	movff	?___fladd+1,_roundf$2949+1
 10673  002712  C003  F051         	movff	?___fladd+2,_roundf$2949+2
 10674  002716  C004  F052         	movff	?___fladd+3,_roundf$2949+3
 10675  00271A  0E00               	movlw	0
 10676  00271C  6E05               	movwf	___fladd@a^0,c
 10677  00271E  0E00               	movlw	0
 10678  002720  6E06               	movwf	(___fladd@a+1)^0,c
 10679  002722  0E00               	movlw	0
 10680  002724  6E07               	movwf	(___fladd@a+2)^0,c
 10681  002726  0ECB               	movlw	203
 10682  002728  6E08               	movwf	(___fladd@a+3)^0,c
 10683  00272A  C04F  F001         	movff	_roundf$2949,___fladd@b
 10684  00272E  C050  F002         	movff	_roundf$2949+1,___fladd@b+1
 10685  002732  C051  F003         	movff	_roundf$2949+2,___fladd@b+2
 10686  002736  C052  F004         	movff	_roundf$2949+3,___fladd@b+3
 10687  00273A  EC66  F00E         	call	___fladd	;wreg free
 10688  00273E  C001  F049         	movff	?___fladd,_roundf$2950
 10689  002742  C002  F04A         	movff	?___fladd+1,_roundf$2950+1
 10690  002746  C003  F04B         	movff	?___fladd+2,_roundf$2950+2
 10691  00274A  C004  F04C         	movff	?___fladd+3,_roundf$2950+3
 10692  00274E  C049  F011         	movff	_roundf$2950,___flsub@b
 10693  002752  C04A  F012         	movff	_roundf$2950+1,___flsub@b+1
 10694  002756  C04B  F013         	movff	_roundf$2950+2,___flsub@b+2
 10695  00275A  C04C  F014         	movff	_roundf$2950+3,___flsub@b+3
 10696  00275E  C041  F015         	movff	roundf@x,___flsub@a
 10697  002762  C042  F016         	movff	roundf@x+1,___flsub@a+1
 10698  002766  C043  F017         	movff	roundf@x+2,___flsub@a+2
 10699  00276A  C044  F018         	movff	roundf@x+3,___flsub@a+3
 10700  00276E  EC80  F02D         	call	___flsub	;wreg free
 10701  002772  C011  F057         	movff	?___flsub,roundf@y
 10702  002776  C012  F058         	movff	?___flsub+1,roundf@y+1
 10703  00277A  C013  F059         	movff	?___flsub+2,roundf@y+2
 10704  00277E  C014  F05A         	movff	?___flsub+3,roundf@y+3
 10705  002782  0E00               	movlw	0
 10706  002784  6E01               	movwf	___flge@ff1^0,c
 10707  002786  0E00               	movlw	0
 10708  002788  6E02               	movwf	(___flge@ff1+1)^0,c
 10709  00278A  0E00               	movlw	0
 10710  00278C  6E03               	movwf	(___flge@ff1+2)^0,c
 10711  00278E  0E3F               	movlw	63
 10712  002790  6E04               	movwf	(___flge@ff1+3)^0,c
 10713  002792  C057  F005         	movff	roundf@y,___flge@ff2
 10714  002796  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10715  00279A  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10716  00279E  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10717  0027A2  EC2A  F028         	call	___flge	;wreg free
 10718  0027A6  B0D8               	btfsc	status,0,c
 10719  0027A8  EFD8  F013         	goto	u4471
 10720  0027AC  EFDA  F013         	goto	u4470
 10721  0027B0                     u4471:
 10722  0027B0  EF10  F014         	goto	l4366
 10723  0027B4                     u4470:
 10724  0027B4  C041  F005         	movff	roundf@x,___fladd@a
 10725  0027B8  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10726  0027BC  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10727  0027C0  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10728  0027C4  C057  F001         	movff	roundf@y,___fladd@b
 10729  0027C8  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10730  0027CC  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10731  0027D0  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10732  0027D4  EC66  F00E         	call	___fladd	;wreg free
 10733  0027D8  C001  F04F         	movff	?___fladd,_roundf$2949
 10734  0027DC  C002  F050         	movff	?___fladd+1,_roundf$2949+1
 10735  0027E0  C003  F051         	movff	?___fladd+2,_roundf$2949+2
 10736  0027E4  C004  F052         	movff	?___fladd+3,_roundf$2949+3
 10737  0027E8  C04F  F001         	movff	_roundf$2949,___fladd@b
 10738  0027EC  C050  F002         	movff	_roundf$2949+1,___fladd@b+1
 10739  0027F0  C051  F003         	movff	_roundf$2949+2,___fladd@b+2
 10740  0027F4  C052  F004         	movff	_roundf$2949+3,___fladd@b+3
 10741  0027F8  0E00               	movlw	0
 10742  0027FA  6E05               	movwf	___fladd@a^0,c
 10743  0027FC  0E00               	movlw	0
 10744  0027FE  6E06               	movwf	(___fladd@a+1)^0,c
 10745  002800  0E80               	movlw	128
 10746  002802  6E07               	movwf	(___fladd@a+2)^0,c
 10747  002804  0EBF               	movlw	191
 10748  002806  6E08               	movwf	(___fladd@a+3)^0,c
 10749  002808  EC66  F00E         	call	___fladd	;wreg free
 10750  00280C  C001  F057         	movff	?___fladd,roundf@y
 10751  002810  C002  F058         	movff	?___fladd+1,roundf@y+1
 10752  002814  C003  F059         	movff	?___fladd+2,roundf@y+2
 10753  002818  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10754  00281C  EF79  F014         	goto	l4372
 10755  002820                     l4366:
 10756  002820  0E00               	movlw	0
 10757  002822  6E01               	movwf	___flge@ff1^0,c
 10758  002824  0E00               	movlw	0
 10759  002826  6E02               	movwf	(___flge@ff1+1)^0,c
 10760  002828  0E00               	movlw	0
 10761  00282A  6E03               	movwf	(___flge@ff1+2)^0,c
 10762  00282C  0EBF               	movlw	191
 10763  00282E  6E04               	movwf	(___flge@ff1+3)^0,c
 10764  002830  C057  F005         	movff	roundf@y,___flge@ff2
 10765  002834  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10766  002838  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10767  00283C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10768  002840  EC2A  F028         	call	___flge	;wreg free
 10769  002844  A0D8               	btfss	status,0,c
 10770  002846  EF27  F014         	goto	u4481
 10771  00284A  EF29  F014         	goto	u4480
 10772  00284E                     u4481:
 10773  00284E  EF5F  F014         	goto	l4370
 10774  002852                     u4480:
 10775  002852  C041  F005         	movff	roundf@x,___fladd@a
 10776  002856  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10777  00285A  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10778  00285E  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10779  002862  C057  F001         	movff	roundf@y,___fladd@b
 10780  002866  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10781  00286A  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10782  00286E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10783  002872  EC66  F00E         	call	___fladd	;wreg free
 10784  002876  C001  F04F         	movff	?___fladd,_roundf$2949
 10785  00287A  C002  F050         	movff	?___fladd+1,_roundf$2949+1
 10786  00287E  C003  F051         	movff	?___fladd+2,_roundf$2949+2
 10787  002882  C004  F052         	movff	?___fladd+3,_roundf$2949+3
 10788  002886  C04F  F001         	movff	_roundf$2949,___fladd@b
 10789  00288A  C050  F002         	movff	_roundf$2949+1,___fladd@b+1
 10790  00288E  C051  F003         	movff	_roundf$2949+2,___fladd@b+2
 10791  002892  C052  F004         	movff	_roundf$2949+3,___fladd@b+3
 10792  002896  0E00               	movlw	0
 10793  002898  6E05               	movwf	___fladd@a^0,c
 10794  00289A  0E00               	movlw	0
 10795  00289C  6E06               	movwf	(___fladd@a+1)^0,c
 10796  00289E  0E80               	movlw	128
 10797  0028A0  6E07               	movwf	(___fladd@a+2)^0,c
 10798  0028A2  0E3F               	movlw	63
 10799  0028A4  6E08               	movwf	(___fladd@a+3)^0,c
 10800  0028A6  EC66  F00E         	call	___fladd	;wreg free
 10801  0028AA  C001  F057         	movff	?___fladd,roundf@y
 10802  0028AE  C002  F058         	movff	?___fladd+1,roundf@y+1
 10803  0028B2  C003  F059         	movff	?___fladd+2,roundf@y+2
 10804  0028B6  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10805  0028BA  EF79  F014         	goto	l4372
 10806  0028BE                     l4370:
 10807  0028BE  C057  F001         	movff	roundf@y,___fladd@b
 10808  0028C2  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10809  0028C6  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10810  0028CA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10811  0028CE  C041  F005         	movff	roundf@x,___fladd@a
 10812  0028D2  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10813  0028D6  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10814  0028DA  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10815  0028DE  EC66  F00E         	call	___fladd	;wreg free
 10816  0028E2  C001  F057         	movff	?___fladd,roundf@y
 10817  0028E6  C002  F058         	movff	?___fladd+1,roundf@y+1
 10818  0028EA  C003  F059         	movff	?___fladd+2,roundf@y+2
 10819  0028EE  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10820  0028F2                     l4372:
 10821  0028F2  C053  F045         	movff	roundf@u,??_roundf
 10822  0028F6  C054  F046         	movff	roundf@u+1,??_roundf+1
 10823  0028FA  C055  F047         	movff	roundf@u+2,??_roundf+2
 10824  0028FE  C056  F048         	movff	roundf@u+3,??_roundf+3
 10825  002902  0E20               	movlw	32
 10826  002904  EF89  F014         	goto	u4490
 10827  002908                     u4495:
 10828  002908  90D8               	bcf	status,0,c
 10829  00290A  3248               	rrcf	(??_roundf+3)^0,f,c
 10830  00290C  3247               	rrcf	(??_roundf+2)^0,f,c
 10831  00290E  3246               	rrcf	(??_roundf+1)^0,f,c
 10832  002910  3245               	rrcf	??_roundf^0,f,c
 10833  002912                     u4490:
 10834  002912  2EE8               	decfsz	wreg,f,c
 10835  002914  EF84  F014         	goto	u4495
 10836  002918  5045               	movf	??_roundf^0,w,c
 10837  00291A  1046               	iorwf	(??_roundf+1)^0,w,c
 10838  00291C  1047               	iorwf	(??_roundf+2)^0,w,c
 10839  00291E  1048               	iorwf	(??_roundf+3)^0,w,c
 10840  002920  B4D8               	btfsc	status,2,c
 10841  002922  EF95  F014         	goto	u4501
 10842  002926  EF97  F014         	goto	u4500
 10843  00292A                     u4501:
 10844  00292A  EFA9  F014         	goto	l4376
 10845  00292E                     u4500:
 10846  00292E  C057  F001         	movff	roundf@y,___flneg@f1
 10847  002932  C058  F002         	movff	roundf@y+1,___flneg@f1+1
 10848  002936  C059  F003         	movff	roundf@y+2,___flneg@f1+2
 10849  00293A  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
 10850  00293E  EC82  F02E         	call	___flneg	;wreg free
 10851  002942  C001  F057         	movff	?___flneg,roundf@y
 10852  002946  C002  F058         	movff	?___flneg+1,roundf@y+1
 10853  00294A  C003  F059         	movff	?___flneg+2,roundf@y+2
 10854  00294E  C004  F05A         	movff	?___flneg+3,roundf@y+3
 10855  002952                     l4376:
 10856  002952  C057  F041         	movff	roundf@y,?_roundf
 10857  002956  C058  F042         	movff	roundf@y+1,?_roundf+1
 10858  00295A  C059  F043         	movff	roundf@y+2,?_roundf+2
 10859  00295E  C05A  F044         	movff	roundf@y+3,?_roundf+3
 10860  002962                     l1417:
 10861  002962  0012               	return		;funcret
 10862  002964                     __end_of_roundf:
 10863                           	callstack 0
 10864                           
 10865 ;; *************** function ___flsub *****************
 10866 ;; Defined at:
 10867 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;  b               4   16[COMRAM] float 
 10870 ;;  a               4   20[COMRAM] float 
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  4   16[COMRAM] float 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;Total ram usage:        8 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 2
 10889 ;; This function calls:
 10890 ;;		___fladd
 10891 ;; This function is called by:
 10892 ;;		_roundf
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text49
 10897  005B00                     __ptext49:
 10898                           	callstack 0
 10899  005B00                     ___flsub:
 10900                           	callstack 24
 10901  005B00  0E00               	movlw	0
 10902  005B02  1A15               	xorwf	___flsub@a^0,f,c
 10903  005B04  0E00               	movlw	0
 10904  005B06  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10905  005B08  0E00               	movlw	0
 10906  005B0A  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10907  005B0C  0E80               	movlw	128
 10908  005B0E  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10909  005B10  C011  F001         	movff	___flsub@b,___fladd@b
 10910  005B14  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10911  005B18  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10912  005B1C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10913  005B20  C015  F005         	movff	___flsub@a,___fladd@a
 10914  005B24  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10915  005B28  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10916  005B2C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10917  005B30  EC66  F00E         	call	___fladd	;wreg free
 10918  005B34  C001  F011         	movff	?___fladd,?___flsub
 10919  005B38  C002  F012         	movff	?___fladd+1,?___flsub+1
 10920  005B3C  C003  F013         	movff	?___fladd+2,?___flsub+2
 10921  005B40  C004  F014         	movff	?___fladd+3,?___flsub+3
 10922  005B44  0012               	return		;funcret
 10923  005B46                     __end_of___flsub:
 10924                           	callstack 0
 10925                           
 10926 ;; *************** function ___fladd *****************
 10927 ;; Defined at:
 10928 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  b               4    0[COMRAM] float 
 10931 ;;  a               4    4[COMRAM] float 
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;  grs             1   15[COMRAM] unsigned char 
 10934 ;;  bexp            1   14[COMRAM] unsigned char 
 10935 ;;  aexp            1   13[COMRAM] unsigned char 
 10936 ;;  signs           1   12[COMRAM] unsigned char 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  4    0[COMRAM] unsigned char 
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10946 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10947 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10949 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10950 ;;Total ram usage:       16 bytes
 10951 ;; Hardware stack levels used: 1
 10952 ;; Hardware stack levels required when called: 1
 10953 ;; This function calls:
 10954 ;;		Nothing
 10955 ;; This function is called by:
 10956 ;;		___flsub
 10957 ;;		_roundf
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           	psect	text50
 10962  001CCC                     __ptext50:
 10963                           	callstack 0
 10964  001CCC                     ___fladd:
 10965                           	callstack 24
 10966  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
 10967  001CCE  0B80               	andlw	128
 10968  001CD0  6E0D               	movwf	___fladd@signs^0,c
 10969  001CD2  5004               	movf	(___fladd@b+3)^0,w,c
 10970  001CD4  2404               	addwf	(___fladd@b+3)^0,w,c
 10971  001CD6  6E0F               	movwf	___fladd@bexp^0,c
 10972  001CD8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10973  001CDA  EF71  F00E         	goto	u3471
 10974  001CDE  EF73  F00E         	goto	u3470
 10975  001CE2                     u3471:
 10976  001CE2  EF74  F00E         	goto	l3718
 10977  001CE6                     u3470:
 10978  001CE6  800F               	bsf	___fladd@bexp^0,0,c
 10979  001CE8                     l3718:
 10980  001CE8  500F               	movf	___fladd@bexp^0,w,c
 10981  001CEA  B4D8               	btfsc	status,2,c
 10982  001CEC  EF7A  F00E         	goto	u3481
 10983  001CF0  EF7C  F00E         	goto	u3480
 10984  001CF4                     u3481:
 10985  001CF4  EF91  F00E         	goto	l3728
 10986  001CF8                     u3480:
 10987  001CF8  280F               	incf	___fladd@bexp^0,w,c
 10988  001CFA  A4D8               	btfss	status,2,c
 10989  001CFC  EF82  F00E         	goto	u3491
 10990  001D00  EF84  F00E         	goto	u3490
 10991  001D04                     u3491:
 10992  001D04  EF8C  F00E         	goto	l3724
 10993  001D08                     u3490:
 10994  001D08  0E00               	movlw	0
 10995  001D0A  6E01               	movwf	___fladd@b^0,c
 10996  001D0C  0E00               	movlw	0
 10997  001D0E  6E02               	movwf	(___fladd@b+1)^0,c
 10998  001D10  0E00               	movlw	0
 10999  001D12  6E03               	movwf	(___fladd@b+2)^0,c
 11000  001D14  0E00               	movlw	0
 11001  001D16  6E04               	movwf	(___fladd@b+3)^0,c
 11002  001D18                     l3724:
 11003  001D18  8E03               	bsf	(___fladd@b+2)^0,7,c
 11004  001D1A  0E00               	movlw	0
 11005  001D1C  6E04               	movwf	(___fladd@b+3)^0,c
 11006  001D1E  EF99  F00E         	goto	l3730
 11007  001D22                     l3728:
 11008  001D22  0E00               	movlw	0
 11009  001D24  6E01               	movwf	___fladd@b^0,c
 11010  001D26  0E00               	movlw	0
 11011  001D28  6E02               	movwf	(___fladd@b+1)^0,c
 11012  001D2A  0E00               	movlw	0
 11013  001D2C  6E03               	movwf	(___fladd@b+2)^0,c
 11014  001D2E  0E00               	movlw	0
 11015  001D30  6E04               	movwf	(___fladd@b+3)^0,c
 11016  001D32                     l3730:
 11017  001D32  5008               	movf	(___fladd@a+3)^0,w,c
 11018  001D34  0B80               	andlw	128
 11019  001D36  6E0E               	movwf	___fladd@aexp^0,c
 11020  001D38  500D               	movf	___fladd@signs^0,w,c
 11021  001D3A  180E               	xorwf	___fladd@aexp^0,w,c
 11022  001D3C  B4D8               	btfsc	status,2,c
 11023  001D3E  EFA3  F00E         	goto	u3501
 11024  001D42  EFA5  F00E         	goto	u3500
 11025  001D46                     u3501:
 11026  001D46  EFA6  F00E         	goto	l3736
 11027  001D4A                     u3500:
 11028  001D4A  8C0D               	bsf	___fladd@signs^0,6,c
 11029  001D4C                     l3736:
 11030  001D4C  5008               	movf	(___fladd@a+3)^0,w,c
 11031  001D4E  2408               	addwf	(___fladd@a+3)^0,w,c
 11032  001D50  6E0E               	movwf	___fladd@aexp^0,c
 11033  001D52  AE07               	btfss	(___fladd@a+2)^0,7,c
 11034  001D54  EFAE  F00E         	goto	u3511
 11035  001D58  EFB0  F00E         	goto	u3510
 11036  001D5C                     u3511:
 11037  001D5C  EFB1  F00E         	goto	l3742
 11038  001D60                     u3510:
 11039  001D60  800E               	bsf	___fladd@aexp^0,0,c
 11040  001D62                     l3742:
 11041  001D62  500E               	movf	___fladd@aexp^0,w,c
 11042  001D64  B4D8               	btfsc	status,2,c
 11043  001D66  EFB7  F00E         	goto	u3521
 11044  001D6A  EFB9  F00E         	goto	u3520
 11045  001D6E                     u3521:
 11046  001D6E  EFCE  F00E         	goto	l3752
 11047  001D72                     u3520:
 11048  001D72  280E               	incf	___fladd@aexp^0,w,c
 11049  001D74  A4D8               	btfss	status,2,c
 11050  001D76  EFBF  F00E         	goto	u3531
 11051  001D7A  EFC1  F00E         	goto	u3530
 11052  001D7E                     u3531:
 11053  001D7E  EFC9  F00E         	goto	l3748
 11054  001D82                     u3530:
 11055  001D82  0E00               	movlw	0
 11056  001D84  6E05               	movwf	___fladd@a^0,c
 11057  001D86  0E00               	movlw	0
 11058  001D88  6E06               	movwf	(___fladd@a+1)^0,c
 11059  001D8A  0E00               	movlw	0
 11060  001D8C  6E07               	movwf	(___fladd@a+2)^0,c
 11061  001D8E  0E00               	movlw	0
 11062  001D90  6E08               	movwf	(___fladd@a+3)^0,c
 11063  001D92                     l3748:
 11064  001D92  8E07               	bsf	(___fladd@a+2)^0,7,c
 11065  001D94  0E00               	movlw	0
 11066  001D96  6E08               	movwf	(___fladd@a+3)^0,c
 11067  001D98  EFD6  F00E         	goto	l3754
 11068  001D9C                     l3752:
 11069  001D9C  0E00               	movlw	0
 11070  001D9E  6E05               	movwf	___fladd@a^0,c
 11071  001DA0  0E00               	movlw	0
 11072  001DA2  6E06               	movwf	(___fladd@a+1)^0,c
 11073  001DA4  0E00               	movlw	0
 11074  001DA6  6E07               	movwf	(___fladd@a+2)^0,c
 11075  001DA8  0E00               	movlw	0
 11076  001DAA  6E08               	movwf	(___fladd@a+3)^0,c
 11077  001DAC                     l3754:
 11078  001DAC  500F               	movf	___fladd@bexp^0,w,c
 11079  001DAE  5C0E               	subwf	___fladd@aexp^0,w,c
 11080  001DB0  B0D8               	btfsc	status,0,c
 11081  001DB2  EFDD  F00E         	goto	u3541
 11082  001DB6  EFDF  F00E         	goto	u3540
 11083  001DBA                     u3541:
 11084  001DBA  EF06  F00F         	goto	l3790
 11085  001DBE                     u3540:
 11086  001DBE  AC0D               	btfss	___fladd@signs^0,6,c
 11087  001DC0  EFE4  F00E         	goto	u3551
 11088  001DC4  EFE6  F00E         	goto	u3550
 11089  001DC8                     u3551:
 11090  001DC8  EFE8  F00E         	goto	l3760
 11091  001DCC                     u3550:
 11092  001DCC  0E80               	movlw	128
 11093  001DCE  1A0D               	xorwf	___fladd@signs^0,f,c
 11094  001DD0                     l3760:
 11095  001DD0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 11096  001DD4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 11097  001DD8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 11098  001DDC  C001  F010         	movff	___fladd@b,___fladd@grs
 11099  001DE0  C005  F001         	movff	___fladd@a,___fladd@b
 11100  001DE4  C010  F005         	movff	___fladd@grs,___fladd@a
 11101  001DE8  C002  F010         	movff	___fladd@b+1,___fladd@grs
 11102  001DEC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 11103  001DF0  C010  F006         	movff	___fladd@grs,___fladd@a+1
 11104  001DF4  C003  F010         	movff	___fladd@b+2,___fladd@grs
 11105  001DF8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 11106  001DFC  C010  F007         	movff	___fladd@grs,___fladd@a+2
 11107  001E00  C004  F010         	movff	___fladd@b+3,___fladd@grs
 11108  001E04  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 11109  001E08  C010  F008         	movff	___fladd@grs,___fladd@a+3
 11110  001E0C                     l3790:
 11111  001E0C  0E00               	movlw	0
 11112  001E0E  6E10               	movwf	___fladd@grs^0,c
 11113  001E10  500F               	movf	___fladd@bexp^0,w,c
 11114  001E12  C00E  F009         	movff	___fladd@aexp,??___fladd
 11115  001E16  6A0A               	clrf	(??___fladd+1)^0,c
 11116  001E18  5E09               	subwf	??___fladd^0,f,c
 11117  001E1A  0E00               	movlw	0
 11118  001E1C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 11119  001E1E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 11120  001E20  EF1B  F00F         	goto	u3561
 11121  001E24  500A               	movf	(??___fladd+1)^0,w,c
 11122  001E26  E109               	bnz	u3560
 11123  001E28  0E1A               	movlw	26
 11124  001E2A  5C09               	subwf	??___fladd^0,w,c
 11125  001E2C  A0D8               	btfss	status,0,c
 11126  001E2E  EF1B  F00F         	goto	u3561
 11127  001E32  EF1D  F00F         	goto	u3560
 11128  001E36                     u3561:
 11129  001E36  EF54  F00F         	goto	l1153
 11130  001E3A                     u3560:
 11131  001E3A  5001               	movf	___fladd@b^0,w,c
 11132  001E3C  1002               	iorwf	(___fladd@b+1)^0,w,c
 11133  001E3E  1003               	iorwf	(___fladd@b+2)^0,w,c
 11134  001E40  1004               	iorwf	(___fladd@b+3)^0,w,c
 11135  001E42  A4D8               	btfss	status,2,c
 11136  001E44  EF26  F00F         	goto	u3571
 11137  001E48  EF29  F00F         	goto	u3570
 11138  001E4C                     u3571:
 11139  001E4C  0E01               	movlw	1
 11140  001E4E  EF2A  F00F         	goto	u3580
 11141  001E52                     u3570:
 11142  001E52  0E00               	movlw	0
 11143  001E54                     u3580:
 11144  001E54  6E10               	movwf	___fladd@grs^0,c
 11145  001E56  0E00               	movlw	0
 11146  001E58  6E01               	movwf	___fladd@b^0,c
 11147  001E5A  0E00               	movlw	0
 11148  001E5C  6E02               	movwf	(___fladd@b+1)^0,c
 11149  001E5E  0E00               	movlw	0
 11150  001E60  6E03               	movwf	(___fladd@b+2)^0,c
 11151  001E62  0E00               	movlw	0
 11152  001E64  6E04               	movwf	(___fladd@b+3)^0,c
 11153  001E66  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 11154  001E6A  EF5D  F00F         	goto	l1152
 11155  001E6E                     l1154:
 11156  001E6E  A010               	btfss	___fladd@grs^0,0,c
 11157  001E70  EF3C  F00F         	goto	u3591
 11158  001E74  EF3E  F00F         	goto	u3590
 11159  001E78                     u3591:
 11160  001E78  EF44  F00F         	goto	l3802
 11161  001E7C                     u3590:
 11162  001E7C  90D8               	bcf	status,0,c
 11163  001E7E  3010               	rrcf	___fladd@grs^0,w,c
 11164  001E80  0901               	iorlw	1
 11165  001E82  6E10               	movwf	___fladd@grs^0,c
 11166  001E84  EF46  F00F         	goto	l3804
 11167  001E88                     l3802:
 11168  001E88  90D8               	bcf	status,0,c
 11169  001E8A  3210               	rrcf	___fladd@grs^0,f,c
 11170  001E8C                     l3804:
 11171  001E8C  A001               	btfss	___fladd@b^0,0,c
 11172  001E8E  EF4B  F00F         	goto	u3601
 11173  001E92  EF4D  F00F         	goto	u3600
 11174  001E96                     u3601:
 11175  001E96  EF4E  F00F         	goto	l3808
 11176  001E9A                     u3600:
 11177  001E9A  8E10               	bsf	___fladd@grs^0,7,c
 11178  001E9C                     l3808:
 11179  001E9C  3404               	rlcf	(___fladd@b+3)^0,w,c
 11180  001E9E  3204               	rrcf	(___fladd@b+3)^0,f,c
 11181  001EA0  3203               	rrcf	(___fladd@b+2)^0,f,c
 11182  001EA2  3202               	rrcf	(___fladd@b+1)^0,f,c
 11183  001EA4  3201               	rrcf	___fladd@b^0,f,c
 11184  001EA6  2A0F               	incf	___fladd@bexp^0,f,c
 11185  001EA8                     l1153:
 11186  001EA8  500E               	movf	___fladd@aexp^0,w,c
 11187  001EAA  5C0F               	subwf	___fladd@bexp^0,w,c
 11188  001EAC  A0D8               	btfss	status,0,c
 11189  001EAE  EF5B  F00F         	goto	u3611
 11190  001EB2  EF5D  F00F         	goto	u3610
 11191  001EB6                     u3611:
 11192  001EB6  EF37  F00F         	goto	l1154
 11193  001EBA                     u3610:
 11194  001EBA                     l1152:
 11195  001EBA  BC0D               	btfsc	___fladd@signs^0,6,c
 11196  001EBC  EF62  F00F         	goto	u3621
 11197  001EC0  EF64  F00F         	goto	u3620
 11198  001EC4                     u3621:
 11199  001EC4  EFA4  F00F         	goto	l3836
 11200  001EC8                     u3620:
 11201  001EC8  500F               	movf	___fladd@bexp^0,w,c
 11202  001ECA  A4D8               	btfss	status,2,c
 11203  001ECC  EF6A  F00F         	goto	u3631
 11204  001ED0  EF6C  F00F         	goto	u3630
 11205  001ED4                     u3631:
 11206  001ED4  EF76  F00F         	goto	l3818
 11207  001ED8                     u3630:
 11208  001ED8  0E00               	movlw	0
 11209  001EDA  6E01               	movwf	?___fladd^0,c
 11210  001EDC  0E00               	movlw	0
 11211  001EDE  6E02               	movwf	(?___fladd+1)^0,c
 11212  001EE0  0E00               	movlw	0
 11213  001EE2  6E03               	movwf	(?___fladd+2)^0,c
 11214  001EE4  0E00               	movlw	0
 11215  001EE6  6E04               	movwf	(?___fladd+3)^0,c
 11216  001EE8  EFC5  F010         	goto	l1161
 11217  001EEC                     l3818:
 11218  001EEC  5005               	movf	___fladd@a^0,w,c
 11219  001EEE  2601               	addwf	___fladd@b^0,f,c
 11220  001EF0  5006               	movf	(___fladd@a+1)^0,w,c
 11221  001EF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 11222  001EF4  5007               	movf	(___fladd@a+2)^0,w,c
 11223  001EF6  2203               	addwfc	(___fladd@b+2)^0,f,c
 11224  001EF8  5008               	movf	(___fladd@a+3)^0,w,c
 11225  001EFA  2204               	addwfc	(___fladd@b+3)^0,f,c
 11226  001EFC  A004               	btfss	(___fladd@b+3)^0,0,c
 11227  001EFE  EF83  F00F         	goto	u3641
 11228  001F02  EF85  F00F         	goto	u3640
 11229  001F06                     u3641:
 11230  001F06  EF31  F010         	goto	l3872
 11231  001F0A                     u3640:
 11232  001F0A  A010               	btfss	___fladd@grs^0,0,c
 11233  001F0C  EF8A  F00F         	goto	u3651
 11234  001F10  EF8C  F00F         	goto	u3650
 11235  001F14                     u3651:
 11236  001F14  EF92  F00F         	goto	l3826
 11237  001F18                     u3650:
 11238  001F18  90D8               	bcf	status,0,c
 11239  001F1A  3010               	rrcf	___fladd@grs^0,w,c
 11240  001F1C  0901               	iorlw	1
 11241  001F1E  6E10               	movwf	___fladd@grs^0,c
 11242  001F20  EF94  F00F         	goto	l3828
 11243  001F24                     l3826:
 11244  001F24  90D8               	bcf	status,0,c
 11245  001F26  3210               	rrcf	___fladd@grs^0,f,c
 11246  001F28                     l3828:
 11247  001F28  A001               	btfss	___fladd@b^0,0,c
 11248  001F2A  EF99  F00F         	goto	u3661
 11249  001F2E  EF9B  F00F         	goto	u3660
 11250  001F32                     u3661:
 11251  001F32  EF9C  F00F         	goto	l3832
 11252  001F36                     u3660:
 11253  001F36  8E10               	bsf	___fladd@grs^0,7,c
 11254  001F38                     l3832:
 11255  001F38  3404               	rlcf	(___fladd@b+3)^0,w,c
 11256  001F3A  3204               	rrcf	(___fladd@b+3)^0,f,c
 11257  001F3C  3203               	rrcf	(___fladd@b+2)^0,f,c
 11258  001F3E  3202               	rrcf	(___fladd@b+1)^0,f,c
 11259  001F40  3201               	rrcf	___fladd@b^0,f,c
 11260  001F42  2A0F               	incf	___fladd@bexp^0,f,c
 11261  001F44  EF31  F010         	goto	l3872
 11262  001F48                     l3836:
 11263  001F48  5005               	movf	___fladd@a^0,w,c
 11264  001F4A  5C01               	subwf	___fladd@b^0,w,c
 11265  001F4C  5006               	movf	(___fladd@a+1)^0,w,c
 11266  001F4E  5802               	subwfb	(___fladd@b+1)^0,w,c
 11267  001F50  5007               	movf	(___fladd@a+2)^0,w,c
 11268  001F52  5803               	subwfb	(___fladd@b+2)^0,w,c
 11269  001F54  5004               	movf	(___fladd@b+3)^0,w,c
 11270  001F56  0A80               	xorlw	128
 11271  001F58  6E09               	movwf	??___fladd^0,c
 11272  001F5A  5008               	movf	(___fladd@a+3)^0,w,c
 11273  001F5C  0A80               	xorlw	128
 11274  001F5E  5809               	subwfb	??___fladd^0,w,c
 11275  001F60  B0D8               	btfsc	status,0,c
 11276  001F62  EFB5  F00F         	goto	u3671
 11277  001F66  EFB7  F00F         	goto	u3670
 11278  001F6A                     u3671:
 11279  001F6A  EFE2  F00F         	goto	l3846
 11280  001F6E                     u3670:
 11281  001F6E  5001               	movf	___fladd@b^0,w,c
 11282  001F70  5C05               	subwf	___fladd@a^0,w,c
 11283  001F72  6E09               	movwf	??___fladd^0,c
 11284  001F74  5002               	movf	(___fladd@b+1)^0,w,c
 11285  001F76  5806               	subwfb	(___fladd@a+1)^0,w,c
 11286  001F78  6E0A               	movwf	(??___fladd+1)^0,c
 11287  001F7A  5003               	movf	(___fladd@b+2)^0,w,c
 11288  001F7C  5807               	subwfb	(___fladd@a+2)^0,w,c
 11289  001F7E  6E0B               	movwf	(??___fladd+2)^0,c
 11290  001F80  5004               	movf	(___fladd@b+3)^0,w,c
 11291  001F82  5808               	subwfb	(___fladd@a+3)^0,w,c
 11292  001F84  6E0C               	movwf	(??___fladd+3)^0,c
 11293  001F86  0EFF               	movlw	255
 11294  001F88  2409               	addwf	??___fladd^0,w,c
 11295  001F8A  6E01               	movwf	___fladd@b^0,c
 11296  001F8C  0EFF               	movlw	255
 11297  001F8E  200A               	addwfc	(??___fladd+1)^0,w,c
 11298  001F90  6E02               	movwf	(___fladd@b+1)^0,c
 11299  001F92  0EFF               	movlw	255
 11300  001F94  200B               	addwfc	(??___fladd+2)^0,w,c
 11301  001F96  6E03               	movwf	(___fladd@b+2)^0,c
 11302  001F98  0EFF               	movlw	255
 11303  001F9A  200C               	addwfc	(??___fladd+3)^0,w,c
 11304  001F9C  6E04               	movwf	(___fladd@b+3)^0,c
 11305  001F9E  0E80               	movlw	128
 11306  001FA0  1A0D               	xorwf	___fladd@signs^0,f,c
 11307  001FA2  6C10               	negf	___fladd@grs^0,c
 11308  001FA4  5010               	movf	___fladd@grs^0,w,c
 11309  001FA6  A4D8               	btfss	status,2,c
 11310  001FA8  EFD8  F00F         	goto	u3681
 11311  001FAC  EFDA  F00F         	goto	u3680
 11312  001FB0                     u3681:
 11313  001FB0  EFEA  F00F         	goto	l1169
 11314  001FB4                     u3680:
 11315  001FB4  0E01               	movlw	1
 11316  001FB6  2601               	addwf	___fladd@b^0,f,c
 11317  001FB8  0E00               	movlw	0
 11318  001FBA  2202               	addwfc	(___fladd@b+1)^0,f,c
 11319  001FBC  2203               	addwfc	(___fladd@b+2)^0,f,c
 11320  001FBE  2204               	addwfc	(___fladd@b+3)^0,f,c
 11321  001FC0  EFEA  F00F         	goto	l1169
 11322  001FC4                     l3846:
 11323  001FC4  5005               	movf	___fladd@a^0,w,c
 11324  001FC6  5E01               	subwf	___fladd@b^0,f,c
 11325  001FC8  5006               	movf	(___fladd@a+1)^0,w,c
 11326  001FCA  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11327  001FCC  5007               	movf	(___fladd@a+2)^0,w,c
 11328  001FCE  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11329  001FD0  5008               	movf	(___fladd@a+3)^0,w,c
 11330  001FD2  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11331  001FD4                     l1169:
 11332  001FD4  5001               	movf	___fladd@b^0,w,c
 11333  001FD6  1002               	iorwf	(___fladd@b+1)^0,w,c
 11334  001FD8  1003               	iorwf	(___fladd@b+2)^0,w,c
 11335  001FDA  1004               	iorwf	(___fladd@b+3)^0,w,c
 11336  001FDC  A4D8               	btfss	status,2,c
 11337  001FDE  EFF3  F00F         	goto	u3691
 11338  001FE2  EFF5  F00F         	goto	u3690
 11339  001FE6                     u3691:
 11340  001FE6  EF2A  F010         	goto	l3870
 11341  001FEA                     u3690:
 11342  001FEA  5010               	movf	___fladd@grs^0,w,c
 11343  001FEC  A4D8               	btfss	status,2,c
 11344  001FEE  EFFB  F00F         	goto	u3701
 11345  001FF2  EFFD  F00F         	goto	u3700
 11346  001FF6                     u3701:
 11347  001FF6  EF2A  F010         	goto	l3870
 11348  001FFA                     u3700:
 11349  001FFA  0E00               	movlw	0
 11350  001FFC  6E01               	movwf	?___fladd^0,c
 11351  001FFE  0E00               	movlw	0
 11352  002000  6E02               	movwf	(?___fladd+1)^0,c
 11353  002002  0E00               	movlw	0
 11354  002004  6E03               	movwf	(?___fladd+2)^0,c
 11355  002006  0E00               	movlw	0
 11356  002008  6E04               	movwf	(?___fladd+3)^0,c
 11357  00200A  EFC5  F010         	goto	l1161
 11358  00200E                     l3854:
 11359  00200E  90D8               	bcf	status,0,c
 11360  002010  3601               	rlcf	___fladd@b^0,f,c
 11361  002012  3602               	rlcf	(___fladd@b+1)^0,f,c
 11362  002014  3603               	rlcf	(___fladd@b+2)^0,f,c
 11363  002016  3604               	rlcf	(___fladd@b+3)^0,f,c
 11364  002018  AE10               	btfss	___fladd@grs^0,7,c
 11365  00201A  EF11  F010         	goto	u3711
 11366  00201E  EF13  F010         	goto	u3710
 11367  002022                     u3711:
 11368  002022  EF14  F010         	goto	l3860
 11369  002026                     u3710:
 11370  002026  8001               	bsf	___fladd@b^0,0,c
 11371  002028                     l3860:
 11372  002028  A010               	btfss	___fladd@grs^0,0,c
 11373  00202A  EF19  F010         	goto	u3721
 11374  00202E  EF1B  F010         	goto	u3720
 11375  002032                     u3721:
 11376  002032  EF1F  F010         	goto	l3864
 11377  002036                     u3720:
 11378  002036  80D8               	bsf	status,0,c
 11379  002038  3610               	rlcf	___fladd@grs^0,f,c
 11380  00203A  EF21  F010         	goto	l3866
 11381  00203E                     l3864:
 11382  00203E  90D8               	bcf	status,0,c
 11383  002040  3610               	rlcf	___fladd@grs^0,f,c
 11384  002042                     l3866:
 11385  002042  500F               	movf	___fladd@bexp^0,w,c
 11386  002044  B4D8               	btfsc	status,2,c
 11387  002046  EF27  F010         	goto	u3731
 11388  00204A  EF29  F010         	goto	u3730
 11389  00204E                     u3731:
 11390  00204E  EF2A  F010         	goto	l3870
 11391  002052                     u3730:
 11392  002052  060F               	decf	___fladd@bexp^0,f,c
 11393  002054                     l3870:
 11394  002054  AE03               	btfss	(___fladd@b+2)^0,7,c
 11395  002056  EF2F  F010         	goto	u3741
 11396  00205A  EF31  F010         	goto	u3740
 11397  00205E                     u3741:
 11398  00205E  EF07  F010         	goto	l3854
 11399  002062                     u3740:
 11400  002062                     l3872:
 11401  002062  0E00               	movlw	0
 11402  002064  6E0E               	movwf	___fladd@aexp^0,c
 11403  002066  AE10               	btfss	___fladd@grs^0,7,c
 11404  002068  EF38  F010         	goto	u3751
 11405  00206C  EF3A  F010         	goto	u3750
 11406  002070                     u3751:
 11407  002070  EF52  F010         	goto	l1178
 11408  002074                     u3750:
 11409  002074  C010  F009         	movff	___fladd@grs,??___fladd
 11410  002078  0E7F               	movlw	127
 11411  00207A  1609               	andwf	??___fladd^0,f,c
 11412  00207C  B4D8               	btfsc	status,2,c
 11413  00207E  EF43  F010         	goto	u3761
 11414  002082  EF45  F010         	goto	u3760
 11415  002086                     u3761:
 11416  002086  EF49  F010         	goto	l1179
 11417  00208A                     u3760:
 11418  00208A                     l3878:
 11419  00208A  0E01               	movlw	1
 11420  00208C  6E0E               	movwf	___fladd@aexp^0,c
 11421  00208E  EF52  F010         	goto	l1178
 11422  002092                     l1179:
 11423  002092  A001               	btfss	___fladd@b^0,0,c
 11424  002094  EF4E  F010         	goto	u3771
 11425  002098  EF50  F010         	goto	u3770
 11426  00209C                     u3771:
 11427  00209C  EF52  F010         	goto	l1178
 11428  0020A0                     u3770:
 11429  0020A0  EF45  F010         	goto	l3878
 11430  0020A4                     l1178:
 11431  0020A4  500E               	movf	___fladd@aexp^0,w,c
 11432  0020A6  B4D8               	btfsc	status,2,c
 11433  0020A8  EF58  F010         	goto	u3781
 11434  0020AC  EF5A  F010         	goto	u3780
 11435  0020B0                     u3781:
 11436  0020B0  EF85  F010         	goto	l3890
 11437  0020B4                     u3780:
 11438  0020B4  0E01               	movlw	1
 11439  0020B6  2601               	addwf	___fladd@b^0,f,c
 11440  0020B8  0E00               	movlw	0
 11441  0020BA  2202               	addwfc	(___fladd@b+1)^0,f,c
 11442  0020BC  2203               	addwfc	(___fladd@b+2)^0,f,c
 11443  0020BE  2204               	addwfc	(___fladd@b+3)^0,f,c
 11444  0020C0  A004               	btfss	(___fladd@b+3)^0,0,c
 11445  0020C2  EF65  F010         	goto	u3791
 11446  0020C6  EF67  F010         	goto	u3790
 11447  0020CA                     u3791:
 11448  0020CA  EF85  F010         	goto	l3890
 11449  0020CE                     u3790:
 11450  0020CE  C001  F009         	movff	___fladd@b,??___fladd
 11451  0020D2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11452  0020D6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11453  0020DA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11454  0020DE  340C               	rlcf	(??___fladd+3)^0,w,c
 11455  0020E0  320C               	rrcf	(??___fladd+3)^0,f,c
 11456  0020E2  320B               	rrcf	(??___fladd+2)^0,f,c
 11457  0020E4  320A               	rrcf	(??___fladd+1)^0,f,c
 11458  0020E6  3209               	rrcf	??___fladd^0,f,c
 11459  0020E8  C009  F001         	movff	??___fladd,___fladd@b
 11460  0020EC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11461  0020F0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11462  0020F4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11463  0020F8  280F               	incf	___fladd@bexp^0,w,c
 11464  0020FA  B4D8               	btfsc	status,2,c
 11465  0020FC  EF82  F010         	goto	u3801
 11466  002100  EF84  F010         	goto	u3800
 11467  002104                     u3801:
 11468  002104  EF85  F010         	goto	l3890
 11469  002108                     u3800:
 11470  002108  2A0F               	incf	___fladd@bexp^0,f,c
 11471  00210A                     l3890:
 11472  00210A  280F               	incf	___fladd@bexp^0,w,c
 11473  00210C  B4D8               	btfsc	status,2,c
 11474  00210E  EF8B  F010         	goto	u3811
 11475  002112  EF8D  F010         	goto	u3810
 11476  002116                     u3811:
 11477  002116  EF95  F010         	goto	l3894
 11478  00211A                     u3810:
 11479  00211A  500F               	movf	___fladd@bexp^0,w,c
 11480  00211C  A4D8               	btfss	status,2,c
 11481  00211E  EF93  F010         	goto	u3821
 11482  002122  EF95  F010         	goto	u3820
 11483  002126                     u3821:
 11484  002126  EFA7  F010         	goto	l3898
 11485  00212A                     u3820:
 11486  00212A                     l3894:
 11487  00212A  0E00               	movlw	0
 11488  00212C  6E01               	movwf	___fladd@b^0,c
 11489  00212E  0E00               	movlw	0
 11490  002130  6E02               	movwf	(___fladd@b+1)^0,c
 11491  002132  0E00               	movlw	0
 11492  002134  6E03               	movwf	(___fladd@b+2)^0,c
 11493  002136  0E00               	movlw	0
 11494  002138  6E04               	movwf	(___fladd@b+3)^0,c
 11495  00213A  500F               	movf	___fladd@bexp^0,w,c
 11496  00213C  A4D8               	btfss	status,2,c
 11497  00213E  EFA3  F010         	goto	u3831
 11498  002142  EFA5  F010         	goto	u3830
 11499  002146                     u3831:
 11500  002146  EFA7  F010         	goto	l3898
 11501  00214A                     u3830:
 11502  00214A  0E00               	movlw	0
 11503  00214C  6E0D               	movwf	___fladd@signs^0,c
 11504  00214E                     l3898:
 11505  00214E  A00F               	btfss	___fladd@bexp^0,0,c
 11506  002150  EFAC  F010         	goto	u3841
 11507  002154  EFAE  F010         	goto	u3840
 11508  002158                     u3841:
 11509  002158  EFB1  F010         	goto	l3902
 11510  00215C                     u3840:
 11511  00215C  8E03               	bsf	(___fladd@b+2)^0,7,c
 11512  00215E  EFB2  F010         	goto	l3904
 11513  002162                     l3902:
 11514  002162  9E03               	bcf	(___fladd@b+2)^0,7,c
 11515  002164                     l3904:
 11516  002164  90D8               	bcf	status,0,c
 11517  002166  300F               	rrcf	___fladd@bexp^0,w,c
 11518  002168  6E04               	movwf	(___fladd@b+3)^0,c
 11519  00216A  AE0D               	btfss	___fladd@signs^0,7,c
 11520  00216C  EFBA  F010         	goto	u3851
 11521  002170  EFBC  F010         	goto	u3850
 11522  002174                     u3851:
 11523  002174  EFBD  F010         	goto	l3910
 11524  002178                     u3850:
 11525  002178  8E04               	bsf	(___fladd@b+3)^0,7,c
 11526  00217A                     l3910:
 11527  00217A  C001  F001         	movff	___fladd@b,?___fladd
 11528  00217E  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11529  002182  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11530  002186  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11531  00218A                     l1161:
 11532  00218A  0012               	return		;funcret
 11533  00218C                     __end_of___fladd:
 11534                           	callstack 0
 11535                           
 11536 ;; *************** function ___flneg *****************
 11537 ;; Defined at:
 11538 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  f1              4    0[COMRAM] unsigned char 
 11541 ;; Auto vars:     Size  Location     Type
 11542 ;;		None
 11543 ;; Return value:  Size  Location     Type
 11544 ;;                  4    0[COMRAM] unsigned char 
 11545 ;; Registers used:
 11546 ;;		wreg, status,2, status,0
 11547 ;; Tracked objects:
 11548 ;;		On entry : 0/0
 11549 ;;		On exit  : 0/0
 11550 ;;		Unchanged: 0/0
 11551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11552 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11556 ;;Total ram usage:        4 bytes
 11557 ;; Hardware stack levels used: 1
 11558 ;; Hardware stack levels required when called: 1
 11559 ;; This function calls:
 11560 ;;		Nothing
 11561 ;; This function is called by:
 11562 ;;		_roundf
 11563 ;; This function uses a non-reentrant model
 11564 ;;
 11565                           
 11566                           	psect	text51
 11567  005D04                     __ptext51:
 11568                           	callstack 0
 11569  005D04                     ___flneg:
 11570                           	callstack 25
 11571  005D04  5001               	movf	___flneg@f1^0,w,c
 11572  005D06  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11573  005D08  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11574  005D0A  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11575  005D0C  B4D8               	btfsc	status,2,c
 11576  005D0E  EF8B  F02E         	goto	u4211
 11577  005D12  EF8D  F02E         	goto	u4210
 11578  005D16                     u4211:
 11579  005D16  EF95  F02E         	goto	l4174
 11580  005D1A                     u4210:
 11581  005D1A  0E00               	movlw	0
 11582  005D1C  1A01               	xorwf	___flneg@f1^0,f,c
 11583  005D1E  0E00               	movlw	0
 11584  005D20  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11585  005D22  0E00               	movlw	0
 11586  005D24  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11587  005D26  0E80               	movlw	128
 11588  005D28  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11589  005D2A                     l4174:
 11590  005D2A  C001  F001         	movff	___flneg@f1,?___flneg
 11591  005D2E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11592  005D32  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11593  005D36  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11594  005D3A  0012               	return		;funcret
 11595  005D3C                     __end_of___flneg:
 11596                           	callstack 0
 11597                           
 11598 ;; *************** function ___flmul *****************
 11599 ;; Defined at:
 11600 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  b               4   39[COMRAM] unsigned char 
 11603 ;;  a               4   43[COMRAM] unsigned char 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  prod            4   58[COMRAM] struct .
 11606 ;;  grs             4   52[COMRAM] unsigned long 
 11607 ;;  temp            2   62[COMRAM] struct .
 11608 ;;  bexp            1   57[COMRAM] unsigned char 
 11609 ;;  aexp            1   56[COMRAM] unsigned char 
 11610 ;;  sign            1   51[COMRAM] unsigned char 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  4   39[COMRAM] unsigned char 
 11613 ;; Registers used:
 11614 ;;		wreg, status,2, status,0, prodl, prodh
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11620 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11621 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11622 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11623 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;Total ram usage:       25 bytes
 11625 ;; Hardware stack levels used: 1
 11626 ;; Hardware stack levels required when called: 1
 11627 ;; This function calls:
 11628 ;;		Nothing
 11629 ;; This function is called by:
 11630 ;;		_detect_color
 11631 ;;		_detect_wall
 11632 ;;		_roundf
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text52
 11637  00218C                     __ptext52:
 11638                           	callstack 0
 11639  00218C                     ___flmul:
 11640                           	callstack 25
 11641  00218C  502B               	movf	(___flmul@b+3)^0,w,c
 11642  00218E  0B80               	andlw	128
 11643  002190  6E34               	movwf	___flmul@sign^0,c
 11644  002192  502B               	movf	(___flmul@b+3)^0,w,c
 11645  002194  242B               	addwf	(___flmul@b+3)^0,w,c
 11646  002196  6E3A               	movwf	___flmul@bexp^0,c
 11647  002198  AE2A               	btfss	(___flmul@b+2)^0,7,c
 11648  00219A  EFD1  F010         	goto	u3971
 11649  00219E  EFD3  F010         	goto	u3970
 11650  0021A2                     u3971:
 11651  0021A2  EFD4  F010         	goto	l4018
 11652  0021A6                     u3970:
 11653  0021A6  803A               	bsf	___flmul@bexp^0,0,c
 11654  0021A8                     l4018:
 11655  0021A8  503A               	movf	___flmul@bexp^0,w,c
 11656  0021AA  B4D8               	btfsc	status,2,c
 11657  0021AC  EFDA  F010         	goto	u3981
 11658  0021B0  EFDC  F010         	goto	u3980
 11659  0021B4                     u3981:
 11660  0021B4  EFEF  F010         	goto	l4026
 11661  0021B8                     u3980:
 11662  0021B8  283A               	incf	___flmul@bexp^0,w,c
 11663  0021BA  A4D8               	btfss	status,2,c
 11664  0021BC  EFE2  F010         	goto	u3991
 11665  0021C0  EFE4  F010         	goto	u3990
 11666  0021C4                     u3991:
 11667  0021C4  EFEC  F010         	goto	l4024
 11668  0021C8                     u3990:
 11669  0021C8  0E00               	movlw	0
 11670  0021CA  6E28               	movwf	___flmul@b^0,c
 11671  0021CC  0E00               	movlw	0
 11672  0021CE  6E29               	movwf	(___flmul@b+1)^0,c
 11673  0021D0  0E00               	movlw	0
 11674  0021D2  6E2A               	movwf	(___flmul@b+2)^0,c
 11675  0021D4  0E00               	movlw	0
 11676  0021D6  6E2B               	movwf	(___flmul@b+3)^0,c
 11677  0021D8                     l4024:
 11678  0021D8  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11679  0021DA  EFF7  F010         	goto	l4028
 11680  0021DE                     l4026:
 11681  0021DE  0E00               	movlw	0
 11682  0021E0  6E28               	movwf	___flmul@b^0,c
 11683  0021E2  0E00               	movlw	0
 11684  0021E4  6E29               	movwf	(___flmul@b+1)^0,c
 11685  0021E6  0E00               	movlw	0
 11686  0021E8  6E2A               	movwf	(___flmul@b+2)^0,c
 11687  0021EA  0E00               	movlw	0
 11688  0021EC  6E2B               	movwf	(___flmul@b+3)^0,c
 11689  0021EE                     l4028:
 11690  0021EE  502F               	movf	(___flmul@a+3)^0,w,c
 11691  0021F0  0B80               	andlw	128
 11692  0021F2  1A34               	xorwf	___flmul@sign^0,f,c
 11693  0021F4  502F               	movf	(___flmul@a+3)^0,w,c
 11694  0021F6  242F               	addwf	(___flmul@a+3)^0,w,c
 11695  0021F8  6E39               	movwf	___flmul@aexp^0,c
 11696  0021FA  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11697  0021FC  EF02  F011         	goto	u4001
 11698  002200  EF04  F011         	goto	u4000
 11699  002204                     u4001:
 11700  002204  EF05  F011         	goto	l4036
 11701  002208                     u4000:
 11702  002208  8039               	bsf	___flmul@aexp^0,0,c
 11703  00220A                     l4036:
 11704  00220A  5039               	movf	___flmul@aexp^0,w,c
 11705  00220C  B4D8               	btfsc	status,2,c
 11706  00220E  EF0B  F011         	goto	u4011
 11707  002212  EF0D  F011         	goto	u4010
 11708  002216                     u4011:
 11709  002216  EF20  F011         	goto	l4044
 11710  00221A                     u4010:
 11711  00221A  2839               	incf	___flmul@aexp^0,w,c
 11712  00221C  A4D8               	btfss	status,2,c
 11713  00221E  EF13  F011         	goto	u4021
 11714  002222  EF15  F011         	goto	u4020
 11715  002226                     u4021:
 11716  002226  EF1D  F011         	goto	l4042
 11717  00222A                     u4020:
 11718  00222A  0E00               	movlw	0
 11719  00222C  6E2C               	movwf	___flmul@a^0,c
 11720  00222E  0E00               	movlw	0
 11721  002230  6E2D               	movwf	(___flmul@a+1)^0,c
 11722  002232  0E00               	movlw	0
 11723  002234  6E2E               	movwf	(___flmul@a+2)^0,c
 11724  002236  0E00               	movlw	0
 11725  002238  6E2F               	movwf	(___flmul@a+3)^0,c
 11726  00223A                     l4042:
 11727  00223A  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11728  00223C  EF28  F011         	goto	l1238
 11729  002240                     l4044:
 11730  002240  0E00               	movlw	0
 11731  002242  6E2C               	movwf	___flmul@a^0,c
 11732  002244  0E00               	movlw	0
 11733  002246  6E2D               	movwf	(___flmul@a+1)^0,c
 11734  002248  0E00               	movlw	0
 11735  00224A  6E2E               	movwf	(___flmul@a+2)^0,c
 11736  00224C  0E00               	movlw	0
 11737  00224E  6E2F               	movwf	(___flmul@a+3)^0,c
 11738  002250                     l1238:
 11739  002250  5039               	movf	___flmul@aexp^0,w,c
 11740  002252  B4D8               	btfsc	status,2,c
 11741  002254  EF2E  F011         	goto	u4031
 11742  002258  EF30  F011         	goto	u4030
 11743  00225C                     u4031:
 11744  00225C  EF38  F011         	goto	l4048
 11745  002260                     u4030:
 11746  002260  503A               	movf	___flmul@bexp^0,w,c
 11747  002262  A4D8               	btfss	status,2,c
 11748  002264  EF36  F011         	goto	u4041
 11749  002268  EF38  F011         	goto	u4040
 11750  00226C                     u4041:
 11751  00226C  EF42  F011         	goto	l4052
 11752  002270                     u4040:
 11753  002270                     l4048:
 11754  002270  0E00               	movlw	0
 11755  002272  6E28               	movwf	?___flmul^0,c
 11756  002274  0E00               	movlw	0
 11757  002276  6E29               	movwf	(?___flmul+1)^0,c
 11758  002278  0E00               	movlw	0
 11759  00227A  6E2A               	movwf	(?___flmul+2)^0,c
 11760  00227C  0E00               	movlw	0
 11761  00227E  6E2B               	movwf	(?___flmul+3)^0,c
 11762  002280  EFDA  F012         	goto	l1242
 11763  002284                     l4052:
 11764  002284  502E               	movf	(___flmul@a+2)^0,w,c
 11765  002286  0228               	mulwf	___flmul@b^0,c
 11766  002288  CFF3 F03F          	movff	prodl,___flmul@temp
 11767  00228C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11768  002290  503F               	movf	___flmul@temp^0,w,c
 11769  002292  6E35               	movwf	___flmul@grs^0,c
 11770  002294  6A36               	clrf	(___flmul@grs+1)^0,c
 11771  002296  6A37               	clrf	(___flmul@grs+2)^0,c
 11772  002298  6A38               	clrf	(___flmul@grs+3)^0,c
 11773  00229A  5040               	movf	(___flmul@temp+1)^0,w,c
 11774  00229C  6E3B               	movwf	___flmul@prod^0,c
 11775  00229E  6A3C               	clrf	(___flmul@prod+1)^0,c
 11776  0022A0  6A3D               	clrf	(___flmul@prod+2)^0,c
 11777  0022A2  6A3E               	clrf	(___flmul@prod+3)^0,c
 11778  0022A4  502D               	movf	(___flmul@a+1)^0,w,c
 11779  0022A6  0229               	mulwf	(___flmul@b+1)^0,c
 11780  0022A8  CFF3 F03F          	movff	prodl,___flmul@temp
 11781  0022AC  CFF4 F040          	movff	prodh,___flmul@temp+1
 11782  0022B0  503F               	movf	___flmul@temp^0,w,c
 11783  0022B2  2635               	addwf	___flmul@grs^0,f,c
 11784  0022B4  0E00               	movlw	0
 11785  0022B6  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11786  0022B8  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11787  0022BA  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11788  0022BC  5040               	movf	(___flmul@temp+1)^0,w,c
 11789  0022BE  263B               	addwf	___flmul@prod^0,f,c
 11790  0022C0  0E00               	movlw	0
 11791  0022C2  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11792  0022C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11793  0022C6  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11794  0022C8  502C               	movf	___flmul@a^0,w,c
 11795  0022CA  022A               	mulwf	(___flmul@b+2)^0,c
 11796  0022CC  CFF3 F03F          	movff	prodl,___flmul@temp
 11797  0022D0  CFF4 F040          	movff	prodh,___flmul@temp+1
 11798  0022D4  503F               	movf	___flmul@temp^0,w,c
 11799  0022D6  2635               	addwf	___flmul@grs^0,f,c
 11800  0022D8  0E00               	movlw	0
 11801  0022DA  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11802  0022DC  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11803  0022DE  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11804  0022E0  5040               	movf	(___flmul@temp+1)^0,w,c
 11805  0022E2  263B               	addwf	___flmul@prod^0,f,c
 11806  0022E4  0E00               	movlw	0
 11807  0022E6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11808  0022E8  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11809  0022EA  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11810  0022EC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11811  0022F0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11812  0022F4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11813  0022F8  6A35               	clrf	___flmul@grs^0,c
 11814  0022FA  502C               	movf	___flmul@a^0,w,c
 11815  0022FC  0229               	mulwf	(___flmul@b+1)^0,c
 11816  0022FE  CFF3 F03F          	movff	prodl,___flmul@temp
 11817  002302  CFF4 F040          	movff	prodh,___flmul@temp+1
 11818  002306  503F               	movf	___flmul@temp^0,w,c
 11819  002308  2635               	addwf	___flmul@grs^0,f,c
 11820  00230A  5040               	movf	(___flmul@temp+1)^0,w,c
 11821  00230C  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11822  00230E  0E00               	movlw	0
 11823  002310  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11824  002312  0E00               	movlw	0
 11825  002314  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11826  002316  502D               	movf	(___flmul@a+1)^0,w,c
 11827  002318  0228               	mulwf	___flmul@b^0,c
 11828  00231A  CFF3 F03F          	movff	prodl,___flmul@temp
 11829  00231E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11830  002322  503F               	movf	___flmul@temp^0,w,c
 11831  002324  2635               	addwf	___flmul@grs^0,f,c
 11832  002326  5040               	movf	(___flmul@temp+1)^0,w,c
 11833  002328  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11834  00232A  0E00               	movlw	0
 11835  00232C  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11836  00232E  0E00               	movlw	0
 11837  002330  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11838  002332  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11839  002336  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11840  00233A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11841  00233E  6A35               	clrf	___flmul@grs^0,c
 11842  002340  502C               	movf	___flmul@a^0,w,c
 11843  002342  0228               	mulwf	___flmul@b^0,c
 11844  002344  CFF3 F03F          	movff	prodl,___flmul@temp
 11845  002348  CFF4 F040          	movff	prodh,___flmul@temp+1
 11846  00234C  503F               	movf	___flmul@temp^0,w,c
 11847  00234E  2635               	addwf	___flmul@grs^0,f,c
 11848  002350  5040               	movf	(___flmul@temp+1)^0,w,c
 11849  002352  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11850  002354  0E00               	movlw	0
 11851  002356  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11852  002358  0E00               	movlw	0
 11853  00235A  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11854  00235C  502E               	movf	(___flmul@a+2)^0,w,c
 11855  00235E  0229               	mulwf	(___flmul@b+1)^0,c
 11856  002360  CFF3 F03F          	movff	prodl,___flmul@temp
 11857  002364  CFF4 F040          	movff	prodh,___flmul@temp+1
 11858  002368  503F               	movf	___flmul@temp^0,w,c
 11859  00236A  263B               	addwf	___flmul@prod^0,f,c
 11860  00236C  5040               	movf	(___flmul@temp+1)^0,w,c
 11861  00236E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11862  002370  0E00               	movlw	0
 11863  002372  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11864  002374  0E00               	movlw	0
 11865  002376  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11866  002378  502D               	movf	(___flmul@a+1)^0,w,c
 11867  00237A  022A               	mulwf	(___flmul@b+2)^0,c
 11868  00237C  CFF3 F03F          	movff	prodl,___flmul@temp
 11869  002380  CFF4 F040          	movff	prodh,___flmul@temp+1
 11870  002384  503F               	movf	___flmul@temp^0,w,c
 11871  002386  263B               	addwf	___flmul@prod^0,f,c
 11872  002388  5040               	movf	(___flmul@temp+1)^0,w,c
 11873  00238A  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11874  00238C  0E00               	movlw	0
 11875  00238E  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11876  002390  0E00               	movlw	0
 11877  002392  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11878  002394  502E               	movf	(___flmul@a+2)^0,w,c
 11879  002396  022A               	mulwf	(___flmul@b+2)^0,c
 11880  002398  CFF3 F03F          	movff	prodl,___flmul@temp
 11881  00239C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11882  0023A0  503F               	movf	___flmul@temp^0,w,c
 11883  0023A2  6E30               	movwf	??___flmul^0,c
 11884  0023A4  5040               	movf	(___flmul@temp+1)^0,w,c
 11885  0023A6  6E31               	movwf	(??___flmul+1)^0,c
 11886  0023A8  6A32               	clrf	(??___flmul+2)^0,c
 11887  0023AA  6A33               	clrf	(??___flmul+3)^0,c
 11888  0023AC  C032  F033         	movff	??___flmul+2,??___flmul+3
 11889  0023B0  C031  F032         	movff	??___flmul+1,??___flmul+2
 11890  0023B4  C030  F031         	movff	??___flmul,??___flmul+1
 11891  0023B8  6A30               	clrf	??___flmul^0,c
 11892  0023BA  5030               	movf	??___flmul^0,w,c
 11893  0023BC  263B               	addwf	___flmul@prod^0,f,c
 11894  0023BE  5031               	movf	(??___flmul+1)^0,w,c
 11895  0023C0  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11896  0023C2  5032               	movf	(??___flmul+2)^0,w,c
 11897  0023C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11898  0023C6  5033               	movf	(??___flmul+3)^0,w,c
 11899  0023C8  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11900  0023CA  C035  F030         	movff	___flmul@grs,??___flmul
 11901  0023CE  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11902  0023D2  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11903  0023D6  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11904  0023DA  0E19               	movlw	25
 11905  0023DC  EFF5  F011         	goto	u4050
 11906  0023E0                     u4055:
 11907  0023E0  90D8               	bcf	status,0,c
 11908  0023E2  3233               	rrcf	(??___flmul+3)^0,f,c
 11909  0023E4  3232               	rrcf	(??___flmul+2)^0,f,c
 11910  0023E6  3231               	rrcf	(??___flmul+1)^0,f,c
 11911  0023E8  3230               	rrcf	??___flmul^0,f,c
 11912  0023EA                     u4050:
 11913  0023EA  2EE8               	decfsz	wreg,f,c
 11914  0023EC  EFF0  F011         	goto	u4055
 11915  0023F0  5030               	movf	??___flmul^0,w,c
 11916  0023F2  263B               	addwf	___flmul@prod^0,f,c
 11917  0023F4  5031               	movf	(??___flmul+1)^0,w,c
 11918  0023F6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11919  0023F8  5032               	movf	(??___flmul+2)^0,w,c
 11920  0023FA  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11921  0023FC  5033               	movf	(??___flmul+3)^0,w,c
 11922  0023FE  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11923  002400  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11924  002404  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11925  002408  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11926  00240C  6A35               	clrf	___flmul@grs^0,c
 11927  00240E  5039               	movf	___flmul@aexp^0,w,c
 11928  002410  C03A  F030         	movff	___flmul@bexp,??___flmul
 11929  002414  6A31               	clrf	(??___flmul+1)^0,c
 11930  002416  2630               	addwf	??___flmul^0,f,c
 11931  002418  0E00               	movlw	0
 11932  00241A  2231               	addwfc	(??___flmul+1)^0,f,c
 11933  00241C  0E82               	movlw	130
 11934  00241E  2430               	addwf	??___flmul^0,w,c
 11935  002420  6E3F               	movwf	___flmul@temp^0,c
 11936  002422  0EFF               	movlw	255
 11937  002424  2031               	addwfc	(??___flmul+1)^0,w,c
 11938  002426  6E40               	movwf	(___flmul@temp+1)^0,c
 11939  002428  EF2B  F012         	goto	l4100
 11940  00242C                     l4094:
 11941  00242C  90D8               	bcf	status,0,c
 11942  00242E  363B               	rlcf	___flmul@prod^0,f,c
 11943  002430  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11944  002432  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11945  002434  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11946  002436  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11947  002438  EF20  F012         	goto	u4061
 11948  00243C  EF22  F012         	goto	u4060
 11949  002440                     u4061:
 11950  002440  EF23  F012         	goto	l1245
 11951  002444                     u4060:
 11952  002444  803B               	bsf	___flmul@prod^0,0,c
 11953  002446                     l1245:
 11954  002446  90D8               	bcf	status,0,c
 11955  002448  3635               	rlcf	___flmul@grs^0,f,c
 11956  00244A  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11957  00244C  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11958  00244E  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11959  002450  063F               	decf	___flmul@temp^0,f,c
 11960  002452  A0D8               	btfss	status,0,c
 11961  002454  0640               	decf	(___flmul@temp+1)^0,f,c
 11962  002456                     l4100:
 11963  002456  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11964  002458  EF30  F012         	goto	u4071
 11965  00245C  EF32  F012         	goto	u4070
 11966  002460                     u4071:
 11967  002460  EF16  F012         	goto	l4094
 11968  002464                     u4070:
 11969  002464  0E00               	movlw	0
 11970  002466  6E39               	movwf	___flmul@aexp^0,c
 11971  002468  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11972  00246A  EF39  F012         	goto	u4081
 11973  00246E  EF3B  F012         	goto	u4080
 11974  002472                     u4081:
 11975  002472  EF5F  F012         	goto	l1247
 11976  002476                     u4080:
 11977  002476  0EFF               	movlw	255
 11978  002478  1435               	andwf	___flmul@grs^0,w,c
 11979  00247A  6E30               	movwf	??___flmul^0,c
 11980  00247C  0EFF               	movlw	255
 11981  00247E  1436               	andwf	(___flmul@grs+1)^0,w,c
 11982  002480  6E31               	movwf	(??___flmul+1)^0,c
 11983  002482  0EFF               	movlw	255
 11984  002484  1437               	andwf	(___flmul@grs+2)^0,w,c
 11985  002486  6E32               	movwf	(??___flmul+2)^0,c
 11986  002488  0E7F               	movlw	127
 11987  00248A  1438               	andwf	(___flmul@grs+3)^0,w,c
 11988  00248C  6E33               	movwf	(??___flmul+3)^0,c
 11989  00248E  5030               	movf	??___flmul^0,w,c
 11990  002490  1031               	iorwf	(??___flmul+1)^0,w,c
 11991  002492  1032               	iorwf	(??___flmul+2)^0,w,c
 11992  002494  1033               	iorwf	(??___flmul+3)^0,w,c
 11993  002496  B4D8               	btfsc	status,2,c
 11994  002498  EF50  F012         	goto	u4091
 11995  00249C  EF52  F012         	goto	u4090
 11996  0024A0                     u4091:
 11997  0024A0  EF56  F012         	goto	l1248
 11998  0024A4                     u4090:
 11999  0024A4                     l4108:
 12000  0024A4  0E01               	movlw	1
 12001  0024A6  6E39               	movwf	___flmul@aexp^0,c
 12002  0024A8  EF5F  F012         	goto	l1247
 12003  0024AC                     l1248:
 12004  0024AC  A03B               	btfss	___flmul@prod^0,0,c
 12005  0024AE  EF5B  F012         	goto	u4101
 12006  0024B2  EF5D  F012         	goto	u4100
 12007  0024B6                     u4101:
 12008  0024B6  EF5F  F012         	goto	l1247
 12009  0024BA                     u4100:
 12010  0024BA  EF52  F012         	goto	l4108
 12011  0024BE                     l1247:
 12012  0024BE  5039               	movf	___flmul@aexp^0,w,c
 12013  0024C0  B4D8               	btfsc	status,2,c
 12014  0024C2  EF65  F012         	goto	u4111
 12015  0024C6  EF67  F012         	goto	u4110
 12016  0024CA                     u4111:
 12017  0024CA  EF8B  F012         	goto	l4120
 12018  0024CE                     u4110:
 12019  0024CE  0E01               	movlw	1
 12020  0024D0  263B               	addwf	___flmul@prod^0,f,c
 12021  0024D2  0E00               	movlw	0
 12022  0024D4  223C               	addwfc	(___flmul@prod+1)^0,f,c
 12023  0024D6  223D               	addwfc	(___flmul@prod+2)^0,f,c
 12024  0024D8  223E               	addwfc	(___flmul@prod+3)^0,f,c
 12025  0024DA  A03E               	btfss	(___flmul@prod+3)^0,0,c
 12026  0024DC  EF72  F012         	goto	u4121
 12027  0024E0  EF74  F012         	goto	u4120
 12028  0024E4                     u4121:
 12029  0024E4  EF8B  F012         	goto	l4120
 12030  0024E8                     u4120:
 12031  0024E8  C03B  F030         	movff	___flmul@prod,??___flmul
 12032  0024EC  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 12033  0024F0  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 12034  0024F4  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 12035  0024F8  3433               	rlcf	(??___flmul+3)^0,w,c
 12036  0024FA  3233               	rrcf	(??___flmul+3)^0,f,c
 12037  0024FC  3232               	rrcf	(??___flmul+2)^0,f,c
 12038  0024FE  3231               	rrcf	(??___flmul+1)^0,f,c
 12039  002500  3230               	rrcf	??___flmul^0,f,c
 12040  002502  C030  F03B         	movff	??___flmul,___flmul@prod
 12041  002506  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 12042  00250A  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 12043  00250E  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 12044  002512  4A3F               	infsnz	___flmul@temp^0,f,c
 12045  002514  2A40               	incf	(___flmul@temp+1)^0,f,c
 12046  002516                     l4120:
 12047  002516  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 12048  002518  EF96  F012         	goto	u4131
 12049  00251C  5040               	movf	(___flmul@temp+1)^0,w,c
 12050  00251E  E108               	bnz	u4130
 12051  002520  283F               	incf	___flmul@temp^0,w,c
 12052  002522  A0D8               	btfss	status,0,c
 12053  002524  EF96  F012         	goto	u4131
 12054  002528  EF98  F012         	goto	u4130
 12055  00252C                     u4131:
 12056  00252C  EFA2  F012         	goto	l4124
 12057  002530                     u4130:
 12058  002530  0E00               	movlw	0
 12059  002532  6E3B               	movwf	___flmul@prod^0,c
 12060  002534  0E00               	movlw	0
 12061  002536  6E3C               	movwf	(___flmul@prod+1)^0,c
 12062  002538  0E80               	movlw	128
 12063  00253A  6E3D               	movwf	(___flmul@prod+2)^0,c
 12064  00253C  0E7F               	movlw	127
 12065  00253E  6E3E               	movwf	(___flmul@prod+3)^0,c
 12066  002540  EFD0  F012         	goto	l4136
 12067  002544                     l4124:
 12068  002544  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 12069  002546  EFAF  F012         	goto	u4140
 12070  00254A  5040               	movf	(___flmul@temp+1)^0,w,c
 12071  00254C  E106               	bnz	u4141
 12072  00254E  043F               	decf	___flmul@temp^0,w,c
 12073  002550  B0D8               	btfsc	status,0,c
 12074  002552  EFAD  F012         	goto	u4141
 12075  002556  EFAF  F012         	goto	u4140
 12076  00255A                     u4141:
 12077  00255A  EFBB  F012         	goto	l1255
 12078  00255E                     u4140:
 12079  00255E  0E00               	movlw	0
 12080  002560  6E3B               	movwf	___flmul@prod^0,c
 12081  002562  0E00               	movlw	0
 12082  002564  6E3C               	movwf	(___flmul@prod+1)^0,c
 12083  002566  0E00               	movlw	0
 12084  002568  6E3D               	movwf	(___flmul@prod+2)^0,c
 12085  00256A  0E00               	movlw	0
 12086  00256C  6E3E               	movwf	(___flmul@prod+3)^0,c
 12087  00256E  0E00               	movlw	0
 12088  002570  6E34               	movwf	___flmul@sign^0,c
 12089  002572  EFD0  F012         	goto	l4136
 12090  002576                     l1255:
 12091  002576  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 12092  00257A  0EFF               	movlw	255
 12093  00257C  163B               	andwf	___flmul@prod^0,f,c
 12094  00257E  0EFF               	movlw	255
 12095  002580  163C               	andwf	(___flmul@prod+1)^0,f,c
 12096  002582  0E7F               	movlw	127
 12097  002584  163D               	andwf	(___flmul@prod+2)^0,f,c
 12098  002586  0E00               	movlw	0
 12099  002588  163E               	andwf	(___flmul@prod+3)^0,f,c
 12100  00258A  A03A               	btfss	___flmul@bexp^0,0,c
 12101  00258C  EFCA  F012         	goto	u4151
 12102  002590  EFCC  F012         	goto	u4150
 12103  002594                     u4151:
 12104  002594  EFCD  F012         	goto	l4134
 12105  002598                     u4150:
 12106  002598  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 12107  00259A                     l4134:
 12108  00259A  90D8               	bcf	status,0,c
 12109  00259C  303A               	rrcf	___flmul@bexp^0,w,c
 12110  00259E  6E3E               	movwf	(___flmul@prod+3)^0,c
 12111  0025A0                     l4136:
 12112  0025A0  5034               	movf	___flmul@sign^0,w,c
 12113  0025A2  123E               	iorwf	(___flmul@prod+3)^0,f,c
 12114  0025A4  C03B  F028         	movff	___flmul@prod,?___flmul
 12115  0025A8  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 12116  0025AC  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 12117  0025B0  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 12118  0025B4                     l1242:
 12119  0025B4  0012               	return		;funcret
 12120  0025B6                     __end_of___flmul:
 12121                           	callstack 0
 12122                           
 12123 ;; *************** function ___flge *****************
 12124 ;; Defined at:
 12125 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 12126 ;; Parameters:    Size  Location     Type
 12127 ;;  ff1             4    0[COMRAM] unsigned char 
 12128 ;;  ff2             4    4[COMRAM] unsigned char 
 12129 ;; Auto vars:     Size  Location     Type
 12130 ;;		None
 12131 ;; Return value:  Size  Location     Type
 12132 ;;		None               void
 12133 ;; Registers used:
 12134 ;;		wreg, status,2, status,0
 12135 ;; Tracked objects:
 12136 ;;		On entry : 0/0
 12137 ;;		On exit  : 0/0
 12138 ;;		Unchanged: 0/0
 12139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12140 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12142 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12143 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12144 ;;Total ram usage:       12 bytes
 12145 ;; Hardware stack levels used: 1
 12146 ;; Hardware stack levels required when called: 1
 12147 ;; This function calls:
 12148 ;;		Nothing
 12149 ;; This function is called by:
 12150 ;;		_roundf
 12151 ;; This function uses a non-reentrant model
 12152 ;;
 12153                           
 12154                           	psect	text53
 12155  005054                     __ptext53:
 12156                           	callstack 0
 12157  005054                     ___flge:
 12158                           	callstack 25
 12159  005054  0E00               	movlw	0
 12160  005056  1401               	andwf	___flge@ff1^0,w,c
 12161  005058  6E09               	movwf	??___flge^0,c
 12162  00505A  0E00               	movlw	0
 12163  00505C  1402               	andwf	(___flge@ff1+1)^0,w,c
 12164  00505E  6E0A               	movwf	(??___flge+1)^0,c
 12165  005060  0E80               	movlw	128
 12166  005062  1403               	andwf	(___flge@ff1+2)^0,w,c
 12167  005064  6E0B               	movwf	(??___flge+2)^0,c
 12168  005066  0E7F               	movlw	127
 12169  005068  1404               	andwf	(___flge@ff1+3)^0,w,c
 12170  00506A  6E0C               	movwf	(??___flge+3)^0,c
 12171  00506C  5009               	movf	??___flge^0,w,c
 12172  00506E  100A               	iorwf	(??___flge+1)^0,w,c
 12173  005070  100B               	iorwf	(??___flge+2)^0,w,c
 12174  005072  100C               	iorwf	(??___flge+3)^0,w,c
 12175  005074  A4D8               	btfss	status,2,c
 12176  005076  EF3F  F028         	goto	u4161
 12177  00507A  EF41  F028         	goto	u4160
 12178  00507E                     u4161:
 12179  00507E  EF49  F028         	goto	l4152
 12180  005082                     u4160:
 12181  005082  0E00               	movlw	0
 12182  005084  6E01               	movwf	___flge@ff1^0,c
 12183  005086  0E00               	movlw	0
 12184  005088  6E02               	movwf	(___flge@ff1+1)^0,c
 12185  00508A  0E00               	movlw	0
 12186  00508C  6E03               	movwf	(___flge@ff1+2)^0,c
 12187  00508E  0E00               	movlw	0
 12188  005090  6E04               	movwf	(___flge@ff1+3)^0,c
 12189  005092                     l4152:
 12190  005092  0E00               	movlw	0
 12191  005094  1405               	andwf	___flge@ff2^0,w,c
 12192  005096  6E09               	movwf	??___flge^0,c
 12193  005098  0E00               	movlw	0
 12194  00509A  1406               	andwf	(___flge@ff2+1)^0,w,c
 12195  00509C  6E0A               	movwf	(??___flge+1)^0,c
 12196  00509E  0E80               	movlw	128
 12197  0050A0  1407               	andwf	(___flge@ff2+2)^0,w,c
 12198  0050A2  6E0B               	movwf	(??___flge+2)^0,c
 12199  0050A4  0E7F               	movlw	127
 12200  0050A6  1408               	andwf	(___flge@ff2+3)^0,w,c
 12201  0050A8  6E0C               	movwf	(??___flge+3)^0,c
 12202  0050AA  5009               	movf	??___flge^0,w,c
 12203  0050AC  100A               	iorwf	(??___flge+1)^0,w,c
 12204  0050AE  100B               	iorwf	(??___flge+2)^0,w,c
 12205  0050B0  100C               	iorwf	(??___flge+3)^0,w,c
 12206  0050B2  A4D8               	btfss	status,2,c
 12207  0050B4  EF5E  F028         	goto	u4171
 12208  0050B8  EF60  F028         	goto	u4170
 12209  0050BC                     u4171:
 12210  0050BC  EF68  F028         	goto	l4156
 12211  0050C0                     u4170:
 12212  0050C0  0E00               	movlw	0
 12213  0050C2  6E05               	movwf	___flge@ff2^0,c
 12214  0050C4  0E00               	movlw	0
 12215  0050C6  6E06               	movwf	(___flge@ff2+1)^0,c
 12216  0050C8  0E00               	movlw	0
 12217  0050CA  6E07               	movwf	(___flge@ff2+2)^0,c
 12218  0050CC  0E00               	movlw	0
 12219  0050CE  6E08               	movwf	(___flge@ff2+3)^0,c
 12220  0050D0                     l4156:
 12221  0050D0  AE04               	btfss	(___flge@ff1+3)^0,7,c
 12222  0050D2  EF6D  F028         	goto	u4181
 12223  0050D6  EF6F  F028         	goto	u4180
 12224  0050DA                     u4181:
 12225  0050DA  EF78  F028         	goto	l4160
 12226  0050DE                     u4180:
 12227  0050DE  6C01               	negf	___flge@ff1^0,c
 12228  0050E0  1E02               	comf	(___flge@ff1+1)^0,f,c
 12229  0050E2  B0D8               	btfsc	status,0,c
 12230  0050E4  2A02               	incf	(___flge@ff1+1)^0,f,c
 12231  0050E6  1E03               	comf	(___flge@ff1+2)^0,f,c
 12232  0050E8  B0D8               	btfsc	status,0,c
 12233  0050EA  2A03               	incf	(___flge@ff1+2)^0,f,c
 12234  0050EC  0E80               	movlw	128
 12235  0050EE  5604               	subfwb	(___flge@ff1+3)^0,f,c
 12236  0050F0                     l4160:
 12237  0050F0  AE08               	btfss	(___flge@ff2+3)^0,7,c
 12238  0050F2  EF7D  F028         	goto	u4191
 12239  0050F6  EF7F  F028         	goto	u4190
 12240  0050FA                     u4191:
 12241  0050FA  EF88  F028         	goto	l889
 12242  0050FE                     u4190:
 12243  0050FE  6C05               	negf	___flge@ff2^0,c
 12244  005100  1E06               	comf	(___flge@ff2+1)^0,f,c
 12245  005102  B0D8               	btfsc	status,0,c
 12246  005104  2A06               	incf	(___flge@ff2+1)^0,f,c
 12247  005106  1E07               	comf	(___flge@ff2+2)^0,f,c
 12248  005108  B0D8               	btfsc	status,0,c
 12249  00510A  2A07               	incf	(___flge@ff2+2)^0,f,c
 12250  00510C  0E80               	movlw	128
 12251  00510E  5608               	subfwb	(___flge@ff2+3)^0,f,c
 12252  005110                     l889:
 12253  005110  0E00               	movlw	0
 12254  005112  1A01               	xorwf	___flge@ff1^0,f,c
 12255  005114  0E00               	movlw	0
 12256  005116  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 12257  005118  0E00               	movlw	0
 12258  00511A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 12259  00511C  0E80               	movlw	128
 12260  00511E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 12261  005120  0E00               	movlw	0
 12262  005122  1A05               	xorwf	___flge@ff2^0,f,c
 12263  005124  0E00               	movlw	0
 12264  005126  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 12265  005128  0E00               	movlw	0
 12266  00512A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 12267  00512C  0E80               	movlw	128
 12268  00512E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 12269  005130  5005               	movf	___flge@ff2^0,w,c
 12270  005132  5C01               	subwf	___flge@ff1^0,w,c
 12271  005134  5006               	movf	(___flge@ff2+1)^0,w,c
 12272  005136  5802               	subwfb	(___flge@ff1+1)^0,w,c
 12273  005138  5007               	movf	(___flge@ff2+2)^0,w,c
 12274  00513A  5803               	subwfb	(___flge@ff1+2)^0,w,c
 12275  00513C  5008               	movf	(___flge@ff2+3)^0,w,c
 12276  00513E  5804               	subwfb	(___flge@ff1+3)^0,w,c
 12277  005140  B0D8               	btfsc	status,0,c
 12278  005142  EFA5  F028         	goto	u4201
 12279  005146  EFA7  F028         	goto	u4200
 12280  00514A                     u4201:
 12281  00514A  EFAA  F028         	goto	l4166
 12282  00514E                     u4200:
 12283  00514E  90D8               	bcf	status,0,c
 12284  005150  EFAB  F028         	goto	l894
 12285  005154                     l4166:
 12286  005154  80D8               	bsf	status,0,c
 12287  005156                     l894:
 12288  005156  0012               	return		;funcret
 12289  005158                     __end_of___flge:
 12290                           	callstack 0
 12291                           
 12292 ;; *************** function ___fltol *****************
 12293 ;; Defined at:
 12294 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  f1              4   90[COMRAM] unsigned char 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  exp1            1    5[BANK0 ] unsigned char 
 12299 ;;  sign1           1    4[BANK0 ] unsigned char 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  4   90[COMRAM] long 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12311 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12313 ;;Total ram usage:       10 bytes
 12314 ;; Hardware stack levels used: 1
 12315 ;; Hardware stack levels required when called: 1
 12316 ;; This function calls:
 12317 ;;		Nothing
 12318 ;; This function is called by:
 12319 ;;		_detect_color
 12320 ;;		_lroundf
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text54
 12325  004F4C                     __ptext54:
 12326                           	callstack 0
 12327  004F4C                     ___fltol:
 12328                           	callstack 26
 12329  004F4C  345D               	rlcf	(___fltol@f1+2)^0,w,c
 12330  004F4E  345E               	rlcf	(___fltol@f1+3)^0,w,c
 12331  004F50  0100               	movlb	0	; () banked
 12332  004F52  6F65               	movwf	___fltol@exp1& (0+255),b
 12333  004F54  5165               	movf	___fltol@exp1& (0+255),w,b
 12334  004F56  A4D8               	btfss	status,2,c
 12335  004F58  EFB0  F027         	goto	u4351
 12336  004F5C  EFB2  F027         	goto	u4350
 12337  004F60                     u4351:
 12338  004F60  EFBC  F027         	goto	l4308
 12339  004F64                     u4350:
 12340  004F64                     l4304:
 12341                           
 12342                           ; BSR set to: 0
 12343  004F64  0E00               	movlw	0
 12344  004F66  6E5B               	movwf	?___fltol^0,c
 12345  004F68  0E00               	movlw	0
 12346  004F6A  6E5C               	movwf	(?___fltol+1)^0,c
 12347  004F6C  0E00               	movlw	0
 12348  004F6E  6E5D               	movwf	(?___fltol+2)^0,c
 12349  004F70  0E00               	movlw	0
 12350  004F72  6E5E               	movwf	(?___fltol+3)^0,c
 12351  004F74  EF29  F028         	goto	l921
 12352  004F78                     l4308:
 12353                           
 12354                           ; BSR set to: 0
 12355  004F78  C05B  F060         	movff	___fltol@f1,??___fltol
 12356  004F7C  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
 12357  004F80  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
 12358  004F84  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
 12359  004F88  0E20               	movlw	32
 12360  004F8A  EFCC  F027         	goto	u4360
 12361  004F8E                     u4365:
 12362  004F8E  90D8               	bcf	status,0,c
 12363  004F90  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 12364  004F92  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 12365  004F94  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 12366  004F96  3360               	rrcf	??___fltol& (0+255),f,b
 12367  004F98                     u4360:
 12368  004F98  2EE8               	decfsz	wreg,f,c
 12369  004F9A  EFC7  F027         	goto	u4365
 12370  004F9E  5160               	movf	??___fltol& (0+255),w,b
 12371  004FA0  6F64               	movwf	___fltol@sign1& (0+255),b
 12372  004FA2                     
 12373                           ; BSR set to: 0
 12374  004FA2  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 12375  004FA4                     
 12376                           ; BSR set to: 0
 12377  004FA4  0EFF               	movlw	255
 12378  004FA6  165B               	andwf	___fltol@f1^0,f,c
 12379  004FA8  0EFF               	movlw	255
 12380  004FAA  165C               	andwf	(___fltol@f1+1)^0,f,c
 12381  004FAC  0EFF               	movlw	255
 12382  004FAE  165D               	andwf	(___fltol@f1+2)^0,f,c
 12383  004FB0  0E00               	movlw	0
 12384  004FB2  165E               	andwf	(___fltol@f1+3)^0,f,c
 12385  004FB4                     
 12386                           ; BSR set to: 0
 12387  004FB4  0E96               	movlw	150
 12388  004FB6  5F65               	subwf	___fltol@exp1& (0+255),f,b
 12389  004FB8                     
 12390                           ; BSR set to: 0
 12391  004FB8  BF65               	btfsc	___fltol@exp1& (0+255),7,b
 12392  004FBA  EFE3  F027         	goto	u4370
 12393  004FBE  EFE1  F027         	goto	u4371
 12394  004FC2                     u4371:
 12395  004FC2  EFF9  F027         	goto	l4328
 12396  004FC6                     u4370:
 12397  004FC6                     
 12398                           ; BSR set to: 0
 12399  004FC6  5165               	movf	___fltol@exp1& (0+255),w,b
 12400  004FC8  0A80               	xorlw	128
 12401  004FCA  0F97               	addlw	151
 12402  004FCC  B0D8               	btfsc	status,0,c
 12403  004FCE  EFEB  F027         	goto	u4381
 12404  004FD2  EFED  F027         	goto	u4380
 12405  004FD6                     u4381:
 12406  004FD6  EFEF  F027         	goto	l4324
 12407  004FDA                     u4380:
 12408  004FDA  EFB2  F027         	goto	l4304
 12409  004FDE                     l4324:
 12410                           
 12411                           ; BSR set to: 0
 12412  004FDE  90D8               	bcf	status,0,c
 12413  004FE0  325E               	rrcf	(___fltol@f1+3)^0,f,c
 12414  004FE2  325D               	rrcf	(___fltol@f1+2)^0,f,c
 12415  004FE4  325C               	rrcf	(___fltol@f1+1)^0,f,c
 12416  004FE6  325B               	rrcf	___fltol@f1^0,f,c
 12417  004FE8                     
 12418                           ; BSR set to: 0
 12419  004FE8  3F65               	incfsz	___fltol@exp1& (0+255),f,b
 12420  004FEA  EFEF  F027         	goto	l4324
 12421  004FEE  EF11  F028         	goto	l4338
 12422  004FF2                     l4328:
 12423                           
 12424                           ; BSR set to: 0
 12425  004FF2  0E1F               	movlw	31
 12426  004FF4  6565               	cpfsgt	___fltol@exp1& (0+255),b
 12427  004FF6  EFFF  F027         	goto	u4391
 12428  004FFA  EF01  F028         	goto	u4390
 12429  004FFE                     u4391:
 12430  004FFE  EF09  F028         	goto	l4336
 12431  005002                     u4390:
 12432  005002  EFB2  F027         	goto	l4304
 12433  005006                     l4334:
 12434                           
 12435                           ; BSR set to: 0
 12436  005006  90D8               	bcf	status,0,c
 12437  005008  365B               	rlcf	___fltol@f1^0,f,c
 12438  00500A  365C               	rlcf	(___fltol@f1+1)^0,f,c
 12439  00500C  365D               	rlcf	(___fltol@f1+2)^0,f,c
 12440  00500E  365E               	rlcf	(___fltol@f1+3)^0,f,c
 12441  005010  0765               	decf	___fltol@exp1& (0+255),f,b
 12442  005012                     l4336:
 12443                           
 12444                           ; BSR set to: 0
 12445  005012  5165               	movf	___fltol@exp1& (0+255),w,b
 12446  005014  A4D8               	btfss	status,2,c
 12447  005016  EF0F  F028         	goto	u4401
 12448  00501A  EF11  F028         	goto	u4400
 12449  00501E                     u4401:
 12450  00501E  EF03  F028         	goto	l4334
 12451  005022                     u4400:
 12452  005022                     l4338:
 12453                           
 12454                           ; BSR set to: 0
 12455  005022  5164               	movf	___fltol@sign1& (0+255),w,b
 12456  005024  B4D8               	btfsc	status,2,c
 12457  005026  EF17  F028         	goto	u4411
 12458  00502A  EF19  F028         	goto	u4410
 12459  00502E                     u4411:
 12460  00502E  EF21  F028         	goto	l4342
 12461  005032                     u4410:
 12462  005032                     
 12463                           ; BSR set to: 0
 12464  005032  1E5E               	comf	(___fltol@f1+3)^0,f,c
 12465  005034  1E5D               	comf	(___fltol@f1+2)^0,f,c
 12466  005036  1E5C               	comf	(___fltol@f1+1)^0,f,c
 12467  005038  6C5B               	negf	___fltol@f1^0,c
 12468  00503A  0E00               	movlw	0
 12469  00503C  225C               	addwfc	(___fltol@f1+1)^0,f,c
 12470  00503E  225D               	addwfc	(___fltol@f1+2)^0,f,c
 12471  005040  225E               	addwfc	(___fltol@f1+3)^0,f,c
 12472  005042                     l4342:
 12473                           
 12474                           ; BSR set to: 0
 12475  005042  C05B  F05B         	movff	___fltol@f1,?___fltol
 12476  005046  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 12477  00504A  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 12478  00504E  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 12479  005052                     l921:
 12480                           
 12481                           ; BSR set to: 0
 12482  005052  0012               	return		;funcret
 12483  005054                     __end_of___fltol:
 12484                           	callstack 0
 12485                           
 12486 ;; *************** function _color_read_Clear *****************
 12487 ;; Defined at:
 12488 ;;		line 153 in file "color.c"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;		None
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;  tmp             2    9[COMRAM] unsigned int 
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  2    4[COMRAM] unsigned int 
 12495 ;; Registers used:
 12496 ;;		wreg, status,2, status,0, cstack
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12504 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12505 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12506 ;;Total ram usage:        7 bytes
 12507 ;; Hardware stack levels used: 1
 12508 ;; Hardware stack levels required when called: 3
 12509 ;; This function calls:
 12510 ;;		_I2C_2_Master_Read
 12511 ;;		_I2C_2_Master_RepStart
 12512 ;;		_I2C_2_Master_Start
 12513 ;;		_I2C_2_Master_Stop
 12514 ;;		_I2C_2_Master_Write
 12515 ;; This function is called by:
 12516 ;;		_read_color
 12517 ;;		_calibrate_white
 12518 ;;		_amb_light_measure
 12519 ;;		_detect_wall
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text55
 12524  005AB0                     __ptext55:
 12525                           	callstack 0
 12526  005AB0                     _color_read_Clear:
 12527                           	callstack 24
 12528  005AB0                     
 12529                           ;color.c: 155:  unsigned int tmp;;color.c: 156:  I2C_2_Master_Start();
 12530  005AB0  EC13  F030         	call	_I2C_2_Master_Start	;wreg free
 12531                           
 12532                           ;color.c: 157:  I2C_2_Master_Write(0x52 | 0x00);
 12533  005AB4  0E52               	movlw	82
 12534  005AB6  ECFD  F02F         	call	_I2C_2_Master_Write
 12535                           
 12536                           ;color.c: 158:  I2C_2_Master_Write(0xA0 | 0x14);
 12537  005ABA  0EB4               	movlw	180
 12538  005ABC  ECFD  F02F         	call	_I2C_2_Master_Write
 12539                           
 12540                           ;color.c: 159:  I2C_2_Master_RepStart();
 12541  005AC0  EC09  F030         	call	_I2C_2_Master_RepStart	;wreg free
 12542                           
 12543                           ;color.c: 160:  I2C_2_Master_Write(0x52 | 0x01);
 12544  005AC4  0E53               	movlw	83
 12545  005AC6  ECFD  F02F         	call	_I2C_2_Master_Write
 12546                           
 12547                           ;color.c: 161:  tmp=I2C_2_Master_Read(1);
 12548  005ACA  0E01               	movlw	1
 12549  005ACC  ECE6  F02D         	call	_I2C_2_Master_Read
 12550  005AD0  6E07               	movwf	??_color_read_Clear^0,c
 12551  005AD2  5007               	movf	??_color_read_Clear^0,w,c
 12552  005AD4  6E0A               	movwf	color_read_Clear@tmp^0,c
 12553  005AD6  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12554                           
 12555                           ;color.c: 162:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12556  005AD8  0E00               	movlw	0
 12557  005ADA  ECE6  F02D         	call	_I2C_2_Master_Read
 12558  005ADE  6E07               	movwf	??_color_read_Clear^0,c
 12559  005AE0  5007               	movf	??_color_read_Clear^0,w,c
 12560  005AE2  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12561  005AE4  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12562  005AE6  500A               	movf	color_read_Clear@tmp^0,w,c
 12563  005AE8  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12564  005AEA  6E0A               	movwf	color_read_Clear@tmp^0,c
 12565  005AEC  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12566  005AEE  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12567  005AF0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12568                           
 12569                           ;color.c: 163:  I2C_2_Master_Stop();
 12570  005AF2  EC0E  F030         	call	_I2C_2_Master_Stop	;wreg free
 12571  005AF6                     
 12572                           ;color.c: 164:  return tmp;
 12573  005AF6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12574  005AFA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12575  005AFE  0012               	return		;funcret
 12576  005B00                     __end_of_color_read_Clear:
 12577                           	callstack 0
 12578                           
 12579 ;; *************** function _I2C_2_Master_RepStart *****************
 12580 ;; Defined at:
 12581 ;;		line 33 in file "i2c.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;		None
 12584 ;; Auto vars:     Size  Location     Type
 12585 ;;		None
 12586 ;; Return value:  Size  Location     Type
 12587 ;;                  1    wreg      void 
 12588 ;; Registers used:
 12589 ;;		wreg, status,2, status,0, cstack
 12590 ;; Tracked objects:
 12591 ;;		On entry : 0/0
 12592 ;;		On exit  : 0/0
 12593 ;;		Unchanged: 0/0
 12594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12599 ;;Total ram usage:        0 bytes
 12600 ;; Hardware stack levels used: 1
 12601 ;; Hardware stack levels required when called: 2
 12602 ;; This function calls:
 12603 ;;		_I2C_2_Master_Idle
 12604 ;; This function is called by:
 12605 ;;		_color_read_Red
 12606 ;;		_color_read_Blue
 12607 ;;		_color_read_Green
 12608 ;;		_color_read_Clear
 12609 ;; This function uses a non-reentrant model
 12610 ;;
 12611                           
 12612                           	psect	text56
 12613  006012                     __ptext56:
 12614                           	callstack 0
 12615  006012                     _I2C_2_Master_RepStart:
 12616                           	callstack 24
 12617  006012                     
 12618                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12619  006012  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12620  006016                     
 12621                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12622  006016  010E               	movlb	14	; () banked
 12623  006018  83DA               	bsf	218,1,b	;volatile
 12624  00601A                     
 12625                           ; BSR set to: 14
 12626  00601A  0012               	return		;funcret
 12627  00601C                     __end_of_I2C_2_Master_RepStart:
 12628                           	callstack 0
 12629                           
 12630 ;; *************** function _I2C_2_Master_Read *****************
 12631 ;; Defined at:
 12632 ;;		line 51 in file "i2c.c"
 12633 ;; Parameters:    Size  Location     Type
 12634 ;;  ack             1    wreg     unsigned char 
 12635 ;; Auto vars:     Size  Location     Type
 12636 ;;  ack             1    2[COMRAM] unsigned char 
 12637 ;;  tmp             1    3[COMRAM] unsigned char 
 12638 ;; Return value:  Size  Location     Type
 12639 ;;                  1    wreg      unsigned char 
 12640 ;; Registers used:
 12641 ;;		wreg, status,2, status,0, cstack
 12642 ;; Tracked objects:
 12643 ;;		On entry : 0/0
 12644 ;;		On exit  : 0/0
 12645 ;;		Unchanged: 0/0
 12646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12650 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12651 ;;Total ram usage:        3 bytes
 12652 ;; Hardware stack levels used: 1
 12653 ;; Hardware stack levels required when called: 2
 12654 ;; This function calls:
 12655 ;;		_I2C_2_Master_Idle
 12656 ;; This function is called by:
 12657 ;;		_color_read_Red
 12658 ;;		_color_read_Blue
 12659 ;;		_color_read_Green
 12660 ;;		_color_read_Clear
 12661 ;; This function uses a non-reentrant model
 12662 ;;
 12663                           
 12664                           	psect	text57
 12665  005BCC                     __ptext57:
 12666                           	callstack 0
 12667  005BCC                     _I2C_2_Master_Read:
 12668                           	callstack 24
 12669                           
 12670                           ; BSR set to: 14
 12671                           ;incstack = 0
 12672                           ;I2C_2_Master_Read@ack stored from wreg
 12673  005BCC  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12674  005BCE                     
 12675                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12676  005BCE  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12677  005BD2                     
 12678                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12679  005BD2  010E               	movlb	14	; () banked
 12680  005BD4  87DA               	bsf	218,3,b	;volatile
 12681                           
 12682                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12683  005BD6  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12684  005BDA                     
 12685                           ;i2c.c: 57:   tmp = SSP2BUF;
 12686  005BDA  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12687                           
 12688                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12689  005BDE  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12690  005BE2                     
 12691                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12692  005BE2  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12693  005BE4  B4D8               	btfsc	status,2,c
 12694  005BE6  EFF7  F02D         	goto	u3901
 12695  005BEA  EFFB  F02D         	goto	u3900
 12696  005BEE                     u3901:
 12697  005BEE  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12698  005BF0  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12699  005BF2  EFFC  F02D         	goto	u3918
 12700  005BF6                     u3900:
 12701  005BF6  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12702  005BF8                     u3918:
 12703  005BF8  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12704  005BFA  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12705  005BFC  010E               	movlb	14	; () banked
 12706  005BFE  51DA               	movf	218,w,b	;volatile
 12707  005C00  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12708  005C02  0BDF               	andlw	-33
 12709  005C04  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12710  005C06  6FDA               	movwf	218,b	;volatile
 12711  005C08                     
 12712                           ; BSR set to: 14
 12713                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12714  005C08  89DA               	bsf	218,4,b	;volatile
 12715  005C0A                     
 12716                           ; BSR set to: 14
 12717                           ;i2c.c: 61:   return tmp;
 12718  005C0A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12719  005C0C                     
 12720                           ; BSR set to: 14
 12721  005C0C  0012               	return		;funcret
 12722  005C0E                     __end_of_I2C_2_Master_Read:
 12723                           	callstack 0
 12724                           
 12725 ;; *************** function ___xxtofl *****************
 12726 ;; Defined at:
 12727 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  sign            1    wreg     unsigned char 
 12730 ;;  val             4    0[COMRAM] long 
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;  sign            1    8[COMRAM] unsigned char 
 12733 ;;  arg             4   10[COMRAM] unsigned long 
 12734 ;;  exp             1    9[COMRAM] unsigned char 
 12735 ;; Return value:  Size  Location     Type
 12736 ;;                  4    0[COMRAM] unsigned char 
 12737 ;; Registers used:
 12738 ;;		wreg, status,2, status,0
 12739 ;; Tracked objects:
 12740 ;;		On entry : 0/0
 12741 ;;		On exit  : 0/0
 12742 ;;		Unchanged: 0/0
 12743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12744 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12745 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12746 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12747 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12748 ;;Total ram usage:       14 bytes
 12749 ;; Hardware stack levels used: 1
 12750 ;; Hardware stack levels required when called: 1
 12751 ;; This function calls:
 12752 ;;		Nothing
 12753 ;; This function is called by:
 12754 ;;		_detect_color
 12755 ;;		_amb_light_measure
 12756 ;;		_detect_wall
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           	psect	text58
 12761  0040B4                     __ptext58:
 12762                           	callstack 0
 12763  0040B4                     ___xxtofl:
 12764                           	callstack 27
 12765                           
 12766                           ; BSR set to: 14
 12767                           ;incstack = 0
 12768                           ;___xxtofl@sign stored from wreg
 12769  0040B4  6E09               	movwf	___xxtofl@sign^0,c
 12770  0040B6  5009               	movf	___xxtofl@sign^0,w,c
 12771  0040B8  B4D8               	btfsc	status,2,c
 12772  0040BA  EF61  F020         	goto	u5091
 12773  0040BE  EF63  F020         	goto	u5090
 12774  0040C2                     u5091:
 12775  0040C2  EF85  F020         	goto	l1279
 12776  0040C6                     u5090:
 12777  0040C6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12778  0040C8  EF6A  F020         	goto	u5100
 12779  0040CC  EF68  F020         	goto	u5101
 12780  0040D0                     u5101:
 12781  0040D0  EF85  F020         	goto	l1279
 12782  0040D4                     u5100:
 12783  0040D4  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12784  0040D8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12785  0040DC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12786  0040E0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12787  0040E4  1E05               	comf	??___xxtofl^0,f,c
 12788  0040E6  1E06               	comf	(??___xxtofl+1)^0,f,c
 12789  0040E8  1E07               	comf	(??___xxtofl+2)^0,f,c
 12790  0040EA  1E08               	comf	(??___xxtofl+3)^0,f,c
 12791  0040EC  2A05               	incf	??___xxtofl^0,f,c
 12792  0040EE  0E00               	movlw	0
 12793  0040F0  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12794  0040F2  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12795  0040F4  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12796  0040F6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12797  0040FA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12798  0040FE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12799  004102  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12800  004106  EF8D  F020         	goto	l4666
 12801  00410A                     l1279:
 12802  00410A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12803  00410E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12804  004112  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12805  004116  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12806  00411A                     l4666:
 12807  00411A  5001               	movf	___xxtofl@val^0,w,c
 12808  00411C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12809  00411E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12810  004120  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12811  004122  A4D8               	btfss	status,2,c
 12812  004124  EF96  F020         	goto	u5111
 12813  004128  EF98  F020         	goto	u5110
 12814  00412C                     u5111:
 12815  00412C  EFA2  F020         	goto	l4672
 12816  004130                     u5110:
 12817  004130  0E00               	movlw	0
 12818  004132  6E01               	movwf	?___xxtofl^0,c
 12819  004134  0E00               	movlw	0
 12820  004136  6E02               	movwf	(?___xxtofl+1)^0,c
 12821  004138  0E00               	movlw	0
 12822  00413A  6E03               	movwf	(?___xxtofl+2)^0,c
 12823  00413C  0E00               	movlw	0
 12824  00413E  6E04               	movwf	(?___xxtofl+3)^0,c
 12825  004140  EF33  F021         	goto	l1282
 12826  004144                     l4672:
 12827  004144  0E96               	movlw	150
 12828  004146  6E0A               	movwf	___xxtofl@exp^0,c
 12829  004148  EFAC  F020         	goto	l4676
 12830  00414C                     l4674:
 12831  00414C  2A0A               	incf	___xxtofl@exp^0,f,c
 12832  00414E  90D8               	bcf	status,0,c
 12833  004150  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12834  004152  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12835  004154  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12836  004156  320B               	rrcf	___xxtofl@arg^0,f,c
 12837  004158                     l4676:
 12838  004158  0E00               	movlw	0
 12839  00415A  140B               	andwf	___xxtofl@arg^0,w,c
 12840  00415C  6E05               	movwf	??___xxtofl^0,c
 12841  00415E  0E00               	movlw	0
 12842  004160  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12843  004162  6E06               	movwf	(??___xxtofl+1)^0,c
 12844  004164  0E00               	movlw	0
 12845  004166  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12846  004168  6E07               	movwf	(??___xxtofl+2)^0,c
 12847  00416A  0EFE               	movlw	254
 12848  00416C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12849  00416E  6E08               	movwf	(??___xxtofl+3)^0,c
 12850  004170  5005               	movf	??___xxtofl^0,w,c
 12851  004172  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12852  004174  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12853  004176  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12854  004178  A4D8               	btfss	status,2,c
 12855  00417A  EFC1  F020         	goto	u5121
 12856  00417E  EFC3  F020         	goto	u5120
 12857  004182                     u5121:
 12858  004182  EFA6  F020         	goto	l4674
 12859  004186                     u5120:
 12860  004186  EFD1  F020         	goto	l1286
 12861  00418A                     l4678:
 12862  00418A  2A0A               	incf	___xxtofl@exp^0,f,c
 12863  00418C  0E01               	movlw	1
 12864  00418E  260B               	addwf	___xxtofl@arg^0,f,c
 12865  004190  0E00               	movlw	0
 12866  004192  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12867  004194  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12868  004196  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12869  004198  90D8               	bcf	status,0,c
 12870  00419A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12871  00419C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12872  00419E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12873  0041A0  320B               	rrcf	___xxtofl@arg^0,f,c
 12874  0041A2                     l1286:
 12875  0041A2  0E00               	movlw	0
 12876  0041A4  140B               	andwf	___xxtofl@arg^0,w,c
 12877  0041A6  6E05               	movwf	??___xxtofl^0,c
 12878  0041A8  0E00               	movlw	0
 12879  0041AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12880  0041AC  6E06               	movwf	(??___xxtofl+1)^0,c
 12881  0041AE  0E00               	movlw	0
 12882  0041B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12883  0041B2  6E07               	movwf	(??___xxtofl+2)^0,c
 12884  0041B4  0EFF               	movlw	255
 12885  0041B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12886  0041B8  6E08               	movwf	(??___xxtofl+3)^0,c
 12887  0041BA  5005               	movf	??___xxtofl^0,w,c
 12888  0041BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12889  0041BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12890  0041C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12891  0041C2  A4D8               	btfss	status,2,c
 12892  0041C4  EFE6  F020         	goto	u5131
 12893  0041C8  EFE8  F020         	goto	u5130
 12894  0041CC                     u5131:
 12895  0041CC  EFC5  F020         	goto	l4678
 12896  0041D0                     u5130:
 12897  0041D0  EFF0  F020         	goto	l4686
 12898  0041D4                     l4684:
 12899  0041D4  060A               	decf	___xxtofl@exp^0,f,c
 12900  0041D6  90D8               	bcf	status,0,c
 12901  0041D8  360B               	rlcf	___xxtofl@arg^0,f,c
 12902  0041DA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12903  0041DC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12904  0041DE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12905  0041E0                     l4686:
 12906  0041E0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12907  0041E2  EFF5  F020         	goto	u5141
 12908  0041E6  EFF7  F020         	goto	u5140
 12909  0041EA                     u5141:
 12910  0041EA  EFFF  F020         	goto	l1293
 12911  0041EE                     u5140:
 12912  0041EE  0E02               	movlw	2
 12913  0041F0  600A               	cpfslt	___xxtofl@exp^0,c
 12914  0041F2  EFFD  F020         	goto	u5151
 12915  0041F6  EFFF  F020         	goto	u5150
 12916  0041FA                     u5151:
 12917  0041FA  EFEA  F020         	goto	l4684
 12918  0041FE                     u5150:
 12919  0041FE                     l1293:
 12920  0041FE  B00A               	btfsc	___xxtofl@exp^0,0,c
 12921  004200  EF04  F021         	goto	u5161
 12922  004204  EF06  F021         	goto	u5160
 12923  004208                     u5161:
 12924  004208  EF07  F021         	goto	l4692
 12925  00420C                     u5160:
 12926  00420C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12927  00420E                     l4692:
 12928  00420E  90D8               	bcf	status,0,c
 12929  004210  320A               	rrcf	___xxtofl@exp^0,f,c
 12930  004212  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12931  004216  6A06               	clrf	(??___xxtofl+1)^0,c
 12932  004218  6A07               	clrf	(??___xxtofl+2)^0,c
 12933  00421A  6A08               	clrf	(??___xxtofl+3)^0,c
 12934  00421C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12935  004220  6A07               	clrf	(??___xxtofl+2)^0,c
 12936  004222  6A06               	clrf	(??___xxtofl+1)^0,c
 12937  004224  6A05               	clrf	??___xxtofl^0,c
 12938  004226  5005               	movf	??___xxtofl^0,w,c
 12939  004228  120B               	iorwf	___xxtofl@arg^0,f,c
 12940  00422A  5006               	movf	(??___xxtofl+1)^0,w,c
 12941  00422C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12942  00422E  5007               	movf	(??___xxtofl+2)^0,w,c
 12943  004230  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12944  004232  5008               	movf	(??___xxtofl+3)^0,w,c
 12945  004234  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12946  004236  5009               	movf	___xxtofl@sign^0,w,c
 12947  004238  B4D8               	btfsc	status,2,c
 12948  00423A  EF21  F021         	goto	u5171
 12949  00423E  EF23  F021         	goto	u5170
 12950  004242                     u5171:
 12951  004242  EF2B  F021         	goto	l4702
 12952  004246                     u5170:
 12953  004246  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12954  004248  EF2A  F021         	goto	u5180
 12955  00424C  EF28  F021         	goto	u5181
 12956  004250                     u5181:
 12957  004250  EF2B  F021         	goto	l4702
 12958  004254                     u5180:
 12959  004254  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12960  004256                     l4702:
 12961  004256  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12962  00425A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12963  00425E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12964  004262  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12965  004266                     l1282:
 12966  004266  0012               	return		;funcret
 12967  004268                     __end_of___xxtofl:
 12968                           	callstack 0
 12969                           
 12970 ;; *************** function ___fldiv *****************
 12971 ;; Defined at:
 12972 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12973 ;; Parameters:    Size  Location     Type
 12974 ;;  b               4   14[COMRAM] unsigned char 
 12975 ;;  a               4   18[COMRAM] unsigned char 
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  grs             4   33[COMRAM] unsigned long 
 12978 ;;  rem             4   26[COMRAM] unsigned long 
 12979 ;;  new_exp         2   31[COMRAM] short 
 12980 ;;  aexp            1   38[COMRAM] unsigned char 
 12981 ;;  bexp            1   37[COMRAM] unsigned char 
 12982 ;;  sign            1   30[COMRAM] unsigned char 
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  4   14[COMRAM] unsigned char 
 12985 ;; Registers used:
 12986 ;;		wreg, status,2, status,0
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12992 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12993 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12995 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12996 ;;Total ram usage:       25 bytes
 12997 ;; Hardware stack levels used: 1
 12998 ;; Hardware stack levels required when called: 1
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_detect_color
 13003 ;;		_amb_light_measure
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text59
 13008  002D08                     __ptext59:
 13009                           	callstack 0
 13010  002D08                     ___fldiv:
 13011                           	callstack 27
 13012  002D08  5012               	movf	(___fldiv@b+3)^0,w,c
 13013  002D0A  0B80               	andlw	128
 13014  002D0C  6E1F               	movwf	___fldiv@sign^0,c
 13015  002D0E  5012               	movf	(___fldiv@b+3)^0,w,c
 13016  002D10  2412               	addwf	(___fldiv@b+3)^0,w,c
 13017  002D12  6E26               	movwf	___fldiv@bexp^0,c
 13018  002D14  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13019  002D16  EF8F  F016         	goto	u4861
 13020  002D1A  EF91  F016         	goto	u4860
 13021  002D1E                     u4861:
 13022  002D1E  EF92  F016         	goto	l4528
 13023  002D22                     u4860:
 13024  002D22  8026               	bsf	___fldiv@bexp^0,0,c
 13025  002D24                     l4528:
 13026  002D24  5026               	movf	___fldiv@bexp^0,w,c
 13027  002D26  B4D8               	btfsc	status,2,c
 13028  002D28  EF98  F016         	goto	u4871
 13029  002D2C  EF9A  F016         	goto	u4870
 13030  002D30                     u4871:
 13031  002D30  EFAF  F016         	goto	l4538
 13032  002D34                     u4870:
 13033  002D34  2826               	incf	___fldiv@bexp^0,w,c
 13034  002D36  A4D8               	btfss	status,2,c
 13035  002D38  EFA0  F016         	goto	u4881
 13036  002D3C  EFA2  F016         	goto	u4880
 13037  002D40                     u4881:
 13038  002D40  EFAA  F016         	goto	l4534
 13039  002D44                     u4880:
 13040  002D44  0E00               	movlw	0
 13041  002D46  6E0F               	movwf	___fldiv@b^0,c
 13042  002D48  0E00               	movlw	0
 13043  002D4A  6E10               	movwf	(___fldiv@b+1)^0,c
 13044  002D4C  0E00               	movlw	0
 13045  002D4E  6E11               	movwf	(___fldiv@b+2)^0,c
 13046  002D50  0E00               	movlw	0
 13047  002D52  6E12               	movwf	(___fldiv@b+3)^0,c
 13048  002D54                     l4534:
 13049  002D54  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13050  002D56  0E00               	movlw	0
 13051  002D58  6E12               	movwf	(___fldiv@b+3)^0,c
 13052  002D5A  EFB7  F016         	goto	l4540
 13053  002D5E                     l4538:
 13054  002D5E  0E00               	movlw	0
 13055  002D60  6E0F               	movwf	___fldiv@b^0,c
 13056  002D62  0E00               	movlw	0
 13057  002D64  6E10               	movwf	(___fldiv@b+1)^0,c
 13058  002D66  0E00               	movlw	0
 13059  002D68  6E11               	movwf	(___fldiv@b+2)^0,c
 13060  002D6A  0E00               	movlw	0
 13061  002D6C  6E12               	movwf	(___fldiv@b+3)^0,c
 13062  002D6E                     l4540:
 13063  002D6E  5016               	movf	(___fldiv@a+3)^0,w,c
 13064  002D70  0B80               	andlw	128
 13065  002D72  1A1F               	xorwf	___fldiv@sign^0,f,c
 13066  002D74  5016               	movf	(___fldiv@a+3)^0,w,c
 13067  002D76  2416               	addwf	(___fldiv@a+3)^0,w,c
 13068  002D78  6E27               	movwf	___fldiv@aexp^0,c
 13069  002D7A  AE15               	btfss	(___fldiv@a+2)^0,7,c
 13070  002D7C  EFC2  F016         	goto	u4891
 13071  002D80  EFC4  F016         	goto	u4890
 13072  002D84                     u4891:
 13073  002D84  EFC5  F016         	goto	l4548
 13074  002D88                     u4890:
 13075  002D88  8027               	bsf	___fldiv@aexp^0,0,c
 13076  002D8A                     l4548:
 13077  002D8A  5027               	movf	___fldiv@aexp^0,w,c
 13078  002D8C  B4D8               	btfsc	status,2,c
 13079  002D8E  EFCB  F016         	goto	u4901
 13080  002D92  EFCD  F016         	goto	u4900
 13081  002D96                     u4901:
 13082  002D96  EFE2  F016         	goto	l4558
 13083  002D9A                     u4900:
 13084  002D9A  2827               	incf	___fldiv@aexp^0,w,c
 13085  002D9C  A4D8               	btfss	status,2,c
 13086  002D9E  EFD3  F016         	goto	u4911
 13087  002DA2  EFD5  F016         	goto	u4910
 13088  002DA6                     u4911:
 13089  002DA6  EFDD  F016         	goto	l4554
 13090  002DAA                     u4910:
 13091  002DAA  0E00               	movlw	0
 13092  002DAC  6E13               	movwf	___fldiv@a^0,c
 13093  002DAE  0E00               	movlw	0
 13094  002DB0  6E14               	movwf	(___fldiv@a+1)^0,c
 13095  002DB2  0E00               	movlw	0
 13096  002DB4  6E15               	movwf	(___fldiv@a+2)^0,c
 13097  002DB6  0E00               	movlw	0
 13098  002DB8  6E16               	movwf	(___fldiv@a+3)^0,c
 13099  002DBA                     l4554:
 13100  002DBA  8E15               	bsf	(___fldiv@a+2)^0,7,c
 13101  002DBC  0E00               	movlw	0
 13102  002DBE  6E16               	movwf	(___fldiv@a+3)^0,c
 13103  002DC0  EFEA  F016         	goto	l4560
 13104  002DC4                     l4558:
 13105  002DC4  0E00               	movlw	0
 13106  002DC6  6E13               	movwf	___fldiv@a^0,c
 13107  002DC8  0E00               	movlw	0
 13108  002DCA  6E14               	movwf	(___fldiv@a+1)^0,c
 13109  002DCC  0E00               	movlw	0
 13110  002DCE  6E15               	movwf	(___fldiv@a+2)^0,c
 13111  002DD0  0E00               	movlw	0
 13112  002DD2  6E16               	movwf	(___fldiv@a+3)^0,c
 13113  002DD4                     l4560:
 13114  002DD4  5013               	movf	___fldiv@a^0,w,c
 13115  002DD6  1014               	iorwf	(___fldiv@a+1)^0,w,c
 13116  002DD8  1015               	iorwf	(___fldiv@a+2)^0,w,c
 13117  002DDA  1016               	iorwf	(___fldiv@a+3)^0,w,c
 13118  002DDC  A4D8               	btfss	status,2,c
 13119  002DDE  EFF3  F016         	goto	u4921
 13120  002DE2  EFF5  F016         	goto	u4920
 13121  002DE6                     u4921:
 13122  002DE6  EF0D  F017         	goto	l4572
 13123  002DEA                     u4920:
 13124  002DEA  0E00               	movlw	0
 13125  002DEC  6E0F               	movwf	___fldiv@b^0,c
 13126  002DEE  0E00               	movlw	0
 13127  002DF0  6E10               	movwf	(___fldiv@b+1)^0,c
 13128  002DF2  0E00               	movlw	0
 13129  002DF4  6E11               	movwf	(___fldiv@b+2)^0,c
 13130  002DF6  0E00               	movlw	0
 13131  002DF8  6E12               	movwf	(___fldiv@b+3)^0,c
 13132  002DFA  0E80               	movlw	128
 13133  002DFC  1211               	iorwf	(___fldiv@b+2)^0,f,c
 13134  002DFE  0E7F               	movlw	127
 13135  002E00  1212               	iorwf	(___fldiv@b+3)^0,f,c
 13136  002E02                     l4566:
 13137  002E02  501F               	movf	___fldiv@sign^0,w,c
 13138  002E04  1212               	iorwf	(___fldiv@b+3)^0,f,c
 13139  002E06  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13140  002E0A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13141  002E0E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13142  002E12  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13143  002E16  EF50  F018         	goto	l1206
 13144  002E1A                     l4572:
 13145  002E1A  5026               	movf	___fldiv@bexp^0,w,c
 13146  002E1C  A4D8               	btfss	status,2,c
 13147  002E1E  EF13  F017         	goto	u4931
 13148  002E22  EF15  F017         	goto	u4930
 13149  002E26                     u4931:
 13150  002E26  EF1F  F017         	goto	l4580
 13151  002E2A                     u4930:
 13152  002E2A  0E00               	movlw	0
 13153  002E2C  6E0F               	movwf	?___fldiv^0,c
 13154  002E2E  0E00               	movlw	0
 13155  002E30  6E10               	movwf	(?___fldiv+1)^0,c
 13156  002E32  0E00               	movlw	0
 13157  002E34  6E11               	movwf	(?___fldiv+2)^0,c
 13158  002E36  0E00               	movlw	0
 13159  002E38  6E12               	movwf	(?___fldiv+3)^0,c
 13160  002E3A  EF50  F018         	goto	l1206
 13161  002E3E                     l4580:
 13162  002E3E  5027               	movf	___fldiv@aexp^0,w,c
 13163  002E40  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13164  002E44  6A18               	clrf	(??___fldiv+1)^0,c
 13165  002E46  5E17               	subwf	??___fldiv^0,f,c
 13166  002E48  0E00               	movlw	0
 13167  002E4A  5A18               	subwfb	(??___fldiv+1)^0,f,c
 13168  002E4C  0E7F               	movlw	127
 13169  002E4E  2417               	addwf	??___fldiv^0,w,c
 13170  002E50  6E20               	movwf	___fldiv@new_exp^0,c
 13171  002E52  0E00               	movlw	0
 13172  002E54  2018               	addwfc	(??___fldiv+1)^0,w,c
 13173  002E56  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13174  002E58  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13175  002E5C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13176  002E60  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13177  002E64  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13178  002E68  0E00               	movlw	0
 13179  002E6A  6E0F               	movwf	___fldiv@b^0,c
 13180  002E6C  0E00               	movlw	0
 13181  002E6E  6E10               	movwf	(___fldiv@b+1)^0,c
 13182  002E70  0E00               	movlw	0
 13183  002E72  6E11               	movwf	(___fldiv@b+2)^0,c
 13184  002E74  0E00               	movlw	0
 13185  002E76  6E12               	movwf	(___fldiv@b+3)^0,c
 13186  002E78  0E00               	movlw	0
 13187  002E7A  6E22               	movwf	___fldiv@grs^0,c
 13188  002E7C  0E00               	movlw	0
 13189  002E7E  6E23               	movwf	(___fldiv@grs+1)^0,c
 13190  002E80  0E00               	movlw	0
 13191  002E82  6E24               	movwf	(___fldiv@grs+2)^0,c
 13192  002E84  0E00               	movlw	0
 13193  002E86  6E25               	movwf	(___fldiv@grs+3)^0,c
 13194  002E88  0E00               	movlw	0
 13195  002E8A  6E27               	movwf	___fldiv@aexp^0,c
 13196  002E8C  EF80  F017         	goto	l1208
 13197  002E90                     l4590:
 13198  002E90  5027               	movf	___fldiv@aexp^0,w,c
 13199  002E92  B4D8               	btfsc	status,2,c
 13200  002E94  EF4E  F017         	goto	u4941
 13201  002E98  EF50  F017         	goto	u4940
 13202  002E9C                     u4941:
 13203  002E9C  EF67  F017         	goto	l4598
 13204  002EA0                     u4940:
 13205  002EA0  90D8               	bcf	status,0,c
 13206  002EA2  361B               	rlcf	___fldiv@rem^0,f,c
 13207  002EA4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 13208  002EA6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 13209  002EA8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 13210  002EAA  90D8               	bcf	status,0,c
 13211  002EAC  360F               	rlcf	___fldiv@b^0,f,c
 13212  002EAE  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13213  002EB0  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13214  002EB2  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13215  002EB4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13216  002EB6  EF5F  F017         	goto	u4951
 13217  002EBA  EF61  F017         	goto	u4950
 13218  002EBE                     u4951:
 13219  002EBE  EF62  F017         	goto	l1211
 13220  002EC2                     u4950:
 13221  002EC2  800F               	bsf	___fldiv@b^0,0,c
 13222  002EC4                     l1211:
 13223  002EC4  90D8               	bcf	status,0,c
 13224  002EC6  3622               	rlcf	___fldiv@grs^0,f,c
 13225  002EC8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13226  002ECA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13227  002ECC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13228  002ECE                     l4598:
 13229  002ECE  5013               	movf	___fldiv@a^0,w,c
 13230  002ED0  5C1B               	subwf	___fldiv@rem^0,w,c
 13231  002ED2  5014               	movf	(___fldiv@a+1)^0,w,c
 13232  002ED4  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 13233  002ED6  5015               	movf	(___fldiv@a+2)^0,w,c
 13234  002ED8  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 13235  002EDA  5016               	movf	(___fldiv@a+3)^0,w,c
 13236  002EDC  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 13237  002EDE  A0D8               	btfss	status,0,c
 13238  002EE0  EF74  F017         	goto	u4961
 13239  002EE4  EF76  F017         	goto	u4960
 13240  002EE8                     u4961:
 13241  002EE8  EF7F  F017         	goto	l4604
 13242  002EEC                     u4960:
 13243  002EEC  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 13244  002EEE  5013               	movf	___fldiv@a^0,w,c
 13245  002EF0  5E1B               	subwf	___fldiv@rem^0,f,c
 13246  002EF2  5014               	movf	(___fldiv@a+1)^0,w,c
 13247  002EF4  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 13248  002EF6  5015               	movf	(___fldiv@a+2)^0,w,c
 13249  002EF8  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 13250  002EFA  5016               	movf	(___fldiv@a+3)^0,w,c
 13251  002EFC  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 13252  002EFE                     l4604:
 13253  002EFE  2A27               	incf	___fldiv@aexp^0,f,c
 13254  002F00                     l1208:
 13255  002F00  0E19               	movlw	25
 13256  002F02  6427               	cpfsgt	___fldiv@aexp^0,c
 13257  002F04  EF86  F017         	goto	u4971
 13258  002F08  EF88  F017         	goto	u4970
 13259  002F0C                     u4971:
 13260  002F0C  EF48  F017         	goto	l4590
 13261  002F10                     u4970:
 13262  002F10  501B               	movf	___fldiv@rem^0,w,c
 13263  002F12  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 13264  002F14  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 13265  002F16  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 13266  002F18  B4D8               	btfsc	status,2,c
 13267  002F1A  EF91  F017         	goto	u4981
 13268  002F1E  EF93  F017         	goto	u4980
 13269  002F22                     u4981:
 13270  002F22  EFAB  F017         	goto	l4616
 13271  002F26                     u4980:
 13272  002F26  8022               	bsf	___fldiv@grs^0,0,c
 13273  002F28  EFAB  F017         	goto	l4616
 13274  002F2C                     l4610:
 13275  002F2C  90D8               	bcf	status,0,c
 13276  002F2E  360F               	rlcf	___fldiv@b^0,f,c
 13277  002F30  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13278  002F32  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13279  002F34  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13280  002F36  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13281  002F38  EFA0  F017         	goto	u4991
 13282  002F3C  EFA2  F017         	goto	u4990
 13283  002F40                     u4991:
 13284  002F40  EFA3  F017         	goto	l1217
 13285  002F44                     u4990:
 13286  002F44  800F               	bsf	___fldiv@b^0,0,c
 13287  002F46                     l1217:
 13288  002F46  90D8               	bcf	status,0,c
 13289  002F48  3622               	rlcf	___fldiv@grs^0,f,c
 13290  002F4A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13291  002F4C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13292  002F4E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13293  002F50  0620               	decf	___fldiv@new_exp^0,f,c
 13294  002F52  A0D8               	btfss	status,0,c
 13295  002F54  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 13296  002F56                     l4616:
 13297  002F56  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13298  002F58  EFB0  F017         	goto	u5001
 13299  002F5C  EFB2  F017         	goto	u5000
 13300  002F60                     u5001:
 13301  002F60  EF96  F017         	goto	l4610
 13302  002F64                     u5000:
 13303  002F64  0E00               	movlw	0
 13304  002F66  6E27               	movwf	___fldiv@aexp^0,c
 13305  002F68  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13306  002F6A  EFB9  F017         	goto	u5011
 13307  002F6E  EFBB  F017         	goto	u5010
 13308  002F72                     u5011:
 13309  002F72  EFDF  F017         	goto	l1219
 13310  002F76                     u5010:
 13311  002F76  0EFF               	movlw	255
 13312  002F78  1422               	andwf	___fldiv@grs^0,w,c
 13313  002F7A  6E17               	movwf	??___fldiv^0,c
 13314  002F7C  0EFF               	movlw	255
 13315  002F7E  1423               	andwf	(___fldiv@grs+1)^0,w,c
 13316  002F80  6E18               	movwf	(??___fldiv+1)^0,c
 13317  002F82  0EFF               	movlw	255
 13318  002F84  1424               	andwf	(___fldiv@grs+2)^0,w,c
 13319  002F86  6E19               	movwf	(??___fldiv+2)^0,c
 13320  002F88  0E7F               	movlw	127
 13321  002F8A  1425               	andwf	(___fldiv@grs+3)^0,w,c
 13322  002F8C  6E1A               	movwf	(??___fldiv+3)^0,c
 13323  002F8E  5017               	movf	??___fldiv^0,w,c
 13324  002F90  1018               	iorwf	(??___fldiv+1)^0,w,c
 13325  002F92  1019               	iorwf	(??___fldiv+2)^0,w,c
 13326  002F94  101A               	iorwf	(??___fldiv+3)^0,w,c
 13327  002F96  B4D8               	btfsc	status,2,c
 13328  002F98  EFD0  F017         	goto	u5021
 13329  002F9C  EFD2  F017         	goto	u5020
 13330  002FA0                     u5021:
 13331  002FA0  EFD6  F017         	goto	l1220
 13332  002FA4                     u5020:
 13333  002FA4                     l4624:
 13334  002FA4  0E01               	movlw	1
 13335  002FA6  6E27               	movwf	___fldiv@aexp^0,c
 13336  002FA8  EFDF  F017         	goto	l1219
 13337  002FAC                     l1220:
 13338  002FAC  A00F               	btfss	___fldiv@b^0,0,c
 13339  002FAE  EFDB  F017         	goto	u5031
 13340  002FB2  EFDD  F017         	goto	u5030
 13341  002FB6                     u5031:
 13342  002FB6  EFDF  F017         	goto	l1219
 13343  002FBA                     u5030:
 13344  002FBA  EFD2  F017         	goto	l4624
 13345  002FBE                     l1219:
 13346  002FBE  5027               	movf	___fldiv@aexp^0,w,c
 13347  002FC0  B4D8               	btfsc	status,2,c
 13348  002FC2  EFE5  F017         	goto	u5041
 13349  002FC6  EFE7  F017         	goto	u5040
 13350  002FCA                     u5041:
 13351  002FCA  EF0B  F018         	goto	l4636
 13352  002FCE                     u5040:
 13353  002FCE  0E01               	movlw	1
 13354  002FD0  260F               	addwf	___fldiv@b^0,f,c
 13355  002FD2  0E00               	movlw	0
 13356  002FD4  2210               	addwfc	(___fldiv@b+1)^0,f,c
 13357  002FD6  2211               	addwfc	(___fldiv@b+2)^0,f,c
 13358  002FD8  2212               	addwfc	(___fldiv@b+3)^0,f,c
 13359  002FDA  A012               	btfss	(___fldiv@b+3)^0,0,c
 13360  002FDC  EFF2  F017         	goto	u5051
 13361  002FE0  EFF4  F017         	goto	u5050
 13362  002FE4                     u5051:
 13363  002FE4  EF0B  F018         	goto	l4636
 13364  002FE8                     u5050:
 13365  002FE8  C00F  F017         	movff	___fldiv@b,??___fldiv
 13366  002FEC  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13367  002FF0  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13368  002FF4  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13369  002FF8  341A               	rlcf	(??___fldiv+3)^0,w,c
 13370  002FFA  321A               	rrcf	(??___fldiv+3)^0,f,c
 13371  002FFC  3219               	rrcf	(??___fldiv+2)^0,f,c
 13372  002FFE  3218               	rrcf	(??___fldiv+1)^0,f,c
 13373  003000  3217               	rrcf	??___fldiv^0,f,c
 13374  003002  C017  F00F         	movff	??___fldiv,___fldiv@b
 13375  003006  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13376  00300A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13377  00300E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13378  003012  4A20               	infsnz	___fldiv@new_exp^0,f,c
 13379  003014  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 13380  003016                     l4636:
 13381  003016  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13382  003018  EF16  F018         	goto	u5061
 13383  00301C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13384  00301E  E108               	bnz	u5060
 13385  003020  2820               	incf	___fldiv@new_exp^0,w,c
 13386  003022  A0D8               	btfss	status,0,c
 13387  003024  EF16  F018         	goto	u5061
 13388  003028  EF18  F018         	goto	u5060
 13389  00302C                     u5061:
 13390  00302C  EF23  F018         	goto	l4640
 13391  003030                     u5060:
 13392  003030  0E00               	movlw	0
 13393  003032  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13394  003034  6820               	setf	___fldiv@new_exp^0,c
 13395  003036  0E00               	movlw	0
 13396  003038  6E0F               	movwf	___fldiv@b^0,c
 13397  00303A  0E00               	movlw	0
 13398  00303C  6E10               	movwf	(___fldiv@b+1)^0,c
 13399  00303E  0E00               	movlw	0
 13400  003040  6E11               	movwf	(___fldiv@b+2)^0,c
 13401  003042  0E00               	movlw	0
 13402  003044  6E12               	movwf	(___fldiv@b+3)^0,c
 13403  003046                     l4640:
 13404  003046  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13405  003048  EF30  F018         	goto	u5070
 13406  00304C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13407  00304E  E106               	bnz	u5071
 13408  003050  0420               	decf	___fldiv@new_exp^0,w,c
 13409  003052  B0D8               	btfsc	status,0,c
 13410  003054  EF2E  F018         	goto	u5071
 13411  003058  EF30  F018         	goto	u5070
 13412  00305C                     u5071:
 13413  00305C  EF3E  F018         	goto	l4644
 13414  003060                     u5070:
 13415  003060  0E00               	movlw	0
 13416  003062  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13417  003064  0E00               	movlw	0
 13418  003066  6E20               	movwf	___fldiv@new_exp^0,c
 13419  003068  0E00               	movlw	0
 13420  00306A  6E0F               	movwf	___fldiv@b^0,c
 13421  00306C  0E00               	movlw	0
 13422  00306E  6E10               	movwf	(___fldiv@b+1)^0,c
 13423  003070  0E00               	movlw	0
 13424  003072  6E11               	movwf	(___fldiv@b+2)^0,c
 13425  003074  0E00               	movlw	0
 13426  003076  6E12               	movwf	(___fldiv@b+3)^0,c
 13427  003078  0E00               	movlw	0
 13428  00307A  6E1F               	movwf	___fldiv@sign^0,c
 13429  00307C                     l4644:
 13430  00307C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13431  003080  A026               	btfss	___fldiv@bexp^0,0,c
 13432  003082  EF45  F018         	goto	u5081
 13433  003086  EF47  F018         	goto	u5080
 13434  00308A                     u5081:
 13435  00308A  EF4A  F018         	goto	l4650
 13436  00308E                     u5080:
 13437  00308E  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13438  003090  EF4B  F018         	goto	l4652
 13439  003094                     l4650:
 13440  003094  9E11               	bcf	(___fldiv@b+2)^0,7,c
 13441  003096                     l4652:
 13442  003096  90D8               	bcf	status,0,c
 13443  003098  3026               	rrcf	___fldiv@bexp^0,w,c
 13444  00309A  6E12               	movwf	(___fldiv@b+3)^0,c
 13445  00309C  EF01  F017         	goto	l4566
 13446  0030A0                     l1206:
 13447  0030A0  0012               	return		;funcret
 13448  0030A2                     __end_of___fldiv:
 13449                           	callstack 0
 13450                           
 13451 ;; *************** function _LED_C *****************
 13452 ;; Defined at:
 13453 ;;		line 193 in file "color.c"
 13454 ;; Parameters:    Size  Location     Type
 13455 ;;		None
 13456 ;; Auto vars:     Size  Location     Type
 13457 ;;		None
 13458 ;; Return value:  Size  Location     Type
 13459 ;;                  1    wreg      void 
 13460 ;; Registers used:
 13461 ;;		wreg
 13462 ;; Tracked objects:
 13463 ;;		On entry : 0/0
 13464 ;;		On exit  : 0/0
 13465 ;;		Unchanged: 0/0
 13466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13469 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13471 ;;Total ram usage:        2 bytes
 13472 ;; Hardware stack levels used: 1
 13473 ;; Hardware stack levels required when called: 1
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_calibrate_white
 13478 ;;		_amb_light_measure
 13479 ;;		_detect_wall
 13480 ;;		_color_data_collection
 13481 ;;		_test_function
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           	psect	text60
 13486  005F66                     __ptext60:
 13487                           	callstack 0
 13488  005F66                     _LED_C:
 13489                           	callstack 27
 13490  005F66                     
 13491                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13492  005F66  827F               	bsf	127,1,c	;volatile
 13493                           
 13494                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13495  005F68  8E7E               	bsf	126,7,c	;volatile
 13496                           
 13497                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13498  005F6A  8879               	bsf	121,4,c	;volatile
 13499  005F6C                     
 13500                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13501  005F6C  0E11               	movlw	17
 13502  005F6E  6E02               	movwf	(??_LED_C+1)^0,c
 13503  005F70  0E3C               	movlw	60
 13504  005F72  6E01               	movwf	??_LED_C^0,c
 13505  005F74  0ECB               	movlw	203
 13506  005F76                     u6527:
 13507  005F76  2EE8               	decfsz	wreg,f,c
 13508  005F78  D7FE               	bra	u6527
 13509  005F7A  2E01               	decfsz	??_LED_C^0,f,c
 13510  005F7C  D7FC               	bra	u6527
 13511  005F7E  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13512  005F80  D7FA               	bra	u6527
 13513  005F82  F000               	nop	
 13514  005F84  0012               	return		;funcret
 13515  005F86                     __end_of_LED_C:
 13516                           	callstack 0
 13517                           
 13518 ;; *************** function _pin_init *****************
 13519 ;; Defined at:
 13520 ;;		line 13 in file "color.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;		None
 13523 ;; Auto vars:     Size  Location     Type
 13524 ;;		None
 13525 ;; Return value:  Size  Location     Type
 13526 ;;                  1    wreg      void 
 13527 ;; Registers used:
 13528 ;;		None
 13529 ;; Tracked objects:
 13530 ;;		On entry : 0/0
 13531 ;;		On exit  : 0/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13538 ;;Total ram usage:        0 bytes
 13539 ;; Hardware stack levels used: 1
 13540 ;; Hardware stack levels required when called: 1
 13541 ;; This function calls:
 13542 ;;		Nothing
 13543 ;; This function is called by:
 13544 ;;		_main
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           	psect	text61
 13549  005DA8                     __ptext61:
 13550                           	callstack 0
 13551  005DA8                     _pin_init:
 13552                           	callstack 29
 13553  005DA8  8486               	bsf	134,2,c	;volatile
 13554                           
 13555                           ;color.c: 15:     ANSELFbits.ANSELF2=0;
 13556  005DAA  010E               	movlb	14	; () banked
 13557  005DAC  95B4               	bcf	180,2,b	;volatile
 13558                           
 13559                           ;color.c: 16:     TRISFbits.TRISF3=1;
 13560  005DAE  8686               	bsf	134,3,c	;volatile
 13561                           
 13562                           ;color.c: 17:     ANSELFbits.ANSELF3=0;
 13563  005DB0  97B4               	bcf	180,3,b	;volatile
 13564                           
 13565                           ;color.c: 19:     TRISGbits.TRISG1 = 0;
 13566  005DB2  9287               	bcf	135,1,c	;volatile
 13567                           
 13568                           ;color.c: 20:     TRISFbits.TRISF7 = 0;
 13569  005DB4  9E86               	bcf	134,7,c	;volatile
 13570                           
 13571                           ;color.c: 21:     TRISAbits.TRISA4 = 0;
 13572  005DB6  9881               	bcf	129,4,c	;volatile
 13573                           
 13574                           ;color.c: 23:     LATGbits.LATG1 = 1;
 13575  005DB8  827F               	bsf	127,1,c	;volatile
 13576                           
 13577                           ;color.c: 24:     LATFbits.LATF7 = 1;
 13578  005DBA  8E7E               	bsf	126,7,c	;volatile
 13579                           
 13580                           ;color.c: 25:     LATAbits.LATA4 = 1;
 13581  005DBC  8879               	bsf	121,4,c	;volatile
 13582                           
 13583                           ;color.c: 28:     TRISDbits.TRISD7 = 0;
 13584  005DBE  9E84               	bcf	132,7,c	;volatile
 13585                           
 13586                           ;color.c: 29:     LATDbits.LATD7 = 0;
 13587  005DC0  9E7C               	bcf	124,7,c	;volatile
 13588                           
 13589                           ;color.c: 30:     TRISHbits.TRISH3 = 0;
 13590  005DC2  9688               	bcf	136,3,c	;volatile
 13591                           
 13592                           ;color.c: 31:     LATHbits.LATH3 = 0;
 13593  005DC4  9680               	bcf	128,3,c	;volatile
 13594                           
 13595                           ;color.c: 34:     TRISHbits.TRISH1=0;
 13596  005DC6  9288               	bcf	136,1,c	;volatile
 13597                           
 13598                           ;color.c: 35:     TRISDbits.TRISD4=0;
 13599  005DC8  9884               	bcf	132,4,c	;volatile
 13600                           
 13601                           ;color.c: 36:     TRISDbits.TRISD3=0;
 13602  005DCA  9684               	bcf	132,3,c	;volatile
 13603                           
 13604                           ;color.c: 37:     TRISFbits.TRISF0=0;
 13605  005DCC  9086               	bcf	134,0,c	;volatile
 13606                           
 13607                           ;color.c: 38:     TRISHbits.TRISH0=0;
 13608  005DCE  9088               	bcf	136,0,c	;volatile
 13609                           
 13610                           ;color.c: 40:     LATHbits.LATH1 = 0;
 13611  005DD0  9280               	bcf	128,1,c	;volatile
 13612                           
 13613                           ;color.c: 41:     LATDbits.LATD4 = 0;
 13614  005DD2  987C               	bcf	124,4,c	;volatile
 13615                           
 13616                           ;color.c: 42:     LATDbits.LATD3 = 0;
 13617  005DD4  967C               	bcf	124,3,c	;volatile
 13618                           
 13619                           ;color.c: 43:     LATFbits.LATF0 = 0;
 13620  005DD6  907E               	bcf	126,0,c	;volatile
 13621                           
 13622                           ;color.c: 44:     LATHbits.LATH0 = 0;
 13623  005DD8  9080               	bcf	128,0,c	;volatile
 13624  005DDA                     
 13625                           ; BSR set to: 14
 13626  005DDA  0012               	return		;funcret
 13627  005DDC                     __end_of_pin_init:
 13628                           	callstack 0
 13629                           
 13630 ;; *************** function _initUSART4 *****************
 13631 ;; Defined at:
 13632 ;;		line 4 in file "serial.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;		None
 13635 ;; Auto vars:     Size  Location     Type
 13636 ;;		None
 13637 ;; Return value:  Size  Location     Type
 13638 ;;                  1    wreg      void 
 13639 ;; Registers used:
 13640 ;;		wreg, status,2
 13641 ;; Tracked objects:
 13642 ;;		On entry : 0/0
 13643 ;;		On exit  : 0/0
 13644 ;;		Unchanged: 0/0
 13645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13650 ;;Total ram usage:        0 bytes
 13651 ;; Hardware stack levels used: 1
 13652 ;; Hardware stack levels required when called: 1
 13653 ;; This function calls:
 13654 ;;		Nothing
 13655 ;; This function is called by:
 13656 ;;		_main
 13657 ;; This function uses a non-reentrant model
 13658 ;;
 13659                           
 13660                           	psect	text62
 13661  005FA6                     __ptext62:
 13662                           	callstack 0
 13663  005FA6                     _initUSART4:
 13664                           	callstack 29
 13665  005FA6                     
 13666                           ;serial.c: 8:     RC0PPS = 0x12;
 13667  005FA6  0E12               	movlw	18
 13668  005FA8  010E               	movlb	14	; () banked
 13669  005FAA  6F62               	movwf	98,b	;volatile
 13670                           
 13671                           ;serial.c: 9:     RX4PPS = 0x11;
 13672  005FAC  0E11               	movlw	17
 13673  005FAE  6F15               	movwf	21,b	;volatile
 13674  005FB0                     
 13675                           ; BSR set to: 14
 13676                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13677  005FB0  97E9               	bcf	233,3,b	;volatile
 13678  005FB2                     
 13679                           ; BSR set to: 14
 13680                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13681  005FB2  95E8               	bcf	232,2,b	;volatile
 13682                           
 13683                           ;serial.c: 13:     SP4BRGL = 51;
 13684  005FB4  0E33               	movlw	51
 13685  005FB6  6FE5               	movwf	229,b	;volatile
 13686                           
 13687                           ;serial.c: 15:     SP4BRGH = 0;
 13688  005FB8  0E00               	movlw	0
 13689  005FBA  6FE6               	movwf	230,b	;volatile
 13690  005FBC                     
 13691                           ; BSR set to: 14
 13692                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13693  005FBC  89E7               	bsf	231,4,b	;volatile
 13694  005FBE                     
 13695                           ; BSR set to: 14
 13696                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13697  005FBE  8BE8               	bsf	232,5,b	;volatile
 13698  005FC0                     
 13699                           ; BSR set to: 14
 13700                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13701  005FC0  8FE7               	bsf	231,7,b	;volatile
 13702  005FC2                     
 13703                           ; BSR set to: 14
 13704  005FC2  0012               	return		;funcret
 13705  005FC4                     __end_of_initUSART4:
 13706                           	callstack 0
 13707                           
 13708 ;; *************** function _initDCmotors_parameter *****************
 13709 ;; Defined at:
 13710 ;;		line 37 in file "dc_motor.c"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13713 ;;		 -> main@motorL(9), 
 13714 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13715 ;;		 -> main@motorR(9), 
 13716 ;; Auto vars:     Size  Location     Type
 13717 ;;		None
 13718 ;; Return value:  Size  Location     Type
 13719 ;;                  1    wreg      void 
 13720 ;; Registers used:
 13721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13722 ;; Tracked objects:
 13723 ;;		On entry : 0/0
 13724 ;;		On exit  : 0/0
 13725 ;;		Unchanged: 0/0
 13726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13731 ;;Total ram usage:        4 bytes
 13732 ;; Hardware stack levels used: 1
 13733 ;; Hardware stack levels required when called: 1
 13734 ;; This function calls:
 13735 ;;		Nothing
 13736 ;; This function is called by:
 13737 ;;		_main
 13738 ;; This function uses a non-reentrant model
 13739 ;;
 13740                           
 13741                           	psect	text63
 13742  005246                     __ptext63:
 13743                           	callstack 0
 13744  005246                     _initDCmotors_parameter:
 13745                           	callstack 29
 13746  005246                     
 13747                           ;dc_motor.c: 39:     motorL->power = 0;
 13748  005246  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13749  00524A  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13750  00524E  0E00               	movlw	0
 13751  005250  6EDF               	movwf	indf2,c
 13752  005252                     
 13753                           ;dc_motor.c: 40:     motorL->direction = 1;
 13754  005252  EE20 F001          	lfsr	2,1
 13755  005256  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13756  005258  26D9               	addwf	fsr2l,f,c
 13757  00525A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13758  00525C  22DA               	addwfc	fsr2h,f,c
 13759  00525E  0E01               	movlw	1
 13760  005260  6EDF               	movwf	indf2,c
 13761  005262                     
 13762                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13763  005262  EE20 F002          	lfsr	2,2
 13764  005266  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13765  005268  26D9               	addwf	fsr2l,f,c
 13766  00526A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13767  00526C  22DA               	addwfc	fsr2h,f,c
 13768  00526E  0EA3               	movlw	163
 13769  005270  6EDE               	movwf	postinc2,c
 13770  005272  0E0F               	movlw	15
 13771  005274  6EDD               	movwf	postdec2,c
 13772  005276                     
 13773                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13774  005276  EE20 F004          	lfsr	2,4
 13775  00527A  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13776  00527C  26D9               	addwf	fsr2l,f,c
 13777  00527E  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13778  005280  22DA               	addwfc	fsr2h,f,c
 13779  005282  0E7D               	movlw	125
 13780  005284  6EDE               	movwf	postinc2,c
 13781  005286  0E0F               	movlw	15
 13782  005288  6EDD               	movwf	postdec2,c
 13783  00528A                     
 13784                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
 13785  00528A  EE20 F006          	lfsr	2,6
 13786  00528E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13787  005290  26D9               	addwf	fsr2l,f,c
 13788  005292  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13789  005294  22DA               	addwfc	fsr2h,f,c
 13790  005296  0E04               	movlw	4
 13791  005298  6EDF               	movwf	indf2,c
 13792  00529A                     
 13793                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
 13794  00529A  EE20 F007          	lfsr	2,7
 13795  00529E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13796  0052A0  26D9               	addwf	fsr2l,f,c
 13797  0052A2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13798  0052A4  22DA               	addwfc	fsr2h,f,c
 13799  0052A6  0EC7               	movlw	199
 13800  0052A8  6EDE               	movwf	postinc2,c
 13801  0052AA  0E00               	movlw	0
 13802  0052AC  6EDD               	movwf	postdec2,c
 13803  0052AE                     
 13804                           ;dc_motor.c: 47:     motorR->power = 0;
 13805  0052AE  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13806  0052B2  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13807  0052B6  0E00               	movlw	0
 13808  0052B8  6EDF               	movwf	indf2,c
 13809                           
 13810                           ;dc_motor.c: 48:     motorR->direction = 1;
 13811  0052BA  EE20 F001          	lfsr	2,1
 13812  0052BE  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13813  0052C0  26D9               	addwf	fsr2l,f,c
 13814  0052C2  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13815  0052C4  22DA               	addwfc	fsr2h,f,c
 13816  0052C6  0E01               	movlw	1
 13817  0052C8  6EDF               	movwf	indf2,c
 13818                           
 13819                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13820  0052CA  EE20 F002          	lfsr	2,2
 13821  0052CE  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13822  0052D0  26D9               	addwf	fsr2l,f,c
 13823  0052D2  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13824  0052D4  22DA               	addwfc	fsr2h,f,c
 13825  0052D6  0EA0               	movlw	160
 13826  0052D8  6EDE               	movwf	postinc2,c
 13827  0052DA  0E0F               	movlw	15
 13828  0052DC  6EDD               	movwf	postdec2,c
 13829                           
 13830                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13831  0052DE  EE20 F004          	lfsr	2,4
 13832  0052E2  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13833  0052E4  26D9               	addwf	fsr2l,f,c
 13834  0052E6  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13835  0052E8  22DA               	addwfc	fsr2h,f,c
 13836  0052EA  0E7F               	movlw	127
 13837  0052EC  6EDE               	movwf	postinc2,c
 13838  0052EE  0E0F               	movlw	15
 13839  0052F0  6EDD               	movwf	postdec2,c
 13840                           
 13841                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
 13842  0052F2  EE20 F006          	lfsr	2,6
 13843  0052F6  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13844  0052F8  26D9               	addwf	fsr2l,f,c
 13845  0052FA  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13846  0052FC  22DA               	addwfc	fsr2h,f,c
 13847  0052FE  0E06               	movlw	6
 13848  005300  6EDF               	movwf	indf2,c
 13849                           
 13850                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
 13851  005302  EE20 F007          	lfsr	2,7
 13852  005306  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13853  005308  26D9               	addwf	fsr2l,f,c
 13854  00530A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13855  00530C  22DA               	addwfc	fsr2h,f,c
 13856  00530E  0EC7               	movlw	199
 13857  005310  6EDE               	movwf	postinc2,c
 13858  005312  0E00               	movlw	0
 13859  005314  6EDD               	movwf	postdec2,c
 13860  005316  0012               	return		;funcret
 13861  005318                     __end_of_initDCmotors_parameter:
 13862                           	callstack 0
 13863                           
 13864 ;; *************** function _initDCmotorsPWM *****************
 13865 ;; Defined at:
 13866 ;;		line 7 in file "dc_motor.c"
 13867 ;; Parameters:    Size  Location     Type
 13868 ;;  PWMperiod       2    0[COMRAM] int 
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;		None
 13871 ;; Return value:  Size  Location     Type
 13872 ;;                  1    wreg      void 
 13873 ;; Registers used:
 13874 ;;		wreg, status,2
 13875 ;; Tracked objects:
 13876 ;;		On entry : 0/0
 13877 ;;		On exit  : 0/0
 13878 ;;		Unchanged: 0/0
 13879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13884 ;;Total ram usage:        2 bytes
 13885 ;; Hardware stack levels used: 1
 13886 ;; Hardware stack levels required when called: 1
 13887 ;; This function calls:
 13888 ;;		Nothing
 13889 ;; This function is called by:
 13890 ;;		_main
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           	psect	text64
 13895  005C0E                     __ptext64:
 13896                           	callstack 0
 13897  005C0E                     _initDCmotorsPWM:
 13898                           	callstack 29
 13899  005C0E                     
 13900                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
 13901  005C0E  9485               	bcf	133,2,c	;volatile
 13902                           
 13903                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
 13904  005C10  9E83               	bcf	131,7,c	;volatile
 13905                           
 13906                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
 13907  005C12  9C87               	bcf	135,6,c	;volatile
 13908                           
 13909                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
 13910  005C14  9885               	bcf	133,4,c	;volatile
 13911                           
 13912                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
 13913  005C16  947D               	bcf	125,2,c	;volatile
 13914                           
 13915                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
 13916  005C18  9E7B               	bcf	123,7,c	;volatile
 13917                           
 13918                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
 13919  005C1A  9C7F               	bcf	127,6,c	;volatile
 13920                           
 13921                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
 13922  005C1C  987D               	bcf	125,4,c	;volatile
 13923  005C1E                     
 13924                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
 13925  005C1E  50BD               	movf	189,w,c	;volatile
 13926  005C20  0B8F               	andlw	-113
 13927  005C22  0930               	iorlw	48
 13928  005C24  6EBD               	movwf	189,c	;volatile
 13929                           
 13930                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
 13931  005C26  0EE0               	movlw	-32
 13932  005C28  16BE               	andwf	190,f,c	;volatile
 13933                           
 13934                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
 13935  005C2A  50BF               	movf	191,w,c	;volatile
 13936  005C2C  0BF0               	andlw	-16
 13937  005C2E  0901               	iorlw	1
 13938  005C30  6EBF               	movwf	191,c	;volatile
 13939                           
 13940                           ;dc_motor.c: 25:     T2PR=200-1;
 13941  005C32  0EC7               	movlw	199
 13942  005C34  6EBC               	movwf	188,c	;volatile
 13943  005C36                     
 13944                           ;dc_motor.c: 26:     T2CONbits.ON=1;
 13945  005C36  8EBD               	bsf	189,7,c	;volatile
 13946                           
 13947                           ;dc_motor.c: 28:     RE2PPS=0x0A;
 13948  005C38  0E0A               	movlw	10
 13949  005C3A  010E               	movlb	14	; () banked
 13950  005C3C  6F74               	movwf	116,b	;volatile
 13951                           
 13952                           ;dc_motor.c: 29:     RC7PPS=0x0B;
 13953  005C3E  0E0B               	movlw	11
 13954  005C40  6F69               	movwf	105,b	;volatile
 13955                           
 13956                           ;dc_motor.c: 31:     PWM6DCH=0;
 13957  005C42  0E00               	movlw	0
 13958  005C44  6EA3               	movwf	163,c	;volatile
 13959                           
 13960                           ;dc_motor.c: 32:     PWM7DCH=0;
 13961  005C46  0E00               	movlw	0
 13962  005C48  6EA0               	movwf	160,c	;volatile
 13963  005C4A                     
 13964                           ; BSR set to: 14
 13965                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
 13966  005C4A  8EA4               	bsf	164,7,c	;volatile
 13967  005C4C                     
 13968                           ; BSR set to: 14
 13969                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
 13970  005C4C  8EA1               	bsf	161,7,c	;volatile
 13971  005C4E                     
 13972                           ; BSR set to: 14
 13973  005C4E  0012               	return		;funcret
 13974  005C50                     __end_of_initDCmotorsPWM:
 13975                           	callstack 0
 13976                           
 13977 ;; *************** function _color_click_init *****************
 13978 ;; Defined at:
 13979 ;;		line 87 in file "color.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;		None
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;		None
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      void 
 13986 ;; Registers used:
 13987 ;;		wreg, status,2, status,0, cstack
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13997 ;;Total ram usage:        1 bytes
 13998 ;; Hardware stack levels used: 1
 13999 ;; Hardware stack levels required when called: 4
 14000 ;; This function calls:
 14001 ;;		_I2C_2_Master_Init
 14002 ;;		_color_writetoaddr
 14003 ;; This function is called by:
 14004 ;;		_main
 14005 ;; This function uses a non-reentrant model
 14006 ;;
 14007                           
 14008                           	psect	text65
 14009  005DDC                     __ptext65:
 14010                           	callstack 0
 14011  005DDC                     _color_click_init:
 14012                           	callstack 26
 14013  005DDC                     
 14014                           ;color.c: 90:     I2C_2_Master_Init();
 14015  005DDC  EC37  F02F         	call	_I2C_2_Master_Init	;wreg free
 14016  005DE0                     
 14017                           ;color.c: 93:  color_writetoaddr(0x00, 0x01);
 14018  005DE0  0E01               	movlw	1
 14019  005DE2  6E03               	movwf	color_writetoaddr@value^0,c
 14020  005DE4  0E00               	movlw	0
 14021  005DE6  ECC3  F02F         	call	_color_writetoaddr
 14022  005DEA                     
 14023                           ;color.c: 94:     _delay((unsigned long)((3)*(64000000/4000.0)));
 14024  005DEA  0E3F               	movlw	63
 14025  005DEC  6E05               	movwf	??_color_click_init^0,c
 14026  005DEE  0E55               	movlw	85
 14027  005DF0                     u6537:
 14028  005DF0  2EE8               	decfsz	wreg,f,c
 14029  005DF2  D7FE               	bra	u6537
 14030  005DF4  2E05               	decfsz	??_color_click_init^0,f,c
 14031  005DF6  D7FC               	bra	u6537
 14032  005DF8  F000               	nop	
 14033  005DFA                     
 14034                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 14035  005DFA  0E03               	movlw	3
 14036  005DFC  6E03               	movwf	color_writetoaddr@value^0,c
 14037  005DFE  0E00               	movlw	0
 14038  005E00  ECC3  F02F         	call	_color_writetoaddr
 14039  005E04                     
 14040                           ;color.c: 100:  color_writetoaddr(0x01, 0xD5);
 14041  005E04  0ED5               	movlw	213
 14042  005E06  6E03               	movwf	color_writetoaddr@value^0,c
 14043  005E08  0E01               	movlw	1
 14044  005E0A  ECC3  F02F         	call	_color_writetoaddr
 14045  005E0E  0012               	return		;funcret
 14046  005E10                     __end_of_color_click_init:
 14047                           	callstack 0
 14048                           
 14049 ;; *************** function _color_writetoaddr *****************
 14050 ;; Defined at:
 14051 ;;		line 103 in file "color.c"
 14052 ;; Parameters:    Size  Location     Type
 14053 ;;  address         1    wreg     unsigned char 
 14054 ;;  value           1    2[COMRAM] unsigned char 
 14055 ;; Auto vars:     Size  Location     Type
 14056 ;;  address         1    3[COMRAM] unsigned char 
 14057 ;; Return value:  Size  Location     Type
 14058 ;;                  1    wreg      void 
 14059 ;; Registers used:
 14060 ;;		wreg, status,2, status,0, cstack
 14061 ;; Tracked objects:
 14062 ;;		On entry : 0/0
 14063 ;;		On exit  : 0/0
 14064 ;;		Unchanged: 0/0
 14065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14066 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14070 ;;Total ram usage:        2 bytes
 14071 ;; Hardware stack levels used: 1
 14072 ;; Hardware stack levels required when called: 3
 14073 ;; This function calls:
 14074 ;;		_I2C_2_Master_Start
 14075 ;;		_I2C_2_Master_Stop
 14076 ;;		_I2C_2_Master_Write
 14077 ;; This function is called by:
 14078 ;;		_color_click_init
 14079 ;; This function uses a non-reentrant model
 14080 ;;
 14081                           
 14082                           	psect	text66
 14083  005F86                     __ptext66:
 14084                           	callstack 0
 14085  005F86                     _color_writetoaddr:
 14086                           	callstack 26
 14087                           
 14088                           ;incstack = 0
 14089                           ;color_writetoaddr@address stored from wreg
 14090  005F86  6E04               	movwf	color_writetoaddr@address^0,c
 14091  005F88                     
 14092                           ;color.c: 104:     I2C_2_Master_Start();
 14093  005F88  EC13  F030         	call	_I2C_2_Master_Start	;wreg free
 14094                           
 14095                           ;color.c: 105:     I2C_2_Master_Write(0x52 | 0x00);
 14096  005F8C  0E52               	movlw	82
 14097  005F8E  ECFD  F02F         	call	_I2C_2_Master_Write
 14098                           
 14099                           ;color.c: 106:     I2C_2_Master_Write(0x80 | address);
 14100  005F92  5004               	movf	color_writetoaddr@address^0,w,c
 14101  005F94  0980               	iorlw	128
 14102  005F96  ECFD  F02F         	call	_I2C_2_Master_Write
 14103                           
 14104                           ;color.c: 107:     I2C_2_Master_Write(value);
 14105  005F9A  5003               	movf	color_writetoaddr@value^0,w,c
 14106  005F9C  ECFD  F02F         	call	_I2C_2_Master_Write
 14107                           
 14108                           ;color.c: 108:     I2C_2_Master_Stop();
 14109  005FA0  EC0E  F030         	call	_I2C_2_Master_Stop	;wreg free
 14110  005FA4  0012               	return		;funcret
 14111  005FA6                     __end_of_color_writetoaddr:
 14112                           	callstack 0
 14113                           
 14114 ;; *************** function _I2C_2_Master_Write *****************
 14115 ;; Defined at:
 14116 ;;		line 45 in file "i2c.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;  data_byte       1    wreg     unsigned char 
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;  data_byte       1    1[COMRAM] unsigned char 
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      void 
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14134 ;;Total ram usage:        1 bytes
 14135 ;; Hardware stack levels used: 1
 14136 ;; Hardware stack levels required when called: 2
 14137 ;; This function calls:
 14138 ;;		_I2C_2_Master_Idle
 14139 ;; This function is called by:
 14140 ;;		_color_writetoaddr
 14141 ;;		_color_read_Red
 14142 ;;		_color_read_Blue
 14143 ;;		_color_read_Green
 14144 ;;		_color_read_Clear
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text67
 14149  005FFA                     __ptext67:
 14150                           	callstack 0
 14151  005FFA                     _I2C_2_Master_Write:
 14152                           	callstack 24
 14153                           
 14154                           ;incstack = 0
 14155                           ;I2C_2_Master_Write@data_byte stored from wreg
 14156  005FFA  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 14157  005FFC                     
 14158                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 14159  005FFC  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14160  006000                     
 14161                           ;i2c.c: 48:   SSP2BUF = data_byte;
 14162  006000  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14163  006004  0012               	return		;funcret
 14164  006006                     __end_of_I2C_2_Master_Write:
 14165                           	callstack 0
 14166                           
 14167 ;; *************** function _I2C_2_Master_Stop *****************
 14168 ;; Defined at:
 14169 ;;		line 39 in file "i2c.c"
 14170 ;; Parameters:    Size  Location     Type
 14171 ;;		None
 14172 ;; Auto vars:     Size  Location     Type
 14173 ;;		None
 14174 ;; Return value:  Size  Location     Type
 14175 ;;                  1    wreg      void 
 14176 ;; Registers used:
 14177 ;;		wreg, status,2, status,0, cstack
 14178 ;; Tracked objects:
 14179 ;;		On entry : 0/0
 14180 ;;		On exit  : 0/0
 14181 ;;		Unchanged: 0/0
 14182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14187 ;;Total ram usage:        0 bytes
 14188 ;; Hardware stack levels used: 1
 14189 ;; Hardware stack levels required when called: 2
 14190 ;; This function calls:
 14191 ;;		_I2C_2_Master_Idle
 14192 ;; This function is called by:
 14193 ;;		_color_writetoaddr
 14194 ;;		_color_read_Red
 14195 ;;		_color_read_Blue
 14196 ;;		_color_read_Green
 14197 ;;		_color_read_Clear
 14198 ;; This function uses a non-reentrant model
 14199 ;;
 14200                           
 14201                           	psect	text68
 14202  00601C                     __ptext68:
 14203                           	callstack 0
 14204  00601C                     _I2C_2_Master_Stop:
 14205                           	callstack 24
 14206  00601C                     
 14207                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14208  00601C  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14209  006020                     
 14210                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 14211  006020  010E               	movlb	14	; () banked
 14212  006022  85DA               	bsf	218,2,b	;volatile
 14213  006024                     
 14214                           ; BSR set to: 14
 14215  006024  0012               	return		;funcret
 14216  006026                     __end_of_I2C_2_Master_Stop:
 14217                           	callstack 0
 14218                           
 14219 ;; *************** function _I2C_2_Master_Start *****************
 14220 ;; Defined at:
 14221 ;;		line 27 in file "i2c.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;		None
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;		None
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1    wreg      void 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0, cstack
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14239 ;;Total ram usage:        0 bytes
 14240 ;; Hardware stack levels used: 1
 14241 ;; Hardware stack levels required when called: 2
 14242 ;; This function calls:
 14243 ;;		_I2C_2_Master_Idle
 14244 ;; This function is called by:
 14245 ;;		_color_writetoaddr
 14246 ;;		_color_read_Red
 14247 ;;		_color_read_Blue
 14248 ;;		_color_read_Green
 14249 ;;		_color_read_Clear
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           	psect	text69
 14254  006026                     __ptext69:
 14255                           	callstack 0
 14256  006026                     _I2C_2_Master_Start:
 14257                           	callstack 24
 14258  006026                     
 14259                           ;i2c.c: 29:   I2C_2_Master_Idle();
 14260  006026  EC4C  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14261  00602A                     
 14262                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14263  00602A  010E               	movlb	14	; () banked
 14264  00602C  81DA               	bsf	218,0,b	;volatile
 14265  00602E                     
 14266                           ; BSR set to: 14
 14267  00602E  0012               	return		;funcret
 14268  006030                     __end_of_I2C_2_Master_Start:
 14269                           	callstack 0
 14270                           
 14271 ;; *************** function _I2C_2_Master_Idle *****************
 14272 ;; Defined at:
 14273 ;;		line 22 in file "i2c.c"
 14274 ;; Parameters:    Size  Location     Type
 14275 ;;		None
 14276 ;; Auto vars:     Size  Location     Type
 14277 ;;		None
 14278 ;; Return value:  Size  Location     Type
 14279 ;;                  1    wreg      void 
 14280 ;; Registers used:
 14281 ;;		wreg, status,2, status,0
 14282 ;; Tracked objects:
 14283 ;;		On entry : 0/0
 14284 ;;		On exit  : 0/0
 14285 ;;		Unchanged: 0/0
 14286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14289 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14290 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14291 ;;Total ram usage:        1 bytes
 14292 ;; Hardware stack levels used: 1
 14293 ;; Hardware stack levels required when called: 1
 14294 ;; This function calls:
 14295 ;;		Nothing
 14296 ;; This function is called by:
 14297 ;;		_I2C_2_Master_Start
 14298 ;;		_I2C_2_Master_RepStart
 14299 ;;		_I2C_2_Master_Stop
 14300 ;;		_I2C_2_Master_Write
 14301 ;;		_I2C_2_Master_Read
 14302 ;; This function uses a non-reentrant model
 14303 ;;
 14304                           
 14305                           	psect	text70
 14306  005E98                     __ptext70:
 14307                           	callstack 0
 14308  005E98                     _I2C_2_Master_Idle:
 14309                           	callstack 24
 14310  005E98                     l179:
 14311  005E98  010E               	movlb	14	; () banked
 14312  005E9A  B5D8               	btfsc	216,2,b	;volatile
 14313  005E9C  EF52  F02F         	goto	u3411
 14314  005EA0  EF54  F02F         	goto	u3410
 14315  005EA4                     u3411:
 14316  005EA4  EF4C  F02F         	goto	l179
 14317  005EA8                     u3410:
 14318  005EA8                     
 14319                           ; BSR set to: 14
 14320  005EA8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14321  005EAC  0E1F               	movlw	31
 14322  005EAE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14323  005EB0  A4D8               	btfss	status,2,c
 14324  005EB2  EF5D  F02F         	goto	u3421
 14325  005EB6  EF5F  F02F         	goto	u3420
 14326  005EBA                     u3421:
 14327  005EBA  EF4C  F02F         	goto	l179
 14328  005EBE                     u3420:
 14329  005EBE                     
 14330                           ; BSR set to: 14
 14331  005EBE  0012               	return		;funcret
 14332  005EC0                     __end_of_I2C_2_Master_Idle:
 14333                           	callstack 0
 14334                           
 14335 ;; *************** function _I2C_2_Master_Init *****************
 14336 ;; Defined at:
 14337 ;;		line 4 in file "i2c.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;		None
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;		None
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1    wreg      void 
 14344 ;; Registers used:
 14345 ;;		wreg, status,2
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14355 ;;Total ram usage:        0 bytes
 14356 ;; Hardware stack levels used: 1
 14357 ;; Hardware stack levels required when called: 1
 14358 ;; This function calls:
 14359 ;;		Nothing
 14360 ;; This function is called by:
 14361 ;;		_color_click_init
 14362 ;; This function uses a non-reentrant model
 14363 ;;
 14364                           
 14365                           	psect	text71
 14366  005E6E                     __ptext71:
 14367                           	callstack 0
 14368  005E6E                     _I2C_2_Master_Init:
 14369                           	callstack 28
 14370  005E6E                     
 14371                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14372  005E6E  010E               	movlb	14	; () banked
 14373  005E70  51D9               	movf	217,w,b	;volatile
 14374  005E72  0BF0               	andlw	-16
 14375  005E74  0908               	iorlw	8
 14376  005E76  6FD9               	movwf	217,b	;volatile
 14377  005E78                     
 14378                           ; BSR set to: 14
 14379                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14380  005E78  8BD9               	bsf	217,5,b	;volatile
 14381                           
 14382                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14383  005E7A  0E9F               	movlw	159
 14384  005E7C  6FD6               	movwf	214,b	;volatile
 14385  005E7E                     
 14386                           ; BSR set to: 14
 14387                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14388  005E7E  8A84               	bsf	132,5,c	;volatile
 14389  005E80                     
 14390                           ; BSR set to: 14
 14391                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14392  005E80  8C84               	bsf	132,6,c	;volatile
 14393  005E82                     
 14394                           ; BSR set to: 14
 14395                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14396  005E82  9BA7               	bcf	167,5,b	;volatile
 14397  005E84                     
 14398                           ; BSR set to: 14
 14399                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14400  005E84  9DA7               	bcf	167,6,b	;volatile
 14401                           
 14402                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14403  005E86  0E1D               	movlw	29
 14404  005E88  6F1D               	movwf	29,b	;volatile
 14405                           
 14406                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14407  005E8A  0E1E               	movlw	30
 14408  005E8C  6F1C               	movwf	28,b	;volatile
 14409                           
 14410                           ;i2c.c: 18:   RD5PPS=0x1C;
 14411  005E8E  0E1C               	movlw	28
 14412  005E90  6F6F               	movwf	111,b	;volatile
 14413                           
 14414                           ;i2c.c: 19:   RD6PPS=0x1B;
 14415  005E92  0E1B               	movlw	27
 14416  005E94  6F70               	movwf	112,b	;volatile
 14417  005E96                     
 14418                           ; BSR set to: 14
 14419  005E96  0012               	return		;funcret
 14420  005E98                     __end_of_I2C_2_Master_Init:
 14421                           	callstack 0
 14422                           
 14423 ;; *************** function _Timer0_init *****************
 14424 ;; Defined at:
 14425 ;;		line 7 in file "timers.c"
 14426 ;; Parameters:    Size  Location     Type
 14427 ;;		None
 14428 ;; Auto vars:     Size  Location     Type
 14429 ;;		None
 14430 ;; Return value:  Size  Location     Type
 14431 ;;                  1    wreg      void 
 14432 ;; Registers used:
 14433 ;;		wreg, status,2
 14434 ;; Tracked objects:
 14435 ;;		On entry : 0/0
 14436 ;;		On exit  : 0/0
 14437 ;;		Unchanged: 0/0
 14438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14443 ;;Total ram usage:        0 bytes
 14444 ;; Hardware stack levels used: 1
 14445 ;; Hardware stack levels required when called: 1
 14446 ;; This function calls:
 14447 ;;		Nothing
 14448 ;; This function is called by:
 14449 ;;		_main
 14450 ;; This function uses a non-reentrant model
 14451 ;;
 14452                           
 14453                           	psect	text72
 14454  005FC4                     __ptext72:
 14455                           	callstack 0
 14456  005FC4                     _Timer0_init:
 14457                           	callstack 29
 14458  005FC4                     
 14459                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14460  005FC4  50D6               	movf	214,w,c	;volatile
 14461  005FC6  0B1F               	andlw	-225
 14462  005FC8  0940               	iorlw	64
 14463  005FCA  6ED6               	movwf	214,c	;volatile
 14464  005FCC                     
 14465                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14466  005FCC  88D6               	bsf	214,4,c	;volatile
 14467                           
 14468                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14469  005FCE  50D6               	movf	214,w,c	;volatile
 14470  005FD0  0BF0               	andlw	-16
 14471  005FD2  0905               	iorlw	5
 14472  005FD4  6ED6               	movwf	214,c	;volatile
 14473  005FD6                     
 14474                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14475  005FD6  88D5               	bsf	213,4,c	;volatile
 14476                           
 14477                           ;timers.c: 16:     TMR0H=0b00111100;
 14478  005FD8  0E3C               	movlw	60
 14479  005FDA  6ED4               	movwf	212,c	;volatile
 14480                           
 14481                           ;timers.c: 17:     TMR0L=0b10101111;
 14482  005FDC  0EAF               	movlw	175
 14483  005FDE  6ED3               	movwf	211,c	;volatile
 14484  005FE0  0012               	return		;funcret
 14485  005FE2                     __end_of_Timer0_init:
 14486                           	callstack 0
 14487                           
 14488 ;; *************** function _Interrupts_init *****************
 14489 ;; Defined at:
 14490 ;;		line 9 in file "interrupts.c"
 14491 ;; Parameters:    Size  Location     Type
 14492 ;;		None
 14493 ;; Auto vars:     Size  Location     Type
 14494 ;;		None
 14495 ;; Return value:  Size  Location     Type
 14496 ;;                  1    wreg      void 
 14497 ;; Registers used:
 14498 ;;		None
 14499 ;; Tracked objects:
 14500 ;;		On entry : 0/0
 14501 ;;		On exit  : 0/0
 14502 ;;		Unchanged: 0/0
 14503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14508 ;;Total ram usage:        0 bytes
 14509 ;; Hardware stack levels used: 1
 14510 ;; Hardware stack levels required when called: 1
 14511 ;; This function calls:
 14512 ;;		Nothing
 14513 ;; This function is called by:
 14514 ;;		_main
 14515 ;; This function uses a non-reentrant model
 14516 ;;
 14517                           
 14518                           	psect	text73
 14519  006006                     __ptext73:
 14520                           	callstack 0
 14521  006006                     _Interrupts_init:
 14522                           	callstack 29
 14523  006006  8EF2               	bsf	242,7,c	;volatile
 14524                           
 14525                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14526  006008  8AF2               	bsf	242,5,c	;volatile
 14527                           
 14528                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14529  00600A  8CF2               	bsf	242,6,c	;volatile
 14530                           
 14531                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14532  00600C  010E               	movlb	14	; () banked
 14533  00600E  8B29               	bsf	41,5,b	;volatile
 14534  006010                     
 14535                           ; BSR set to: 14
 14536  006010  0012               	return		;funcret
 14537  006012                     __end_of_Interrupts_init:
 14538                           	callstack 0
 14539                           
 14540 ;; *************** function _HighISR *****************
 14541 ;; Defined at:
 14542 ;;		line 21 in file "interrupts.c"
 14543 ;; Parameters:    Size  Location     Type
 14544 ;;		None
 14545 ;; Auto vars:     Size  Location     Type
 14546 ;;		None
 14547 ;; Return value:  Size  Location     Type
 14548 ;;                  1    wreg      void 
 14549 ;; Registers used:
 14550 ;;		wreg, status,2, status,0
 14551 ;; Tracked objects:
 14552 ;;		On entry : 0/0
 14553 ;;		On exit  : 0/0
 14554 ;;		Unchanged: 0/0
 14555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14560 ;;Total ram usage:        0 bytes
 14561 ;; Hardware stack levels used: 1
 14562 ;; This function calls:
 14563 ;;		Nothing
 14564 ;; This function is called by:
 14565 ;;		Interrupt level 2
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           
 14569                           	psect	intcode
 14570  000008                     __pintcode:
 14571                           	callstack 0
 14572  000008                     _HighISR:
 14573                           	callstack 19
 14574                           
 14575                           ; BSR set to: 14
 14576                           ;incstack = 0
 14577  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14578  00000A                     
 14579                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14580  00000A  010E               	movlb	14	; () banked
 14581  00000C  AB33               	btfss	51,5,b	;volatile
 14582  00000E  EF0B  F000         	goto	i2u589_41
 14583  000012  EF0D  F000         	goto	i2u589_40
 14584  000016                     i2u589_41:
 14585  000016  EF16  F000         	goto	i2l502
 14586  00001A                     i2u589_40:
 14587  00001A                     
 14588                           ; BSR set to: 14
 14589                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14590  00001A  0E3C               	movlw	60
 14591  00001C  6ED4               	movwf	212,c	;volatile
 14592                           
 14593                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14594  00001E  0EAF               	movlw	175
 14595  000020  6ED3               	movwf	211,c	;volatile
 14596  000022                     
 14597                           ; BSR set to: 14
 14598                           ;interrupts.c: 26:         centisecond ++;
 14599  000022  0101               	movlb	1	; () banked
 14600  000024  4B82               	infsnz	_centisecond& (0+255),f,b
 14601  000026  2B83               	incf	(_centisecond+1)& (0+255),f,b
 14602  000028                     
 14603                           ; BSR set to: 1
 14604                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14605  000028  010E               	movlb	14	; () banked
 14606  00002A  9B33               	bcf	51,5,b	;volatile
 14607  00002C                     i2l502:
 14608                           
 14609                           ; BSR set to: 14
 14610  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14611  00002E  0011               	retfie		f
 14612  000030                     __end_of_HighISR:
 14613                           	callstack 0
 14614                           
 14615                           	psect	rparam
 14616  0000                     
 14617                           	psect	temp
 14618  00005F                     btemp:
 14619                           	callstack 0
 14620  00005F                     	ds	1
 14621  0000                     int$flags	set	btemp
 14622  0000                     wtemp8	set	btemp+1
 14623  0000                     ttemp5	set	btemp+1
 14624  0000                     ttemp6	set	btemp+4
 14625  0000                     ttemp7	set	btemp+8
 14626                           
 14627                           	psect	idloc
 14628                           
 14629                           ;Config register IDLOC0 @ 0x200000
 14630                           ;	unspecified, using default values
 14631  200000                     	org	2097152
 14632  200000  0FFF               	dw	4095
 14633                           
 14634                           ;Config register IDLOC1 @ 0x200002
 14635                           ;	unspecified, using default values
 14636  200002                     	org	2097154
 14637  200002  0FFF               	dw	4095
 14638                           
 14639                           ;Config register IDLOC2 @ 0x200004
 14640                           ;	unspecified, using default values
 14641  200004                     	org	2097156
 14642  200004  0FFF               	dw	4095
 14643                           
 14644                           ;Config register IDLOC3 @ 0x200006
 14645                           ;	unspecified, using default values
 14646  200006                     	org	2097158
 14647  200006  0FFF               	dw	4095
 14648                           
 14649                           ;Config register IDLOC4 @ 0x200008
 14650                           ;	unspecified, using default values
 14651  200008                     	org	2097160
 14652  200008  0FFF               	dw	4095
 14653                           
 14654                           ;Config register IDLOC5 @ 0x20000A
 14655                           ;	unspecified, using default values
 14656  20000A                     	org	2097162
 14657  20000A  0FFF               	dw	4095
 14658                           
 14659                           ;Config register IDLOC6 @ 0x20000C
 14660                           ;	unspecified, using default values
 14661  20000C                     	org	2097164
 14662  20000C  0FFF               	dw	4095
 14663                           
 14664                           ;Config register IDLOC7 @ 0x20000E
 14665                           ;	unspecified, using default values
 14666  20000E                     	org	2097166
 14667  20000E  0FFF               	dw	4095
 14668                           
 14669                           	psect	config
 14670                           
 14671                           ;Config register CONFIG1L @ 0x300000
 14672                           ;	External Oscillator mode Selection bits
 14673                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14674                           ;	Power-up default value for COSC bits
 14675                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14676  300000                     	org	3145728
 14677  300000  AA                 	db	170
 14678                           
 14679                           ;Config register CONFIG1H @ 0x300001
 14680                           ;	unspecified, using default values
 14681                           ;	Clock Out Enable bit
 14682                           ;	CLKOUTEN = 0x1, unprogrammed default
 14683                           ;	Clock Switch Enable bit
 14684                           ;	CSWEN = 0x1, unprogrammed default
 14685                           ;	Fail-Safe Clock Monitor Enable bit
 14686                           ;	FCMEN = 0x1, unprogrammed default
 14687  300001                     	org	3145729
 14688  300001  FF                 	db	255
 14689                           
 14690                           ;Config register CONFIG2L @ 0x300002
 14691                           ;	unspecified, using default values
 14692                           ;	Master Clear Enable bit
 14693                           ;	MCLRE = 0x1, unprogrammed default
 14694                           ;	Power-up Timer Enable bit
 14695                           ;	PWRTE = 0x1, unprogrammed default
 14696                           ;	Low-power BOR enable bit
 14697                           ;	LPBOREN = 0x1, unprogrammed default
 14698                           ;	Brown-out Reset Enable bits
 14699                           ;	BOREN = 0x3, unprogrammed default
 14700  300002                     	org	3145730
 14701  300002  FF                 	db	255
 14702                           
 14703                           ;Config register CONFIG2H @ 0x300003
 14704                           ;	unspecified, using default values
 14705                           ;	Brown Out Reset Voltage selection bits
 14706                           ;	BORV = 0x3, unprogrammed default
 14707                           ;	ZCD Disable bit
 14708                           ;	ZCD = 0x1, unprogrammed default
 14709                           ;	PPSLOCK bit One-Way Set Enable bit
 14710                           ;	PPS1WAY = 0x1, unprogrammed default
 14711                           ;	Stack Full/Underflow Reset Enable bit
 14712                           ;	STVREN = 0x1, unprogrammed default
 14713                           ;	Debugger Enable bit
 14714                           ;	DEBUG = 0x1, unprogrammed default
 14715                           ;	Extended Instruction Set Enable bit
 14716                           ;	XINST = 0x1, unprogrammed default
 14717  300003                     	org	3145731
 14718  300003  FF                 	db	255
 14719                           
 14720                           ;Config register CONFIG3L @ 0x300004
 14721                           ;	WDT Period Select bits
 14722                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14723                           ;	WDT operating mode
 14724                           ;	WDTE = OFF, WDT Disabled
 14725  300004                     	org	3145732
 14726  300004  9F                 	db	159
 14727                           
 14728                           ;Config register CONFIG3H @ 0x300005
 14729                           ;	unspecified, using default values
 14730                           ;	WDT Window Select bits
 14731                           ;	WDTCWS = 0x7, unprogrammed default
 14732                           ;	WDT input clock selector
 14733                           ;	WDTCCS = 0x7, unprogrammed default
 14734  300005                     	org	3145733
 14735  300005  FF                 	db	255
 14736                           
 14737                           ;Config register CONFIG4L @ 0x300006
 14738                           ;	unspecified, using default values
 14739                           ;	Write Protection Block 0
 14740                           ;	WRT0 = 0x1, unprogrammed default
 14741                           ;	Write Protection Block 1
 14742                           ;	WRT1 = 0x1, unprogrammed default
 14743                           ;	Write Protection Block 2
 14744                           ;	WRT2 = 0x1, unprogrammed default
 14745                           ;	Write Protection Block 3
 14746                           ;	WRT3 = 0x1, unprogrammed default
 14747                           ;	Write Protection Block 3
 14748                           ;	WRT4 = 0x1, unprogrammed default
 14749                           ;	Write Protection Block 3
 14750                           ;	WRT5 = 0x1, unprogrammed default
 14751                           ;	Write Protection Block 3
 14752                           ;	WRT6 = 0x1, unprogrammed default
 14753                           ;	Write Protection Block 3
 14754                           ;	WRT7 = 0x1, unprogrammed default
 14755  300006                     	org	3145734
 14756  300006  FF                 	db	255
 14757                           
 14758                           ;Config register CONFIG4H @ 0x300007
 14759                           ;	unspecified, using default values
 14760                           ;	Configuration Register Write Protection bit
 14761                           ;	WRTC = 0x1, unprogrammed default
 14762                           ;	Boot Block Write Protection bit
 14763                           ;	WRTB = 0x1, unprogrammed default
 14764                           ;	Data EEPROM Write Protection bit
 14765                           ;	WRTD = 0x1, unprogrammed default
 14766                           ;	Scanner Enable bit
 14767                           ;	SCANE = 0x1, unprogrammed default
 14768                           ;	Low Voltage Programming Enable bit
 14769                           ;	LVP = 0x1, unprogrammed default
 14770  300007                     	org	3145735
 14771  300007  FF                 	db	255
 14772                           
 14773                           ;Config register CONFIG5L @ 0x300008
 14774                           ;	unspecified, using default values
 14775                           ;	UserNVM Program Memory Code Protection bit
 14776                           ;	CP = 0x1, unprogrammed default
 14777                           ;	DataNVM Memory Code Protection bit
 14778                           ;	CPD = 0x1, unprogrammed default
 14779  300008                     	org	3145736
 14780  300008  FF                 	db	255
 14781                           
 14782                           ;Config register CONFIG5H @ 0x300009
 14783                           ;	unspecified, using default values
 14784  300009                     	org	3145737
 14785  300009  FF                 	db	255
 14786                           
 14787                           ;Config register CONFIG6L @ 0x30000A
 14788                           ;	unspecified, using default values
 14789                           ;	Table Read Protection Block 0
 14790                           ;	EBTR0 = 0x1, unprogrammed default
 14791                           ;	Table Read Protection Block 1
 14792                           ;	EBTR1 = 0x1, unprogrammed default
 14793                           ;	Table Read Protection Block 2
 14794                           ;	EBTR2 = 0x1, unprogrammed default
 14795                           ;	Table Read Protection Block 3
 14796                           ;	EBTR3 = 0x1, unprogrammed default
 14797                           ;	Table Read Protection Block 4
 14798                           ;	EBTR4 = 0x1, unprogrammed default
 14799                           ;	Table Read Protection Block 5
 14800                           ;	EBTR5 = 0x1, unprogrammed default
 14801                           ;	Table Read Protection Block 6
 14802                           ;	EBTR6 = 0x1, unprogrammed default
 14803                           ;	Table Read Protection Block 7
 14804                           ;	EBTR7 = 0x1, unprogrammed default
 14805  30000A                     	org	3145738
 14806  30000A  FF                 	db	255
 14807                           
 14808                           ;Config register CONFIG6H @ 0x30000B
 14809                           ;	unspecified, using default values
 14810                           ;	Boot Block Table Read Protection bit
 14811                           ;	EBTRB = 0x1, unprogrammed default
 14812  30000B                     	org	3145739
 14813  30000B  FF                 	db	255
 14814                           tosu	equ	0xFFF
 14815                           tosh	equ	0xFFE
 14816                           tosl	equ	0xFFD
 14817                           stkptr	equ	0xFFC
 14818                           pclatu	equ	0xFFB
 14819                           pclath	equ	0xFFA
 14820                           pcl	equ	0xFF9
 14821                           tblptru	equ	0xFF8
 14822                           tblptrh	equ	0xFF7
 14823                           tblptrl	equ	0xFF6
 14824                           tablat	equ	0xFF5
 14825                           prodh	equ	0xFF4
 14826                           prodl	equ	0xFF3
 14827                           indf0	equ	0xFEF
 14828                           postinc0	equ	0xFEE
 14829                           postdec0	equ	0xFED
 14830                           preinc0	equ	0xFEC
 14831                           plusw0	equ	0xFEB
 14832                           fsr0h	equ	0xFEA
 14833                           fsr0l	equ	0xFE9
 14834                           wreg	equ	0xFE8
 14835                           indf1	equ	0xFE7
 14836                           postinc1	equ	0xFE6
 14837                           postdec1	equ	0xFE5
 14838                           preinc1	equ	0xFE4
 14839                           plusw1	equ	0xFE3
 14840                           fsr1h	equ	0xFE2
 14841                           fsr1l	equ	0xFE1
 14842                           bsr	equ	0xFE0
 14843                           indf2	equ	0xFDF
 14844                           postinc2	equ	0xFDE
 14845                           postdec2	equ	0xFDD
 14846                           preinc2	equ	0xFDC
 14847                           plusw2	equ	0xFDB
 14848                           fsr2h	equ	0xFDA
 14849                           fsr2l	equ	0xFD9
 14850                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    160     160
    BANK1           256     88     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    detect_wall@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    detect_wall@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[6]), 
		 -> STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[6]), 
		 -> STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[6]), 
		 -> STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2537$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2537$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S429DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S429DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _detect_color->___fltol
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _main->_verify_color
    _verify_color->_detect_color
    _test_function->_detect_color
    _detect_wall->_lroundf
    _detect_color->_sprintf
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _setup->_amb_light_measure
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_test_function

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  371867
                                             14 BANK1     74    74      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   35982
                                            158 BANK0      2     2      0
                                              0 BANK1      7     3      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             52 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             44 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  138151
                                            158 BANK0      2     2      0
                                              0 BANK1     14     6      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _detect_wall                                         19    13      6   19636
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   35696
                                             25 BANK0    133   129      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                  _sendStringSerial4
                            _sprintf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17200
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7583
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8029
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7064
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   41384
                                             24 BANK0     12     4      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             50 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             44 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              13     7      6   12033
                                             31 COMRAM    13     7      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19312
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13309
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11771
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3474
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     452
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2052
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2977
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _roundf (ARG)
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
     _toggle_light
   _detect_wall
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _detect_wall
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     58     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllhl      1      0       0      40        0.0%
BITBIGSFRlhhl        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FE      56        0.0%
DATA                 0      0     1FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 16 22:13:38 2022

                _color_read_Red 59C0                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 5A60                   _color_predict 5E40  
                            l60 390C                              l71 5E0E                              l80 5AAE  
                            l57 5DDA                              l74 5FA4                              l83 5A5E  
                            l68 391E                              l92 5F24                              l77 5A0E  
                            l86 5AFE                              l95 5F04                              l89 596C  
                            l98 5F84                    ___awdiv@sign 000C                _detect_wall$2948 0074  
           ___wmul@multiplicand 0003                _color_read_Clear 5AB0                _color_read_Green 5A10  
             ??_Interrupts_init 0001                             l101 5F64                             l110 5E6C  
                           l104 5F44                             l113 3B28                             l107 58AC  
                           l133 1CCA                             l141 583C                             l302 4CF4  
                           l136 5CC6                             l145 4F4A                             l137 5CC8  
                           l402 3BEC                             l244 5C4E                             l148 54A4  
                           l325 5FC2                             l149 54A6                             l182 5EBE  
                           l254 3EFE                             l262 57B2                             l334 5FE4  
                           l191 6024                             l247 5316                             l271 44CE  
                           l343 5E3E                             l176 5E96                             l513 5FE0  
                           l185 602E                             l337 5FF8                             l194 6004  
                           l450 3390                             l179 5E98                             l291 5630  
                           l283 45C6                             l188 601A                             l612 5158  
                           l197 5C0C                             l621 5244                             l613 51C2  
                           l438 5BCA                             l279 4596                             l624 5EE4  
                           l616 522C                             l560 4A6A                             l473 2CF8  
                           l618 51F8                             l562 4A9E                             l571 4B4A  
                           l467 2CC6                             l459 2CCA                             l564 4AAC  
                           l477 2D06                             l590 4E22                             l574 4BA0  
                           l558 4A5C                             l751 4A48                             l496 6010  
                           l568 4AEC                             l921 5052                             l738 48E4  
                           l587 475C                             l855 56F4                             l894 5156  
                           l889 5110                             l898 5D3A               verify_color@color 01AC  
              ?_calibrate_white 000C                             _abs 5C50                             _pad 54A8  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5F26                    ___fltol@exp1 0065  
                          l1211 2EC4                            ?_abs 0013                            l1220 2FAC  
                          l1300 5D02                            l1206 30A0                            l1208 2F00  
                          l1152 1EBA                            l1217 2F46                            l1161 218A  
                          l1153 1EA8                            l1242 25B4                            l1154 1E6E  
                          l1219 2FBE                            l1307 59BE                            l1245 2446  
                          l1238 2250                            l1406 5B88                            l1430 5DA6  
                          l1334 54EE                            l1255 2576                            l1247 24BE  
                          l1248 24AC                            l4000 575A                            l1169 1FD4  
                          l1417 2962                            l1409 6032                            l1337 5530  
                          l1345 3432                            l1282 4266                            l1178 20A4  
                          l1194 5B44                            l4002 576A                            l4010 5FF4  
                          l1179 2092                            l1339 556C                            l1347 343A  
                          l4100 2456                            l4020 21B8                            l4012 218C  
                          l4004 5782                            l1372 40B2                            l1293 41FE  
                          l1365 3672                            l1286 41A2                            l4102 2464  
                          l4030 21F4                            l4022 21C8                            l4014 2198  
                          l4006 579A                            l1279 410A                            l1383 5C86  
                          l4112 24CE                            l4120 2516                            l4104 2468  
                          l4040 222A                            l4032 21FA                            l4024 21D8  
                          l4016 21A6                            l4200 5A56                            l4008 5FE4  
                          l5000 2B7A                            l4130 258A                            l4122 2530  
                          l4114 24DA                            l4106 2476                            l4042 223A  
                          l4034 2208                            l4026 21DE                            l4018 21A8  
                          l1386 5C8E                            l1378 5906                            l4210 596E  
                          l5010 2C0E                            l1379 590E                            l4204 5AB0  
                          l4132 2598                            l4124 2544                            l4116 24E8  
                          l4108 24A4                            l4060 22BC                            l4052 2284  
                          l4044 2240                            l4036 220A                            l4028 21EE  
                          l4300 5618                            l3500 481A                            l4212 5980  
                          l5100 46A6                            l5012 2C32                            l5004 2BB2  
                          l4206 5AF6                            l4310 4FA2                            l4302 4F4C  
                          l4150 5082                            l4134 259A                            l4126 255E  
                          l4118 2512                            l4070 2306                            l4062 22D4  
                          l4054 2290                            l4046 2260                            l4038 221A  
                          l4142 5B00                            l4230 4418                            l5030 5180  
                          l4222 5E10                            l3510 488E                            l3502 482C  
                          l1398 53E0                            l4214 5988                            l5110 46F6  
                          l5102 46BE                            l5022 2CD0                            l5006 2BD6  
                          l5200 5FCC                            l4312 4FA4                            l4304 4F64  
                          l4160 50F0                            l4152 5092                            l4128 257A  
                          l4136 25A0                            l4080 235C                            l4072 2316  
                          l4064 22E0                            l4056 229A                            l4048 2270  
                          l4144 5B10                            l4400 3796                            l3600 5666  
                          l4240 4470                            l4232 4424                            l5032 518E  
                          l4224 5E14                            l3504 485A                            l3512 4894  
                          l3520 48E6                            l4216 5990                            l5120 471A  
                          l5104 46CA                            l5024 2CE4                            l5016 2C6A  
                          l5202 5FD6                            l4314 4FB4                            l4162 50FE  
                          l4154 50C0                            l4138 25A4                            l4090 2400  
                          l4082 2378                            l4074 2322                            l4066 22EC  
                          l4058 22B0                            l4170 5D04                            l4410 383E  
                          l4402 37BA                            l3610 5694                            l3602 566A  
                          l4250 44BA                            l4242 447C                            l4234 4444  
                          l5050 5208                            l5042 51D0                            l5034 5190  
                          l5210 4A58                            l4226 5E22                            l3514 48A4  
                          l3506 487A                            l3530 492A                            l3522 48EA  
                          l3450 5346                            l4218 59AC                            l5130 4758  
                          l5122 4726                            l5106 46D6                            l5026 2CF2  
                          l5018 2C8E                            l5204 6006                            l5140 5DFA  
                          l5132 5DA8                            l4340 5032                            l4324 4FDE  
                          l4316 4FB8                            l4308 4F78                            l4164 514E  
                          l4156 50D0                            l4148 5054                            l4092 240E  
                          l4084 2384                            l4076 2332                            l4068 22FA  
                          l4172 5D1A                            l4420 38D4                            l4412 3856  
                          l4404 37D2                            l3620 56C8                            l3612 56A2  
                          l3604 5672                            l3700 3D48                            l4260 4520  
                          l4252 44CA                            l4244 4488                            l5052 521E  
                          l5044 51E6                            l5036 51A6                            l5028 516A  
                          l5220 4ABA                            l5212 4A5A                            l4228 5E26  
                          l3516 48C4                            l3508 487C                            l3540 4992  
                          l3532 494A                            l3524 48F8                            l3452 5364  
                          l3444 5318                            l3460 5B52                            l4180 58B6  
                          l5124 4732                            l5116 46FE                            l5108 46DC  
                          l5300 43FE                            l4500 4CE0                            l5142 5E04  
                          l5134 5DDC                            l4342 5042                            l4334 5006  
                          l4326 4FE8                            l4318 4FC6                            l4166 5154  
                          l4158 50DE                            l4094 242C                            l4086 23A0  
                          l4078 234C                            l4174 5D2A                            l4350 261E  
                          l4422 390A                            l4414 388C                            l4406 380E  
                          l4430 5EE6                            l3622 56CE                            l3614 56A8  
                          l3606 5684                            l3710 3E96                            l3702 3DAA  
                          l4270 4576                            l4262 4538                            l4254 44F2  
                          l4238 4458                            l4246 4496                            l4510 4D52  
                          l4502 4CF6                            l5054 5230                            l5038 51B0  
                          l5222 4ACE                            l5230 4B2E                            l5214 4A78  
                          l5206 4A4A                            l5302 5B8A                            l3550 4A08  
                          l3542 49C0                            l3534 4968                            l3526 4918  
                          l3454 539A                            l3446 532A                            l3462 5B64  
                          l3470 5D82                            l4182 58C4                            l5126 4738  
                          l5118 4702                            l5070 461E                            l5062 45EA  
                          l5310 30B4                            l5150 5808                            l5136 5DE0  
                          l4600 2EEC                            l4336 5012                            l4328 4FF2  
                          l4096 2436                            l4088 23CA                            l3800 1E7C  
                          l3720 1CF8                            l3712 1CCC                            l4352 2632  
                          l4416 389E                            l4408 3820                            l4440 5F4C  
                          l4432 5EEC                            l4192 5A60                            l3616 56BE  
                          l3608 568C                            l3624 56D4                            l3704 3DF0  
                          l4272 4582                            l4264 4544                            l4248 44AE  
                          l4256 450A                            l4280 45B4                            l4520 4E0E  
                          l4512 4D9A                            l4504 4D0A                            l5048 5206  
                          l5240 4B7C                            l5232 4B3C                            l5224 4AD0  
                          l5216 4A84                            l5208 4A54                            l5304 5B9E  
                          l3480 4770                            l3552 4A28                            l3544 49E0  
                          l3536 4970                            l3528 491C                            l3448 533C  
                          l3464 5B68                            l3472 5D9A                            l3560 54CC  
                          l3640 340A                            l3632 3392                            l4184 58EA  
                          l4424 5910                            l5128 4752                            l5080 4646  
                          l5072 4624                            l5064 45EE                            l5056 45C8  
                          l5320 3126                            l5312 30C4                            l5152 5832  
                          l5144 57B8                            l5400 3B96                            l5138 5DEA  
                          l5170 5C4C                            l5162 5C0E                            l4434 5F66  
                          l4610 2F2C                            l4602 2EEE                            l4530 2D34  
                          l4522 2D08                            l4338 5022                            l4098 2444  
                          l3810 1EA6                            l3802 1E88                            l3730 1D32  
                          l3722 1D08                            l3714 1CD8                            l4370 28BE  
                          l4362 26E6                            l4354 266E                            l4346 25B6  
                          l4418 38BC                            l4442 5F26                            l4426 5F06  
                          l4194 5AA6                            l4186 59C0                            l3626 56E4  
                          l3618 56C6                            l3706 3E10                            l4290 55CE  
                          l4282 556E                            l4274 4592                            l4266 4550  
                          l4514 4DB2                            l4506 4D22                            l5242 4B80  
                          l5234 4B58                            l5226 4AEE                            l5218 4A86  
                          l5306 5BB6                            l3490 47C6                            l3482 4790  
                          l3546 49F2                            l3538 4984                            l3458 5B46  
                          l3466 5D72                            l3570 5512                            l3562 54DA  
                          l3650 3462                            l3642 340C                            l3634 33B2  
                          l4178 58AE                            l4450 5E44                            l5090 4680  
                          l5082 464A                            l5074 463E                            l5066 4606  
                          l5250 427E                            l5330 31BC                            l5322 315A  
                          l5314 30F8                            l5146 57D0                            l5410 3BF6  
                          l5402 3B98                            l5164 5C1E                            l5180 528A  
                          l5172 5246                            l4436 5F6C                            l4620 2F68  
                          l4612 2F36                            l4604 2EFE                            l4540 2D6E  
                          l4532 2D44                            l4524 2D14                            l4700 4254  
                          l3900 215C                            l3820 1EFC                            l3812 1EC8  
                          l3804 1E8C                            l3740 1D60                            l3732 1D38  
                          l3724 1D18                            l3716 1CE6                            l4372 28F2  
                          l4364 27B4                            l4356 2692                            l4348 25D6  
                          l4380 3676                            l4444 5F2C                            l4428 5F0C  
                          l4188 5A06                            l3628 56EC                            l3708 3E2C  
                          l4292 55DA                            l4284 5592                            l4268 455E  
                          l4516 4DC6                            l4508 4D3E                            l5244 4B98  
                          l5236 4B6C                            l5228 4B16                            l3492 47D2  
                          l3484 4794                            l3476 475E                            l3548 49F8  
                          l3580 5C6A                            l3468 5D7E                            l3572 5540  
                          l3564 54E6                            l3556 54A8                            l3660 3500  
                          l3652 3468                            l3644 3426                            l3636 33DA  
                          l4452 5E60                            l5092 469A                            l5084 4662  
                          l5068 4612                            l4460 5C96                            l5260 42D6  
                          l5252 4290                            l5340 3238                            l5332 31D6  
                          l5324 3174                            l5316 3112                            l5308 30A4  
                          l5148 57F0                            l5420 3C64                            l5412 3C18  
                          l5404 3BA4                            l4710 5E7E                            l5166 5C36  
                          l5182 529A                            l5174 5252                            l5190 5FB2  
                          l4630 2FDA                            l4622 2F76                            l4614 2F44  
                          l4606 2F10                            l4550 2D9A                            l4542 2D74  
                          l4534 2D54                            l4526 2D22                            l4702 4256  
                          l3910 217A                            l3902 2162                            l3830 1F36  
                          l3822 1F0A                            l3814 1ED8                            l3806 1E9A  
                          l3750 1D94                            l3742 1D62                            l3734 1D4A  
                          l3726 1D1A                            l3718 1CE8                            l4374 292E  
                          l4366 2820                            l4358 26AE                            l4454 5CCA  
                          l4390 3702                            l4382 3682                            l4438 5F46  
                          l4198 5A10                            l3590 5636                            l3582 5EC0  
                          l4294 55E6                            l4286 55AA                            l4278 45B2  
                          l4518 4DE2                            l5238 4B6E                            l3494 47F0  
                          l3486 47A2                            l3478 4762                            l3574 5554  
                          l3566 54FA                            l3558 54B8                            l3670 35A8  
                          l3662 3506                            l3654 3470                            l3646 3442  
                          l3638 33FA                            l4446 583E                            l5086 466E  
                          l4462 5CAC                            l5270 431E                            l5262 42DA  
                          l5254 429C                            l4470 4BC6                            l5350 329C  
                          l5342 323A                            l5334 31D8                            l5326 3176  
                          l5318 3114                            l5158 583A                            l5430 3CC0  
                          l5422 3C78                            l5414 3C4C                            l5406 3BB8  
                          ?_pad 0011                            l4712 5E80                            l5168 5C4A  
                          l5184 52AE                            l5176 5262                            l5192 5FBC  
                          l4640 3046                            l4632 2FE8                            l4624 2FA4  
                          l4608 2F26                            l4616 2F56                            l4560 2DD4  
                          l4552 2DAA                            l4544 2D7A                            l4536 2D56  
                          l4528 2D24                            l3904 2164                            l3840 1FA2  
                          l3832 1F38                            l3824 1F18                            l3808 1E9C  
                          l3760 1DD0                            l3744 1D72                            l3752 1D9C  
                          l3736 1D4C                            l3728 1D22                            l4376 2952  
                          l4368 2852                            l4392 3714                            l4384 3692  
                          l4720 3920                            l3592 5644                            l3584 5EDC  
                          l4296 55F2                            l4288 55B6                            l3496 47F8  
                          l3488 47C2                            l3568 550E                            l3680 360E  
                          l3672 35C2                            l3664 350C                            l3656 3478  
                          l3648 3454                            l3920 3F44                            l4448 58A0  
                          l5088 467A                            l4464 5CC2                            l4800 111E  
                          l5280 434E                            l5272 4324                            l5264 42E6  
                          l5256 42B0                            l5248 426C                            l4480 4C1A  
                          l4472 4BDE                            l5360 3310                            l5352 32AE  
                          l5344 324C                            l5336 31EA                            l5328 3188  
                          l5440 3D20                            l5432 3CDA                            l5424 3C7E  
                          l5416 3C52                            l5408 3BDA                            l4714 5E82  
                          l4706 5E6E                            l5178 5276                            l5194 5FBE  
                          l5186 5FA6                            l4650 3094                            l4642 3060  
                          l4634 3012                            l4618 2F64                            l4562 2DEA  
                          l4554 2DBA                            l4546 2D88                            l4538 2D5E  
                          l3906 216A                            l3850 1FFA                            l3842 1FA4  
                          l3834 1F42                            l3826 1F24                            l3818 1EEC  
                          l3770 1DE4                            l3762 1DD4                            l3754 1DAC  
                          l3746 1D82                            l3738 1D52                            l4394 3734  
                          l4386 36B2                            l4730 3962                            l4722 3924  
                          l3594 564C                            l4298 5600                            l3498 480C  
                          l3578 5C50                            l3682 3614                            l3690 364A  
                          l3674 35DC                            l3658 347E                            l3666 3570  
                          l3922 3F48                            l3914 3F00                            l5098 46A2  
                          l4458 5C90                            l4810 129A                            l4802 1122  
                          l5290 43A8                            l5282 435E                            l5266 42F2  
                          l5258 42C4                            l4490 4C76                            l4482 4C26  
                          l4474 4BEA                            l5370 337C                            l5362 3344  
                          l5354 32E2                            l5346 3280                            l5338 321E  
                          l5434 3CF4                            l5426 3C92                            l5418 3C54  
                          l4716 5E84                            l4708 5E78                            l5196 5FC0  
                          l5188 5FB0                            l4652 3096                            l4644 307C  
                          l4628 2FCE                            l4636 3016                            l4580 2E3E  
                          l4564 2DFA                            l4572 2E1A                            l4556 2DBC  
                          l4548 2D8A                            l4660 40B6                            l3908 2178  
                          l3860 2028                            l3844 1FB4                            l3828 1F28  
                          l3836 1F48                            l3780 1DF8                            l3772 1DE8  
                          l3764 1DD8                            l3756 1DBE                            l3748 1D92  
                          l4396 374C                            l4388 36CA                            l4740 39C2  
                          l4732 3976                            l4724 392E                            l3596 5650  
                          l3588 5632                            l3684 3626                            l3668 358A  
                          l3676 35EC                            l3932 4010                            l3924 3F6C  
                          l3916 3F24                            l4900 1CA2                            l4820 14C8  
                          l4812 1346                            l4804 113C                            l5292 43B8  
                          l5276 433C                            l5268 4306                            l4492 4C8C  
                          l4476 4C02                            l4484 4C36                            l4468 4BA2  
                          l5364 335E                            l5356 32FC                            l5348 329A  
                          l5436 3D04                            l5428 3CAC                            l5380 3B52  
                          l5372 3B2A                            l5198 5FC4                            l3694 5E98  
                          l4718 5F88                            l4646 3080                            l4638 3030  
                          l4590 2E90                            l4582 2E58                            l4574 2E2A  
                          l4566 2E02                            l4558 2DC4                            l4662 40C6  
                          l3862 2036                            l3854 200E                            l3870 2054  
                          l3838 1F6E                            l3846 1FC4                            l3782 1DFC  
                          l3774 1DEC                            l3766 1DDC                            l3758 1DCC  
                          l3790 1E0C                            l4398 3784                            l4910 4E24  
                          l4750 3A26                            l4742 39DA                            l4734 398E  
                          l4726 3946                            l3598 565E                            l3686 3632  
                          l3678 35FE                            l3950 40A0                            l3934 4034  
                          l3942 4062                            l3926 3F90                            l3918 3F32  
                          l4902 1CA8                            l4830 15CA                            l4822 1570  
                          l4814 13E8                            l4806 1148                            l5294 43CC  
                          l5286 4374                            l5278 4348                            l4494 4C9E  
                          l4486 4C4E                            l4478 4C0E                            l5366 3360  
                          l5358 32FE                            l5438 3D1A                            l5390 3B64  
                          l5382 3B56                            l5374 3B2E                            l3696 5EA8  
                          l3960 5FFC                            l4648 308E                            l4592 2EA0  
                          l4584 2E68                            l4576 2E2A                            l4568 2E06  
                          l4680 418C                            l4672 4144                            l4664 40D4  
                          l3864 203E                            l3856 2018                            l3848 1FEA  
                          l3872 2062                            l3792 1E10                            l3784 1E00  
                          l3776 1DF0                            l3768 1DE0                            l4920 4E70  
                          l4912 4E3E                            l4760 3A8A                            l4752 3A3E  
                          l4744 39F2                            l4736 39A6                            l4728 394A  
                          l3688 363A                            l3944 4070                            l3936 4042  
                          l3928 3FD8                            l4904 1CBC                            l4840 1756  
                          l4832 15E4                            l4824 158C                            l4816 1404  
                          l4808 11EE                            l5296 43E6                            l5288 4388  
                          l4496 4CB6                            l4488 4C66                            l5368 3372  
                          l5392 3B68                            l5384 3B5A                            l5376 3B32  
                          l3962 6000                            l4594 2EB4                            l4586 2E78  
                          l4690 420C                            l4682 4198                            l4674 414C  
                          l4666 411A                            l3970 6016                            l3882 20B4  
                          l3890 210A                            l3874 2066                            l3866 2042  
                          l3858 2026                            l3794 1E3A                            l3786 1E04  
                          l3778 1DF4                            l4930 4ED0                            l4922 4E88  
                          l4914 4E48                            l4770 3B02                            l4762 3AA2  
                          l4754 3A56                            l4746 3A0A                            l4738 39AA  
                          l3698 3D2C                            l3938 4056                            l4906 1CC6  
                          l4850 18F2                            l4842 1772                            l4834 15F0  
                          l4826 15BA                            l4818 14AC                            l5298 43EC  
                          l4498 4CC8                            l5394 3B68                            l5386 3B5E  
                          l5378 3B3E                            l3956 6026                            l3964 601C  
                          l4596 2EC2                            l4588 2E88                            l4692 420E  
                          l4684 41D4                            l4676 4158                            l4668 4130  
                          l3980 5C08                            l3972 5BCE                            l3892 211A  
                          l3884 20C0                            l3876 2074                            l3868 2052  
                          l3796 1E56                            l3788 1E08                            l4932 4F38  
                          l4924 4E94                            l4916 4E4C                            l4772 3B06  
                          l4764 3ABA                            l4756 3A6E                            l4748 3A0E  
                          l3948 407C                            l4860 1A32                            l4852 1920  
                          l4844 181A                            l4836 1692                            l4828 15C6  
                          l4780 0E80                            l4940 53F8                            l5396 3B68  
                          l5388 3B64                            l3958 602A                            l3966 6020  
                          l4598 2ECE                            l4694 4212                            l4686 41E0  
                          l4678 418A                            l3982 5C0A                            l3974 5BD2  
                          l3894 212A                            l3886 20CE                            l3878 208A  
                          l3798 1E66                            l4934 4F42                            l4926 4EAC  
                          l4918 4E64                            l4766 3AD2                            l4758 3A86  
                          l3990 5712                            l4870 1B34                            l4862 1A3C  
                          l4854 192C                            l4846 1836                            l4838 16AE  
                          l4790 1008                            l4782 0E8C                            l4774 0E14  
                          l4950 546C                            l4942 53FC                            l4696 4236  
                          l4688 41EE                            l3976 5BDA                            l3968 6012  
                          l3896 214A                            l3888 2108                            l4928 4EB8  
                          l4768 3AEA                            l3992 571E                            l4880 1B88  
                          l4864 1A54                            l4872 1B3E                            l4856 195A  
                          l4848 18DE                            l4792 10B0                            l4784 0F28  
                          l4776 0E62                            l4952 5488                            l4944 5416  
                          l4960 29B0                            l4698 4246                            l3978 5BE2  
                          l3898 214E                            l3994 5736                            l3986 56F6  
                          l4890 1BE0                            l4882 1B9E                            l4874 1B54  
                          l4866 1A6A                            l4858 1A28                            l4794 10CC  
                          l4786 0F44                            l4778 0E66                            l4954 54A0  
                          l4946 5422                            l4938 53E2                            l4970 29F0  
                          l4962 29B4                            l3996 5742                            l3988 56FA  
                          l4892 1C10                            l4884 1BA6                            l4876 1B6A  
                          l4868 1B2A                            l4796 10E4                            l4788 0FEC  
                          l4948 5426                            l4980 2A44                            l4972 2A18  
                          l4964 29C8                            l3998 574E                            l4894 1C40  
                          l4878 1B80                            l4886 1BAE                            l4798 1112  
                          l4982 2A66                            l4974 2A2C                            l4966 29D4  
                          l4958 2964                            l4896 1C46                            l4888 1BB2  
                          l4992 2AFA                            l4968 29EC                            l4898 1C74  
                          l4994 2B1E                            l4986 2A9E                            l4978 2A42  
                          l4988 2AC2                            l4998 2B56                            STR_1 0E05  
                          STR_2 0E0D                            STR_3 0E08                            STR_4 0E08  
                          STR_5 0E08                            u3000 5B88                            u3001 5B84  
                          u3010 5D9A                            u3011 5D96                            u3020 4770  
                          u3100 492A                            u3021 476C                            u3101 4926  
                          u3030 47A2                            u3110 4968                            u3031 479E  
                          u3111 4964                            u4000 2208                            u3200 5644  
                          u3120 4992                    _BAUD4CONbits 000EE9                            u4001 2204  
                          u3201 5640                            u3041 47CC                            u3121 498E  
                          _LATE 000F7D                            u4010 221A                            u3210 565E  
                          u3050 47F0                            u3130 49C0                            u4011 2216  
                          u3211 565A                            u3051 47EC                            u3131 49BC  
                          _LATG 000F7F                            u4100 24BA                            u4020 222A  
                          u3220 5684                            u3060 481A                            u3140 4A08  
                          u3300 3426                            u4101 24B6                            u4021 2226  
                          u3221 5680                            u3061 4816                            u3141 4A04  
                          u3301 3422                            u4110 24CE                            u4030 2260  
                          u3230 56A2                            u3070 485A                            u3150 54B8  
                          u3310 3454                            u4111 24CA                            u4031 225C  
                          u3231 569E                            u3071 4856                            u3151 54B4  
                          u3311 3450                            u5000 2F64                            u4200 514E  
                          u4120 24E8                            u4040 2270                            u3240 56BE  
                          u3080 48A4                            u3160 54DA                            u3400 3626  
                          u3320 3462                            u5001 2F60                            u4201 514A  
                          u4121 24E4                            u4041 226C                            u3241 56BA  
                          u3081 48A0                            u3161 54D6                            u3401 3622  
                          u3321 345E                            u3410 5EA8                            u5010 2F76  
                          u4130 2530                            u4050 23EA                            u4210 5D1A  
                          u3250 56E4                            u3090 48F8                            u3170 5530  
                          u3330 358A                            _T2PR 000FBC                            u3411 5EA4  
                          u5011 2F72                            u4131 252C                            u4211 5D16  
                          u3251 56E0                            u3091 48F4                            u3171 552C  
                          u3331 3586                            u3420 5EBE                            u5020 2FA4  
                          u5100 40D4                            u4140 255E                            u4060 2444  
                          u3500 1D4A                            u4300 45C6                            u3180 5540  
                          u3340 35A8                            u3260 33C2                            u4220 5906  
                          u3421 5EBA                            u5021 2FA0                            u5101 40D0  
                          u4141 255A                            u4061 2440                            u3501 1D46  
                          u4301 45C2                            u3181 553C                            u3341 35A4  
                          u3261 33BC                            u4221 5902                            u5030 2FBA  
                          u5110 4130                            u4150 2598                            u4070 2464  
                          u3510 1D60                            u3430 3D48                            u4310 55AA  
                          u4230 5E3E                            u3190 5C6A                            u3350 35C2  
                          u3270 33C4                            u5031 2FB6                            u5111 412C  
                          u4151 2594                            u4071 2460                            u4055 23E0  
                          u3511 1D5C                            u3431 3D44                            u4311 55A6  
                          u4231 5E3A                            u3191 5C66                            u3351 35BE  
                          u5040 2FCE                            u5120 4186                            u4400 5022  
                          u4160 5082                            u4080 2476                            u3600 1E9A  
                          u3520 1D72                            u3440 3E2C                            u4320 55CE  
                          u4240 4454                            u3360 35DC                            u3280 33DA  
                          u5200 1A28                            u5041 2FCA                            u5121 4182  
                          u4401 501E                            u4161 507E                            u4081 2472  
                          u3601 1E96                            u3521 1D6E                            u3441 3E28  
                          u4321 55CA                            u4241 4450                            u3361 35D8  
                          u3281 33D6                            u5201 1A24                            u5050 2FE8  
                          u5130 41D0                            u4410 5032                            u4170 50C0  
                          u4090 24A4                            u3610 1EBA                            u3530 1D82  
                          u4330 5618                            u4250 44AE                            u3370 35EC  
                          u3290 340A                            u5210 1A54                            u5051 2FE4  
                          u5131 41CC                            u4411 502E                            u4171 50BC  
                          u4091 24A0                            u3611 1EB6                            u3531 1D7E  
                          u4331 5614                            u4251 44AA                            u3371 35E8  
                          u3291 3406                            u5211 1A50                            u5060 3030  
                          u5140 41EE                            u4180 50DE                            u3700 1FFA  
                          u3620 1EC8                            u3540 1DBE                            u4500 292E  
                          u4420 25F6                            u4340 5630                            u4260 44F2  
                          u3380 35FE                            u5300 1C40                            u5220 1A6A  
                          u5061 302C                            u5141 41EA                            u4181 50DA  
                          u3701 1FF6                            u3621 1EC4                            u3541 1DBA  
                          u4501 292A                            u4341 562C                            u4261 44EE  
                          u3381 35FA                            u5301 1C3C                            u5221 1A66  
                          u5070 3060                            u5150 41FE                            u4350 4F64  
                          u4190 50FE                            u3710 2026                            u3630 1ED8  
                          u3550 1DCC                            u3470 1CE6                            u4430 261E  
                          u4510 3692                            u3454 3E86                            u4270 451C  
                          u3390 360E                            u5310 1C74                            u5230 1B2A  
                          u5071 305C                            u5151 41FA                            u4351 4F60  
                          u4191 50FA                            u3711 2022                            u3631 1ED4  
                          u3551 1DC8                            u3471 1CE2                            u4431 261A  
                          u4511 368E                            u3455 3E82                            u4271 4518  
                          u3391 360A                            u5311 1C70                            u5231 1B26  
                          u6007 0E72                            u5080 308E                            u5160 420C  
                          u4360 4F98                            u3800 2108                            u3720 2036  
                          u3640 1F0A                            u3560 1E3A                            u3480 1CF8  
                          u4440 2652                            u4520 36A4                            u3464 3EF0  
                          u4280 4576                            u5320 1CA2                            u5240 1B54  
                          u5400 2B7A                            u5081 308A                            u5161 4208  
                          u3801 2104                            u3721 2032                            u3641 1F06  
                          u3561 1E36                            u3481 1CF4                            u4425 25EC  
                          u4521 369C                            u3465 3EEC                            u4281 4572  
                          u5321 1C9E                            u5241 1B50                            u6017 10D8  
                          u5401 2B76                            u5170 4246                            u5090 40C6  
                          u4370 4FC6                            u3810 211A                            u3730 2052  
                          u3650 1F18                            u3570 1E52                            u3490 1D08  
                          u4450 266E                            u4610 3796                            u4290 45AE  
                          u5330 1CBC                            u5250 1B6A                            u5410 2BD6  
            verify_color@color2 01AA                            u5171 4242                            u5091 40C2  
                          u4371 4FC2                            u3811 2116                            u3731 204E  
                          u3651 1F14                            u3571 1E4C                            u3491 1D04  
                          u4451 266A                            u4611 3792                            u4291 45AA  
                          u6107 4ADC                            u5331 1CB8                            u5251 1B66  
                          u6027 112E                            u5411 2BD2                            u5180 4254  
                          u3900 5BF6                            u4380 4FDA                            u3820 212A  
                          u3740 2062                            u3660 1F36                            u3580 1E54  
                          u4460 26AE                            u4620 37A8                            u4540 36DC  
                          u5500 51F4                            u5260 1B80                            u5340 54A0  
                          u5420 2C32                            u5181 4250                            u3901 5BEE  
                          u4381 4FD6                            u4365 4F8E                            u3821 2126  
                          u3741 205E                            u3661 1F32                            u4461 26AA  
                          u4445 2648                            u4621 37A0                            u4541 36D4  
                          u5501 51F0                            u6117 4B22                            u5261 1B7C  
                          u6037 15D6                            u5341 549C                            u5421 2C2E  
                          u4390 5002                            u3830 214A                            u3750 2074  
                          u3670 1F6E                            u3590 1E7C                            u4470 27B4  
                          u4710 389E                            u5510 5206                            u5270 1B9E  
                          u5190 195A                            u5430 2C8E                            u5350 2A18  
                          u4391 4FFE                            u3831 2146                            u3751 2070  
                          u3671 1F6A                            u3591 1E78                            u4471 27B0  
                          u4711 389A                            u6207 4E00                            u5511 5202  
                          u6127 4B8C                            u6047 45F8                            u5271 1B9A  
                          u5191 1956                            u5431 2C8A                            u5351 2A14  
                          u3840 215C                            u3760 208A                            u3680 1FB4  
                          u4480 2852                            u4720 38B0                            u4640 37E4  
                          u4608 3760                            u4560 3714                            u3920 5712  
                          u5600 4ABA                            u2960 532A                            u5520 463E  
                          u5280 1BE0                            u4800 4C02                            u5440 2CF2  
                          u5360 2A3E                            u3841 2158                            u3761 2086  
                          u3681 1FB0                            u4481 284E                            u4721 38A8  
                          u4641 37DC                            u4561 3710                            u3921 570E  
                          u6217 448E                            u6137 5174                            u5601 4AB6  
                          u2961 5326                            u6057 4654                            u5521 463A  
                          u5281 1BDC                            u4801 4BFE                            u5441 2CEE  
                          u5361 2A3A                            u3850 2178                            u3770 20A0  
                          u3690 1FEA                            u4490 2912                            u4570 3726  
                          u4538 36A6                            u3930 5736                            u5610 4B02  
                          u2970 533C                            u5530 469A                            u5290 1C10  
                          u4810 4C4E                            u5450 2D06                            u5370 2A66  
                          u3851 2174                            u3771 209C                            u3691 1FE6  
                          u4571 371E                            u6307 39B4                            u3931 5732  
                          u6227 44C0                            u6147 519A                            u5611 4AF8  
                          u2971 5338                            u6067 46B0                            u5531 4696  
                          u5291 1C0C                            u4811 4C4A                            u5451 2D02  
                          u5371 2A62                            u4900 2D9A                            u3780 20B4  
                          u4740 38E6                            u4708 386A                            u4660 3820  
                          u3940 5782                            u5460 516A                            u2980 5364  
                          u3860 3F24                            u5540 46F6                            u5700 4306  
                          u4820 4C66                            u5380 2AC2                            u4901 2D96  
                          u3781 20B0                            u4741 38DE                            u4661 381C  
                          u6317 3A18                            u3941 577E                            u6237 4556  
                          u6157 51DA                            u5461 5166                            u2981 5360  
                          u3861 3F20                            u6077 470C                            u5541 46F2  
                          u5701 4302                            u4821 4C62                            u5381 2ABE  
                          u4910 2DAA                            u3918 5BF8                            u3790 20CE  
                          u4670 3832                            u4638 37AA                            u4590 375E  
                          u4558 36DE                            u3950 579A                            u5470 518E  
                          u5630 4B3C                            u2990 539A                            u3870 3F6C  
                          u5550 4752                            u5710 4338                            u4830 4C76  
                          u5390 2B1E                            u4911 2DA6                            u3791 20CA  
                          u4495 2908                            u4671 382A                            u4591 3756  
                          u6407 4EA0                            u6327 3A94                            u3951 5796  
                          u6247 4588                            u6167 5212                            u5471 518A  
                          u5631 4B38                            u6087 5BA8                            u2991 5396  
                          u3871 3F68                            u5551 474E                            u5711 4334  
                          u4831 4C72                            u5391 2B1A                            u4920 2DEA  
                          u4760 391E                            u5480 51BE                            u5640 4B4A  
                          u3960 5FF4                            u3880 3F90                            u5720 435E  
                          u4840 4C9E                            u5800 31EA                            u5560 5832  
                          u4921 2DE6                            u4761 391A                            u6417 4EC4  
                          u6337 3B10                            u6257 5760                            u6177 4D14  
                          u5481 51BA                            u5641 4B46                            u6097 4A92  
                          u3961 5FF0                            u3881 3F8C                            u5721 435A  
                          u4841 4C9A                            u5801 31E6                            u5561 582E  
                          u4930 2E2A                            u3970 21A6                            u4738 38B2  
                          u4690 3868                            u4658 37E6                            u5490 51D0  
                          u5650 4B58                            u5570 4A6A                            u3890 4034  
                          u4770 5CAC                            u5730 4370                            u4850 4CC8  
                          u5810 324C                            u4931 2E26                            u3971 21A2  
                          u6507 38C6                            u4691 3860                            u6427 36BC  
                          u6347 5EF6                            u6267 57A4                            u6187 4D5C  
                          u5491 51CC                            u5651 4B54                            u5571 4A66  
                          u3891 4030                            u4771 5CA8                            u5731 436C  
                          u4851 4CC4                            u5811 3248                            u4940 2EA0  
                          u4860 2D22                            u3980 21B8                            u4588 3728  
                          u5660 4B7C                            u5628 4B06                            u5580 4A78  
                          u4780 5CC2                            u5740 43B8                            u5820 32AE  
                          u4941 2E9C                            u4861 2D1E                            u3981 21B4  
                          u6517 38FC                            u6437 36F4                            u6357 5F16  
                          u6277 55F8                            u6197 4DA4                            u5661 4B78  
                          u5581 4A74                            u4781 5CBE                            u5741 43B4  
                          u5821 32AA                            u4950 2EC2                            u4870 2D34  
                          u3990 21C8                            u4758 38E8                            u5590 4AAC  
                          u5750 43FE                            u5670 4290                            u4790 4BDE  
                          u5830 3310                            u6527 5F76                            u4951 2EBE  
                          u4871 2D30                            u3991 21C4                            u6447 373E  
                          u6367 5F36                            u6287 3938                            u5591 4AA8  
                          u5751 43FA                            u5671 428C                            u4791 4BDA  
                          u5831 330C                            u4960 2EEC                            u4880 2D44  
                          u4688 3834                            u5680 42B0                            u5840 3372  
                          u5760 30B4                            u6537 5DF0                            u4961 2EE8  
                          u4881 2D40                            u6457 3776                            u6377 5F56  
                          u6297 3954                            u5681 42AC                            u5841 336E  
                          u5761 30B0                            u4970 2F10                            u4890 2D88  
                          u5690 42D6                            u5770 30C4                            u5850 3BEC  
                          u4971 2F0C                            u4891 2D84                            u6467 37C4  
                          u6387 4E58                            u5691 42D2                            u5771 30C0  
                          u5907 3C9E                            u5851 3BE8                            u4980 2F26  
                          u5780 3126                            u5860 3C18                            u4981 2F22  
                          u6477 3800                            u6397 4E7C                            u5781 3122  
                          u5917 57C4                            u5861 3C14                            u4990 2F44  
                          u5790 3188                            u5870 3C64                            u4991 2F40  
                          u6487 3848                            u5791 3184                            u5927 57FC  
                          u5871 3C60                            u5880 3D04                            u6497 387E  
                          u5937 29DE                            u5881 3D00                            u5947 4C2C  
                          u5957 4C80                            u5967 4CA8                            u5977 4CD2  
                          u5987 43D8                            u5997 5408                            abs@a 0013  
                          _dbuf 0186                            _main 3B2A                            _dtoa 3392  
              turning_action@mL 0035                turning_action@mR 0037                            _prec 017E  
                          _nout 017A                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            btemp 005F                            _stop 56F6  
                          prodh 000FF4                            prodl 000FF3                            start 0030  
                  main@accident 01C3                  ?_color_display 0058                   test_action@mL 002D  
                 test_action@mR 002F                 ___fldiv@new_exp 0020          __end_of_color_read_Red 5A10  
               __end_of_HighISR 0030                    ___param_bank 000000                 detect_color@buf 0081  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 48E6       amb_light_measure@CC_amb_1 0072  
     amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076                 __end_of___fladd 218C  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 4A4A  
               __end_of___fldiv 30A2                 __end_of___awdiv 56F6                 __end_of___flneg 5D3C  
               __end_of___flmul 25B6                 __end_of___flsub 5B46                 __end_of___fltol 5054  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 5F46  
                         _LED_C 5F66                           _LED_G 5F26                           _LED_R 5EE6  
                         i2l502 002C                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5FFA  
    __end_of_I2C_2_Master_Start 6030         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 6006  
               __end_of_compare 5CCA                    compare@lower 006A                           _flags 0180  
                         _color 0184                    compare@upper 006E                           _fputc 5318  
                         _fputs 5B46                           _setup 4A4A                           pad@fp 0011  
                         _width 017C                           _putch 6032                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00FE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 5D04                 detect_wall@stop 007C                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 59C0                color_display@buf 0079  
       __end_of_color_read_Blue 5AB0           _I2C_2_Master_RepStart 6012               _calibration_motor 5158  
               ?_color_read_Red 0005                 __initialization 5D3C                   short_burst@mL 0020  
                 short_burst@mR 0022              ?_calibration_motor 0033                    __end_of_main 3D2C  
                  __end_of_dtoa 3674                   main@amb_light 01C0            __end_of_detect_color 1CCC  
                  __end_of_stop 57B4          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
           ??_calibration_motor 0037                          ??_main 01B4                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
                     ??_LED_OFF 0001          _initDCmotors_parameter 5246                    turn45@i_1335 0028  
                  turn45@i_1337 002A                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_setup 0078  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5442 000A                          i2l5444 001A  
                        i2l5446 0022                          i2l5448 0028                       ??_HighISR 0001  
      __end_of_color_click_init 5E10                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A       __end_of_calibration_motor 5246                __end_of___xxtofl 4268  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 5054                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5EC0                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                     ??___flsub 0019                       ??___fltol 0060                          _goback 2964  
                 compare@result 0070                          _memory 0100                          clear_0 5D5A  
              ___awdiv@quotient 000D                          _motorL 016D                          _motorR 0164  
                        isa$std 000001                          pad@buf 0013                          _turn45 4418  
                        _roundf 25B6                          dtoa@fp 001C                          _strlen 5D72  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5DDC  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 01A6  
                test_function@w 01A8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 5910                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                ??_turning_action 0039                    ?_test_action 002D  
                     ??_sprintf 0058                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                  ?_short_burst 0020                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                   main@stop_time 01C6                      __accesstop 0060  
       __end_of__initialization 5D60                   verify_color@m 01A6                   verify_color@w 01A8  
      __end_of_color_read_Clear 5B00                      ___flneg@f1 0001        __end_of_color_read_Green 5A60  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 5F66                   __end_of_LED_C 5F86                   __end_of_LED_G 5F46  
                 __end_of_LED_R 5F06                ?_color_read_Blue 0005                 _Interrupts_init 6006  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4BA2                    __pidataBANK1 6030  
                 __end_of_fputc 53E2               detect_color@color 00F5                   __end_of_fputs 5B8A  
                 __end_of_setup 4BA2                   __end_of_putch 6034                   __end_of_toint 0E05  
           __end_of_Timer0_init 5FE2                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001                         ??_fputc 0005  
                       ??_fputs 000E                         ??_setup 0080                         ??_putch 0001  
                    __pbssBANK1 0100             calibration_motor@mL 0033             calibration_motor@mR 0035  
              color_predict@buf 0079               _color_writetoaddr 5F86                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_goback 002D                         ?_turn45 0020  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 5F06                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
                  _detect_color 0E14   __end_of_color_data_collection 475E         __end_of_Interrupts_init 6012  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 5FA6              _I2C_2_Master_Start 6026                      _initUSART4 5FA6  
            _I2C_2_Master_Write 5FFA                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 01B0                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 5FC4         sendStringSerial4@string 0002                         ___aodiv 475E  
                       ___fladd 1CCC                         ___aomod 48E6                         ___fldiv 2D08  
                       ___awdiv 5632                         ___flneg 5D04                         ___flmul 218C  
                       ___flsub 5B00                         ___fltol 4F4C             ?_I2C_2_Master_Start 0001  
      fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00                         __pcinit 5D3C                         __ramtop 0E00  
                    _read_color 5910                         __ptext0 3B2A                         __ptext1 57B4  
                       __ptext2 30A2                         __ptext3 2964                         __ptext4 4BA2  
                       __ptext5 4268                         __ptext6 53E2                         __ptext7 0E14  
                       __ptext8 5C90                         __ptext9 45C8                         _compare 5C90  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
             detect_wall@CC_amb 0078               detect_wall@CG_amb 0072             turning_action@color 0039  
                     _T2HLTbits 000FBE                         _lroundf 5CCA                         goback@i 0033  
                       main@amb 01B8                         _sprintf 596E                         main@rgb 01C8  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 5D60  
            setMotorPWM@PWMduty 0018                         fputc@fp 0003           __end_of_test_function 4418  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 01AA  
               test_function@mR 01AC                 ??_fullSpeedBack 0025                      ??_pin_init 0001  
            ??_color_click_init 0005                         setup@mL 007C               __end_of_vfpfcnvrt 40B4  
                       setup@mR 007E                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       turn45@i 002C                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                main@start_time 01C4                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 5C0E                 turn45@direction 0025  __end_of_initDCmotors_parameter 5318  
                 ??_detect_wall 0070                       _PORTFbits 000F8E        test_function@stop_signal 01B2  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
              ?_Interrupts_init 0001                     ___flmul@grs 0035                   ?_toggle_light 0001  
             ?_color_read_Clear 0005               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001                   ?_verify_color 01A6           __end_of_color_display 58AE  
                    main@motorL 01EC                      main@motorR 01F5     amb_light_measure@CC_amb_ave 0070  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 00EF                  detect_color@BC 00E5  
                detect_color@BG 00F6                  detect_color@GB 00F1                  detect_color@GG 00F3  
                detect_color@BR 00E9                  detect_color@GR 00EB                  detect_color@RB 00ED  
                detect_color@RG 00E7                  detect_color@RR 00F8           __end_of_color_predict 5E6E  
                __end_of___flge 5158                  _fullSpeedAhead 556E                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048                  __end_of___wmul 5EE6  
                   ?_read_color 000C                  __end_of_goback 2D08                  __end_of_turn45 45C8  
                __end_of_roundf 2964                  __end_of_strlen 5DA8             color_read_Clear@tmp 000A  
           start_initialization 5D3C                     __end_of_abs 5C90                     __end_of_pad 556E  
           __end_of_detect_wall 54A8                 turn45@turn_time 0024                  ??_toggle_light 0002  
                ??_verify_color 00FE             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 5C50  
                   vfprintf@fmt 0052          __end_of_fullSpeedAhead 5632                        ??___flge 0009  
                      ??___wmul 0005                        ??_goback 0031                     __pdataBANK1 01FE  
                      ??_turn45 0026                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 01A6                ___aodiv@dividend 0001  
          detect_wall@amb_light 006E                        ?_HighISR 0001                       _dtoa$2619 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 01B1                     _centisecond 0182  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   _detect_wall 53E2                     __smallconst 0E00               _I2C_2_Master_Idle 5E98  
             _I2C_2_Master_Init 5E6E               _I2C_2_Master_Read 5BCC               _I2C_2_Master_Stop 601C  
        toggle_light@toggletime 0001                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 5E10           _color_data_collection 45C8             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                        _PIE0bits 000E29  
            ?_sendStringSerial4 0002                        _PIR0bits 000E33                        _PIR4bits 000E37  
                      i2u589_40 001A                        i2u589_41 0016            detect_wall@threshold 007A  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                     _array_index 0185  
                     _vfpfcnvrt 3F00                      setup@white 0078       __end_of_I2C_2_Master_Idle 5EC0  
          __end_of_toggle_light 3920       __end_of_I2C_2_Master_Init 5E98       __end_of_I2C_2_Master_Read 5C0E  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 6026                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 583E          test_function@amb_light 01AE  
                     main@white 01D0               ??_color_read_Blue 0007                   detect_color@m 0079  
                 detect_color@w 007B                   ??_test_action 0031                 _calibrate_white 3920  
     __end_of_sendStringSerial4 5E40                   detect_wall@mL 006A                   detect_wall@mR 006C  
                 ??_short_burst 0024               _amb_light_measure 4E24   __end_of_I2C_2_Master_RepStart 601C  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 3F00                      roundf@F527 0176  
                  ??_initUSART4 0001              ?_amb_light_measure 006A                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 4CF6                    __Lsmallconst 0E00            compare@value2compare 006C  
           ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062                        ___xxtofl 40B4  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5FC4  
                      __ptext10 5910                        __ptext11 5E40                        __ptext20 5318  
                      __ptext12 583E                        __ptext21 6032                        __ptext13 596E  
                      __ptext30 4CF6                        __ptext22 5C50                        __ptext14 58AE  
                      __ptext31 4418                        __ptext23 48E6                        __ptext15 3F00  
                      __ptext40 5A60                        __ptext32 56F6                        __ptext24 475E  
                      __ptext16 3392                        __ptext41 5EE6                        __ptext33 556E  
                      __ptext25 5E10                        __ptext17 54A8                        __ptext50 1CCC  
                      __ptext42 5F06                        __ptext34 3D2C                        __ptext26 5FE2  
                      __ptext18 5D72                        __ptext51 5D04                        __ptext43 5F26  
                      __ptext35 5EC0                        __ptext27 5B8A                        __ptext19 5B46  
                      __ptext60 5F66                        __ptext52 218C                        __ptext44 5F46  
                      __ptext36 5632                        __ptext28 4A4A                        __ptext61 5DA8  
                      __ptext53 5054                        __ptext45 4E24                        __ptext37 3920  
                      __ptext29 5158                        __ptext70 5E98                        __ptext62 5FA6  
                      __ptext54 4F4C                        __ptext46 3674                        __ptext38 59C0  
                      __ptext71 5E6E                        __ptext63 5246                        __ptext55 5AB0  
                      __ptext47 5CCA                        __ptext39 5A10                        __ptext72 5FC4  
                      __ptext64 5C0E                        __ptext56 6012                        __ptext48 25B6  
                      __ptext73 6006                        __ptext65 5DDC                        __ptext57 5BCC  
                      __ptext49 5B00                        __ptext66 5F86                        __ptext58 40B4  
                      __ptext67 5FFA                        __ptext59 2D08                        __ptext68 601C  
                      __ptext69 6026       __end_of_amb_light_measure 4F4C                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A          test_function@test_code 01B3  
           __end_of_test_action 4E24              __end_of_read_color 596E                        _pin_init 5DA8  
                _turning_action 30A2             __end_of_short_burst 5BCC                        isa$xinst 000000  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 01FE  
                      goback@mL 002D                        goback@mR 002F                        _vfprintf 58AE  
              ___aomod@dividend 0001         __end_of_calibrate_white 3B2A                      _INTCONbits 000FF2  
                   _setMotorPWM 3D2C                   ?_detect_color 0079                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                       sprintf@ap 006C  
        __end_of_turning_action 3392                ??_fullSpeedAhead 001E                   _test_function 4268  
                setup@amb_light 0082                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                      setup@amb 007A                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                        turn45@mL 0020                        turn45@mR 0022  
              _color_click_init 5DDC                    ?_detect_wall 006A                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$2947 00FA                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                  ??_detect_color 007D                     _test_action 4CF6  
                 ___fladd@signs 000D                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 5FE2                     _short_burst 5B8A                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 01A6                 ?_turning_action 0035  
                  _toggle_light 3674                    ___aomod@sign 0012                    _verify_color 57B4  
                   _roundf$2950 0049                     _roundf$2949 004F                   _color_display 583E  
               main@stop_signal 01C2  
