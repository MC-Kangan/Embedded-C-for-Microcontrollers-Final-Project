

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 13:20:39 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96  0000                     
    97                           ; Version 2.35
    98                           ; Generated 05/05/2021 GMT
    99                           ; 
   100                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution. Publication is not required when
   114                           ;        this file is used in an embedded application.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F67K40 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	idataBANK1
   134  005C62                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _SENSITIVITY
   138  005C62  0A                 	db	10
   139                           
   140                           ;initializer for _CALIBRATION_180
   141  005C63  0A                 	db	10
   142                           
   143                           ;initializer for _CALIBRATION_135
   144  005C64  0F                 	db	15
   145                           
   146                           	psect	smallconst
   147  000E00                     __psmallconst:
   148                           	callstack 0
   149  000E00  00                 	db	0
   150  000E01  0000               	dw	0
   151  000E03  4B00               	dw	19200
   152  000E05                     __end_of_toint:
   153                           	callstack 0
   154  0000                     _TX4REG	set	3812
   155  0000                     _RC4STAbits	set	3815
   156  0000                     _SP4BRGH	set	3814
   157  0000                     _LATEbits	set	3965
   158  0000                     _TRISGbits	set	3975
   159  0000                     _TRISEbits	set	3973
   160  0000                     _LATGbits	set	3967
   161  0000                     _LATFbits	set	3966
   162  0000                     _TRISFbits	set	3974
   163  0000                     _SSP2CON2bits	set	3802
   164  0000                     _LATG	set	3967
   165  0000                     _LATE	set	3965
   166  0000                     _RX4PPS	set	3605
   167  0000                     _SSP2CLKPPS	set	3612
   168  0000                     _SSP2DATPPS	set	3613
   169  0000                     _ANSELDbits	set	3751
   170  0000                     _SSP2ADD	set	3798
   171  0000                     _SSP2CON1bits	set	3801
   172  0000                     _LATAbits	set	3961
   173  0000                     _LATDbits	set	3964
   174  0000                     _LATHbits	set	3968
   175  0000                     _TRISDbits	set	3972
   176  0000                     _TRISHbits	set	3976
   177  0000                     _PORTFbits	set	3982
   178  0000                     _T2PR	set	4028
   179  0000                     _T2CONbits	set	4029
   180  0000                     _PWM7DCH	set	4000
   181  0000                     _PWM6DCH	set	4003
   182  0000                     _TRISAbits	set	3969
   183  0000                     _TRISCbits	set	3971
   184  0000                     _LATCbits	set	3963
   185  0000                     _RC4REG	set	3811
   186  0000                     _SP4BRGL	set	3813
   187  0000                     _TX4STAbits	set	3816
   188  0000                     _BAUD4CONbits	set	3817
   189  0000                     _SSP2CON2	set	3802
   190  0000                     _SSP2STAT	set	3800
   191  0000                     _ANSELFbits	set	3764
   192  0000                     _SSP2BUF	set	3797
   193  0000                     _PIE0bits	set	3625
   194  0000                     _PIE4bits	set	3629
   195  0000                     _PIR4bits	set	3639
   196  0000                     _RC0PPS	set	3682
   197  0000                     _RC7PPS	set	3689
   198  0000                     _RD5PPS	set	3695
   199  0000                     _RE2PPS	set	3700
   200  0000                     _RD6PPS	set	3696
   201  0000                     _TMR0L	set	4051
   202  0000                     _TMR0H	set	4052
   203  0000                     _T0CON0bits	set	4053
   204  0000                     _T2CLKCONbits	set	4031
   205  0000                     _T2HLTbits	set	4030
   206  0000                     _PWM6CONbits	set	4004
   207  0000                     _PWM7CONbits	set	4001
   208  0000                     _PIR0bits	set	3635
   209  0000                     _T0CON1bits	set	4054
   210  0000                     _INTCONbits	set	4082
   211  000E05                     STR_1:
   212                           
   213                           ; BSR set to: 14
   214  000E05  25                 	db	37
   215  000E06  64                 	db	100	;'d'
   216  000E07  09                 	db	9
   217  000E08  25                 	db	37
   218  000E09  64                 	db	100	;'d'
   219  000E0A  09                 	db	9
   220  000E0B  25                 	db	37
   221  000E0C  64                 	db	100	;'d'
   222  000E0D  09                 	db	9
   223  000E0E  25                 	db	37
   224  000E0F  64                 	db	100	;'d'
   225  000E10  0D                 	db	13
   226  000E11  0A                 	db	10
   227  000E12  00                 	db	0
   228  000E13  00                 	db	0	; dummy byte at the end
   229  0000                     
   230                           ; #config settings
   231                           
   232                           	psect	cinit
   233  00569C                     __pcinit:
   234                           	callstack 0
   235  00569C                     start_initialization:
   236                           	callstack 0
   237  00569C                     __initialization:
   238                           	callstack 0
   239                           
   240                           ; Initialize objects allocated to BANK1 (3 bytes)
   241                           ; load TBLPTR registers with __pidataBANK1
   242  00569C  0E62               	movlw	low __pidataBANK1
   243  00569E  6EF6               	movwf	tblptrl,c
   244  0056A0  0E5C               	movlw	high __pidataBANK1
   245  0056A2  6EF7               	movwf	tblptrh,c
   246  0056A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   247  0056A6  6EF8               	movwf	tblptru,c
   248  0056A8  0009               	tblrd		*+	;fetch initializer
   249  0056AA  CFF5 F1CE          	movff	tablat,__pdataBANK1
   250  0056AE  0009               	tblrd		*+	;fetch initializer
   251  0056B0  CFF5 F1CF          	movff	tablat,__pdataBANK1+1
   252  0056B4  0009               	tblrd		*+	;fetch initializer
   253  0056B6  CFF5 F1D0          	movff	tablat,__pdataBANK1+2
   254                           
   255                           ; Clear objects allocated to BANK2 (60 bytes)
   256  0056BA  EE02  F000         	lfsr	0,__pbssBANK2
   257  0056BE  0E3C               	movlw	60
   258  0056C0                     clear_0:
   259  0056C0  6AEE               	clrf	postinc0,c
   260  0056C2  06E8               	decf	wreg,f,c
   261  0056C4  E1FD               	bnz	clear_0
   262                           
   263                           ; Clear objects allocated to BANK1 (136 bytes)
   264  0056C6  EE01  F000         	lfsr	0,__pbssBANK1
   265  0056CA  0E88               	movlw	136
   266  0056CC                     clear_1:
   267  0056CC  6AEE               	clrf	postinc0,c
   268  0056CE  06E8               	decf	wreg,f,c
   269  0056D0  E1FD               	bnz	clear_1
   270  0056D2                     end_of_initialization:
   271                           	callstack 0
   272  0056D2                     __end_of__initialization:
   273                           	callstack 0
   274  0056D2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   275  0056D4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   276  0056D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   277  0056D8  6EF8               	movwf	tblptru,c
   278  0056DA  0E0E               	movlw	high __Lsmallconst
   279  0056DC  6EF7               	movwf	tblptrh,c
   280  0056DE  0100               	movlb	0
   281  0056E0  EFAD  F029         	goto	_main	;jump to C main() function
   282                           
   283                           	psect	bssBANK1
   284  000100                     __pbssBANK1:
   285                           	callstack 0
   286  000100                     _memory:
   287                           	callstack 0
   288  000100                     	ds	40
   289  000128                     _EUSART4RXbuf:
   290                           	callstack 0
   291  000128                     	ds	20
   292  00013C                     _motorR:
   293                           	callstack 0
   294  00013C                     	ds	10
   295  000146                     _motorL:
   296                           	callstack 0
   297  000146                     	ds	10
   298  000150                     roundf@F527:
   299                           	callstack 0
   300  000150                     	ds	4
   301  000154                     _nout:
   302                           	callstack 0
   303  000154                     	ds	2
   304  000156                     _width:
   305                           	callstack 0
   306  000156                     	ds	2
   307  000158                     _prec:
   308                           	callstack 0
   309  000158                     	ds	2
   310  00015A                     _flags:
   311                           	callstack 0
   312  00015A                     	ds	2
   313  00015C                     _stop_move:
   314                           	callstack 0
   315  00015C                     	ds	2
   316  00015E                     _start_move:
   317                           	callstack 0
   318  00015E                     	ds	2
   319  000160                     _second:
   320                           	callstack 0
   321  000160                     	ds	2
   322  000162                     _color:
   323                           	callstack 0
   324  000162                     	ds	1
   325  000163                     _array_index:
   326                           	callstack 0
   327  000163                     	ds	1
   328  000164                     _TxBufReadCnt:
   329                           	callstack 0
   330  000164                     	ds	1
   331  000165                     _TxBufWriteCnt:
   332                           	callstack 0
   333  000165                     	ds	1
   334  000166                     _RxBufReadCnt:
   335                           	callstack 0
   336  000166                     	ds	1
   337  000167                     _RxBufWriteCnt:
   338                           	callstack 0
   339  000167                     	ds	1
   340  000168                     _dbuf:
   341                           	callstack 0
   342  000168                     	ds	32
   343                           
   344                           	psect	dataBANK1
   345  0001CE                     __pdataBANK1:
   346                           	callstack 0
   347  0001CE                     _SENSITIVITY:
   348                           	callstack 0
   349  0001CE                     	ds	1
   350  0001CF                     _CALIBRATION_180:
   351                           	callstack 0
   352  0001CF                     	ds	1
   353  0001D0                     _CALIBRATION_135:
   354                           	callstack 0
   355  0001D0                     	ds	1
   356                           
   357                           	psect	bssBANK2
   358  000200                     __pbssBANK2:
   359                           	callstack 0
   360  000200                     _EUSART4TXbuf:
   361                           	callstack 0
   362  000200                     	ds	60
   363                           
   364                           	psect	cstackBANK1
   365  000188                     __pcstackBANK1:
   366                           	callstack 0
   367  000188                     verify_color@m:
   368                           	callstack 0
   369  000188                     test_function@m:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x0
   373  000188                     	ds	2
   374  00018A                     verify_color@w:
   375                           	callstack 0
   376  00018A                     test_function@w:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x2
   380  00018A                     	ds	2
   381  00018C                     verify_color@color2:
   382                           	callstack 0
   383  00018C                     test_function@mL:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x4
   387  00018C                     	ds	2
   388  00018E                     verify_color@color:
   389                           	callstack 0
   390  00018E                     test_function@mR:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x6
   394  00018E                     	ds	2
   395  000190                     test_function@amb_light:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x8
   399  000190                     	ds	2
   400  000192                     test_function@complete:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xA
   404  000192                     	ds	1
   405  000193                     test_function@color:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xB
   409  000193                     	ds	1
   410  000194                     test_function@stop_signal:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xC
   414  000194                     	ds	1
   415  000195                     test_function@test_code:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0xD
   419  000195                     	ds	1
   420  000196                     main@rgb:
   421                           	callstack 0
   422                           
   423                           ; 8 bytes @ 0xE
   424  000196                     	ds	8
   425  00019E                     main@white:
   426                           	callstack 0
   427                           
   428                           ; 28 bytes @ 0x16
   429  00019E                     	ds	28
   430  0001BA                     main@motorL:
   431                           	callstack 0
   432                           
   433                           ; 10 bytes @ 0x32
   434  0001BA                     	ds	10
   435  0001C4                     main@motorR:
   436                           	callstack 0
   437                           
   438                           ; 10 bytes @ 0x3C
   439  0001C4                     	ds	10
   440                           
   441                           	psect	cstackBANK0
   442  000060                     __pcstackBANK0:
   443                           	callstack 0
   444  000060                     ??___fltol:
   445  000060                     ?_sprintf:
   446                           	callstack 0
   447  000060                     sprintf@s:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x0
   451  000060                     	ds	2
   452  000062                     sprintf@fmt:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x2
   456  000062                     	ds	2
   457  000064                     ___fltol@sign1:
   458                           	callstack 0
   459                           
   460                           ; 1 bytes @ 0x4
   461  000064                     	ds	1
   462  000065                     ___fltol@exp1:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x5
   466  000065                     	ds	1
   467  000066                     ?_lroundf:
   468                           	callstack 0
   469  000066                     lroundf@x:
   470                           	callstack 0
   471                           
   472                           ; 4 bytes @ 0x6
   473  000066                     	ds	4
   474  00006A                     ?_amb_light_measure:
   475                           	callstack 0
   476  00006A                     compare@lower:
   477                           	callstack 0
   478  00006A                     amb_light_measure@amb:
   479                           	callstack 0
   480  00006A                     distance_measure@mL:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xA
   484  00006A                     	ds	2
   485  00006C                     ??_amb_light_measure:
   486  00006C                     compare@value2compare:
   487                           	callstack 0
   488  00006C                     distance_measure@mR:
   489                           	callstack 0
   490  00006C                     sprintf@ap:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0xC
   494  00006C                     	ds	2
   495  00006E                     compare@upper:
   496                           	callstack 0
   497  00006E                     amb_light_measure@upper_bound:
   498                           	callstack 0
   499  00006E                     distance_measure@amb_light:
   500                           	callstack 0
   501  00006E                     sprintf@f:
   502                           	callstack 0
   503                           
   504                           ; 11 bytes @ 0xE
   505  00006E                     	ds	2
   506  000070                     ??_distance_measure:
   507  000070                     compare@result:
   508                           	callstack 0
   509  000070                     amb_light_measure@CC_amb_ave:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x10
   513  000070                     	ds	2
   514  000072                     amb_light_measure@CC_amb_1:
   515                           	callstack 0
   516  000072                     distance_measure@CG_amb:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x12
   520  000072                     	ds	2
   521  000074                     amb_light_measure@CC_amb_2:
   522                           	callstack 0
   523  000074                     _distance_measure$3251:
   524                           	callstack 0
   525                           
   526                           ; 4 bytes @ 0x14
   527  000074                     	ds	2
   528  000076                     amb_light_measure@CC_amb_3:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x16
   532  000076                     	ds	2
   533  000078                     distance_measure@CC_amb:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x18
   537  000078                     	ds	1
   538  000079                     detect_color@m:
   539                           	callstack 0
   540  000079                     color_display@buf:
   541                           	callstack 0
   542  000079                     color_predict@buf:
   543                           	callstack 0
   544                           
   545                           ; 100 bytes @ 0x19
   546  000079                     	ds	1
   547  00007A                     distance_measure@threshold:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x1A
   551  00007A                     	ds	1
   552  00007B                     detect_color@w:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x1B
   556  00007B                     	ds	1
   557  00007C                     distance_measure@stop:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x1C
   561  00007C                     	ds	1
   562  00007D                     ??_detect_color:
   563                           
   564                           ; 1 bytes @ 0x1D
   565  00007D                     	ds	4
   566  000081                     detect_color@buf:
   567                           	callstack 0
   568                           
   569                           ; 100 bytes @ 0x21
   570  000081                     	ds	92
   571  0000DD                     color_predict@color:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x7D
   575  0000DD                     	ds	1
   576  0000DE                     color_data_collection@i:
   577                           	callstack 0
   578  0000DE                     goback@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x7E
   582  0000DE                     	ds	2
   583  0000E0                     color_data_collection@j:
   584                           	callstack 0
   585  0000E0                     action@mL:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x80
   589  0000E0                     	ds	2
   590  0000E2                     color_data_collection@k:
   591                           	callstack 0
   592  0000E2                     action@mR:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x82
   596  0000E2                     	ds	2
   597  0000E4                     color_data_collection@x:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x84
   601  0000E4                     	ds	1
   602  0000E5                     detect_color@BC:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x85
   606  0000E5                     	ds	2
   607  0000E7                     detect_color@RG:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x87
   611  0000E7                     	ds	2
   612  0000E9                     detect_color@RB:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x89
   616  0000E9                     	ds	2
   617  0000EB                     detect_color@GB:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x8B
   621  0000EB                     	ds	2
   622  0000ED                     detect_color@GR:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x8D
   626  0000ED                     	ds	2
   627  0000EF                     detect_color@GG:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x8F
   631  0000EF                     	ds	2
   632  0000F1                     detect_color@RR:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x91
   636  0000F1                     	ds	2
   637  0000F3                     detect_color@color:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x93
   641  0000F3                     	ds	1
   642  0000F4                     detect_color@BB:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x94
   646  0000F4                     	ds	2
   647  0000F6                     detect_color@BG:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x96
   651  0000F6                     	ds	2
   652  0000F8                     detect_color@BR:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x98
   656  0000F8                     	ds	2
   657  0000FA                     _detect_color$3250:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x9A
   661  0000FA                     	ds	4
   662  0000FE                     ??_test_function:
   663  0000FE                     ??_verify_color:
   664                           
   665                           ; 1 bytes @ 0x9E
   666  0000FE                     	ds	2
   667                           
   668                           	psect	cstackCOMRAM
   669  000001                     __pcstackCOMRAM:
   670                           	callstack 0
   671  000001                     ??_LED_OFF:
   672  000001                     ??_LED_R:
   673  000001                     ??_LED_C:
   674  000001                     ??_LED_B:
   675  000001                     ??_LED_G:
   676  000001                     ??_I2C_2_Master_Idle:
   677  000001                     ?_strlen:
   678                           	callstack 0
   679  000001                     ?___wmul:
   680                           	callstack 0
   681  000001                     ?___fladd:
   682                           	callstack 0
   683  000001                     ?___flneg:
   684                           	callstack 0
   685  000001                     ?___xxtofl:
   686                           	callstack 0
   687  000001                     ?___aodiv:
   688                           	callstack 0
   689  000001                     ?___aomod:
   690                           	callstack 0
   691  000001                     toggle_light@toggletime:
   692                           	callstack 0
   693  000001                     sendCharSerial4@charToSend:
   694                           	callstack 0
   695  000001                     initDCmotorsPWM@PWMperiod:
   696                           	callstack 0
   697  000001                     initDCmotors_parameter@motorL:
   698                           	callstack 0
   699  000001                     ___wmul@multiplier:
   700                           	callstack 0
   701  000001                     fputc@c:
   702                           	callstack 0
   703  000001                     strlen@s:
   704                           	callstack 0
   705  000001                     ___flge@ff1:
   706                           	callstack 0
   707  000001                     ___flneg@f1:
   708                           	callstack 0
   709  000001                     ___fladd@b:
   710                           	callstack 0
   711  000001                     ___xxtofl@val:
   712                           	callstack 0
   713  000001                     ___aodiv@dividend:
   714                           	callstack 0
   715  000001                     ___aomod@dividend:
   716                           	callstack 0
   717                           
   718                           ; 8 bytes @ 0x0
   719  000001                     	ds	1
   720  000002                     ??_I2C_2_Master_Read:
   721  000002                     ??_toggle_light:
   722  000002                     I2C_2_Master_Write@data_byte:
   723                           	callstack 0
   724  000002                     sendStringSerial4@string:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x1
   728  000002                     	ds	1
   729  000003                     color_writetoaddr@value:
   730                           	callstack 0
   731  000003                     I2C_2_Master_Read@ack:
   732                           	callstack 0
   733  000003                     initDCmotors_parameter@motorR:
   734                           	callstack 0
   735  000003                     ___wmul@multiplicand:
   736                           	callstack 0
   737  000003                     fputc@fp:
   738                           	callstack 0
   739  000003                     strlen@a:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x2
   743  000003                     	ds	1
   744  000004                     toggle_light@i:
   745                           	callstack 0
   746  000004                     color_writetoaddr@address:
   747                           	callstack 0
   748  000004                     I2C_2_Master_Read@tmp:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x3
   752  000004                     	ds	1
   753  000005                     ??_fputc:
   754  000005                     ??_color_click_init:
   755  000005                     ??___xxtofl:
   756  000005                     ?_color_read_Red:
   757                           	callstack 0
   758  000005                     ?_color_read_Blue:
   759                           	callstack 0
   760  000005                     ?_color_read_Green:
   761                           	callstack 0
   762  000005                     ?_color_read_Clear:
   763                           	callstack 0
   764  000005                     toggle_light@lightnumber:
   765                           	callstack 0
   766  000005                     ___wmul@product:
   767                           	callstack 0
   768  000005                     ___flge@ff2:
   769                           	callstack 0
   770  000005                     ___fladd@a:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x4
   774  000005                     	ds	2
   775  000007                     ??_color_read_Red:
   776  000007                     ??_color_read_Blue:
   777  000007                     ??_color_read_Green:
   778  000007                     ??_color_read_Clear:
   779  000007                     ?___awdiv:
   780                           	callstack 0
   781  000007                     ___awdiv@dividend:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x6
   785  000007                     	ds	2
   786  000009                     ??___fladd:
   787  000009                     ??___flge:
   788  000009                     ___xxtofl@sign:
   789                           	callstack 0
   790  000009                     ___awdiv@divisor:
   791                           	callstack 0
   792  000009                     ___aodiv@divisor:
   793                           	callstack 0
   794  000009                     ___aomod@divisor:
   795                           	callstack 0
   796                           
   797                           ; 8 bytes @ 0x8
   798  000009                     	ds	1
   799  00000A                     ___xxtofl@exp:
   800                           	callstack 0
   801  00000A                     color_read_Red@tmp:
   802                           	callstack 0
   803  00000A                     color_read_Blue@tmp:
   804                           	callstack 0
   805  00000A                     color_read_Green@tmp:
   806                           	callstack 0
   807  00000A                     color_read_Clear@tmp:
   808                           	callstack 0
   809  00000A                     fputs@s:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x9
   813  00000A                     	ds	1
   814  00000B                     ___awdiv@counter:
   815                           	callstack 0
   816  00000B                     ___xxtofl@arg:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0xA
   820  00000B                     	ds	1
   821  00000C                     ___awdiv@sign:
   822                           	callstack 0
   823  00000C                     read_color@m:
   824                           	callstack 0
   825  00000C                     calibrate_white@w:
   826                           	callstack 0
   827  00000C                     fputs@fp:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0xB
   831  00000C                     	ds	1
   832  00000D                     ___fladd@signs:
   833                           	callstack 0
   834  00000D                     ___awdiv@quotient:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0xC
   838  00000D                     	ds	1
   839  00000E                     ??_calibrate_white:
   840  00000E                     ___fladd@aexp:
   841                           	callstack 0
   842  00000E                     fputs@c:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0xD
   846  00000E                     	ds	1
   847  00000F                     ?___fldiv:
   848                           	callstack 0
   849  00000F                     ___fladd@bexp:
   850                           	callstack 0
   851  00000F                     setMotorPWM@m:
   852                           	callstack 0
   853  00000F                     fputs@i:
   854                           	callstack 0
   855  00000F                     ___fldiv@b:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0xE
   859  00000F                     	ds	1
   860  000010                     ___fladd@grs:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0xF
   864  000010                     	ds	1
   865  000011                     ??_setMotorPWM:
   866  000011                     ?_pad:
   867                           	callstack 0
   868  000011                     ?___flsub:
   869                           	callstack 0
   870  000011                     ___aodiv@counter:
   871                           	callstack 0
   872  000011                     ___aomod@counter:
   873                           	callstack 0
   874  000011                     pad@fp:
   875                           	callstack 0
   876  000011                     ___flsub@b:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x10
   880  000011                     	ds	1
   881  000012                     ___aodiv@sign:
   882                           	callstack 0
   883  000012                     ___aomod@sign:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x11
   887  000012                     	ds	1
   888  000013                     ?_abs:
   889                           	callstack 0
   890  000013                     pad@buf:
   891                           	callstack 0
   892  000013                     abs@a:
   893                           	callstack 0
   894  000013                     ___fldiv@a:
   895                           	callstack 0
   896  000013                     ___aodiv@quotient:
   897                           	callstack 0
   898                           
   899                           ; 8 bytes @ 0x12
   900  000013                     	ds	2
   901  000015                     ??_abs:
   902  000015                     pad@p:
   903                           	callstack 0
   904  000015                     ___flsub@a:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x14
   908  000015                     	ds	2
   909  000017                     ??___fldiv:
   910  000017                     ??_pad:
   911                           
   912                           ; 1 bytes @ 0x16
   913  000017                     	ds	1
   914  000018                     setMotorPWM@PWMduty:
   915                           	callstack 0
   916  000018                     pad@i:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x17
   920  000018                     	ds	1
   921  000019                     
   922                           ; 1 bytes @ 0x18
   923  000019                     	ds	1
   924  00001A                     stop@mL:
   925                           	callstack 0
   926  00001A                     fullSpeedAhead@mL:
   927                           	callstack 0
   928  00001A                     pad@w:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x19
   932  00001A                     	ds	1
   933  00001B                     ___fldiv@rem:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x1A
   937  00001B                     	ds	1
   938  00001C                     ?_dtoa:
   939                           	callstack 0
   940  00001C                     stop@mR:
   941                           	callstack 0
   942  00001C                     fullSpeedAhead@mR:
   943                           	callstack 0
   944  00001C                     dtoa@fp:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x1B
   948  00001C                     	ds	2
   949  00001E                     ??_stop:
   950  00001E                     ??_fullSpeedAhead:
   951  00001E                     dtoa@d:
   952                           	callstack 0
   953                           
   954                           ; 8 bytes @ 0x1D
   955  00001E                     	ds	1
   956  00001F                     ___fldiv@sign:
   957                           	callstack 0
   958                           
   959                           ; 1 bytes @ 0x1E
   960  00001F                     	ds	1
   961  000020                     turnLeft@mL:
   962                           	callstack 0
   963  000020                     turnRight@mL:
   964                           	callstack 0
   965  000020                     fullSpeedAhead_test@mL:
   966                           	callstack 0
   967  000020                     fullSpeedBack@mL:
   968                           	callstack 0
   969  000020                     ___fldiv@new_exp:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x1F
   973  000020                     	ds	2
   974  000022                     turnLeft@mR:
   975                           	callstack 0
   976  000022                     turnRight@mR:
   977                           	callstack 0
   978  000022                     fullSpeedAhead_test@mR:
   979                           	callstack 0
   980  000022                     fullSpeedBack@mR:
   981                           	callstack 0
   982  000022                     ___fldiv@grs:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x21
   986  000022                     	ds	2
   987  000024                     ??_fullSpeedAhead_test:
   988  000024                     ??_fullSpeedBack:
   989  000024                     turnLeft@angle_left:
   990                           	callstack 0
   991  000024                     turnRight@angle_right:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x23
   995  000024                     	ds	1
   996  000025                     ??_turnLeft:
   997  000025                     ??_turnRight:
   998                           
   999                           ; 1 bytes @ 0x24
  1000  000025                     	ds	1
  1001  000026                     ??_dtoa:
  1002  000026                     ___fldiv@bexp:
  1003                           	callstack 0
  1004  000026                     turnLeft@delay_135:
  1005                           	callstack 0
  1006  000026                     turnRight@delay_135:
  1007                           	callstack 0
  1008  000026                     short_reverse@mL:
  1009                           	callstack 0
  1010  000026                     reverse_square@mL:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x25
  1014  000026                     	ds	1
  1015  000027                     ___fldiv@aexp:
  1016                           	callstack 0
  1017                           
  1018                           ; 1 bytes @ 0x26
  1019  000027                     	ds	1
  1020  000028                     ?___flmul:
  1021                           	callstack 0
  1022  000028                     turnLeft@delay_180:
  1023                           	callstack 0
  1024  000028                     turnRight@delay_180:
  1025                           	callstack 0
  1026  000028                     short_reverse@mR:
  1027                           	callstack 0
  1028  000028                     reverse_square@mR:
  1029                           	callstack 0
  1030  000028                     ___flmul@b:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x27
  1034  000028                     	ds	2
  1035  00002A                     ??_short_reverse:
  1036  00002A                     ??_reverse_square:
  1037  00002A                     turnLeft@i:
  1038                           	callstack 0
  1039  00002A                     turnRight@i:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x29
  1043  00002A                     	ds	2
  1044  00002C                     turnLeft@i_1337:
  1045                           	callstack 0
  1046  00002C                     turnRight@i_1362:
  1047                           	callstack 0
  1048  00002C                     ___flmul@a:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x2B
  1052  00002C                     	ds	2
  1053  00002E                     turnLeft@i_1338:
  1054                           	callstack 0
  1055  00002E                     turnRight@i_1363:
  1056                           	callstack 0
  1057  00002E                     _dtoa$2887:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x2D
  1061  00002E                     	ds	2
  1062  000030                     ??___flmul:
  1063  000030                     turnLeft@delay:
  1064                           	callstack 0
  1065  000030                     turnRight@delay:
  1066                           	callstack 0
  1067  000030                     dtoa@p:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x2F
  1071  000030                     	ds	2
  1072  000032                     test_action@mL:
  1073                           	callstack 0
  1074  000032                     dtoa@w:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x31
  1078  000032                     	ds	2
  1079  000034                     ___flmul@sign:
  1080                           	callstack 0
  1081  000034                     test_action@mR:
  1082                           	callstack 0
  1083  000034                     dtoa@s:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x33
  1087  000034                     	ds	1
  1088  000035                     ___flmul@grs:
  1089                           	callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x34
  1092  000035                     	ds	1
  1093  000036                     dtoa@n:
  1094                           	callstack 0
  1095                           
  1096                           ; 8 bytes @ 0x35
  1097  000036                     	ds	3
  1098  000039                     ___flmul@aexp:
  1099                           	callstack 0
  1100                           
  1101                           ; 1 bytes @ 0x38
  1102  000039                     	ds	1
  1103  00003A                     ___flmul@bexp:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x39
  1107  00003A                     	ds	1
  1108  00003B                     ___flmul@prod:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x3A
  1112  00003B                     	ds	3
  1113  00003E                     dtoa@i:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x3D
  1117  00003E                     	ds	1
  1118  00003F                     ___flmul@temp:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x3E
  1122  00003F                     	ds	1
  1123  000040                     ?_vfpfcnvrt:
  1124                           	callstack 0
  1125  000040                     vfpfcnvrt@fp:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x3F
  1129  000040                     	ds	1
  1130  000041                     ?_roundf:
  1131                           	callstack 0
  1132  000041                     roundf@x:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x40
  1136  000041                     	ds	1
  1137  000042                     vfpfcnvrt@fmt:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x41
  1141  000042                     	ds	2
  1142  000044                     vfpfcnvrt@ap:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x43
  1146  000044                     	ds	1
  1147  000045                     ??_roundf:
  1148                           
  1149                           ; 1 bytes @ 0x44
  1150  000045                     	ds	1
  1151  000046                     ??_vfpfcnvrt:
  1152                           
  1153                           ; 1 bytes @ 0x45
  1154  000046                     	ds	2
  1155  000048                     vfpfcnvrt@ll:
  1156                           	callstack 0
  1157                           
  1158                           ; 8 bytes @ 0x47
  1159  000048                     	ds	1
  1160  000049                     _roundf$3253:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x48
  1164  000049                     	ds	4
  1165  00004D                     roundf@e:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x4C
  1169  00004D                     	ds	2
  1170  00004F                     _roundf$3252:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0x4E
  1174  00004F                     	ds	1
  1175  000050                     ?_vfprintf:
  1176                           	callstack 0
  1177  000050                     vfprintf@fp:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x4F
  1181  000050                     	ds	2
  1182  000052                     vfprintf@fmt:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x51
  1186  000052                     	ds	1
  1187  000053                     roundf@u:
  1188                           	callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x52
  1191  000053                     	ds	1
  1192  000054                     vfprintf@ap:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x53
  1196  000054                     	ds	2
  1197  000056                     vfprintf@cfmt:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x55
  1201  000056                     	ds	1
  1202  000057                     roundf@y:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x56
  1206  000057                     	ds	1
  1207  000058                     color_display@m:
  1208                           	callstack 0
  1209  000058                     goback@mL:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x57
  1213  000058                     	ds	2
  1214  00005A                     color_data_collection@m:
  1215                           	callstack 0
  1216  00005A                     goback@mR:
  1217                           	callstack 0
  1218                           
  1219                           ; 2 bytes @ 0x59
  1220  00005A                     	ds	1
  1221  00005B                     ?___fltol:
  1222                           	callstack 0
  1223  00005B                     ___fltol@f1:
  1224                           	callstack 0
  1225                           
  1226                           ; 4 bytes @ 0x5A
  1227  00005B                     	ds	1
  1228  00005C                     ??_goback:
  1229  00005C                     ??_color_data_collection:
  1230                           
  1231                           ; 1 bytes @ 0x5B
  1232  00005C                     	ds	2
  1233  00005E                     action@color:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x5D
  1237  00005E                     	ds	1
  1238  00005F                     
  1239                           ; 1 bytes @ 0x5E
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 29 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  white          28   22[BANK1 ] struct white_card
  1250 ;;  motorR         10   60[BANK1 ] struct DC_motor
  1251 ;;  motorL         10   50[BANK1 ] struct DC_motor
  1252 ;;  rgb             8   14[BANK1 ] struct color_rgb
  1253 ;;  amb             8    0        struct color_rgb
  1254 ;;  amb_light       2    0        unsigned int 
  1255 ;;  stop_signal     1    0        unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1268 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1269 ;;Total ram usage:       56 bytes
  1270 ;; Hardware stack levels required when called: 12
  1271 ;; This function calls:
  1272 ;;		_I2C_2_Master_Init
  1273 ;;		_Interrupts_init
  1274 ;;		_Timer0_init
  1275 ;;		_action
  1276 ;;		_amb_light_measure
  1277 ;;		_buggylight_init
  1278 ;;		_calibrate_white
  1279 ;;		_color_click_init
  1280 ;;		_color_predict
  1281 ;;		_detect_color
  1282 ;;		_distance_measure
  1283 ;;		_fullSpeedAhead
  1284 ;;		_initDCmotorsPWM
  1285 ;;		_initDCmotors_parameter
  1286 ;;		_initUSART4
  1287 ;;		_pin_init
  1288 ;;		_stop
  1289 ;;		_test_action
  1290 ;;		_test_function
  1291 ;;		_verify_color
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           	psect	text0
  1298  00535A                     __ptext0:
  1299                           	callstack 0
  1300  00535A                     _main:
  1301                           	callstack 19
  1302  00535A                     
  1303                           ;main.c: 32:     I2C_2_Master_Init();
  1304  00535A  EC35  F02D         	call	_I2C_2_Master_Init	;wreg free
  1305  00535E                     
  1306                           ;main.c: 33:     color_click_init();
  1307  00535E  ECEC  F02C         	call	_color_click_init	;wreg free
  1308  005362                     
  1309                           ;main.c: 34:     initDCmotorsPWM(199);
  1310  005362  0E00               	movlw	0
  1311  005364  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1312  005366  0EC7               	movlw	199
  1313  005368  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1314  00536A  ECF9  F02B         	call	_initDCmotorsPWM	;wreg free
  1315  00536E                     
  1316                           ;main.c: 35:     buggylight_init();
  1317  00536E  EC0B  F02E         	call	_buggylight_init	;wreg free
  1318  005372                     
  1319                           ;main.c: 36:     initUSART4();
  1320  005372  ECE1  F02D         	call	_initUSART4	;wreg free
  1321  005376                     
  1322                           ;main.c: 37:     Timer0_init();
  1323  005376  ECF0  F02D         	call	_Timer0_init	;wreg free
  1324  00537A                     
  1325                           ;main.c: 38:     Interrupts_init();
  1326  00537A  EC1C  F02E         	call	_Interrupts_init	;wreg free
  1327  00537E                     
  1328                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1329  00537E  ECC1  F02D         	call	_pin_init	;wreg free
  1330  005382                     
  1331                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1332  005382  0EBA               	movlw	low main@motorL
  1333  005384  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1334  005386  0E01               	movlw	high main@motorL
  1335  005388  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1336  00538A  0EC4               	movlw	low main@motorR
  1337  00538C  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1338  00538E  0E01               	movlw	high main@motorR
  1339  005390  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1340  005392  EC6A  F026         	call	_initDCmotors_parameter	;wreg free
  1341  005396                     
  1342                           ;main.c: 52:     test_action(&motorL, &motorR);
  1343  005396  0EBA               	movlw	low main@motorL
  1344  005398  6E32               	movwf	test_action@mL^0,c
  1345  00539A  0E01               	movlw	high main@motorL
  1346  00539C  6E33               	movwf	(test_action@mL+1)^0,c
  1347  00539E  0EC4               	movlw	low main@motorR
  1348  0053A0  6E34               	movwf	test_action@mR^0,c
  1349  0053A2  0E01               	movlw	high main@motorR
  1350  0053A4  6E35               	movwf	(test_action@mR+1)^0,c
  1351  0053A6  EC9B  F01D         	call	_test_action	;wreg free
  1352  0053AA                     l5560:
  1353                           
  1354                           ;main.c: 61:             test_function(2, &rgb, &white, &motorL, &motorR);
  1355  0053AA  0E96               	movlw	low main@rgb
  1356  0053AC  0101               	movlb	1	; () banked
  1357  0053AE  6F88               	movwf	test_function@m& (0+255),b
  1358  0053B0  0E01               	movlw	high main@rgb
  1359  0053B2  6F89               	movwf	(test_function@m+1)& (0+255),b
  1360  0053B4  0E9E               	movlw	low main@white
  1361  0053B6  6F8A               	movwf	test_function@w& (0+255),b
  1362  0053B8  0E01               	movlw	high main@white
  1363  0053BA  6F8B               	movwf	(test_function@w+1)& (0+255),b
  1364  0053BC  0EBA               	movlw	low main@motorL
  1365  0053BE  6F8C               	movwf	test_function@mL& (0+255),b
  1366  0053C0  0E01               	movlw	high main@motorL
  1367  0053C2  6F8D               	movwf	(test_function@mL+1)& (0+255),b
  1368  0053C4  0EC4               	movlw	low main@motorR
  1369  0053C6  6F8E               	movwf	test_function@mR& (0+255),b
  1370  0053C8  0E01               	movlw	high main@motorR
  1371  0053CA  6F8F               	movwf	(test_function@mR+1)& (0+255),b
  1372  0053CC  0E02               	movlw	2
  1373  0053CE  EC95  F022         	call	_test_function
  1374  0053D2  EFD5  F029         	goto	l5560
  1375  0053D6  EF14  F000         	goto	start
  1376  0053DA                     __end_of_main:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _verify_color *****************
  1380 ;; Defined at:
  1381 ;;		line 363 in file "color.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  color           1    wreg     unsigned char 
  1384 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1385 ;;		 -> main@rgb(8), 
  1386 ;;  w               2    2[BANK1 ] PTR struct white_card
  1387 ;;		 -> main@white(28), 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  color           1    6[BANK1 ] unsigned char 
  1390 ;;  color2          2    4[BANK1 ] unsigned int 
  1391 ;;  color3          2    0        unsigned int 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1401 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;Total ram usage:        9 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 10
  1408 ;; This function calls:
  1409 ;;		_detect_color
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text1
  1416  0052D0                     __ptext1:
  1417                           	callstack 0
  1418  0052D0                     _verify_color:
  1419                           	callstack 20
  1420                           
  1421                           ;incstack = 0
  1422                           ;verify_color@color stored from wreg
  1423  0052D0  0101               	movlb	1	; () banked
  1424  0052D2  6F8E               	movwf	verify_color@color& (0+255),b
  1425  0052D4                     
  1426                           ;color.c: 363: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 364: {;color.c: 365:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1427  0052D4  0E05               	movlw	5
  1428  0052D6  0100               	movlb	0	; () banked
  1429  0052D8  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1430  0052DA  0E0F               	movlw	15
  1431  0052DC  6FFE               	movwf	??_verify_color& (0+255),b
  1432  0052DE  0EF1               	movlw	241
  1433  0052E0                     u5647:
  1434  0052E0  2EE8               	decfsz	wreg,f,c
  1435  0052E2  D7FE               	bra	u5647
  1436  0052E4  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1437  0052E6  D7FC               	bra	u5647
  1438  0052E8  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1439  0052EA  D7FA               	bra	u5647
  1440  0052EC                     
  1441                           ;color.c: 366:     unsigned int color2, color3;;color.c: 367:     color2 = detect_color(
      +                          m,w);
  1442  0052EC  C188  F079         	movff	verify_color@m,detect_color@m
  1443  0052F0  C189  F07A         	movff	verify_color@m+1,detect_color@m+1
  1444  0052F4  C18A  F07B         	movff	verify_color@w,detect_color@w
  1445  0052F8  C18B  F07C         	movff	verify_color@w+1,detect_color@w+1
  1446  0052FC  EC0A  F007         	call	_detect_color	;wreg free
  1447  005300  0100               	movlb	0	; () banked
  1448  005302  6FFE               	movwf	??_verify_color& (0+255),b
  1449  005304  51FE               	movf	??_verify_color& (0+255),w,b
  1450  005306  0101               	movlb	1	; () banked
  1451  005308  6F8C               	movwf	verify_color@color2& (0+255),b
  1452  00530A  6B8D               	clrf	(verify_color@color2+1)& (0+255),b
  1453  00530C                     
  1454                           ; BSR set to: 1
  1455                           ;color.c: 368:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1456  00530C  0E05               	movlw	5
  1457  00530E  0100               	movlb	0	; () banked
  1458  005310  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1459  005312  0E0F               	movlw	15
  1460  005314  6FFE               	movwf	??_verify_color& (0+255),b
  1461  005316  0EF1               	movlw	241
  1462  005318                     u5657:
  1463  005318  2EE8               	decfsz	wreg,f,c
  1464  00531A  D7FE               	bra	u5657
  1465  00531C  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1466  00531E  D7FC               	bra	u5657
  1467  005320  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1468  005322  D7FA               	bra	u5657
  1469  005324                     
  1470                           ;color.c: 370:     if (color == color2){return color;}
  1471  005324  0101               	movlb	1	; () banked
  1472  005326  518E               	movf	verify_color@color& (0+255),w,b
  1473  005328  0100               	movlb	0	; () banked
  1474  00532A  6FFE               	movwf	??_verify_color& (0+255),b
  1475  00532C  6BFF               	clrf	(??_verify_color+1)& (0+255),b
  1476  00532E  0101               	movlb	1	; () banked
  1477  005330  518C               	movf	verify_color@color2& (0+255),w,b
  1478  005332  0100               	movlb	0	; () banked
  1479  005334  19FE               	xorwf	??_verify_color& (0+255),w,b
  1480  005336  E109               	bnz	u5321
  1481  005338  0101               	movlb	1	; () banked
  1482  00533A  518D               	movf	(verify_color@color2+1)& (0+255),w,b
  1483  00533C  0100               	movlb	0	; () banked
  1484  00533E  19FF               	xorwf	(??_verify_color+1)& (0+255),w,b
  1485  005340  A4D8               	btfss	status,2,c
  1486  005342  EFA5  F029         	goto	u5321
  1487  005346  EFA7  F029         	goto	u5320
  1488  00534A                     u5321:
  1489  00534A  EFAB  F029         	goto	l5312
  1490  00534E                     u5320:
  1491  00534E                     
  1492                           ; BSR set to: 0
  1493  00534E  0101               	movlb	1	; () banked
  1494  005350  518E               	movf	verify_color@color& (0+255),w,b
  1495  005352  EFAC  F029         	goto	l168
  1496  005356                     l5312:
  1497                           
  1498                           ; BSR set to: 0
  1499                           ;color.c: 373:         return color;}
  1500  005356  0E00               	movlw	0
  1501  005358                     l168:
  1502  005358  0012               	return		;funcret
  1503  00535A                     __end_of_verify_color:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _test_function *****************
  1507 ;; Defined at:
  1508 ;;		line 16 in file "test_and_calibration.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  test_code       1    wreg     unsigned char 
  1511 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1512 ;;		 -> main@rgb(8), 
  1513 ;;  w               2    2[BANK1 ] PTR struct white_card
  1514 ;;		 -> main@white(28), 
  1515 ;;  mL              2    4[BANK1 ] PTR struct DC_motor
  1516 ;;		 -> main@motorL(10), 
  1517 ;;  mR              2    6[BANK1 ] PTR struct DC_motor
  1518 ;;		 -> main@motorR(10), 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  test_code       1   13[BANK1 ] unsigned char 
  1521 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1522 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  1523 ;;  color           1   11[BANK1 ] unsigned char 
  1524 ;;  complete        1   10[BANK1 ] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      void 
  1527 ;; Registers used:
  1528 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1534 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;Total ram usage:       16 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 11
  1541 ;; This function calls:
  1542 ;;		_LED_C
  1543 ;;		_amb_light_measure
  1544 ;;		_calibrate_white
  1545 ;;		_color_data_collection
  1546 ;;		_color_display
  1547 ;;		_color_predict
  1548 ;;		_detect_color
  1549 ;;		_distance_measure
  1550 ;;		_fullSpeedAhead
  1551 ;;		_read_color
  1552 ;;		_stop
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text2
  1559  00452A                     __ptext2:
  1560                           	callstack 0
  1561  00452A                     _test_function:
  1562                           	callstack 19
  1563                           
  1564                           ;incstack = 0
  1565                           ;test_function@test_code stored from wreg
  1566  00452A  0101               	movlb	1	; () banked
  1567  00452C  6F95               	movwf	test_function@test_code& (0+255),b
  1568  00452E                     
  1569                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1570  00452E  0E00               	movlw	0
  1571  004530  0101               	movlb	1	; () banked
  1572  004532  6F92               	movwf	test_function@complete& (0+255),b
  1573                           
  1574                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1575  004534  0E00               	movlw	0
  1576  004536  6F94               	movwf	test_function@stop_signal& (0+255),b
  1577                           
  1578                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1579  004538  0E00               	movlw	0
  1580  00453A  6F91               	movwf	(test_function@amb_light+1)& (0+255),b
  1581  00453C  0E00               	movlw	0
  1582  00453E  6F90               	movwf	test_function@amb_light& (0+255),b
  1583  004540                     
  1584                           ; BSR set to: 1
  1585                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1586  004540  0E02               	movlw	2
  1587  004542  1995               	xorwf	test_function@test_code& (0+255),w,b
  1588  004544  A4D8               	btfss	status,2,c
  1589  004546  EFA7  F022         	goto	u5351
  1590  00454A  EFA9  F022         	goto	u5350
  1591  00454E                     u5351:
  1592  00454E  EFAF  F022         	goto	l5374
  1593  004552                     u5350:
  1594  004552                     
  1595                           ; BSR set to: 1
  1596  004552  C18A  F00C         	movff	test_function@w,calibrate_white@w
  1597  004556  C18B  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1598  00455A  ECAC  F01B         	call	_calibrate_white	;wreg free
  1599  00455E                     l5374:
  1600                           
  1601                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1602  00455E  0E04               	movlw	4
  1603  004560  0101               	movlb	1	; () banked
  1604  004562  1995               	xorwf	test_function@test_code& (0+255),w,b
  1605  004564  A4D8               	btfss	status,2,c
  1606  004566  EFB7  F022         	goto	u5361
  1607  00456A  EFB9  F022         	goto	u5360
  1608  00456E                     u5361:
  1609  00456E  EFC3  F022         	goto	l5378
  1610  004572                     u5360:
  1611  004572                     
  1612                           ; BSR set to: 1
  1613  004572  C188  F06A         	movff	test_function@m,amb_light_measure@amb
  1614  004576  C189  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1615  00457A  ECD0  F024         	call	_amb_light_measure	;wreg free
  1616  00457E  C06A  F190         	movff	?_amb_light_measure,test_function@amb_light
  1617  004582  C06B  F191         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1618  004586                     l5378:
  1619                           
  1620                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1621  004586  0101               	movlb	1	; () banked
  1622  004588  0595               	decf	test_function@test_code& (0+255),w,b
  1623  00458A  A4D8               	btfss	status,2,c
  1624  00458C  EFCA  F022         	goto	u5371
  1625  004590  EFCC  F022         	goto	u5370
  1626  004594                     u5371:
  1627  004594  EFDA  F022         	goto	l5386
  1628  004598                     u5370:
  1629  004598                     
  1630                           ; BSR set to: 1
  1631                           ;test_and_calibration.c: 29:             LED_C();
  1632  004598  ECB1  F02D         	call	_LED_C	;wreg free
  1633  00459C                     
  1634                           ;test_and_calibration.c: 30:             read_color(m);
  1635  00459C  C188  F00C         	movff	test_function@m,read_color@m
  1636  0045A0  C189  F00D         	movff	test_function@m+1,read_color@m+1
  1637  0045A4  EC56  F02A         	call	_read_color	;wreg free
  1638  0045A8                     
  1639                           ;test_and_calibration.c: 31:             color_display(m);
  1640  0045A8  C188  F058         	movff	test_function@m,color_display@m
  1641  0045AC  C189  F059         	movff	test_function@m+1,color_display@m+1
  1642  0045B0  ECED  F029         	call	_color_display	;wreg free
  1643  0045B4                     l5386:
  1644                           
  1645                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1646  0045B4  0E02               	movlw	2
  1647  0045B6  0101               	movlb	1	; () banked
  1648  0045B8  1995               	xorwf	test_function@test_code& (0+255),w,b
  1649  0045BA  A4D8               	btfss	status,2,c
  1650  0045BC  EFE2  F022         	goto	u5381
  1651  0045C0  EFE4  F022         	goto	u5380
  1652  0045C4                     u5381:
  1653  0045C4  EFF3  F022         	goto	l5392
  1654  0045C8                     u5380:
  1655  0045C8                     
  1656                           ; BSR set to: 1
  1657                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1658  0045C8  C188  F079         	movff	test_function@m,detect_color@m
  1659  0045CC  C189  F07A         	movff	test_function@m+1,detect_color@m+1
  1660  0045D0  C18A  F07B         	movff	test_function@w,detect_color@w
  1661  0045D4  C18B  F07C         	movff	test_function@w+1,detect_color@w+1
  1662  0045D8  EC0A  F007         	call	_detect_color	;wreg free
  1663  0045DC  0101               	movlb	1	; () banked
  1664  0045DE  6F93               	movwf	test_function@color& (0+255),b
  1665  0045E0                     
  1666                           ; BSR set to: 1
  1667                           ;test_and_calibration.c: 37:             color_predict(color);
  1668  0045E0  5193               	movf	test_function@color& (0+255),w,b
  1669  0045E2  EC1E  F02D         	call	_color_predict
  1670  0045E6                     l5392:
  1671                           
  1672                           ;test_and_calibration.c: 40:         if (test_code == 3){
  1673  0045E6  0E03               	movlw	3
  1674  0045E8  0101               	movlb	1	; () banked
  1675  0045EA  1995               	xorwf	test_function@test_code& (0+255),w,b
  1676  0045EC  A4D8               	btfss	status,2,c
  1677  0045EE  EFFB  F022         	goto	u5391
  1678  0045F2  EFFD  F022         	goto	u5390
  1679  0045F6                     u5391:
  1680  0045F6  EF10  F023         	goto	l5402
  1681  0045FA                     u5390:
  1682  0045FA  EF08  F023         	goto	l5400
  1683  0045FE                     l5396:
  1684                           
  1685                           ; BSR set to: 1
  1686                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  1687  0045FE  C188  F05A         	movff	test_function@m,color_data_collection@m
  1688  004602  C189  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1689  004606  EC78  F01E         	call	_color_data_collection	;wreg free
  1690  00460A                     
  1691                           ;test_and_calibration.c: 43:                 complete = 1;
  1692  00460A  0E01               	movlw	1
  1693  00460C  0101               	movlb	1	; () banked
  1694  00460E  6F92               	movwf	test_function@complete& (0+255),b
  1695  004610                     l5400:
  1696                           
  1697                           ; BSR set to: 1
  1698                           ;test_and_calibration.c: 41:             while (complete == 0){
  1699  004610  5192               	movf	test_function@complete& (0+255),w,b
  1700  004612  B4D8               	btfsc	status,2,c
  1701  004614  EF0E  F023         	goto	u5401
  1702  004618  EF10  F023         	goto	u5400
  1703  00461C                     u5401:
  1704  00461C  EFFF  F022         	goto	l5396
  1705  004620                     u5400:
  1706  004620                     l5402:
  1707                           
  1708                           ; BSR set to: 1
  1709                           ;test_and_calibration.c: 47:         if (test_code == 4){
  1710  004620  0E04               	movlw	4
  1711  004622  1995               	xorwf	test_function@test_code& (0+255),w,b
  1712  004624  A4D8               	btfss	status,2,c
  1713  004626  EF17  F023         	goto	u5411
  1714  00462A  EF19  F023         	goto	u5410
  1715  00462E                     u5411:
  1716  00462E  EFC3  F022         	goto	l5378
  1717  004632                     u5410:
  1718  004632  EF35  F023         	goto	l5410
  1719  004636                     l5406:
  1720                           
  1721                           ; BSR set to: 1
  1722                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  1723  004636  C18C  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1724  00463A  C18D  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1725  00463E  C18E  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1726  004642  C18F  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1727  004646  EC1E  F029         	call	_fullSpeedAhead	;wreg free
  1728  00464A                     
  1729                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1730  00464A  C18C  F06A         	movff	test_function@mL,distance_measure@mL
  1731  00464E  C18D  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1732  004652  C18E  F06C         	movff	test_function@mR,distance_measure@mR
  1733  004656  C18F  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1734  00465A  C190  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1735  00465E  C191  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1736  004662  EC38  F027         	call	_distance_measure	;wreg free
  1737  004666  0101               	movlb	1	; () banked
  1738  004668  6F94               	movwf	test_function@stop_signal& (0+255),b
  1739  00466A                     l5410:
  1740                           
  1741                           ; BSR set to: 1
  1742                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  1743  00466A  5194               	movf	test_function@stop_signal& (0+255),w,b
  1744  00466C  B4D8               	btfsc	status,2,c
  1745  00466E  EF3B  F023         	goto	u5421
  1746  004672  EF3D  F023         	goto	u5420
  1747  004676                     u5421:
  1748  004676  EF1B  F023         	goto	l5406
  1749  00467A                     u5420:
  1750  00467A                     
  1751                           ; BSR set to: 1
  1752                           ;test_and_calibration.c: 52:             stop(mL, mR);
  1753  00467A  C18C  F01A         	movff	test_function@mL,stop@mL
  1754  00467E  C18D  F01B         	movff	test_function@mL+1,stop@mL+1
  1755  004682  C18E  F01C         	movff	test_function@mR,stop@mR
  1756  004686  C18F  F01D         	movff	test_function@mR+1,stop@mR+1
  1757  00468A  ECC0  F028         	call	_stop	;wreg free
  1758  00468E                     
  1759                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1760  00468E  0E52               	movlw	82
  1761  004690  0100               	movlb	0	; () banked
  1762  004692  6FFF               	movwf	(??_test_function+1)& (0+255),b
  1763  004694  0E2B               	movlw	43
  1764  004696  6FFE               	movwf	??_test_function& (0+255),b
  1765  004698  0E00               	movlw	0
  1766  00469A                     u5667:
  1767  00469A  2EE8               	decfsz	wreg,f,c
  1768  00469C  D7FE               	bra	u5667
  1769  00469E  2FFE               	decfsz	??_test_function& (0+255),f,b
  1770  0046A0  D7FC               	bra	u5667
  1771  0046A2  2FFF               	decfsz	(??_test_function+1)& (0+255),f,b
  1772  0046A4  D7FA               	bra	u5667
  1773  0046A6  F000               	nop	
  1774  0046A8                     
  1775                           ;test_and_calibration.c: 54:             stop_signal = 0;
  1776  0046A8  0E00               	movlw	0
  1777  0046AA  0101               	movlb	1	; () banked
  1778  0046AC  6F94               	movwf	test_function@stop_signal& (0+255),b
  1779  0046AE  EFC3  F022         	goto	l5378
  1780  0046B2  0012               	return		;funcret
  1781  0046B4                     __end_of_test_function:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _distance_measure *****************
  1785 ;; Defined at:
  1786 ;;		line 399 in file "color.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  1789 ;;		 -> main@motorL(10), 
  1790 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  1791 ;;		 -> main@motorR(10), 
  1792 ;;  amb_light       2   14[BANK0 ] unsigned int 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  threshold       2   26[BANK0 ] unsigned int 
  1795 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  1796 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  1797 ;;  stop            1   28[BANK0 ] unsigned char 
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      unsigned char 
  1800 ;; Registers used:
  1801 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1808 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1810 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1811 ;;Total ram usage:       19 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 5
  1814 ;; This function calls:
  1815 ;;		_LED_C
  1816 ;;		___flmul
  1817 ;;		___xxtofl
  1818 ;;		_color_read_Clear
  1819 ;;		_color_read_Green
  1820 ;;		_lroundf
  1821 ;; This function is called by:
  1822 ;;		_main
  1823 ;;		_test_function
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           	psect	text3
  1828  004E70                     __ptext3:
  1829                           	callstack 0
  1830  004E70                     _distance_measure:
  1831                           	callstack 24
  1832  004E70  0E00               	movlw	0
  1833  004E72  0100               	movlb	0	; () banked
  1834  004E74  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  1835  004E76  0E00               	movlw	0
  1836  004E78  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  1837                           
  1838                           ;color.c: 402:     unsigned char stop = 0;
  1839  004E7A  0E00               	movlw	0
  1840  004E7C  6F7C               	movwf	distance_measure@stop& (0+255),b
  1841                           
  1842                           ;color.c: 403:     unsigned int threshold = 0;
  1843  004E7E  0E00               	movlw	0
  1844  004E80  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  1845  004E82  0E00               	movlw	0
  1846  004E84  6F7A               	movwf	distance_measure@threshold& (0+255),b
  1847  004E86                     
  1848                           ; BSR set to: 0
  1849                           ;color.c: 404:     LED_C();
  1850  004E86  ECB1  F02D         	call	_LED_C	;wreg free
  1851  004E8A                     
  1852                           ;color.c: 405:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1853  004E8A  0E09               	movlw	9
  1854  004E8C  0100               	movlb	0	; () banked
  1855  004E8E  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  1856  004E90  0E1E               	movlw	30
  1857  004E92  6F70               	movwf	??_distance_measure& (0+255),b
  1858  004E94  0EE4               	movlw	228
  1859  004E96                     u5677:
  1860  004E96  2EE8               	decfsz	wreg,f,c
  1861  004E98  D7FE               	bra	u5677
  1862  004E9A  2F70               	decfsz	??_distance_measure& (0+255),f,b
  1863  004E9C  D7FC               	bra	u5677
  1864  004E9E  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  1865  004EA0  D7FA               	bra	u5677
  1866  004EA2  F000               	nop	
  1867  004EA4                     
  1868                           ;color.c: 406:     CC_amb = color_read_Clear();
  1869  004EA4  EC26  F02B         	call	_color_read_Clear	;wreg free
  1870  004EA8  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  1871  004EAC  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  1872  004EB0  ECD6  F02A         	call	_color_read_Green	;wreg free
  1873  004EB4                     
  1874                           ;color.c: 408:     threshold = lroundf((float)amb_light * 1.05);
  1875  004EB4  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  1876  004EB8  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  1877  004EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1878  004EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1879  004EC0  0E00               	movlw	0
  1880  004EC2  EC53  F01F         	call	___xxtofl
  1881  004EC6  C001  F028         	movff	?___xxtofl,___flmul@b
  1882  004ECA  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  1883  004ECE  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  1884  004ED2  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  1885  004ED6  0E66               	movlw	102
  1886  004ED8  6E2C               	movwf	___flmul@a^0,c
  1887  004EDA  0E66               	movlw	102
  1888  004EDC  6E2D               	movwf	(___flmul@a+1)^0,c
  1889  004EDE  0E86               	movlw	134
  1890  004EE0  6E2E               	movwf	(___flmul@a+2)^0,c
  1891  004EE2  0E3F               	movlw	63
  1892  004EE4  6E2F               	movwf	(___flmul@a+3)^0,c
  1893  004EE6  EC48  F010         	call	___flmul	;wreg free
  1894  004EEA  C028  F074         	movff	?___flmul,_distance_measure$3251
  1895  004EEE  C029  F075         	movff	?___flmul+1,_distance_measure$3251+1
  1896  004EF2  C02A  F076         	movff	?___flmul+2,_distance_measure$3251+2
  1897  004EF6  C02B  F077         	movff	?___flmul+3,_distance_measure$3251+3
  1898  004EFA                     
  1899                           ;color.c: 408:     threshold = lroundf((float)amb_light * 1.05);
  1900  004EFA  C074  F066         	movff	_distance_measure$3251,lroundf@x
  1901  004EFE  C075  F067         	movff	_distance_measure$3251+1,lroundf@x+1
  1902  004F02  C076  F068         	movff	_distance_measure$3251+2,lroundf@x+2
  1903  004F06  C077  F069         	movff	_distance_measure$3251+3,lroundf@x+3
  1904  004F0A  EC98  F02C         	call	_lroundf	;wreg free
  1905  004F0E  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  1906  004F12  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  1907  004F16                     
  1908                           ;color.c: 411:     if (CC_amb >= threshold){stop = 1;}
  1909  004F16  0100               	movlb	0	; () banked
  1910  004F18  517A               	movf	distance_measure@threshold& (0+255),w,b
  1911  004F1A  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  1912  004F1C  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  1913  004F1E  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  1914  004F20  A0D8               	btfss	status,0,c
  1915  004F22  EF95  F027         	goto	u5221
  1916  004F26  EF97  F027         	goto	u5220
  1917  004F2A                     u5221:
  1918  004F2A  EF99  F027         	goto	l175
  1919  004F2E                     u5220:
  1920  004F2E                     
  1921                           ; BSR set to: 0
  1922  004F2E  0E01               	movlw	1
  1923  004F30  6F7C               	movwf	distance_measure@stop& (0+255),b
  1924  004F32                     l175:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;color.c: 412:     return stop;
  1928  004F32  517C               	movf	distance_measure@stop& (0+255),w,b
  1929  004F34                     
  1930                           ; BSR set to: 0
  1931  004F34  0012               	return		;funcret
  1932  004F36                     __end_of_distance_measure:
  1933                           	callstack 0
  1934                           
  1935 ;; *************** function _detect_color *****************
  1936 ;; Defined at:
  1937 ;;		line 287 in file "color.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  1940 ;;		 -> main@rgb(8), 
  1941 ;;  w               2   27[BANK0 ] PTR struct white_card
  1942 ;;		 -> main@white(28), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  buf           100   33[BANK0 ] unsigned char [100]
  1945 ;;  BR              2  152[BANK0 ] unsigned int 
  1946 ;;  BG              2  150[BANK0 ] unsigned int 
  1947 ;;  BB              2  148[BANK0 ] unsigned int 
  1948 ;;  RR              2  145[BANK0 ] unsigned int 
  1949 ;;  GG              2  143[BANK0 ] unsigned int 
  1950 ;;  GR              2  141[BANK0 ] unsigned int 
  1951 ;;  GB              2  139[BANK0 ] unsigned int 
  1952 ;;  RB              2  137[BANK0 ] unsigned int 
  1953 ;;  RG              2  135[BANK0 ] unsigned int 
  1954 ;;  BC              2  133[BANK0 ] unsigned int 
  1955 ;;  color           1  147[BANK0 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      unsigned char 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1965 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1966 ;;      Locals:         0     125       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1967 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1968 ;;      Totals:         0     133       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1969 ;;Total ram usage:      133 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 9
  1972 ;; This function calls:
  1973 ;;		_LED_B
  1974 ;;		_LED_G
  1975 ;;		_LED_R
  1976 ;;		___fldiv
  1977 ;;		___flmul
  1978 ;;		___wmul
  1979 ;;		___xxtofl
  1980 ;;		_compare
  1981 ;;		_lroundf
  1982 ;;		_read_color
  1983 ;;		_sendStringSerial4
  1984 ;;		_sprintf
  1985 ;;		_toggle_light
  1986 ;; This function is called by:
  1987 ;;		_verify_color
  1988 ;;		_main
  1989 ;;		_test_function
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           	psect	text4
  1994  000E14                     __ptext4:
  1995                           	callstack 0
  1996  000E14                     _detect_color:
  1997                           	callstack 20
  1998  000E14  0E00               	movlw	0
  1999  000E16  0100               	movlb	0	; () banked
  2000  000E18  6FE8               	movwf	(detect_color@RG+1)& (0+255),b
  2001  000E1A  0E00               	movlw	0
  2002  000E1C  6FE7               	movwf	detect_color@RG& (0+255),b
  2003  000E1E  0E00               	movlw	0
  2004  000E20  6FEA               	movwf	(detect_color@RB+1)& (0+255),b
  2005  000E22  0E00               	movlw	0
  2006  000E24  6FE9               	movwf	detect_color@RB& (0+255),b
  2007  000E26  0E00               	movlw	0
  2008  000E28  6FEE               	movwf	(detect_color@GR+1)& (0+255),b
  2009  000E2A  0E00               	movlw	0
  2010  000E2C  6FED               	movwf	detect_color@GR& (0+255),b
  2011  000E2E  0E00               	movlw	0
  2012  000E30  6FF0               	movwf	(detect_color@GG+1)& (0+255),b
  2013  000E32  0E00               	movlw	0
  2014  000E34  6FEF               	movwf	detect_color@GG& (0+255),b
  2015  000E36  0E00               	movlw	0
  2016  000E38  6FEC               	movwf	(detect_color@GB+1)& (0+255),b
  2017  000E3A  0E00               	movlw	0
  2018  000E3C  6FEB               	movwf	detect_color@GB& (0+255),b
  2019  000E3E  0E00               	movlw	0
  2020  000E40  6FF9               	movwf	(detect_color@BR+1)& (0+255),b
  2021  000E42  0E00               	movlw	0
  2022  000E44  6FF8               	movwf	detect_color@BR& (0+255),b
  2023  000E46  0E00               	movlw	0
  2024  000E48  6FF7               	movwf	(detect_color@BG+1)& (0+255),b
  2025  000E4A  0E00               	movlw	0
  2026  000E4C  6FF6               	movwf	detect_color@BG& (0+255),b
  2027  000E4E  0E00               	movlw	0
  2028  000E50  6FF5               	movwf	(detect_color@BB+1)& (0+255),b
  2029  000E52  0E00               	movlw	0
  2030  000E54  6FF4               	movwf	detect_color@BB& (0+255),b
  2031  000E56  0E00               	movlw	0
  2032  000E58  6FE6               	movwf	(detect_color@BC+1)& (0+255),b
  2033  000E5A  0E00               	movlw	0
  2034  000E5C  6FE5               	movwf	detect_color@BC& (0+255),b
  2035                           
  2036                           ;color.c: 294:     unsigned char color = 0;
  2037  000E5E  0E00               	movlw	0
  2038  000E60  6FF3               	movwf	detect_color@color& (0+255),b
  2039  000E62                     
  2040                           ; BSR set to: 0
  2041                           ;color.c: 296:     LED_R();
  2042  000E62  EC71  F02D         	call	_LED_R	;wreg free
  2043  000E66                     
  2044                           ;color.c: 297:     read_color(m);
  2045  000E66  C079  F00C         	movff	detect_color@m,read_color@m
  2046  000E6A  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  2047  000E6E  EC56  F02A         	call	_read_color	;wreg free
  2048  000E72                     
  2049                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2050  000E72  C07B  FFD9         	movff	detect_color@w,fsr2l
  2051  000E76  C07C  FFDA         	movff	detect_color@w+1,fsr2h
  2052  000E7A  CFDE F07D          	movff	postinc2,??_detect_color
  2053  000E7E  CFDD F07E          	movff	postdec2,??_detect_color+1
  2054  000E82  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2055  000E86  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2056  000E8A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2057  000E8C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2058  000E8E  0E00               	movlw	0
  2059  000E90  EC53  F01F         	call	___xxtofl
  2060  000E94  C001  F013         	movff	?___xxtofl,___fldiv@a
  2061  000E98  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2062  000E9C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2063  000EA0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2064  000EA4  C079  FFD9         	movff	detect_color@m,fsr2l
  2065  000EA8  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  2066  000EAC  CFDE F07F          	movff	postinc2,??_detect_color+2
  2067  000EB0  CFDD F080          	movff	postdec2,??_detect_color+3
  2068  000EB4  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2069  000EB8  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2070  000EBC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2071  000EBE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2072  000EC0  0E00               	movlw	0
  2073  000EC2  EC53  F01F         	call	___xxtofl
  2074  000EC6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2075  000ECA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2076  000ECE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2077  000ED2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2078  000ED6  EC34  F014         	call	___fldiv	;wreg free
  2079  000EDA  C00F  F028         	movff	?___fldiv,___flmul@b
  2080  000EDE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2081  000EE2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2082  000EE6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2083  000EEA  0E00               	movlw	0
  2084  000EEC  6E2C               	movwf	___flmul@a^0,c
  2085  000EEE  0E00               	movlw	0
  2086  000EF0  6E2D               	movwf	(___flmul@a+1)^0,c
  2087  000EF2  0EC8               	movlw	200
  2088  000EF4  6E2E               	movwf	(___flmul@a+2)^0,c
  2089  000EF6  0E42               	movlw	66
  2090  000EF8  6E2F               	movwf	(___flmul@a+3)^0,c
  2091  000EFA  EC48  F010         	call	___flmul	;wreg free
  2092  000EFE  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2093  000F02  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2094  000F06  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2095  000F0A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2096  000F0E                     
  2097                           ;color.c: 299:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2098  000F0E  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2099  000F12  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2100  000F16  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2101  000F1A  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2102  000F1E  EC98  F02C         	call	_lroundf	;wreg free
  2103  000F22  C066  F0F1         	movff	?_lroundf,detect_color@RR
  2104  000F26  C067  F0F2         	movff	?_lroundf+1,detect_color@RR+1
  2105  000F2A  0100               	movlb	0	; () banked
  2106  000F2C  EE20 F002          	lfsr	2,2
  2107  000F30  517B               	movf	detect_color@w& (0+255),w,b
  2108  000F32  26D9               	addwf	fsr2l,f,c
  2109  000F34  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2110  000F36  22DA               	addwfc	fsr2h,f,c
  2111  000F38  CFDE F07D          	movff	postinc2,??_detect_color
  2112  000F3C  CFDD F07E          	movff	postdec2,??_detect_color+1
  2113  000F40  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2114  000F44  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2115  000F48  6A03               	clrf	(___xxtofl@val+2)^0,c
  2116  000F4A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2117  000F4C  0E00               	movlw	0
  2118  000F4E  EC53  F01F         	call	___xxtofl
  2119  000F52  C001  F013         	movff	?___xxtofl,___fldiv@a
  2120  000F56  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2121  000F5A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2122  000F5E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2123  000F62  0100               	movlb	0	; () banked
  2124  000F64  EE20 F002          	lfsr	2,2
  2125  000F68  5179               	movf	detect_color@m& (0+255),w,b
  2126  000F6A  26D9               	addwf	fsr2l,f,c
  2127  000F6C  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2128  000F6E  22DA               	addwfc	fsr2h,f,c
  2129  000F70  CFDE F07F          	movff	postinc2,??_detect_color+2
  2130  000F74  CFDD F080          	movff	postdec2,??_detect_color+3
  2131  000F78  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2132  000F7C  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2133  000F80  6A03               	clrf	(___xxtofl@val+2)^0,c
  2134  000F82  6A04               	clrf	(___xxtofl@val+3)^0,c
  2135  000F84  0E00               	movlw	0
  2136  000F86  EC53  F01F         	call	___xxtofl
  2137  000F8A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2138  000F8E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2139  000F92  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2140  000F96  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2141  000F9A  EC34  F014         	call	___fldiv	;wreg free
  2142  000F9E  C00F  F028         	movff	?___fldiv,___flmul@b
  2143  000FA2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2144  000FA6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2145  000FAA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2146  000FAE  0E00               	movlw	0
  2147  000FB0  6E2C               	movwf	___flmul@a^0,c
  2148  000FB2  0E00               	movlw	0
  2149  000FB4  6E2D               	movwf	(___flmul@a+1)^0,c
  2150  000FB6  0EC8               	movlw	200
  2151  000FB8  6E2E               	movwf	(___flmul@a+2)^0,c
  2152  000FBA  0E42               	movlw	66
  2153  000FBC  6E2F               	movwf	(___flmul@a+3)^0,c
  2154  000FBE  EC48  F010         	call	___flmul	;wreg free
  2155  000FC2  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2156  000FC6  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2157  000FCA  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2158  000FCE  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2159  000FD2  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2160  000FD6  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2161  000FDA  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2162  000FDE  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2163  000FE2  EC98  F02C         	call	_lroundf	;wreg free
  2164  000FE6  C066  F0E7         	movff	?_lroundf,detect_color@RG
  2165  000FEA  C067  F0E8         	movff	?_lroundf+1,detect_color@RG+1
  2166  000FEE  0100               	movlb	0	; () banked
  2167  000FF0  EE20 F004          	lfsr	2,4
  2168  000FF4  517B               	movf	detect_color@w& (0+255),w,b
  2169  000FF6  26D9               	addwf	fsr2l,f,c
  2170  000FF8  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2171  000FFA  22DA               	addwfc	fsr2h,f,c
  2172  000FFC  CFDE F07D          	movff	postinc2,??_detect_color
  2173  001000  CFDD F07E          	movff	postdec2,??_detect_color+1
  2174  001004  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2175  001008  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2176  00100C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2177  00100E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2178  001010  0E00               	movlw	0
  2179  001012  EC53  F01F         	call	___xxtofl
  2180  001016  C001  F013         	movff	?___xxtofl,___fldiv@a
  2181  00101A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2182  00101E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2183  001022  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2184  001026  0100               	movlb	0	; () banked
  2185  001028  EE20 F004          	lfsr	2,4
  2186  00102C  5179               	movf	detect_color@m& (0+255),w,b
  2187  00102E  26D9               	addwf	fsr2l,f,c
  2188  001030  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2189  001032  22DA               	addwfc	fsr2h,f,c
  2190  001034  CFDE F07F          	movff	postinc2,??_detect_color+2
  2191  001038  CFDD F080          	movff	postdec2,??_detect_color+3
  2192  00103C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2193  001040  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2194  001044  6A03               	clrf	(___xxtofl@val+2)^0,c
  2195  001046  6A04               	clrf	(___xxtofl@val+3)^0,c
  2196  001048  0E00               	movlw	0
  2197  00104A  EC53  F01F         	call	___xxtofl
  2198  00104E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2199  001052  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2200  001056  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2201  00105A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2202  00105E  EC34  F014         	call	___fldiv	;wreg free
  2203  001062  C00F  F028         	movff	?___fldiv,___flmul@b
  2204  001066  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2205  00106A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2206  00106E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2207  001072  0E00               	movlw	0
  2208  001074  6E2C               	movwf	___flmul@a^0,c
  2209  001076  0E00               	movlw	0
  2210  001078  6E2D               	movwf	(___flmul@a+1)^0,c
  2211  00107A  0EC8               	movlw	200
  2212  00107C  6E2E               	movwf	(___flmul@a+2)^0,c
  2213  00107E  0E42               	movlw	66
  2214  001080  6E2F               	movwf	(___flmul@a+3)^0,c
  2215  001082  EC48  F010         	call	___flmul	;wreg free
  2216  001086  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2217  00108A  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2218  00108E  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2219  001092  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2220  001096  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2221  00109A  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2222  00109E  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2223  0010A2  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2224  0010A6  EC98  F02C         	call	_lroundf	;wreg free
  2225  0010AA  C066  F0E9         	movff	?_lroundf,detect_color@RB
  2226  0010AE  C067  F0EA         	movff	?_lroundf+1,detect_color@RB+1
  2227  0010B2                     
  2228                           ;color.c: 300:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2229  0010B2  0E05               	movlw	5
  2230  0010B4  0100               	movlb	0	; () banked
  2231  0010B6  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2232  0010B8  0E0F               	movlw	15
  2233  0010BA  6F7D               	movwf	??_detect_color& (0+255),b
  2234  0010BC  0EF1               	movlw	241
  2235  0010BE                     u5687:
  2236  0010BE  2EE8               	decfsz	wreg,f,c
  2237  0010C0  D7FE               	bra	u5687
  2238  0010C2  2F7D               	decfsz	??_detect_color& (0+255),f,b
  2239  0010C4  D7FC               	bra	u5687
  2240  0010C6  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  2241  0010C8  D7FA               	bra	u5687
  2242  0010CA                     
  2243                           ;color.c: 301:     char buf[100];;color.c: 303:     sprintf(buf,"%d\t%d\t%d\r\n", RR, RG
      +                          , RB);
  2244  0010CA  0E81               	movlw	low detect_color@buf
  2245  0010CC  0100               	movlb	0	; () banked
  2246  0010CE  6F60               	movwf	sprintf@s& (0+255),b
  2247  0010D0  0E00               	movlw	high detect_color@buf
  2248  0010D2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2249  0010D4  0E08               	movlw	low (STR_1+3)
  2250  0010D6  6F62               	movwf	sprintf@fmt& (0+255),b
  2251  0010D8  0E0E               	movlw	high (STR_1+3)
  2252  0010DA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2253  0010DC  C0F1  F064         	movff	detect_color@RR,?_sprintf+4
  2254  0010E0  C0F2  F065         	movff	detect_color@RR+1,?_sprintf+5
  2255  0010E4  C0E7  F066         	movff	detect_color@RG,?_sprintf+6
  2256  0010E8  C0E8  F067         	movff	detect_color@RG+1,?_sprintf+7
  2257  0010EC  C0E9  F068         	movff	detect_color@RB,?_sprintf+8
  2258  0010F0  C0EA  F069         	movff	detect_color@RB+1,?_sprintf+9
  2259  0010F4  EC85  F02A         	call	_sprintf	;wreg free
  2260  0010F8                     
  2261                           ;color.c: 304:     sendStringSerial4(buf);
  2262  0010F8  0E81               	movlw	low detect_color@buf
  2263  0010FA  6E02               	movwf	sendStringSerial4@string^0,c
  2264  0010FC  0E00               	movlw	high detect_color@buf
  2265  0010FE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2266  001100  EC06  F02D         	call	_sendStringSerial4	;wreg free
  2267  001104                     
  2268                           ;color.c: 306:     LED_G();
  2269  001104  EC91  F02D         	call	_LED_G	;wreg free
  2270  001108                     
  2271                           ;color.c: 307:     read_color(m);
  2272  001108  C079  F00C         	movff	detect_color@m,read_color@m
  2273  00110C  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  2274  001110  EC56  F02A         	call	_read_color	;wreg free
  2275  001114                     
  2276                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2277  001114  0100               	movlb	0	; () banked
  2278  001116  EE20 F006          	lfsr	2,6
  2279  00111A  517B               	movf	detect_color@w& (0+255),w,b
  2280  00111C  26D9               	addwf	fsr2l,f,c
  2281  00111E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2282  001120  22DA               	addwfc	fsr2h,f,c
  2283  001122  CFDE F07D          	movff	postinc2,??_detect_color
  2284  001126  CFDD F07E          	movff	postdec2,??_detect_color+1
  2285  00112A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2286  00112E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2287  001132  6A03               	clrf	(___xxtofl@val+2)^0,c
  2288  001134  6A04               	clrf	(___xxtofl@val+3)^0,c
  2289  001136  0E00               	movlw	0
  2290  001138  EC53  F01F         	call	___xxtofl
  2291  00113C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2292  001140  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2293  001144  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2294  001148  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2295  00114C  C079  FFD9         	movff	detect_color@m,fsr2l
  2296  001150  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  2297  001154  CFDE F07F          	movff	postinc2,??_detect_color+2
  2298  001158  CFDD F080          	movff	postdec2,??_detect_color+3
  2299  00115C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2300  001160  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2301  001164  6A03               	clrf	(___xxtofl@val+2)^0,c
  2302  001166  6A04               	clrf	(___xxtofl@val+3)^0,c
  2303  001168  0E00               	movlw	0
  2304  00116A  EC53  F01F         	call	___xxtofl
  2305  00116E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2306  001172  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2307  001176  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2308  00117A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2309  00117E  EC34  F014         	call	___fldiv	;wreg free
  2310  001182  C00F  F028         	movff	?___fldiv,___flmul@b
  2311  001186  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2312  00118A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2313  00118E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2314  001192  0E00               	movlw	0
  2315  001194  6E2C               	movwf	___flmul@a^0,c
  2316  001196  0E00               	movlw	0
  2317  001198  6E2D               	movwf	(___flmul@a+1)^0,c
  2318  00119A  0EC8               	movlw	200
  2319  00119C  6E2E               	movwf	(___flmul@a+2)^0,c
  2320  00119E  0E42               	movlw	66
  2321  0011A0  6E2F               	movwf	(___flmul@a+3)^0,c
  2322  0011A2  EC48  F010         	call	___flmul	;wreg free
  2323  0011A6  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2324  0011AA  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2325  0011AE  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2326  0011B2  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2327  0011B6                     
  2328                           ;color.c: 310:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2329  0011B6  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2330  0011BA  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2331  0011BE  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2332  0011C2  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2333  0011C6  EC98  F02C         	call	_lroundf	;wreg free
  2334  0011CA  C066  F0ED         	movff	?_lroundf,detect_color@GR
  2335  0011CE  C067  F0EE         	movff	?_lroundf+1,detect_color@GR+1
  2336  0011D2  0100               	movlb	0	; () banked
  2337  0011D4  EE20 F008          	lfsr	2,8
  2338  0011D8  517B               	movf	detect_color@w& (0+255),w,b
  2339  0011DA  26D9               	addwf	fsr2l,f,c
  2340  0011DC  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2341  0011DE  22DA               	addwfc	fsr2h,f,c
  2342  0011E0  CFDE F07D          	movff	postinc2,??_detect_color
  2343  0011E4  CFDD F07E          	movff	postdec2,??_detect_color+1
  2344  0011E8  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2345  0011EC  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2346  0011F0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2347  0011F2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2348  0011F4  0E00               	movlw	0
  2349  0011F6  EC53  F01F         	call	___xxtofl
  2350  0011FA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2351  0011FE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2352  001202  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2353  001206  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2354  00120A  0100               	movlb	0	; () banked
  2355  00120C  EE20 F002          	lfsr	2,2
  2356  001210  5179               	movf	detect_color@m& (0+255),w,b
  2357  001212  26D9               	addwf	fsr2l,f,c
  2358  001214  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2359  001216  22DA               	addwfc	fsr2h,f,c
  2360  001218  CFDE F07F          	movff	postinc2,??_detect_color+2
  2361  00121C  CFDD F080          	movff	postdec2,??_detect_color+3
  2362  001220  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2363  001224  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2364  001228  6A03               	clrf	(___xxtofl@val+2)^0,c
  2365  00122A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2366  00122C  0E00               	movlw	0
  2367  00122E  EC53  F01F         	call	___xxtofl
  2368  001232  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2369  001236  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2370  00123A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2371  00123E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2372  001242  EC34  F014         	call	___fldiv	;wreg free
  2373  001246  C00F  F028         	movff	?___fldiv,___flmul@b
  2374  00124A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2375  00124E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2376  001252  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2377  001256  0E00               	movlw	0
  2378  001258  6E2C               	movwf	___flmul@a^0,c
  2379  00125A  0E00               	movlw	0
  2380  00125C  6E2D               	movwf	(___flmul@a+1)^0,c
  2381  00125E  0EC8               	movlw	200
  2382  001260  6E2E               	movwf	(___flmul@a+2)^0,c
  2383  001262  0E42               	movlw	66
  2384  001264  6E2F               	movwf	(___flmul@a+3)^0,c
  2385  001266  EC48  F010         	call	___flmul	;wreg free
  2386  00126A  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2387  00126E  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2388  001272  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2389  001276  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2390  00127A  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2391  00127E  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2392  001282  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2393  001286  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2394  00128A  EC98  F02C         	call	_lroundf	;wreg free
  2395  00128E  C066  F0EF         	movff	?_lroundf,detect_color@GG
  2396  001292  C067  F0F0         	movff	?_lroundf+1,detect_color@GG+1
  2397  001296  0100               	movlb	0	; () banked
  2398  001298  EE20 F00A          	lfsr	2,10
  2399  00129C  517B               	movf	detect_color@w& (0+255),w,b
  2400  00129E  26D9               	addwf	fsr2l,f,c
  2401  0012A0  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2402  0012A2  22DA               	addwfc	fsr2h,f,c
  2403  0012A4  CFDE F07D          	movff	postinc2,??_detect_color
  2404  0012A8  CFDD F07E          	movff	postdec2,??_detect_color+1
  2405  0012AC  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2406  0012B0  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2407  0012B4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2408  0012B6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2409  0012B8  0E00               	movlw	0
  2410  0012BA  EC53  F01F         	call	___xxtofl
  2411  0012BE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2412  0012C2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2413  0012C6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2414  0012CA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2415  0012CE  0100               	movlb	0	; () banked
  2416  0012D0  EE20 F004          	lfsr	2,4
  2417  0012D4  5179               	movf	detect_color@m& (0+255),w,b
  2418  0012D6  26D9               	addwf	fsr2l,f,c
  2419  0012D8  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2420  0012DA  22DA               	addwfc	fsr2h,f,c
  2421  0012DC  CFDE F07F          	movff	postinc2,??_detect_color+2
  2422  0012E0  CFDD F080          	movff	postdec2,??_detect_color+3
  2423  0012E4  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2424  0012E8  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2425  0012EC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2426  0012EE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2427  0012F0  0E00               	movlw	0
  2428  0012F2  EC53  F01F         	call	___xxtofl
  2429  0012F6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2430  0012FA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2431  0012FE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2432  001302  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2433  001306  EC34  F014         	call	___fldiv	;wreg free
  2434  00130A  C00F  F028         	movff	?___fldiv,___flmul@b
  2435  00130E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2436  001312  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2437  001316  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2438  00131A  0E00               	movlw	0
  2439  00131C  6E2C               	movwf	___flmul@a^0,c
  2440  00131E  0E00               	movlw	0
  2441  001320  6E2D               	movwf	(___flmul@a+1)^0,c
  2442  001322  0EC8               	movlw	200
  2443  001324  6E2E               	movwf	(___flmul@a+2)^0,c
  2444  001326  0E42               	movlw	66
  2445  001328  6E2F               	movwf	(___flmul@a+3)^0,c
  2446  00132A  EC48  F010         	call	___flmul	;wreg free
  2447  00132E  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2448  001332  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2449  001336  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2450  00133A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2451  00133E  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2452  001342  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2453  001346  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2454  00134A  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2455  00134E  EC98  F02C         	call	_lroundf	;wreg free
  2456  001352  C066  F0EB         	movff	?_lroundf,detect_color@GB
  2457  001356  C067  F0EC         	movff	?_lroundf+1,detect_color@GB+1
  2458  00135A                     
  2459                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2460  00135A  0E05               	movlw	5
  2461  00135C  0100               	movlb	0	; () banked
  2462  00135E  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2463  001360  0E0F               	movlw	15
  2464  001362  6F7D               	movwf	??_detect_color& (0+255),b
  2465  001364  0EF1               	movlw	241
  2466  001366                     u5697:
  2467  001366  2EE8               	decfsz	wreg,f,c
  2468  001368  D7FE               	bra	u5697
  2469  00136A  2F7D               	decfsz	??_detect_color& (0+255),f,b
  2470  00136C  D7FC               	bra	u5697
  2471  00136E  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  2472  001370  D7FA               	bra	u5697
  2473  001372                     
  2474                           ;color.c: 313:     sprintf(buf,"%d\t%d\t%d\r\n", GR, GG, GB);
  2475  001372  0E81               	movlw	low detect_color@buf
  2476  001374  0100               	movlb	0	; () banked
  2477  001376  6F60               	movwf	sprintf@s& (0+255),b
  2478  001378  0E00               	movlw	high detect_color@buf
  2479  00137A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2480  00137C  0E08               	movlw	low (STR_1+3)
  2481  00137E  6F62               	movwf	sprintf@fmt& (0+255),b
  2482  001380  0E0E               	movlw	high (STR_1+3)
  2483  001382  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2484  001384  C0ED  F064         	movff	detect_color@GR,?_sprintf+4
  2485  001388  C0EE  F065         	movff	detect_color@GR+1,?_sprintf+5
  2486  00138C  C0EF  F066         	movff	detect_color@GG,?_sprintf+6
  2487  001390  C0F0  F067         	movff	detect_color@GG+1,?_sprintf+7
  2488  001394  C0EB  F068         	movff	detect_color@GB,?_sprintf+8
  2489  001398  C0EC  F069         	movff	detect_color@GB+1,?_sprintf+9
  2490  00139C  EC85  F02A         	call	_sprintf	;wreg free
  2491  0013A0                     
  2492                           ;color.c: 314:     sendStringSerial4(buf);
  2493  0013A0  0E81               	movlw	low detect_color@buf
  2494  0013A2  6E02               	movwf	sendStringSerial4@string^0,c
  2495  0013A4  0E00               	movlw	high detect_color@buf
  2496  0013A6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2497  0013A8  EC06  F02D         	call	_sendStringSerial4	;wreg free
  2498  0013AC                     
  2499                           ;color.c: 316:     LED_B();
  2500  0013AC  ECA1  F02D         	call	_LED_B	;wreg free
  2501  0013B0                     
  2502                           ;color.c: 317:     read_color(m);
  2503  0013B0  C079  F00C         	movff	detect_color@m,read_color@m
  2504  0013B4  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  2505  0013B8  EC56  F02A         	call	_read_color	;wreg free
  2506  0013BC                     
  2507                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2508  0013BC  0100               	movlb	0	; () banked
  2509  0013BE  EE20 F00C          	lfsr	2,12
  2510  0013C2  517B               	movf	detect_color@w& (0+255),w,b
  2511  0013C4  26D9               	addwf	fsr2l,f,c
  2512  0013C6  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2513  0013C8  22DA               	addwfc	fsr2h,f,c
  2514  0013CA  CFDE F07D          	movff	postinc2,??_detect_color
  2515  0013CE  CFDD F07E          	movff	postdec2,??_detect_color+1
  2516  0013D2  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2517  0013D6  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2518  0013DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  2519  0013DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  2520  0013DE  0E00               	movlw	0
  2521  0013E0  EC53  F01F         	call	___xxtofl
  2522  0013E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  2523  0013E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2524  0013EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2525  0013F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2526  0013F4  C079  FFD9         	movff	detect_color@m,fsr2l
  2527  0013F8  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  2528  0013FC  CFDE F07F          	movff	postinc2,??_detect_color+2
  2529  001400  CFDD F080          	movff	postdec2,??_detect_color+3
  2530  001404  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2531  001408  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2532  00140C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2533  00140E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2534  001410  0E00               	movlw	0
  2535  001412  EC53  F01F         	call	___xxtofl
  2536  001416  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2537  00141A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2538  00141E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2539  001422  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2540  001426  EC34  F014         	call	___fldiv	;wreg free
  2541  00142A  C00F  F028         	movff	?___fldiv,___flmul@b
  2542  00142E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2543  001432  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2544  001436  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2545  00143A  0E00               	movlw	0
  2546  00143C  6E2C               	movwf	___flmul@a^0,c
  2547  00143E  0E00               	movlw	0
  2548  001440  6E2D               	movwf	(___flmul@a+1)^0,c
  2549  001442  0EC8               	movlw	200
  2550  001444  6E2E               	movwf	(___flmul@a+2)^0,c
  2551  001446  0E42               	movlw	66
  2552  001448  6E2F               	movwf	(___flmul@a+3)^0,c
  2553  00144A  EC48  F010         	call	___flmul	;wreg free
  2554  00144E  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2555  001452  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2556  001456  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2557  00145A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2558  00145E                     
  2559                           ;color.c: 318:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2560  00145E  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2561  001462  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2562  001466  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2563  00146A  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2564  00146E  EC98  F02C         	call	_lroundf	;wreg free
  2565  001472  C066  F0F8         	movff	?_lroundf,detect_color@BR
  2566  001476  C067  F0F9         	movff	?_lroundf+1,detect_color@BR+1
  2567  00147A  0100               	movlb	0	; () banked
  2568  00147C  EE20 F00E          	lfsr	2,14
  2569  001480  517B               	movf	detect_color@w& (0+255),w,b
  2570  001482  26D9               	addwf	fsr2l,f,c
  2571  001484  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2572  001486  22DA               	addwfc	fsr2h,f,c
  2573  001488  CFDE F07D          	movff	postinc2,??_detect_color
  2574  00148C  CFDD F07E          	movff	postdec2,??_detect_color+1
  2575  001490  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2576  001494  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2577  001498  6A03               	clrf	(___xxtofl@val+2)^0,c
  2578  00149A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2579  00149C  0E00               	movlw	0
  2580  00149E  EC53  F01F         	call	___xxtofl
  2581  0014A2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2582  0014A6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2583  0014AA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2584  0014AE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2585  0014B2  0100               	movlb	0	; () banked
  2586  0014B4  EE20 F002          	lfsr	2,2
  2587  0014B8  5179               	movf	detect_color@m& (0+255),w,b
  2588  0014BA  26D9               	addwf	fsr2l,f,c
  2589  0014BC  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2590  0014BE  22DA               	addwfc	fsr2h,f,c
  2591  0014C0  CFDE F07F          	movff	postinc2,??_detect_color+2
  2592  0014C4  CFDD F080          	movff	postdec2,??_detect_color+3
  2593  0014C8  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2594  0014CC  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2595  0014D0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2596  0014D2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2597  0014D4  0E00               	movlw	0
  2598  0014D6  EC53  F01F         	call	___xxtofl
  2599  0014DA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2600  0014DE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2601  0014E2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2602  0014E6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2603  0014EA  EC34  F014         	call	___fldiv	;wreg free
  2604  0014EE  C00F  F028         	movff	?___fldiv,___flmul@b
  2605  0014F2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2606  0014F6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2607  0014FA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2608  0014FE  0E00               	movlw	0
  2609  001500  6E2C               	movwf	___flmul@a^0,c
  2610  001502  0E00               	movlw	0
  2611  001504  6E2D               	movwf	(___flmul@a+1)^0,c
  2612  001506  0EC8               	movlw	200
  2613  001508  6E2E               	movwf	(___flmul@a+2)^0,c
  2614  00150A  0E42               	movlw	66
  2615  00150C  6E2F               	movwf	(___flmul@a+3)^0,c
  2616  00150E  EC48  F010         	call	___flmul	;wreg free
  2617  001512  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2618  001516  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2619  00151A  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2620  00151E  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2621  001522  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2622  001526  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2623  00152A  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2624  00152E  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2625  001532  EC98  F02C         	call	_lroundf	;wreg free
  2626  001536  C066  F0F6         	movff	?_lroundf,detect_color@BG
  2627  00153A  C067  F0F7         	movff	?_lroundf+1,detect_color@BG+1
  2628  00153E  0100               	movlb	0	; () banked
  2629  001540  EE20 F010          	lfsr	2,16
  2630  001544  517B               	movf	detect_color@w& (0+255),w,b
  2631  001546  26D9               	addwf	fsr2l,f,c
  2632  001548  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2633  00154A  22DA               	addwfc	fsr2h,f,c
  2634  00154C  CFDE F07D          	movff	postinc2,??_detect_color
  2635  001550  CFDD F07E          	movff	postdec2,??_detect_color+1
  2636  001554  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2637  001558  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2638  00155C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2639  00155E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2640  001560  0E00               	movlw	0
  2641  001562  EC53  F01F         	call	___xxtofl
  2642  001566  C001  F013         	movff	?___xxtofl,___fldiv@a
  2643  00156A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2644  00156E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2645  001572  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2646  001576  0100               	movlb	0	; () banked
  2647  001578  EE20 F004          	lfsr	2,4
  2648  00157C  5179               	movf	detect_color@m& (0+255),w,b
  2649  00157E  26D9               	addwf	fsr2l,f,c
  2650  001580  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2651  001582  22DA               	addwfc	fsr2h,f,c
  2652  001584  CFDE F07F          	movff	postinc2,??_detect_color+2
  2653  001588  CFDD F080          	movff	postdec2,??_detect_color+3
  2654  00158C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2655  001590  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2656  001594  6A03               	clrf	(___xxtofl@val+2)^0,c
  2657  001596  6A04               	clrf	(___xxtofl@val+3)^0,c
  2658  001598  0E00               	movlw	0
  2659  00159A  EC53  F01F         	call	___xxtofl
  2660  00159E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2661  0015A2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2662  0015A6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2663  0015AA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2664  0015AE  EC34  F014         	call	___fldiv	;wreg free
  2665  0015B2  C00F  F028         	movff	?___fldiv,___flmul@b
  2666  0015B6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2667  0015BA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2668  0015BE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2669  0015C2  0E00               	movlw	0
  2670  0015C4  6E2C               	movwf	___flmul@a^0,c
  2671  0015C6  0E00               	movlw	0
  2672  0015C8  6E2D               	movwf	(___flmul@a+1)^0,c
  2673  0015CA  0EC8               	movlw	200
  2674  0015CC  6E2E               	movwf	(___flmul@a+2)^0,c
  2675  0015CE  0E42               	movlw	66
  2676  0015D0  6E2F               	movwf	(___flmul@a+3)^0,c
  2677  0015D2  EC48  F010         	call	___flmul	;wreg free
  2678  0015D6  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2679  0015DA  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2680  0015DE  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2681  0015E2  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2682  0015E6  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2683  0015EA  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2684  0015EE  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2685  0015F2  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2686  0015F6  EC98  F02C         	call	_lroundf	;wreg free
  2687  0015FA  C066  F0F4         	movff	?_lroundf,detect_color@BB
  2688  0015FE  C067  F0F5         	movff	?_lroundf+1,detect_color@BB+1
  2689  001602                     
  2690                           ;color.c: 319:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2691  001602  0100               	movlb	0	; () banked
  2692  001604  EE20 F01A          	lfsr	2,26
  2693  001608  517B               	movf	detect_color@w& (0+255),w,b
  2694  00160A  26D9               	addwf	fsr2l,f,c
  2695  00160C  517C               	movf	(detect_color@w+1)& (0+255),w,b
  2696  00160E  22DA               	addwfc	fsr2h,f,c
  2697  001610  CFDE F07D          	movff	postinc2,??_detect_color
  2698  001614  CFDD F07E          	movff	postdec2,??_detect_color+1
  2699  001618  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2700  00161C  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2701  001620  6A03               	clrf	(___xxtofl@val+2)^0,c
  2702  001622  6A04               	clrf	(___xxtofl@val+3)^0,c
  2703  001624  0E00               	movlw	0
  2704  001626  EC53  F01F         	call	___xxtofl
  2705  00162A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2706  00162E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2707  001632  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2708  001636  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2709  00163A  0100               	movlb	0	; () banked
  2710  00163C  EE20 F006          	lfsr	2,6
  2711  001640  5179               	movf	detect_color@m& (0+255),w,b
  2712  001642  26D9               	addwf	fsr2l,f,c
  2713  001644  517A               	movf	(detect_color@m+1)& (0+255),w,b
  2714  001646  22DA               	addwfc	fsr2h,f,c
  2715  001648  CFDE F07F          	movff	postinc2,??_detect_color+2
  2716  00164C  CFDD F080          	movff	postdec2,??_detect_color+3
  2717  001650  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  2718  001654  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2719  001658  6A03               	clrf	(___xxtofl@val+2)^0,c
  2720  00165A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2721  00165C  0E00               	movlw	0
  2722  00165E  EC53  F01F         	call	___xxtofl
  2723  001662  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2724  001666  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2725  00166A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2726  00166E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2727  001672  EC34  F014         	call	___fldiv	;wreg free
  2728  001676  C00F  F028         	movff	?___fldiv,___flmul@b
  2729  00167A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2730  00167E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2731  001682  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2732  001686  0E00               	movlw	0
  2733  001688  6E2C               	movwf	___flmul@a^0,c
  2734  00168A  0E00               	movlw	0
  2735  00168C  6E2D               	movwf	(___flmul@a+1)^0,c
  2736  00168E  0EC8               	movlw	200
  2737  001690  6E2E               	movwf	(___flmul@a+2)^0,c
  2738  001692  0E42               	movlw	66
  2739  001694  6E2F               	movwf	(___flmul@a+3)^0,c
  2740  001696  EC48  F010         	call	___flmul	;wreg free
  2741  00169A  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2742  00169E  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2743  0016A2  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2744  0016A6  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2745  0016AA  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2746  0016AE  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2747  0016B2  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2748  0016B6  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2749  0016BA  EC98  F02C         	call	_lroundf	;wreg free
  2750  0016BE                     
  2751                           ;color.c: 320:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2752  0016BE  0E05               	movlw	5
  2753  0016C0  0100               	movlb	0	; () banked
  2754  0016C2  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2755  0016C4  0E0F               	movlw	15
  2756  0016C6  6F7D               	movwf	??_detect_color& (0+255),b
  2757  0016C8  0EF1               	movlw	241
  2758  0016CA                     u5707:
  2759  0016CA  2EE8               	decfsz	wreg,f,c
  2760  0016CC  D7FE               	bra	u5707
  2761  0016CE  2F7D               	decfsz	??_detect_color& (0+255),f,b
  2762  0016D0  D7FC               	bra	u5707
  2763  0016D2  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  2764  0016D4  D7FA               	bra	u5707
  2765  0016D6                     
  2766                           ;color.c: 322:     sprintf(buf,"%d\t%d\t%d\r\n", BR, BG, BB);
  2767  0016D6  0E81               	movlw	low detect_color@buf
  2768  0016D8  0100               	movlb	0	; () banked
  2769  0016DA  6F60               	movwf	sprintf@s& (0+255),b
  2770  0016DC  0E00               	movlw	high detect_color@buf
  2771  0016DE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2772  0016E0  0E08               	movlw	low (STR_1+3)
  2773  0016E2  6F62               	movwf	sprintf@fmt& (0+255),b
  2774  0016E4  0E0E               	movlw	high (STR_1+3)
  2775  0016E6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2776  0016E8  C0F8  F064         	movff	detect_color@BR,?_sprintf+4
  2777  0016EC  C0F9  F065         	movff	detect_color@BR+1,?_sprintf+5
  2778  0016F0  C0F6  F066         	movff	detect_color@BG,?_sprintf+6
  2779  0016F4  C0F7  F067         	movff	detect_color@BG+1,?_sprintf+7
  2780  0016F8  C0F4  F068         	movff	detect_color@BB,?_sprintf+8
  2781  0016FC  C0F5  F069         	movff	detect_color@BB+1,?_sprintf+9
  2782  001700  EC85  F02A         	call	_sprintf	;wreg free
  2783  001704                     
  2784                           ;color.c: 323:     sendStringSerial4(buf);
  2785  001704  0E81               	movlw	low detect_color@buf
  2786  001706  6E02               	movwf	sendStringSerial4@string^0,c
  2787  001708  0E00               	movlw	high detect_color@buf
  2788  00170A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2789  00170C  EC06  F02D         	call	_sendStringSerial4	;wreg free
  2790  001710                     
  2791                           ;color.c: 326:     if (compare(0, BR, 70)){
  2792  001710  0E00               	movlw	0
  2793  001712  0100               	movlb	0	; () banked
  2794  001714  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2795  001716  0E00               	movlw	0
  2796  001718  6F6A               	movwf	compare@lower& (0+255),b
  2797  00171A  C0F8  F06C         	movff	detect_color@BR,compare@value2compare
  2798  00171E  C0F9  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2799  001722  0E00               	movlw	0
  2800  001724  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2801  001726  0E46               	movlw	70
  2802  001728  6F6E               	movwf	compare@upper& (0+255),b
  2803  00172A  EC7B  F02C         	call	_compare	;wreg free
  2804  00172E  0900               	iorlw	0
  2805  001730  B4D8               	btfsc	status,2,c
  2806  001732  EF9D  F00B         	goto	u5101
  2807  001736  EF9F  F00B         	goto	u5100
  2808  00173A                     u5101:
  2809  00173A  EF10  F00C         	goto	l5104
  2810  00173E                     u5100:
  2811  00173E                     
  2812                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2813  00173E  C0F4  F001         	movff	detect_color@BB,___xxtofl@val
  2814  001742  C0F5  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2815  001746  6A03               	clrf	(___xxtofl@val+2)^0,c
  2816  001748  6A04               	clrf	(___xxtofl@val+3)^0,c
  2817  00174A  0E00               	movlw	0
  2818  00174C  EC53  F01F         	call	___xxtofl
  2819  001750  C001  F013         	movff	?___xxtofl,___fldiv@a
  2820  001754  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2821  001758  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2822  00175C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2823  001760  0100               	movlb	0	; () banked
  2824  001762  51F6               	movf	detect_color@BG& (0+255),w,b
  2825  001764  25EF               	addwf	detect_color@GG& (0+255),w,b
  2826  001766  6F7D               	movwf	??_detect_color& (0+255),b
  2827  001768  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  2828  00176A  21F0               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2829  00176C  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  2830  00176E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  2831  001772  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2832  001776  6A03               	clrf	(___xxtofl@val+2)^0,c
  2833  001778  6A04               	clrf	(___xxtofl@val+3)^0,c
  2834  00177A  0E00               	movlw	0
  2835  00177C  EC53  F01F         	call	___xxtofl
  2836  001780  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2837  001784  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2838  001788  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2839  00178C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2840  001790  EC34  F014         	call	___fldiv	;wreg free
  2841  001794  C00F  F028         	movff	?___fldiv,___flmul@b
  2842  001798  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2843  00179C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2844  0017A0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2845  0017A4  0E00               	movlw	0
  2846  0017A6  6E2C               	movwf	___flmul@a^0,c
  2847  0017A8  0E00               	movlw	0
  2848  0017AA  6E2D               	movwf	(___flmul@a+1)^0,c
  2849  0017AC  0E48               	movlw	72
  2850  0017AE  6E2E               	movwf	(___flmul@a+2)^0,c
  2851  0017B0  0E43               	movlw	67
  2852  0017B2  6E2F               	movwf	(___flmul@a+3)^0,c
  2853  0017B4  EC48  F010         	call	___flmul	;wreg free
  2854  0017B8  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2855  0017BC  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2856  0017C0  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2857  0017C4  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2858                           
  2859                           ;color.c: 327:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2860  0017C8  0E00               	movlw	0
  2861  0017CA  0100               	movlb	0	; () banked
  2862  0017CC  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2863  0017CE  0E00               	movlw	0
  2864  0017D0  6F6A               	movwf	compare@lower& (0+255),b
  2865  0017D2  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2866  0017D6  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2867  0017DA  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2868  0017DE  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2869  0017E2  EC98  F02C         	call	_lroundf	;wreg free
  2870  0017E6  C066  F06C         	movff	?_lroundf,compare@value2compare
  2871  0017EA  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2872  0017EE  0E01               	movlw	1
  2873  0017F0  0100               	movlb	0	; () banked
  2874  0017F2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2875  0017F4  0E9B               	movlw	155
  2876  0017F6  6F6E               	movwf	compare@upper& (0+255),b
  2877  0017F8  EC7B  F02C         	call	_compare	;wreg free
  2878  0017FC  0900               	iorlw	0
  2879  0017FE  B4D8               	btfsc	status,2,c
  2880  001800  EF04  F00C         	goto	u5111
  2881  001804  EF06  F00C         	goto	u5110
  2882  001808                     u5111:
  2883  001808  EF0B  F00C         	goto	l5102
  2884  00180C                     u5110:
  2885  00180C  0E03               	movlw	3
  2886  00180E  0100               	movlb	0	; () banked
  2887  001810  6FF3               	movwf	detect_color@color& (0+255),b
  2888  001812  EF61  F00D         	goto	l5128
  2889  001816                     l5102:
  2890  001816  0E02               	movlw	2
  2891  001818  0100               	movlb	0	; () banked
  2892  00181A  6FF3               	movwf	detect_color@color& (0+255),b
  2893  00181C  EF61  F00D         	goto	l5128
  2894  001820                     l5104:
  2895                           
  2896                           ;color.c: 331:         if (compare(0, BG, 75)){
  2897  001820  0E00               	movlw	0
  2898  001822  0100               	movlb	0	; () banked
  2899  001824  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2900  001826  0E00               	movlw	0
  2901  001828  6F6A               	movwf	compare@lower& (0+255),b
  2902  00182A  C0F6  F06C         	movff	detect_color@BG,compare@value2compare
  2903  00182E  C0F7  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2904  001832  0E00               	movlw	0
  2905  001834  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2906  001836  0E4B               	movlw	75
  2907  001838  6F6E               	movwf	compare@upper& (0+255),b
  2908  00183A  EC7B  F02C         	call	_compare	;wreg free
  2909  00183E  0900               	iorlw	0
  2910  001840  B4D8               	btfsc	status,2,c
  2911  001842  EF25  F00C         	goto	u5121
  2912  001846  EF27  F00C         	goto	u5120
  2913  00184A                     u5121:
  2914  00184A  EF91  F00C         	goto	l5112
  2915  00184E                     u5120:
  2916  00184E                     
  2917                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  2918  00184E  C0F1  F001         	movff	detect_color@RR,___xxtofl@val
  2919  001852  C0F2  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2920  001856  6A03               	clrf	(___xxtofl@val+2)^0,c
  2921  001858  6A04               	clrf	(___xxtofl@val+3)^0,c
  2922  00185A  0E00               	movlw	0
  2923  00185C  EC53  F01F         	call	___xxtofl
  2924  001860  C001  F013         	movff	?___xxtofl,___fldiv@a
  2925  001864  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2926  001868  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2927  00186C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2928  001870  C0ED  F001         	movff	detect_color@GR,___xxtofl@val
  2929  001874  C0EE  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  2930  001878  6A03               	clrf	(___xxtofl@val+2)^0,c
  2931  00187A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2932  00187C  0E00               	movlw	0
  2933  00187E  EC53  F01F         	call	___xxtofl
  2934  001882  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2935  001886  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2936  00188A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2937  00188E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2938  001892  EC34  F014         	call	___fldiv	;wreg free
  2939  001896  C00F  F028         	movff	?___fldiv,___flmul@b
  2940  00189A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2941  00189E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2942  0018A2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2943  0018A6  0E00               	movlw	0
  2944  0018A8  6E2C               	movwf	___flmul@a^0,c
  2945  0018AA  0E00               	movlw	0
  2946  0018AC  6E2D               	movwf	(___flmul@a+1)^0,c
  2947  0018AE  0EFA               	movlw	250
  2948  0018B0  6E2E               	movwf	(___flmul@a+2)^0,c
  2949  0018B2  0E43               	movlw	67
  2950  0018B4  6E2F               	movwf	(___flmul@a+3)^0,c
  2951  0018B6  EC48  F010         	call	___flmul	;wreg free
  2952  0018BA  C028  F0FA         	movff	?___flmul,_detect_color$3250
  2953  0018BE  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  2954  0018C2  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  2955  0018C6  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  2956                           
  2957                           ;color.c: 333:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  2958  0018CA  0E01               	movlw	1
  2959  0018CC  0100               	movlb	0	; () banked
  2960  0018CE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2961  0018D0  0EE0               	movlw	224
  2962  0018D2  6F6A               	movwf	compare@lower& (0+255),b
  2963  0018D4  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  2964  0018D8  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  2965  0018DC  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  2966  0018E0  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  2967  0018E4  EC98  F02C         	call	_lroundf	;wreg free
  2968  0018E8  C066  F06C         	movff	?_lroundf,compare@value2compare
  2969  0018EC  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2970  0018F0  0E02               	movlw	2
  2971  0018F2  0100               	movlb	0	; () banked
  2972  0018F4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2973  0018F6  0E08               	movlw	8
  2974  0018F8  6F6E               	movwf	compare@upper& (0+255),b
  2975  0018FA  EC7B  F02C         	call	_compare	;wreg free
  2976  0018FE  0900               	iorlw	0
  2977  001900  B4D8               	btfsc	status,2,c
  2978  001902  EF85  F00C         	goto	u5131
  2979  001906  EF87  F00C         	goto	u5130
  2980  00190A                     u5131:
  2981  00190A  EF8C  F00C         	goto	l5110
  2982  00190E                     u5130:
  2983  00190E  0E06               	movlw	6
  2984  001910  0100               	movlb	0	; () banked
  2985  001912  6FF3               	movwf	detect_color@color& (0+255),b
  2986  001914  EF61  F00D         	goto	l5128
  2987  001918                     l5110:
  2988  001918  0E01               	movlw	1
  2989  00191A  0100               	movlb	0	; () banked
  2990  00191C  6FF3               	movwf	detect_color@color& (0+255),b
  2991  00191E  EF61  F00D         	goto	l5128
  2992  001922                     l5112:
  2993                           
  2994                           ;color.c: 338:             if (BG > BR) {color = 7;}
  2995  001922  0100               	movlb	0	; () banked
  2996  001924  51F6               	movf	detect_color@BG& (0+255),w,b
  2997  001926  5DF8               	subwf	detect_color@BR& (0+255),w,b
  2998  001928  51F7               	movf	(detect_color@BG+1)& (0+255),w,b
  2999  00192A  59F9               	subwfb	(detect_color@BR+1)& (0+255),w,b
  3000  00192C  B0D8               	btfsc	status,0,c
  3001  00192E  EF9B  F00C         	goto	u5141
  3002  001932  EF9D  F00C         	goto	u5140
  3003  001936                     u5141:
  3004  001936  EFA1  F00C         	goto	l5116
  3005  00193A                     u5140:
  3006  00193A                     
  3007                           ; BSR set to: 0
  3008  00193A  0E07               	movlw	7
  3009  00193C  6FF3               	movwf	detect_color@color& (0+255),b
  3010  00193E  EF61  F00D         	goto	l5128
  3011  001942                     l5116:
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;color.c: 340:                 if (compare(490, lroundf((float)BG / BB * 500), 520)){col
      +                          or = 5;}
  3015  001942  C0F4  F001         	movff	detect_color@BB,___xxtofl@val
  3016  001946  C0F5  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3017  00194A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3018  00194C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3019  00194E  0E00               	movlw	0
  3020  001950  EC53  F01F         	call	___xxtofl
  3021  001954  C001  F013         	movff	?___xxtofl,___fldiv@a
  3022  001958  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3023  00195C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3024  001960  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3025  001964  C0F6  F001         	movff	detect_color@BG,___xxtofl@val
  3026  001968  C0F7  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  3027  00196C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3028  00196E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3029  001970  0E00               	movlw	0
  3030  001972  EC53  F01F         	call	___xxtofl
  3031  001976  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3032  00197A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3033  00197E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3034  001982  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3035  001986  EC34  F014         	call	___fldiv	;wreg free
  3036  00198A  C00F  F028         	movff	?___fldiv,___flmul@b
  3037  00198E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3038  001992  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3039  001996  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3040  00199A  0E00               	movlw	0
  3041  00199C  6E2C               	movwf	___flmul@a^0,c
  3042  00199E  0E00               	movlw	0
  3043  0019A0  6E2D               	movwf	(___flmul@a+1)^0,c
  3044  0019A2  0EFA               	movlw	250
  3045  0019A4  6E2E               	movwf	(___flmul@a+2)^0,c
  3046  0019A6  0E43               	movlw	67
  3047  0019A8  6E2F               	movwf	(___flmul@a+3)^0,c
  3048  0019AA  EC48  F010         	call	___flmul	;wreg free
  3049  0019AE  C028  F0FA         	movff	?___flmul,_detect_color$3250
  3050  0019B2  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  3051  0019B6  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  3052  0019BA  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  3053                           
  3054                           ;color.c: 340:                 if (compare(490, lroundf((float)BG / BB * 500), 520)){col
      +                          or = 5;}
  3055  0019BE  0E01               	movlw	1
  3056  0019C0  0100               	movlb	0	; () banked
  3057  0019C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3058  0019C4  0EEA               	movlw	234
  3059  0019C6  6F6A               	movwf	compare@lower& (0+255),b
  3060  0019C8  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  3061  0019CC  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  3062  0019D0  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  3063  0019D4  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  3064  0019D8  EC98  F02C         	call	_lroundf	;wreg free
  3065  0019DC  C066  F06C         	movff	?_lroundf,compare@value2compare
  3066  0019E0  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3067  0019E4  0E02               	movlw	2
  3068  0019E6  0100               	movlb	0	; () banked
  3069  0019E8  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3070  0019EA  0E08               	movlw	8
  3071  0019EC  6F6E               	movwf	compare@upper& (0+255),b
  3072  0019EE  EC7B  F02C         	call	_compare	;wreg free
  3073  0019F2  0900               	iorlw	0
  3074  0019F4  B4D8               	btfsc	status,2,c
  3075  0019F6  EFFF  F00C         	goto	u5151
  3076  0019FA  EF01  F00D         	goto	u5150
  3077  0019FE                     u5151:
  3078  0019FE  EF01  F00D         	goto	l5120
  3079  001A02                     u5150:
  3080  001A02                     l5120:
  3081                           
  3082                           ;color.c: 341:                 if (lroundf((float)BG / BB * 500) > 520) {color = 4;}
  3083  001A02  C0F4  F001         	movff	detect_color@BB,___xxtofl@val
  3084  001A06  C0F5  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3085  001A0A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3086  001A0C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3087  001A0E  0E00               	movlw	0
  3088  001A10  EC53  F01F         	call	___xxtofl
  3089  001A14  C001  F013         	movff	?___xxtofl,___fldiv@a
  3090  001A18  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3091  001A1C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3092  001A20  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3093  001A24  C0F6  F001         	movff	detect_color@BG,___xxtofl@val
  3094  001A28  C0F7  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  3095  001A2C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3096  001A2E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3097  001A30  0E00               	movlw	0
  3098  001A32  EC53  F01F         	call	___xxtofl
  3099  001A36  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3100  001A3A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3101  001A3E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3102  001A42  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3103  001A46  EC34  F014         	call	___fldiv	;wreg free
  3104  001A4A  C00F  F028         	movff	?___fldiv,___flmul@b
  3105  001A4E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3106  001A52  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3107  001A56  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3108  001A5A  0E00               	movlw	0
  3109  001A5C  6E2C               	movwf	___flmul@a^0,c
  3110  001A5E  0E00               	movlw	0
  3111  001A60  6E2D               	movwf	(___flmul@a+1)^0,c
  3112  001A62  0EFA               	movlw	250
  3113  001A64  6E2E               	movwf	(___flmul@a+2)^0,c
  3114  001A66  0E43               	movlw	67
  3115  001A68  6E2F               	movwf	(___flmul@a+3)^0,c
  3116  001A6A  EC48  F010         	call	___flmul	;wreg free
  3117  001A6E  C028  F0FA         	movff	?___flmul,_detect_color$3250
  3118  001A72  C029  F0FB         	movff	?___flmul+1,_detect_color$3250+1
  3119  001A76  C02A  F0FC         	movff	?___flmul+2,_detect_color$3250+2
  3120  001A7A  C02B  F0FD         	movff	?___flmul+3,_detect_color$3250+3
  3121  001A7E                     
  3122                           ;color.c: 341:                 if (lroundf((float)BG / BB * 500) > 520) {color = 4;}
  3123  001A7E  C0FA  F066         	movff	_detect_color$3250,lroundf@x
  3124  001A82  C0FB  F067         	movff	_detect_color$3250+1,lroundf@x+1
  3125  001A86  C0FC  F068         	movff	_detect_color$3250+2,lroundf@x+2
  3126  001A8A  C0FD  F069         	movff	_detect_color$3250+3,lroundf@x+3
  3127  001A8E  EC98  F02C         	call	_lroundf	;wreg free
  3128  001A92  0100               	movlb	0	; () banked
  3129  001A94  BF69               	btfsc	(?_lroundf+3)& (0+255),7,b
  3130  001A96  EF59  F00D         	goto	u5161
  3131  001A9A  5169               	movf	(?_lroundf+3)& (0+255),w,b
  3132  001A9C  1168               	iorwf	(?_lroundf+2)& (0+255),w,b
  3133  001A9E  E10B               	bnz	u5160
  3134  001AA0  0E09               	movlw	9
  3135  001AA2  5D66               	subwf	?_lroundf& (0+255),w,b
  3136  001AA4  0E02               	movlw	2
  3137  001AA6  5967               	subwfb	(?_lroundf+1)& (0+255),w,b
  3138  001AA8  A0D8               	btfss	status,0,c
  3139  001AAA  EF59  F00D         	goto	u5161
  3140  001AAE  EF5B  F00D         	goto	u5160
  3141  001AB2                     u5161:
  3142  001AB2  EF5F  F00D         	goto	l5126
  3143  001AB6                     u5160:
  3144  001AB6                     
  3145                           ; BSR set to: 0
  3146  001AB6  0E04               	movlw	4
  3147  001AB8  6FF3               	movwf	detect_color@color& (0+255),b
  3148  001ABA  EF61  F00D         	goto	l5128
  3149  001ABE                     l5126:
  3150                           
  3151                           ; BSR set to: 0
  3152  001ABE  0E00               	movlw	0
  3153  001AC0  6FF3               	movwf	detect_color@color& (0+255),b
  3154  001AC2                     l5128:
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;color.c: 347:     if (compare(90, BR, BR * 30) && compare(90, BB, BR * 30)){color = 8;}
  3158  001AC2  0E00               	movlw	0
  3159  001AC4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3160  001AC6  0E5A               	movlw	90
  3161  001AC8  6F6A               	movwf	compare@lower& (0+255),b
  3162  001ACA  C0F8  F06C         	movff	detect_color@BR,compare@value2compare
  3163  001ACE  C0F9  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3164  001AD2  C0F8  F001         	movff	detect_color@BR,___wmul@multiplier
  3165  001AD6  C0F9  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3166  001ADA  0E00               	movlw	0
  3167  001ADC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3168  001ADE  0E1E               	movlw	30
  3169  001AE0  6E03               	movwf	___wmul@multiplicand^0,c
  3170  001AE2  EC5E  F02D         	call	___wmul	;wreg free
  3171  001AE6  C001  F06E         	movff	?___wmul,compare@upper
  3172  001AEA  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3173  001AEE  EC7B  F02C         	call	_compare	;wreg free
  3174  001AF2  0900               	iorlw	0
  3175  001AF4  B4D8               	btfsc	status,2,c
  3176  001AF6  EF7F  F00D         	goto	u5171
  3177  001AFA  EF81  F00D         	goto	u5170
  3178  001AFE                     u5171:
  3179  001AFE  EFA5  F00D         	goto	l5134
  3180  001B02                     u5170:
  3181  001B02  0E00               	movlw	0
  3182  001B04  0100               	movlb	0	; () banked
  3183  001B06  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3184  001B08  0E5A               	movlw	90
  3185  001B0A  6F6A               	movwf	compare@lower& (0+255),b
  3186  001B0C  C0F4  F06C         	movff	detect_color@BB,compare@value2compare
  3187  001B10  C0F5  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  3188  001B14  C0F8  F001         	movff	detect_color@BR,___wmul@multiplier
  3189  001B18  C0F9  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3190  001B1C  0E00               	movlw	0
  3191  001B1E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3192  001B20  0E1E               	movlw	30
  3193  001B22  6E03               	movwf	___wmul@multiplicand^0,c
  3194  001B24  EC5E  F02D         	call	___wmul	;wreg free
  3195  001B28  C001  F06E         	movff	?___wmul,compare@upper
  3196  001B2C  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3197  001B30  EC7B  F02C         	call	_compare	;wreg free
  3198  001B34  0900               	iorlw	0
  3199  001B36  B4D8               	btfsc	status,2,c
  3200  001B38  EFA0  F00D         	goto	u5181
  3201  001B3C  EFA2  F00D         	goto	u5180
  3202  001B40                     u5181:
  3203  001B40  EFA5  F00D         	goto	l5134
  3204  001B44                     u5180:
  3205  001B44  0E08               	movlw	8
  3206  001B46  0100               	movlb	0	; () banked
  3207  001B48  6FF3               	movwf	detect_color@color& (0+255),b
  3208  001B4A                     l5134:
  3209                           
  3210                           ;color.c: 348:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3211  001B4A  0E00               	movlw	0
  3212  001B4C  0100               	movlb	0	; () banked
  3213  001B4E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3214  001B50  0E00               	movlw	0
  3215  001B52  6F6A               	movwf	compare@lower& (0+255),b
  3216  001B54  C0F8  F06C         	movff	detect_color@BR,compare@value2compare
  3217  001B58  C0F9  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3218  001B5C  0E00               	movlw	0
  3219  001B5E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3220  001B60  0E19               	movlw	25
  3221  001B62  6F6E               	movwf	compare@upper& (0+255),b
  3222  001B64  EC7B  F02C         	call	_compare	;wreg free
  3223  001B68  0900               	iorlw	0
  3224  001B6A  B4D8               	btfsc	status,2,c
  3225  001B6C  EFBA  F00D         	goto	u5191
  3226  001B70  EFBC  F00D         	goto	u5190
  3227  001B74                     u5191:
  3228  001B74  EFD6  F00D         	goto	l5140
  3229  001B78                     u5190:
  3230  001B78  0E00               	movlw	0
  3231  001B7A  0100               	movlb	0	; () banked
  3232  001B7C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3233  001B7E  0E00               	movlw	0
  3234  001B80  6F6A               	movwf	compare@lower& (0+255),b
  3235  001B82  C0F1  F06C         	movff	detect_color@RR,compare@value2compare
  3236  001B86  C0F2  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3237  001B8A  0E00               	movlw	0
  3238  001B8C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3239  001B8E  0E5A               	movlw	90
  3240  001B90  6F6E               	movwf	compare@upper& (0+255),b
  3241  001B92  EC7B  F02C         	call	_compare	;wreg free
  3242  001B96  0900               	iorlw	0
  3243  001B98  B4D8               	btfsc	status,2,c
  3244  001B9A  EFD1  F00D         	goto	u5201
  3245  001B9E  EFD3  F00D         	goto	u5200
  3246  001BA2                     u5201:
  3247  001BA2  EFD6  F00D         	goto	l5140
  3248  001BA6                     u5200:
  3249  001BA6  0E00               	movlw	0
  3250  001BA8  0100               	movlb	0	; () banked
  3251  001BAA  6FF3               	movwf	detect_color@color& (0+255),b
  3252  001BAC                     l5140:
  3253                           
  3254                           ;color.c: 350:     if (color == 8) {toggle_light(2,1);}
  3255  001BAC  0E08               	movlw	8
  3256  001BAE  0100               	movlb	0	; () banked
  3257  001BB0  19F3               	xorwf	detect_color@color& (0+255),w,b
  3258  001BB2  A4D8               	btfss	status,2,c
  3259  001BB4  EFDE  F00D         	goto	u5211
  3260  001BB8  EFE0  F00D         	goto	u5210
  3261  001BBC                     u5211:
  3262  001BBC  EFE5  F00D         	goto	l5144
  3263  001BC0                     u5210:
  3264  001BC0                     
  3265                           ; BSR set to: 0
  3266  001BC0  0E01               	movlw	1
  3267  001BC2  6E01               	movwf	toggle_light@toggletime^0,c
  3268  001BC4  0E02               	movlw	2
  3269  001BC6  EC56  F01A         	call	_toggle_light
  3270  001BCA                     l5144:
  3271                           
  3272                           ;color.c: 352:     return color;
  3273  001BCA  0100               	movlb	0	; () banked
  3274  001BCC  51F3               	movf	detect_color@color& (0+255),w,b
  3275  001BCE                     
  3276                           ; BSR set to: 0
  3277  001BCE  0012               	return		;funcret
  3278  001BD0                     __end_of_detect_color:
  3279                           	callstack 0
  3280                           
  3281 ;; *************** function _compare *****************
  3282 ;; Defined at:
  3283 ;;		line 355 in file "color.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  lower           2   10[BANK0 ] unsigned int 
  3286 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3287 ;;  upper           2   14[BANK0 ] unsigned int 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  result          1   16[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3299 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3302 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3303 ;;Total ram usage:        7 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 1
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_detect_color
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313                           	psect	text5
  3314  0058F6                     __ptext5:
  3315                           	callstack 0
  3316  0058F6                     _compare:
  3317                           	callstack 27
  3318  0058F6                     
  3319                           ;color.c: 355: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 356: {;color.c: 357:     unsigned char result = 0;
  3320  0058F6  0E00               	movlw	0
  3321  0058F8  0100               	movlb	0	; () banked
  3322  0058FA  6F70               	movwf	compare@result& (0+255),b
  3323  0058FC                     
  3324                           ; BSR set to: 0
  3325                           ;color.c: 358:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3326  0058FC  516C               	movf	compare@value2compare& (0+255),w,b
  3327  0058FE  5D6A               	subwf	compare@lower& (0+255),w,b
  3328  005900  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3329  005902  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3330  005904  B0D8               	btfsc	status,0,c
  3331  005906  EF87  F02C         	goto	u4551
  3332  00590A  EF89  F02C         	goto	u4550
  3333  00590E                     u4551:
  3334  00590E  EF96  F02C         	goto	l163
  3335  005912                     u4550:
  3336  005912                     
  3337                           ; BSR set to: 0
  3338  005912  516C               	movf	compare@value2compare& (0+255),w,b
  3339  005914  5D6E               	subwf	compare@upper& (0+255),w,b
  3340  005916  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3341  005918  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3342  00591A  A0D8               	btfss	status,0,c
  3343  00591C  EF92  F02C         	goto	u4561
  3344  005920  EF94  F02C         	goto	u4560
  3345  005924                     u4561:
  3346  005924  EF96  F02C         	goto	l163
  3347  005928                     u4560:
  3348  005928                     
  3349                           ; BSR set to: 0
  3350  005928  0E01               	movlw	1
  3351  00592A  6F70               	movwf	compare@result& (0+255),b
  3352  00592C                     l163:
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;color.c: 359:     return result;
  3356  00592C  5170               	movf	compare@result& (0+255),w,b
  3357  00592E                     
  3358                           ; BSR set to: 0
  3359  00592E  0012               	return		;funcret
  3360  005930                     __end_of_compare:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _color_data_collection *****************
  3364 ;; Defined at:
  3365 ;;		line 200 in file "color.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3368 ;;		 -> main@rgb(8), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  x               2  132[BANK0 ] int 
  3371 ;;  k               2  130[BANK0 ] int 
  3372 ;;  j               2  128[BANK0 ] int 
  3373 ;;  i               2  126[BANK0 ] int 
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;Total ram usage:       12 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 10
  3390 ;; This function calls:
  3391 ;;		_LED_B
  3392 ;;		_LED_C
  3393 ;;		_LED_G
  3394 ;;		_LED_R
  3395 ;;		_color_display
  3396 ;;		_color_predict
  3397 ;;		_read_color
  3398 ;; This function is called by:
  3399 ;;		_test_function
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text6
  3404  003CF0                     __ptext6:
  3405                           	callstack 0
  3406  003CF0                     _color_data_collection:
  3407                           	callstack 19
  3408  003CF0                     
  3409                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3410  003CF0  0E00               	movlw	0
  3411  003CF2  0100               	movlb	0	; () banked
  3412  003CF4  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3413  003CF6  0E00               	movlw	0
  3414  003CF8  6FDE               	movwf	color_data_collection@i& (0+255),b
  3415  003CFA  0E00               	movlw	0
  3416  003CFC  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3417  003CFE  0E00               	movlw	0
  3418  003D00  6FE2               	movwf	color_data_collection@k& (0+255),b
  3419  003D02  0E00               	movlw	0
  3420  003D04  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3421  003D06  0E00               	movlw	0
  3422  003D08  6FE4               	movwf	color_data_collection@x& (0+255),b
  3423                           
  3424                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3425  003D0A  0E00               	movlw	0
  3426  003D0C  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3427  003D0E  0E00               	movlw	0
  3428  003D10  6FDE               	movwf	color_data_collection@i& (0+255),b
  3429  003D12                     l4894:
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;color.c: 204:         LED_C();
  3433  003D12  ECB1  F02D         	call	_LED_C	;wreg free
  3434  003D16                     
  3435                           ;color.c: 205:         read_color(m);
  3436  003D16  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3437  003D1A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3438  003D1E  EC56  F02A         	call	_read_color	;wreg free
  3439  003D22                     
  3440                           ;color.c: 206:         color_display(m);
  3441  003D22  C05A  F058         	movff	color_data_collection@m,color_display@m
  3442  003D26  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3443  003D2A  ECED  F029         	call	_color_display	;wreg free
  3444  003D2E                     
  3445                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3446  003D2E  0E09               	movlw	9
  3447  003D30  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3448  003D32  0E1E               	movlw	30
  3449  003D34  6E5C               	movwf	??_color_data_collection^0,c
  3450  003D36  0EE4               	movlw	228
  3451  003D38                     u5717:
  3452  003D38  2EE8               	decfsz	wreg,f,c
  3453  003D3A  D7FE               	bra	u5717
  3454  003D3C  2E5C               	decfsz	??_color_data_collection^0,f,c
  3455  003D3E  D7FC               	bra	u5717
  3456  003D40  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3457  003D42  D7FA               	bra	u5717
  3458  003D44  D000               	nop2	
  3459  003D46                     
  3460                           ;color.c: 208:     }
  3461  003D46  0100               	movlb	0	; () banked
  3462  003D48  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3463  003D4A  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3464  003D4C                     
  3465                           ; BSR set to: 0
  3466  003D4C  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3467  003D4E  EFB2  F01E         	goto	u5061
  3468  003D52  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3469  003D54  E109               	bnz	u5060
  3470  003D56  0E05               	movlw	5
  3471  003D58  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3472  003D5A  A0D8               	btfss	status,0,c
  3473  003D5C  EFB2  F01E         	goto	u5061
  3474  003D60  EFB4  F01E         	goto	u5060
  3475  003D64                     u5061:
  3476  003D64  EF89  F01E         	goto	l4894
  3477  003D68                     u5060:
  3478  003D68                     
  3479                           ; BSR set to: 0
  3480                           ;color.c: 209:     color_predict(00000);
  3481  003D68  0E00               	movlw	0
  3482  003D6A  EC1E  F02D         	call	_color_predict
  3483  003D6E                     
  3484                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3485  003D6E  0E00               	movlw	0
  3486  003D70  0100               	movlb	0	; () banked
  3487  003D72  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3488  003D74  0E00               	movlw	0
  3489  003D76  6FE0               	movwf	color_data_collection@j& (0+255),b
  3490  003D78                     l4914:
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;color.c: 211:         LED_R();
  3494  003D78  EC71  F02D         	call	_LED_R	;wreg free
  3495  003D7C                     
  3496                           ;color.c: 212:         read_color(m);
  3497  003D7C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3498  003D80  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3499  003D84  EC56  F02A         	call	_read_color	;wreg free
  3500  003D88                     
  3501                           ;color.c: 213:         color_display(m);
  3502  003D88  C05A  F058         	movff	color_data_collection@m,color_display@m
  3503  003D8C  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3504  003D90  ECED  F029         	call	_color_display	;wreg free
  3505  003D94                     
  3506                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3507  003D94  0E09               	movlw	9
  3508  003D96  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3509  003D98  0E1E               	movlw	30
  3510  003D9A  6E5C               	movwf	??_color_data_collection^0,c
  3511  003D9C  0EE4               	movlw	228
  3512  003D9E                     u5727:
  3513  003D9E  2EE8               	decfsz	wreg,f,c
  3514  003DA0  D7FE               	bra	u5727
  3515  003DA2  2E5C               	decfsz	??_color_data_collection^0,f,c
  3516  003DA4  D7FC               	bra	u5727
  3517  003DA6  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3518  003DA8  D7FA               	bra	u5727
  3519  003DAA  D000               	nop2	
  3520  003DAC                     
  3521                           ;color.c: 215:     }
  3522  003DAC  0100               	movlb	0	; () banked
  3523  003DAE  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3524  003DB0  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3525  003DB2                     
  3526                           ; BSR set to: 0
  3527  003DB2  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3528  003DB4  EFE5  F01E         	goto	u5071
  3529  003DB8  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3530  003DBA  E109               	bnz	u5070
  3531  003DBC  0E05               	movlw	5
  3532  003DBE  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3533  003DC0  A0D8               	btfss	status,0,c
  3534  003DC2  EFE5  F01E         	goto	u5071
  3535  003DC6  EFE7  F01E         	goto	u5070
  3536  003DCA                     u5071:
  3537  003DCA  EFBC  F01E         	goto	l4914
  3538  003DCE                     u5070:
  3539  003DCE                     
  3540                           ; BSR set to: 0
  3541                           ;color.c: 216:     color_predict(00000);
  3542  003DCE  0E00               	movlw	0
  3543  003DD0  EC1E  F02D         	call	_color_predict
  3544  003DD4                     
  3545                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3546  003DD4  0E00               	movlw	0
  3547  003DD6  0100               	movlb	0	; () banked
  3548  003DD8  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3549  003DDA  0E00               	movlw	0
  3550  003DDC  6FE2               	movwf	color_data_collection@k& (0+255),b
  3551  003DDE                     l4934:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;color.c: 218:         LED_G();
  3555  003DDE  EC91  F02D         	call	_LED_G	;wreg free
  3556  003DE2                     
  3557                           ;color.c: 219:         read_color(m);
  3558  003DE2  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3559  003DE6  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3560  003DEA  EC56  F02A         	call	_read_color	;wreg free
  3561  003DEE                     
  3562                           ;color.c: 220:         color_display(m);
  3563  003DEE  C05A  F058         	movff	color_data_collection@m,color_display@m
  3564  003DF2  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3565  003DF6  ECED  F029         	call	_color_display	;wreg free
  3566  003DFA                     
  3567                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3568  003DFA  0E09               	movlw	9
  3569  003DFC  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3570  003DFE  0E1E               	movlw	30
  3571  003E00  6E5C               	movwf	??_color_data_collection^0,c
  3572  003E02  0EE4               	movlw	228
  3573  003E04                     u5737:
  3574  003E04  2EE8               	decfsz	wreg,f,c
  3575  003E06  D7FE               	bra	u5737
  3576  003E08  2E5C               	decfsz	??_color_data_collection^0,f,c
  3577  003E0A  D7FC               	bra	u5737
  3578  003E0C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3579  003E0E  D7FA               	bra	u5737
  3580  003E10  D000               	nop2	
  3581  003E12                     
  3582                           ;color.c: 222:     }
  3583  003E12  0100               	movlb	0	; () banked
  3584  003E14  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3585  003E16  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3586  003E18                     
  3587                           ; BSR set to: 0
  3588  003E18  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3589  003E1A  EF18  F01F         	goto	u5081
  3590  003E1E  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3591  003E20  E109               	bnz	u5080
  3592  003E22  0E05               	movlw	5
  3593  003E24  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3594  003E26  A0D8               	btfss	status,0,c
  3595  003E28  EF18  F01F         	goto	u5081
  3596  003E2C  EF1A  F01F         	goto	u5080
  3597  003E30                     u5081:
  3598  003E30  EFEF  F01E         	goto	l4934
  3599  003E34                     u5080:
  3600  003E34                     
  3601                           ; BSR set to: 0
  3602                           ;color.c: 223:     color_predict(00000);
  3603  003E34  0E00               	movlw	0
  3604  003E36  EC1E  F02D         	call	_color_predict
  3605  003E3A                     
  3606                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3607  003E3A  0E00               	movlw	0
  3608  003E3C  0100               	movlb	0	; () banked
  3609  003E3E  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3610  003E40  0E00               	movlw	0
  3611  003E42  6FE4               	movwf	color_data_collection@x& (0+255),b
  3612  003E44                     l4954:
  3613                           
  3614                           ; BSR set to: 0
  3615                           ;color.c: 225:         LED_B();
  3616  003E44  ECA1  F02D         	call	_LED_B	;wreg free
  3617  003E48                     
  3618                           ;color.c: 226:         read_color(m);
  3619  003E48  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3620  003E4C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3621  003E50  EC56  F02A         	call	_read_color	;wreg free
  3622  003E54                     
  3623                           ;color.c: 227:         color_display(m);
  3624  003E54  C05A  F058         	movff	color_data_collection@m,color_display@m
  3625  003E58  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3626  003E5C  ECED  F029         	call	_color_display	;wreg free
  3627  003E60                     
  3628                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3629  003E60  0E09               	movlw	9
  3630  003E62  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3631  003E64  0E1E               	movlw	30
  3632  003E66  6E5C               	movwf	??_color_data_collection^0,c
  3633  003E68  0EE4               	movlw	228
  3634  003E6A                     u5747:
  3635  003E6A  2EE8               	decfsz	wreg,f,c
  3636  003E6C  D7FE               	bra	u5747
  3637  003E6E  2E5C               	decfsz	??_color_data_collection^0,f,c
  3638  003E70  D7FC               	bra	u5747
  3639  003E72  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3640  003E74  D7FA               	bra	u5747
  3641  003E76  D000               	nop2	
  3642  003E78                     
  3643                           ;color.c: 229:     }
  3644  003E78  0100               	movlb	0	; () banked
  3645  003E7A  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3646  003E7C  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3647  003E7E                     
  3648                           ; BSR set to: 0
  3649  003E7E  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3650  003E80  EF4B  F01F         	goto	u5091
  3651  003E84  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3652  003E86  E109               	bnz	u5090
  3653  003E88  0E05               	movlw	5
  3654  003E8A  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3655  003E8C  A0D8               	btfss	status,0,c
  3656  003E8E  EF4B  F01F         	goto	u5091
  3657  003E92  EF4D  F01F         	goto	u5090
  3658  003E96                     u5091:
  3659  003E96  EF22  F01F         	goto	l4954
  3660  003E9A                     u5090:
  3661  003E9A                     
  3662                           ; BSR set to: 0
  3663                           ;color.c: 230:     color_predict(1);
  3664  003E9A  0E01               	movlw	1
  3665  003E9C  EC1E  F02D         	call	_color_predict
  3666  003EA0                     
  3667                           ;color.c: 231:     LED_C();
  3668  003EA0  ECB1  F02D         	call	_LED_C	;wreg free
  3669  003EA4  0012               	return		;funcret
  3670  003EA6                     __end_of_color_data_collection:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _read_color *****************
  3674 ;; Defined at:
  3675 ;;		line 147 in file "color.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3678 ;;		 -> main@rgb(8), 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;Total ram usage:        2 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 4
  3697 ;; This function calls:
  3698 ;;		_color_read_Blue
  3699 ;;		_color_read_Clear
  3700 ;;		_color_read_Green
  3701 ;;		_color_read_Red
  3702 ;; This function is called by:
  3703 ;;		_color_data_collection
  3704 ;;		_detect_color
  3705 ;;		_test_function
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text7
  3710  0054AC                     __ptext7:
  3711                           	callstack 0
  3712  0054AC                     _read_color:
  3713                           	callstack 24
  3714  0054AC                     
  3715                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3716  0054AC  ECAE  F02A         	call	_color_read_Red	;wreg free
  3717  0054B0  C00C  FFD9         	movff	read_color@m,fsr2l
  3718  0054B4  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3719  0054B8  C005  FFDE         	movff	?_color_read_Red,postinc2
  3720  0054BC  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3721                           
  3722                           ;color.c: 150:     m->B = color_read_Blue();
  3723  0054C0  ECFE  F02A         	call	_color_read_Blue	;wreg free
  3724  0054C4  EE20 F004          	lfsr	2,4
  3725  0054C8  500C               	movf	read_color@m^0,w,c
  3726  0054CA  26D9               	addwf	fsr2l,f,c
  3727  0054CC  500D               	movf	(read_color@m+1)^0,w,c
  3728  0054CE  22DA               	addwfc	fsr2h,f,c
  3729  0054D0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3730  0054D4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3731                           
  3732                           ;color.c: 151:     m->G = color_read_Green();
  3733  0054D8  ECD6  F02A         	call	_color_read_Green	;wreg free
  3734  0054DC  EE20 F002          	lfsr	2,2
  3735  0054E0  500C               	movf	read_color@m^0,w,c
  3736  0054E2  26D9               	addwf	fsr2l,f,c
  3737  0054E4  500D               	movf	(read_color@m+1)^0,w,c
  3738  0054E6  22DA               	addwfc	fsr2h,f,c
  3739  0054E8  C005  FFDE         	movff	?_color_read_Green,postinc2
  3740  0054EC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3741                           
  3742                           ;color.c: 152:     m->C = color_read_Clear();
  3743  0054F0  EC26  F02B         	call	_color_read_Clear	;wreg free
  3744  0054F4  EE20 F006          	lfsr	2,6
  3745  0054F8  500C               	movf	read_color@m^0,w,c
  3746  0054FA  26D9               	addwf	fsr2l,f,c
  3747  0054FC  500D               	movf	(read_color@m+1)^0,w,c
  3748  0054FE  22DA               	addwfc	fsr2h,f,c
  3749  005500  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3750  005504  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3751  005508  0012               	return		;funcret
  3752  00550A                     __end_of_read_color:
  3753                           	callstack 0
  3754                           
  3755 ;; *************** function _color_display *****************
  3756 ;; Defined at:
  3757 ;;		line 234 in file "color.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3760 ;;		 -> main@rgb(8), 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3773 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;Total ram usage:      102 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 9
  3779 ;; This function calls:
  3780 ;;		_sendStringSerial4
  3781 ;;		_sprintf
  3782 ;; This function is called by:
  3783 ;;		_color_data_collection
  3784 ;;		_test_function
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text8
  3789  0053DA                     __ptext8:
  3790                           	callstack 0
  3791  0053DA                     _color_display:
  3792                           	callstack 20
  3793  0053DA                     
  3794                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3795  0053DA  0E79               	movlw	low color_display@buf
  3796  0053DC  0100               	movlb	0	; () banked
  3797  0053DE  6F60               	movwf	sprintf@s& (0+255),b
  3798  0053E0  0E00               	movlw	high color_display@buf
  3799  0053E2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3800  0053E4  0E05               	movlw	low STR_1
  3801  0053E6  6F62               	movwf	sprintf@fmt& (0+255),b
  3802  0053E8  0E0E               	movlw	high STR_1
  3803  0053EA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3804  0053EC  C058  FFD9         	movff	color_display@m,fsr2l
  3805  0053F0  C059  FFDA         	movff	color_display@m+1,fsr2h
  3806  0053F4  CFDE F064          	movff	postinc2,?_sprintf+4
  3807  0053F8  CFDD F065          	movff	postdec2,?_sprintf+5
  3808  0053FC  EE20 F002          	lfsr	2,2
  3809  005400  5058               	movf	color_display@m^0,w,c
  3810  005402  26D9               	addwf	fsr2l,f,c
  3811  005404  5059               	movf	(color_display@m+1)^0,w,c
  3812  005406  22DA               	addwfc	fsr2h,f,c
  3813  005408  CFDE F066          	movff	postinc2,?_sprintf+6
  3814  00540C  CFDD F067          	movff	postdec2,?_sprintf+7
  3815  005410  EE20 F004          	lfsr	2,4
  3816  005414  5058               	movf	color_display@m^0,w,c
  3817  005416  26D9               	addwf	fsr2l,f,c
  3818  005418  5059               	movf	(color_display@m+1)^0,w,c
  3819  00541A  22DA               	addwfc	fsr2h,f,c
  3820  00541C  CFDE F068          	movff	postinc2,?_sprintf+8
  3821  005420  CFDD F069          	movff	postdec2,?_sprintf+9
  3822  005424  EE20 F006          	lfsr	2,6
  3823  005428  5058               	movf	color_display@m^0,w,c
  3824  00542A  26D9               	addwf	fsr2l,f,c
  3825  00542C  5059               	movf	(color_display@m+1)^0,w,c
  3826  00542E  22DA               	addwfc	fsr2h,f,c
  3827  005430  CFDE F06A          	movff	postinc2,?_sprintf+10
  3828  005434  CFDD F06B          	movff	postdec2,?_sprintf+11
  3829  005438  EC85  F02A         	call	_sprintf	;wreg free
  3830  00543C                     
  3831                           ;color.c: 238:     sendStringSerial4(buf);
  3832  00543C  0E79               	movlw	low color_display@buf
  3833  00543E  6E02               	movwf	sendStringSerial4@string^0,c
  3834  005440  0E00               	movlw	high color_display@buf
  3835  005442  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3836  005444  EC06  F02D         	call	_sendStringSerial4	;wreg free
  3837  005448  0012               	return		;funcret
  3838  00544A                     __end_of_color_display:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _calibrate_white *****************
  3842 ;; Defined at:
  3843 ;;		line 258 in file "color.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  w               2   11[COMRAM] PTR struct white_card
  3846 ;;		 -> main@white(28), 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;Total ram usage:        4 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 4
  3865 ;; This function calls:
  3866 ;;		_LED_B
  3867 ;;		_LED_C
  3868 ;;		_LED_G
  3869 ;;		_LED_OFF
  3870 ;;		_LED_R
  3871 ;;		_color_read_Blue
  3872 ;;		_color_read_Clear
  3873 ;;		_color_read_Green
  3874 ;;		_color_read_Red
  3875 ;;		_toggle_light
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;;		_test_function
  3879 ;; This function uses a non-reentrant model
  3880 ;;
  3881                           
  3882                           	psect	text9
  3883  003758                     __ptext9:
  3884                           	callstack 0
  3885  003758                     _calibrate_white:
  3886                           	callstack 25
  3887  003758                     
  3888                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  3889  003758  EC81  F02D         	call	_LED_OFF	;wreg free
  3890  00375C                     
  3891                           ;color.c: 261:     toggle_light(1,2);
  3892  00375C  0E02               	movlw	2
  3893  00375E  6E01               	movwf	toggle_light@toggletime^0,c
  3894  003760  0E01               	movlw	1
  3895  003762  EC56  F01A         	call	_toggle_light
  3896  003766                     
  3897                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3898  003766  0E29               	movlw	41
  3899  003768  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3900  00376A  0E96               	movlw	150
  3901  00376C  6E0E               	movwf	??_calibrate_white^0,c
  3902  00376E  0E7F               	movlw	127
  3903  003770                     u5757:
  3904  003770  2EE8               	decfsz	wreg,f,c
  3905  003772  D7FE               	bra	u5757
  3906  003774  2E0E               	decfsz	??_calibrate_white^0,f,c
  3907  003776  D7FC               	bra	u5757
  3908  003778  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3909  00377A  D7FA               	bra	u5757
  3910  00377C  F000               	nop	
  3911  00377E                     
  3912                           ;color.c: 264:     LED_R();
  3913  00377E  EC71  F02D         	call	_LED_R	;wreg free
  3914  003782                     
  3915                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  3916  003782  ECAE  F02A         	call	_color_read_Red	;wreg free
  3917  003786  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  3918  00378A  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  3919  00378E  C005  FFDE         	movff	?_color_read_Red,postinc2
  3920  003792  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3921  003796  ECD6  F02A         	call	_color_read_Green	;wreg free
  3922  00379A  EE20 F002          	lfsr	2,2
  3923  00379E  500C               	movf	calibrate_white@w^0,w,c
  3924  0037A0  26D9               	addwf	fsr2l,f,c
  3925  0037A2  500D               	movf	(calibrate_white@w+1)^0,w,c
  3926  0037A4  22DA               	addwfc	fsr2h,f,c
  3927  0037A6  C005  FFDE         	movff	?_color_read_Green,postinc2
  3928  0037AA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3929  0037AE  ECFE  F02A         	call	_color_read_Blue	;wreg free
  3930  0037B2  EE20 F004          	lfsr	2,4
  3931  0037B6  500C               	movf	calibrate_white@w^0,w,c
  3932  0037B8  26D9               	addwf	fsr2l,f,c
  3933  0037BA  500D               	movf	(calibrate_white@w+1)^0,w,c
  3934  0037BC  22DA               	addwfc	fsr2h,f,c
  3935  0037BE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3936  0037C2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3937  0037C6                     
  3938                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3939  0037C6  0E09               	movlw	9
  3940  0037C8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3941  0037CA  0E1E               	movlw	30
  3942  0037CC  6E0E               	movwf	??_calibrate_white^0,c
  3943  0037CE  0EE4               	movlw	228
  3944  0037D0                     u5767:
  3945  0037D0  2EE8               	decfsz	wreg,f,c
  3946  0037D2  D7FE               	bra	u5767
  3947  0037D4  2E0E               	decfsz	??_calibrate_white^0,f,c
  3948  0037D6  D7FC               	bra	u5767
  3949  0037D8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3950  0037DA  D7FA               	bra	u5767
  3951  0037DC  D000               	nop2	
  3952  0037DE                     
  3953                           ;color.c: 268:     LED_G();
  3954  0037DE  EC91  F02D         	call	_LED_G	;wreg free
  3955  0037E2                     
  3956                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  3957  0037E2  ECAE  F02A         	call	_color_read_Red	;wreg free
  3958  0037E6  EE20 F006          	lfsr	2,6
  3959  0037EA  500C               	movf	calibrate_white@w^0,w,c
  3960  0037EC  26D9               	addwf	fsr2l,f,c
  3961  0037EE  500D               	movf	(calibrate_white@w+1)^0,w,c
  3962  0037F0  22DA               	addwfc	fsr2h,f,c
  3963  0037F2  C005  FFDE         	movff	?_color_read_Red,postinc2
  3964  0037F6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3965  0037FA  ECD6  F02A         	call	_color_read_Green	;wreg free
  3966  0037FE  EE20 F008          	lfsr	2,8
  3967  003802  500C               	movf	calibrate_white@w^0,w,c
  3968  003804  26D9               	addwf	fsr2l,f,c
  3969  003806  500D               	movf	(calibrate_white@w+1)^0,w,c
  3970  003808  22DA               	addwfc	fsr2h,f,c
  3971  00380A  C005  FFDE         	movff	?_color_read_Green,postinc2
  3972  00380E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3973  003812  ECFE  F02A         	call	_color_read_Blue	;wreg free
  3974  003816  EE20 F00A          	lfsr	2,10
  3975  00381A  500C               	movf	calibrate_white@w^0,w,c
  3976  00381C  26D9               	addwf	fsr2l,f,c
  3977  00381E  500D               	movf	(calibrate_white@w+1)^0,w,c
  3978  003820  22DA               	addwfc	fsr2h,f,c
  3979  003822  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3980  003826  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3981  00382A                     
  3982                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3983  00382A  0E09               	movlw	9
  3984  00382C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3985  00382E  0E1E               	movlw	30
  3986  003830  6E0E               	movwf	??_calibrate_white^0,c
  3987  003832  0EE4               	movlw	228
  3988  003834                     u5777:
  3989  003834  2EE8               	decfsz	wreg,f,c
  3990  003836  D7FE               	bra	u5777
  3991  003838  2E0E               	decfsz	??_calibrate_white^0,f,c
  3992  00383A  D7FC               	bra	u5777
  3993  00383C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3994  00383E  D7FA               	bra	u5777
  3995  003840  D000               	nop2	
  3996  003842                     
  3997                           ;color.c: 273:     LED_B();
  3998  003842  ECA1  F02D         	call	_LED_B	;wreg free
  3999  003846                     
  4000                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  4001  003846  ECAE  F02A         	call	_color_read_Red	;wreg free
  4002  00384A  EE20 F00C          	lfsr	2,12
  4003  00384E  500C               	movf	calibrate_white@w^0,w,c
  4004  003850  26D9               	addwf	fsr2l,f,c
  4005  003852  500D               	movf	(calibrate_white@w+1)^0,w,c
  4006  003854  22DA               	addwfc	fsr2h,f,c
  4007  003856  C005  FFDE         	movff	?_color_read_Red,postinc2
  4008  00385A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4009  00385E  ECD6  F02A         	call	_color_read_Green	;wreg free
  4010  003862  EE20 F00E          	lfsr	2,14
  4011  003866  500C               	movf	calibrate_white@w^0,w,c
  4012  003868  26D9               	addwf	fsr2l,f,c
  4013  00386A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4014  00386C  22DA               	addwfc	fsr2h,f,c
  4015  00386E  C005  FFDE         	movff	?_color_read_Green,postinc2
  4016  003872  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4017  003876  ECFE  F02A         	call	_color_read_Blue	;wreg free
  4018  00387A  EE20 F010          	lfsr	2,16
  4019  00387E  500C               	movf	calibrate_white@w^0,w,c
  4020  003880  26D9               	addwf	fsr2l,f,c
  4021  003882  500D               	movf	(calibrate_white@w+1)^0,w,c
  4022  003884  22DA               	addwfc	fsr2h,f,c
  4023  003886  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4024  00388A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4025  00388E  EC26  F02B         	call	_color_read_Clear	;wreg free
  4026  003892  EE20 F01A          	lfsr	2,26
  4027  003896  500C               	movf	calibrate_white@w^0,w,c
  4028  003898  26D9               	addwf	fsr2l,f,c
  4029  00389A  500D               	movf	(calibrate_white@w+1)^0,w,c
  4030  00389C  22DA               	addwfc	fsr2h,f,c
  4031  00389E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4032  0038A2  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4033  0038A6                     
  4034                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4035  0038A6  0E09               	movlw	9
  4036  0038A8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4037  0038AA  0E1E               	movlw	30
  4038  0038AC  6E0E               	movwf	??_calibrate_white^0,c
  4039  0038AE  0EE4               	movlw	228
  4040  0038B0                     u5787:
  4041  0038B0  2EE8               	decfsz	wreg,f,c
  4042  0038B2  D7FE               	bra	u5787
  4043  0038B4  2E0E               	decfsz	??_calibrate_white^0,f,c
  4044  0038B6  D7FC               	bra	u5787
  4045  0038B8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4046  0038BA  D7FA               	bra	u5787
  4047  0038BC  D000               	nop2	
  4048  0038BE                     
  4049                           ;color.c: 277:     LED_C();
  4050  0038BE  ECB1  F02D         	call	_LED_C	;wreg free
  4051  0038C2                     
  4052                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4053  0038C2  ECAE  F02A         	call	_color_read_Red	;wreg free
  4054  0038C6  EE20 F012          	lfsr	2,18
  4055  0038CA  500C               	movf	calibrate_white@w^0,w,c
  4056  0038CC  26D9               	addwf	fsr2l,f,c
  4057  0038CE  500D               	movf	(calibrate_white@w+1)^0,w,c
  4058  0038D0  22DA               	addwfc	fsr2h,f,c
  4059  0038D2  C005  FFDE         	movff	?_color_read_Red,postinc2
  4060  0038D6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4061  0038DA  ECD6  F02A         	call	_color_read_Green	;wreg free
  4062  0038DE  EE20 F014          	lfsr	2,20
  4063  0038E2  500C               	movf	calibrate_white@w^0,w,c
  4064  0038E4  26D9               	addwf	fsr2l,f,c
  4065  0038E6  500D               	movf	(calibrate_white@w+1)^0,w,c
  4066  0038E8  22DA               	addwfc	fsr2h,f,c
  4067  0038EA  C005  FFDE         	movff	?_color_read_Green,postinc2
  4068  0038EE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4069  0038F2  ECFE  F02A         	call	_color_read_Blue	;wreg free
  4070  0038F6  EE20 F016          	lfsr	2,22
  4071  0038FA  500C               	movf	calibrate_white@w^0,w,c
  4072  0038FC  26D9               	addwf	fsr2l,f,c
  4073  0038FE  500D               	movf	(calibrate_white@w+1)^0,w,c
  4074  003900  22DA               	addwfc	fsr2h,f,c
  4075  003902  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4076  003906  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4077  00390A  EC26  F02B         	call	_color_read_Clear	;wreg free
  4078  00390E  EE20 F018          	lfsr	2,24
  4079  003912  500C               	movf	calibrate_white@w^0,w,c
  4080  003914  26D9               	addwf	fsr2l,f,c
  4081  003916  500D               	movf	(calibrate_white@w+1)^0,w,c
  4082  003918  22DA               	addwfc	fsr2h,f,c
  4083  00391A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4084  00391E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4085  003922                     
  4086                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4087  003922  0E29               	movlw	41
  4088  003924  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4089  003926  0E96               	movlw	150
  4090  003928  6E0E               	movwf	??_calibrate_white^0,c
  4091  00392A  0E7F               	movlw	127
  4092  00392C                     u5797:
  4093  00392C  2EE8               	decfsz	wreg,f,c
  4094  00392E  D7FE               	bra	u5797
  4095  003930  2E0E               	decfsz	??_calibrate_white^0,f,c
  4096  003932  D7FC               	bra	u5797
  4097  003934  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4098  003936  D7FA               	bra	u5797
  4099  003938  F000               	nop	
  4100  00393A                     
  4101                           ;color.c: 281:     LED_OFF();
  4102  00393A  EC81  F02D         	call	_LED_OFF	;wreg free
  4103  00393E                     
  4104                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4105  00393E  0E29               	movlw	41
  4106  003940  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4107  003942  0E96               	movlw	150
  4108  003944  6E0E               	movwf	??_calibrate_white^0,c
  4109  003946  0E7F               	movlw	127
  4110  003948                     u5807:
  4111  003948  2EE8               	decfsz	wreg,f,c
  4112  00394A  D7FE               	bra	u5807
  4113  00394C  2E0E               	decfsz	??_calibrate_white^0,f,c
  4114  00394E  D7FC               	bra	u5807
  4115  003950  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4116  003952  D7FA               	bra	u5807
  4117  003954  F000               	nop	
  4118                           
  4119                           ;color.c: 283:     toggle_light(1,2);
  4120  003956  0E02               	movlw	2
  4121  003958  6E01               	movwf	toggle_light@toggletime^0,c
  4122  00395A  0E01               	movlw	1
  4123  00395C  EC56  F01A         	call	_toggle_light
  4124  003960  0012               	return		;funcret
  4125  003962                     __end_of_calibrate_white:
  4126                           	callstack 0
  4127                           
  4128 ;; *************** function _color_read_Red *****************
  4129 ;; Defined at:
  4130 ;;		line 91 in file "color.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  tmp             2    9[COMRAM] unsigned int 
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  2    4[COMRAM] unsigned int 
  4137 ;; Registers used:
  4138 ;;		wreg, status,2, status,0, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;Total ram usage:        7 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 3
  4151 ;; This function calls:
  4152 ;;		_I2C_2_Master_Read
  4153 ;;		_I2C_2_Master_RepStart
  4154 ;;		_I2C_2_Master_Start
  4155 ;;		_I2C_2_Master_Stop
  4156 ;;		_I2C_2_Master_Write
  4157 ;; This function is called by:
  4158 ;;		_read_color
  4159 ;;		_calibrate_white
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text10
  4164  00555C                     __ptext10:
  4165                           	callstack 0
  4166  00555C                     _color_read_Red:
  4167                           	callstack 24
  4168  00555C                     
  4169                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4170  00555C  EC2C  F02E         	call	_I2C_2_Master_Start	;wreg free
  4171                           
  4172                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4173  005560  0E52               	movlw	82
  4174  005562  EC16  F02E         	call	_I2C_2_Master_Write
  4175                           
  4176                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4177  005566  0EB6               	movlw	182
  4178  005568  EC16  F02E         	call	_I2C_2_Master_Write
  4179                           
  4180                           ;color.c: 97:  I2C_2_Master_RepStart();
  4181  00556C  EC22  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  4182                           
  4183                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4184  005570  0E53               	movlw	83
  4185  005572  EC16  F02E         	call	_I2C_2_Master_Write
  4186                           
  4187                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4188  005576  0E01               	movlw	1
  4189  005578  ECB7  F02B         	call	_I2C_2_Master_Read
  4190  00557C  6E07               	movwf	??_color_read_Red^0,c
  4191  00557E  5007               	movf	??_color_read_Red^0,w,c
  4192  005580  6E0A               	movwf	color_read_Red@tmp^0,c
  4193  005582  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4194                           
  4195                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4196  005584  0E00               	movlw	0
  4197  005586  ECB7  F02B         	call	_I2C_2_Master_Read
  4198  00558A  6E07               	movwf	??_color_read_Red^0,c
  4199  00558C  5007               	movf	??_color_read_Red^0,w,c
  4200  00558E  6E09               	movwf	(??_color_read_Red+2)^0,c
  4201  005590  6A08               	clrf	(??_color_read_Red+1)^0,c
  4202  005592  500A               	movf	color_read_Red@tmp^0,w,c
  4203  005594  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4204  005596  6E0A               	movwf	color_read_Red@tmp^0,c
  4205  005598  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4206  00559A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4207  00559C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4208                           
  4209                           ;color.c: 101:  I2C_2_Master_Stop();
  4210  00559E  EC27  F02E         	call	_I2C_2_Master_Stop	;wreg free
  4211  0055A2                     
  4212                           ;color.c: 102:  return tmp;
  4213  0055A2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4214  0055A6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4215  0055AA  0012               	return		;funcret
  4216  0055AC                     __end_of_color_read_Red:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _color_read_Green *****************
  4220 ;; Defined at:
  4221 ;;		line 119 in file "color.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  tmp             2    9[COMRAM] unsigned int 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    4[COMRAM] unsigned int 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;Total ram usage:        7 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 3
  4242 ;; This function calls:
  4243 ;;		_I2C_2_Master_Read
  4244 ;;		_I2C_2_Master_RepStart
  4245 ;;		_I2C_2_Master_Start
  4246 ;;		_I2C_2_Master_Stop
  4247 ;;		_I2C_2_Master_Write
  4248 ;; This function is called by:
  4249 ;;		_read_color
  4250 ;;		_calibrate_white
  4251 ;;		_distance_measure
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text11
  4256  0055AC                     __ptext11:
  4257                           	callstack 0
  4258  0055AC                     _color_read_Green:
  4259                           	callstack 24
  4260  0055AC                     
  4261                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4262  0055AC  EC2C  F02E         	call	_I2C_2_Master_Start	;wreg free
  4263                           
  4264                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4265  0055B0  0E52               	movlw	82
  4266  0055B2  EC16  F02E         	call	_I2C_2_Master_Write
  4267                           
  4268                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4269  0055B6  0EB8               	movlw	184
  4270  0055B8  EC16  F02E         	call	_I2C_2_Master_Write
  4271                           
  4272                           ;color.c: 125:  I2C_2_Master_RepStart();
  4273  0055BC  EC22  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  4274                           
  4275                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4276  0055C0  0E53               	movlw	83
  4277  0055C2  EC16  F02E         	call	_I2C_2_Master_Write
  4278                           
  4279                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4280  0055C6  0E01               	movlw	1
  4281  0055C8  ECB7  F02B         	call	_I2C_2_Master_Read
  4282  0055CC  6E07               	movwf	??_color_read_Green^0,c
  4283  0055CE  5007               	movf	??_color_read_Green^0,w,c
  4284  0055D0  6E0A               	movwf	color_read_Green@tmp^0,c
  4285  0055D2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4286                           
  4287                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4288  0055D4  0E00               	movlw	0
  4289  0055D6  ECB7  F02B         	call	_I2C_2_Master_Read
  4290  0055DA  6E07               	movwf	??_color_read_Green^0,c
  4291  0055DC  5007               	movf	??_color_read_Green^0,w,c
  4292  0055DE  6E09               	movwf	(??_color_read_Green+2)^0,c
  4293  0055E0  6A08               	clrf	(??_color_read_Green+1)^0,c
  4294  0055E2  500A               	movf	color_read_Green@tmp^0,w,c
  4295  0055E4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4296  0055E6  6E0A               	movwf	color_read_Green@tmp^0,c
  4297  0055E8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4298  0055EA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4299  0055EC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4300                           
  4301                           ;color.c: 129:  I2C_2_Master_Stop();
  4302  0055EE  EC27  F02E         	call	_I2C_2_Master_Stop	;wreg free
  4303  0055F2                     
  4304                           ;color.c: 130:  return tmp;
  4305  0055F2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4306  0055F6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4307  0055FA  0012               	return		;funcret
  4308  0055FC                     __end_of_color_read_Green:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _color_read_Blue *****************
  4312 ;; Defined at:
  4313 ;;		line 105 in file "color.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;		None
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  tmp             2    9[COMRAM] unsigned int 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  2    4[COMRAM] unsigned int 
  4320 ;; Registers used:
  4321 ;;		wreg, status,2, status,0, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;Total ram usage:        7 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 3
  4334 ;; This function calls:
  4335 ;;		_I2C_2_Master_Read
  4336 ;;		_I2C_2_Master_RepStart
  4337 ;;		_I2C_2_Master_Start
  4338 ;;		_I2C_2_Master_Stop
  4339 ;;		_I2C_2_Master_Write
  4340 ;; This function is called by:
  4341 ;;		_read_color
  4342 ;;		_calibrate_white
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text12
  4347  0055FC                     __ptext12:
  4348                           	callstack 0
  4349  0055FC                     _color_read_Blue:
  4350                           	callstack 24
  4351  0055FC                     
  4352                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4353  0055FC  EC2C  F02E         	call	_I2C_2_Master_Start	;wreg free
  4354                           
  4355                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4356  005600  0E52               	movlw	82
  4357  005602  EC16  F02E         	call	_I2C_2_Master_Write
  4358                           
  4359                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4360  005606  0EBA               	movlw	186
  4361  005608  EC16  F02E         	call	_I2C_2_Master_Write
  4362                           
  4363                           ;color.c: 111:  I2C_2_Master_RepStart();
  4364  00560C  EC22  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  4365                           
  4366                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4367  005610  0E53               	movlw	83
  4368  005612  EC16  F02E         	call	_I2C_2_Master_Write
  4369                           
  4370                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4371  005616  0E01               	movlw	1
  4372  005618  ECB7  F02B         	call	_I2C_2_Master_Read
  4373  00561C  6E07               	movwf	??_color_read_Blue^0,c
  4374  00561E  5007               	movf	??_color_read_Blue^0,w,c
  4375  005620  6E0A               	movwf	color_read_Blue@tmp^0,c
  4376  005622  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4377                           
  4378                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4379  005624  0E00               	movlw	0
  4380  005626  ECB7  F02B         	call	_I2C_2_Master_Read
  4381  00562A  6E07               	movwf	??_color_read_Blue^0,c
  4382  00562C  5007               	movf	??_color_read_Blue^0,w,c
  4383  00562E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4384  005630  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4385  005632  500A               	movf	color_read_Blue@tmp^0,w,c
  4386  005634  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4387  005636  6E0A               	movwf	color_read_Blue@tmp^0,c
  4388  005638  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4389  00563A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4390  00563C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4391                           
  4392                           ;color.c: 115:  I2C_2_Master_Stop();
  4393  00563E  EC27  F02E         	call	_I2C_2_Master_Stop	;wreg free
  4394  005642                     
  4395                           ;color.c: 116:  return tmp;
  4396  005642  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4397  005646  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4398  00564A  0012               	return		;funcret
  4399  00564C                     __end_of_color_read_Blue:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function _LED_R *****************
  4403 ;; Defined at:
  4404 ;;		line 164 in file "color.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;		None
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;Total ram usage:        2 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 1
  4425 ;; This function calls:
  4426 ;;		Nothing
  4427 ;; This function is called by:
  4428 ;;		_color_data_collection
  4429 ;;		_calibrate_white
  4430 ;;		_detect_color
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text13
  4435  005AE2                     __ptext13:
  4436                           	callstack 0
  4437  005AE2                     _LED_R:
  4438                           	callstack 27
  4439  005AE2                     
  4440                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4441  005AE2  827F               	bsf	127,1,c	;volatile
  4442                           
  4443                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4444  005AE4  9E7E               	bcf	126,7,c	;volatile
  4445                           
  4446                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4447  005AE6  9879               	bcf	121,4,c	;volatile
  4448  005AE8                     
  4449                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4450  005AE8  0E11               	movlw	17
  4451  005AEA  6E02               	movwf	(??_LED_R+1)^0,c
  4452  005AEC  0E3C               	movlw	60
  4453  005AEE  6E01               	movwf	??_LED_R^0,c
  4454  005AF0  0ECB               	movlw	203
  4455  005AF2                     u5817:
  4456  005AF2  2EE8               	decfsz	wreg,f,c
  4457  005AF4  D7FE               	bra	u5817
  4458  005AF6  2E01               	decfsz	??_LED_R^0,f,c
  4459  005AF8  D7FC               	bra	u5817
  4460  005AFA  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4461  005AFC  D7FA               	bra	u5817
  4462  005AFE  F000               	nop	
  4463  005B00  0012               	return		;funcret
  4464  005B02                     __end_of_LED_R:
  4465                           	callstack 0
  4466                           
  4467 ;; *************** function _LED_OFF *****************
  4468 ;; Defined at:
  4469 ;;		line 155 in file "color.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;Total ram usage:        2 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 1
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_calibrate_white
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text14
  4498  005B02                     __ptext14:
  4499                           	callstack 0
  4500  005B02                     _LED_OFF:
  4501                           	callstack 27
  4502  005B02                     
  4503                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4504  005B02  927F               	bcf	127,1,c	;volatile
  4505                           
  4506                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4507  005B04  9E7E               	bcf	126,7,c	;volatile
  4508                           
  4509                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4510  005B06  9879               	bcf	121,4,c	;volatile
  4511  005B08                     
  4512                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4513  005B08  0E11               	movlw	17
  4514  005B0A  6E02               	movwf	(??_LED_OFF+1)^0,c
  4515  005B0C  0E3C               	movlw	60
  4516  005B0E  6E01               	movwf	??_LED_OFF^0,c
  4517  005B10  0ECB               	movlw	203
  4518  005B12                     u5827:
  4519  005B12  2EE8               	decfsz	wreg,f,c
  4520  005B14  D7FE               	bra	u5827
  4521  005B16  2E01               	decfsz	??_LED_OFF^0,f,c
  4522  005B18  D7FC               	bra	u5827
  4523  005B1A  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4524  005B1C  D7FA               	bra	u5827
  4525  005B1E  F000               	nop	
  4526  005B20  0012               	return		;funcret
  4527  005B22                     __end_of_LED_OFF:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _LED_G *****************
  4531 ;; Defined at:
  4532 ;;		line 191 in file "color.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;Total ram usage:        2 bytes
  4551 ;; Hardware stack levels used: 1
  4552 ;; Hardware stack levels required when called: 1
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_color_data_collection
  4557 ;;		_calibrate_white
  4558 ;;		_detect_color
  4559 ;; This function uses a non-reentrant model
  4560 ;;
  4561                           
  4562                           	psect	text15
  4563  005B22                     __ptext15:
  4564                           	callstack 0
  4565  005B22                     _LED_G:
  4566                           	callstack 27
  4567  005B22                     
  4568                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4569  005B22  927F               	bcf	127,1,c	;volatile
  4570                           
  4571                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4572  005B24  9E7E               	bcf	126,7,c	;volatile
  4573                           
  4574                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4575  005B26  8879               	bsf	121,4,c	;volatile
  4576  005B28                     
  4577                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4578  005B28  0E11               	movlw	17
  4579  005B2A  6E02               	movwf	(??_LED_G+1)^0,c
  4580  005B2C  0E3C               	movlw	60
  4581  005B2E  6E01               	movwf	??_LED_G^0,c
  4582  005B30  0ECB               	movlw	203
  4583  005B32                     u5837:
  4584  005B32  2EE8               	decfsz	wreg,f,c
  4585  005B34  D7FE               	bra	u5837
  4586  005B36  2E01               	decfsz	??_LED_G^0,f,c
  4587  005B38  D7FC               	bra	u5837
  4588  005B3A  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4589  005B3C  D7FA               	bra	u5837
  4590  005B3E  F000               	nop	
  4591  005B40  0012               	return		;funcret
  4592  005B42                     __end_of_LED_G:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _LED_B *****************
  4596 ;; Defined at:
  4597 ;;		line 182 in file "color.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;Total ram usage:        2 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 1
  4618 ;; This function calls:
  4619 ;;		Nothing
  4620 ;; This function is called by:
  4621 ;;		_color_data_collection
  4622 ;;		_calibrate_white
  4623 ;;		_detect_color
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text16
  4628  005B42                     __ptext16:
  4629                           	callstack 0
  4630  005B42                     _LED_B:
  4631                           	callstack 27
  4632  005B42                     
  4633                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4634  005B42  927F               	bcf	127,1,c	;volatile
  4635                           
  4636                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4637  005B44  8E7E               	bsf	126,7,c	;volatile
  4638                           
  4639                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4640  005B46  9879               	bcf	121,4,c	;volatile
  4641  005B48                     
  4642                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4643  005B48  0E11               	movlw	17
  4644  005B4A  6E02               	movwf	(??_LED_B+1)^0,c
  4645  005B4C  0E3C               	movlw	60
  4646  005B4E  6E01               	movwf	??_LED_B^0,c
  4647  005B50  0ECB               	movlw	203
  4648  005B52                     u5847:
  4649  005B52  2EE8               	decfsz	wreg,f,c
  4650  005B54  D7FE               	bra	u5847
  4651  005B56  2E01               	decfsz	??_LED_B^0,f,c
  4652  005B58  D7FC               	bra	u5847
  4653  005B5A  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4654  005B5C  D7FA               	bra	u5847
  4655  005B5E  F000               	nop	
  4656  005B60  0012               	return		;funcret
  4657  005B62                     __end_of_LED_B:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _amb_light_measure *****************
  4661 ;; Defined at:
  4662 ;;		line 376 in file "color.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4665 ;;		 -> main@rgb(8), main@amb(8), 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4668 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4669 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4670 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4671 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  2   10[BANK0 ] unsigned int 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 0/0
  4678 ;;		On exit  : 0/0
  4679 ;;		Unchanged: 0/0
  4680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;Total ram usage:       14 bytes
  4686 ;; Hardware stack levels used: 1
  4687 ;; Hardware stack levels required when called: 5
  4688 ;; This function calls:
  4689 ;;		_LED_C
  4690 ;;		___fldiv
  4691 ;;		___xxtofl
  4692 ;;		_color_read_Clear
  4693 ;;		_lroundf
  4694 ;;		_toggle_light
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;;		_test_function
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text17
  4702  0049A0                     __ptext17:
  4703                           	callstack 0
  4704  0049A0                     _amb_light_measure:
  4705                           	callstack 24
  4706  0049A0  0E00               	movlw	0
  4707  0049A2  0100               	movlb	0	; () banked
  4708  0049A4  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4709  0049A6  0E00               	movlw	0
  4710  0049A8  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4711  0049AA  0E00               	movlw	0
  4712  0049AC  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4713  0049AE  0E00               	movlw	0
  4714  0049B0  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4715  0049B2  0E00               	movlw	0
  4716  0049B4  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4717  0049B6  0E00               	movlw	0
  4718  0049B8  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4719  0049BA                     
  4720                           ; BSR set to: 0
  4721                           ;color.c: 379:     toggle_light(2,2);
  4722  0049BA  0E02               	movlw	2
  4723  0049BC  6E01               	movwf	toggle_light@toggletime^0,c
  4724  0049BE  0E02               	movlw	2
  4725  0049C0  EC56  F01A         	call	_toggle_light
  4726  0049C4                     
  4727                           ;color.c: 380:     LED_C();
  4728  0049C4  ECB1  F02D         	call	_LED_C	;wreg free
  4729  0049C8                     
  4730                           ;color.c: 381:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4731  0049C8  0E29               	movlw	41
  4732  0049CA  0100               	movlb	0	; () banked
  4733  0049CC  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4734  0049CE  0E96               	movlw	150
  4735  0049D0  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4736  0049D2  0E7F               	movlw	127
  4737  0049D4                     u5857:
  4738  0049D4  2EE8               	decfsz	wreg,f,c
  4739  0049D6  D7FE               	bra	u5857
  4740  0049D8  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4741  0049DA  D7FC               	bra	u5857
  4742  0049DC  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4743  0049DE  D7FA               	bra	u5857
  4744  0049E0                     
  4745                           ;color.c: 383:     CC_amb_1 = color_read_Clear();
  4746  0049E0  EC26  F02B         	call	_color_read_Clear	;wreg free
  4747  0049E4  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4748  0049E8  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4749  0049EC                     
  4750                           ;color.c: 384:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4751  0049EC  0E11               	movlw	17
  4752  0049EE  0100               	movlb	0	; () banked
  4753  0049F0  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4754  0049F2  0E3C               	movlw	60
  4755  0049F4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4756  0049F6  0ECB               	movlw	203
  4757  0049F8                     u5867:
  4758  0049F8  2EE8               	decfsz	wreg,f,c
  4759  0049FA  D7FE               	bra	u5867
  4760  0049FC  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4761  0049FE  D7FC               	bra	u5867
  4762  004A00  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4763  004A02  D7FA               	bra	u5867
  4764  004A04                     
  4765                           ;color.c: 386:     CC_amb_2 = color_read_Clear();
  4766  004A04  EC26  F02B         	call	_color_read_Clear	;wreg free
  4767  004A08  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4768  004A0C  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4769  004A10                     
  4770                           ;color.c: 387:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4771  004A10  0E11               	movlw	17
  4772  004A12  0100               	movlb	0	; () banked
  4773  004A14  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4774  004A16  0E3C               	movlw	60
  4775  004A18  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4776  004A1A  0ECB               	movlw	203
  4777  004A1C                     u5877:
  4778  004A1C  2EE8               	decfsz	wreg,f,c
  4779  004A1E  D7FE               	bra	u5877
  4780  004A20  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4781  004A22  D7FC               	bra	u5877
  4782  004A24  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4783  004A26  D7FA               	bra	u5877
  4784  004A28                     
  4785                           ;color.c: 389:     CC_amb_3 = color_read_Clear();
  4786  004A28  EC26  F02B         	call	_color_read_Clear	;wreg free
  4787  004A2C  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  4788  004A30  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  4789  004A34                     
  4790                           ;color.c: 390:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4791  004A34  0E11               	movlw	17
  4792  004A36  0100               	movlb	0	; () banked
  4793  004A38  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4794  004A3A  0E3C               	movlw	60
  4795  004A3C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4796  004A3E  0ECB               	movlw	203
  4797  004A40                     u5887:
  4798  004A40  2EE8               	decfsz	wreg,f,c
  4799  004A42  D7FE               	bra	u5887
  4800  004A44  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4801  004A46  D7FC               	bra	u5887
  4802  004A48  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4803  004A4A  D7FA               	bra	u5887
  4804  004A4C                     
  4805                           ;color.c: 392:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  4806  004A4C  0100               	movlb	0	; () banked
  4807  004A4E  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  4808  004A50  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  4809  004A52  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4810  004A54  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  4811  004A56  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  4812  004A58  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4813  004A5A  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  4814  004A5C  276C               	addwf	??_amb_light_measure& (0+255),f,b
  4815  004A5E  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  4816  004A60  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  4817  004A62  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  4818  004A66  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  4819  004A6A  6A03               	clrf	(___xxtofl@val+2)^0,c
  4820  004A6C  6A04               	clrf	(___xxtofl@val+3)^0,c
  4821  004A6E  0E00               	movlw	0
  4822  004A70  EC53  F01F         	call	___xxtofl
  4823  004A74  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4824  004A78  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4825  004A7C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4826  004A80  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4827  004A84  0E00               	movlw	0
  4828  004A86  6E13               	movwf	___fldiv@a^0,c
  4829  004A88  0E00               	movlw	0
  4830  004A8A  6E14               	movwf	(___fldiv@a+1)^0,c
  4831  004A8C  0E40               	movlw	64
  4832  004A8E  6E15               	movwf	(___fldiv@a+2)^0,c
  4833  004A90  0E40               	movlw	64
  4834  004A92  6E16               	movwf	(___fldiv@a+3)^0,c
  4835  004A94  EC34  F014         	call	___fldiv	;wreg free
  4836  004A98  C00F  F066         	movff	?___fldiv,lroundf@x
  4837  004A9C  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  4838  004AA0  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  4839  004AA4  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  4840  004AA8  EC98  F02C         	call	_lroundf	;wreg free
  4841  004AAC  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  4842  004AB0  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  4843  004AB4                     
  4844                           ;color.c: 394:     toggle_light(2,2);
  4845  004AB4  0E02               	movlw	2
  4846  004AB6  6E01               	movwf	toggle_light@toggletime^0,c
  4847  004AB8  0E02               	movlw	2
  4848  004ABA  EC56  F01A         	call	_toggle_light
  4849  004ABE                     
  4850                           ;color.c: 396:     return CC_amb_ave;
  4851  004ABE  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  4852  004AC2  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  4853  004AC6  0012               	return		;funcret
  4854  004AC8                     __end_of_amb_light_measure:
  4855                           	callstack 0
  4856                           
  4857 ;; *************** function _lroundf *****************
  4858 ;; Defined at:
  4859 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  x               4    6[BANK0 ] float 
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  4    6[BANK0 ] long 
  4866 ;; Registers used:
  4867 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;Total ram usage:        4 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 4
  4880 ;; This function calls:
  4881 ;;		___fltol
  4882 ;;		_roundf
  4883 ;; This function is called by:
  4884 ;;		_detect_color
  4885 ;;		_amb_light_measure
  4886 ;;		_distance_measure
  4887 ;;		_check_color_reading
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text18
  4892  005930                     __ptext18:
  4893                           	callstack 0
  4894  005930                     _lroundf:
  4895                           	callstack 24
  4896  005930  C066  F041         	movff	lroundf@x,roundf@x
  4897  005934  C067  F042         	movff	lroundf@x+1,roundf@x+1
  4898  005938  C068  F043         	movff	lroundf@x+2,roundf@x+2
  4899  00593C  C069  F044         	movff	lroundf@x+3,roundf@x+3
  4900  005940  EC5D  F012         	call	_roundf	;wreg free
  4901  005944  C041  F05B         	movff	?_roundf,___fltol@f1
  4902  005948  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  4903  00594C  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  4904  005950  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  4905  005954  EC64  F025         	call	___fltol	;wreg free
  4906  005958  C05B  F066         	movff	?___fltol,?_lroundf
  4907  00595C  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  4908  005960  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  4909  005964  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  4910  005968  0012               	return		;funcret
  4911  00596A                     __end_of_lroundf:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _roundf *****************
  4915 ;; Defined at:
  4916 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  x               4   64[COMRAM] float 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;  y               4   86[COMRAM] float 
  4921 ;;  u               4   82[COMRAM] struct .
  4922 ;;  e               2   76[COMRAM] int 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  4   64[COMRAM] float 
  4925 ;; Registers used:
  4926 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;Total ram usage:       26 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 3
  4939 ;; This function calls:
  4940 ;;		___fladd
  4941 ;;		___flge
  4942 ;;		___flmul
  4943 ;;		___flneg
  4944 ;;		___flsub
  4945 ;; This function is called by:
  4946 ;;		_lroundf
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text19
  4951  0024BA                     __ptext19:
  4952                           	callstack 0
  4953  0024BA                     _roundf:
  4954                           	callstack 24
  4955  0024BA  C150  F053         	movff	roundf@F527,roundf@u
  4956  0024BE  C151  F054         	movff	roundf@F527+1,roundf@u+1
  4957  0024C2  C152  F055         	movff	roundf@F527+2,roundf@u+2
  4958  0024C6  C153  F056         	movff	roundf@F527+3,roundf@u+3
  4959  0024CA  C041  F053         	movff	roundf@x,roundf@u
  4960  0024CE  C042  F054         	movff	roundf@x+1,roundf@u+1
  4961  0024D2  C043  F055         	movff	roundf@x+2,roundf@u+2
  4962  0024D6  C044  F056         	movff	roundf@x+3,roundf@u+3
  4963  0024DA  C053  F045         	movff	roundf@u,??_roundf
  4964  0024DE  C054  F046         	movff	roundf@u+1,??_roundf+1
  4965  0024E2  C055  F047         	movff	roundf@u+2,??_roundf+2
  4966  0024E6  C056  F048         	movff	roundf@u+3,??_roundf+3
  4967  0024EA  0E18               	movlw	24
  4968  0024EC  EF7D  F012         	goto	u4200
  4969  0024F0                     u4205:
  4970  0024F0  90D8               	bcf	status,0,c
  4971  0024F2  3248               	rrcf	(??_roundf+3)^0,f,c
  4972  0024F4  3247               	rrcf	(??_roundf+2)^0,f,c
  4973  0024F6  3246               	rrcf	(??_roundf+1)^0,f,c
  4974  0024F8  3245               	rrcf	??_roundf^0,f,c
  4975  0024FA                     u4200:
  4976  0024FA  2EE8               	decfsz	wreg,f,c
  4977  0024FC  EF78  F012         	goto	u4205
  4978  002500  5045               	movf	??_roundf^0,w,c
  4979  002502  6E4D               	movwf	roundf@e^0,c
  4980  002504  6A4E               	clrf	(roundf@e+1)^0,c
  4981  002506  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4982  002508  EF8F  F012         	goto	u4211
  4983  00250C  504E               	movf	(roundf@e+1)^0,w,c
  4984  00250E  E109               	bnz	u4210
  4985  002510  0E96               	movlw	150
  4986  002512  5C4D               	subwf	roundf@e^0,w,c
  4987  002514  A0D8               	btfss	status,0,c
  4988  002516  EF8F  F012         	goto	u4211
  4989  00251A  EF91  F012         	goto	u4210
  4990  00251E                     u4211:
  4991  00251E  EF9B  F012         	goto	l4466
  4992  002522                     u4210:
  4993  002522  C041  F041         	movff	roundf@x,?_roundf
  4994  002526  C042  F042         	movff	roundf@x+1,?_roundf+1
  4995  00252A  C043  F043         	movff	roundf@x+2,?_roundf+2
  4996  00252E  C044  F044         	movff	roundf@x+3,?_roundf+3
  4997  002532  EF33  F014         	goto	l1567
  4998  002536                     l4466:
  4999  002536  C053  F045         	movff	roundf@u,??_roundf
  5000  00253A  C054  F046         	movff	roundf@u+1,??_roundf+1
  5001  00253E  C055  F047         	movff	roundf@u+2,??_roundf+2
  5002  002542  C056  F048         	movff	roundf@u+3,??_roundf+3
  5003  002546  0E20               	movlw	32
  5004  002548  EFAB  F012         	goto	u4220
  5005  00254C                     u4225:
  5006  00254C  90D8               	bcf	status,0,c
  5007  00254E  3248               	rrcf	(??_roundf+3)^0,f,c
  5008  002550  3247               	rrcf	(??_roundf+2)^0,f,c
  5009  002552  3246               	rrcf	(??_roundf+1)^0,f,c
  5010  002554  3245               	rrcf	??_roundf^0,f,c
  5011  002556                     u4220:
  5012  002556  2EE8               	decfsz	wreg,f,c
  5013  002558  EFA6  F012         	goto	u4225
  5014  00255C  5045               	movf	??_roundf^0,w,c
  5015  00255E  1046               	iorwf	(??_roundf+1)^0,w,c
  5016  002560  1047               	iorwf	(??_roundf+2)^0,w,c
  5017  002562  1048               	iorwf	(??_roundf+3)^0,w,c
  5018  002564  B4D8               	btfsc	status,2,c
  5019  002566  EFB7  F012         	goto	u4231
  5020  00256A  EFB9  F012         	goto	u4230
  5021  00256E                     u4231:
  5022  00256E  EFCB  F012         	goto	l4470
  5023  002572                     u4230:
  5024  002572  C041  F001         	movff	roundf@x,___flneg@f1
  5025  002576  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  5026  00257A  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  5027  00257E  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  5028  002582  ECB5  F02C         	call	___flneg	;wreg free
  5029  002586  C001  F041         	movff	?___flneg,roundf@x
  5030  00258A  C002  F042         	movff	?___flneg+1,roundf@x+1
  5031  00258E  C003  F043         	movff	?___flneg+2,roundf@x+2
  5032  002592  C004  F044         	movff	?___flneg+3,roundf@x+3
  5033  002596                     l4470:
  5034  002596  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5035  002598  EFD9  F012         	goto	u4240
  5036  00259C  504E               	movf	(roundf@e+1)^0,w,c
  5037  00259E  E107               	bnz	u4241
  5038  0025A0  0E7E               	movlw	126
  5039  0025A2  5C4D               	subwf	roundf@e^0,w,c
  5040  0025A4  B0D8               	btfsc	status,0,c
  5041  0025A6  EFD7  F012         	goto	u4241
  5042  0025AA  EFD9  F012         	goto	u4240
  5043  0025AE                     u4241:
  5044  0025AE  EFF5  F012         	goto	l4476
  5045  0025B2                     u4240:
  5046  0025B2  C053  F028         	movff	roundf@u,___flmul@b
  5047  0025B6  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5048  0025BA  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5049  0025BE  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5050  0025C2  0E00               	movlw	0
  5051  0025C4  6E2C               	movwf	___flmul@a^0,c
  5052  0025C6  0E00               	movlw	0
  5053  0025C8  6E2D               	movwf	(___flmul@a+1)^0,c
  5054  0025CA  0E00               	movlw	0
  5055  0025CC  6E2E               	movwf	(___flmul@a+2)^0,c
  5056  0025CE  0E00               	movlw	0
  5057  0025D0  6E2F               	movwf	(___flmul@a+3)^0,c
  5058  0025D2  EC48  F010         	call	___flmul	;wreg free
  5059  0025D6  C028  F041         	movff	?___flmul,?_roundf
  5060  0025DA  C029  F042         	movff	?___flmul+1,?_roundf+1
  5061  0025DE  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5062  0025E2  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5063  0025E6  EF33  F014         	goto	l1567
  5064  0025EA                     l4476:
  5065  0025EA  0E00               	movlw	0
  5066  0025EC  6E05               	movwf	___fladd@a^0,c
  5067  0025EE  0E00               	movlw	0
  5068  0025F0  6E06               	movwf	(___fladd@a+1)^0,c
  5069  0025F2  0E00               	movlw	0
  5070  0025F4  6E07               	movwf	(___fladd@a+2)^0,c
  5071  0025F6  0E4B               	movlw	75
  5072  0025F8  6E08               	movwf	(___fladd@a+3)^0,c
  5073  0025FA  C041  F001         	movff	roundf@x,___fladd@b
  5074  0025FE  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5075  002602  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5076  002606  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5077  00260A  ECE8  F00D         	call	___fladd	;wreg free
  5078  00260E  C001  F04F         	movff	?___fladd,_roundf$3252
  5079  002612  C002  F050         	movff	?___fladd+1,_roundf$3252+1
  5080  002616  C003  F051         	movff	?___fladd+2,_roundf$3252+2
  5081  00261A  C004  F052         	movff	?___fladd+3,_roundf$3252+3
  5082  00261E  0E00               	movlw	0
  5083  002620  6E05               	movwf	___fladd@a^0,c
  5084  002622  0E00               	movlw	0
  5085  002624  6E06               	movwf	(___fladd@a+1)^0,c
  5086  002626  0E00               	movlw	0
  5087  002628  6E07               	movwf	(___fladd@a+2)^0,c
  5088  00262A  0ECB               	movlw	203
  5089  00262C  6E08               	movwf	(___fladd@a+3)^0,c
  5090  00262E  C04F  F001         	movff	_roundf$3252,___fladd@b
  5091  002632  C050  F002         	movff	_roundf$3252+1,___fladd@b+1
  5092  002636  C051  F003         	movff	_roundf$3252+2,___fladd@b+2
  5093  00263A  C052  F004         	movff	_roundf$3252+3,___fladd@b+3
  5094  00263E  ECE8  F00D         	call	___fladd	;wreg free
  5095  002642  C001  F049         	movff	?___fladd,_roundf$3253
  5096  002646  C002  F04A         	movff	?___fladd+1,_roundf$3253+1
  5097  00264A  C003  F04B         	movff	?___fladd+2,_roundf$3253+2
  5098  00264E  C004  F04C         	movff	?___fladd+3,_roundf$3253+3
  5099  002652  C049  F011         	movff	_roundf$3253,___flsub@b
  5100  002656  C04A  F012         	movff	_roundf$3253+1,___flsub@b+1
  5101  00265A  C04B  F013         	movff	_roundf$3253+2,___flsub@b+2
  5102  00265E  C04C  F014         	movff	_roundf$3253+3,___flsub@b+3
  5103  002662  C041  F015         	movff	roundf@x,___flsub@a
  5104  002666  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5105  00266A  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5106  00266E  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5107  002672  EC72  F02B         	call	___flsub	;wreg free
  5108  002676  C011  F057         	movff	?___flsub,roundf@y
  5109  00267A  C012  F058         	movff	?___flsub+1,roundf@y+1
  5110  00267E  C013  F059         	movff	?___flsub+2,roundf@y+2
  5111  002682  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5112  002686  0E00               	movlw	0
  5113  002688  6E01               	movwf	___flge@ff1^0,c
  5114  00268A  0E00               	movlw	0
  5115  00268C  6E02               	movwf	(___flge@ff1+1)^0,c
  5116  00268E  0E00               	movlw	0
  5117  002690  6E03               	movwf	(___flge@ff1+2)^0,c
  5118  002692  0E3F               	movlw	63
  5119  002694  6E04               	movwf	(___flge@ff1+3)^0,c
  5120  002696  C057  F005         	movff	roundf@y,___flge@ff2
  5121  00269A  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5122  00269E  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5123  0026A2  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5124  0026A6  ECE8  F025         	call	___flge	;wreg free
  5125  0026AA  B0D8               	btfsc	status,0,c
  5126  0026AC  EF5A  F013         	goto	u4251
  5127  0026B0  EF5C  F013         	goto	u4250
  5128  0026B4                     u4251:
  5129  0026B4  EF92  F013         	goto	l4480
  5130  0026B8                     u4250:
  5131  0026B8  C041  F005         	movff	roundf@x,___fladd@a
  5132  0026BC  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5133  0026C0  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5134  0026C4  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5135  0026C8  C057  F001         	movff	roundf@y,___fladd@b
  5136  0026CC  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5137  0026D0  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5138  0026D4  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5139  0026D8  ECE8  F00D         	call	___fladd	;wreg free
  5140  0026DC  C001  F04F         	movff	?___fladd,_roundf$3252
  5141  0026E0  C002  F050         	movff	?___fladd+1,_roundf$3252+1
  5142  0026E4  C003  F051         	movff	?___fladd+2,_roundf$3252+2
  5143  0026E8  C004  F052         	movff	?___fladd+3,_roundf$3252+3
  5144  0026EC  C04F  F001         	movff	_roundf$3252,___fladd@b
  5145  0026F0  C050  F002         	movff	_roundf$3252+1,___fladd@b+1
  5146  0026F4  C051  F003         	movff	_roundf$3252+2,___fladd@b+2
  5147  0026F8  C052  F004         	movff	_roundf$3252+3,___fladd@b+3
  5148  0026FC  0E00               	movlw	0
  5149  0026FE  6E05               	movwf	___fladd@a^0,c
  5150  002700  0E00               	movlw	0
  5151  002702  6E06               	movwf	(___fladd@a+1)^0,c
  5152  002704  0E80               	movlw	128
  5153  002706  6E07               	movwf	(___fladd@a+2)^0,c
  5154  002708  0EBF               	movlw	191
  5155  00270A  6E08               	movwf	(___fladd@a+3)^0,c
  5156  00270C  ECE8  F00D         	call	___fladd	;wreg free
  5157  002710  C001  F057         	movff	?___fladd,roundf@y
  5158  002714  C002  F058         	movff	?___fladd+1,roundf@y+1
  5159  002718  C003  F059         	movff	?___fladd+2,roundf@y+2
  5160  00271C  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5161  002720  EFFB  F013         	goto	l4486
  5162  002724                     l4480:
  5163  002724  0E00               	movlw	0
  5164  002726  6E01               	movwf	___flge@ff1^0,c
  5165  002728  0E00               	movlw	0
  5166  00272A  6E02               	movwf	(___flge@ff1+1)^0,c
  5167  00272C  0E00               	movlw	0
  5168  00272E  6E03               	movwf	(___flge@ff1+2)^0,c
  5169  002730  0EBF               	movlw	191
  5170  002732  6E04               	movwf	(___flge@ff1+3)^0,c
  5171  002734  C057  F005         	movff	roundf@y,___flge@ff2
  5172  002738  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5173  00273C  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5174  002740  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5175  002744  ECE8  F025         	call	___flge	;wreg free
  5176  002748  A0D8               	btfss	status,0,c
  5177  00274A  EFA9  F013         	goto	u4261
  5178  00274E  EFAB  F013         	goto	u4260
  5179  002752                     u4261:
  5180  002752  EFE1  F013         	goto	l4484
  5181  002756                     u4260:
  5182  002756  C041  F005         	movff	roundf@x,___fladd@a
  5183  00275A  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5184  00275E  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5185  002762  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5186  002766  C057  F001         	movff	roundf@y,___fladd@b
  5187  00276A  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5188  00276E  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5189  002772  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5190  002776  ECE8  F00D         	call	___fladd	;wreg free
  5191  00277A  C001  F04F         	movff	?___fladd,_roundf$3252
  5192  00277E  C002  F050         	movff	?___fladd+1,_roundf$3252+1
  5193  002782  C003  F051         	movff	?___fladd+2,_roundf$3252+2
  5194  002786  C004  F052         	movff	?___fladd+3,_roundf$3252+3
  5195  00278A  C04F  F001         	movff	_roundf$3252,___fladd@b
  5196  00278E  C050  F002         	movff	_roundf$3252+1,___fladd@b+1
  5197  002792  C051  F003         	movff	_roundf$3252+2,___fladd@b+2
  5198  002796  C052  F004         	movff	_roundf$3252+3,___fladd@b+3
  5199  00279A  0E00               	movlw	0
  5200  00279C  6E05               	movwf	___fladd@a^0,c
  5201  00279E  0E00               	movlw	0
  5202  0027A0  6E06               	movwf	(___fladd@a+1)^0,c
  5203  0027A2  0E80               	movlw	128
  5204  0027A4  6E07               	movwf	(___fladd@a+2)^0,c
  5205  0027A6  0E3F               	movlw	63
  5206  0027A8  6E08               	movwf	(___fladd@a+3)^0,c
  5207  0027AA  ECE8  F00D         	call	___fladd	;wreg free
  5208  0027AE  C001  F057         	movff	?___fladd,roundf@y
  5209  0027B2  C002  F058         	movff	?___fladd+1,roundf@y+1
  5210  0027B6  C003  F059         	movff	?___fladd+2,roundf@y+2
  5211  0027BA  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5212  0027BE  EFFB  F013         	goto	l4486
  5213  0027C2                     l4484:
  5214  0027C2  C057  F001         	movff	roundf@y,___fladd@b
  5215  0027C6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5216  0027CA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5217  0027CE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5218  0027D2  C041  F005         	movff	roundf@x,___fladd@a
  5219  0027D6  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5220  0027DA  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5221  0027DE  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5222  0027E2  ECE8  F00D         	call	___fladd	;wreg free
  5223  0027E6  C001  F057         	movff	?___fladd,roundf@y
  5224  0027EA  C002  F058         	movff	?___fladd+1,roundf@y+1
  5225  0027EE  C003  F059         	movff	?___fladd+2,roundf@y+2
  5226  0027F2  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5227  0027F6                     l4486:
  5228  0027F6  C053  F045         	movff	roundf@u,??_roundf
  5229  0027FA  C054  F046         	movff	roundf@u+1,??_roundf+1
  5230  0027FE  C055  F047         	movff	roundf@u+2,??_roundf+2
  5231  002802  C056  F048         	movff	roundf@u+3,??_roundf+3
  5232  002806  0E20               	movlw	32
  5233  002808  EF0B  F014         	goto	u4270
  5234  00280C                     u4275:
  5235  00280C  90D8               	bcf	status,0,c
  5236  00280E  3248               	rrcf	(??_roundf+3)^0,f,c
  5237  002810  3247               	rrcf	(??_roundf+2)^0,f,c
  5238  002812  3246               	rrcf	(??_roundf+1)^0,f,c
  5239  002814  3245               	rrcf	??_roundf^0,f,c
  5240  002816                     u4270:
  5241  002816  2EE8               	decfsz	wreg,f,c
  5242  002818  EF06  F014         	goto	u4275
  5243  00281C  5045               	movf	??_roundf^0,w,c
  5244  00281E  1046               	iorwf	(??_roundf+1)^0,w,c
  5245  002820  1047               	iorwf	(??_roundf+2)^0,w,c
  5246  002822  1048               	iorwf	(??_roundf+3)^0,w,c
  5247  002824  B4D8               	btfsc	status,2,c
  5248  002826  EF17  F014         	goto	u4281
  5249  00282A  EF19  F014         	goto	u4280
  5250  00282E                     u4281:
  5251  00282E  EF2B  F014         	goto	l4490
  5252  002832                     u4280:
  5253  002832  C057  F001         	movff	roundf@y,___flneg@f1
  5254  002836  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5255  00283A  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5256  00283E  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5257  002842  ECB5  F02C         	call	___flneg	;wreg free
  5258  002846  C001  F057         	movff	?___flneg,roundf@y
  5259  00284A  C002  F058         	movff	?___flneg+1,roundf@y+1
  5260  00284E  C003  F059         	movff	?___flneg+2,roundf@y+2
  5261  002852  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5262  002856                     l4490:
  5263  002856  C057  F041         	movff	roundf@y,?_roundf
  5264  00285A  C058  F042         	movff	roundf@y+1,?_roundf+1
  5265  00285E  C059  F043         	movff	roundf@y+2,?_roundf+2
  5266  002862  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5267  002866                     l1567:
  5268  002866  0012               	return		;funcret
  5269  002868                     __end_of_roundf:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function ___flsub *****************
  5273 ;; Defined at:
  5274 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  b               4   16[COMRAM] float 
  5277 ;;  a               4   20[COMRAM] float 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;		None
  5280 ;; Return value:  Size  Location     Type
  5281 ;;                  4   16[COMRAM] float 
  5282 ;; Registers used:
  5283 ;;		wreg, status,2, status,0, cstack
  5284 ;; Tracked objects:
  5285 ;;		On entry : 0/0
  5286 ;;		On exit  : 0/0
  5287 ;;		Unchanged: 0/0
  5288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5289 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5293 ;;Total ram usage:        8 bytes
  5294 ;; Hardware stack levels used: 1
  5295 ;; Hardware stack levels required when called: 2
  5296 ;; This function calls:
  5297 ;;		___fladd
  5298 ;; This function is called by:
  5299 ;;		_roundf
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           	psect	text20
  5304  0056E4                     __ptext20:
  5305                           	callstack 0
  5306  0056E4                     ___flsub:
  5307                           	callstack 24
  5308  0056E4  0E00               	movlw	0
  5309  0056E6  1A15               	xorwf	___flsub@a^0,f,c
  5310  0056E8  0E00               	movlw	0
  5311  0056EA  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5312  0056EC  0E00               	movlw	0
  5313  0056EE  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5314  0056F0  0E80               	movlw	128
  5315  0056F2  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5316  0056F4  C011  F001         	movff	___flsub@b,___fladd@b
  5317  0056F8  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5318  0056FC  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5319  005700  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5320  005704  C015  F005         	movff	___flsub@a,___fladd@a
  5321  005708  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5322  00570C  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5323  005710  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5324  005714  ECE8  F00D         	call	___fladd	;wreg free
  5325  005718  C001  F011         	movff	?___fladd,?___flsub
  5326  00571C  C002  F012         	movff	?___fladd+1,?___flsub+1
  5327  005720  C003  F013         	movff	?___fladd+2,?___flsub+2
  5328  005724  C004  F014         	movff	?___fladd+3,?___flsub+3
  5329  005728  0012               	return		;funcret
  5330  00572A                     __end_of___flsub:
  5331                           	callstack 0
  5332                           
  5333 ;; *************** function ___fladd *****************
  5334 ;; Defined at:
  5335 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5336 ;; Parameters:    Size  Location     Type
  5337 ;;  b               4    0[COMRAM] float 
  5338 ;;  a               4    4[COMRAM] float 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  grs             1   15[COMRAM] unsigned char 
  5341 ;;  bexp            1   14[COMRAM] unsigned char 
  5342 ;;  aexp            1   13[COMRAM] unsigned char 
  5343 ;;  signs           1   12[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  4    0[COMRAM] unsigned char 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5356 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;Total ram usage:       16 bytes
  5358 ;; Hardware stack levels used: 1
  5359 ;; Hardware stack levels required when called: 1
  5360 ;; This function calls:
  5361 ;;		Nothing
  5362 ;; This function is called by:
  5363 ;;		___flsub
  5364 ;;		_roundf
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text21
  5369  001BD0                     __ptext21:
  5370                           	callstack 0
  5371  001BD0                     ___fladd:
  5372                           	callstack 24
  5373  001BD0  5004               	movf	(___fladd@b+3)^0,w,c
  5374  001BD2  0B80               	andlw	128
  5375  001BD4  6E0D               	movwf	___fladd@signs^0,c
  5376  001BD6  5004               	movf	(___fladd@b+3)^0,w,c
  5377  001BD8  2404               	addwf	(___fladd@b+3)^0,w,c
  5378  001BDA  6E0F               	movwf	___fladd@bexp^0,c
  5379  001BDC  AE03               	btfss	(___fladd@b+2)^0,7,c
  5380  001BDE  EFF3  F00D         	goto	u3341
  5381  001BE2  EFF5  F00D         	goto	u3340
  5382  001BE6                     u3341:
  5383  001BE6  EFF6  F00D         	goto	l3886
  5384  001BEA                     u3340:
  5385  001BEA  800F               	bsf	___fladd@bexp^0,0,c
  5386  001BEC                     l3886:
  5387  001BEC  500F               	movf	___fladd@bexp^0,w,c
  5388  001BEE  B4D8               	btfsc	status,2,c
  5389  001BF0  EFFC  F00D         	goto	u3351
  5390  001BF4  EFFE  F00D         	goto	u3350
  5391  001BF8                     u3351:
  5392  001BF8  EF13  F00E         	goto	l3896
  5393  001BFC                     u3350:
  5394  001BFC  280F               	incf	___fladd@bexp^0,w,c
  5395  001BFE  A4D8               	btfss	status,2,c
  5396  001C00  EF04  F00E         	goto	u3361
  5397  001C04  EF06  F00E         	goto	u3360
  5398  001C08                     u3361:
  5399  001C08  EF0E  F00E         	goto	l3892
  5400  001C0C                     u3360:
  5401  001C0C  0E00               	movlw	0
  5402  001C0E  6E01               	movwf	___fladd@b^0,c
  5403  001C10  0E00               	movlw	0
  5404  001C12  6E02               	movwf	(___fladd@b+1)^0,c
  5405  001C14  0E00               	movlw	0
  5406  001C16  6E03               	movwf	(___fladd@b+2)^0,c
  5407  001C18  0E00               	movlw	0
  5408  001C1A  6E04               	movwf	(___fladd@b+3)^0,c
  5409  001C1C                     l3892:
  5410  001C1C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5411  001C1E  0E00               	movlw	0
  5412  001C20  6E04               	movwf	(___fladd@b+3)^0,c
  5413  001C22  EF1B  F00E         	goto	l3898
  5414  001C26                     l3896:
  5415  001C26  0E00               	movlw	0
  5416  001C28  6E01               	movwf	___fladd@b^0,c
  5417  001C2A  0E00               	movlw	0
  5418  001C2C  6E02               	movwf	(___fladd@b+1)^0,c
  5419  001C2E  0E00               	movlw	0
  5420  001C30  6E03               	movwf	(___fladd@b+2)^0,c
  5421  001C32  0E00               	movlw	0
  5422  001C34  6E04               	movwf	(___fladd@b+3)^0,c
  5423  001C36                     l3898:
  5424  001C36  5008               	movf	(___fladd@a+3)^0,w,c
  5425  001C38  0B80               	andlw	128
  5426  001C3A  6E0E               	movwf	___fladd@aexp^0,c
  5427  001C3C  500D               	movf	___fladd@signs^0,w,c
  5428  001C3E  180E               	xorwf	___fladd@aexp^0,w,c
  5429  001C40  B4D8               	btfsc	status,2,c
  5430  001C42  EF25  F00E         	goto	u3371
  5431  001C46  EF27  F00E         	goto	u3370
  5432  001C4A                     u3371:
  5433  001C4A  EF28  F00E         	goto	l3904
  5434  001C4E                     u3370:
  5435  001C4E  8C0D               	bsf	___fladd@signs^0,6,c
  5436  001C50                     l3904:
  5437  001C50  5008               	movf	(___fladd@a+3)^0,w,c
  5438  001C52  2408               	addwf	(___fladd@a+3)^0,w,c
  5439  001C54  6E0E               	movwf	___fladd@aexp^0,c
  5440  001C56  AE07               	btfss	(___fladd@a+2)^0,7,c
  5441  001C58  EF30  F00E         	goto	u3381
  5442  001C5C  EF32  F00E         	goto	u3380
  5443  001C60                     u3381:
  5444  001C60  EF33  F00E         	goto	l3910
  5445  001C64                     u3380:
  5446  001C64  800E               	bsf	___fladd@aexp^0,0,c
  5447  001C66                     l3910:
  5448  001C66  500E               	movf	___fladd@aexp^0,w,c
  5449  001C68  B4D8               	btfsc	status,2,c
  5450  001C6A  EF39  F00E         	goto	u3391
  5451  001C6E  EF3B  F00E         	goto	u3390
  5452  001C72                     u3391:
  5453  001C72  EF50  F00E         	goto	l3920
  5454  001C76                     u3390:
  5455  001C76  280E               	incf	___fladd@aexp^0,w,c
  5456  001C78  A4D8               	btfss	status,2,c
  5457  001C7A  EF41  F00E         	goto	u3401
  5458  001C7E  EF43  F00E         	goto	u3400
  5459  001C82                     u3401:
  5460  001C82  EF4B  F00E         	goto	l3916
  5461  001C86                     u3400:
  5462  001C86  0E00               	movlw	0
  5463  001C88  6E05               	movwf	___fladd@a^0,c
  5464  001C8A  0E00               	movlw	0
  5465  001C8C  6E06               	movwf	(___fladd@a+1)^0,c
  5466  001C8E  0E00               	movlw	0
  5467  001C90  6E07               	movwf	(___fladd@a+2)^0,c
  5468  001C92  0E00               	movlw	0
  5469  001C94  6E08               	movwf	(___fladd@a+3)^0,c
  5470  001C96                     l3916:
  5471  001C96  8E07               	bsf	(___fladd@a+2)^0,7,c
  5472  001C98  0E00               	movlw	0
  5473  001C9A  6E08               	movwf	(___fladd@a+3)^0,c
  5474  001C9C  EF58  F00E         	goto	l3922
  5475  001CA0                     l3920:
  5476  001CA0  0E00               	movlw	0
  5477  001CA2  6E05               	movwf	___fladd@a^0,c
  5478  001CA4  0E00               	movlw	0
  5479  001CA6  6E06               	movwf	(___fladd@a+1)^0,c
  5480  001CA8  0E00               	movlw	0
  5481  001CAA  6E07               	movwf	(___fladd@a+2)^0,c
  5482  001CAC  0E00               	movlw	0
  5483  001CAE  6E08               	movwf	(___fladd@a+3)^0,c
  5484  001CB0                     l3922:
  5485  001CB0  500F               	movf	___fladd@bexp^0,w,c
  5486  001CB2  5C0E               	subwf	___fladd@aexp^0,w,c
  5487  001CB4  B0D8               	btfsc	status,0,c
  5488  001CB6  EF5F  F00E         	goto	u3411
  5489  001CBA  EF61  F00E         	goto	u3410
  5490  001CBE                     u3411:
  5491  001CBE  EF88  F00E         	goto	l3958
  5492  001CC2                     u3410:
  5493  001CC2  AC0D               	btfss	___fladd@signs^0,6,c
  5494  001CC4  EF66  F00E         	goto	u3421
  5495  001CC8  EF68  F00E         	goto	u3420
  5496  001CCC                     u3421:
  5497  001CCC  EF6A  F00E         	goto	l3928
  5498  001CD0                     u3420:
  5499  001CD0  0E80               	movlw	128
  5500  001CD2  1A0D               	xorwf	___fladd@signs^0,f,c
  5501  001CD4                     l3928:
  5502  001CD4  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5503  001CD8  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5504  001CDC  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5505  001CE0  C001  F010         	movff	___fladd@b,___fladd@grs
  5506  001CE4  C005  F001         	movff	___fladd@a,___fladd@b
  5507  001CE8  C010  F005         	movff	___fladd@grs,___fladd@a
  5508  001CEC  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5509  001CF0  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5510  001CF4  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5511  001CF8  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5512  001CFC  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5513  001D00  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5514  001D04  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5515  001D08  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5516  001D0C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5517  001D10                     l3958:
  5518  001D10  0E00               	movlw	0
  5519  001D12  6E10               	movwf	___fladd@grs^0,c
  5520  001D14  500F               	movf	___fladd@bexp^0,w,c
  5521  001D16  C00E  F009         	movff	___fladd@aexp,??___fladd
  5522  001D1A  6A0A               	clrf	(??___fladd+1)^0,c
  5523  001D1C  5E09               	subwf	??___fladd^0,f,c
  5524  001D1E  0E00               	movlw	0
  5525  001D20  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5526  001D22  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5527  001D24  EF9D  F00E         	goto	u3431
  5528  001D28  500A               	movf	(??___fladd+1)^0,w,c
  5529  001D2A  E109               	bnz	u3430
  5530  001D2C  0E1A               	movlw	26
  5531  001D2E  5C09               	subwf	??___fladd^0,w,c
  5532  001D30  A0D8               	btfss	status,0,c
  5533  001D32  EF9D  F00E         	goto	u3431
  5534  001D36  EF9F  F00E         	goto	u3430
  5535  001D3A                     u3431:
  5536  001D3A  EFD6  F00E         	goto	l1303
  5537  001D3E                     u3430:
  5538  001D3E  5001               	movf	___fladd@b^0,w,c
  5539  001D40  1002               	iorwf	(___fladd@b+1)^0,w,c
  5540  001D42  1003               	iorwf	(___fladd@b+2)^0,w,c
  5541  001D44  1004               	iorwf	(___fladd@b+3)^0,w,c
  5542  001D46  A4D8               	btfss	status,2,c
  5543  001D48  EFA8  F00E         	goto	u3441
  5544  001D4C  EFAB  F00E         	goto	u3440
  5545  001D50                     u3441:
  5546  001D50  0E01               	movlw	1
  5547  001D52  EFAC  F00E         	goto	u3450
  5548  001D56                     u3440:
  5549  001D56  0E00               	movlw	0
  5550  001D58                     u3450:
  5551  001D58  6E10               	movwf	___fladd@grs^0,c
  5552  001D5A  0E00               	movlw	0
  5553  001D5C  6E01               	movwf	___fladd@b^0,c
  5554  001D5E  0E00               	movlw	0
  5555  001D60  6E02               	movwf	(___fladd@b+1)^0,c
  5556  001D62  0E00               	movlw	0
  5557  001D64  6E03               	movwf	(___fladd@b+2)^0,c
  5558  001D66  0E00               	movlw	0
  5559  001D68  6E04               	movwf	(___fladd@b+3)^0,c
  5560  001D6A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5561  001D6E  EFDF  F00E         	goto	l1302
  5562  001D72                     l1304:
  5563  001D72  A010               	btfss	___fladd@grs^0,0,c
  5564  001D74  EFBE  F00E         	goto	u3461
  5565  001D78  EFC0  F00E         	goto	u3460
  5566  001D7C                     u3461:
  5567  001D7C  EFC6  F00E         	goto	l3970
  5568  001D80                     u3460:
  5569  001D80  90D8               	bcf	status,0,c
  5570  001D82  3010               	rrcf	___fladd@grs^0,w,c
  5571  001D84  0901               	iorlw	1
  5572  001D86  6E10               	movwf	___fladd@grs^0,c
  5573  001D88  EFC8  F00E         	goto	l3972
  5574  001D8C                     l3970:
  5575  001D8C  90D8               	bcf	status,0,c
  5576  001D8E  3210               	rrcf	___fladd@grs^0,f,c
  5577  001D90                     l3972:
  5578  001D90  A001               	btfss	___fladd@b^0,0,c
  5579  001D92  EFCD  F00E         	goto	u3471
  5580  001D96  EFCF  F00E         	goto	u3470
  5581  001D9A                     u3471:
  5582  001D9A  EFD0  F00E         	goto	l3976
  5583  001D9E                     u3470:
  5584  001D9E  8E10               	bsf	___fladd@grs^0,7,c
  5585  001DA0                     l3976:
  5586  001DA0  3404               	rlcf	(___fladd@b+3)^0,w,c
  5587  001DA2  3204               	rrcf	(___fladd@b+3)^0,f,c
  5588  001DA4  3203               	rrcf	(___fladd@b+2)^0,f,c
  5589  001DA6  3202               	rrcf	(___fladd@b+1)^0,f,c
  5590  001DA8  3201               	rrcf	___fladd@b^0,f,c
  5591  001DAA  2A0F               	incf	___fladd@bexp^0,f,c
  5592  001DAC                     l1303:
  5593  001DAC  500E               	movf	___fladd@aexp^0,w,c
  5594  001DAE  5C0F               	subwf	___fladd@bexp^0,w,c
  5595  001DB0  A0D8               	btfss	status,0,c
  5596  001DB2  EFDD  F00E         	goto	u3481
  5597  001DB6  EFDF  F00E         	goto	u3480
  5598  001DBA                     u3481:
  5599  001DBA  EFB9  F00E         	goto	l1304
  5600  001DBE                     u3480:
  5601  001DBE                     l1302:
  5602  001DBE  BC0D               	btfsc	___fladd@signs^0,6,c
  5603  001DC0  EFE4  F00E         	goto	u3491
  5604  001DC4  EFE6  F00E         	goto	u3490
  5605  001DC8                     u3491:
  5606  001DC8  EF26  F00F         	goto	l4004
  5607  001DCC                     u3490:
  5608  001DCC  500F               	movf	___fladd@bexp^0,w,c
  5609  001DCE  A4D8               	btfss	status,2,c
  5610  001DD0  EFEC  F00E         	goto	u3501
  5611  001DD4  EFEE  F00E         	goto	u3500
  5612  001DD8                     u3501:
  5613  001DD8  EFF8  F00E         	goto	l3986
  5614  001DDC                     u3500:
  5615  001DDC  0E00               	movlw	0
  5616  001DDE  6E01               	movwf	?___fladd^0,c
  5617  001DE0  0E00               	movlw	0
  5618  001DE2  6E02               	movwf	(?___fladd+1)^0,c
  5619  001DE4  0E00               	movlw	0
  5620  001DE6  6E03               	movwf	(?___fladd+2)^0,c
  5621  001DE8  0E00               	movlw	0
  5622  001DEA  6E04               	movwf	(?___fladd+3)^0,c
  5623  001DEC  EF47  F010         	goto	l1311
  5624  001DF0                     l3986:
  5625  001DF0  5005               	movf	___fladd@a^0,w,c
  5626  001DF2  2601               	addwf	___fladd@b^0,f,c
  5627  001DF4  5006               	movf	(___fladd@a+1)^0,w,c
  5628  001DF6  2202               	addwfc	(___fladd@b+1)^0,f,c
  5629  001DF8  5007               	movf	(___fladd@a+2)^0,w,c
  5630  001DFA  2203               	addwfc	(___fladd@b+2)^0,f,c
  5631  001DFC  5008               	movf	(___fladd@a+3)^0,w,c
  5632  001DFE  2204               	addwfc	(___fladd@b+3)^0,f,c
  5633  001E00  A004               	btfss	(___fladd@b+3)^0,0,c
  5634  001E02  EF05  F00F         	goto	u3511
  5635  001E06  EF07  F00F         	goto	u3510
  5636  001E0A                     u3511:
  5637  001E0A  EFB3  F00F         	goto	l4040
  5638  001E0E                     u3510:
  5639  001E0E  A010               	btfss	___fladd@grs^0,0,c
  5640  001E10  EF0C  F00F         	goto	u3521
  5641  001E14  EF0E  F00F         	goto	u3520
  5642  001E18                     u3521:
  5643  001E18  EF14  F00F         	goto	l3994
  5644  001E1C                     u3520:
  5645  001E1C  90D8               	bcf	status,0,c
  5646  001E1E  3010               	rrcf	___fladd@grs^0,w,c
  5647  001E20  0901               	iorlw	1
  5648  001E22  6E10               	movwf	___fladd@grs^0,c
  5649  001E24  EF16  F00F         	goto	l3996
  5650  001E28                     l3994:
  5651  001E28  90D8               	bcf	status,0,c
  5652  001E2A  3210               	rrcf	___fladd@grs^0,f,c
  5653  001E2C                     l3996:
  5654  001E2C  A001               	btfss	___fladd@b^0,0,c
  5655  001E2E  EF1B  F00F         	goto	u3531
  5656  001E32  EF1D  F00F         	goto	u3530
  5657  001E36                     u3531:
  5658  001E36  EF1E  F00F         	goto	l4000
  5659  001E3A                     u3530:
  5660  001E3A  8E10               	bsf	___fladd@grs^0,7,c
  5661  001E3C                     l4000:
  5662  001E3C  3404               	rlcf	(___fladd@b+3)^0,w,c
  5663  001E3E  3204               	rrcf	(___fladd@b+3)^0,f,c
  5664  001E40  3203               	rrcf	(___fladd@b+2)^0,f,c
  5665  001E42  3202               	rrcf	(___fladd@b+1)^0,f,c
  5666  001E44  3201               	rrcf	___fladd@b^0,f,c
  5667  001E46  2A0F               	incf	___fladd@bexp^0,f,c
  5668  001E48  EFB3  F00F         	goto	l4040
  5669  001E4C                     l4004:
  5670  001E4C  5005               	movf	___fladd@a^0,w,c
  5671  001E4E  5C01               	subwf	___fladd@b^0,w,c
  5672  001E50  5006               	movf	(___fladd@a+1)^0,w,c
  5673  001E52  5802               	subwfb	(___fladd@b+1)^0,w,c
  5674  001E54  5007               	movf	(___fladd@a+2)^0,w,c
  5675  001E56  5803               	subwfb	(___fladd@b+2)^0,w,c
  5676  001E58  5004               	movf	(___fladd@b+3)^0,w,c
  5677  001E5A  0A80               	xorlw	128
  5678  001E5C  6E09               	movwf	??___fladd^0,c
  5679  001E5E  5008               	movf	(___fladd@a+3)^0,w,c
  5680  001E60  0A80               	xorlw	128
  5681  001E62  5809               	subwfb	??___fladd^0,w,c
  5682  001E64  B0D8               	btfsc	status,0,c
  5683  001E66  EF37  F00F         	goto	u3541
  5684  001E6A  EF39  F00F         	goto	u3540
  5685  001E6E                     u3541:
  5686  001E6E  EF64  F00F         	goto	l4014
  5687  001E72                     u3540:
  5688  001E72  5001               	movf	___fladd@b^0,w,c
  5689  001E74  5C05               	subwf	___fladd@a^0,w,c
  5690  001E76  6E09               	movwf	??___fladd^0,c
  5691  001E78  5002               	movf	(___fladd@b+1)^0,w,c
  5692  001E7A  5806               	subwfb	(___fladd@a+1)^0,w,c
  5693  001E7C  6E0A               	movwf	(??___fladd+1)^0,c
  5694  001E7E  5003               	movf	(___fladd@b+2)^0,w,c
  5695  001E80  5807               	subwfb	(___fladd@a+2)^0,w,c
  5696  001E82  6E0B               	movwf	(??___fladd+2)^0,c
  5697  001E84  5004               	movf	(___fladd@b+3)^0,w,c
  5698  001E86  5808               	subwfb	(___fladd@a+3)^0,w,c
  5699  001E88  6E0C               	movwf	(??___fladd+3)^0,c
  5700  001E8A  0EFF               	movlw	255
  5701  001E8C  2409               	addwf	??___fladd^0,w,c
  5702  001E8E  6E01               	movwf	___fladd@b^0,c
  5703  001E90  0EFF               	movlw	255
  5704  001E92  200A               	addwfc	(??___fladd+1)^0,w,c
  5705  001E94  6E02               	movwf	(___fladd@b+1)^0,c
  5706  001E96  0EFF               	movlw	255
  5707  001E98  200B               	addwfc	(??___fladd+2)^0,w,c
  5708  001E9A  6E03               	movwf	(___fladd@b+2)^0,c
  5709  001E9C  0EFF               	movlw	255
  5710  001E9E  200C               	addwfc	(??___fladd+3)^0,w,c
  5711  001EA0  6E04               	movwf	(___fladd@b+3)^0,c
  5712  001EA2  0E80               	movlw	128
  5713  001EA4  1A0D               	xorwf	___fladd@signs^0,f,c
  5714  001EA6  6C10               	negf	___fladd@grs^0,c
  5715  001EA8  5010               	movf	___fladd@grs^0,w,c
  5716  001EAA  A4D8               	btfss	status,2,c
  5717  001EAC  EF5A  F00F         	goto	u3551
  5718  001EB0  EF5C  F00F         	goto	u3550
  5719  001EB4                     u3551:
  5720  001EB4  EF6C  F00F         	goto	l1319
  5721  001EB8                     u3550:
  5722  001EB8  0E01               	movlw	1
  5723  001EBA  2601               	addwf	___fladd@b^0,f,c
  5724  001EBC  0E00               	movlw	0
  5725  001EBE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5726  001EC0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5727  001EC2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5728  001EC4  EF6C  F00F         	goto	l1319
  5729  001EC8                     l4014:
  5730  001EC8  5005               	movf	___fladd@a^0,w,c
  5731  001ECA  5E01               	subwf	___fladd@b^0,f,c
  5732  001ECC  5006               	movf	(___fladd@a+1)^0,w,c
  5733  001ECE  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5734  001ED0  5007               	movf	(___fladd@a+2)^0,w,c
  5735  001ED2  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5736  001ED4  5008               	movf	(___fladd@a+3)^0,w,c
  5737  001ED6  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5738  001ED8                     l1319:
  5739  001ED8  5001               	movf	___fladd@b^0,w,c
  5740  001EDA  1002               	iorwf	(___fladd@b+1)^0,w,c
  5741  001EDC  1003               	iorwf	(___fladd@b+2)^0,w,c
  5742  001EDE  1004               	iorwf	(___fladd@b+3)^0,w,c
  5743  001EE0  A4D8               	btfss	status,2,c
  5744  001EE2  EF75  F00F         	goto	u3561
  5745  001EE6  EF77  F00F         	goto	u3560
  5746  001EEA                     u3561:
  5747  001EEA  EFAC  F00F         	goto	l4038
  5748  001EEE                     u3560:
  5749  001EEE  5010               	movf	___fladd@grs^0,w,c
  5750  001EF0  A4D8               	btfss	status,2,c
  5751  001EF2  EF7D  F00F         	goto	u3571
  5752  001EF6  EF7F  F00F         	goto	u3570
  5753  001EFA                     u3571:
  5754  001EFA  EFAC  F00F         	goto	l4038
  5755  001EFE                     u3570:
  5756  001EFE  0E00               	movlw	0
  5757  001F00  6E01               	movwf	?___fladd^0,c
  5758  001F02  0E00               	movlw	0
  5759  001F04  6E02               	movwf	(?___fladd+1)^0,c
  5760  001F06  0E00               	movlw	0
  5761  001F08  6E03               	movwf	(?___fladd+2)^0,c
  5762  001F0A  0E00               	movlw	0
  5763  001F0C  6E04               	movwf	(?___fladd+3)^0,c
  5764  001F0E  EF47  F010         	goto	l1311
  5765  001F12                     l4022:
  5766  001F12  90D8               	bcf	status,0,c
  5767  001F14  3601               	rlcf	___fladd@b^0,f,c
  5768  001F16  3602               	rlcf	(___fladd@b+1)^0,f,c
  5769  001F18  3603               	rlcf	(___fladd@b+2)^0,f,c
  5770  001F1A  3604               	rlcf	(___fladd@b+3)^0,f,c
  5771  001F1C  AE10               	btfss	___fladd@grs^0,7,c
  5772  001F1E  EF93  F00F         	goto	u3581
  5773  001F22  EF95  F00F         	goto	u3580
  5774  001F26                     u3581:
  5775  001F26  EF96  F00F         	goto	l4028
  5776  001F2A                     u3580:
  5777  001F2A  8001               	bsf	___fladd@b^0,0,c
  5778  001F2C                     l4028:
  5779  001F2C  A010               	btfss	___fladd@grs^0,0,c
  5780  001F2E  EF9B  F00F         	goto	u3591
  5781  001F32  EF9D  F00F         	goto	u3590
  5782  001F36                     u3591:
  5783  001F36  EFA1  F00F         	goto	l4032
  5784  001F3A                     u3590:
  5785  001F3A  80D8               	bsf	status,0,c
  5786  001F3C  3610               	rlcf	___fladd@grs^0,f,c
  5787  001F3E  EFA3  F00F         	goto	l4034
  5788  001F42                     l4032:
  5789  001F42  90D8               	bcf	status,0,c
  5790  001F44  3610               	rlcf	___fladd@grs^0,f,c
  5791  001F46                     l4034:
  5792  001F46  500F               	movf	___fladd@bexp^0,w,c
  5793  001F48  B4D8               	btfsc	status,2,c
  5794  001F4A  EFA9  F00F         	goto	u3601
  5795  001F4E  EFAB  F00F         	goto	u3600
  5796  001F52                     u3601:
  5797  001F52  EFAC  F00F         	goto	l4038
  5798  001F56                     u3600:
  5799  001F56  060F               	decf	___fladd@bexp^0,f,c
  5800  001F58                     l4038:
  5801  001F58  AE03               	btfss	(___fladd@b+2)^0,7,c
  5802  001F5A  EFB1  F00F         	goto	u3611
  5803  001F5E  EFB3  F00F         	goto	u3610
  5804  001F62                     u3611:
  5805  001F62  EF89  F00F         	goto	l4022
  5806  001F66                     u3610:
  5807  001F66                     l4040:
  5808  001F66  0E00               	movlw	0
  5809  001F68  6E0E               	movwf	___fladd@aexp^0,c
  5810  001F6A  AE10               	btfss	___fladd@grs^0,7,c
  5811  001F6C  EFBA  F00F         	goto	u3621
  5812  001F70  EFBC  F00F         	goto	u3620
  5813  001F74                     u3621:
  5814  001F74  EFD4  F00F         	goto	l1328
  5815  001F78                     u3620:
  5816  001F78  C010  F009         	movff	___fladd@grs,??___fladd
  5817  001F7C  0E7F               	movlw	127
  5818  001F7E  1609               	andwf	??___fladd^0,f,c
  5819  001F80  B4D8               	btfsc	status,2,c
  5820  001F82  EFC5  F00F         	goto	u3631
  5821  001F86  EFC7  F00F         	goto	u3630
  5822  001F8A                     u3631:
  5823  001F8A  EFCB  F00F         	goto	l1329
  5824  001F8E                     u3630:
  5825  001F8E                     l4046:
  5826  001F8E  0E01               	movlw	1
  5827  001F90  6E0E               	movwf	___fladd@aexp^0,c
  5828  001F92  EFD4  F00F         	goto	l1328
  5829  001F96                     l1329:
  5830  001F96  A001               	btfss	___fladd@b^0,0,c
  5831  001F98  EFD0  F00F         	goto	u3641
  5832  001F9C  EFD2  F00F         	goto	u3640
  5833  001FA0                     u3641:
  5834  001FA0  EFD4  F00F         	goto	l1328
  5835  001FA4                     u3640:
  5836  001FA4  EFC7  F00F         	goto	l4046
  5837  001FA8                     l1328:
  5838  001FA8  500E               	movf	___fladd@aexp^0,w,c
  5839  001FAA  B4D8               	btfsc	status,2,c
  5840  001FAC  EFDA  F00F         	goto	u3651
  5841  001FB0  EFDC  F00F         	goto	u3650
  5842  001FB4                     u3651:
  5843  001FB4  EF07  F010         	goto	l4058
  5844  001FB8                     u3650:
  5845  001FB8  0E01               	movlw	1
  5846  001FBA  2601               	addwf	___fladd@b^0,f,c
  5847  001FBC  0E00               	movlw	0
  5848  001FBE  2202               	addwfc	(___fladd@b+1)^0,f,c
  5849  001FC0  2203               	addwfc	(___fladd@b+2)^0,f,c
  5850  001FC2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5851  001FC4  A004               	btfss	(___fladd@b+3)^0,0,c
  5852  001FC6  EFE7  F00F         	goto	u3661
  5853  001FCA  EFE9  F00F         	goto	u3660
  5854  001FCE                     u3661:
  5855  001FCE  EF07  F010         	goto	l4058
  5856  001FD2                     u3660:
  5857  001FD2  C001  F009         	movff	___fladd@b,??___fladd
  5858  001FD6  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5859  001FDA  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5860  001FDE  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5861  001FE2  340C               	rlcf	(??___fladd+3)^0,w,c
  5862  001FE4  320C               	rrcf	(??___fladd+3)^0,f,c
  5863  001FE6  320B               	rrcf	(??___fladd+2)^0,f,c
  5864  001FE8  320A               	rrcf	(??___fladd+1)^0,f,c
  5865  001FEA  3209               	rrcf	??___fladd^0,f,c
  5866  001FEC  C009  F001         	movff	??___fladd,___fladd@b
  5867  001FF0  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5868  001FF4  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5869  001FF8  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5870  001FFC  280F               	incf	___fladd@bexp^0,w,c
  5871  001FFE  B4D8               	btfsc	status,2,c
  5872  002000  EF04  F010         	goto	u3671
  5873  002004  EF06  F010         	goto	u3670
  5874  002008                     u3671:
  5875  002008  EF07  F010         	goto	l4058
  5876  00200C                     u3670:
  5877  00200C  2A0F               	incf	___fladd@bexp^0,f,c
  5878  00200E                     l4058:
  5879  00200E  280F               	incf	___fladd@bexp^0,w,c
  5880  002010  B4D8               	btfsc	status,2,c
  5881  002012  EF0D  F010         	goto	u3681
  5882  002016  EF0F  F010         	goto	u3680
  5883  00201A                     u3681:
  5884  00201A  EF17  F010         	goto	l4062
  5885  00201E                     u3680:
  5886  00201E  500F               	movf	___fladd@bexp^0,w,c
  5887  002020  A4D8               	btfss	status,2,c
  5888  002022  EF15  F010         	goto	u3691
  5889  002026  EF17  F010         	goto	u3690
  5890  00202A                     u3691:
  5891  00202A  EF29  F010         	goto	l4066
  5892  00202E                     u3690:
  5893  00202E                     l4062:
  5894  00202E  0E00               	movlw	0
  5895  002030  6E01               	movwf	___fladd@b^0,c
  5896  002032  0E00               	movlw	0
  5897  002034  6E02               	movwf	(___fladd@b+1)^0,c
  5898  002036  0E00               	movlw	0
  5899  002038  6E03               	movwf	(___fladd@b+2)^0,c
  5900  00203A  0E00               	movlw	0
  5901  00203C  6E04               	movwf	(___fladd@b+3)^0,c
  5902  00203E  500F               	movf	___fladd@bexp^0,w,c
  5903  002040  A4D8               	btfss	status,2,c
  5904  002042  EF25  F010         	goto	u3701
  5905  002046  EF27  F010         	goto	u3700
  5906  00204A                     u3701:
  5907  00204A  EF29  F010         	goto	l4066
  5908  00204E                     u3700:
  5909  00204E  0E00               	movlw	0
  5910  002050  6E0D               	movwf	___fladd@signs^0,c
  5911  002052                     l4066:
  5912  002052  A00F               	btfss	___fladd@bexp^0,0,c
  5913  002054  EF2E  F010         	goto	u3711
  5914  002058  EF30  F010         	goto	u3710
  5915  00205C                     u3711:
  5916  00205C  EF33  F010         	goto	l4070
  5917  002060                     u3710:
  5918  002060  8E03               	bsf	(___fladd@b+2)^0,7,c
  5919  002062  EF34  F010         	goto	l4072
  5920  002066                     l4070:
  5921  002066  9E03               	bcf	(___fladd@b+2)^0,7,c
  5922  002068                     l4072:
  5923  002068  90D8               	bcf	status,0,c
  5924  00206A  300F               	rrcf	___fladd@bexp^0,w,c
  5925  00206C  6E04               	movwf	(___fladd@b+3)^0,c
  5926  00206E  AE0D               	btfss	___fladd@signs^0,7,c
  5927  002070  EF3C  F010         	goto	u3721
  5928  002074  EF3E  F010         	goto	u3720
  5929  002078                     u3721:
  5930  002078  EF3F  F010         	goto	l4078
  5931  00207C                     u3720:
  5932  00207C  8E04               	bsf	(___fladd@b+3)^0,7,c
  5933  00207E                     l4078:
  5934  00207E  C001  F001         	movff	___fladd@b,?___fladd
  5935  002082  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5936  002086  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5937  00208A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5938  00208E                     l1311:
  5939  00208E  0012               	return		;funcret
  5940  002090                     __end_of___fladd:
  5941                           	callstack 0
  5942                           
  5943 ;; *************** function ___flneg *****************
  5944 ;; Defined at:
  5945 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  f1              4    0[COMRAM] unsigned char 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;		None
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  4    0[COMRAM] unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5959 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;Total ram usage:        4 bytes
  5964 ;; Hardware stack levels used: 1
  5965 ;; Hardware stack levels required when called: 1
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_roundf
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text22
  5974  00596A                     __ptext22:
  5975                           	callstack 0
  5976  00596A                     ___flneg:
  5977                           	callstack 25
  5978  00596A  5001               	movf	___flneg@f1^0,w,c
  5979  00596C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5980  00596E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5981  005970  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5982  005972  B4D8               	btfsc	status,2,c
  5983  005974  EFBE  F02C         	goto	u4081
  5984  005978  EFC0  F02C         	goto	u4080
  5985  00597C                     u4081:
  5986  00597C  EFC8  F02C         	goto	l4342
  5987  005980                     u4080:
  5988  005980  0E00               	movlw	0
  5989  005982  1A01               	xorwf	___flneg@f1^0,f,c
  5990  005984  0E00               	movlw	0
  5991  005986  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5992  005988  0E00               	movlw	0
  5993  00598A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5994  00598C  0E80               	movlw	128
  5995  00598E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5996  005990                     l4342:
  5997  005990  C001  F001         	movff	___flneg@f1,?___flneg
  5998  005994  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5999  005998  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6000  00599C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6001  0059A0  0012               	return		;funcret
  6002  0059A2                     __end_of___flneg:
  6003                           	callstack 0
  6004                           
  6005 ;; *************** function ___flmul *****************
  6006 ;; Defined at:
  6007 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6008 ;; Parameters:    Size  Location     Type
  6009 ;;  b               4   39[COMRAM] unsigned char 
  6010 ;;  a               4   43[COMRAM] unsigned char 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  prod            4   58[COMRAM] struct .
  6013 ;;  grs             4   52[COMRAM] unsigned long 
  6014 ;;  temp            2   62[COMRAM] struct .
  6015 ;;  bexp            1   57[COMRAM] unsigned char 
  6016 ;;  aexp            1   56[COMRAM] unsigned char 
  6017 ;;  sign            1   51[COMRAM] unsigned char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  4   39[COMRAM] unsigned char 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0, prodl, prodh
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6027 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;Total ram usage:       25 bytes
  6032 ;; Hardware stack levels used: 1
  6033 ;; Hardware stack levels required when called: 1
  6034 ;; This function calls:
  6035 ;;		Nothing
  6036 ;; This function is called by:
  6037 ;;		_detect_color
  6038 ;;		_distance_measure
  6039 ;;		_roundf
  6040 ;;		_check_color_reading
  6041 ;; This function uses a non-reentrant model
  6042 ;;
  6043                           
  6044                           	psect	text23
  6045  002090                     __ptext23:
  6046                           	callstack 0
  6047  002090                     ___flmul:
  6048                           	callstack 25
  6049  002090  502B               	movf	(___flmul@b+3)^0,w,c
  6050  002092  0B80               	andlw	128
  6051  002094  6E34               	movwf	___flmul@sign^0,c
  6052  002096  502B               	movf	(___flmul@b+3)^0,w,c
  6053  002098  242B               	addwf	(___flmul@b+3)^0,w,c
  6054  00209A  6E3A               	movwf	___flmul@bexp^0,c
  6055  00209C  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6056  00209E  EF53  F010         	goto	u3841
  6057  0020A2  EF55  F010         	goto	u3840
  6058  0020A6                     u3841:
  6059  0020A6  EF56  F010         	goto	l4186
  6060  0020AA                     u3840:
  6061  0020AA  803A               	bsf	___flmul@bexp^0,0,c
  6062  0020AC                     l4186:
  6063  0020AC  503A               	movf	___flmul@bexp^0,w,c
  6064  0020AE  B4D8               	btfsc	status,2,c
  6065  0020B0  EF5C  F010         	goto	u3851
  6066  0020B4  EF5E  F010         	goto	u3850
  6067  0020B8                     u3851:
  6068  0020B8  EF71  F010         	goto	l4194
  6069  0020BC                     u3850:
  6070  0020BC  283A               	incf	___flmul@bexp^0,w,c
  6071  0020BE  A4D8               	btfss	status,2,c
  6072  0020C0  EF64  F010         	goto	u3861
  6073  0020C4  EF66  F010         	goto	u3860
  6074  0020C8                     u3861:
  6075  0020C8  EF6E  F010         	goto	l4192
  6076  0020CC                     u3860:
  6077  0020CC  0E00               	movlw	0
  6078  0020CE  6E28               	movwf	___flmul@b^0,c
  6079  0020D0  0E00               	movlw	0
  6080  0020D2  6E29               	movwf	(___flmul@b+1)^0,c
  6081  0020D4  0E00               	movlw	0
  6082  0020D6  6E2A               	movwf	(___flmul@b+2)^0,c
  6083  0020D8  0E00               	movlw	0
  6084  0020DA  6E2B               	movwf	(___flmul@b+3)^0,c
  6085  0020DC                     l4192:
  6086  0020DC  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6087  0020DE  EF79  F010         	goto	l4196
  6088  0020E2                     l4194:
  6089  0020E2  0E00               	movlw	0
  6090  0020E4  6E28               	movwf	___flmul@b^0,c
  6091  0020E6  0E00               	movlw	0
  6092  0020E8  6E29               	movwf	(___flmul@b+1)^0,c
  6093  0020EA  0E00               	movlw	0
  6094  0020EC  6E2A               	movwf	(___flmul@b+2)^0,c
  6095  0020EE  0E00               	movlw	0
  6096  0020F0  6E2B               	movwf	(___flmul@b+3)^0,c
  6097  0020F2                     l4196:
  6098  0020F2  502F               	movf	(___flmul@a+3)^0,w,c
  6099  0020F4  0B80               	andlw	128
  6100  0020F6  1A34               	xorwf	___flmul@sign^0,f,c
  6101  0020F8  502F               	movf	(___flmul@a+3)^0,w,c
  6102  0020FA  242F               	addwf	(___flmul@a+3)^0,w,c
  6103  0020FC  6E39               	movwf	___flmul@aexp^0,c
  6104  0020FE  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6105  002100  EF84  F010         	goto	u3871
  6106  002104  EF86  F010         	goto	u3870
  6107  002108                     u3871:
  6108  002108  EF87  F010         	goto	l4204
  6109  00210C                     u3870:
  6110  00210C  8039               	bsf	___flmul@aexp^0,0,c
  6111  00210E                     l4204:
  6112  00210E  5039               	movf	___flmul@aexp^0,w,c
  6113  002110  B4D8               	btfsc	status,2,c
  6114  002112  EF8D  F010         	goto	u3881
  6115  002116  EF8F  F010         	goto	u3880
  6116  00211A                     u3881:
  6117  00211A  EFA2  F010         	goto	l4212
  6118  00211E                     u3880:
  6119  00211E  2839               	incf	___flmul@aexp^0,w,c
  6120  002120  A4D8               	btfss	status,2,c
  6121  002122  EF95  F010         	goto	u3891
  6122  002126  EF97  F010         	goto	u3890
  6123  00212A                     u3891:
  6124  00212A  EF9F  F010         	goto	l4210
  6125  00212E                     u3890:
  6126  00212E  0E00               	movlw	0
  6127  002130  6E2C               	movwf	___flmul@a^0,c
  6128  002132  0E00               	movlw	0
  6129  002134  6E2D               	movwf	(___flmul@a+1)^0,c
  6130  002136  0E00               	movlw	0
  6131  002138  6E2E               	movwf	(___flmul@a+2)^0,c
  6132  00213A  0E00               	movlw	0
  6133  00213C  6E2F               	movwf	(___flmul@a+3)^0,c
  6134  00213E                     l4210:
  6135  00213E  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6136  002140  EFAA  F010         	goto	l1388
  6137  002144                     l4212:
  6138  002144  0E00               	movlw	0
  6139  002146  6E2C               	movwf	___flmul@a^0,c
  6140  002148  0E00               	movlw	0
  6141  00214A  6E2D               	movwf	(___flmul@a+1)^0,c
  6142  00214C  0E00               	movlw	0
  6143  00214E  6E2E               	movwf	(___flmul@a+2)^0,c
  6144  002150  0E00               	movlw	0
  6145  002152  6E2F               	movwf	(___flmul@a+3)^0,c
  6146  002154                     l1388:
  6147  002154  5039               	movf	___flmul@aexp^0,w,c
  6148  002156  B4D8               	btfsc	status,2,c
  6149  002158  EFB0  F010         	goto	u3901
  6150  00215C  EFB2  F010         	goto	u3900
  6151  002160                     u3901:
  6152  002160  EFBA  F010         	goto	l4216
  6153  002164                     u3900:
  6154  002164  503A               	movf	___flmul@bexp^0,w,c
  6155  002166  A4D8               	btfss	status,2,c
  6156  002168  EFB8  F010         	goto	u3911
  6157  00216C  EFBA  F010         	goto	u3910
  6158  002170                     u3911:
  6159  002170  EFC4  F010         	goto	l4220
  6160  002174                     u3910:
  6161  002174                     l4216:
  6162  002174  0E00               	movlw	0
  6163  002176  6E28               	movwf	?___flmul^0,c
  6164  002178  0E00               	movlw	0
  6165  00217A  6E29               	movwf	(?___flmul+1)^0,c
  6166  00217C  0E00               	movlw	0
  6167  00217E  6E2A               	movwf	(?___flmul+2)^0,c
  6168  002180  0E00               	movlw	0
  6169  002182  6E2B               	movwf	(?___flmul+3)^0,c
  6170  002184  EF5C  F012         	goto	l1392
  6171  002188                     l4220:
  6172  002188  502E               	movf	(___flmul@a+2)^0,w,c
  6173  00218A  0228               	mulwf	___flmul@b^0,c
  6174  00218C  CFF3 F03F          	movff	prodl,___flmul@temp
  6175  002190  CFF4 F040          	movff	prodh,___flmul@temp+1
  6176  002194  503F               	movf	___flmul@temp^0,w,c
  6177  002196  6E35               	movwf	___flmul@grs^0,c
  6178  002198  6A36               	clrf	(___flmul@grs+1)^0,c
  6179  00219A  6A37               	clrf	(___flmul@grs+2)^0,c
  6180  00219C  6A38               	clrf	(___flmul@grs+3)^0,c
  6181  00219E  5040               	movf	(___flmul@temp+1)^0,w,c
  6182  0021A0  6E3B               	movwf	___flmul@prod^0,c
  6183  0021A2  6A3C               	clrf	(___flmul@prod+1)^0,c
  6184  0021A4  6A3D               	clrf	(___flmul@prod+2)^0,c
  6185  0021A6  6A3E               	clrf	(___flmul@prod+3)^0,c
  6186  0021A8  502D               	movf	(___flmul@a+1)^0,w,c
  6187  0021AA  0229               	mulwf	(___flmul@b+1)^0,c
  6188  0021AC  CFF3 F03F          	movff	prodl,___flmul@temp
  6189  0021B0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6190  0021B4  503F               	movf	___flmul@temp^0,w,c
  6191  0021B6  2635               	addwf	___flmul@grs^0,f,c
  6192  0021B8  0E00               	movlw	0
  6193  0021BA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6194  0021BC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6195  0021BE  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6196  0021C0  5040               	movf	(___flmul@temp+1)^0,w,c
  6197  0021C2  263B               	addwf	___flmul@prod^0,f,c
  6198  0021C4  0E00               	movlw	0
  6199  0021C6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6200  0021C8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6201  0021CA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6202  0021CC  502C               	movf	___flmul@a^0,w,c
  6203  0021CE  022A               	mulwf	(___flmul@b+2)^0,c
  6204  0021D0  CFF3 F03F          	movff	prodl,___flmul@temp
  6205  0021D4  CFF4 F040          	movff	prodh,___flmul@temp+1
  6206  0021D8  503F               	movf	___flmul@temp^0,w,c
  6207  0021DA  2635               	addwf	___flmul@grs^0,f,c
  6208  0021DC  0E00               	movlw	0
  6209  0021DE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6210  0021E0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6211  0021E2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6212  0021E4  5040               	movf	(___flmul@temp+1)^0,w,c
  6213  0021E6  263B               	addwf	___flmul@prod^0,f,c
  6214  0021E8  0E00               	movlw	0
  6215  0021EA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6216  0021EC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6217  0021EE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6218  0021F0  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6219  0021F4  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6220  0021F8  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6221  0021FC  6A35               	clrf	___flmul@grs^0,c
  6222  0021FE  502C               	movf	___flmul@a^0,w,c
  6223  002200  0229               	mulwf	(___flmul@b+1)^0,c
  6224  002202  CFF3 F03F          	movff	prodl,___flmul@temp
  6225  002206  CFF4 F040          	movff	prodh,___flmul@temp+1
  6226  00220A  503F               	movf	___flmul@temp^0,w,c
  6227  00220C  2635               	addwf	___flmul@grs^0,f,c
  6228  00220E  5040               	movf	(___flmul@temp+1)^0,w,c
  6229  002210  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6230  002212  0E00               	movlw	0
  6231  002214  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6232  002216  0E00               	movlw	0
  6233  002218  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6234  00221A  502D               	movf	(___flmul@a+1)^0,w,c
  6235  00221C  0228               	mulwf	___flmul@b^0,c
  6236  00221E  CFF3 F03F          	movff	prodl,___flmul@temp
  6237  002222  CFF4 F040          	movff	prodh,___flmul@temp+1
  6238  002226  503F               	movf	___flmul@temp^0,w,c
  6239  002228  2635               	addwf	___flmul@grs^0,f,c
  6240  00222A  5040               	movf	(___flmul@temp+1)^0,w,c
  6241  00222C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6242  00222E  0E00               	movlw	0
  6243  002230  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6244  002232  0E00               	movlw	0
  6245  002234  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6246  002236  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6247  00223A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6248  00223E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6249  002242  6A35               	clrf	___flmul@grs^0,c
  6250  002244  502C               	movf	___flmul@a^0,w,c
  6251  002246  0228               	mulwf	___flmul@b^0,c
  6252  002248  CFF3 F03F          	movff	prodl,___flmul@temp
  6253  00224C  CFF4 F040          	movff	prodh,___flmul@temp+1
  6254  002250  503F               	movf	___flmul@temp^0,w,c
  6255  002252  2635               	addwf	___flmul@grs^0,f,c
  6256  002254  5040               	movf	(___flmul@temp+1)^0,w,c
  6257  002256  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6258  002258  0E00               	movlw	0
  6259  00225A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6260  00225C  0E00               	movlw	0
  6261  00225E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6262  002260  502E               	movf	(___flmul@a+2)^0,w,c
  6263  002262  0229               	mulwf	(___flmul@b+1)^0,c
  6264  002264  CFF3 F03F          	movff	prodl,___flmul@temp
  6265  002268  CFF4 F040          	movff	prodh,___flmul@temp+1
  6266  00226C  503F               	movf	___flmul@temp^0,w,c
  6267  00226E  263B               	addwf	___flmul@prod^0,f,c
  6268  002270  5040               	movf	(___flmul@temp+1)^0,w,c
  6269  002272  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6270  002274  0E00               	movlw	0
  6271  002276  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6272  002278  0E00               	movlw	0
  6273  00227A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6274  00227C  502D               	movf	(___flmul@a+1)^0,w,c
  6275  00227E  022A               	mulwf	(___flmul@b+2)^0,c
  6276  002280  CFF3 F03F          	movff	prodl,___flmul@temp
  6277  002284  CFF4 F040          	movff	prodh,___flmul@temp+1
  6278  002288  503F               	movf	___flmul@temp^0,w,c
  6279  00228A  263B               	addwf	___flmul@prod^0,f,c
  6280  00228C  5040               	movf	(___flmul@temp+1)^0,w,c
  6281  00228E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6282  002290  0E00               	movlw	0
  6283  002292  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6284  002294  0E00               	movlw	0
  6285  002296  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6286  002298  502E               	movf	(___flmul@a+2)^0,w,c
  6287  00229A  022A               	mulwf	(___flmul@b+2)^0,c
  6288  00229C  CFF3 F03F          	movff	prodl,___flmul@temp
  6289  0022A0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6290  0022A4  503F               	movf	___flmul@temp^0,w,c
  6291  0022A6  6E30               	movwf	??___flmul^0,c
  6292  0022A8  5040               	movf	(___flmul@temp+1)^0,w,c
  6293  0022AA  6E31               	movwf	(??___flmul+1)^0,c
  6294  0022AC  6A32               	clrf	(??___flmul+2)^0,c
  6295  0022AE  6A33               	clrf	(??___flmul+3)^0,c
  6296  0022B0  C032  F033         	movff	??___flmul+2,??___flmul+3
  6297  0022B4  C031  F032         	movff	??___flmul+1,??___flmul+2
  6298  0022B8  C030  F031         	movff	??___flmul,??___flmul+1
  6299  0022BC  6A30               	clrf	??___flmul^0,c
  6300  0022BE  5030               	movf	??___flmul^0,w,c
  6301  0022C0  263B               	addwf	___flmul@prod^0,f,c
  6302  0022C2  5031               	movf	(??___flmul+1)^0,w,c
  6303  0022C4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6304  0022C6  5032               	movf	(??___flmul+2)^0,w,c
  6305  0022C8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6306  0022CA  5033               	movf	(??___flmul+3)^0,w,c
  6307  0022CC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6308  0022CE  C035  F030         	movff	___flmul@grs,??___flmul
  6309  0022D2  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6310  0022D6  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6311  0022DA  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6312  0022DE  0E19               	movlw	25
  6313  0022E0  EF77  F011         	goto	u3920
  6314  0022E4                     u3925:
  6315  0022E4  90D8               	bcf	status,0,c
  6316  0022E6  3233               	rrcf	(??___flmul+3)^0,f,c
  6317  0022E8  3232               	rrcf	(??___flmul+2)^0,f,c
  6318  0022EA  3231               	rrcf	(??___flmul+1)^0,f,c
  6319  0022EC  3230               	rrcf	??___flmul^0,f,c
  6320  0022EE                     u3920:
  6321  0022EE  2EE8               	decfsz	wreg,f,c
  6322  0022F0  EF72  F011         	goto	u3925
  6323  0022F4  5030               	movf	??___flmul^0,w,c
  6324  0022F6  263B               	addwf	___flmul@prod^0,f,c
  6325  0022F8  5031               	movf	(??___flmul+1)^0,w,c
  6326  0022FA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6327  0022FC  5032               	movf	(??___flmul+2)^0,w,c
  6328  0022FE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6329  002300  5033               	movf	(??___flmul+3)^0,w,c
  6330  002302  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6331  002304  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6332  002308  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6333  00230C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6334  002310  6A35               	clrf	___flmul@grs^0,c
  6335  002312  5039               	movf	___flmul@aexp^0,w,c
  6336  002314  C03A  F030         	movff	___flmul@bexp,??___flmul
  6337  002318  6A31               	clrf	(??___flmul+1)^0,c
  6338  00231A  2630               	addwf	??___flmul^0,f,c
  6339  00231C  0E00               	movlw	0
  6340  00231E  2231               	addwfc	(??___flmul+1)^0,f,c
  6341  002320  0E82               	movlw	130
  6342  002322  2430               	addwf	??___flmul^0,w,c
  6343  002324  6E3F               	movwf	___flmul@temp^0,c
  6344  002326  0EFF               	movlw	255
  6345  002328  2031               	addwfc	(??___flmul+1)^0,w,c
  6346  00232A  6E40               	movwf	(___flmul@temp+1)^0,c
  6347  00232C  EFAD  F011         	goto	l4268
  6348  002330                     l4262:
  6349  002330  90D8               	bcf	status,0,c
  6350  002332  363B               	rlcf	___flmul@prod^0,f,c
  6351  002334  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6352  002336  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6353  002338  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6354  00233A  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6355  00233C  EFA2  F011         	goto	u3931
  6356  002340  EFA4  F011         	goto	u3930
  6357  002344                     u3931:
  6358  002344  EFA5  F011         	goto	l1395
  6359  002348                     u3930:
  6360  002348  803B               	bsf	___flmul@prod^0,0,c
  6361  00234A                     l1395:
  6362  00234A  90D8               	bcf	status,0,c
  6363  00234C  3635               	rlcf	___flmul@grs^0,f,c
  6364  00234E  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6365  002350  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6366  002352  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6367  002354  063F               	decf	___flmul@temp^0,f,c
  6368  002356  A0D8               	btfss	status,0,c
  6369  002358  0640               	decf	(___flmul@temp+1)^0,f,c
  6370  00235A                     l4268:
  6371  00235A  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6372  00235C  EFB2  F011         	goto	u3941
  6373  002360  EFB4  F011         	goto	u3940
  6374  002364                     u3941:
  6375  002364  EF98  F011         	goto	l4262
  6376  002368                     u3940:
  6377  002368  0E00               	movlw	0
  6378  00236A  6E39               	movwf	___flmul@aexp^0,c
  6379  00236C  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6380  00236E  EFBB  F011         	goto	u3951
  6381  002372  EFBD  F011         	goto	u3950
  6382  002376                     u3951:
  6383  002376  EFE1  F011         	goto	l1397
  6384  00237A                     u3950:
  6385  00237A  0EFF               	movlw	255
  6386  00237C  1435               	andwf	___flmul@grs^0,w,c
  6387  00237E  6E30               	movwf	??___flmul^0,c
  6388  002380  0EFF               	movlw	255
  6389  002382  1436               	andwf	(___flmul@grs+1)^0,w,c
  6390  002384  6E31               	movwf	(??___flmul+1)^0,c
  6391  002386  0EFF               	movlw	255
  6392  002388  1437               	andwf	(___flmul@grs+2)^0,w,c
  6393  00238A  6E32               	movwf	(??___flmul+2)^0,c
  6394  00238C  0E7F               	movlw	127
  6395  00238E  1438               	andwf	(___flmul@grs+3)^0,w,c
  6396  002390  6E33               	movwf	(??___flmul+3)^0,c
  6397  002392  5030               	movf	??___flmul^0,w,c
  6398  002394  1031               	iorwf	(??___flmul+1)^0,w,c
  6399  002396  1032               	iorwf	(??___flmul+2)^0,w,c
  6400  002398  1033               	iorwf	(??___flmul+3)^0,w,c
  6401  00239A  B4D8               	btfsc	status,2,c
  6402  00239C  EFD2  F011         	goto	u3961
  6403  0023A0  EFD4  F011         	goto	u3960
  6404  0023A4                     u3961:
  6405  0023A4  EFD8  F011         	goto	l1398
  6406  0023A8                     u3960:
  6407  0023A8                     l4276:
  6408  0023A8  0E01               	movlw	1
  6409  0023AA  6E39               	movwf	___flmul@aexp^0,c
  6410  0023AC  EFE1  F011         	goto	l1397
  6411  0023B0                     l1398:
  6412  0023B0  A03B               	btfss	___flmul@prod^0,0,c
  6413  0023B2  EFDD  F011         	goto	u3971
  6414  0023B6  EFDF  F011         	goto	u3970
  6415  0023BA                     u3971:
  6416  0023BA  EFE1  F011         	goto	l1397
  6417  0023BE                     u3970:
  6418  0023BE  EFD4  F011         	goto	l4276
  6419  0023C2                     l1397:
  6420  0023C2  5039               	movf	___flmul@aexp^0,w,c
  6421  0023C4  B4D8               	btfsc	status,2,c
  6422  0023C6  EFE7  F011         	goto	u3981
  6423  0023CA  EFE9  F011         	goto	u3980
  6424  0023CE                     u3981:
  6425  0023CE  EF0D  F012         	goto	l4288
  6426  0023D2                     u3980:
  6427  0023D2  0E01               	movlw	1
  6428  0023D4  263B               	addwf	___flmul@prod^0,f,c
  6429  0023D6  0E00               	movlw	0
  6430  0023D8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6431  0023DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6432  0023DC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6433  0023DE  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6434  0023E0  EFF4  F011         	goto	u3991
  6435  0023E4  EFF6  F011         	goto	u3990
  6436  0023E8                     u3991:
  6437  0023E8  EF0D  F012         	goto	l4288
  6438  0023EC                     u3990:
  6439  0023EC  C03B  F030         	movff	___flmul@prod,??___flmul
  6440  0023F0  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6441  0023F4  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6442  0023F8  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6443  0023FC  3433               	rlcf	(??___flmul+3)^0,w,c
  6444  0023FE  3233               	rrcf	(??___flmul+3)^0,f,c
  6445  002400  3232               	rrcf	(??___flmul+2)^0,f,c
  6446  002402  3231               	rrcf	(??___flmul+1)^0,f,c
  6447  002404  3230               	rrcf	??___flmul^0,f,c
  6448  002406  C030  F03B         	movff	??___flmul,___flmul@prod
  6449  00240A  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6450  00240E  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6451  002412  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6452  002416  4A3F               	infsnz	___flmul@temp^0,f,c
  6453  002418  2A40               	incf	(___flmul@temp+1)^0,f,c
  6454  00241A                     l4288:
  6455  00241A  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6456  00241C  EF18  F012         	goto	u4001
  6457  002420  5040               	movf	(___flmul@temp+1)^0,w,c
  6458  002422  E108               	bnz	u4000
  6459  002424  283F               	incf	___flmul@temp^0,w,c
  6460  002426  A0D8               	btfss	status,0,c
  6461  002428  EF18  F012         	goto	u4001
  6462  00242C  EF1A  F012         	goto	u4000
  6463  002430                     u4001:
  6464  002430  EF24  F012         	goto	l4292
  6465  002434                     u4000:
  6466  002434  0E00               	movlw	0
  6467  002436  6E3B               	movwf	___flmul@prod^0,c
  6468  002438  0E00               	movlw	0
  6469  00243A  6E3C               	movwf	(___flmul@prod+1)^0,c
  6470  00243C  0E80               	movlw	128
  6471  00243E  6E3D               	movwf	(___flmul@prod+2)^0,c
  6472  002440  0E7F               	movlw	127
  6473  002442  6E3E               	movwf	(___flmul@prod+3)^0,c
  6474  002444  EF52  F012         	goto	l4304
  6475  002448                     l4292:
  6476  002448  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6477  00244A  EF31  F012         	goto	u4010
  6478  00244E  5040               	movf	(___flmul@temp+1)^0,w,c
  6479  002450  E106               	bnz	u4011
  6480  002452  043F               	decf	___flmul@temp^0,w,c
  6481  002454  B0D8               	btfsc	status,0,c
  6482  002456  EF2F  F012         	goto	u4011
  6483  00245A  EF31  F012         	goto	u4010
  6484  00245E                     u4011:
  6485  00245E  EF3D  F012         	goto	l1405
  6486  002462                     u4010:
  6487  002462  0E00               	movlw	0
  6488  002464  6E3B               	movwf	___flmul@prod^0,c
  6489  002466  0E00               	movlw	0
  6490  002468  6E3C               	movwf	(___flmul@prod+1)^0,c
  6491  00246A  0E00               	movlw	0
  6492  00246C  6E3D               	movwf	(___flmul@prod+2)^0,c
  6493  00246E  0E00               	movlw	0
  6494  002470  6E3E               	movwf	(___flmul@prod+3)^0,c
  6495  002472  0E00               	movlw	0
  6496  002474  6E34               	movwf	___flmul@sign^0,c
  6497  002476  EF52  F012         	goto	l4304
  6498  00247A                     l1405:
  6499  00247A  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6500  00247E  0EFF               	movlw	255
  6501  002480  163B               	andwf	___flmul@prod^0,f,c
  6502  002482  0EFF               	movlw	255
  6503  002484  163C               	andwf	(___flmul@prod+1)^0,f,c
  6504  002486  0E7F               	movlw	127
  6505  002488  163D               	andwf	(___flmul@prod+2)^0,f,c
  6506  00248A  0E00               	movlw	0
  6507  00248C  163E               	andwf	(___flmul@prod+3)^0,f,c
  6508  00248E  A03A               	btfss	___flmul@bexp^0,0,c
  6509  002490  EF4C  F012         	goto	u4021
  6510  002494  EF4E  F012         	goto	u4020
  6511  002498                     u4021:
  6512  002498  EF4F  F012         	goto	l4302
  6513  00249C                     u4020:
  6514  00249C  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6515  00249E                     l4302:
  6516  00249E  90D8               	bcf	status,0,c
  6517  0024A0  303A               	rrcf	___flmul@bexp^0,w,c
  6518  0024A2  6E3E               	movwf	(___flmul@prod+3)^0,c
  6519  0024A4                     l4304:
  6520  0024A4  5034               	movf	___flmul@sign^0,w,c
  6521  0024A6  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6522  0024A8  C03B  F028         	movff	___flmul@prod,?___flmul
  6523  0024AC  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6524  0024B0  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6525  0024B4  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6526  0024B8                     l1392:
  6527  0024B8  0012               	return		;funcret
  6528  0024BA                     __end_of___flmul:
  6529                           	callstack 0
  6530                           
  6531 ;; *************** function ___flge *****************
  6532 ;; Defined at:
  6533 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  ff1             4    0[COMRAM] unsigned char 
  6536 ;;  ff2             4    4[COMRAM] unsigned char 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;		None               void
  6541 ;; Registers used:
  6542 ;;		wreg, status,2, status,0
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/0
  6545 ;;		On exit  : 0/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6548 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;Total ram usage:       12 bytes
  6553 ;; Hardware stack levels used: 1
  6554 ;; Hardware stack levels required when called: 1
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_roundf
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text24
  6563  004BD0                     __ptext24:
  6564                           	callstack 0
  6565  004BD0                     ___flge:
  6566                           	callstack 25
  6567  004BD0  0E00               	movlw	0
  6568  004BD2  1401               	andwf	___flge@ff1^0,w,c
  6569  004BD4  6E09               	movwf	??___flge^0,c
  6570  004BD6  0E00               	movlw	0
  6571  004BD8  1402               	andwf	(___flge@ff1+1)^0,w,c
  6572  004BDA  6E0A               	movwf	(??___flge+1)^0,c
  6573  004BDC  0E80               	movlw	128
  6574  004BDE  1403               	andwf	(___flge@ff1+2)^0,w,c
  6575  004BE0  6E0B               	movwf	(??___flge+2)^0,c
  6576  004BE2  0E7F               	movlw	127
  6577  004BE4  1404               	andwf	(___flge@ff1+3)^0,w,c
  6578  004BE6  6E0C               	movwf	(??___flge+3)^0,c
  6579  004BE8  5009               	movf	??___flge^0,w,c
  6580  004BEA  100A               	iorwf	(??___flge+1)^0,w,c
  6581  004BEC  100B               	iorwf	(??___flge+2)^0,w,c
  6582  004BEE  100C               	iorwf	(??___flge+3)^0,w,c
  6583  004BF0  A4D8               	btfss	status,2,c
  6584  004BF2  EFFD  F025         	goto	u4031
  6585  004BF6  EFFF  F025         	goto	u4030
  6586  004BFA                     u4031:
  6587  004BFA  EF07  F026         	goto	l4320
  6588  004BFE                     u4030:
  6589  004BFE  0E00               	movlw	0
  6590  004C00  6E01               	movwf	___flge@ff1^0,c
  6591  004C02  0E00               	movlw	0
  6592  004C04  6E02               	movwf	(___flge@ff1+1)^0,c
  6593  004C06  0E00               	movlw	0
  6594  004C08  6E03               	movwf	(___flge@ff1+2)^0,c
  6595  004C0A  0E00               	movlw	0
  6596  004C0C  6E04               	movwf	(___flge@ff1+3)^0,c
  6597  004C0E                     l4320:
  6598  004C0E  0E00               	movlw	0
  6599  004C10  1405               	andwf	___flge@ff2^0,w,c
  6600  004C12  6E09               	movwf	??___flge^0,c
  6601  004C14  0E00               	movlw	0
  6602  004C16  1406               	andwf	(___flge@ff2+1)^0,w,c
  6603  004C18  6E0A               	movwf	(??___flge+1)^0,c
  6604  004C1A  0E80               	movlw	128
  6605  004C1C  1407               	andwf	(___flge@ff2+2)^0,w,c
  6606  004C1E  6E0B               	movwf	(??___flge+2)^0,c
  6607  004C20  0E7F               	movlw	127
  6608  004C22  1408               	andwf	(___flge@ff2+3)^0,w,c
  6609  004C24  6E0C               	movwf	(??___flge+3)^0,c
  6610  004C26  5009               	movf	??___flge^0,w,c
  6611  004C28  100A               	iorwf	(??___flge+1)^0,w,c
  6612  004C2A  100B               	iorwf	(??___flge+2)^0,w,c
  6613  004C2C  100C               	iorwf	(??___flge+3)^0,w,c
  6614  004C2E  A4D8               	btfss	status,2,c
  6615  004C30  EF1C  F026         	goto	u4041
  6616  004C34  EF1E  F026         	goto	u4040
  6617  004C38                     u4041:
  6618  004C38  EF26  F026         	goto	l4324
  6619  004C3C                     u4040:
  6620  004C3C  0E00               	movlw	0
  6621  004C3E  6E05               	movwf	___flge@ff2^0,c
  6622  004C40  0E00               	movlw	0
  6623  004C42  6E06               	movwf	(___flge@ff2+1)^0,c
  6624  004C44  0E00               	movlw	0
  6625  004C46  6E07               	movwf	(___flge@ff2+2)^0,c
  6626  004C48  0E00               	movlw	0
  6627  004C4A  6E08               	movwf	(___flge@ff2+3)^0,c
  6628  004C4C                     l4324:
  6629  004C4C  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6630  004C4E  EF2B  F026         	goto	u4051
  6631  004C52  EF2D  F026         	goto	u4050
  6632  004C56                     u4051:
  6633  004C56  EF36  F026         	goto	l4328
  6634  004C5A                     u4050:
  6635  004C5A  6C01               	negf	___flge@ff1^0,c
  6636  004C5C  1E02               	comf	(___flge@ff1+1)^0,f,c
  6637  004C5E  B0D8               	btfsc	status,0,c
  6638  004C60  2A02               	incf	(___flge@ff1+1)^0,f,c
  6639  004C62  1E03               	comf	(___flge@ff1+2)^0,f,c
  6640  004C64  B0D8               	btfsc	status,0,c
  6641  004C66  2A03               	incf	(___flge@ff1+2)^0,f,c
  6642  004C68  0E80               	movlw	128
  6643  004C6A  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6644  004C6C                     l4328:
  6645  004C6C  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6646  004C6E  EF3B  F026         	goto	u4061
  6647  004C72  EF3D  F026         	goto	u4060
  6648  004C76                     u4061:
  6649  004C76  EF46  F026         	goto	l1039
  6650  004C7A                     u4060:
  6651  004C7A  6C05               	negf	___flge@ff2^0,c
  6652  004C7C  1E06               	comf	(___flge@ff2+1)^0,f,c
  6653  004C7E  B0D8               	btfsc	status,0,c
  6654  004C80  2A06               	incf	(___flge@ff2+1)^0,f,c
  6655  004C82  1E07               	comf	(___flge@ff2+2)^0,f,c
  6656  004C84  B0D8               	btfsc	status,0,c
  6657  004C86  2A07               	incf	(___flge@ff2+2)^0,f,c
  6658  004C88  0E80               	movlw	128
  6659  004C8A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6660  004C8C                     l1039:
  6661  004C8C  0E00               	movlw	0
  6662  004C8E  1A01               	xorwf	___flge@ff1^0,f,c
  6663  004C90  0E00               	movlw	0
  6664  004C92  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6665  004C94  0E00               	movlw	0
  6666  004C96  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6667  004C98  0E80               	movlw	128
  6668  004C9A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6669  004C9C  0E00               	movlw	0
  6670  004C9E  1A05               	xorwf	___flge@ff2^0,f,c
  6671  004CA0  0E00               	movlw	0
  6672  004CA2  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6673  004CA4  0E00               	movlw	0
  6674  004CA6  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6675  004CA8  0E80               	movlw	128
  6676  004CAA  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6677  004CAC  5005               	movf	___flge@ff2^0,w,c
  6678  004CAE  5C01               	subwf	___flge@ff1^0,w,c
  6679  004CB0  5006               	movf	(___flge@ff2+1)^0,w,c
  6680  004CB2  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6681  004CB4  5007               	movf	(___flge@ff2+2)^0,w,c
  6682  004CB6  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6683  004CB8  5008               	movf	(___flge@ff2+3)^0,w,c
  6684  004CBA  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6685  004CBC  B0D8               	btfsc	status,0,c
  6686  004CBE  EF63  F026         	goto	u4071
  6687  004CC2  EF65  F026         	goto	u4070
  6688  004CC6                     u4071:
  6689  004CC6  EF68  F026         	goto	l4334
  6690  004CCA                     u4070:
  6691  004CCA  90D8               	bcf	status,0,c
  6692  004CCC  EF69  F026         	goto	l1044
  6693  004CD0                     l4334:
  6694  004CD0  80D8               	bsf	status,0,c
  6695  004CD2                     l1044:
  6696  004CD2  0012               	return		;funcret
  6697  004CD4                     __end_of___flge:
  6698                           	callstack 0
  6699                           
  6700 ;; *************** function ___fltol *****************
  6701 ;; Defined at:
  6702 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  f1              4   90[COMRAM] unsigned char 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  exp1            1    5[BANK0 ] unsigned char 
  6707 ;;  sign1           1    4[BANK0 ] unsigned char 
  6708 ;; Return value:  Size  Location     Type
  6709 ;;                  4   90[COMRAM] long 
  6710 ;; Registers used:
  6711 ;;		wreg, status,2, status,0
  6712 ;; Tracked objects:
  6713 ;;		On entry : 0/0
  6714 ;;		On exit  : 0/0
  6715 ;;		Unchanged: 0/0
  6716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;Total ram usage:       10 bytes
  6722 ;; Hardware stack levels used: 1
  6723 ;; Hardware stack levels required when called: 1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_lroundf
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text25
  6732  004AC8                     __ptext25:
  6733                           	callstack 0
  6734  004AC8                     ___fltol:
  6735                           	callstack 26
  6736  004AC8  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6737  004ACA  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6738  004ACC  0100               	movlb	0	; () banked
  6739  004ACE  6F65               	movwf	___fltol@exp1& (0+255),b
  6740  004AD0  5165               	movf	___fltol@exp1& (0+255),w,b
  6741  004AD2  A4D8               	btfss	status,2,c
  6742  004AD4  EF6E  F025         	goto	u4131
  6743  004AD8  EF70  F025         	goto	u4130
  6744  004ADC                     u4131:
  6745  004ADC  EF7A  F025         	goto	l4422
  6746  004AE0                     u4130:
  6747  004AE0                     l4418:
  6748                           
  6749                           ; BSR set to: 0
  6750  004AE0  0E00               	movlw	0
  6751  004AE2  6E5B               	movwf	?___fltol^0,c
  6752  004AE4  0E00               	movlw	0
  6753  004AE6  6E5C               	movwf	(?___fltol+1)^0,c
  6754  004AE8  0E00               	movlw	0
  6755  004AEA  6E5D               	movwf	(?___fltol+2)^0,c
  6756  004AEC  0E00               	movlw	0
  6757  004AEE  6E5E               	movwf	(?___fltol+3)^0,c
  6758  004AF0  EFE7  F025         	goto	l1071
  6759  004AF4                     l4422:
  6760                           
  6761                           ; BSR set to: 0
  6762  004AF4  C05B  F060         	movff	___fltol@f1,??___fltol
  6763  004AF8  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6764  004AFC  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6765  004B00  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6766  004B04  0E20               	movlw	32
  6767  004B06  EF8A  F025         	goto	u4140
  6768  004B0A                     u4145:
  6769  004B0A  90D8               	bcf	status,0,c
  6770  004B0C  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6771  004B0E  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6772  004B10  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6773  004B12  3360               	rrcf	??___fltol& (0+255),f,b
  6774  004B14                     u4140:
  6775  004B14  2EE8               	decfsz	wreg,f,c
  6776  004B16  EF85  F025         	goto	u4145
  6777  004B1A  5160               	movf	??___fltol& (0+255),w,b
  6778  004B1C  6F64               	movwf	___fltol@sign1& (0+255),b
  6779  004B1E                     
  6780                           ; BSR set to: 0
  6781  004B1E  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6782  004B20                     
  6783                           ; BSR set to: 0
  6784  004B20  0EFF               	movlw	255
  6785  004B22  165B               	andwf	___fltol@f1^0,f,c
  6786  004B24  0EFF               	movlw	255
  6787  004B26  165C               	andwf	(___fltol@f1+1)^0,f,c
  6788  004B28  0EFF               	movlw	255
  6789  004B2A  165D               	andwf	(___fltol@f1+2)^0,f,c
  6790  004B2C  0E00               	movlw	0
  6791  004B2E  165E               	andwf	(___fltol@f1+3)^0,f,c
  6792  004B30                     
  6793                           ; BSR set to: 0
  6794  004B30  0E96               	movlw	150
  6795  004B32  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6796  004B34                     
  6797                           ; BSR set to: 0
  6798  004B34  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  6799  004B36  EFA1  F025         	goto	u4150
  6800  004B3A  EF9F  F025         	goto	u4151
  6801  004B3E                     u4151:
  6802  004B3E  EFB7  F025         	goto	l4442
  6803  004B42                     u4150:
  6804  004B42                     
  6805                           ; BSR set to: 0
  6806  004B42  5165               	movf	___fltol@exp1& (0+255),w,b
  6807  004B44  0A80               	xorlw	128
  6808  004B46  0F97               	addlw	151
  6809  004B48  B0D8               	btfsc	status,0,c
  6810  004B4A  EFA9  F025         	goto	u4161
  6811  004B4E  EFAB  F025         	goto	u4160
  6812  004B52                     u4161:
  6813  004B52  EFAD  F025         	goto	l4438
  6814  004B56                     u4160:
  6815  004B56  EF70  F025         	goto	l4418
  6816  004B5A                     l4438:
  6817                           
  6818                           ; BSR set to: 0
  6819  004B5A  90D8               	bcf	status,0,c
  6820  004B5C  325E               	rrcf	(___fltol@f1+3)^0,f,c
  6821  004B5E  325D               	rrcf	(___fltol@f1+2)^0,f,c
  6822  004B60  325C               	rrcf	(___fltol@f1+1)^0,f,c
  6823  004B62  325B               	rrcf	___fltol@f1^0,f,c
  6824  004B64                     
  6825                           ; BSR set to: 0
  6826  004B64  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6827  004B66  EFAD  F025         	goto	l4438
  6828  004B6A  EFCF  F025         	goto	l4452
  6829  004B6E                     l4442:
  6830                           
  6831                           ; BSR set to: 0
  6832  004B6E  0E1F               	movlw	31
  6833  004B70  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6834  004B72  EFBD  F025         	goto	u4171
  6835  004B76  EFBF  F025         	goto	u4170
  6836  004B7A                     u4171:
  6837  004B7A  EFC7  F025         	goto	l4450
  6838  004B7E                     u4170:
  6839  004B7E  EF70  F025         	goto	l4418
  6840  004B82                     l4448:
  6841                           
  6842                           ; BSR set to: 0
  6843  004B82  90D8               	bcf	status,0,c
  6844  004B84  365B               	rlcf	___fltol@f1^0,f,c
  6845  004B86  365C               	rlcf	(___fltol@f1+1)^0,f,c
  6846  004B88  365D               	rlcf	(___fltol@f1+2)^0,f,c
  6847  004B8A  365E               	rlcf	(___fltol@f1+3)^0,f,c
  6848  004B8C  0765               	decf	___fltol@exp1& (0+255),f,b
  6849  004B8E                     l4450:
  6850                           
  6851                           ; BSR set to: 0
  6852  004B8E  5165               	movf	___fltol@exp1& (0+255),w,b
  6853  004B90  A4D8               	btfss	status,2,c
  6854  004B92  EFCD  F025         	goto	u4181
  6855  004B96  EFCF  F025         	goto	u4180
  6856  004B9A                     u4181:
  6857  004B9A  EFC1  F025         	goto	l4448
  6858  004B9E                     u4180:
  6859  004B9E                     l4452:
  6860                           
  6861                           ; BSR set to: 0
  6862  004B9E  5164               	movf	___fltol@sign1& (0+255),w,b
  6863  004BA0  B4D8               	btfsc	status,2,c
  6864  004BA2  EFD5  F025         	goto	u4191
  6865  004BA6  EFD7  F025         	goto	u4190
  6866  004BAA                     u4191:
  6867  004BAA  EFDF  F025         	goto	l4456
  6868  004BAE                     u4190:
  6869  004BAE                     
  6870                           ; BSR set to: 0
  6871  004BAE  1E5E               	comf	(___fltol@f1+3)^0,f,c
  6872  004BB0  1E5D               	comf	(___fltol@f1+2)^0,f,c
  6873  004BB2  1E5C               	comf	(___fltol@f1+1)^0,f,c
  6874  004BB4  6C5B               	negf	___fltol@f1^0,c
  6875  004BB6  0E00               	movlw	0
  6876  004BB8  225C               	addwfc	(___fltol@f1+1)^0,f,c
  6877  004BBA  225D               	addwfc	(___fltol@f1+2)^0,f,c
  6878  004BBC  225E               	addwfc	(___fltol@f1+3)^0,f,c
  6879  004BBE                     l4456:
  6880                           
  6881                           ; BSR set to: 0
  6882  004BBE  C05B  F05B         	movff	___fltol@f1,?___fltol
  6883  004BC2  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  6884  004BC6  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  6885  004BCA  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  6886  004BCE                     l1071:
  6887                           
  6888                           ; BSR set to: 0
  6889  004BCE  0012               	return		;funcret
  6890  004BD0                     __end_of___fltol:
  6891                           	callstack 0
  6892                           
  6893 ;; *************** function _color_read_Clear *****************
  6894 ;; Defined at:
  6895 ;;		line 133 in file "color.c"
  6896 ;; Parameters:    Size  Location     Type
  6897 ;;		None
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  tmp             2    9[COMRAM] unsigned int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2    4[COMRAM] unsigned int 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;Total ram usage:        7 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; Hardware stack levels required when called: 3
  6916 ;; This function calls:
  6917 ;;		_I2C_2_Master_Read
  6918 ;;		_I2C_2_Master_RepStart
  6919 ;;		_I2C_2_Master_Start
  6920 ;;		_I2C_2_Master_Stop
  6921 ;;		_I2C_2_Master_Write
  6922 ;; This function is called by:
  6923 ;;		_read_color
  6924 ;;		_calibrate_white
  6925 ;;		_amb_light_measure
  6926 ;;		_distance_measure
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text26
  6931  00564C                     __ptext26:
  6932                           	callstack 0
  6933  00564C                     _color_read_Clear:
  6934                           	callstack 24
  6935  00564C                     
  6936                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  6937  00564C  EC2C  F02E         	call	_I2C_2_Master_Start	;wreg free
  6938                           
  6939                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  6940  005650  0E52               	movlw	82
  6941  005652  EC16  F02E         	call	_I2C_2_Master_Write
  6942                           
  6943                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  6944  005656  0EB4               	movlw	180
  6945  005658  EC16  F02E         	call	_I2C_2_Master_Write
  6946                           
  6947                           ;color.c: 139:  I2C_2_Master_RepStart();
  6948  00565C  EC22  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6949                           
  6950                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  6951  005660  0E53               	movlw	83
  6952  005662  EC16  F02E         	call	_I2C_2_Master_Write
  6953                           
  6954                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  6955  005666  0E01               	movlw	1
  6956  005668  ECB7  F02B         	call	_I2C_2_Master_Read
  6957  00566C  6E07               	movwf	??_color_read_Clear^0,c
  6958  00566E  5007               	movf	??_color_read_Clear^0,w,c
  6959  005670  6E0A               	movwf	color_read_Clear@tmp^0,c
  6960  005672  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6961                           
  6962                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6963  005674  0E00               	movlw	0
  6964  005676  ECB7  F02B         	call	_I2C_2_Master_Read
  6965  00567A  6E07               	movwf	??_color_read_Clear^0,c
  6966  00567C  5007               	movf	??_color_read_Clear^0,w,c
  6967  00567E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6968  005680  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6969  005682  500A               	movf	color_read_Clear@tmp^0,w,c
  6970  005684  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6971  005686  6E0A               	movwf	color_read_Clear@tmp^0,c
  6972  005688  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6973  00568A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6974  00568C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6975                           
  6976                           ;color.c: 143:  I2C_2_Master_Stop();
  6977  00568E  EC27  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6978  005692                     
  6979                           ;color.c: 144:  return tmp;
  6980  005692  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6981  005696  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6982  00569A  0012               	return		;funcret
  6983  00569C                     __end_of_color_read_Clear:
  6984                           	callstack 0
  6985                           
  6986 ;; *************** function _I2C_2_Master_RepStart *****************
  6987 ;; Defined at:
  6988 ;;		line 33 in file "i2c.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;		None
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;		None
  6993 ;; Return value:  Size  Location     Type
  6994 ;;                  1    wreg      void 
  6995 ;; Registers used:
  6996 ;;		wreg, status,2, status,0, cstack
  6997 ;; Tracked objects:
  6998 ;;		On entry : 0/0
  6999 ;;		On exit  : 0/0
  7000 ;;		Unchanged: 0/0
  7001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7006 ;;Total ram usage:        0 bytes
  7007 ;; Hardware stack levels used: 1
  7008 ;; Hardware stack levels required when called: 2
  7009 ;; This function calls:
  7010 ;;		_I2C_2_Master_Idle
  7011 ;; This function is called by:
  7012 ;;		_color_read_Red
  7013 ;;		_color_read_Blue
  7014 ;;		_color_read_Green
  7015 ;;		_color_read_Clear
  7016 ;; This function uses a non-reentrant model
  7017 ;;
  7018                           
  7019                           	psect	text27
  7020  005C44                     __ptext27:
  7021                           	callstack 0
  7022  005C44                     _I2C_2_Master_RepStart:
  7023                           	callstack 24
  7024  005C44                     
  7025                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7026  005C44  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7027  005C48                     
  7028                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7029  005C48  010E               	movlb	14	; () banked
  7030  005C4A  83DA               	bsf	218,1,b	;volatile
  7031  005C4C                     
  7032                           ; BSR set to: 14
  7033  005C4C  0012               	return		;funcret
  7034  005C4E                     __end_of_I2C_2_Master_RepStart:
  7035                           	callstack 0
  7036                           
  7037 ;; *************** function _I2C_2_Master_Read *****************
  7038 ;; Defined at:
  7039 ;;		line 51 in file "i2c.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  ack             1    wreg     unsigned char 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  ack             1    2[COMRAM] unsigned char 
  7044 ;;  tmp             1    3[COMRAM] unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      unsigned char 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2, status,0, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;Total ram usage:        3 bytes
  7059 ;; Hardware stack levels used: 1
  7060 ;; Hardware stack levels required when called: 2
  7061 ;; This function calls:
  7062 ;;		_I2C_2_Master_Idle
  7063 ;; This function is called by:
  7064 ;;		_color_read_Red
  7065 ;;		_color_read_Blue
  7066 ;;		_color_read_Green
  7067 ;;		_color_read_Clear
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text28
  7072  00576E                     __ptext28:
  7073                           	callstack 0
  7074  00576E                     _I2C_2_Master_Read:
  7075                           	callstack 24
  7076                           
  7077                           ; BSR set to: 14
  7078                           ;incstack = 0
  7079                           ;I2C_2_Master_Read@ack stored from wreg
  7080  00576E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7081  005770                     
  7082                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7083  005770  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7084  005774                     
  7085                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7086  005774  010E               	movlb	14	; () banked
  7087  005776  87DA               	bsf	218,3,b	;volatile
  7088                           
  7089                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7090  005778  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7091  00577C                     
  7092                           ;i2c.c: 57:   tmp = SSP2BUF;
  7093  00577C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7094                           
  7095                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7096  005780  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  7097  005784                     
  7098                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7099  005784  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7100  005786  B4D8               	btfsc	status,2,c
  7101  005788  EFC8  F02B         	goto	u3771
  7102  00578C  EFCC  F02B         	goto	u3770
  7103  005790                     u3771:
  7104  005790  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7105  005792  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7106  005794  EFCD  F02B         	goto	u3788
  7107  005798                     u3770:
  7108  005798  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7109  00579A                     u3788:
  7110  00579A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7111  00579C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7112  00579E  010E               	movlb	14	; () banked
  7113  0057A0  51DA               	movf	218,w,b	;volatile
  7114  0057A2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7115  0057A4  0BDF               	andlw	-33
  7116  0057A6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7117  0057A8  6FDA               	movwf	218,b	;volatile
  7118  0057AA                     
  7119                           ; BSR set to: 14
  7120                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7121  0057AA  89DA               	bsf	218,4,b	;volatile
  7122  0057AC                     
  7123                           ; BSR set to: 14
  7124                           ;i2c.c: 61:   return tmp;
  7125  0057AC  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7126  0057AE                     
  7127                           ; BSR set to: 14
  7128  0057AE  0012               	return		;funcret
  7129  0057B0                     __end_of_I2C_2_Master_Read:
  7130                           	callstack 0
  7131                           
  7132 ;; *************** function ___xxtofl *****************
  7133 ;; Defined at:
  7134 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7135 ;; Parameters:    Size  Location     Type
  7136 ;;  sign            1    wreg     unsigned char 
  7137 ;;  val             4    0[COMRAM] long 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  sign            1    8[COMRAM] unsigned char 
  7140 ;;  arg             4   10[COMRAM] unsigned long 
  7141 ;;  exp             1    9[COMRAM] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  4    0[COMRAM] unsigned char 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;Total ram usage:       14 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 1
  7158 ;; This function calls:
  7159 ;;		Nothing
  7160 ;; This function is called by:
  7161 ;;		_detect_color
  7162 ;;		_amb_light_measure
  7163 ;;		_distance_measure
  7164 ;;		_check_color_reading
  7165 ;; This function uses a non-reentrant model
  7166 ;;
  7167                           
  7168                           	psect	text29
  7169  003EA6                     __ptext29:
  7170                           	callstack 0
  7171  003EA6                     ___xxtofl:
  7172                           	callstack 27
  7173                           
  7174                           ; BSR set to: 14
  7175                           ;incstack = 0
  7176                           ;___xxtofl@sign stored from wreg
  7177  003EA6  6E09               	movwf	___xxtofl@sign^0,c
  7178  003EA8  5009               	movf	___xxtofl@sign^0,w,c
  7179  003EAA  B4D8               	btfsc	status,2,c
  7180  003EAC  EF5A  F01F         	goto	u4961
  7181  003EB0  EF5C  F01F         	goto	u4960
  7182  003EB4                     u4961:
  7183  003EB4  EF7E  F01F         	goto	l1429
  7184  003EB8                     u4960:
  7185  003EB8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7186  003EBA  EF63  F01F         	goto	u4970
  7187  003EBE  EF61  F01F         	goto	u4971
  7188  003EC2                     u4971:
  7189  003EC2  EF7E  F01F         	goto	l1429
  7190  003EC6                     u4970:
  7191  003EC6  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7192  003ECA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7193  003ECE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7194  003ED2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7195  003ED6  1E05               	comf	??___xxtofl^0,f,c
  7196  003ED8  1E06               	comf	(??___xxtofl+1)^0,f,c
  7197  003EDA  1E07               	comf	(??___xxtofl+2)^0,f,c
  7198  003EDC  1E08               	comf	(??___xxtofl+3)^0,f,c
  7199  003EDE  2A05               	incf	??___xxtofl^0,f,c
  7200  003EE0  0E00               	movlw	0
  7201  003EE2  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7202  003EE4  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7203  003EE6  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7204  003EE8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7205  003EEC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7206  003EF0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7207  003EF4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7208  003EF8  EF86  F01F         	goto	l4834
  7209  003EFC                     l1429:
  7210  003EFC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7211  003F00  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7212  003F04  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7213  003F08  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7214  003F0C                     l4834:
  7215  003F0C  5001               	movf	___xxtofl@val^0,w,c
  7216  003F0E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7217  003F10  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7218  003F12  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7219  003F14  A4D8               	btfss	status,2,c
  7220  003F16  EF8F  F01F         	goto	u4981
  7221  003F1A  EF91  F01F         	goto	u4980
  7222  003F1E                     u4981:
  7223  003F1E  EF9B  F01F         	goto	l4840
  7224  003F22                     u4980:
  7225  003F22  0E00               	movlw	0
  7226  003F24  6E01               	movwf	?___xxtofl^0,c
  7227  003F26  0E00               	movlw	0
  7228  003F28  6E02               	movwf	(?___xxtofl+1)^0,c
  7229  003F2A  0E00               	movlw	0
  7230  003F2C  6E03               	movwf	(?___xxtofl+2)^0,c
  7231  003F2E  0E00               	movlw	0
  7232  003F30  6E04               	movwf	(?___xxtofl+3)^0,c
  7233  003F32  EF2C  F020         	goto	l1432
  7234  003F36                     l4840:
  7235  003F36  0E96               	movlw	150
  7236  003F38  6E0A               	movwf	___xxtofl@exp^0,c
  7237  003F3A  EFA5  F01F         	goto	l4844
  7238  003F3E                     l4842:
  7239  003F3E  2A0A               	incf	___xxtofl@exp^0,f,c
  7240  003F40  90D8               	bcf	status,0,c
  7241  003F42  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7242  003F44  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7243  003F46  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7244  003F48  320B               	rrcf	___xxtofl@arg^0,f,c
  7245  003F4A                     l4844:
  7246  003F4A  0E00               	movlw	0
  7247  003F4C  140B               	andwf	___xxtofl@arg^0,w,c
  7248  003F4E  6E05               	movwf	??___xxtofl^0,c
  7249  003F50  0E00               	movlw	0
  7250  003F52  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7251  003F54  6E06               	movwf	(??___xxtofl+1)^0,c
  7252  003F56  0E00               	movlw	0
  7253  003F58  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7254  003F5A  6E07               	movwf	(??___xxtofl+2)^0,c
  7255  003F5C  0EFE               	movlw	254
  7256  003F5E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7257  003F60  6E08               	movwf	(??___xxtofl+3)^0,c
  7258  003F62  5005               	movf	??___xxtofl^0,w,c
  7259  003F64  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7260  003F66  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7261  003F68  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7262  003F6A  A4D8               	btfss	status,2,c
  7263  003F6C  EFBA  F01F         	goto	u4991
  7264  003F70  EFBC  F01F         	goto	u4990
  7265  003F74                     u4991:
  7266  003F74  EF9F  F01F         	goto	l4842
  7267  003F78                     u4990:
  7268  003F78  EFCA  F01F         	goto	l1436
  7269  003F7C                     l4846:
  7270  003F7C  2A0A               	incf	___xxtofl@exp^0,f,c
  7271  003F7E  0E01               	movlw	1
  7272  003F80  260B               	addwf	___xxtofl@arg^0,f,c
  7273  003F82  0E00               	movlw	0
  7274  003F84  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7275  003F86  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7276  003F88  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7277  003F8A  90D8               	bcf	status,0,c
  7278  003F8C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7279  003F8E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7280  003F90  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7281  003F92  320B               	rrcf	___xxtofl@arg^0,f,c
  7282  003F94                     l1436:
  7283  003F94  0E00               	movlw	0
  7284  003F96  140B               	andwf	___xxtofl@arg^0,w,c
  7285  003F98  6E05               	movwf	??___xxtofl^0,c
  7286  003F9A  0E00               	movlw	0
  7287  003F9C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7288  003F9E  6E06               	movwf	(??___xxtofl+1)^0,c
  7289  003FA0  0E00               	movlw	0
  7290  003FA2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7291  003FA4  6E07               	movwf	(??___xxtofl+2)^0,c
  7292  003FA6  0EFF               	movlw	255
  7293  003FA8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7294  003FAA  6E08               	movwf	(??___xxtofl+3)^0,c
  7295  003FAC  5005               	movf	??___xxtofl^0,w,c
  7296  003FAE  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7297  003FB0  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7298  003FB2  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7299  003FB4  A4D8               	btfss	status,2,c
  7300  003FB6  EFDF  F01F         	goto	u5001
  7301  003FBA  EFE1  F01F         	goto	u5000
  7302  003FBE                     u5001:
  7303  003FBE  EFBE  F01F         	goto	l4846
  7304  003FC2                     u5000:
  7305  003FC2  EFE9  F01F         	goto	l4854
  7306  003FC6                     l4852:
  7307  003FC6  060A               	decf	___xxtofl@exp^0,f,c
  7308  003FC8  90D8               	bcf	status,0,c
  7309  003FCA  360B               	rlcf	___xxtofl@arg^0,f,c
  7310  003FCC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7311  003FCE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7312  003FD0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7313  003FD2                     l4854:
  7314  003FD2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7315  003FD4  EFEE  F01F         	goto	u5011
  7316  003FD8  EFF0  F01F         	goto	u5010
  7317  003FDC                     u5011:
  7318  003FDC  EFF8  F01F         	goto	l1443
  7319  003FE0                     u5010:
  7320  003FE0  0E02               	movlw	2
  7321  003FE2  600A               	cpfslt	___xxtofl@exp^0,c
  7322  003FE4  EFF6  F01F         	goto	u5021
  7323  003FE8  EFF8  F01F         	goto	u5020
  7324  003FEC                     u5021:
  7325  003FEC  EFE3  F01F         	goto	l4852
  7326  003FF0                     u5020:
  7327  003FF0                     l1443:
  7328  003FF0  B00A               	btfsc	___xxtofl@exp^0,0,c
  7329  003FF2  EFFD  F01F         	goto	u5031
  7330  003FF6  EFFF  F01F         	goto	u5030
  7331  003FFA                     u5031:
  7332  003FFA  EF00  F020         	goto	l4860
  7333  003FFE                     u5030:
  7334  003FFE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7335  004000                     l4860:
  7336  004000  90D8               	bcf	status,0,c
  7337  004002  320A               	rrcf	___xxtofl@exp^0,f,c
  7338  004004  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7339  004008  6A06               	clrf	(??___xxtofl+1)^0,c
  7340  00400A  6A07               	clrf	(??___xxtofl+2)^0,c
  7341  00400C  6A08               	clrf	(??___xxtofl+3)^0,c
  7342  00400E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7343  004012  6A07               	clrf	(??___xxtofl+2)^0,c
  7344  004014  6A06               	clrf	(??___xxtofl+1)^0,c
  7345  004016  6A05               	clrf	??___xxtofl^0,c
  7346  004018  5005               	movf	??___xxtofl^0,w,c
  7347  00401A  120B               	iorwf	___xxtofl@arg^0,f,c
  7348  00401C  5006               	movf	(??___xxtofl+1)^0,w,c
  7349  00401E  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7350  004020  5007               	movf	(??___xxtofl+2)^0,w,c
  7351  004022  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7352  004024  5008               	movf	(??___xxtofl+3)^0,w,c
  7353  004026  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7354  004028  5009               	movf	___xxtofl@sign^0,w,c
  7355  00402A  B4D8               	btfsc	status,2,c
  7356  00402C  EF1A  F020         	goto	u5041
  7357  004030  EF1C  F020         	goto	u5040
  7358  004034                     u5041:
  7359  004034  EF24  F020         	goto	l4870
  7360  004038                     u5040:
  7361  004038  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7362  00403A  EF23  F020         	goto	u5050
  7363  00403E  EF21  F020         	goto	u5051
  7364  004042                     u5051:
  7365  004042  EF24  F020         	goto	l4870
  7366  004046                     u5050:
  7367  004046  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7368  004048                     l4870:
  7369  004048  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7370  00404C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7371  004050  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7372  004054  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7373  004058                     l1432:
  7374  004058  0012               	return		;funcret
  7375  00405A                     __end_of___xxtofl:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function ___fldiv *****************
  7379 ;; Defined at:
  7380 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  b               4   14[COMRAM] unsigned char 
  7383 ;;  a               4   18[COMRAM] unsigned char 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  grs             4   33[COMRAM] unsigned long 
  7386 ;;  rem             4   26[COMRAM] unsigned long 
  7387 ;;  new_exp         2   31[COMRAM] short 
  7388 ;;  aexp            1   38[COMRAM] unsigned char 
  7389 ;;  bexp            1   37[COMRAM] unsigned char 
  7390 ;;  sign            1   30[COMRAM] unsigned char 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  4   14[COMRAM] unsigned char 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7400 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;Total ram usage:       25 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 1
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_detect_color
  7411 ;;		_amb_light_measure
  7412 ;;		_check_color_reading
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text30
  7417  002868                     __ptext30:
  7418                           	callstack 0
  7419  002868                     ___fldiv:
  7420                           	callstack 27
  7421  002868  5012               	movf	(___fldiv@b+3)^0,w,c
  7422  00286A  0B80               	andlw	128
  7423  00286C  6E1F               	movwf	___fldiv@sign^0,c
  7424  00286E  5012               	movf	(___fldiv@b+3)^0,w,c
  7425  002870  2412               	addwf	(___fldiv@b+3)^0,w,c
  7426  002872  6E26               	movwf	___fldiv@bexp^0,c
  7427  002874  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7428  002876  EF3F  F014         	goto	u4731
  7429  00287A  EF41  F014         	goto	u4730
  7430  00287E                     u4731:
  7431  00287E  EF42  F014         	goto	l4696
  7432  002882                     u4730:
  7433  002882  8026               	bsf	___fldiv@bexp^0,0,c
  7434  002884                     l4696:
  7435  002884  5026               	movf	___fldiv@bexp^0,w,c
  7436  002886  B4D8               	btfsc	status,2,c
  7437  002888  EF48  F014         	goto	u4741
  7438  00288C  EF4A  F014         	goto	u4740
  7439  002890                     u4741:
  7440  002890  EF5F  F014         	goto	l4706
  7441  002894                     u4740:
  7442  002894  2826               	incf	___fldiv@bexp^0,w,c
  7443  002896  A4D8               	btfss	status,2,c
  7444  002898  EF50  F014         	goto	u4751
  7445  00289C  EF52  F014         	goto	u4750
  7446  0028A0                     u4751:
  7447  0028A0  EF5A  F014         	goto	l4702
  7448  0028A4                     u4750:
  7449  0028A4  0E00               	movlw	0
  7450  0028A6  6E0F               	movwf	___fldiv@b^0,c
  7451  0028A8  0E00               	movlw	0
  7452  0028AA  6E10               	movwf	(___fldiv@b+1)^0,c
  7453  0028AC  0E00               	movlw	0
  7454  0028AE  6E11               	movwf	(___fldiv@b+2)^0,c
  7455  0028B0  0E00               	movlw	0
  7456  0028B2  6E12               	movwf	(___fldiv@b+3)^0,c
  7457  0028B4                     l4702:
  7458  0028B4  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7459  0028B6  0E00               	movlw	0
  7460  0028B8  6E12               	movwf	(___fldiv@b+3)^0,c
  7461  0028BA  EF67  F014         	goto	l4708
  7462  0028BE                     l4706:
  7463  0028BE  0E00               	movlw	0
  7464  0028C0  6E0F               	movwf	___fldiv@b^0,c
  7465  0028C2  0E00               	movlw	0
  7466  0028C4  6E10               	movwf	(___fldiv@b+1)^0,c
  7467  0028C6  0E00               	movlw	0
  7468  0028C8  6E11               	movwf	(___fldiv@b+2)^0,c
  7469  0028CA  0E00               	movlw	0
  7470  0028CC  6E12               	movwf	(___fldiv@b+3)^0,c
  7471  0028CE                     l4708:
  7472  0028CE  5016               	movf	(___fldiv@a+3)^0,w,c
  7473  0028D0  0B80               	andlw	128
  7474  0028D2  1A1F               	xorwf	___fldiv@sign^0,f,c
  7475  0028D4  5016               	movf	(___fldiv@a+3)^0,w,c
  7476  0028D6  2416               	addwf	(___fldiv@a+3)^0,w,c
  7477  0028D8  6E27               	movwf	___fldiv@aexp^0,c
  7478  0028DA  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7479  0028DC  EF72  F014         	goto	u4761
  7480  0028E0  EF74  F014         	goto	u4760
  7481  0028E4                     u4761:
  7482  0028E4  EF75  F014         	goto	l4716
  7483  0028E8                     u4760:
  7484  0028E8  8027               	bsf	___fldiv@aexp^0,0,c
  7485  0028EA                     l4716:
  7486  0028EA  5027               	movf	___fldiv@aexp^0,w,c
  7487  0028EC  B4D8               	btfsc	status,2,c
  7488  0028EE  EF7B  F014         	goto	u4771
  7489  0028F2  EF7D  F014         	goto	u4770
  7490  0028F6                     u4771:
  7491  0028F6  EF92  F014         	goto	l4726
  7492  0028FA                     u4770:
  7493  0028FA  2827               	incf	___fldiv@aexp^0,w,c
  7494  0028FC  A4D8               	btfss	status,2,c
  7495  0028FE  EF83  F014         	goto	u4781
  7496  002902  EF85  F014         	goto	u4780
  7497  002906                     u4781:
  7498  002906  EF8D  F014         	goto	l4722
  7499  00290A                     u4780:
  7500  00290A  0E00               	movlw	0
  7501  00290C  6E13               	movwf	___fldiv@a^0,c
  7502  00290E  0E00               	movlw	0
  7503  002910  6E14               	movwf	(___fldiv@a+1)^0,c
  7504  002912  0E00               	movlw	0
  7505  002914  6E15               	movwf	(___fldiv@a+2)^0,c
  7506  002916  0E00               	movlw	0
  7507  002918  6E16               	movwf	(___fldiv@a+3)^0,c
  7508  00291A                     l4722:
  7509  00291A  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7510  00291C  0E00               	movlw	0
  7511  00291E  6E16               	movwf	(___fldiv@a+3)^0,c
  7512  002920  EF9A  F014         	goto	l4728
  7513  002924                     l4726:
  7514  002924  0E00               	movlw	0
  7515  002926  6E13               	movwf	___fldiv@a^0,c
  7516  002928  0E00               	movlw	0
  7517  00292A  6E14               	movwf	(___fldiv@a+1)^0,c
  7518  00292C  0E00               	movlw	0
  7519  00292E  6E15               	movwf	(___fldiv@a+2)^0,c
  7520  002930  0E00               	movlw	0
  7521  002932  6E16               	movwf	(___fldiv@a+3)^0,c
  7522  002934                     l4728:
  7523  002934  5013               	movf	___fldiv@a^0,w,c
  7524  002936  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7525  002938  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7526  00293A  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7527  00293C  A4D8               	btfss	status,2,c
  7528  00293E  EFA3  F014         	goto	u4791
  7529  002942  EFA5  F014         	goto	u4790
  7530  002946                     u4791:
  7531  002946  EFBD  F014         	goto	l4740
  7532  00294A                     u4790:
  7533  00294A  0E00               	movlw	0
  7534  00294C  6E0F               	movwf	___fldiv@b^0,c
  7535  00294E  0E00               	movlw	0
  7536  002950  6E10               	movwf	(___fldiv@b+1)^0,c
  7537  002952  0E00               	movlw	0
  7538  002954  6E11               	movwf	(___fldiv@b+2)^0,c
  7539  002956  0E00               	movlw	0
  7540  002958  6E12               	movwf	(___fldiv@b+3)^0,c
  7541  00295A  0E80               	movlw	128
  7542  00295C  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7543  00295E  0E7F               	movlw	127
  7544  002960  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7545  002962                     l4734:
  7546  002962  501F               	movf	___fldiv@sign^0,w,c
  7547  002964  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7548  002966  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7549  00296A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7550  00296E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7551  002972  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7552  002976  EF00  F016         	goto	l1356
  7553  00297A                     l4740:
  7554  00297A  5026               	movf	___fldiv@bexp^0,w,c
  7555  00297C  A4D8               	btfss	status,2,c
  7556  00297E  EFC3  F014         	goto	u4801
  7557  002982  EFC5  F014         	goto	u4800
  7558  002986                     u4801:
  7559  002986  EFCF  F014         	goto	l4748
  7560  00298A                     u4800:
  7561  00298A  0E00               	movlw	0
  7562  00298C  6E0F               	movwf	?___fldiv^0,c
  7563  00298E  0E00               	movlw	0
  7564  002990  6E10               	movwf	(?___fldiv+1)^0,c
  7565  002992  0E00               	movlw	0
  7566  002994  6E11               	movwf	(?___fldiv+2)^0,c
  7567  002996  0E00               	movlw	0
  7568  002998  6E12               	movwf	(?___fldiv+3)^0,c
  7569  00299A  EF00  F016         	goto	l1356
  7570  00299E                     l4748:
  7571  00299E  5027               	movf	___fldiv@aexp^0,w,c
  7572  0029A0  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7573  0029A4  6A18               	clrf	(??___fldiv+1)^0,c
  7574  0029A6  5E17               	subwf	??___fldiv^0,f,c
  7575  0029A8  0E00               	movlw	0
  7576  0029AA  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7577  0029AC  0E7F               	movlw	127
  7578  0029AE  2417               	addwf	??___fldiv^0,w,c
  7579  0029B0  6E20               	movwf	___fldiv@new_exp^0,c
  7580  0029B2  0E00               	movlw	0
  7581  0029B4  2018               	addwfc	(??___fldiv+1)^0,w,c
  7582  0029B6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7583  0029B8  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7584  0029BC  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7585  0029C0  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7586  0029C4  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7587  0029C8  0E00               	movlw	0
  7588  0029CA  6E0F               	movwf	___fldiv@b^0,c
  7589  0029CC  0E00               	movlw	0
  7590  0029CE  6E10               	movwf	(___fldiv@b+1)^0,c
  7591  0029D0  0E00               	movlw	0
  7592  0029D2  6E11               	movwf	(___fldiv@b+2)^0,c
  7593  0029D4  0E00               	movlw	0
  7594  0029D6  6E12               	movwf	(___fldiv@b+3)^0,c
  7595  0029D8  0E00               	movlw	0
  7596  0029DA  6E22               	movwf	___fldiv@grs^0,c
  7597  0029DC  0E00               	movlw	0
  7598  0029DE  6E23               	movwf	(___fldiv@grs+1)^0,c
  7599  0029E0  0E00               	movlw	0
  7600  0029E2  6E24               	movwf	(___fldiv@grs+2)^0,c
  7601  0029E4  0E00               	movlw	0
  7602  0029E6  6E25               	movwf	(___fldiv@grs+3)^0,c
  7603  0029E8  0E00               	movlw	0
  7604  0029EA  6E27               	movwf	___fldiv@aexp^0,c
  7605  0029EC  EF30  F015         	goto	l1358
  7606  0029F0                     l4758:
  7607  0029F0  5027               	movf	___fldiv@aexp^0,w,c
  7608  0029F2  B4D8               	btfsc	status,2,c
  7609  0029F4  EFFE  F014         	goto	u4811
  7610  0029F8  EF00  F015         	goto	u4810
  7611  0029FC                     u4811:
  7612  0029FC  EF17  F015         	goto	l4766
  7613  002A00                     u4810:
  7614  002A00  90D8               	bcf	status,0,c
  7615  002A02  361B               	rlcf	___fldiv@rem^0,f,c
  7616  002A04  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7617  002A06  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7618  002A08  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7619  002A0A  90D8               	bcf	status,0,c
  7620  002A0C  360F               	rlcf	___fldiv@b^0,f,c
  7621  002A0E  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7622  002A10  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7623  002A12  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7624  002A14  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7625  002A16  EF0F  F015         	goto	u4821
  7626  002A1A  EF11  F015         	goto	u4820
  7627  002A1E                     u4821:
  7628  002A1E  EF12  F015         	goto	l1361
  7629  002A22                     u4820:
  7630  002A22  800F               	bsf	___fldiv@b^0,0,c
  7631  002A24                     l1361:
  7632  002A24  90D8               	bcf	status,0,c
  7633  002A26  3622               	rlcf	___fldiv@grs^0,f,c
  7634  002A28  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7635  002A2A  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7636  002A2C  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7637  002A2E                     l4766:
  7638  002A2E  5013               	movf	___fldiv@a^0,w,c
  7639  002A30  5C1B               	subwf	___fldiv@rem^0,w,c
  7640  002A32  5014               	movf	(___fldiv@a+1)^0,w,c
  7641  002A34  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7642  002A36  5015               	movf	(___fldiv@a+2)^0,w,c
  7643  002A38  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7644  002A3A  5016               	movf	(___fldiv@a+3)^0,w,c
  7645  002A3C  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7646  002A3E  A0D8               	btfss	status,0,c
  7647  002A40  EF24  F015         	goto	u4831
  7648  002A44  EF26  F015         	goto	u4830
  7649  002A48                     u4831:
  7650  002A48  EF2F  F015         	goto	l4772
  7651  002A4C                     u4830:
  7652  002A4C  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7653  002A4E  5013               	movf	___fldiv@a^0,w,c
  7654  002A50  5E1B               	subwf	___fldiv@rem^0,f,c
  7655  002A52  5014               	movf	(___fldiv@a+1)^0,w,c
  7656  002A54  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7657  002A56  5015               	movf	(___fldiv@a+2)^0,w,c
  7658  002A58  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7659  002A5A  5016               	movf	(___fldiv@a+3)^0,w,c
  7660  002A5C  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7661  002A5E                     l4772:
  7662  002A5E  2A27               	incf	___fldiv@aexp^0,f,c
  7663  002A60                     l1358:
  7664  002A60  0E19               	movlw	25
  7665  002A62  6427               	cpfsgt	___fldiv@aexp^0,c
  7666  002A64  EF36  F015         	goto	u4841
  7667  002A68  EF38  F015         	goto	u4840
  7668  002A6C                     u4841:
  7669  002A6C  EFF8  F014         	goto	l4758
  7670  002A70                     u4840:
  7671  002A70  501B               	movf	___fldiv@rem^0,w,c
  7672  002A72  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7673  002A74  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7674  002A76  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7675  002A78  B4D8               	btfsc	status,2,c
  7676  002A7A  EF41  F015         	goto	u4851
  7677  002A7E  EF43  F015         	goto	u4850
  7678  002A82                     u4851:
  7679  002A82  EF5B  F015         	goto	l4784
  7680  002A86                     u4850:
  7681  002A86  8022               	bsf	___fldiv@grs^0,0,c
  7682  002A88  EF5B  F015         	goto	l4784
  7683  002A8C                     l4778:
  7684  002A8C  90D8               	bcf	status,0,c
  7685  002A8E  360F               	rlcf	___fldiv@b^0,f,c
  7686  002A90  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7687  002A92  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7688  002A94  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7689  002A96  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7690  002A98  EF50  F015         	goto	u4861
  7691  002A9C  EF52  F015         	goto	u4860
  7692  002AA0                     u4861:
  7693  002AA0  EF53  F015         	goto	l1367
  7694  002AA4                     u4860:
  7695  002AA4  800F               	bsf	___fldiv@b^0,0,c
  7696  002AA6                     l1367:
  7697  002AA6  90D8               	bcf	status,0,c
  7698  002AA8  3622               	rlcf	___fldiv@grs^0,f,c
  7699  002AAA  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7700  002AAC  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7701  002AAE  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7702  002AB0  0620               	decf	___fldiv@new_exp^0,f,c
  7703  002AB2  A0D8               	btfss	status,0,c
  7704  002AB4  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7705  002AB6                     l4784:
  7706  002AB6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7707  002AB8  EF60  F015         	goto	u4871
  7708  002ABC  EF62  F015         	goto	u4870
  7709  002AC0                     u4871:
  7710  002AC0  EF46  F015         	goto	l4778
  7711  002AC4                     u4870:
  7712  002AC4  0E00               	movlw	0
  7713  002AC6  6E27               	movwf	___fldiv@aexp^0,c
  7714  002AC8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7715  002ACA  EF69  F015         	goto	u4881
  7716  002ACE  EF6B  F015         	goto	u4880
  7717  002AD2                     u4881:
  7718  002AD2  EF8F  F015         	goto	l1369
  7719  002AD6                     u4880:
  7720  002AD6  0EFF               	movlw	255
  7721  002AD8  1422               	andwf	___fldiv@grs^0,w,c
  7722  002ADA  6E17               	movwf	??___fldiv^0,c
  7723  002ADC  0EFF               	movlw	255
  7724  002ADE  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7725  002AE0  6E18               	movwf	(??___fldiv+1)^0,c
  7726  002AE2  0EFF               	movlw	255
  7727  002AE4  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7728  002AE6  6E19               	movwf	(??___fldiv+2)^0,c
  7729  002AE8  0E7F               	movlw	127
  7730  002AEA  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7731  002AEC  6E1A               	movwf	(??___fldiv+3)^0,c
  7732  002AEE  5017               	movf	??___fldiv^0,w,c
  7733  002AF0  1018               	iorwf	(??___fldiv+1)^0,w,c
  7734  002AF2  1019               	iorwf	(??___fldiv+2)^0,w,c
  7735  002AF4  101A               	iorwf	(??___fldiv+3)^0,w,c
  7736  002AF6  B4D8               	btfsc	status,2,c
  7737  002AF8  EF80  F015         	goto	u4891
  7738  002AFC  EF82  F015         	goto	u4890
  7739  002B00                     u4891:
  7740  002B00  EF86  F015         	goto	l1370
  7741  002B04                     u4890:
  7742  002B04                     l4792:
  7743  002B04  0E01               	movlw	1
  7744  002B06  6E27               	movwf	___fldiv@aexp^0,c
  7745  002B08  EF8F  F015         	goto	l1369
  7746  002B0C                     l1370:
  7747  002B0C  A00F               	btfss	___fldiv@b^0,0,c
  7748  002B0E  EF8B  F015         	goto	u4901
  7749  002B12  EF8D  F015         	goto	u4900
  7750  002B16                     u4901:
  7751  002B16  EF8F  F015         	goto	l1369
  7752  002B1A                     u4900:
  7753  002B1A  EF82  F015         	goto	l4792
  7754  002B1E                     l1369:
  7755  002B1E  5027               	movf	___fldiv@aexp^0,w,c
  7756  002B20  B4D8               	btfsc	status,2,c
  7757  002B22  EF95  F015         	goto	u4911
  7758  002B26  EF97  F015         	goto	u4910
  7759  002B2A                     u4911:
  7760  002B2A  EFBB  F015         	goto	l4804
  7761  002B2E                     u4910:
  7762  002B2E  0E01               	movlw	1
  7763  002B30  260F               	addwf	___fldiv@b^0,f,c
  7764  002B32  0E00               	movlw	0
  7765  002B34  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7766  002B36  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7767  002B38  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7768  002B3A  A012               	btfss	(___fldiv@b+3)^0,0,c
  7769  002B3C  EFA2  F015         	goto	u4921
  7770  002B40  EFA4  F015         	goto	u4920
  7771  002B44                     u4921:
  7772  002B44  EFBB  F015         	goto	l4804
  7773  002B48                     u4920:
  7774  002B48  C00F  F017         	movff	___fldiv@b,??___fldiv
  7775  002B4C  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7776  002B50  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7777  002B54  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7778  002B58  341A               	rlcf	(??___fldiv+3)^0,w,c
  7779  002B5A  321A               	rrcf	(??___fldiv+3)^0,f,c
  7780  002B5C  3219               	rrcf	(??___fldiv+2)^0,f,c
  7781  002B5E  3218               	rrcf	(??___fldiv+1)^0,f,c
  7782  002B60  3217               	rrcf	??___fldiv^0,f,c
  7783  002B62  C017  F00F         	movff	??___fldiv,___fldiv@b
  7784  002B66  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7785  002B6A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7786  002B6E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7787  002B72  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7788  002B74  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7789  002B76                     l4804:
  7790  002B76  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7791  002B78  EFC6  F015         	goto	u4931
  7792  002B7C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7793  002B7E  E108               	bnz	u4930
  7794  002B80  2820               	incf	___fldiv@new_exp^0,w,c
  7795  002B82  A0D8               	btfss	status,0,c
  7796  002B84  EFC6  F015         	goto	u4931
  7797  002B88  EFC8  F015         	goto	u4930
  7798  002B8C                     u4931:
  7799  002B8C  EFD3  F015         	goto	l4808
  7800  002B90                     u4930:
  7801  002B90  0E00               	movlw	0
  7802  002B92  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7803  002B94  6820               	setf	___fldiv@new_exp^0,c
  7804  002B96  0E00               	movlw	0
  7805  002B98  6E0F               	movwf	___fldiv@b^0,c
  7806  002B9A  0E00               	movlw	0
  7807  002B9C  6E10               	movwf	(___fldiv@b+1)^0,c
  7808  002B9E  0E00               	movlw	0
  7809  002BA0  6E11               	movwf	(___fldiv@b+2)^0,c
  7810  002BA2  0E00               	movlw	0
  7811  002BA4  6E12               	movwf	(___fldiv@b+3)^0,c
  7812  002BA6                     l4808:
  7813  002BA6  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7814  002BA8  EFE0  F015         	goto	u4940
  7815  002BAC  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7816  002BAE  E106               	bnz	u4941
  7817  002BB0  0420               	decf	___fldiv@new_exp^0,w,c
  7818  002BB2  B0D8               	btfsc	status,0,c
  7819  002BB4  EFDE  F015         	goto	u4941
  7820  002BB8  EFE0  F015         	goto	u4940
  7821  002BBC                     u4941:
  7822  002BBC  EFEE  F015         	goto	l4812
  7823  002BC0                     u4940:
  7824  002BC0  0E00               	movlw	0
  7825  002BC2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7826  002BC4  0E00               	movlw	0
  7827  002BC6  6E20               	movwf	___fldiv@new_exp^0,c
  7828  002BC8  0E00               	movlw	0
  7829  002BCA  6E0F               	movwf	___fldiv@b^0,c
  7830  002BCC  0E00               	movlw	0
  7831  002BCE  6E10               	movwf	(___fldiv@b+1)^0,c
  7832  002BD0  0E00               	movlw	0
  7833  002BD2  6E11               	movwf	(___fldiv@b+2)^0,c
  7834  002BD4  0E00               	movlw	0
  7835  002BD6  6E12               	movwf	(___fldiv@b+3)^0,c
  7836  002BD8  0E00               	movlw	0
  7837  002BDA  6E1F               	movwf	___fldiv@sign^0,c
  7838  002BDC                     l4812:
  7839  002BDC  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7840  002BE0  A026               	btfss	___fldiv@bexp^0,0,c
  7841  002BE2  EFF5  F015         	goto	u4951
  7842  002BE6  EFF7  F015         	goto	u4950
  7843  002BEA                     u4951:
  7844  002BEA  EFFA  F015         	goto	l4818
  7845  002BEE                     u4950:
  7846  002BEE  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7847  002BF0  EFFB  F015         	goto	l4820
  7848  002BF4                     l4818:
  7849  002BF4  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7850  002BF6                     l4820:
  7851  002BF6  90D8               	bcf	status,0,c
  7852  002BF8  3026               	rrcf	___fldiv@bexp^0,w,c
  7853  002BFA  6E12               	movwf	(___fldiv@b+3)^0,c
  7854  002BFC  EFB1  F014         	goto	l4734
  7855  002C00                     l1356:
  7856  002C00  0012               	return		;funcret
  7857  002C02                     __end_of___fldiv:
  7858                           	callstack 0
  7859                           
  7860 ;; *************** function _LED_C *****************
  7861 ;; Defined at:
  7862 ;;		line 173 in file "color.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;		None
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  1    wreg      void 
  7869 ;; Registers used:
  7870 ;;		wreg
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7880 ;;Total ram usage:        2 bytes
  7881 ;; Hardware stack levels used: 1
  7882 ;; Hardware stack levels required when called: 1
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_color_data_collection
  7887 ;;		_calibrate_white
  7888 ;;		_amb_light_measure
  7889 ;;		_distance_measure
  7890 ;;		_test_function
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text31
  7895  005B62                     __ptext31:
  7896                           	callstack 0
  7897  005B62                     _LED_C:
  7898                           	callstack 27
  7899  005B62                     
  7900                           ;color.c: 175:     LATGbits.LATG1 = 1;
  7901  005B62  827F               	bsf	127,1,c	;volatile
  7902                           
  7903                           ;color.c: 176:     LATFbits.LATF7 = 1;
  7904  005B64  8E7E               	bsf	126,7,c	;volatile
  7905                           
  7906                           ;color.c: 177:     LATAbits.LATA4 = 1;
  7907  005B66  8879               	bsf	121,4,c	;volatile
  7908  005B68                     
  7909                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7910  005B68  0E05               	movlw	5
  7911  005B6A  6E02               	movwf	(??_LED_C+1)^0,c
  7912  005B6C  0E0F               	movlw	15
  7913  005B6E  6E01               	movwf	??_LED_C^0,c
  7914  005B70  0EF1               	movlw	241
  7915  005B72                     u5897:
  7916  005B72  2EE8               	decfsz	wreg,f,c
  7917  005B74  D7FE               	bra	u5897
  7918  005B76  2E01               	decfsz	??_LED_C^0,f,c
  7919  005B78  D7FC               	bra	u5897
  7920  005B7A  2E02               	decfsz	(??_LED_C+1)^0,f,c
  7921  005B7C  D7FA               	bra	u5897
  7922  005B7E  F000               	nop	
  7923  005B80  0012               	return		;funcret
  7924  005B82                     __end_of_LED_C:
  7925                           	callstack 0
  7926                           
  7927 ;; *************** function _test_action *****************
  7928 ;; Defined at:
  7929 ;;		line 75 in file "movement.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  7932 ;;		 -> main@motorL(10), 
  7933 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  7934 ;;		 -> main@motorR(10), 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;Total ram usage:        4 bytes
  7951 ;; Hardware stack levels used: 1
  7952 ;; Hardware stack levels required when called: 5
  7953 ;; This function calls:
  7954 ;;		_fullSpeedAhead_test
  7955 ;;		_turnLeft
  7956 ;;		_turnRight
  7957 ;; This function is called by:
  7958 ;;		_main
  7959 ;;		_calibration
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           	psect	text32
  7964  003B36                     __ptext32:
  7965                           	callstack 0
  7966  003B36                     _test_action:
  7967                           	callstack 25
  7968  003B36                     
  7969                           ;movement.c: 75: void test_action (struct DC_motor *mL, struct DC_motor *mR);movement.c:
      +                           76: { fullSpeedAhead_test(mL,mR);
  7970  003B36  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  7971  003B3A  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  7972  003B3E  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  7973  003B42  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  7974  003B46  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  7975                           
  7976                           ;movement.c: 77:     turnLeft(mL,mR,90);
  7977  003B4A  C032  F020         	movff	test_action@mL,turnLeft@mL
  7978  003B4E  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
  7979  003B52  C034  F022         	movff	test_action@mR,turnLeft@mR
  7980  003B56  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
  7981  003B5A  0E5A               	movlw	90
  7982  003B5C  6E24               	movwf	turnLeft@angle_left^0,c
  7983  003B5E  ECCE  F021         	call	_turnLeft	;wreg free
  7984                           
  7985                           ;movement.c: 78:     fullSpeedAhead_test(mL,mR);
  7986  003B62  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  7987  003B66  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  7988  003B6A  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  7989  003B6E  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  7990  003B72  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  7991                           
  7992                           ;movement.c: 79:     turnLeft(mL,mR,90);
  7993  003B76  C032  F020         	movff	test_action@mL,turnLeft@mL
  7994  003B7A  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
  7995  003B7E  C034  F022         	movff	test_action@mR,turnLeft@mR
  7996  003B82  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
  7997  003B86  0E5A               	movlw	90
  7998  003B88  6E24               	movwf	turnLeft@angle_left^0,c
  7999  003B8A  ECCE  F021         	call	_turnLeft	;wreg free
  8000                           
  8001                           ;movement.c: 80:     fullSpeedAhead_test(mL,mR);
  8002  003B8E  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8003  003B92  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8004  003B96  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8005  003B9A  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8006  003B9E  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8007                           
  8008                           ;movement.c: 81:     turnLeft(mL,mR,180);
  8009  003BA2  C032  F020         	movff	test_action@mL,turnLeft@mL
  8010  003BA6  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
  8011  003BAA  C034  F022         	movff	test_action@mR,turnLeft@mR
  8012  003BAE  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
  8013  003BB2  0EB4               	movlw	180
  8014  003BB4  6E24               	movwf	turnLeft@angle_left^0,c
  8015  003BB6  ECCE  F021         	call	_turnLeft	;wreg free
  8016                           
  8017                           ;movement.c: 82:     fullSpeedAhead_test(mL,mR);
  8018  003BBA  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8019  003BBE  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8020  003BC2  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8021  003BC6  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8022  003BCA  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8023                           
  8024                           ;movement.c: 83:     turnRight(mL,mR,90);
  8025  003BCE  C032  F020         	movff	test_action@mL,turnRight@mL
  8026  003BD2  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
  8027  003BD6  C034  F022         	movff	test_action@mR,turnRight@mR
  8028  003BDA  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
  8029  003BDE  0E5A               	movlw	90
  8030  003BE0  6E24               	movwf	turnRight@angle_right^0,c
  8031  003BE2  EC07  F021         	call	_turnRight	;wreg free
  8032                           
  8033                           ;movement.c: 84:     fullSpeedAhead_test(mL,mR);
  8034  003BE6  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8035  003BEA  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8036  003BEE  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8037  003BF2  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8038  003BF6  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8039                           
  8040                           ;movement.c: 85:     turnRight(mL,mR,90);
  8041  003BFA  C032  F020         	movff	test_action@mL,turnRight@mL
  8042  003BFE  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
  8043  003C02  C034  F022         	movff	test_action@mR,turnRight@mR
  8044  003C06  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
  8045  003C0A  0E5A               	movlw	90
  8046  003C0C  6E24               	movwf	turnRight@angle_right^0,c
  8047  003C0E  EC07  F021         	call	_turnRight	;wreg free
  8048                           
  8049                           ;movement.c: 86:     fullSpeedAhead_test(mL,mR);
  8050  003C12  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8051  003C16  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8052  003C1A  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8053  003C1E  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8054  003C22  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8055                           
  8056                           ;movement.c: 87:     turnLeft(mL,mR,180);
  8057  003C26  C032  F020         	movff	test_action@mL,turnLeft@mL
  8058  003C2A  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
  8059  003C2E  C034  F022         	movff	test_action@mR,turnLeft@mR
  8060  003C32  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
  8061  003C36  0EB4               	movlw	180
  8062  003C38  6E24               	movwf	turnLeft@angle_left^0,c
  8063  003C3A  ECCE  F021         	call	_turnLeft	;wreg free
  8064                           
  8065                           ;movement.c: 88:     fullSpeedAhead_test(mL,mR);
  8066  003C3E  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8067  003C42  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8068  003C46  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8069  003C4A  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8070  003C4E  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8071                           
  8072                           ;movement.c: 89:     turnLeft(mL,mR,135);
  8073  003C52  C032  F020         	movff	test_action@mL,turnLeft@mL
  8074  003C56  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
  8075  003C5A  C034  F022         	movff	test_action@mR,turnLeft@mR
  8076  003C5E  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
  8077  003C62  0E87               	movlw	135
  8078  003C64  6E24               	movwf	turnLeft@angle_left^0,c
  8079  003C66  ECCE  F021         	call	_turnLeft	;wreg free
  8080                           
  8081                           ;movement.c: 90:     fullSpeedAhead_test(mL,mR);
  8082  003C6A  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8083  003C6E  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8084  003C72  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8085  003C76  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8086  003C7A  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8087                           
  8088                           ;movement.c: 91:     turnRight(mL,mR,135);
  8089  003C7E  C032  F020         	movff	test_action@mL,turnRight@mL
  8090  003C82  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
  8091  003C86  C034  F022         	movff	test_action@mR,turnRight@mR
  8092  003C8A  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
  8093  003C8E  0E87               	movlw	135
  8094  003C90  6E24               	movwf	turnRight@angle_right^0,c
  8095  003C92  EC07  F021         	call	_turnRight	;wreg free
  8096                           
  8097                           ;movement.c: 92:     fullSpeedAhead_test(mL,mR);
  8098  003C96  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8099  003C9A  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8100  003C9E  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8101  003CA2  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8102  003CA6  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8103                           
  8104                           ;movement.c: 93:     turnLeft(mL,mR,135);
  8105  003CAA  C032  F020         	movff	test_action@mL,turnLeft@mL
  8106  003CAE  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
  8107  003CB2  C034  F022         	movff	test_action@mR,turnLeft@mR
  8108  003CB6  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
  8109  003CBA  0E87               	movlw	135
  8110  003CBC  6E24               	movwf	turnLeft@angle_left^0,c
  8111  003CBE  ECCE  F021         	call	_turnLeft	;wreg free
  8112                           
  8113                           ;movement.c: 94:     fullSpeedAhead_test(mL,mR);
  8114  003CC2  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
  8115  003CC6  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  8116  003CCA  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
  8117  003CCE  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  8118  003CD2  ECD8  F02B         	call	_fullSpeedAhead_test	;wreg free
  8119                           
  8120                           ;movement.c: 95:     turnRight(mL,mR,135);
  8121  003CD6  C032  F020         	movff	test_action@mL,turnRight@mL
  8122  003CDA  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
  8123  003CDE  C034  F022         	movff	test_action@mR,turnRight@mR
  8124  003CE2  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
  8125  003CE6  0E87               	movlw	135
  8126  003CE8  6E24               	movwf	turnRight@angle_right^0,c
  8127  003CEA  EC07  F021         	call	_turnRight	;wreg free
  8128  003CEE  0012               	return		;funcret
  8129  003CF0                     __end_of_test_action:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function _fullSpeedAhead_test *****************
  8133 ;; Defined at:
  8134 ;;		line 162 in file "dc_motor.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8137 ;;		 -> main@motorL(10), 
  8138 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8139 ;;		 -> main@motorR(10), 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      void 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8151 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;Total ram usage:        6 bytes
  8156 ;; Hardware stack levels used: 1
  8157 ;; Hardware stack levels required when called: 4
  8158 ;; This function calls:
  8159 ;;		_fullSpeedAhead
  8160 ;;		_stop
  8161 ;; This function is called by:
  8162 ;;		_test_action
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text33
  8167  0057B0                     __ptext33:
  8168                           	callstack 0
  8169  0057B0                     _fullSpeedAhead_test:
  8170                           	callstack 25
  8171  0057B0                     
  8172                           ;dc_motor.c: 162: void fullSpeedAhead_test(struct DC_motor *mL, struct DC_motor *mR);dc_
      +                          motor.c: 163: { fullSpeedAhead(mL, mR);
  8173  0057B0  C020  F01A         	movff	fullSpeedAhead_test@mL,fullSpeedAhead@mL
  8174  0057B4  C021  F01B         	movff	fullSpeedAhead_test@mL+1,fullSpeedAhead@mL+1
  8175  0057B8  C022  F01C         	movff	fullSpeedAhead_test@mR,fullSpeedAhead@mR
  8176  0057BC  C023  F01D         	movff	fullSpeedAhead_test@mR+1,fullSpeedAhead@mR+1
  8177  0057C0  EC1E  F029         	call	_fullSpeedAhead	;wreg free
  8178  0057C4                     
  8179                           ;dc_motor.c: 164:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8180  0057C4  0E52               	movlw	82
  8181  0057C6  6E25               	movwf	(??_fullSpeedAhead_test+1)^0,c
  8182  0057C8  0E2B               	movlw	43
  8183  0057CA  6E24               	movwf	??_fullSpeedAhead_test^0,c
  8184  0057CC  0E00               	movlw	0
  8185  0057CE                     u5907:
  8186  0057CE  2EE8               	decfsz	wreg,f,c
  8187  0057D0  D7FE               	bra	u5907
  8188  0057D2  2E24               	decfsz	??_fullSpeedAhead_test^0,f,c
  8189  0057D4  D7FC               	bra	u5907
  8190  0057D6  2E25               	decfsz	(??_fullSpeedAhead_test+1)^0,f,c
  8191  0057D8  D7FA               	bra	u5907
  8192  0057DA  D000               	nop2	
  8193  0057DC                     
  8194                           ;dc_motor.c: 165:     stop(mL,mR);
  8195  0057DC  C020  F01A         	movff	fullSpeedAhead_test@mL,stop@mL
  8196  0057E0  C021  F01B         	movff	fullSpeedAhead_test@mL+1,stop@mL+1
  8197  0057E4  C022  F01C         	movff	fullSpeedAhead_test@mR,stop@mR
  8198  0057E8  C023  F01D         	movff	fullSpeedAhead_test@mR+1,stop@mR+1
  8199  0057EC  ECC0  F028         	call	_stop	;wreg free
  8200  0057F0  0012               	return		;funcret
  8201  0057F2                     __end_of_fullSpeedAhead_test:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _pin_init *****************
  8205 ;; Defined at:
  8206 ;;		line 97 in file "movement.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		None
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 1
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		_main
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234                           	psect	text34
  8235  005B82                     __ptext34:
  8236                           	callstack 0
  8237  005B82                     _pin_init:
  8238                           	callstack 29
  8239  005B82  8486               	bsf	134,2,c	;volatile
  8240                           
  8241                           ;movement.c: 99:     ANSELFbits.ANSELF2=0;
  8242  005B84  010E               	movlb	14	; () banked
  8243  005B86  95B4               	bcf	180,2,b	;volatile
  8244                           
  8245                           ;movement.c: 100:     TRISFbits.TRISF3=1;
  8246  005B88  8686               	bsf	134,3,c	;volatile
  8247                           
  8248                           ;movement.c: 101:     ANSELFbits.ANSELF3=0;
  8249  005B8A  97B4               	bcf	180,3,b	;volatile
  8250                           
  8251                           ;movement.c: 106:     TRISGbits.TRISG1 = 0;
  8252  005B8C  9287               	bcf	135,1,c	;volatile
  8253                           
  8254                           ;movement.c: 107:     TRISFbits.TRISF7 = 0;
  8255  005B8E  9E86               	bcf	134,7,c	;volatile
  8256                           
  8257                           ;movement.c: 108:     TRISAbits.TRISA4 = 0;
  8258  005B90  9881               	bcf	129,4,c	;volatile
  8259                           
  8260                           ;movement.c: 109:     LATGbits.LATG1 = 1;
  8261  005B92  827F               	bsf	127,1,c	;volatile
  8262                           
  8263                           ;movement.c: 110:     LATFbits.LATF7 = 1;
  8264  005B94  8E7E               	bsf	126,7,c	;volatile
  8265                           
  8266                           ;movement.c: 111:     LATAbits.LATA4 = 1;
  8267  005B96  8879               	bsf	121,4,c	;volatile
  8268                           
  8269                           ;movement.c: 114:     TRISDbits.TRISD7 = 0;
  8270  005B98  9E84               	bcf	132,7,c	;volatile
  8271                           
  8272                           ;movement.c: 115:     LATDbits.LATD7 = 0;
  8273  005B9A  9E7C               	bcf	124,7,c	;volatile
  8274                           
  8275                           ;movement.c: 116:     TRISHbits.TRISH3 = 0;
  8276  005B9C  9688               	bcf	136,3,c	;volatile
  8277                           
  8278                           ;movement.c: 117:     LATHbits.LATH3 = 0;
  8279  005B9E  9680               	bcf	128,3,c	;volatile
  8280  005BA0                     
  8281                           ; BSR set to: 14
  8282  005BA0  0012               	return		;funcret
  8283  005BA2                     __end_of_pin_init:
  8284                           	callstack 0
  8285                           
  8286 ;; *************** function _initUSART4 *****************
  8287 ;; Defined at:
  8288 ;;		line 4 in file "serial.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;		None
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;Total ram usage:        0 bytes
  8307 ;; Hardware stack levels used: 1
  8308 ;; Hardware stack levels required when called: 1
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_main
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text35
  8317  005BC2                     __ptext35:
  8318                           	callstack 0
  8319  005BC2                     _initUSART4:
  8320                           	callstack 29
  8321  005BC2                     
  8322                           ;serial.c: 8:     RC0PPS = 0x12;
  8323  005BC2  0E12               	movlw	18
  8324  005BC4  010E               	movlb	14	; () banked
  8325  005BC6  6F62               	movwf	98,b	;volatile
  8326                           
  8327                           ;serial.c: 9:     RX4PPS = 0x11;
  8328  005BC8  0E11               	movlw	17
  8329  005BCA  6F15               	movwf	21,b	;volatile
  8330  005BCC                     
  8331                           ; BSR set to: 14
  8332                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8333  005BCC  97E9               	bcf	233,3,b	;volatile
  8334  005BCE                     
  8335                           ; BSR set to: 14
  8336                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8337  005BCE  95E8               	bcf	232,2,b	;volatile
  8338                           
  8339                           ;serial.c: 13:     SP4BRGL = 51;
  8340  005BD0  0E33               	movlw	51
  8341  005BD2  6FE5               	movwf	229,b	;volatile
  8342                           
  8343                           ;serial.c: 15:     SP4BRGH = 0;
  8344  005BD4  0E00               	movlw	0
  8345  005BD6  6FE6               	movwf	230,b	;volatile
  8346  005BD8                     
  8347                           ; BSR set to: 14
  8348                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8349  005BD8  89E7               	bsf	231,4,b	;volatile
  8350  005BDA                     
  8351                           ; BSR set to: 14
  8352                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8353  005BDA  8BE8               	bsf	232,5,b	;volatile
  8354  005BDC                     
  8355                           ; BSR set to: 14
  8356                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8357  005BDC  8FE7               	bsf	231,7,b	;volatile
  8358  005BDE                     
  8359                           ; BSR set to: 14
  8360  005BDE  0012               	return		;funcret
  8361  005BE0                     __end_of_initUSART4:
  8362                           	callstack 0
  8363                           
  8364 ;; *************** function _initDCmotors_parameter *****************
  8365 ;; Defined at:
  8366 ;;		line 40 in file "dc_motor.c"
  8367 ;; Parameters:    Size  Location     Type
  8368 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8369 ;;		 -> main@motorL(10), 
  8370 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8371 ;;		 -> main@motorR(10), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;Total ram usage:        4 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_main
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text36
  8398  004CD4                     __ptext36:
  8399                           	callstack 0
  8400  004CD4                     _initDCmotors_parameter:
  8401                           	callstack 29
  8402  004CD4                     
  8403                           ;dc_motor.c: 42:     motorL->power = 0;
  8404  004CD4  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8405  004CD8  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8406  004CDC  0E00               	movlw	0
  8407  004CDE  6EDF               	movwf	indf2,c
  8408  004CE0                     
  8409                           ;dc_motor.c: 43:     motorL->direction = 1;
  8410  004CE0  EE20 F001          	lfsr	2,1
  8411  004CE4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8412  004CE6  26D9               	addwf	fsr2l,f,c
  8413  004CE8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8414  004CEA  22DA               	addwfc	fsr2h,f,c
  8415  004CEC  0E01               	movlw	1
  8416  004CEE  6EDF               	movwf	indf2,c
  8417  004CF0                     
  8418                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8419  004CF0  EE20 F002          	lfsr	2,2
  8420  004CF4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8421  004CF6  26D9               	addwf	fsr2l,f,c
  8422  004CF8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8423  004CFA  22DA               	addwfc	fsr2h,f,c
  8424  004CFC  0EA3               	movlw	163
  8425  004CFE  6EDE               	movwf	postinc2,c
  8426  004D00  0E0F               	movlw	15
  8427  004D02  6EDD               	movwf	postdec2,c
  8428  004D04                     
  8429                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8430  004D04  EE20 F004          	lfsr	2,4
  8431  004D08  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8432  004D0A  26D9               	addwf	fsr2l,f,c
  8433  004D0C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8434  004D0E  22DA               	addwfc	fsr2h,f,c
  8435  004D10  0E7D               	movlw	125
  8436  004D12  6EDE               	movwf	postinc2,c
  8437  004D14  0E0F               	movlw	15
  8438  004D16  6EDD               	movwf	postdec2,c
  8439  004D18                     
  8440                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8441  004D18  EE20 F006          	lfsr	2,6
  8442  004D1C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8443  004D1E  26D9               	addwf	fsr2l,f,c
  8444  004D20  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8445  004D22  22DA               	addwfc	fsr2h,f,c
  8446  004D24  0E04               	movlw	4
  8447  004D26  6EDF               	movwf	indf2,c
  8448  004D28                     
  8449                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8450  004D28  EE20 F007          	lfsr	2,7
  8451  004D2C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8452  004D2E  26D9               	addwf	fsr2l,f,c
  8453  004D30  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8454  004D32  22DA               	addwfc	fsr2h,f,c
  8455  004D34  0EC7               	movlw	199
  8456  004D36  6EDE               	movwf	postinc2,c
  8457  004D38  0E00               	movlw	0
  8458  004D3A  6EDD               	movwf	postdec2,c
  8459  004D3C                     
  8460                           ;dc_motor.c: 50:     motorR->power = 0;
  8461  004D3C  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8462  004D40  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8463  004D44  0E00               	movlw	0
  8464  004D46  6EDF               	movwf	indf2,c
  8465                           
  8466                           ;dc_motor.c: 51:     motorR->direction = 1;
  8467  004D48  EE20 F001          	lfsr	2,1
  8468  004D4C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8469  004D4E  26D9               	addwf	fsr2l,f,c
  8470  004D50  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8471  004D52  22DA               	addwfc	fsr2h,f,c
  8472  004D54  0E01               	movlw	1
  8473  004D56  6EDF               	movwf	indf2,c
  8474                           
  8475                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8476  004D58  EE20 F002          	lfsr	2,2
  8477  004D5C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8478  004D5E  26D9               	addwf	fsr2l,f,c
  8479  004D60  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8480  004D62  22DA               	addwfc	fsr2h,f,c
  8481  004D64  0EA0               	movlw	160
  8482  004D66  6EDE               	movwf	postinc2,c
  8483  004D68  0E0F               	movlw	15
  8484  004D6A  6EDD               	movwf	postdec2,c
  8485                           
  8486                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8487  004D6C  EE20 F004          	lfsr	2,4
  8488  004D70  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8489  004D72  26D9               	addwf	fsr2l,f,c
  8490  004D74  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8491  004D76  22DA               	addwfc	fsr2h,f,c
  8492  004D78  0E7F               	movlw	127
  8493  004D7A  6EDE               	movwf	postinc2,c
  8494  004D7C  0E0F               	movlw	15
  8495  004D7E  6EDD               	movwf	postdec2,c
  8496                           
  8497                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8498  004D80  EE20 F006          	lfsr	2,6
  8499  004D84  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8500  004D86  26D9               	addwf	fsr2l,f,c
  8501  004D88  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8502  004D8A  22DA               	addwfc	fsr2h,f,c
  8503  004D8C  0E06               	movlw	6
  8504  004D8E  6EDF               	movwf	indf2,c
  8505                           
  8506                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8507  004D90  EE20 F007          	lfsr	2,7
  8508  004D94  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8509  004D96  26D9               	addwf	fsr2l,f,c
  8510  004D98  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8511  004D9A  22DA               	addwfc	fsr2h,f,c
  8512  004D9C  0EC7               	movlw	199
  8513  004D9E  6EDE               	movwf	postinc2,c
  8514  004DA0  0E00               	movlw	0
  8515  004DA2  6EDD               	movwf	postdec2,c
  8516  004DA4  0012               	return		;funcret
  8517  004DA6                     __end_of_initDCmotors_parameter:
  8518                           	callstack 0
  8519                           
  8520 ;; *************** function _initDCmotorsPWM *****************
  8521 ;; Defined at:
  8522 ;;		line 10 in file "dc_motor.c"
  8523 ;; Parameters:    Size  Location     Type
  8524 ;;  PWMperiod       2    0[COMRAM] int 
  8525 ;; Auto vars:     Size  Location     Type
  8526 ;;		None
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  1    wreg      void 
  8529 ;; Registers used:
  8530 ;;		wreg, status,2
  8531 ;; Tracked objects:
  8532 ;;		On entry : 0/0
  8533 ;;		On exit  : 0/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8536 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8540 ;;Total ram usage:        2 bytes
  8541 ;; Hardware stack levels used: 1
  8542 ;; Hardware stack levels required when called: 1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_main
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           	psect	text37
  8551  0057F2                     __ptext37:
  8552                           	callstack 0
  8553  0057F2                     _initDCmotorsPWM:
  8554                           	callstack 29
  8555  0057F2                     
  8556                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8557  0057F2  9485               	bcf	133,2,c	;volatile
  8558                           
  8559                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8560  0057F4  9E83               	bcf	131,7,c	;volatile
  8561                           
  8562                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8563  0057F6  9C87               	bcf	135,6,c	;volatile
  8564                           
  8565                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8566  0057F8  9885               	bcf	133,4,c	;volatile
  8567                           
  8568                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8569  0057FA  947D               	bcf	125,2,c	;volatile
  8570                           
  8571                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8572  0057FC  9E7B               	bcf	123,7,c	;volatile
  8573                           
  8574                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8575  0057FE  9C7F               	bcf	127,6,c	;volatile
  8576                           
  8577                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8578  005800  987D               	bcf	125,4,c	;volatile
  8579  005802                     
  8580                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8581  005802  50BD               	movf	189,w,c	;volatile
  8582  005804  0B8F               	andlw	-113
  8583  005806  0930               	iorlw	48
  8584  005808  6EBD               	movwf	189,c	;volatile
  8585                           
  8586                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8587  00580A  0EE0               	movlw	-32
  8588  00580C  16BE               	andwf	190,f,c	;volatile
  8589                           
  8590                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8591  00580E  50BF               	movf	191,w,c	;volatile
  8592  005810  0BF0               	andlw	-16
  8593  005812  0901               	iorlw	1
  8594  005814  6EBF               	movwf	191,c	;volatile
  8595                           
  8596                           ;dc_motor.c: 28:     T2PR=200-1;
  8597  005816  0EC7               	movlw	199
  8598  005818  6EBC               	movwf	188,c	;volatile
  8599  00581A                     
  8600                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8601  00581A  8EBD               	bsf	189,7,c	;volatile
  8602                           
  8603                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8604  00581C  0E0A               	movlw	10
  8605  00581E  010E               	movlb	14	; () banked
  8606  005820  6F74               	movwf	116,b	;volatile
  8607                           
  8608                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8609  005822  0E0B               	movlw	11
  8610  005824  6F69               	movwf	105,b	;volatile
  8611                           
  8612                           ;dc_motor.c: 34:     PWM6DCH=0;
  8613  005826  0E00               	movlw	0
  8614  005828  6EA3               	movwf	163,c	;volatile
  8615                           
  8616                           ;dc_motor.c: 35:     PWM7DCH=0;
  8617  00582A  0E00               	movlw	0
  8618  00582C  6EA0               	movwf	160,c	;volatile
  8619  00582E                     
  8620                           ; BSR set to: 14
  8621                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8622  00582E  8EA4               	bsf	164,7,c	;volatile
  8623  005830                     
  8624                           ; BSR set to: 14
  8625                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8626  005830  8EA1               	bsf	161,7,c	;volatile
  8627  005832                     
  8628                           ; BSR set to: 14
  8629  005832  0012               	return		;funcret
  8630  005834                     __end_of_initDCmotorsPWM:
  8631                           	callstack 0
  8632                           
  8633 ;; *************** function _color_click_init *****************
  8634 ;; Defined at:
  8635 ;;		line 67 in file "color.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;		None
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;		None
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8652 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8653 ;;Total ram usage:        1 bytes
  8654 ;; Hardware stack levels used: 1
  8655 ;; Hardware stack levels required when called: 4
  8656 ;; This function calls:
  8657 ;;		_I2C_2_Master_Init
  8658 ;;		_color_writetoaddr
  8659 ;; This function is called by:
  8660 ;;		_main
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text38
  8665  0059D8                     __ptext38:
  8666                           	callstack 0
  8667  0059D8                     _color_click_init:
  8668                           	callstack 26
  8669  0059D8                     
  8670                           ;color.c: 70:     I2C_2_Master_Init();
  8671  0059D8  EC35  F02D         	call	_I2C_2_Master_Init	;wreg free
  8672  0059DC                     
  8673                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8674  0059DC  0E01               	movlw	1
  8675  0059DE  6E03               	movwf	color_writetoaddr@value^0,c
  8676  0059E0  0E00               	movlw	0
  8677  0059E2  ECD1  F02D         	call	_color_writetoaddr
  8678  0059E6                     
  8679                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8680  0059E6  0E3F               	movlw	63
  8681  0059E8  6E05               	movwf	??_color_click_init^0,c
  8682  0059EA  0E55               	movlw	85
  8683  0059EC                     u5917:
  8684  0059EC  2EE8               	decfsz	wreg,f,c
  8685  0059EE  D7FE               	bra	u5917
  8686  0059F0  2E05               	decfsz	??_color_click_init^0,f,c
  8687  0059F2  D7FC               	bra	u5917
  8688  0059F4  F000               	nop	
  8689  0059F6                     
  8690                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8691  0059F6  0E03               	movlw	3
  8692  0059F8  6E03               	movwf	color_writetoaddr@value^0,c
  8693  0059FA  0E00               	movlw	0
  8694  0059FC  ECD1  F02D         	call	_color_writetoaddr
  8695  005A00                     
  8696                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8697  005A00  0ED5               	movlw	213
  8698  005A02  6E03               	movwf	color_writetoaddr@value^0,c
  8699  005A04  0E01               	movlw	1
  8700  005A06  ECD1  F02D         	call	_color_writetoaddr
  8701  005A0A  0012               	return		;funcret
  8702  005A0C                     __end_of_color_click_init:
  8703                           	callstack 0
  8704                           
  8705 ;; *************** function _color_writetoaddr *****************
  8706 ;; Defined at:
  8707 ;;		line 83 in file "color.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;  address         1    wreg     unsigned char 
  8710 ;;  value           1    2[COMRAM] unsigned char 
  8711 ;; Auto vars:     Size  Location     Type
  8712 ;;  address         1    3[COMRAM] unsigned char 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, status,2, status,0, cstack
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8722 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;Total ram usage:        2 bytes
  8727 ;; Hardware stack levels used: 1
  8728 ;; Hardware stack levels required when called: 3
  8729 ;; This function calls:
  8730 ;;		_I2C_2_Master_Start
  8731 ;;		_I2C_2_Master_Stop
  8732 ;;		_I2C_2_Master_Write
  8733 ;; This function is called by:
  8734 ;;		_color_click_init
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text39
  8739  005BA2                     __ptext39:
  8740                           	callstack 0
  8741  005BA2                     _color_writetoaddr:
  8742                           	callstack 26
  8743                           
  8744                           ;incstack = 0
  8745                           ;color_writetoaddr@address stored from wreg
  8746  005BA2  6E04               	movwf	color_writetoaddr@address^0,c
  8747  005BA4                     
  8748                           ;color.c: 84:     I2C_2_Master_Start();
  8749  005BA4  EC2C  F02E         	call	_I2C_2_Master_Start	;wreg free
  8750                           
  8751                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8752  005BA8  0E52               	movlw	82
  8753  005BAA  EC16  F02E         	call	_I2C_2_Master_Write
  8754                           
  8755                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8756  005BAE  5004               	movf	color_writetoaddr@address^0,w,c
  8757  005BB0  0980               	iorlw	128
  8758  005BB2  EC16  F02E         	call	_I2C_2_Master_Write
  8759                           
  8760                           ;color.c: 87:     I2C_2_Master_Write(value);
  8761  005BB6  5003               	movf	color_writetoaddr@value^0,w,c
  8762  005BB8  EC16  F02E         	call	_I2C_2_Master_Write
  8763                           
  8764                           ;color.c: 88:     I2C_2_Master_Stop();
  8765  005BBC  EC27  F02E         	call	_I2C_2_Master_Stop	;wreg free
  8766  005BC0  0012               	return		;funcret
  8767  005BC2                     __end_of_color_writetoaddr:
  8768                           	callstack 0
  8769                           
  8770 ;; *************** function _I2C_2_Master_Write *****************
  8771 ;; Defined at:
  8772 ;;		line 45 in file "i2c.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  data_byte       1    wreg     unsigned char 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  data_byte       1    1[COMRAM] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg, status,2, status,0, cstack
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8790 ;;Total ram usage:        1 bytes
  8791 ;; Hardware stack levels used: 1
  8792 ;; Hardware stack levels required when called: 2
  8793 ;; This function calls:
  8794 ;;		_I2C_2_Master_Idle
  8795 ;; This function is called by:
  8796 ;;		_color_writetoaddr
  8797 ;;		_color_read_Red
  8798 ;;		_color_read_Blue
  8799 ;;		_color_read_Green
  8800 ;;		_color_read_Clear
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text40
  8805  005C2C                     __ptext40:
  8806                           	callstack 0
  8807  005C2C                     _I2C_2_Master_Write:
  8808                           	callstack 24
  8809                           
  8810                           ;incstack = 0
  8811                           ;I2C_2_Master_Write@data_byte stored from wreg
  8812  005C2C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8813  005C2E                     
  8814                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8815  005C2E  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8816  005C32                     
  8817                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8818  005C32  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8819  005C36  0012               	return		;funcret
  8820  005C38                     __end_of_I2C_2_Master_Write:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _I2C_2_Master_Stop *****************
  8824 ;; Defined at:
  8825 ;;		line 39 in file "i2c.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, status,2, status,0, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 2
  8846 ;; This function calls:
  8847 ;;		_I2C_2_Master_Idle
  8848 ;; This function is called by:
  8849 ;;		_color_writetoaddr
  8850 ;;		_color_read_Red
  8851 ;;		_color_read_Blue
  8852 ;;		_color_read_Green
  8853 ;;		_color_read_Clear
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text41
  8858  005C4E                     __ptext41:
  8859                           	callstack 0
  8860  005C4E                     _I2C_2_Master_Stop:
  8861                           	callstack 24
  8862  005C4E                     
  8863                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8864  005C4E  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8865  005C52                     
  8866                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8867  005C52  010E               	movlb	14	; () banked
  8868  005C54  85DA               	bsf	218,2,b	;volatile
  8869  005C56                     
  8870                           ; BSR set to: 14
  8871  005C56  0012               	return		;funcret
  8872  005C58                     __end_of_I2C_2_Master_Stop:
  8873                           	callstack 0
  8874                           
  8875 ;; *************** function _I2C_2_Master_Start *****************
  8876 ;; Defined at:
  8877 ;;		line 27 in file "i2c.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;		None
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;		None
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  1    wreg      void 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0, cstack
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;Total ram usage:        0 bytes
  8896 ;; Hardware stack levels used: 1
  8897 ;; Hardware stack levels required when called: 2
  8898 ;; This function calls:
  8899 ;;		_I2C_2_Master_Idle
  8900 ;; This function is called by:
  8901 ;;		_color_writetoaddr
  8902 ;;		_color_read_Red
  8903 ;;		_color_read_Blue
  8904 ;;		_color_read_Green
  8905 ;;		_color_read_Clear
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text42
  8910  005C58                     __ptext42:
  8911                           	callstack 0
  8912  005C58                     _I2C_2_Master_Start:
  8913                           	callstack 24
  8914  005C58                     
  8915                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8916  005C58  EC4A  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8917  005C5C                     
  8918                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8919  005C5C  010E               	movlb	14	; () banked
  8920  005C5E  81DA               	bsf	218,0,b	;volatile
  8921  005C60                     
  8922                           ; BSR set to: 14
  8923  005C60  0012               	return		;funcret
  8924  005C62                     __end_of_I2C_2_Master_Start:
  8925                           	callstack 0
  8926                           
  8927 ;; *************** function _I2C_2_Master_Idle *****************
  8928 ;; Defined at:
  8929 ;;		line 22 in file "i2c.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;		None
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;Total ram usage:        1 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; Hardware stack levels required when called: 1
  8950 ;; This function calls:
  8951 ;;		Nothing
  8952 ;; This function is called by:
  8953 ;;		_I2C_2_Master_Start
  8954 ;;		_I2C_2_Master_RepStart
  8955 ;;		_I2C_2_Master_Stop
  8956 ;;		_I2C_2_Master_Write
  8957 ;;		_I2C_2_Master_Read
  8958 ;; This function uses a non-reentrant model
  8959 ;;
  8960                           
  8961                           	psect	text43
  8962  005A94                     __ptext43:
  8963                           	callstack 0
  8964  005A94                     _I2C_2_Master_Idle:
  8965                           	callstack 24
  8966  005A94                     l206:
  8967  005A94  010E               	movlb	14	; () banked
  8968  005A96  B5D8               	btfsc	216,2,b	;volatile
  8969  005A98  EF50  F02D         	goto	u3281
  8970  005A9C  EF52  F02D         	goto	u3280
  8971  005AA0                     u3281:
  8972  005AA0  EF4A  F02D         	goto	l206
  8973  005AA4                     u3280:
  8974  005AA4                     
  8975                           ; BSR set to: 14
  8976  005AA4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8977  005AA8  0E1F               	movlw	31
  8978  005AAA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8979  005AAC  A4D8               	btfss	status,2,c
  8980  005AAE  EF5B  F02D         	goto	u3291
  8981  005AB2  EF5D  F02D         	goto	u3290
  8982  005AB6                     u3291:
  8983  005AB6  EF4A  F02D         	goto	l206
  8984  005ABA                     u3290:
  8985  005ABA                     
  8986                           ; BSR set to: 14
  8987  005ABA  0012               	return		;funcret
  8988  005ABC                     __end_of_I2C_2_Master_Idle:
  8989                           	callstack 0
  8990                           
  8991 ;; *************** function _I2C_2_Master_Init *****************
  8992 ;; Defined at:
  8993 ;;		line 4 in file "i2c.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;		None
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;		None
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;Total ram usage:        0 bytes
  9012 ;; Hardware stack levels used: 1
  9013 ;; Hardware stack levels required when called: 1
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_color_click_init
  9018 ;;		_main
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           	psect	text44
  9023  005A6A                     __ptext44:
  9024                           	callstack 0
  9025  005A6A                     _I2C_2_Master_Init:
  9026                           	callstack 28
  9027  005A6A                     
  9028                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9029  005A6A  010E               	movlb	14	; () banked
  9030  005A6C  51D9               	movf	217,w,b	;volatile
  9031  005A6E  0BF0               	andlw	-16
  9032  005A70  0908               	iorlw	8
  9033  005A72  6FD9               	movwf	217,b	;volatile
  9034  005A74                     
  9035                           ; BSR set to: 14
  9036                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9037  005A74  8BD9               	bsf	217,5,b	;volatile
  9038                           
  9039                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9040  005A76  0E9F               	movlw	159
  9041  005A78  6FD6               	movwf	214,b	;volatile
  9042  005A7A                     
  9043                           ; BSR set to: 14
  9044                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9045  005A7A  8A84               	bsf	132,5,c	;volatile
  9046  005A7C                     
  9047                           ; BSR set to: 14
  9048                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9049  005A7C  8C84               	bsf	132,6,c	;volatile
  9050  005A7E                     
  9051                           ; BSR set to: 14
  9052                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9053  005A7E  9BA7               	bcf	167,5,b	;volatile
  9054  005A80                     
  9055                           ; BSR set to: 14
  9056                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9057  005A80  9DA7               	bcf	167,6,b	;volatile
  9058                           
  9059                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9060  005A82  0E1D               	movlw	29
  9061  005A84  6F1D               	movwf	29,b	;volatile
  9062                           
  9063                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9064  005A86  0E1E               	movlw	30
  9065  005A88  6F1C               	movwf	28,b	;volatile
  9066                           
  9067                           ;i2c.c: 18:   RD5PPS=0x1C;
  9068  005A8A  0E1C               	movlw	28
  9069  005A8C  6F6F               	movwf	111,b	;volatile
  9070                           
  9071                           ;i2c.c: 19:   RD6PPS=0x1B;
  9072  005A8E  0E1B               	movlw	27
  9073  005A90  6F70               	movwf	112,b	;volatile
  9074  005A92                     
  9075                           ; BSR set to: 14
  9076  005A92  0012               	return		;funcret
  9077  005A94                     __end_of_I2C_2_Master_Init:
  9078                           	callstack 0
  9079                           
  9080 ;; *************** function _buggylight_init *****************
  9081 ;; Defined at:
  9082 ;;		line 13 in file "color.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;		None
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  1    wreg      void 
  9089 ;; Registers used:
  9090 ;;		None
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9100 ;;Total ram usage:        0 bytes
  9101 ;; Hardware stack levels used: 1
  9102 ;; Hardware stack levels required when called: 1
  9103 ;; This function calls:
  9104 ;;		Nothing
  9105 ;; This function is called by:
  9106 ;;		_main
  9107 ;; This function uses a non-reentrant model
  9108 ;;
  9109                           
  9110                           	psect	text45
  9111  005C16                     __ptext45:
  9112                           	callstack 0
  9113  005C16                     _buggylight_init:
  9114                           	callstack 29
  9115  005C16                     
  9116                           ;color.c: 15:     TRISHbits.TRISH1=0;
  9117  005C16  9288               	bcf	136,1,c	;volatile
  9118                           
  9119                           ;color.c: 16:     TRISDbits.TRISD4=0;
  9120  005C18  9884               	bcf	132,4,c	;volatile
  9121                           
  9122                           ;color.c: 17:     TRISDbits.TRISD3=0;
  9123  005C1A  9684               	bcf	132,3,c	;volatile
  9124                           
  9125                           ;color.c: 18:     TRISFbits.TRISF0=0;
  9126  005C1C  9086               	bcf	134,0,c	;volatile
  9127                           
  9128                           ;color.c: 19:     TRISHbits.TRISH0=0;
  9129  005C1E  9088               	bcf	136,0,c	;volatile
  9130                           
  9131                           ;color.c: 21:     LATHbits.LATH1 = 0;
  9132  005C20  9280               	bcf	128,1,c	;volatile
  9133                           
  9134                           ;color.c: 22:     LATDbits.LATD4 = 0;
  9135  005C22  987C               	bcf	124,4,c	;volatile
  9136                           
  9137                           ;color.c: 23:     LATDbits.LATD3 = 0;
  9138  005C24  967C               	bcf	124,3,c	;volatile
  9139                           
  9140                           ;color.c: 24:     LATFbits.LATF0 = 0;
  9141  005C26  907E               	bcf	126,0,c	;volatile
  9142                           
  9143                           ;color.c: 25:     LATHbits.LATH0 = 0;
  9144  005C28  9080               	bcf	128,0,c	;volatile
  9145  005C2A  0012               	return		;funcret
  9146  005C2C                     __end_of_buggylight_init:
  9147                           	callstack 0
  9148                           
  9149 ;; *************** function _action *****************
  9150 ;; Defined at:
  9151 ;;		line 18 in file "movement.c"
  9152 ;; Parameters:    Size  Location     Type
  9153 ;;  color           1    wreg     unsigned char 
  9154 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  9155 ;;		 -> main@motorL(10), 
  9156 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  9157 ;;		 -> main@motorR(10), 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  color           1   93[COMRAM] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9169 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;Total ram usage:        5 bytes
  9174 ;; Hardware stack levels used: 1
  9175 ;; Hardware stack levels required when called: 11
  9176 ;; This function calls:
  9177 ;;		_goback
  9178 ;;		_reverse_square
  9179 ;;		_short_reverse
  9180 ;;		_toggle_light
  9181 ;;		_turnLeft
  9182 ;;		_turnRight
  9183 ;; This function is called by:
  9184 ;;		_main
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text46
  9189  0031E0                     __ptext46:
  9190                           	callstack 0
  9191  0031E0                     _action:
  9192                           	callstack 19
  9193                           
  9194                           ;incstack = 0
  9195                           ;action@color stored from wreg
  9196  0031E0  6E5E               	movwf	action@color^0,c
  9197  0031E2                     
  9198                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 22:     if (color != 0){
  9199  0031E2  505E               	movf	action@color^0,w,c
  9200  0031E4  B4D8               	btfsc	status,2,c
  9201  0031E6  EFF7  F018         	goto	u5431
  9202  0031EA  EFF9  F018         	goto	u5430
  9203  0031EE                     u5431:
  9204  0031EE  EF55  F01A         	goto	l627
  9205  0031F2                     u5430:
  9206  0031F2                     
  9207                           ;movement.c: 25:         if (color == 1){
  9208  0031F2  045E               	decf	action@color^0,w,c
  9209  0031F4  A4D8               	btfss	status,2,c
  9210  0031F6  EFFF  F018         	goto	u5441
  9211  0031FA  EF01  F019         	goto	u5440
  9212  0031FE                     u5441:
  9213  0031FE  EF25  F019         	goto	l5428
  9214  003202                     u5440:
  9215  003202                     
  9216                           ;movement.c: 26:             short_reverse(mL,mR);
  9217  003202  C0E0  F026         	movff	action@mL,short_reverse@mL
  9218  003206  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9219  00320A  C0E2  F028         	movff	action@mR,short_reverse@mR
  9220  00320E  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9221  003212  EC1A  F02C         	call	_short_reverse	;wreg free
  9222                           
  9223                           ;movement.c: 27:             turnRight(mL,mR,90);
  9224  003216  C0E0  F020         	movff	action@mL,turnRight@mL
  9225  00321A  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9226  00321E  C0E2  F022         	movff	action@mR,turnRight@mR
  9227  003222  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9228  003226  0E5A               	movlw	90
  9229  003228  6E24               	movwf	turnRight@angle_right^0,c
  9230  00322A  EC07  F021         	call	_turnRight	;wreg free
  9231  00322E                     
  9232                           ;movement.c: 28:             memory[array_index] = 1;
  9233  00322E  0101               	movlb	1	; () banked
  9234  003230  5163               	movf	_array_index& (0+255),w,b
  9235  003232  0D02               	mullw	2
  9236  003234  0E00               	movlw	low _memory
  9237  003236  24F3               	addwf	243,w,c
  9238  003238  6ED9               	movwf	fsr2l,c
  9239  00323A  0E01               	movlw	high _memory
  9240  00323C  20F4               	addwfc	prodh,w,c
  9241  00323E  6EDA               	movwf	fsr2h,c
  9242  003240  0E01               	movlw	1
  9243  003242  6EDE               	movwf	postinc2,c
  9244  003244  0E00               	movlw	0
  9245  003246  6EDD               	movwf	postdec2,c
  9246  003248                     
  9247                           ; BSR set to: 1
  9248                           ;movement.c: 29:             array_index++;
  9249  003248  2B63               	incf	_array_index& (0+255),f,b
  9250  00324A                     l5428:
  9251                           
  9252                           ;movement.c: 31:         if (color == 2){
  9253  00324A  0E02               	movlw	2
  9254  00324C  185E               	xorwf	action@color^0,w,c
  9255  00324E  A4D8               	btfss	status,2,c
  9256  003250  EF2C  F019         	goto	u5451
  9257  003254  EF2E  F019         	goto	u5450
  9258  003258                     u5451:
  9259  003258  EF52  F019         	goto	l5436
  9260  00325C                     u5450:
  9261  00325C                     
  9262                           ;movement.c: 32:             short_reverse(mL,mR);
  9263  00325C  C0E0  F026         	movff	action@mL,short_reverse@mL
  9264  003260  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9265  003264  C0E2  F028         	movff	action@mR,short_reverse@mR
  9266  003268  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9267  00326C  EC1A  F02C         	call	_short_reverse	;wreg free
  9268                           
  9269                           ;movement.c: 33:             turnLeft(mL,mR,90);
  9270  003270  C0E0  F020         	movff	action@mL,turnLeft@mL
  9271  003274  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9272  003278  C0E2  F022         	movff	action@mR,turnLeft@mR
  9273  00327C  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9274  003280  0E5A               	movlw	90
  9275  003282  6E24               	movwf	turnLeft@angle_left^0,c
  9276  003284  ECCE  F021         	call	_turnLeft	;wreg free
  9277  003288                     
  9278                           ;movement.c: 34:             memory[array_index] = 2;
  9279  003288  0101               	movlb	1	; () banked
  9280  00328A  5163               	movf	_array_index& (0+255),w,b
  9281  00328C  0D02               	mullw	2
  9282  00328E  0E00               	movlw	low _memory
  9283  003290  24F3               	addwf	243,w,c
  9284  003292  6ED9               	movwf	fsr2l,c
  9285  003294  0E01               	movlw	high _memory
  9286  003296  20F4               	addwfc	prodh,w,c
  9287  003298  6EDA               	movwf	fsr2h,c
  9288  00329A  0E02               	movlw	2
  9289  00329C  6EDE               	movwf	postinc2,c
  9290  00329E  0E00               	movlw	0
  9291  0032A0  6EDD               	movwf	postdec2,c
  9292  0032A2                     
  9293                           ; BSR set to: 1
  9294                           ;movement.c: 35:             array_index++;
  9295  0032A2  2B63               	incf	_array_index& (0+255),f,b
  9296  0032A4                     l5436:
  9297                           
  9298                           ;movement.c: 37:         if (color == 3){
  9299  0032A4  0E03               	movlw	3
  9300  0032A6  185E               	xorwf	action@color^0,w,c
  9301  0032A8  A4D8               	btfss	status,2,c
  9302  0032AA  EF59  F019         	goto	u5461
  9303  0032AE  EF5B  F019         	goto	u5460
  9304  0032B2                     u5461:
  9305  0032B2  EF7F  F019         	goto	l5444
  9306  0032B6                     u5460:
  9307  0032B6                     
  9308                           ;movement.c: 38:             short_reverse(mL,mR);
  9309  0032B6  C0E0  F026         	movff	action@mL,short_reverse@mL
  9310  0032BA  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9311  0032BE  C0E2  F028         	movff	action@mR,short_reverse@mR
  9312  0032C2  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9313  0032C6  EC1A  F02C         	call	_short_reverse	;wreg free
  9314                           
  9315                           ;movement.c: 39:             turnLeft(mL,mR,180);
  9316  0032CA  C0E0  F020         	movff	action@mL,turnLeft@mL
  9317  0032CE  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9318  0032D2  C0E2  F022         	movff	action@mR,turnLeft@mR
  9319  0032D6  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9320  0032DA  0EB4               	movlw	180
  9321  0032DC  6E24               	movwf	turnLeft@angle_left^0,c
  9322  0032DE  ECCE  F021         	call	_turnLeft	;wreg free
  9323  0032E2                     
  9324                           ;movement.c: 40:             memory[array_index] = 3;
  9325  0032E2  0101               	movlb	1	; () banked
  9326  0032E4  5163               	movf	_array_index& (0+255),w,b
  9327  0032E6  0D02               	mullw	2
  9328  0032E8  0E00               	movlw	low _memory
  9329  0032EA  24F3               	addwf	243,w,c
  9330  0032EC  6ED9               	movwf	fsr2l,c
  9331  0032EE  0E01               	movlw	high _memory
  9332  0032F0  20F4               	addwfc	prodh,w,c
  9333  0032F2  6EDA               	movwf	fsr2h,c
  9334  0032F4  0E03               	movlw	3
  9335  0032F6  6EDE               	movwf	postinc2,c
  9336  0032F8  0E00               	movlw	0
  9337  0032FA  6EDD               	movwf	postdec2,c
  9338  0032FC                     
  9339                           ; BSR set to: 1
  9340                           ;movement.c: 41:             array_index++;
  9341  0032FC  2B63               	incf	_array_index& (0+255),f,b
  9342  0032FE                     l5444:
  9343                           
  9344                           ;movement.c: 43:         if (color == 4){
  9345  0032FE  0E04               	movlw	4
  9346  003300  185E               	xorwf	action@color^0,w,c
  9347  003302  A4D8               	btfss	status,2,c
  9348  003304  EF86  F019         	goto	u5471
  9349  003308  EF88  F019         	goto	u5470
  9350  00330C                     u5471:
  9351  00330C  EFAC  F019         	goto	l5452
  9352  003310                     u5470:
  9353  003310                     
  9354                           ;movement.c: 44:             reverse_square(mL,mR);
  9355  003310  C0E0  F026         	movff	action@mL,reverse_square@mL
  9356  003314  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9357  003318  C0E2  F028         	movff	action@mR,reverse_square@mR
  9358  00331C  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9359  003320  EC3B  F02C         	call	_reverse_square	;wreg free
  9360                           
  9361                           ;movement.c: 45:             turnRight(mL,mR,90);
  9362  003324  C0E0  F020         	movff	action@mL,turnRight@mL
  9363  003328  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9364  00332C  C0E2  F022         	movff	action@mR,turnRight@mR
  9365  003330  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9366  003334  0E5A               	movlw	90
  9367  003336  6E24               	movwf	turnRight@angle_right^0,c
  9368  003338  EC07  F021         	call	_turnRight	;wreg free
  9369  00333C                     
  9370                           ;movement.c: 46:             memory[array_index] = 4;
  9371  00333C  0101               	movlb	1	; () banked
  9372  00333E  5163               	movf	_array_index& (0+255),w,b
  9373  003340  0D02               	mullw	2
  9374  003342  0E00               	movlw	low _memory
  9375  003344  24F3               	addwf	243,w,c
  9376  003346  6ED9               	movwf	fsr2l,c
  9377  003348  0E01               	movlw	high _memory
  9378  00334A  20F4               	addwfc	prodh,w,c
  9379  00334C  6EDA               	movwf	fsr2h,c
  9380  00334E  0E04               	movlw	4
  9381  003350  6EDE               	movwf	postinc2,c
  9382  003352  0E00               	movlw	0
  9383  003354  6EDD               	movwf	postdec2,c
  9384  003356                     
  9385                           ; BSR set to: 1
  9386                           ;movement.c: 47:             array_index++;
  9387  003356  2B63               	incf	_array_index& (0+255),f,b
  9388  003358                     l5452:
  9389                           
  9390                           ;movement.c: 49:         if (color == 5){
  9391  003358  0E05               	movlw	5
  9392  00335A  185E               	xorwf	action@color^0,w,c
  9393  00335C  A4D8               	btfss	status,2,c
  9394  00335E  EFB3  F019         	goto	u5481
  9395  003362  EFB5  F019         	goto	u5480
  9396  003366                     u5481:
  9397  003366  EFD9  F019         	goto	l5460
  9398  00336A                     u5480:
  9399  00336A                     
  9400                           ;movement.c: 50:             reverse_square(mL,mR);
  9401  00336A  C0E0  F026         	movff	action@mL,reverse_square@mL
  9402  00336E  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9403  003372  C0E2  F028         	movff	action@mR,reverse_square@mR
  9404  003376  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9405  00337A  EC3B  F02C         	call	_reverse_square	;wreg free
  9406                           
  9407                           ;movement.c: 51:             turnLeft(mL,mR,90);
  9408  00337E  C0E0  F020         	movff	action@mL,turnLeft@mL
  9409  003382  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9410  003386  C0E2  F022         	movff	action@mR,turnLeft@mR
  9411  00338A  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9412  00338E  0E5A               	movlw	90
  9413  003390  6E24               	movwf	turnLeft@angle_left^0,c
  9414  003392  ECCE  F021         	call	_turnLeft	;wreg free
  9415  003396                     
  9416                           ;movement.c: 52:             memory[array_index] = 5;
  9417  003396  0101               	movlb	1	; () banked
  9418  003398  5163               	movf	_array_index& (0+255),w,b
  9419  00339A  0D02               	mullw	2
  9420  00339C  0E00               	movlw	low _memory
  9421  00339E  24F3               	addwf	243,w,c
  9422  0033A0  6ED9               	movwf	fsr2l,c
  9423  0033A2  0E01               	movlw	high _memory
  9424  0033A4  20F4               	addwfc	prodh,w,c
  9425  0033A6  6EDA               	movwf	fsr2h,c
  9426  0033A8  0E05               	movlw	5
  9427  0033AA  6EDE               	movwf	postinc2,c
  9428  0033AC  0E00               	movlw	0
  9429  0033AE  6EDD               	movwf	postdec2,c
  9430  0033B0                     
  9431                           ; BSR set to: 1
  9432                           ;movement.c: 53:             array_index++;
  9433  0033B0  2B63               	incf	_array_index& (0+255),f,b
  9434  0033B2                     l5460:
  9435                           
  9436                           ;movement.c: 55:         if (color == 6){
  9437  0033B2  0E06               	movlw	6
  9438  0033B4  185E               	xorwf	action@color^0,w,c
  9439  0033B6  A4D8               	btfss	status,2,c
  9440  0033B8  EFE0  F019         	goto	u5491
  9441  0033BC  EFE2  F019         	goto	u5490
  9442  0033C0                     u5491:
  9443  0033C0  EF06  F01A         	goto	l5468
  9444  0033C4                     u5490:
  9445  0033C4                     
  9446                           ;movement.c: 56:             short_reverse(mL,mR);
  9447  0033C4  C0E0  F026         	movff	action@mL,short_reverse@mL
  9448  0033C8  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9449  0033CC  C0E2  F028         	movff	action@mR,short_reverse@mR
  9450  0033D0  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9451  0033D4  EC1A  F02C         	call	_short_reverse	;wreg free
  9452                           
  9453                           ;movement.c: 57:             turnRight(mL,mR,135);
  9454  0033D8  C0E0  F020         	movff	action@mL,turnRight@mL
  9455  0033DC  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9456  0033E0  C0E2  F022         	movff	action@mR,turnRight@mR
  9457  0033E4  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9458  0033E8  0E87               	movlw	135
  9459  0033EA  6E24               	movwf	turnRight@angle_right^0,c
  9460  0033EC  EC07  F021         	call	_turnRight	;wreg free
  9461  0033F0                     
  9462                           ;movement.c: 58:             memory[array_index] = 6;
  9463  0033F0  0101               	movlb	1	; () banked
  9464  0033F2  5163               	movf	_array_index& (0+255),w,b
  9465  0033F4  0D02               	mullw	2
  9466  0033F6  0E00               	movlw	low _memory
  9467  0033F8  24F3               	addwf	243,w,c
  9468  0033FA  6ED9               	movwf	fsr2l,c
  9469  0033FC  0E01               	movlw	high _memory
  9470  0033FE  20F4               	addwfc	prodh,w,c
  9471  003400  6EDA               	movwf	fsr2h,c
  9472  003402  0E06               	movlw	6
  9473  003404  6EDE               	movwf	postinc2,c
  9474  003406  0E00               	movlw	0
  9475  003408  6EDD               	movwf	postdec2,c
  9476  00340A                     
  9477                           ; BSR set to: 1
  9478                           ;movement.c: 59:             array_index++;
  9479  00340A  2B63               	incf	_array_index& (0+255),f,b
  9480  00340C                     l5468:
  9481                           
  9482                           ;movement.c: 61:         if (color == 7){
  9483  00340C  0E07               	movlw	7
  9484  00340E  185E               	xorwf	action@color^0,w,c
  9485  003410  A4D8               	btfss	status,2,c
  9486  003412  EF0D  F01A         	goto	u5501
  9487  003416  EF0F  F01A         	goto	u5500
  9488  00341A                     u5501:
  9489  00341A  EF33  F01A         	goto	l5476
  9490  00341E                     u5500:
  9491  00341E                     
  9492                           ;movement.c: 62:             short_reverse(mL,mR);
  9493  00341E  C0E0  F026         	movff	action@mL,short_reverse@mL
  9494  003422  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9495  003426  C0E2  F028         	movff	action@mR,short_reverse@mR
  9496  00342A  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9497  00342E  EC1A  F02C         	call	_short_reverse	;wreg free
  9498                           
  9499                           ;movement.c: 63:             turnLeft(mL,mR,135);
  9500  003432  C0E0  F020         	movff	action@mL,turnLeft@mL
  9501  003436  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9502  00343A  C0E2  F022         	movff	action@mR,turnLeft@mR
  9503  00343E  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9504  003442  0E87               	movlw	135
  9505  003444  6E24               	movwf	turnLeft@angle_left^0,c
  9506  003446  ECCE  F021         	call	_turnLeft	;wreg free
  9507  00344A                     
  9508                           ;movement.c: 64:             memory[array_index] = 7;
  9509  00344A  0101               	movlb	1	; () banked
  9510  00344C  5163               	movf	_array_index& (0+255),w,b
  9511  00344E  0D02               	mullw	2
  9512  003450  0E00               	movlw	low _memory
  9513  003452  24F3               	addwf	243,w,c
  9514  003454  6ED9               	movwf	fsr2l,c
  9515  003456  0E01               	movlw	high _memory
  9516  003458  20F4               	addwfc	prodh,w,c
  9517  00345A  6EDA               	movwf	fsr2h,c
  9518  00345C  0E07               	movlw	7
  9519  00345E  6EDE               	movwf	postinc2,c
  9520  003460  0E00               	movlw	0
  9521  003462  6EDD               	movwf	postdec2,c
  9522  003464                     
  9523                           ; BSR set to: 1
  9524                           ;movement.c: 65:             array_index++;
  9525  003464  2B63               	incf	_array_index& (0+255),f,b
  9526  003466                     l5476:
  9527                           
  9528                           ;movement.c: 67:         if (color == 8){
  9529  003466  0E08               	movlw	8
  9530  003468  185E               	xorwf	action@color^0,w,c
  9531  00346A  A4D8               	btfss	status,2,c
  9532  00346C  EF3A  F01A         	goto	u5511
  9533  003470  EF3C  F01A         	goto	u5510
  9534  003474                     u5511:
  9535  003474  EF55  F01A         	goto	l627
  9536  003478                     u5510:
  9537  003478                     
  9538                           ;movement.c: 68:             toggle_light(2,1);
  9539  003478  0E01               	movlw	1
  9540  00347A  6E01               	movwf	toggle_light@toggletime^0,c
  9541  00347C  0E02               	movlw	2
  9542  00347E  EC56  F01A         	call	_toggle_light
  9543  003482                     
  9544                           ;movement.c: 69:             short_reverse(mL,mR);
  9545  003482  C0E0  F026         	movff	action@mL,short_reverse@mL
  9546  003486  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9547  00348A  C0E2  F028         	movff	action@mR,short_reverse@mR
  9548  00348E  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9549  003492  EC1A  F02C         	call	_short_reverse	;wreg free
  9550  003496                     
  9551                           ;movement.c: 70:             goback(mL,mR);
  9552  003496  C0E0  F058         	movff	action@mL,goback@mL
  9553  00349A  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9554  00349E  C0E2  F05A         	movff	action@mR,goback@mR
  9555  0034A2  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9556  0034A6  EC01  F016         	call	_goback	;wreg free
  9557  0034AA                     l627:
  9558  0034AA  0012               	return		;funcret
  9559  0034AC                     __end_of_action:
  9560                           	callstack 0
  9561                           
  9562 ;; *************** function _toggle_light *****************
  9563 ;; Defined at:
  9564 ;;		line 29 in file "color.c"
  9565 ;; Parameters:    Size  Location     Type
  9566 ;;  lightnumber     1    wreg     unsigned char 
  9567 ;;  toggletime      1    0[COMRAM] unsigned char 
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9570 ;;  i               1    3[COMRAM] unsigned char 
  9571 ;; Return value:  Size  Location     Type
  9572 ;;                  1    wreg      void 
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9580 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9584 ;;Total ram usage:        5 bytes
  9585 ;; Hardware stack levels used: 1
  9586 ;; Hardware stack levels required when called: 1
  9587 ;; This function calls:
  9588 ;;		Nothing
  9589 ;; This function is called by:
  9590 ;;		_calibrate_white
  9591 ;;		_detect_color
  9592 ;;		_amb_light_measure
  9593 ;;		_action
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text47
  9598  0034AC                     __ptext47:
  9599                           	callstack 0
  9600  0034AC                     _toggle_light:
  9601                           	callstack 27
  9602                           
  9603                           ;incstack = 0
  9604                           ;toggle_light@lightnumber stored from wreg
  9605  0034AC  6E05               	movwf	toggle_light@lightnumber^0,c
  9606  0034AE                     
  9607                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9608  0034AE  0E00               	movlw	0
  9609  0034B0  6E04               	movwf	toggle_light@i^0,c
  9610                           
  9611                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9612  0034B2  0E00               	movlw	0
  9613  0034B4  6E04               	movwf	toggle_light@i^0,c
  9614  0034B6  EFA2  F01B         	goto	l74
  9615  0034BA                     l4496:
  9616                           
  9617                           ;color.c: 34:         if (lightnumber == 1){
  9618  0034BA  0405               	decf	toggle_light@lightnumber^0,w,c
  9619  0034BC  A4D8               	btfss	status,2,c
  9620  0034BE  EF63  F01A         	goto	u4291
  9621  0034C2  EF65  F01A         	goto	u4290
  9622  0034C6                     u4291:
  9623  0034C6  EF9D  F01A         	goto	l4504
  9624  0034CA                     u4290:
  9625  0034CA                     
  9626                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9627  0034CA  A280               	btfss	128,1,c	;volatile
  9628  0034CC  EF6A  F01A         	goto	u4301
  9629  0034D0  EF6E  F01A         	goto	u4300
  9630  0034D4                     u4301:
  9631  0034D4  6A02               	clrf	??_toggle_light^0,c
  9632  0034D6  2A02               	incf	??_toggle_light^0,f,c
  9633  0034D8  EF6F  F01A         	goto	u4318
  9634  0034DC                     u4300:
  9635  0034DC  6A02               	clrf	??_toggle_light^0,c
  9636  0034DE                     u4318:
  9637  0034DE  4602               	rlncf	??_toggle_light^0,f,c
  9638  0034E0  5080               	movf	128,w,c	;volatile
  9639  0034E2  1802               	xorwf	??_toggle_light^0,w,c
  9640  0034E4  0BFD               	andlw	-3
  9641  0034E6  1802               	xorwf	??_toggle_light^0,w,c
  9642  0034E8  6E80               	movwf	128,c	;volatile
  9643  0034EA                     
  9644                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9645  0034EA  0E29               	movlw	41
  9646  0034EC  6E03               	movwf	(??_toggle_light+1)^0,c
  9647  0034EE  0E96               	movlw	150
  9648  0034F0  6E02               	movwf	??_toggle_light^0,c
  9649  0034F2  0E7F               	movlw	127
  9650  0034F4                     u5927:
  9651  0034F4  2EE8               	decfsz	wreg,f,c
  9652  0034F6  D7FE               	bra	u5927
  9653  0034F8  2E02               	decfsz	??_toggle_light^0,f,c
  9654  0034FA  D7FC               	bra	u5927
  9655  0034FC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9656  0034FE  D7FA               	bra	u5927
  9657  003500  F000               	nop	
  9658  003502                     
  9659                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9660  003502  A280               	btfss	128,1,c	;volatile
  9661  003504  EF86  F01A         	goto	u4321
  9662  003508  EF8A  F01A         	goto	u4320
  9663  00350C                     u4321:
  9664  00350C  6A02               	clrf	??_toggle_light^0,c
  9665  00350E  2A02               	incf	??_toggle_light^0,f,c
  9666  003510  EF8B  F01A         	goto	u4338
  9667  003514                     u4320:
  9668  003514  6A02               	clrf	??_toggle_light^0,c
  9669  003516                     u4338:
  9670  003516  4602               	rlncf	??_toggle_light^0,f,c
  9671  003518  5080               	movf	128,w,c	;volatile
  9672  00351A  1802               	xorwf	??_toggle_light^0,w,c
  9673  00351C  0BFD               	andlw	-3
  9674  00351E  1802               	xorwf	??_toggle_light^0,w,c
  9675  003520  6E80               	movwf	128,c	;volatile
  9676                           
  9677                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9678  003522  0E29               	movlw	41
  9679  003524  6E03               	movwf	(??_toggle_light+1)^0,c
  9680  003526  0E96               	movlw	150
  9681  003528  6E02               	movwf	??_toggle_light^0,c
  9682  00352A  0E7F               	movlw	127
  9683  00352C                     u5937:
  9684  00352C  2EE8               	decfsz	wreg,f,c
  9685  00352E  D7FE               	bra	u5937
  9686  003530  2E02               	decfsz	??_toggle_light^0,f,c
  9687  003532  D7FC               	bra	u5937
  9688  003534  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9689  003536  D7FA               	bra	u5937
  9690  003538  F000               	nop	
  9691  00353A                     l4504:
  9692                           
  9693                           ;color.c: 40:         if (lightnumber == 2){
  9694  00353A  0E02               	movlw	2
  9695  00353C  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9696  00353E  A4D8               	btfss	status,2,c
  9697  003540  EFA4  F01A         	goto	u4341
  9698  003544  EFA6  F01A         	goto	u4340
  9699  003548                     u4341:
  9700  003548  EFDE  F01A         	goto	l4512
  9701  00354C                     u4340:
  9702  00354C                     
  9703                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9704  00354C  A87C               	btfss	124,4,c	;volatile
  9705  00354E  EFAB  F01A         	goto	u4351
  9706  003552  EFAF  F01A         	goto	u4350
  9707  003556                     u4351:
  9708  003556  6A02               	clrf	??_toggle_light^0,c
  9709  003558  2A02               	incf	??_toggle_light^0,f,c
  9710  00355A  EFB0  F01A         	goto	u4368
  9711  00355E                     u4350:
  9712  00355E  6A02               	clrf	??_toggle_light^0,c
  9713  003560                     u4368:
  9714  003560  3A02               	swapf	??_toggle_light^0,f,c
  9715  003562  507C               	movf	124,w,c	;volatile
  9716  003564  1802               	xorwf	??_toggle_light^0,w,c
  9717  003566  0BEF               	andlw	-17
  9718  003568  1802               	xorwf	??_toggle_light^0,w,c
  9719  00356A  6E7C               	movwf	124,c	;volatile
  9720  00356C                     
  9721                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9722  00356C  0E29               	movlw	41
  9723  00356E  6E03               	movwf	(??_toggle_light+1)^0,c
  9724  003570  0E96               	movlw	150
  9725  003572  6E02               	movwf	??_toggle_light^0,c
  9726  003574  0E7F               	movlw	127
  9727  003576                     u5947:
  9728  003576  2EE8               	decfsz	wreg,f,c
  9729  003578  D7FE               	bra	u5947
  9730  00357A  2E02               	decfsz	??_toggle_light^0,f,c
  9731  00357C  D7FC               	bra	u5947
  9732  00357E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9733  003580  D7FA               	bra	u5947
  9734  003582  F000               	nop	
  9735  003584                     
  9736                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9737  003584  A87C               	btfss	124,4,c	;volatile
  9738  003586  EFC7  F01A         	goto	u4371
  9739  00358A  EFCB  F01A         	goto	u4370
  9740  00358E                     u4371:
  9741  00358E  6A02               	clrf	??_toggle_light^0,c
  9742  003590  2A02               	incf	??_toggle_light^0,f,c
  9743  003592  EFCC  F01A         	goto	u4388
  9744  003596                     u4370:
  9745  003596  6A02               	clrf	??_toggle_light^0,c
  9746  003598                     u4388:
  9747  003598  3A02               	swapf	??_toggle_light^0,f,c
  9748  00359A  507C               	movf	124,w,c	;volatile
  9749  00359C  1802               	xorwf	??_toggle_light^0,w,c
  9750  00359E  0BEF               	andlw	-17
  9751  0035A0  1802               	xorwf	??_toggle_light^0,w,c
  9752  0035A2  6E7C               	movwf	124,c	;volatile
  9753                           
  9754                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9755  0035A4  0E29               	movlw	41
  9756  0035A6  6E03               	movwf	(??_toggle_light+1)^0,c
  9757  0035A8  0E96               	movlw	150
  9758  0035AA  6E02               	movwf	??_toggle_light^0,c
  9759  0035AC  0E7F               	movlw	127
  9760  0035AE                     u5957:
  9761  0035AE  2EE8               	decfsz	wreg,f,c
  9762  0035B0  D7FE               	bra	u5957
  9763  0035B2  2E02               	decfsz	??_toggle_light^0,f,c
  9764  0035B4  D7FC               	bra	u5957
  9765  0035B6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9766  0035B8  D7FA               	bra	u5957
  9767  0035BA  F000               	nop	
  9768  0035BC                     l4512:
  9769                           
  9770                           ;color.c: 46:         if (lightnumber == 3){
  9771  0035BC  0E03               	movlw	3
  9772  0035BE  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9773  0035C0  A4D8               	btfss	status,2,c
  9774  0035C2  EFE5  F01A         	goto	u4391
  9775  0035C6  EFE7  F01A         	goto	u4390
  9776  0035CA                     u4391:
  9777  0035CA  EF23  F01B         	goto	l4520
  9778  0035CE                     u4390:
  9779  0035CE                     
  9780                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9781  0035CE  A67C               	btfss	124,3,c	;volatile
  9782  0035D0  EFEC  F01A         	goto	u4401
  9783  0035D4  EFF0  F01A         	goto	u4400
  9784  0035D8                     u4401:
  9785  0035D8  6A02               	clrf	??_toggle_light^0,c
  9786  0035DA  2A02               	incf	??_toggle_light^0,f,c
  9787  0035DC  EFF1  F01A         	goto	u4418
  9788  0035E0                     u4400:
  9789  0035E0  6A02               	clrf	??_toggle_light^0,c
  9790  0035E2                     u4418:
  9791  0035E2  4602               	rlncf	??_toggle_light^0,f,c
  9792  0035E4  4602               	rlncf	??_toggle_light^0,f,c
  9793  0035E6  4602               	rlncf	??_toggle_light^0,f,c
  9794  0035E8  507C               	movf	124,w,c	;volatile
  9795  0035EA  1802               	xorwf	??_toggle_light^0,w,c
  9796  0035EC  0BF7               	andlw	-9
  9797  0035EE  1802               	xorwf	??_toggle_light^0,w,c
  9798  0035F0  6E7C               	movwf	124,c	;volatile
  9799  0035F2                     
  9800                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9801  0035F2  0E29               	movlw	41
  9802  0035F4  6E03               	movwf	(??_toggle_light+1)^0,c
  9803  0035F6  0E96               	movlw	150
  9804  0035F8  6E02               	movwf	??_toggle_light^0,c
  9805  0035FA  0E7F               	movlw	127
  9806  0035FC                     u5967:
  9807  0035FC  2EE8               	decfsz	wreg,f,c
  9808  0035FE  D7FE               	bra	u5967
  9809  003600  2E02               	decfsz	??_toggle_light^0,f,c
  9810  003602  D7FC               	bra	u5967
  9811  003604  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9812  003606  D7FA               	bra	u5967
  9813  003608  F000               	nop	
  9814  00360A                     
  9815                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9816  00360A  A67C               	btfss	124,3,c	;volatile
  9817  00360C  EF0A  F01B         	goto	u4421
  9818  003610  EF0E  F01B         	goto	u4420
  9819  003614                     u4421:
  9820  003614  6A02               	clrf	??_toggle_light^0,c
  9821  003616  2A02               	incf	??_toggle_light^0,f,c
  9822  003618  EF0F  F01B         	goto	u4438
  9823  00361C                     u4420:
  9824  00361C  6A02               	clrf	??_toggle_light^0,c
  9825  00361E                     u4438:
  9826  00361E  4602               	rlncf	??_toggle_light^0,f,c
  9827  003620  4602               	rlncf	??_toggle_light^0,f,c
  9828  003622  4602               	rlncf	??_toggle_light^0,f,c
  9829  003624  507C               	movf	124,w,c	;volatile
  9830  003626  1802               	xorwf	??_toggle_light^0,w,c
  9831  003628  0BF7               	andlw	-9
  9832  00362A  1802               	xorwf	??_toggle_light^0,w,c
  9833  00362C  6E7C               	movwf	124,c	;volatile
  9834                           
  9835                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9836  00362E  0E29               	movlw	41
  9837  003630  6E03               	movwf	(??_toggle_light+1)^0,c
  9838  003632  0E96               	movlw	150
  9839  003634  6E02               	movwf	??_toggle_light^0,c
  9840  003636  0E7F               	movlw	127
  9841  003638                     u5977:
  9842  003638  2EE8               	decfsz	wreg,f,c
  9843  00363A  D7FE               	bra	u5977
  9844  00363C  2E02               	decfsz	??_toggle_light^0,f,c
  9845  00363E  D7FC               	bra	u5977
  9846  003640  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9847  003642  D7FA               	bra	u5977
  9848  003644  F000               	nop	
  9849  003646                     l4520:
  9850                           
  9851                           ;color.c: 52:         if (lightnumber == 4){
  9852  003646  0E04               	movlw	4
  9853  003648  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9854  00364A  A4D8               	btfss	status,2,c
  9855  00364C  EF2A  F01B         	goto	u4441
  9856  003650  EF2C  F01B         	goto	u4440
  9857  003654                     u4441:
  9858  003654  EF62  F01B         	goto	l4528
  9859  003658                     u4440:
  9860  003658                     
  9861                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9862  003658  A07E               	btfss	126,0,c	;volatile
  9863  00365A  EF31  F01B         	goto	u4451
  9864  00365E  EF35  F01B         	goto	u4450
  9865  003662                     u4451:
  9866  003662  6A02               	clrf	??_toggle_light^0,c
  9867  003664  2A02               	incf	??_toggle_light^0,f,c
  9868  003666  EF36  F01B         	goto	u4468
  9869  00366A                     u4450:
  9870  00366A  6A02               	clrf	??_toggle_light^0,c
  9871  00366C                     u4468:
  9872  00366C  507E               	movf	126,w,c	;volatile
  9873  00366E  1802               	xorwf	??_toggle_light^0,w,c
  9874  003670  0BFE               	andlw	-2
  9875  003672  1802               	xorwf	??_toggle_light^0,w,c
  9876  003674  6E7E               	movwf	126,c	;volatile
  9877  003676                     
  9878                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9879  003676  0E29               	movlw	41
  9880  003678  6E03               	movwf	(??_toggle_light+1)^0,c
  9881  00367A  0E96               	movlw	150
  9882  00367C  6E02               	movwf	??_toggle_light^0,c
  9883  00367E  0E7F               	movlw	127
  9884  003680                     u5987:
  9885  003680  2EE8               	decfsz	wreg,f,c
  9886  003682  D7FE               	bra	u5987
  9887  003684  2E02               	decfsz	??_toggle_light^0,f,c
  9888  003686  D7FC               	bra	u5987
  9889  003688  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9890  00368A  D7FA               	bra	u5987
  9891  00368C  F000               	nop	
  9892  00368E                     
  9893                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9894  00368E  A07E               	btfss	126,0,c	;volatile
  9895  003690  EF4C  F01B         	goto	u4471
  9896  003694  EF50  F01B         	goto	u4470
  9897  003698                     u4471:
  9898  003698  6A02               	clrf	??_toggle_light^0,c
  9899  00369A  2A02               	incf	??_toggle_light^0,f,c
  9900  00369C  EF51  F01B         	goto	u4488
  9901  0036A0                     u4470:
  9902  0036A0  6A02               	clrf	??_toggle_light^0,c
  9903  0036A2                     u4488:
  9904  0036A2  507E               	movf	126,w,c	;volatile
  9905  0036A4  1802               	xorwf	??_toggle_light^0,w,c
  9906  0036A6  0BFE               	andlw	-2
  9907  0036A8  1802               	xorwf	??_toggle_light^0,w,c
  9908  0036AA  6E7E               	movwf	126,c	;volatile
  9909                           
  9910                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9911  0036AC  0E29               	movlw	41
  9912  0036AE  6E03               	movwf	(??_toggle_light+1)^0,c
  9913  0036B0  0E96               	movlw	150
  9914  0036B2  6E02               	movwf	??_toggle_light^0,c
  9915  0036B4  0E7F               	movlw	127
  9916  0036B6                     u5997:
  9917  0036B6  2EE8               	decfsz	wreg,f,c
  9918  0036B8  D7FE               	bra	u5997
  9919  0036BA  2E02               	decfsz	??_toggle_light^0,f,c
  9920  0036BC  D7FC               	bra	u5997
  9921  0036BE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9922  0036C0  D7FA               	bra	u5997
  9923  0036C2  F000               	nop	
  9924  0036C4                     l4528:
  9925                           
  9926                           ;color.c: 58:         if (lightnumber == 3){
  9927  0036C4  0E03               	movlw	3
  9928  0036C6  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9929  0036C8  A4D8               	btfss	status,2,c
  9930  0036CA  EF69  F01B         	goto	u4491
  9931  0036CE  EF6B  F01B         	goto	u4490
  9932  0036D2                     u4491:
  9933  0036D2  EFA1  F01B         	goto	l4536
  9934  0036D6                     u4490:
  9935  0036D6                     
  9936                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9937  0036D6  A080               	btfss	128,0,c	;volatile
  9938  0036D8  EF70  F01B         	goto	u4501
  9939  0036DC  EF74  F01B         	goto	u4500
  9940  0036E0                     u4501:
  9941  0036E0  6A02               	clrf	??_toggle_light^0,c
  9942  0036E2  2A02               	incf	??_toggle_light^0,f,c
  9943  0036E4  EF75  F01B         	goto	u4518
  9944  0036E8                     u4500:
  9945  0036E8  6A02               	clrf	??_toggle_light^0,c
  9946  0036EA                     u4518:
  9947  0036EA  5080               	movf	128,w,c	;volatile
  9948  0036EC  1802               	xorwf	??_toggle_light^0,w,c
  9949  0036EE  0BFE               	andlw	-2
  9950  0036F0  1802               	xorwf	??_toggle_light^0,w,c
  9951  0036F2  6E80               	movwf	128,c	;volatile
  9952  0036F4                     
  9953                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9954  0036F4  0E29               	movlw	41
  9955  0036F6  6E03               	movwf	(??_toggle_light+1)^0,c
  9956  0036F8  0E96               	movlw	150
  9957  0036FA  6E02               	movwf	??_toggle_light^0,c
  9958  0036FC  0E7F               	movlw	127
  9959  0036FE                     u6007:
  9960  0036FE  2EE8               	decfsz	wreg,f,c
  9961  003700  D7FE               	bra	u6007
  9962  003702  2E02               	decfsz	??_toggle_light^0,f,c
  9963  003704  D7FC               	bra	u6007
  9964  003706  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9965  003708  D7FA               	bra	u6007
  9966  00370A  F000               	nop	
  9967  00370C                     
  9968                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  9969  00370C  A080               	btfss	128,0,c	;volatile
  9970  00370E  EF8B  F01B         	goto	u4521
  9971  003712  EF8F  F01B         	goto	u4520
  9972  003716                     u4521:
  9973  003716  6A02               	clrf	??_toggle_light^0,c
  9974  003718  2A02               	incf	??_toggle_light^0,f,c
  9975  00371A  EF90  F01B         	goto	u4538
  9976  00371E                     u4520:
  9977  00371E  6A02               	clrf	??_toggle_light^0,c
  9978  003720                     u4538:
  9979  003720  5080               	movf	128,w,c	;volatile
  9980  003722  1802               	xorwf	??_toggle_light^0,w,c
  9981  003724  0BFE               	andlw	-2
  9982  003726  1802               	xorwf	??_toggle_light^0,w,c
  9983  003728  6E80               	movwf	128,c	;volatile
  9984                           
  9985                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9986  00372A  0E29               	movlw	41
  9987  00372C  6E03               	movwf	(??_toggle_light+1)^0,c
  9988  00372E  0E96               	movlw	150
  9989  003730  6E02               	movwf	??_toggle_light^0,c
  9990  003732  0E7F               	movlw	127
  9991  003734                     u6017:
  9992  003734  2EE8               	decfsz	wreg,f,c
  9993  003736  D7FE               	bra	u6017
  9994  003738  2E02               	decfsz	??_toggle_light^0,f,c
  9995  00373A  D7FC               	bra	u6017
  9996  00373C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9997  00373E  D7FA               	bra	u6017
  9998  003740  F000               	nop	
  9999  003742                     l4536:
 10000                           
 10001                           ;color.c: 64:     }
 10002  003742  2A04               	incf	toggle_light@i^0,f,c
 10003  003744                     l74:
 10004  003744  5001               	movf	toggle_light@toggletime^0,w,c
 10005  003746  5C04               	subwf	toggle_light@i^0,w,c
 10006  003748  A0D8               	btfss	status,0,c
 10007  00374A  EFA9  F01B         	goto	u4541
 10008  00374E  EFAB  F01B         	goto	u4540
 10009  003752                     u4541:
 10010  003752  EF5D  F01A         	goto	l4496
 10011  003756                     u4540:
 10012  003756  0012               	return		;funcret
 10013  003758                     __end_of_toggle_light:
 10014                           	callstack 0
 10015                           
 10016 ;; *************** function _short_reverse *****************
 10017 ;; Defined at:
 10018 ;;		line 183 in file "dc_motor.c"
 10019 ;; Parameters:    Size  Location     Type
 10020 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10021 ;;		 -> main@motorL(10), 
 10022 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10023 ;;		 -> main@motorR(10), 
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  1    wreg      void 
 10028 ;; Registers used:
 10029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10037 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10038 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10039 ;;Total ram usage:        6 bytes
 10040 ;; Hardware stack levels used: 1
 10041 ;; Hardware stack levels required when called: 5
 10042 ;; This function calls:
 10043 ;;		_fullSpeedBack
 10044 ;;		_stop
 10045 ;; This function is called by:
 10046 ;;		_action
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           	psect	text48
 10051  005834                     __ptext48:
 10052                           	callstack 0
 10053  005834                     _short_reverse:
 10054                           	callstack 24
 10055  005834                     
 10056                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
 10057  005834  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10058  005838  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10059  00583C  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10060  005840  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10061  005844  EC60  F028         	call	_fullSpeedBack	;wreg free
 10062  005848                     
 10063                           ;dc_motor.c: 185:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10064  005848  0E29               	movlw	41
 10065  00584A  6E2B               	movwf	(??_short_reverse+1)^0,c
 10066  00584C  0E96               	movlw	150
 10067  00584E  6E2A               	movwf	??_short_reverse^0,c
 10068  005850  0E7F               	movlw	127
 10069  005852                     u6027:
 10070  005852  2EE8               	decfsz	wreg,f,c
 10071  005854  D7FE               	bra	u6027
 10072  005856  2E2A               	decfsz	??_short_reverse^0,f,c
 10073  005858  D7FC               	bra	u6027
 10074  00585A  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10075  00585C  D7FA               	bra	u6027
 10076  00585E  F000               	nop	
 10077  005860                     
 10078                           ;dc_motor.c: 186:     stop(mL,mR);
 10079  005860  C026  F01A         	movff	short_reverse@mL,stop@mL
 10080  005864  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10081  005868  C028  F01C         	movff	short_reverse@mR,stop@mR
 10082  00586C  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10083  005870  ECC0  F028         	call	_stop	;wreg free
 10084  005874  0012               	return		;funcret
 10085  005876                     __end_of_short_reverse:
 10086                           	callstack 0
 10087                           
 10088 ;; *************** function _goback *****************
 10089 ;; Defined at:
 10090 ;;		line 120 in file "movement.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;  mL              2   87[COMRAM] PTR struct DC_motor
 10093 ;;		 -> main@motorL(10), 
 10094 ;;  mR              2   89[COMRAM] PTR struct DC_motor
 10095 ;;		 -> main@motorR(10), 
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;  i               2  126[BANK0 ] unsigned int 
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;Total ram usage:        8 bytes
 10112 ;; Hardware stack levels used: 1
 10113 ;; Hardware stack levels required when called: 10
 10114 ;; This function calls:
 10115 ;;		_color_predict
 10116 ;;		_fullSpeedAhead
 10117 ;;		_reverse_square
 10118 ;;		_stop
 10119 ;;		_turnLeft
 10120 ;;		_turnRight
 10121 ;; This function is called by:
 10122 ;;		_action
 10123 ;; This function uses a non-reentrant model
 10124 ;;
 10125                           
 10126                           	psect	text49
 10127  002C02                     __ptext49:
 10128                           	callstack 0
 10129  002C02                     _goback:
 10130                           	callstack 19
 10131  002C02                     
 10132                           ;movement.c: 120: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 121:
      +                           { turnRight(mL,mR,180);
 10133  002C02  C058  F020         	movff	goback@mL,turnRight@mL
 10134  002C06  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10135  002C0A  C05A  F022         	movff	goback@mR,turnRight@mR
 10136  002C0E  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10137  002C12  0EB4               	movlw	180
 10138  002C14  6E24               	movwf	turnRight@angle_right^0,c
 10139  002C16  EC07  F021         	call	_turnRight	;wreg free
 10140  002C1A                     l5210:
 10141                           
 10142                           ;movement.c: 122:     array_index--;
 10143  002C1A  0101               	movlb	1	; () banked
 10144  002C1C  0763               	decf	_array_index& (0+255),f,b
 10145  002C1E                     l5212:
 10146                           
 10147                           ; BSR set to: 1
 10148                           ;movement.c: 124:         color_predict(array_index);
 10149  002C1E  5163               	movf	_array_index& (0+255),w,b
 10150  002C20  EC1E  F02D         	call	_color_predict
 10151  002C24                     
 10152                           ;movement.c: 125:         color_predict(memory[array_index]);
 10153  002C24  0101               	movlb	1	; () banked
 10154  002C26  5163               	movf	_array_index& (0+255),w,b
 10155  002C28  0D02               	mullw	2
 10156  002C2A  0E00               	movlw	low _memory
 10157  002C2C  24F3               	addwf	243,w,c
 10158  002C2E  6ED9               	movwf	fsr2l,c
 10159  002C30  0E01               	movlw	high _memory
 10160  002C32  20F4               	addwfc	prodh,w,c
 10161  002C34  6EDA               	movwf	fsr2h,c
 10162  002C36  50DF               	movf	indf2,w,c
 10163  002C38  EC1E  F02D         	call	_color_predict
 10164  002C3C                     
 10165                           ;movement.c: 126:         color_predict(200);
 10166  002C3C  0EC8               	movlw	200
 10167  002C3E  EC1E  F02D         	call	_color_predict
 10168  002C42                     
 10169                           ;movement.c: 127:         fullSpeedAhead(mL,mR);
 10170  002C42  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10171  002C46  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10172  002C4A  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10173  002C4E  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10174  002C52  EC1E  F029         	call	_fullSpeedAhead	;wreg free
 10175  002C56                     
 10176                           ;movement.c: 128:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10177  002C56  0E00               	movlw	0
 10178  002C58  0100               	movlb	0	; () banked
 10179  002C5A  6FDF               	movwf	(goback@i+1)& (0+255),b
 10180  002C5C  0E00               	movlw	0
 10181  002C5E  6FDE               	movwf	goback@i& (0+255),b
 10182  002C60  EF41  F016         	goto	l5226
 10183  002C64                     l5222:
 10184                           
 10185                           ; BSR set to: 0
 10186  002C64  0E52               	movlw	82
 10187  002C66  6E5D               	movwf	(??_goback+1)^0,c
 10188  002C68  0E2B               	movlw	43
 10189  002C6A  6E5C               	movwf	??_goback^0,c
 10190  002C6C  0E00               	movlw	0
 10191  002C6E                     u6037:
 10192  002C6E  2EE8               	decfsz	wreg,f,c
 10193  002C70  D7FE               	bra	u6037
 10194  002C72  2E5C               	decfsz	??_goback^0,f,c
 10195  002C74  D7FC               	bra	u6037
 10196  002C76  2E5D               	decfsz	(??_goback+1)^0,f,c
 10197  002C78  D7FA               	bra	u6037
 10198  002C7A  D000               	nop2	
 10199  002C7C  0100               	movlb	0	; () banked
 10200  002C7E  4BDE               	infsnz	goback@i& (0+255),f,b
 10201  002C80  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10202  002C82                     l5226:
 10203                           
 10204                           ; BSR set to: 0
 10205  002C82  0101               	movlb	1	; () banked
 10206  002C84  5163               	movf	_array_index& (0+255),w,b
 10207  002C86  0D02               	mullw	2
 10208  002C88  0E00               	movlw	low _memory
 10209  002C8A  24F3               	addwf	243,w,c
 10210  002C8C  6ED9               	movwf	fsr2l,c
 10211  002C8E  0E01               	movlw	high _memory
 10212  002C90  20F4               	addwfc	prodh,w,c
 10213  002C92  6EDA               	movwf	fsr2h,c
 10214  002C94  50DE               	movf	postinc2,w,c
 10215  002C96  0100               	movlb	0	; () banked
 10216  002C98  5DDE               	subwf	goback@i& (0+255),w,b
 10217  002C9A  50DE               	movf	postinc2,w,c
 10218  002C9C  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10219  002C9E  A0D8               	btfss	status,0,c
 10220  002CA0  EF54  F016         	goto	u5231
 10221  002CA4  EF56  F016         	goto	u5230
 10222  002CA8                     u5231:
 10223  002CA8  EF32  F016         	goto	l5222
 10224  002CAC                     u5230:
 10225  002CAC                     
 10226                           ; BSR set to: 0
 10227                           ;movement.c: 129:         stop(mL,mR);
 10228  002CAC  C058  F01A         	movff	goback@mL,stop@mL
 10229  002CB0  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10230  002CB4  C05A  F01C         	movff	goback@mR,stop@mR
 10231  002CB8  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10232  002CBC  ECC0  F028         	call	_stop	;wreg free
 10233  002CC0                     
 10234                           ;movement.c: 130:         if (array_index == 0){break;}
 10235  002CC0  0101               	movlb	1	; () banked
 10236  002CC2  5163               	movf	_array_index& (0+255),w,b
 10237  002CC4  A4D8               	btfss	status,2,c
 10238  002CC6  EF67  F016         	goto	u5241
 10239  002CCA  EF69  F016         	goto	u5240
 10240  002CCE                     u5241:
 10241  002CCE  EF6B  F016         	goto	l5234
 10242  002CD2                     u5240:
 10243  002CD2  EF72  F017         	goto	l5284
 10244  002CD6                     l5234:
 10245                           
 10246                           ; BSR set to: 1
 10247                           ;movement.c: 131:         array_index--;
 10248  002CD6  0763               	decf	_array_index& (0+255),f,b
 10249  002CD8                     
 10250                           ; BSR set to: 1
 10251                           ;movement.c: 132:         color_predict(array_index);
 10252  002CD8  5163               	movf	_array_index& (0+255),w,b
 10253  002CDA  EC1E  F02D         	call	_color_predict
 10254  002CDE                     
 10255                           ;movement.c: 133:         color_predict(memory[array_index]);
 10256  002CDE  0101               	movlb	1	; () banked
 10257  002CE0  5163               	movf	_array_index& (0+255),w,b
 10258  002CE2  0D02               	mullw	2
 10259  002CE4  0E00               	movlw	low _memory
 10260  002CE6  24F3               	addwf	243,w,c
 10261  002CE8  6ED9               	movwf	fsr2l,c
 10262  002CEA  0E01               	movlw	high _memory
 10263  002CEC  20F4               	addwfc	prodh,w,c
 10264  002CEE  6EDA               	movwf	fsr2h,c
 10265  002CF0  50DF               	movf	indf2,w,c
 10266  002CF2  EC1E  F02D         	call	_color_predict
 10267  002CF6                     
 10268                           ;movement.c: 134:         color_predict(200);
 10269  002CF6  0EC8               	movlw	200
 10270  002CF8  EC1E  F02D         	call	_color_predict
 10271  002CFC                     
 10272                           ;movement.c: 135:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10273  002CFC  0101               	movlb	1	; () banked
 10274  002CFE  5163               	movf	_array_index& (0+255),w,b
 10275  002D00  0D02               	mullw	2
 10276  002D02  0E00               	movlw	low _memory
 10277  002D04  24F3               	addwf	243,w,c
 10278  002D06  6ED9               	movwf	fsr2l,c
 10279  002D08  0E01               	movlw	high _memory
 10280  002D0A  20F4               	addwfc	prodh,w,c
 10281  002D0C  6EDA               	movwf	fsr2h,c
 10282  002D0E  04DE               	decf	postinc2,w,c
 10283  002D10  10DE               	iorwf	postinc2,w,c
 10284  002D12  A4D8               	btfss	status,2,c
 10285  002D14  EF8E  F016         	goto	u5251
 10286  002D18  EF90  F016         	goto	u5250
 10287  002D1C                     u5251:
 10288  002D1C  EF9E  F016         	goto	l5248
 10289  002D20                     u5250:
 10290  002D20                     
 10291                           ; BSR set to: 1
 10292  002D20  C058  F020         	movff	goback@mL,turnLeft@mL
 10293  002D24  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10294  002D28  C05A  F022         	movff	goback@mR,turnLeft@mR
 10295  002D2C  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10296  002D30  0E5A               	movlw	90
 10297  002D32  6E24               	movwf	turnLeft@angle_left^0,c
 10298  002D34  ECCE  F021         	call	_turnLeft	;wreg free
 10299  002D38  0101               	movlb	1	; () banked
 10300  002D3A  0763               	decf	_array_index& (0+255),f,b
 10301  002D3C                     l5248:
 10302                           
 10303                           ; BSR set to: 1
 10304                           ;movement.c: 136:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 10305  002D3C  5163               	movf	_array_index& (0+255),w,b
 10306  002D3E  0D02               	mullw	2
 10307  002D40  0E00               	movlw	low _memory
 10308  002D42  24F3               	addwf	243,w,c
 10309  002D44  6ED9               	movwf	fsr2l,c
 10310  002D46  0E01               	movlw	high _memory
 10311  002D48  20F4               	addwfc	prodh,w,c
 10312  002D4A  6EDA               	movwf	fsr2h,c
 10313  002D4C  0E02               	movlw	2
 10314  002D4E  18DE               	xorwf	postinc2,w,c
 10315  002D50  10DE               	iorwf	postinc2,w,c
 10316  002D52  A4D8               	btfss	status,2,c
 10317  002D54  EFAE  F016         	goto	u5261
 10318  002D58  EFB0  F016         	goto	u5260
 10319  002D5C                     u5261:
 10320  002D5C  EFBE  F016         	goto	l5254
 10321  002D60                     u5260:
 10322  002D60                     
 10323                           ; BSR set to: 1
 10324  002D60  C058  F020         	movff	goback@mL,turnRight@mL
 10325  002D64  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10326  002D68  C05A  F022         	movff	goback@mR,turnRight@mR
 10327  002D6C  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10328  002D70  0E5A               	movlw	90
 10329  002D72  6E24               	movwf	turnRight@angle_right^0,c
 10330  002D74  EC07  F021         	call	_turnRight	;wreg free
 10331  002D78  0101               	movlb	1	; () banked
 10332  002D7A  0763               	decf	_array_index& (0+255),f,b
 10333  002D7C                     l5254:
 10334                           
 10335                           ; BSR set to: 1
 10336                           ;movement.c: 137:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 10337  002D7C  5163               	movf	_array_index& (0+255),w,b
 10338  002D7E  0D02               	mullw	2
 10339  002D80  0E00               	movlw	low _memory
 10340  002D82  24F3               	addwf	243,w,c
 10341  002D84  6ED9               	movwf	fsr2l,c
 10342  002D86  0E01               	movlw	high _memory
 10343  002D88  20F4               	addwfc	prodh,w,c
 10344  002D8A  6EDA               	movwf	fsr2h,c
 10345  002D8C  0E03               	movlw	3
 10346  002D8E  18DE               	xorwf	postinc2,w,c
 10347  002D90  10DE               	iorwf	postinc2,w,c
 10348  002D92  A4D8               	btfss	status,2,c
 10349  002D94  EFCE  F016         	goto	u5271
 10350  002D98  EFD0  F016         	goto	u5270
 10351  002D9C                     u5271:
 10352  002D9C  EFDE  F016         	goto	l5260
 10353  002DA0                     u5270:
 10354  002DA0                     
 10355                           ; BSR set to: 1
 10356  002DA0  C058  F020         	movff	goback@mL,turnLeft@mL
 10357  002DA4  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10358  002DA8  C05A  F022         	movff	goback@mR,turnLeft@mR
 10359  002DAC  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10360  002DB0  0EB4               	movlw	180
 10361  002DB2  6E24               	movwf	turnLeft@angle_left^0,c
 10362  002DB4  ECCE  F021         	call	_turnLeft	;wreg free
 10363  002DB8  0101               	movlb	1	; () banked
 10364  002DBA  0763               	decf	_array_index& (0+255),f,b
 10365  002DBC                     l5260:
 10366                           
 10367                           ; BSR set to: 1
 10368                           ;movement.c: 138:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 10369  002DBC  5163               	movf	_array_index& (0+255),w,b
 10370  002DBE  0D02               	mullw	2
 10371  002DC0  0E00               	movlw	low _memory
 10372  002DC2  24F3               	addwf	243,w,c
 10373  002DC4  6ED9               	movwf	fsr2l,c
 10374  002DC6  0E01               	movlw	high _memory
 10375  002DC8  20F4               	addwfc	prodh,w,c
 10376  002DCA  6EDA               	movwf	fsr2h,c
 10377  002DCC  0E04               	movlw	4
 10378  002DCE  18DE               	xorwf	postinc2,w,c
 10379  002DD0  10DE               	iorwf	postinc2,w,c
 10380  002DD2  A4D8               	btfss	status,2,c
 10381  002DD4  EFEE  F016         	goto	u5281
 10382  002DD8  EFF0  F016         	goto	u5280
 10383  002DDC                     u5281:
 10384  002DDC  EF08  F017         	goto	l5266
 10385  002DE0                     u5280:
 10386  002DE0                     
 10387                           ; BSR set to: 1
 10388  002DE0  C058  F026         	movff	goback@mL,reverse_square@mL
 10389  002DE4  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10390  002DE8  C05A  F028         	movff	goback@mR,reverse_square@mR
 10391  002DEC  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10392  002DF0  EC3B  F02C         	call	_reverse_square	;wreg free
 10393  002DF4  C058  F020         	movff	goback@mL,turnLeft@mL
 10394  002DF8  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10395  002DFC  C05A  F022         	movff	goback@mR,turnLeft@mR
 10396  002E00  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10397  002E04  0E5A               	movlw	90
 10398  002E06  6E24               	movwf	turnLeft@angle_left^0,c
 10399  002E08  ECCE  F021         	call	_turnLeft	;wreg free
 10400  002E0C  0101               	movlb	1	; () banked
 10401  002E0E  0763               	decf	_array_index& (0+255),f,b
 10402  002E10                     l5266:
 10403                           
 10404                           ; BSR set to: 1
 10405                           ;movement.c: 139:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 10406  002E10  5163               	movf	_array_index& (0+255),w,b
 10407  002E12  0D02               	mullw	2
 10408  002E14  0E00               	movlw	low _memory
 10409  002E16  24F3               	addwf	243,w,c
 10410  002E18  6ED9               	movwf	fsr2l,c
 10411  002E1A  0E01               	movlw	high _memory
 10412  002E1C  20F4               	addwfc	prodh,w,c
 10413  002E1E  6EDA               	movwf	fsr2h,c
 10414  002E20  0E05               	movlw	5
 10415  002E22  18DE               	xorwf	postinc2,w,c
 10416  002E24  10DE               	iorwf	postinc2,w,c
 10417  002E26  A4D8               	btfss	status,2,c
 10418  002E28  EF18  F017         	goto	u5291
 10419  002E2C  EF1A  F017         	goto	u5290
 10420  002E30                     u5291:
 10421  002E30  EF32  F017         	goto	l5272
 10422  002E34                     u5290:
 10423  002E34                     
 10424                           ; BSR set to: 1
 10425  002E34  C058  F026         	movff	goback@mL,reverse_square@mL
 10426  002E38  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10427  002E3C  C05A  F028         	movff	goback@mR,reverse_square@mR
 10428  002E40  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10429  002E44  EC3B  F02C         	call	_reverse_square	;wreg free
 10430  002E48  C058  F020         	movff	goback@mL,turnRight@mL
 10431  002E4C  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10432  002E50  C05A  F022         	movff	goback@mR,turnRight@mR
 10433  002E54  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10434  002E58  0E5A               	movlw	90
 10435  002E5A  6E24               	movwf	turnRight@angle_right^0,c
 10436  002E5C  EC07  F021         	call	_turnRight	;wreg free
 10437  002E60  0101               	movlb	1	; () banked
 10438  002E62  0763               	decf	_array_index& (0+255),f,b
 10439  002E64                     l5272:
 10440                           
 10441                           ; BSR set to: 1
 10442                           ;movement.c: 140:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 10443  002E64  5163               	movf	_array_index& (0+255),w,b
 10444  002E66  0D02               	mullw	2
 10445  002E68  0E00               	movlw	low _memory
 10446  002E6A  24F3               	addwf	243,w,c
 10447  002E6C  6ED9               	movwf	fsr2l,c
 10448  002E6E  0E01               	movlw	high _memory
 10449  002E70  20F4               	addwfc	prodh,w,c
 10450  002E72  6EDA               	movwf	fsr2h,c
 10451  002E74  0E06               	movlw	6
 10452  002E76  18DE               	xorwf	postinc2,w,c
 10453  002E78  10DE               	iorwf	postinc2,w,c
 10454  002E7A  A4D8               	btfss	status,2,c
 10455  002E7C  EF42  F017         	goto	u5301
 10456  002E80  EF44  F017         	goto	u5300
 10457  002E84                     u5301:
 10458  002E84  EF52  F017         	goto	l5278
 10459  002E88                     u5300:
 10460  002E88                     
 10461                           ; BSR set to: 1
 10462  002E88  C058  F020         	movff	goback@mL,turnLeft@mL
 10463  002E8C  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10464  002E90  C05A  F022         	movff	goback@mR,turnLeft@mR
 10465  002E94  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10466  002E98  0E87               	movlw	135
 10467  002E9A  6E24               	movwf	turnLeft@angle_left^0,c
 10468  002E9C  ECCE  F021         	call	_turnLeft	;wreg free
 10469  002EA0  0101               	movlb	1	; () banked
 10470  002EA2  0763               	decf	_array_index& (0+255),f,b
 10471  002EA4                     l5278:
 10472                           
 10473                           ; BSR set to: 1
 10474                           ;movement.c: 141:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 10475  002EA4  5163               	movf	_array_index& (0+255),w,b
 10476  002EA6  0D02               	mullw	2
 10477  002EA8  0E00               	movlw	low _memory
 10478  002EAA  24F3               	addwf	243,w,c
 10479  002EAC  6ED9               	movwf	fsr2l,c
 10480  002EAE  0E01               	movlw	high _memory
 10481  002EB0  20F4               	addwfc	prodh,w,c
 10482  002EB2  6EDA               	movwf	fsr2h,c
 10483  002EB4  0E07               	movlw	7
 10484  002EB6  18DE               	xorwf	postinc2,w,c
 10485  002EB8  10DE               	iorwf	postinc2,w,c
 10486  002EBA  A4D8               	btfss	status,2,c
 10487  002EBC  EF62  F017         	goto	u5311
 10488  002EC0  EF64  F017         	goto	u5310
 10489  002EC4                     u5311:
 10490  002EC4  EF0F  F016         	goto	l5212
 10491  002EC8                     u5310:
 10492  002EC8                     
 10493                           ; BSR set to: 1
 10494  002EC8  C058  F020         	movff	goback@mL,turnRight@mL
 10495  002ECC  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10496  002ED0  C05A  F022         	movff	goback@mR,turnRight@mR
 10497  002ED4  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10498  002ED8  0E79               	movlw	121
 10499  002EDA  6E24               	movwf	turnRight@angle_right^0,c
 10500  002EDC  EC07  F021         	call	_turnRight	;wreg free
 10501  002EE0  EF0D  F016         	goto	l5210
 10502  002EE4                     l5284:
 10503  002EE4  C058  F01A         	movff	goback@mL,stop@mL
 10504  002EE8  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10505  002EEC  C05A  F01C         	movff	goback@mR,stop@mR
 10506  002EF0  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10507  002EF4  ECC0  F028         	call	_stop	;wreg free
 10508  002EF8  EF72  F017         	goto	l5284
 10509  002EFC  0012               	return		;funcret
 10510  002EFE                     __end_of_goback:
 10511                           	callstack 0
 10512                           
 10513 ;; *************** function _turnRight *****************
 10514 ;; Defined at:
 10515 ;;		line 122 in file "dc_motor.c"
 10516 ;; Parameters:    Size  Location     Type
 10517 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10518 ;;		 -> main@motorL(10), 
 10519 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10520 ;;		 -> main@motorR(10), 
 10521 ;;  angle_right     1   35[COMRAM] unsigned char 
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;  i               2   45[COMRAM] unsigned int 
 10524 ;;  i               2   43[COMRAM] unsigned int 
 10525 ;;  i               2   41[COMRAM] unsigned int 
 10526 ;;  delay           2   47[COMRAM] unsigned int 
 10527 ;;  delay_180       2   39[COMRAM] unsigned int 
 10528 ;;  delay_135       2   37[COMRAM] unsigned int 
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10538 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10539 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10540 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10541 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10542 ;;Total ram usage:       18 bytes
 10543 ;; Hardware stack levels used: 1
 10544 ;; Hardware stack levels required when called: 4
 10545 ;; This function calls:
 10546 ;;		_setMotorPWM
 10547 ;;		_stop
 10548 ;; This function is called by:
 10549 ;;		_action
 10550 ;;		_test_action
 10551 ;;		_goback
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           	psect	text50
 10556  00420E                     __ptext50:
 10557                           	callstack 0
 10558  00420E                     _turnRight:
 10559                           	callstack 25
 10560  00420E                     
 10561                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10562  00420E  EE20 F001          	lfsr	2,1
 10563  004212  5020               	movf	turnRight@mL^0,w,c
 10564  004214  26D9               	addwf	fsr2l,f,c
 10565  004216  5021               	movf	(turnRight@mL+1)^0,w,c
 10566  004218  22DA               	addwfc	fsr2h,f,c
 10567  00421A  0E01               	movlw	1
 10568  00421C  6EDF               	movwf	indf2,c
 10569                           
 10570                           ;dc_motor.c: 125:     mR->direction=1;
 10571  00421E  EE20 F001          	lfsr	2,1
 10572  004222  5022               	movf	turnRight@mR^0,w,c
 10573  004224  26D9               	addwf	fsr2l,f,c
 10574  004226  5023               	movf	(turnRight@mR+1)^0,w,c
 10575  004228  22DA               	addwfc	fsr2h,f,c
 10576  00422A  0E01               	movlw	1
 10577  00422C  6EDF               	movwf	indf2,c
 10578                           
 10579                           ;dc_motor.c: 126:     while (mL->power <25){
 10580  00422E  EF38  F021         	goto	l4636
 10581  004232                     l4628:
 10582                           
 10583                           ;dc_motor.c: 127:         mL->power += 5;
 10584  004232  C020  FFD9         	movff	turnRight@mL,fsr2l
 10585  004236  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10586  00423A  0E05               	movlw	5
 10587  00423C  26DF               	addwf	indf2,f,c
 10588                           
 10589                           ;dc_motor.c: 128:         mR->power = 0;
 10590  00423E  C022  FFD9         	movff	turnRight@mR,fsr2l
 10591  004242  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10592  004246  0E00               	movlw	0
 10593  004248  6EDF               	movwf	indf2,c
 10594  00424A                     
 10595                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10596  00424A  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10597  00424E  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10598  004252  ECB1  F01C         	call	_setMotorPWM	;wreg free
 10599  004256                     
 10600                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10601  004256  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10602  00425A  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10603  00425E  ECB1  F01C         	call	_setMotorPWM	;wreg free
 10604  004262                     
 10605                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10606  004262  0ED0               	movlw	208
 10607  004264  6E25               	movwf	??_turnRight^0,c
 10608  004266  0ECA               	movlw	202
 10609  004268                     u6047:
 10610  004268  2EE8               	decfsz	wreg,f,c
 10611  00426A  D7FE               	bra	u6047
 10612  00426C  2E25               	decfsz	??_turnRight^0,f,c
 10613  00426E  D7FC               	bra	u6047
 10614  004270                     l4636:
 10615                           
 10616                           ;dc_motor.c: 126:     while (mL->power <25){
 10617  004270  C020  FFD9         	movff	turnRight@mL,fsr2l
 10618  004274  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10619  004278  0E18               	movlw	24
 10620  00427A  64DF               	cpfsgt	indf2,c
 10621  00427C  EF42  F021         	goto	u4641
 10622  004280  EF44  F021         	goto	u4640
 10623  004284                     u4641:
 10624  004284  EF19  F021         	goto	l4628
 10625  004288                     u4640:
 10626  004288                     
 10627                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10628  004288  5024               	movf	turnRight@angle_right^0,w,c
 10629  00428A  0101               	movlb	1	; () banked
 10630  00428C  03CE               	mulwf	_SENSITIVITY& (0+255),b
 10631  00428E  CFF3 F030          	movff	prodl,turnRight@delay
 10632  004292  CFF4 F031          	movff	prodh,turnRight@delay+1
 10633  004296                     
 10634                           ; BSR set to: 1
 10635  004296  0E0F               	movlw	15
 10636  004298  2430               	addwf	turnRight@delay^0,w,c
 10637  00429A  6E26               	movwf	turnRight@delay_135^0,c
 10638  00429C  0E00               	movlw	0
 10639  00429E  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10640  0042A0  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10641  0042A2                     
 10642                           ; BSR set to: 1
 10643  0042A2  0E0A               	movlw	10
 10644  0042A4  2430               	addwf	turnRight@delay^0,w,c
 10645  0042A6  6E28               	movwf	turnRight@delay_180^0,c
 10646  0042A8  0E00               	movlw	0
 10647  0042AA  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10648  0042AC  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10649  0042AE                     
 10650                           ; BSR set to: 1
 10651                           ;dc_motor.c: 136:     if (angle_right == 180){
 10652  0042AE  0EB4               	movlw	180
 10653  0042B0  1824               	xorwf	turnRight@angle_right^0,w,c
 10654  0042B2  A4D8               	btfss	status,2,c
 10655  0042B4  EF5E  F021         	goto	u4651
 10656  0042B8  EF60  F021         	goto	u4650
 10657  0042BC                     u4651:
 10658  0042BC  EF7B  F021         	goto	l4652
 10659  0042C0                     u4650:
 10660  0042C0                     
 10661                           ; BSR set to: 1
 10662                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10663  0042C0  0E00               	movlw	0
 10664  0042C2  6E2B               	movwf	(turnRight@i+1)^0,c
 10665  0042C4  0E00               	movlw	0
 10666  0042C6  6E2A               	movwf	turnRight@i^0,c
 10667  0042C8  EF70  F021         	goto	l336
 10668  0042CC                     l4648:
 10669  0042CC  0E15               	movlw	21
 10670  0042CE  6E25               	movwf	??_turnRight^0,c
 10671  0042D0  0EC6               	movlw	198
 10672  0042D2                     u6057:
 10673  0042D2  2EE8               	decfsz	wreg,f,c
 10674  0042D4  D7FE               	bra	u6057
 10675  0042D6  2E25               	decfsz	??_turnRight^0,f,c
 10676  0042D8  D7FC               	bra	u6057
 10677  0042DA  D000               	nop2	
 10678  0042DC  4A2A               	infsnz	turnRight@i^0,f,c
 10679  0042DE  2A2B               	incf	(turnRight@i+1)^0,f,c
 10680  0042E0                     l336:
 10681  0042E0  5028               	movf	turnRight@delay_180^0,w,c
 10682  0042E2  5C2A               	subwf	turnRight@i^0,w,c
 10683  0042E4  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10684  0042E6  582B               	subwfb	(turnRight@i+1)^0,w,c
 10685  0042E8  A0D8               	btfss	status,0,c
 10686  0042EA  EF79  F021         	goto	u4661
 10687  0042EE  EF7B  F021         	goto	u4660
 10688  0042F2                     u4661:
 10689  0042F2  EF66  F021         	goto	l4648
 10690  0042F6                     u4660:
 10691  0042F6                     l4652:
 10692                           
 10693                           ;dc_motor.c: 139:     if (angle_right == 135){
 10694  0042F6  0E87               	movlw	135
 10695  0042F8  1824               	xorwf	turnRight@angle_right^0,w,c
 10696  0042FA  A4D8               	btfss	status,2,c
 10697  0042FC  EF82  F021         	goto	u4671
 10698  004300  EF84  F021         	goto	u4670
 10699  004304                     u4671:
 10700  004304  EF9F  F021         	goto	l4660
 10701  004308                     u4670:
 10702  004308                     
 10703                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10704  004308  0E00               	movlw	0
 10705  00430A  6E2D               	movwf	(turnRight@i_1362+1)^0,c
 10706  00430C  0E00               	movlw	0
 10707  00430E  6E2C               	movwf	turnRight@i_1362^0,c
 10708  004310  EF94  F021         	goto	l340
 10709  004314                     l4656:
 10710  004314  0E15               	movlw	21
 10711  004316  6E25               	movwf	??_turnRight^0,c
 10712  004318  0EC6               	movlw	198
 10713  00431A                     u6067:
 10714  00431A  2EE8               	decfsz	wreg,f,c
 10715  00431C  D7FE               	bra	u6067
 10716  00431E  2E25               	decfsz	??_turnRight^0,f,c
 10717  004320  D7FC               	bra	u6067
 10718  004322  D000               	nop2	
 10719  004324  4A2C               	infsnz	turnRight@i_1362^0,f,c
 10720  004326  2A2D               	incf	(turnRight@i_1362+1)^0,f,c
 10721  004328                     l340:
 10722  004328  5026               	movf	turnRight@delay_135^0,w,c
 10723  00432A  5C2C               	subwf	turnRight@i_1362^0,w,c
 10724  00432C  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10725  00432E  582D               	subwfb	(turnRight@i_1362+1)^0,w,c
 10726  004330  A0D8               	btfss	status,0,c
 10727  004332  EF9D  F021         	goto	u4681
 10728  004336  EF9F  F021         	goto	u4680
 10729  00433A                     u4681:
 10730  00433A  EF8A  F021         	goto	l4656
 10731  00433E                     u4680:
 10732  00433E                     l4660:
 10733                           
 10734                           ;dc_motor.c: 142:     if (angle_right == 90){
 10735  00433E  0E5A               	movlw	90
 10736  004340  1824               	xorwf	turnRight@angle_right^0,w,c
 10737  004342  A4D8               	btfss	status,2,c
 10738  004344  EFA6  F021         	goto	u4691
 10739  004348  EFA8  F021         	goto	u4690
 10740  00434C                     u4691:
 10741  00434C  EFC3  F021         	goto	l4668
 10742  004350                     u4690:
 10743  004350                     
 10744                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10745  004350  0E00               	movlw	0
 10746  004352  6E2F               	movwf	(turnRight@i_1363+1)^0,c
 10747  004354  0E00               	movlw	0
 10748  004356  6E2E               	movwf	turnRight@i_1363^0,c
 10749  004358  EFB8  F021         	goto	l344
 10750  00435C                     l4664:
 10751  00435C  0E15               	movlw	21
 10752  00435E  6E25               	movwf	??_turnRight^0,c
 10753  004360  0EC6               	movlw	198
 10754  004362                     u6077:
 10755  004362  2EE8               	decfsz	wreg,f,c
 10756  004364  D7FE               	bra	u6077
 10757  004366  2E25               	decfsz	??_turnRight^0,f,c
 10758  004368  D7FC               	bra	u6077
 10759  00436A  D000               	nop2	
 10760  00436C  4A2E               	infsnz	turnRight@i_1363^0,f,c
 10761  00436E  2A2F               	incf	(turnRight@i_1363+1)^0,f,c
 10762  004370                     l344:
 10763  004370  5030               	movf	turnRight@delay^0,w,c
 10764  004372  5C2E               	subwf	turnRight@i_1363^0,w,c
 10765  004374  5031               	movf	(turnRight@delay+1)^0,w,c
 10766  004376  582F               	subwfb	(turnRight@i_1363+1)^0,w,c
 10767  004378  A0D8               	btfss	status,0,c
 10768  00437A  EFC1  F021         	goto	u4701
 10769  00437E  EFC3  F021         	goto	u4700
 10770  004382                     u4701:
 10771  004382  EFAE  F021         	goto	l4664
 10772  004386                     u4700:
 10773  004386                     l4668:
 10774                           
 10775                           ;dc_motor.c: 145:     stop(mL,mR);
 10776  004386  C020  F01A         	movff	turnRight@mL,stop@mL
 10777  00438A  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10778  00438E  C022  F01C         	movff	turnRight@mR,stop@mR
 10779  004392  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10780  004396  ECC0  F028         	call	_stop	;wreg free
 10781  00439A  0012               	return		;funcret
 10782  00439C                     __end_of_turnRight:
 10783                           	callstack 0
 10784                           
 10785 ;; *************** function _turnLeft *****************
 10786 ;; Defined at:
 10787 ;;		line 95 in file "dc_motor.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10790 ;;		 -> main@motorL(10), 
 10791 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10792 ;;		 -> main@motorR(10), 
 10793 ;;  angle_left      1   35[COMRAM] unsigned char 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  i               2   45[COMRAM] unsigned int 
 10796 ;;  i               2   43[COMRAM] unsigned int 
 10797 ;;  i               2   41[COMRAM] unsigned int 
 10798 ;;  delay           2   47[COMRAM] unsigned int 
 10799 ;;  delay_180       2   39[COMRAM] unsigned int 
 10800 ;;  delay_135       2   37[COMRAM] unsigned int 
 10801 ;; Return value:  Size  Location     Type
 10802 ;;                  1    wreg      void 
 10803 ;; Registers used:
 10804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10805 ;; Tracked objects:
 10806 ;;		On entry : 0/0
 10807 ;;		On exit  : 0/0
 10808 ;;		Unchanged: 0/0
 10809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10810 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10811 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10813 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10814 ;;Total ram usage:       18 bytes
 10815 ;; Hardware stack levels used: 1
 10816 ;; Hardware stack levels required when called: 4
 10817 ;; This function calls:
 10818 ;;		_setMotorPWM
 10819 ;;		_stop
 10820 ;; This function is called by:
 10821 ;;		_action
 10822 ;;		_test_action
 10823 ;;		_goback
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text51
 10828  00439C                     __ptext51:
 10829                           	callstack 0
 10830  00439C                     _turnLeft:
 10831                           	callstack 25
 10832  00439C                     
 10833                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10834  00439C  EE20 F001          	lfsr	2,1
 10835  0043A0  5020               	movf	turnLeft@mL^0,w,c
 10836  0043A2  26D9               	addwf	fsr2l,f,c
 10837  0043A4  5021               	movf	(turnLeft@mL+1)^0,w,c
 10838  0043A6  22DA               	addwfc	fsr2h,f,c
 10839  0043A8  0E01               	movlw	1
 10840  0043AA  6EDF               	movwf	indf2,c
 10841                           
 10842                           ;dc_motor.c: 98:       mR->direction=1;
 10843  0043AC  EE20 F001          	lfsr	2,1
 10844  0043B0  5022               	movf	turnLeft@mR^0,w,c
 10845  0043B2  26D9               	addwf	fsr2l,f,c
 10846  0043B4  5023               	movf	(turnLeft@mR+1)^0,w,c
 10847  0043B6  22DA               	addwfc	fsr2h,f,c
 10848  0043B8  0E01               	movlw	1
 10849  0043BA  6EDF               	movwf	indf2,c
 10850                           
 10851                           ;dc_motor.c: 99:       while (mR->power <25){
 10852  0043BC  EFFF  F021         	goto	l4592
 10853  0043C0                     l4584:
 10854                           
 10855                           ;dc_motor.c: 100:         mR->power += 5;
 10856  0043C0  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10857  0043C4  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10858  0043C8  0E05               	movlw	5
 10859  0043CA  26DF               	addwf	indf2,f,c
 10860                           
 10861                           ;dc_motor.c: 101:         mL->power = 0;
 10862  0043CC  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10863  0043D0  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10864  0043D4  0E00               	movlw	0
 10865  0043D6  6EDF               	movwf	indf2,c
 10866  0043D8                     
 10867                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10868  0043D8  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10869  0043DC  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10870  0043E0  ECB1  F01C         	call	_setMotorPWM	;wreg free
 10871  0043E4                     
 10872                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10873  0043E4  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10874  0043E8  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10875  0043EC  ECB1  F01C         	call	_setMotorPWM	;wreg free
 10876  0043F0                     
 10877                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10878  0043F0  0ED0               	movlw	208
 10879  0043F2  6E25               	movwf	??_turnLeft^0,c
 10880  0043F4  0ECA               	movlw	202
 10881  0043F6                     u6087:
 10882  0043F6  2EE8               	decfsz	wreg,f,c
 10883  0043F8  D7FE               	bra	u6087
 10884  0043FA  2E25               	decfsz	??_turnLeft^0,f,c
 10885  0043FC  D7FC               	bra	u6087
 10886  0043FE                     l4592:
 10887                           
 10888                           ;dc_motor.c: 99:       while (mR->power <25){
 10889  0043FE  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10890  004402  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10891  004406  0E18               	movlw	24
 10892  004408  64DF               	cpfsgt	indf2,c
 10893  00440A  EF09  F022         	goto	u4571
 10894  00440E  EF0B  F022         	goto	u4570
 10895  004412                     u4571:
 10896  004412  EFE0  F021         	goto	l4584
 10897  004416                     u4570:
 10898  004416                     
 10899                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 10900  004416  5024               	movf	turnLeft@angle_left^0,w,c
 10901  004418  0101               	movlb	1	; () banked
 10902  00441A  03CE               	mulwf	_SENSITIVITY& (0+255),b
 10903  00441C  CFF3 F030          	movff	prodl,turnLeft@delay
 10904  004420  CFF4 F031          	movff	prodh,turnLeft@delay+1
 10905  004424                     
 10906                           ; BSR set to: 1
 10907  004424  0E0F               	movlw	15
 10908  004426  2430               	addwf	turnLeft@delay^0,w,c
 10909  004428  6E26               	movwf	turnLeft@delay_135^0,c
 10910  00442A  0E00               	movlw	0
 10911  00442C  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10912  00442E  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 10913  004430                     
 10914                           ; BSR set to: 1
 10915  004430  0E0A               	movlw	10
 10916  004432  2430               	addwf	turnLeft@delay^0,w,c
 10917  004434  6E28               	movwf	turnLeft@delay_180^0,c
 10918  004436  0E00               	movlw	0
 10919  004438  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10920  00443A  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 10921  00443C                     
 10922                           ; BSR set to: 1
 10923                           ;dc_motor.c: 109:     if (angle_left == 180){
 10924  00443C  0EB4               	movlw	180
 10925  00443E  1824               	xorwf	turnLeft@angle_left^0,w,c
 10926  004440  A4D8               	btfss	status,2,c
 10927  004442  EF25  F022         	goto	u4581
 10928  004446  EF27  F022         	goto	u4580
 10929  00444A                     u4581:
 10930  00444A  EF42  F022         	goto	l4608
 10931  00444E                     u4580:
 10932  00444E                     
 10933                           ; BSR set to: 1
 10934                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10935  00444E  0E00               	movlw	0
 10936  004450  6E2B               	movwf	(turnLeft@i+1)^0,c
 10937  004452  0E00               	movlw	0
 10938  004454  6E2A               	movwf	turnLeft@i^0,c
 10939  004456  EF37  F022         	goto	l318
 10940  00445A                     l4604:
 10941  00445A  0E15               	movlw	21
 10942  00445C  6E25               	movwf	??_turnLeft^0,c
 10943  00445E  0EC6               	movlw	198
 10944  004460                     u6097:
 10945  004460  2EE8               	decfsz	wreg,f,c
 10946  004462  D7FE               	bra	u6097
 10947  004464  2E25               	decfsz	??_turnLeft^0,f,c
 10948  004466  D7FC               	bra	u6097
 10949  004468  D000               	nop2	
 10950  00446A  4A2A               	infsnz	turnLeft@i^0,f,c
 10951  00446C  2A2B               	incf	(turnLeft@i+1)^0,f,c
 10952  00446E                     l318:
 10953  00446E  5028               	movf	turnLeft@delay_180^0,w,c
 10954  004470  5C2A               	subwf	turnLeft@i^0,w,c
 10955  004472  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 10956  004474  582B               	subwfb	(turnLeft@i+1)^0,w,c
 10957  004476  A0D8               	btfss	status,0,c
 10958  004478  EF40  F022         	goto	u4591
 10959  00447C  EF42  F022         	goto	u4590
 10960  004480                     u4591:
 10961  004480  EF2D  F022         	goto	l4604
 10962  004484                     u4590:
 10963  004484                     l4608:
 10964                           
 10965                           ;dc_motor.c: 112:     if (angle_left == 135){
 10966  004484  0E87               	movlw	135
 10967  004486  1824               	xorwf	turnLeft@angle_left^0,w,c
 10968  004488  A4D8               	btfss	status,2,c
 10969  00448A  EF49  F022         	goto	u4601
 10970  00448E  EF4B  F022         	goto	u4600
 10971  004492                     u4601:
 10972  004492  EF66  F022         	goto	l4616
 10973  004496                     u4600:
 10974  004496                     
 10975                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10976  004496  0E00               	movlw	0
 10977  004498  6E2D               	movwf	(turnLeft@i_1337+1)^0,c
 10978  00449A  0E00               	movlw	0
 10979  00449C  6E2C               	movwf	turnLeft@i_1337^0,c
 10980  00449E  EF5B  F022         	goto	l322
 10981  0044A2                     l4612:
 10982  0044A2  0E15               	movlw	21
 10983  0044A4  6E25               	movwf	??_turnLeft^0,c
 10984  0044A6  0EC6               	movlw	198
 10985  0044A8                     u6107:
 10986  0044A8  2EE8               	decfsz	wreg,f,c
 10987  0044AA  D7FE               	bra	u6107
 10988  0044AC  2E25               	decfsz	??_turnLeft^0,f,c
 10989  0044AE  D7FC               	bra	u6107
 10990  0044B0  D000               	nop2	
 10991  0044B2  4A2C               	infsnz	turnLeft@i_1337^0,f,c
 10992  0044B4  2A2D               	incf	(turnLeft@i_1337+1)^0,f,c
 10993  0044B6                     l322:
 10994  0044B6  5026               	movf	turnLeft@delay_135^0,w,c
 10995  0044B8  5C2C               	subwf	turnLeft@i_1337^0,w,c
 10996  0044BA  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 10997  0044BC  582D               	subwfb	(turnLeft@i_1337+1)^0,w,c
 10998  0044BE  A0D8               	btfss	status,0,c
 10999  0044C0  EF64  F022         	goto	u4611
 11000  0044C4  EF66  F022         	goto	u4610
 11001  0044C8                     u4611:
 11002  0044C8  EF51  F022         	goto	l4612
 11003  0044CC                     u4610:
 11004  0044CC                     l4616:
 11005                           
 11006                           ;dc_motor.c: 115:     if (angle_left == 90){
 11007  0044CC  0E5A               	movlw	90
 11008  0044CE  1824               	xorwf	turnLeft@angle_left^0,w,c
 11009  0044D0  A4D8               	btfss	status,2,c
 11010  0044D2  EF6D  F022         	goto	u4621
 11011  0044D6  EF6F  F022         	goto	u4620
 11012  0044DA                     u4621:
 11013  0044DA  EF8A  F022         	goto	l4624
 11014  0044DE                     u4620:
 11015  0044DE                     
 11016                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11017  0044DE  0E00               	movlw	0
 11018  0044E0  6E2F               	movwf	(turnLeft@i_1338+1)^0,c
 11019  0044E2  0E00               	movlw	0
 11020  0044E4  6E2E               	movwf	turnLeft@i_1338^0,c
 11021  0044E6  EF7F  F022         	goto	l326
 11022  0044EA                     l4620:
 11023  0044EA  0E15               	movlw	21
 11024  0044EC  6E25               	movwf	??_turnLeft^0,c
 11025  0044EE  0EC6               	movlw	198
 11026  0044F0                     u6117:
 11027  0044F0  2EE8               	decfsz	wreg,f,c
 11028  0044F2  D7FE               	bra	u6117
 11029  0044F4  2E25               	decfsz	??_turnLeft^0,f,c
 11030  0044F6  D7FC               	bra	u6117
 11031  0044F8  D000               	nop2	
 11032  0044FA  4A2E               	infsnz	turnLeft@i_1338^0,f,c
 11033  0044FC  2A2F               	incf	(turnLeft@i_1338+1)^0,f,c
 11034  0044FE                     l326:
 11035  0044FE  5030               	movf	turnLeft@delay^0,w,c
 11036  004500  5C2E               	subwf	turnLeft@i_1338^0,w,c
 11037  004502  5031               	movf	(turnLeft@delay+1)^0,w,c
 11038  004504  582F               	subwfb	(turnLeft@i_1338+1)^0,w,c
 11039  004506  A0D8               	btfss	status,0,c
 11040  004508  EF88  F022         	goto	u4631
 11041  00450C  EF8A  F022         	goto	u4630
 11042  004510                     u4631:
 11043  004510  EF75  F022         	goto	l4620
 11044  004514                     u4630:
 11045  004514                     l4624:
 11046                           
 11047                           ;dc_motor.c: 118:     stop(mL,mR);
 11048  004514  C020  F01A         	movff	turnLeft@mL,stop@mL
 11049  004518  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11050  00451C  C022  F01C         	movff	turnLeft@mR,stop@mR
 11051  004520  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11052  004524  ECC0  F028         	call	_stop	;wreg free
 11053  004528  0012               	return		;funcret
 11054  00452A                     __end_of_turnLeft:
 11055                           	callstack 0
 11056                           
 11057 ;; *************** function _reverse_square *****************
 11058 ;; Defined at:
 11059 ;;		line 189 in file "dc_motor.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 11062 ;;		 -> main@motorL(10), 
 11063 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 11064 ;;		 -> main@motorR(10), 
 11065 ;; Auto vars:     Size  Location     Type
 11066 ;;		None
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  1    wreg      void 
 11069 ;; Registers used:
 11070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11080 ;;Total ram usage:        6 bytes
 11081 ;; Hardware stack levels used: 1
 11082 ;; Hardware stack levels required when called: 5
 11083 ;; This function calls:
 11084 ;;		_fullSpeedBack
 11085 ;;		_stop
 11086 ;; This function is called by:
 11087 ;;		_action
 11088 ;;		_goback
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text52
 11093  005876                     __ptext52:
 11094                           	callstack 0
 11095  005876                     _reverse_square:
 11096                           	callstack 24
 11097  005876                     
 11098                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 11099  005876  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 11100  00587A  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 11101  00587E  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 11102  005882  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 11103  005886  EC60  F028         	call	_fullSpeedBack	;wreg free
 11104  00588A                     
 11105                           ;dc_motor.c: 191:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 11106  00588A  0E7A               	movlw	122
 11107  00588C  6E2B               	movwf	(??_reverse_square+1)^0,c
 11108  00588E  0EC1               	movlw	193
 11109  005890  6E2A               	movwf	??_reverse_square^0,c
 11110  005892  0E82               	movlw	130
 11111  005894                     u6127:
 11112  005894  2EE8               	decfsz	wreg,f,c
 11113  005896  D7FE               	bra	u6127
 11114  005898  2E2A               	decfsz	??_reverse_square^0,f,c
 11115  00589A  D7FC               	bra	u6127
 11116  00589C  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 11117  00589E  D7FA               	bra	u6127
 11118  0058A0                     
 11119                           ;dc_motor.c: 192:     stop(mL,mR);
 11120  0058A0  C026  F01A         	movff	reverse_square@mL,stop@mL
 11121  0058A4  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 11122  0058A8  C028  F01C         	movff	reverse_square@mR,stop@mR
 11123  0058AC  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 11124  0058B0  ECC0  F028         	call	_stop	;wreg free
 11125  0058B4  0012               	return		;funcret
 11126  0058B6                     __end_of_reverse_square:
 11127                           	callstack 0
 11128                           
 11129 ;; *************** function _fullSpeedBack *****************
 11130 ;; Defined at:
 11131 ;;		line 168 in file "dc_motor.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11134 ;;		 -> main@motorL(10), 
 11135 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11136 ;;		 -> main@motorR(10), 
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  1    wreg      void 
 11141 ;; Registers used:
 11142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11152 ;;Total ram usage:        6 bytes
 11153 ;; Hardware stack levels used: 1
 11154 ;; Hardware stack levels required when called: 4
 11155 ;; This function calls:
 11156 ;;		_setMotorPWM
 11157 ;;		_stop
 11158 ;; This function is called by:
 11159 ;;		_short_reverse
 11160 ;;		_reverse_square
 11161 ;; This function uses a non-reentrant model
 11162 ;;
 11163                           
 11164                           	psect	text53
 11165  0050C0                     __ptext53:
 11166                           	callstack 0
 11167  0050C0                     _fullSpeedBack:
 11168                           	callstack 24
 11169  0050C0                     
 11170                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11171  0050C0  EE20 F001          	lfsr	2,1
 11172  0050C4  5020               	movf	fullSpeedBack@mL^0,w,c
 11173  0050C6  26D9               	addwf	fsr2l,f,c
 11174  0050C8  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11175  0050CA  22DA               	addwfc	fsr2h,f,c
 11176  0050CC  0E00               	movlw	0
 11177  0050CE  6EDF               	movwf	indf2,c
 11178                           
 11179                           ;dc_motor.c: 171:     mR->direction=0;
 11180  0050D0  EE20 F001          	lfsr	2,1
 11181  0050D4  5022               	movf	fullSpeedBack@mR^0,w,c
 11182  0050D6  26D9               	addwf	fsr2l,f,c
 11183  0050D8  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11184  0050DA  22DA               	addwfc	fsr2h,f,c
 11185  0050DC  0E00               	movlw	0
 11186  0050DE  6EDF               	movwf	indf2,c
 11187                           
 11188                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11189  0050E0  EF91  F028         	goto	l4408
 11190  0050E4                     l4400:
 11191                           
 11192                           ;dc_motor.c: 173:         mL->power += 10;
 11193  0050E4  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11194  0050E8  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11195  0050EC  0E0A               	movlw	10
 11196  0050EE  26DF               	addwf	indf2,f,c
 11197                           
 11198                           ;dc_motor.c: 174:         mR->power += 10;
 11199  0050F0  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11200  0050F4  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11201  0050F8  0E0A               	movlw	10
 11202  0050FA  26DF               	addwf	indf2,f,c
 11203  0050FC                     
 11204                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11205  0050FC  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11206  005100  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11207  005104  ECB1  F01C         	call	_setMotorPWM	;wreg free
 11208  005108                     
 11209                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11210  005108  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11211  00510C  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11212  005110  ECB1  F01C         	call	_setMotorPWM	;wreg free
 11213  005114                     
 11214                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11215  005114  0ED0               	movlw	208
 11216  005116  6E24               	movwf	??_fullSpeedBack^0,c
 11217  005118  0ECA               	movlw	202
 11218  00511A                     u6137:
 11219  00511A  2EE8               	decfsz	wreg,f,c
 11220  00511C  D7FE               	bra	u6137
 11221  00511E  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11222  005120  D7FC               	bra	u6137
 11223  005122                     l4408:
 11224                           
 11225                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11226  005122  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11227  005126  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11228  00512A  0E32               	movlw	50
 11229  00512C  60DF               	cpfslt	indf2,c
 11230  00512E  EF9B  F028         	goto	u4111
 11231  005132  EF9D  F028         	goto	u4110
 11232  005136                     u4111:
 11233  005136  EFA9  F028         	goto	l4412
 11234  00513A                     u4110:
 11235  00513A  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11236  00513E  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11237  005142  0E31               	movlw	49
 11238  005144  64DF               	cpfsgt	indf2,c
 11239  005146  EFA7  F028         	goto	u4121
 11240  00514A  EFA9  F028         	goto	u4120
 11241  00514E                     u4121:
 11242  00514E  EF72  F028         	goto	l4400
 11243  005152                     u4120:
 11244  005152                     l4412:
 11245                           
 11246                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11247  005152  0E29               	movlw	41
 11248  005154  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11249  005156  0E96               	movlw	150
 11250  005158  6E24               	movwf	??_fullSpeedBack^0,c
 11251  00515A  0E7F               	movlw	127
 11252  00515C                     u6147:
 11253  00515C  2EE8               	decfsz	wreg,f,c
 11254  00515E  D7FE               	bra	u6147
 11255  005160  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11256  005162  D7FC               	bra	u6147
 11257  005164  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11258  005166  D7FA               	bra	u6147
 11259  005168  F000               	nop	
 11260  00516A                     
 11261                           ;dc_motor.c: 180:     stop(mL,mR);
 11262  00516A  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11263  00516E  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11264  005172  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11265  005176  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11266  00517A  ECC0  F028         	call	_stop	;wreg free
 11267  00517E  0012               	return		;funcret
 11268  005180                     __end_of_fullSpeedBack:
 11269                           	callstack 0
 11270                           
 11271 ;; *************** function _stop *****************
 11272 ;; Defined at:
 11273 ;;		line 82 in file "dc_motor.c"
 11274 ;; Parameters:    Size  Location     Type
 11275 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11276 ;;		 -> main@motorL(10), 
 11277 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11278 ;;		 -> main@motorR(10), 
 11279 ;; Auto vars:     Size  Location     Type
 11280 ;;		None
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      void 
 11283 ;; Registers used:
 11284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11292 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11294 ;;Total ram usage:        6 bytes
 11295 ;; Hardware stack levels used: 1
 11296 ;; Hardware stack levels required when called: 3
 11297 ;; This function calls:
 11298 ;;		_setMotorPWM
 11299 ;; This function is called by:
 11300 ;;		_turnLeft
 11301 ;;		_turnRight
 11302 ;;		_fullSpeedAhead_test
 11303 ;;		_fullSpeedBack
 11304 ;;		_short_reverse
 11305 ;;		_reverse_square
 11306 ;;		_main
 11307 ;;		_goback
 11308 ;;		_test_function
 11309 ;;		_short_burst
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text54
 11314  005180                     __ptext54:
 11315                           	callstack 0
 11316  005180                     _stop:
 11317                           	callstack 26
 11318  005180                     
 11319                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11320  005180  EFF9  F028         	goto	l4170
 11321  005184                     l4156:
 11322                           
 11323                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11324  005184  C01A  FFD9         	movff	stop@mL,fsr2l
 11325  005188  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11326  00518C  50DF               	movf	indf2,w,c
 11327  00518E  B4D8               	btfsc	status,2,c
 11328  005190  EFCC  F028         	goto	u3791
 11329  005194  EFCE  F028         	goto	u3790
 11330  005198                     u3791:
 11331  005198  EFD4  F028         	goto	l4160
 11332  00519C                     u3790:
 11333  00519C  C01A  FFD9         	movff	stop@mL,fsr2l
 11334  0051A0  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11335  0051A4  0E05               	movlw	5
 11336  0051A6  5EDF               	subwf	indf2,f,c
 11337  0051A8                     l4160:
 11338                           
 11339                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11340  0051A8  C01C  FFD9         	movff	stop@mR,fsr2l
 11341  0051AC  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11342  0051B0  50DF               	movf	indf2,w,c
 11343  0051B2  B4D8               	btfsc	status,2,c
 11344  0051B4  EFDE  F028         	goto	u3801
 11345  0051B8  EFE0  F028         	goto	u3800
 11346  0051BC                     u3801:
 11347  0051BC  EFE6  F028         	goto	l4164
 11348  0051C0                     u3800:
 11349  0051C0  C01C  FFD9         	movff	stop@mR,fsr2l
 11350  0051C4  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11351  0051C8  0E05               	movlw	5
 11352  0051CA  5EDF               	subwf	indf2,f,c
 11353  0051CC                     l4164:
 11354                           
 11355                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11356  0051CC  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11357  0051D0  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11358  0051D4  ECB1  F01C         	call	_setMotorPWM	;wreg free
 11359  0051D8                     
 11360                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11361  0051D8  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11362  0051DC  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11363  0051E0  ECB1  F01C         	call	_setMotorPWM	;wreg free
 11364  0051E4                     
 11365                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11366  0051E4  0ED0               	movlw	208
 11367  0051E6  6E1E               	movwf	??_stop^0,c
 11368  0051E8  0ECA               	movlw	202
 11369  0051EA                     u6157:
 11370  0051EA  2EE8               	decfsz	wreg,f,c
 11371  0051EC  D7FE               	bra	u6157
 11372  0051EE  2E1E               	decfsz	??_stop^0,f,c
 11373  0051F0  D7FC               	bra	u6157
 11374  0051F2                     l4170:
 11375                           
 11376                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11377  0051F2  C01A  FFD9         	movff	stop@mL,fsr2l
 11378  0051F6  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11379  0051FA  50DF               	movf	indf2,w,c
 11380  0051FC  A4D8               	btfss	status,2,c
 11381  0051FE  EF03  F029         	goto	u3811
 11382  005202  EF05  F029         	goto	u3810
 11383  005206                     u3811:
 11384  005206  EFC2  F028         	goto	l4156
 11385  00520A                     u3810:
 11386  00520A  C01C  FFD9         	movff	stop@mR,fsr2l
 11387  00520E  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11388  005212  50DF               	movf	indf2,w,c
 11389  005214  A4D8               	btfss	status,2,c
 11390  005216  EF0F  F029         	goto	u3821
 11391  00521A  EF11  F029         	goto	u3820
 11392  00521E                     u3821:
 11393  00521E  EFC2  F028         	goto	l4156
 11394  005222                     u3820:
 11395  005222                     
 11396                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11397  005222  0E29               	movlw	41
 11398  005224  6E1F               	movwf	(??_stop+1)^0,c
 11399  005226  0E96               	movlw	150
 11400  005228  6E1E               	movwf	??_stop^0,c
 11401  00522A  0E7F               	movlw	127
 11402  00522C                     u6167:
 11403  00522C  2EE8               	decfsz	wreg,f,c
 11404  00522E  D7FE               	bra	u6167
 11405  005230  2E1E               	decfsz	??_stop^0,f,c
 11406  005232  D7FC               	bra	u6167
 11407  005234  2E1F               	decfsz	(??_stop+1)^0,f,c
 11408  005236  D7FA               	bra	u6167
 11409  005238  F000               	nop	
 11410  00523A  0012               	return		;funcret
 11411  00523C                     __end_of_stop:
 11412                           	callstack 0
 11413                           
 11414 ;; *************** function _fullSpeedAhead *****************
 11415 ;; Defined at:
 11416 ;;		line 149 in file "dc_motor.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11419 ;;		 -> main@motorL(10), 
 11420 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11421 ;;		 -> main@motorR(10), 
 11422 ;; Auto vars:     Size  Location     Type
 11423 ;;		None
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  1    wreg      void 
 11426 ;; Registers used:
 11427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11436 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11437 ;;Total ram usage:        5 bytes
 11438 ;; Hardware stack levels used: 1
 11439 ;; Hardware stack levels required when called: 3
 11440 ;; This function calls:
 11441 ;;		_setMotorPWM
 11442 ;; This function is called by:
 11443 ;;		_fullSpeedAhead_test
 11444 ;;		_main
 11445 ;;		_goback
 11446 ;;		_test_function
 11447 ;;		_short_burst
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text55
 11452  00523C                     __ptext55:
 11453                           	callstack 0
 11454  00523C                     _fullSpeedAhead:
 11455                           	callstack 26
 11456  00523C                     
 11457                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11458  00523C  EE20 F001          	lfsr	2,1
 11459  005240  501A               	movf	fullSpeedAhead@mL^0,w,c
 11460  005242  26D9               	addwf	fsr2l,f,c
 11461  005244  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11462  005246  22DA               	addwfc	fsr2h,f,c
 11463  005248  0E01               	movlw	1
 11464  00524A  6EDF               	movwf	indf2,c
 11465                           
 11466                           ;dc_motor.c: 152:     mR->direction=1;
 11467  00524C  EE20 F001          	lfsr	2,1
 11468  005250  501C               	movf	fullSpeedAhead@mR^0,w,c
 11469  005252  26D9               	addwf	fsr2l,f,c
 11470  005254  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11471  005256  22DA               	addwfc	fsr2h,f,c
 11472  005258  0E01               	movlw	1
 11473  00525A  6EDF               	movwf	indf2,c
 11474                           
 11475                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11476  00525C  EF4F  F029         	goto	l4680
 11477  005260                     l4672:
 11478                           
 11479                           ;dc_motor.c: 154:         mL->power += 10;
 11480  005260  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11481  005264  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11482  005268  0E0A               	movlw	10
 11483  00526A  26DF               	addwf	indf2,f,c
 11484                           
 11485                           ;dc_motor.c: 155:         mR->power += 10;
 11486  00526C  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11487  005270  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11488  005274  0E0A               	movlw	10
 11489  005276  26DF               	addwf	indf2,f,c
 11490  005278                     
 11491                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11492  005278  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11493  00527C  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11494  005280  ECB1  F01C         	call	_setMotorPWM	;wreg free
 11495  005284                     
 11496                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11497  005284  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11498  005288  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11499  00528C  ECB1  F01C         	call	_setMotorPWM	;wreg free
 11500  005290                     
 11501                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11502  005290  0ED0               	movlw	208
 11503  005292  6E1E               	movwf	??_fullSpeedAhead^0,c
 11504  005294  0ECA               	movlw	202
 11505  005296                     u6177:
 11506  005296  2EE8               	decfsz	wreg,f,c
 11507  005298  D7FE               	bra	u6177
 11508  00529A  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11509  00529C  D7FC               	bra	u6177
 11510  00529E                     l4680:
 11511                           
 11512                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11513  00529E  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11514  0052A2  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11515  0052A6  0E14               	movlw	20
 11516  0052A8  60DF               	cpfslt	indf2,c
 11517  0052AA  EF59  F029         	goto	u4711
 11518  0052AE  EF5B  F029         	goto	u4710
 11519  0052B2                     u4711:
 11520  0052B2  EF67  F029         	goto	l355
 11521  0052B6                     u4710:
 11522  0052B6  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11523  0052BA  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11524  0052BE  0E13               	movlw	19
 11525  0052C0  64DF               	cpfsgt	indf2,c
 11526  0052C2  EF65  F029         	goto	u4721
 11527  0052C6  EF67  F029         	goto	u4720
 11528  0052CA                     u4721:
 11529  0052CA  EF30  F029         	goto	l4672
 11530  0052CE                     u4720:
 11531  0052CE                     l355:
 11532  0052CE  0012               	return		;funcret
 11533  0052D0                     __end_of_fullSpeedAhead:
 11534                           	callstack 0
 11535                           
 11536 ;; *************** function _setMotorPWM *****************
 11537 ;; Defined at:
 11538 ;;		line 59 in file "dc_motor.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11541 ;;		 -> main@motorR(10), main@motorL(10), 
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  PWMduty         2   23[COMRAM] int 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11555 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11556 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11557 ;;Total ram usage:       11 bytes
 11558 ;; Hardware stack levels used: 1
 11559 ;; Hardware stack levels required when called: 2
 11560 ;; This function calls:
 11561 ;;		___awdiv
 11562 ;;		___wmul
 11563 ;; This function is called by:
 11564 ;;		_stop
 11565 ;;		_turnLeft
 11566 ;;		_turnRight
 11567 ;;		_fullSpeedAhead
 11568 ;;		_fullSpeedBack
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text56
 11573  003962                     __ptext56:
 11574                           	callstack 0
 11575  003962                     _setMotorPWM:
 11576                           	callstack 26
 11577  003962                     
 11578                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11579  003962  EE20 F001          	lfsr	2,1
 11580  003966  500F               	movf	setMotorPWM@m^0,w,c
 11581  003968  26D9               	addwf	fsr2l,f,c
 11582  00396A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11583  00396C  22DA               	addwfc	fsr2h,f,c
 11584  00396E  50DF               	movf	indf2,w,c
 11585  003970  B4D8               	btfsc	status,2,c
 11586  003972  EFBD  F01C         	goto	u3301
 11587  003976  EFBF  F01C         	goto	u3300
 11588  00397A                     u3301:
 11589  00397A  EFF0  F01C         	goto	l3870
 11590  00397E                     u3300:
 11591  00397E                     
 11592                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11593  00397E  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11594  003982  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11595  003986  50DF               	movf	indf2,w,c
 11596  003988  6E11               	movwf	??_setMotorPWM^0,c
 11597  00398A  5011               	movf	??_setMotorPWM^0,w,c
 11598  00398C  6E01               	movwf	___wmul@multiplier^0,c
 11599  00398E  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11600  003990  EE20 F007          	lfsr	2,7
 11601  003994  500F               	movf	setMotorPWM@m^0,w,c
 11602  003996  26D9               	addwf	fsr2l,f,c
 11603  003998  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11604  00399A  22DA               	addwfc	fsr2h,f,c
 11605  00399C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11606  0039A0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11607  0039A4  EC5E  F02D         	call	___wmul	;wreg free
 11608  0039A8  C001  F007         	movff	?___wmul,___awdiv@dividend
 11609  0039AC  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11610  0039B0  0E00               	movlw	0
 11611  0039B2  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11612  0039B4  0E64               	movlw	100
 11613  0039B6  6E09               	movwf	___awdiv@divisor^0,c
 11614  0039B8  ECFE  F027         	call	___awdiv	;wreg free
 11615  0039BC  EE20 F007          	lfsr	2,7
 11616  0039C0  500F               	movf	setMotorPWM@m^0,w,c
 11617  0039C2  26D9               	addwf	fsr2l,f,c
 11618  0039C4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11619  0039C6  22DA               	addwfc	fsr2h,f,c
 11620  0039C8  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11621  0039CC  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11622  0039D0  5007               	movf	?___awdiv^0,w,c
 11623  0039D2  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11624  0039D4  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11625  0039D6  5008               	movf	(?___awdiv+1)^0,w,c
 11626  0039D8  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11627  0039DA  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11628                           
 11629                           ;dc_motor.c: 66:  }
 11630  0039DC  EF13  F01D         	goto	l3872
 11631  0039E0                     l3870:
 11632                           
 11633                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11634  0039E0  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11635  0039E4  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11636  0039E8  50DF               	movf	indf2,w,c
 11637  0039EA  6E11               	movwf	??_setMotorPWM^0,c
 11638  0039EC  5011               	movf	??_setMotorPWM^0,w,c
 11639  0039EE  6E01               	movwf	___wmul@multiplier^0,c
 11640  0039F0  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11641  0039F2  EE20 F007          	lfsr	2,7
 11642  0039F6  500F               	movf	setMotorPWM@m^0,w,c
 11643  0039F8  26D9               	addwf	fsr2l,f,c
 11644  0039FA  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11645  0039FC  22DA               	addwfc	fsr2h,f,c
 11646  0039FE  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11647  003A02  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11648  003A06  EC5E  F02D         	call	___wmul	;wreg free
 11649  003A0A  C001  F007         	movff	?___wmul,___awdiv@dividend
 11650  003A0E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11651  003A12  0E00               	movlw	0
 11652  003A14  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11653  003A16  0E64               	movlw	100
 11654  003A18  6E09               	movwf	___awdiv@divisor^0,c
 11655  003A1A  ECFE  F027         	call	___awdiv	;wreg free
 11656  003A1E  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11657  003A22  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11658  003A26                     l3872:
 11659                           
 11660                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11661  003A26  EE20 F002          	lfsr	2,2
 11662  003A2A  500F               	movf	setMotorPWM@m^0,w,c
 11663  003A2C  26D9               	addwf	fsr2l,f,c
 11664  003A2E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11665  003A30  22DA               	addwfc	fsr2h,f,c
 11666  003A32  CFDE F011          	movff	postinc2,??_setMotorPWM
 11667  003A36  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11668  003A3A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11669  003A3E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11670  003A42  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11671  003A46                     
 11672                           ;dc_motor.c: 74:  if (m->direction){
 11673  003A46  EE20 F001          	lfsr	2,1
 11674  003A4A  500F               	movf	setMotorPWM@m^0,w,c
 11675  003A4C  26D9               	addwf	fsr2l,f,c
 11676  003A4E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11677  003A50  22DA               	addwfc	fsr2h,f,c
 11678  003A52  50DF               	movf	indf2,w,c
 11679  003A54  B4D8               	btfsc	status,2,c
 11680  003A56  EF2F  F01D         	goto	u3311
 11681  003A5A  EF31  F01D         	goto	u3310
 11682  003A5E                     u3311:
 11683  003A5E  EF66  F01D         	goto	l3878
 11684  003A62                     u3310:
 11685  003A62                     
 11686                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11687  003A62  EE20 F004          	lfsr	2,4
 11688  003A66  500F               	movf	setMotorPWM@m^0,w,c
 11689  003A68  26D9               	addwf	fsr2l,f,c
 11690  003A6A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11691  003A6C  22DA               	addwfc	fsr2h,f,c
 11692  003A6E  CFDE F011          	movff	postinc2,??_setMotorPWM
 11693  003A72  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11694  003A76  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11695  003A7A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11696  003A7E  EE10 F004          	lfsr	1,4
 11697  003A82  500F               	movf	setMotorPWM@m^0,w,c
 11698  003A84  26E1               	addwf	fsr1l,f,c
 11699  003A86  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11700  003A88  22E2               	addwfc	fsr1h,f,c
 11701  003A8A  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11702  003A8E  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11703  003A92  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11704  003A96  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11705  003A9A  50E7               	movf	indf1,w,c
 11706  003A9C  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11707  003A9E  EE10 F006          	lfsr	1,6
 11708  003AA2  500F               	movf	setMotorPWM@m^0,w,c
 11709  003AA4  26E1               	addwf	fsr1l,f,c
 11710  003AA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11711  003AA8  22E2               	addwfc	fsr1h,f,c
 11712  003AAA  50E7               	movf	indf1,w,c
 11713  003AAC  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11714  003AAE  0E01               	movlw	1
 11715  003AB0  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11716  003AB2  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11717  003AB4  EF5E  F01D         	goto	u3324
 11718  003AB8                     u3325:
 11719  003AB8  90D8               	bcf	status,0,c
 11720  003ABA  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11721  003ABC                     u3324:
 11722  003ABC  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11723  003ABE  EF5C  F01D         	goto	u3325
 11724  003AC2  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11725  003AC4  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11726  003AC6  6EDF               	movwf	indf2,c
 11727                           
 11728                           ;dc_motor.c: 76:  } else {
 11729  003AC8  EF9A  F01D         	goto	l303
 11730  003ACC                     l3878:
 11731                           
 11732                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11733  003ACC  EE20 F004          	lfsr	2,4
 11734  003AD0  500F               	movf	setMotorPWM@m^0,w,c
 11735  003AD2  26D9               	addwf	fsr2l,f,c
 11736  003AD4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11737  003AD6  22DA               	addwfc	fsr2h,f,c
 11738  003AD8  CFDE F011          	movff	postinc2,??_setMotorPWM
 11739  003ADC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11740  003AE0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11741  003AE4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11742  003AE8  EE10 F004          	lfsr	1,4
 11743  003AEC  500F               	movf	setMotorPWM@m^0,w,c
 11744  003AEE  26E1               	addwf	fsr1l,f,c
 11745  003AF0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11746  003AF2  22E2               	addwfc	fsr1h,f,c
 11747  003AF4  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11748  003AF8  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11749  003AFC  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11750  003B00  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11751  003B04  50E7               	movf	indf1,w,c
 11752  003B06  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11753  003B08  EE10 F006          	lfsr	1,6
 11754  003B0C  500F               	movf	setMotorPWM@m^0,w,c
 11755  003B0E  26E1               	addwf	fsr1l,f,c
 11756  003B10  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11757  003B12  22E2               	addwfc	fsr1h,f,c
 11758  003B14  50E7               	movf	indf1,w,c
 11759  003B16  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11760  003B18  0E01               	movlw	1
 11761  003B1A  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11762  003B1C  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11763  003B1E  EF93  F01D         	goto	u3334
 11764  003B22                     u3335:
 11765  003B22  90D8               	bcf	status,0,c
 11766  003B24  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11767  003B26                     u3334:
 11768  003B26  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11769  003B28  EF91  F01D         	goto	u3335
 11770  003B2C  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11771  003B2E  0AFF               	xorlw	255
 11772  003B30  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11773  003B32  6EDF               	movwf	indf2,c
 11774  003B34                     l303:
 11775  003B34  0012               	return		;funcret
 11776  003B36                     __end_of_setMotorPWM:
 11777                           	callstack 0
 11778                           
 11779 ;; *************** function ___wmul *****************
 11780 ;; Defined at:
 11781 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11782 ;; Parameters:    Size  Location     Type
 11783 ;;  multiplier      2    0[COMRAM] unsigned int 
 11784 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;  product         2    4[COMRAM] unsigned int 
 11787 ;; Return value:  Size  Location     Type
 11788 ;;                  2    0[COMRAM] unsigned int 
 11789 ;; Registers used:
 11790 ;;		wreg, status,2, status,0, prodl, prodh
 11791 ;; Tracked objects:
 11792 ;;		On entry : 0/0
 11793 ;;		On exit  : 0/0
 11794 ;;		Unchanged: 0/0
 11795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11797 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11800 ;;Total ram usage:        6 bytes
 11801 ;; Hardware stack levels used: 1
 11802 ;; Hardware stack levels required when called: 1
 11803 ;; This function calls:
 11804 ;;		Nothing
 11805 ;; This function is called by:
 11806 ;;		_detect_color
 11807 ;;		_setMotorPWM
 11808 ;; This function uses a non-reentrant model
 11809 ;;
 11810                           
 11811                           	psect	text57
 11812  005ABC                     __ptext57:
 11813                           	callstack 0
 11814  005ABC                     ___wmul:
 11815                           	callstack 27
 11816  005ABC  5001               	movf	___wmul@multiplier^0,w,c
 11817  005ABE  0203               	mulwf	___wmul@multiplicand^0,c
 11818  005AC0  CFF3 F005          	movff	prodl,___wmul@product
 11819  005AC4  CFF4 F006          	movff	prodh,___wmul@product+1
 11820  005AC8  5001               	movf	___wmul@multiplier^0,w,c
 11821  005ACA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11822  005ACC  50F3               	movf	243,w,c
 11823  005ACE  2606               	addwf	(___wmul@product+1)^0,f,c
 11824  005AD0  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11825  005AD2  0203               	mulwf	___wmul@multiplicand^0,c
 11826  005AD4  50F3               	movf	243,w,c
 11827  005AD6  2606               	addwf	(___wmul@product+1)^0,f,c
 11828  005AD8  C005  F001         	movff	___wmul@product,?___wmul
 11829  005ADC  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11830  005AE0  0012               	return		;funcret
 11831  005AE2                     __end_of___wmul:
 11832                           	callstack 0
 11833                           
 11834 ;; *************** function ___awdiv *****************
 11835 ;; Defined at:
 11836 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11837 ;; Parameters:    Size  Location     Type
 11838 ;;  dividend        2    6[COMRAM] int 
 11839 ;;  divisor         2    8[COMRAM] int 
 11840 ;; Auto vars:     Size  Location     Type
 11841 ;;  quotient        2   12[COMRAM] int 
 11842 ;;  sign            1   11[COMRAM] unsigned char 
 11843 ;;  counter         1   10[COMRAM] unsigned char 
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  2    6[COMRAM] int 
 11846 ;; Registers used:
 11847 ;;		wreg, status,2, status,0
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11854 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11856 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11857 ;;Total ram usage:        8 bytes
 11858 ;; Hardware stack levels used: 1
 11859 ;; Hardware stack levels required when called: 1
 11860 ;; This function calls:
 11861 ;;		Nothing
 11862 ;; This function is called by:
 11863 ;;		_setMotorPWM
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text58
 11868  004FFC                     __ptext58:
 11869                           	callstack 0
 11870  004FFC                     ___awdiv:
 11871                           	callstack 26
 11872  004FFC  0E00               	movlw	0
 11873  004FFE  6E0C               	movwf	___awdiv@sign^0,c
 11874  005000  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11875  005002  EF07  F028         	goto	u3070
 11876  005006  EF05  F028         	goto	u3071
 11877  00500A                     u3071:
 11878  00500A  EF0D  F028         	goto	l3764
 11879  00500E                     u3070:
 11880  00500E  6C09               	negf	___awdiv@divisor^0,c
 11881  005010  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11882  005012  B0D8               	btfsc	status,0,c
 11883  005014  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11884  005016  0E01               	movlw	1
 11885  005018  6E0C               	movwf	___awdiv@sign^0,c
 11886  00501A                     l3764:
 11887  00501A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11888  00501C  EF14  F028         	goto	u3080
 11889  005020  EF12  F028         	goto	u3081
 11890  005024                     u3081:
 11891  005024  EF1A  F028         	goto	l3770
 11892  005028                     u3080:
 11893  005028  6C07               	negf	___awdiv@dividend^0,c
 11894  00502A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11895  00502C  B0D8               	btfsc	status,0,c
 11896  00502E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11897  005030  0E01               	movlw	1
 11898  005032  1A0C               	xorwf	___awdiv@sign^0,f,c
 11899  005034                     l3770:
 11900  005034  0E00               	movlw	0
 11901  005036  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11902  005038  0E00               	movlw	0
 11903  00503A  6E0D               	movwf	___awdiv@quotient^0,c
 11904  00503C  5009               	movf	___awdiv@divisor^0,w,c
 11905  00503E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11906  005040  B4D8               	btfsc	status,2,c
 11907  005042  EF25  F028         	goto	u3091
 11908  005046  EF27  F028         	goto	u3090
 11909  00504A                     u3091:
 11910  00504A  EF4F  F028         	goto	l3792
 11911  00504E                     u3090:
 11912  00504E  0E01               	movlw	1
 11913  005050  6E0B               	movwf	___awdiv@counter^0,c
 11914  005052  EF2F  F028         	goto	l3778
 11915  005056                     l3776:
 11916  005056  90D8               	bcf	status,0,c
 11917  005058  3609               	rlcf	___awdiv@divisor^0,f,c
 11918  00505A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11919  00505C  2A0B               	incf	___awdiv@counter^0,f,c
 11920  00505E                     l3778:
 11921  00505E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11922  005060  EF34  F028         	goto	u3101
 11923  005064  EF36  F028         	goto	u3100
 11924  005068                     u3101:
 11925  005068  EF2B  F028         	goto	l3776
 11926  00506C                     u3100:
 11927  00506C                     l3780:
 11928  00506C  90D8               	bcf	status,0,c
 11929  00506E  360D               	rlcf	___awdiv@quotient^0,f,c
 11930  005070  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11931  005072  5009               	movf	___awdiv@divisor^0,w,c
 11932  005074  5C07               	subwf	___awdiv@dividend^0,w,c
 11933  005076  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11934  005078  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11935  00507A  A0D8               	btfss	status,0,c
 11936  00507C  EF42  F028         	goto	u3111
 11937  005080  EF44  F028         	goto	u3110
 11938  005084                     u3111:
 11939  005084  EF49  F028         	goto	l3788
 11940  005088                     u3110:
 11941  005088  5009               	movf	___awdiv@divisor^0,w,c
 11942  00508A  5E07               	subwf	___awdiv@dividend^0,f,c
 11943  00508C  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11944  00508E  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11945  005090  800D               	bsf	___awdiv@quotient^0,0,c
 11946  005092                     l3788:
 11947  005092  90D8               	bcf	status,0,c
 11948  005094  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11949  005096  3209               	rrcf	___awdiv@divisor^0,f,c
 11950  005098  2E0B               	decfsz	___awdiv@counter^0,f,c
 11951  00509A  EF36  F028         	goto	l3780
 11952  00509E                     l3792:
 11953  00509E  500C               	movf	___awdiv@sign^0,w,c
 11954  0050A0  B4D8               	btfsc	status,2,c
 11955  0050A2  EF55  F028         	goto	u3121
 11956  0050A6  EF57  F028         	goto	u3120
 11957  0050AA                     u3121:
 11958  0050AA  EF5B  F028         	goto	l3796
 11959  0050AE                     u3120:
 11960  0050AE  6C0D               	negf	___awdiv@quotient^0,c
 11961  0050B0  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11962  0050B2  B0D8               	btfsc	status,0,c
 11963  0050B4  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11964  0050B6                     l3796:
 11965  0050B6  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11966  0050BA  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11967  0050BE  0012               	return		;funcret
 11968  0050C0                     __end_of___awdiv:
 11969                           	callstack 0
 11970                           
 11971 ;; *************** function _color_predict *****************
 11972 ;; Defined at:
 11973 ;;		line 250 in file "color.c"
 11974 ;; Parameters:    Size  Location     Type
 11975 ;;  color           1    wreg     unsigned char 
 11976 ;; Auto vars:     Size  Location     Type
 11977 ;;  color           1  125[BANK0 ] unsigned char 
 11978 ;;  buf           100   25[BANK0 ] unsigned char [100]
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11989 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11991 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11992 ;;Total ram usage:      101 bytes
 11993 ;; Hardware stack levels used: 1
 11994 ;; Hardware stack levels required when called: 9
 11995 ;; This function calls:
 11996 ;;		_sendStringSerial4
 11997 ;;		_sprintf
 11998 ;; This function is called by:
 11999 ;;		_color_data_collection
 12000 ;;		_main
 12001 ;;		_goback
 12002 ;;		_test_function
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           	psect	text59
 12007  005A3C                     __ptext59:
 12008                           	callstack 0
 12009  005A3C                     _color_predict:
 12010                           	callstack 20
 12011                           
 12012                           ;incstack = 0
 12013                           ;color_predict@color stored from wreg
 12014  005A3C  0100               	movlb	0	; () banked
 12015  005A3E  6FDD               	movwf	color_predict@color& (0+255),b
 12016  005A40                     
 12017                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 12018  005A40  0E79               	movlw	low color_predict@buf
 12019  005A42  0100               	movlb	0	; () banked
 12020  005A44  6F60               	movwf	sprintf@s& (0+255),b
 12021  005A46  0E00               	movlw	high color_predict@buf
 12022  005A48  6F61               	movwf	(sprintf@s+1)& (0+255),b
 12023  005A4A  0E0D               	movlw	low (STR_1+8)
 12024  005A4C  6F62               	movwf	sprintf@fmt& (0+255),b
 12025  005A4E  0E0E               	movlw	high (STR_1+8)
 12026  005A50  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 12027  005A52  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 12028  005A56  6B65               	clrf	(?_sprintf+5)& (0+255),b
 12029  005A58  EC85  F02A         	call	_sprintf	;wreg free
 12030  005A5C                     
 12031                           ;color.c: 254:     sendStringSerial4(buf);
 12032  005A5C  0E79               	movlw	low color_predict@buf
 12033  005A5E  6E02               	movwf	sendStringSerial4@string^0,c
 12034  005A60  0E00               	movlw	high color_predict@buf
 12035  005A62  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 12036  005A64  EC06  F02D         	call	_sendStringSerial4	;wreg free
 12037  005A68  0012               	return		;funcret
 12038  005A6A                     __end_of_color_predict:
 12039                           	callstack 0
 12040                           
 12041 ;; *************** function _sprintf *****************
 12042 ;; Defined at:
 12043 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  s               2    0[BANK0 ] PTR unsigned char 
 12046 ;;		 -> detect_color@buf(100), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 12047 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 12048 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(6), 
 12049 ;;		 -> STR_2(12), STR_1(14), 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  f              11   14[BANK0 ] struct _IO_FILE
 12052 ;;  ap              2   12[BANK0 ] PTR void [1]
 12053 ;;		 -> ?_sprintf(2), 
 12054 ;;  ret             2    0        int 
 12055 ;; Return value:  Size  Location     Type
 12056 ;;                  2    0[BANK0 ] int 
 12057 ;; Registers used:
 12058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12059 ;; Tracked objects:
 12060 ;;		On entry : 0/0
 12061 ;;		On exit  : 0/0
 12062 ;;		Unchanged: 0/0
 12063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12064 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12065 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12067 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12068 ;;Total ram usage:       25 bytes
 12069 ;; Hardware stack levels used: 1
 12070 ;; Hardware stack levels required when called: 8
 12071 ;; This function calls:
 12072 ;;		_vfprintf
 12073 ;; This function is called by:
 12074 ;;		_color_display
 12075 ;;		_color_predict
 12076 ;;		_detect_color
 12077 ;;		_check_color_reading
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text60
 12082  00550A                     __ptext60:
 12083                           	callstack 0
 12084  00550A                     _sprintf:
 12085                           	callstack 20
 12086  00550A  0E64               	movlw	low (?_sprintf+4)
 12087  00550C  0100               	movlb	0	; () banked
 12088  00550E  6F6C               	movwf	sprintf@ap& (0+255),b
 12089  005510  0E00               	movlw	high (?_sprintf+4)
 12090  005512  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 12091  005514  C060  F06E         	movff	sprintf@s,sprintf@f
 12092  005518  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 12093  00551C                     
 12094                           ; BSR set to: 0
 12095  00551C  0E00               	movlw	0
 12096  00551E  6F72               	movwf	(sprintf@f+4)& (0+255),b
 12097  005520  0E00               	movlw	0
 12098  005522  6F71               	movwf	(sprintf@f+3)& (0+255),b
 12099  005524                     
 12100                           ; BSR set to: 0
 12101  005524  0E00               	movlw	0
 12102  005526  6F78               	movwf	(sprintf@f+10)& (0+255),b
 12103  005528  0E00               	movlw	0
 12104  00552A  6F77               	movwf	(sprintf@f+9)& (0+255),b
 12105  00552C                     
 12106                           ; BSR set to: 0
 12107  00552C  0E6E               	movlw	low sprintf@f
 12108  00552E  6E50               	movwf	vfprintf@fp^0,c
 12109  005530  0E00               	movlw	high sprintf@f
 12110  005532  6E51               	movwf	(vfprintf@fp+1)^0,c
 12111  005534  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 12112  005538  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 12113  00553C  0E6C               	movlw	low sprintf@ap
 12114  00553E  6E54               	movwf	vfprintf@ap^0,c
 12115  005540  0E00               	movlw	high sprintf@ap
 12116  005542  6E55               	movwf	(vfprintf@ap+1)^0,c
 12117  005544  EC25  F02A         	call	_vfprintf	;wreg free
 12118  005548  0100               	movlb	0	; () banked
 12119  00554A  5171               	movf	(sprintf@f+3)& (0+255),w,b
 12120  00554C  2560               	addwf	sprintf@s& (0+255),w,b
 12121  00554E  6ED9               	movwf	fsr2l,c
 12122  005550  5172               	movf	(sprintf@f+4)& (0+255),w,b
 12123  005552  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 12124  005554  6EDA               	movwf	fsr2h,c
 12125  005556  0E00               	movlw	0
 12126  005558  6EDF               	movwf	indf2,c
 12127  00555A                     
 12128                           ; BSR set to: 0
 12129  00555A  0012               	return		;funcret
 12130  00555C                     __end_of_sprintf:
 12131                           	callstack 0
 12132                           
 12133 ;; *************** function _vfprintf *****************
 12134 ;; Defined at:
 12135 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12136 ;; Parameters:    Size  Location     Type
 12137 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 12138 ;;		 -> sprintf@f(11), 
 12139 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 12140 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(6), 
 12141 ;;		 -> STR_2(12), STR_1(14), 
 12142 ;;  ap              2   83[COMRAM] PTR PTR void 
 12143 ;;		 -> sprintf@ap(2), 
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 12146 ;;		 -> STR_6(11), STR_5(11), STR_4(11), STR_3(6), 
 12147 ;;		 -> STR_2(12), STR_1(14), 
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  2   79[COMRAM] int 
 12150 ;; Registers used:
 12151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12157 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12160 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12161 ;;Total ram usage:        8 bytes
 12162 ;; Hardware stack levels used: 1
 12163 ;; Hardware stack levels required when called: 7
 12164 ;; This function calls:
 12165 ;;		_vfpfcnvrt
 12166 ;; This function is called by:
 12167 ;;		_sprintf
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text61
 12172  00544A                     __ptext61:
 12173                           	callstack 0
 12174  00544A                     _vfprintf:
 12175                           	callstack 20
 12176  00544A                     
 12177                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12178  00544A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12179  00544E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12180  005452                     
 12181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12182  005452  0E00               	movlw	0
 12183  005454  0101               	movlb	1	; () banked
 12184  005456  6F55               	movwf	(_nout+1)& (0+255),b
 12185  005458  0E00               	movlw	0
 12186  00545A  6F54               	movwf	_nout& (0+255),b
 12187                           
 12188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12189  00545C  EF43  F02A         	goto	l4352
 12190  005460                     l4350:
 12191                           
 12192                           ; BSR set to: 1
 12193                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12194  005460  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12195  005464  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12196  005468  0E56               	movlw	low vfprintf@cfmt
 12197  00546A  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12198  00546C  0E00               	movlw	high vfprintf@cfmt
 12199  00546E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12200  005470  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12201  005474  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12202  005478  EC2D  F020         	call	_vfpfcnvrt	;wreg free
 12203  00547C  5040               	movf	?_vfpfcnvrt^0,w,c
 12204  00547E  0101               	movlb	1	; () banked
 12205  005480  2754               	addwf	_nout& (0+255),f,b
 12206  005482  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12207  005484  2355               	addwfc	(_nout+1)& (0+255),f,b
 12208  005486                     l4352:
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12212  005486  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12213  00548A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12214  00548E                     	if	0	;tblptru may be non-zero
 12215  00548E                     	endif
 12216  00548E                     	if	0	;tblptru may be non-zero
 12217  00548E                     	endif
 12218  00548E  0008               	tblrd		*
 12219  005490  50F5               	movf	tablat,w,c
 12220  005492  0900               	iorlw	0
 12221  005494  A4D8               	btfss	status,2,c
 12222  005496  EF4F  F02A         	goto	u4091
 12223  00549A  EF51  F02A         	goto	u4090
 12224  00549E                     u4091:
 12225  00549E  EF30  F02A         	goto	l4350
 12226  0054A2                     u4090:
 12227  0054A2                     
 12228                           ; BSR set to: 1
 12229                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12230  0054A2  C154  F050         	movff	_nout,?_vfprintf
 12231  0054A6  C155  F051         	movff	_nout+1,?_vfprintf+1
 12232  0054AA                     
 12233                           ; BSR set to: 1
 12234  0054AA  0012               	return		;funcret
 12235  0054AC                     __end_of_vfprintf:
 12236                           	callstack 0
 12237                           
 12238 ;; *************** function _vfpfcnvrt *****************
 12239 ;; Defined at:
 12240 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12243 ;;		 -> sprintf@f(11), 
 12244 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12245 ;;		 -> vfprintf@cfmt(2), 
 12246 ;;  ap              2   67[COMRAM] PTR PTR void 
 12247 ;;		 -> sprintf@ap(2), 
 12248 ;; Auto vars:     Size  Location     Type
 12249 ;;  ll              8   71[COMRAM] long long 
 12250 ;;  llu             8    0        unsigned long long 
 12251 ;;  f               4    0        unsigned long long 
 12252 ;;  vp              3    0        PTR void 
 12253 ;;  ct              3    0        unsigned char [3]
 12254 ;;  cp              3    0        PTR unsigned char 
 12255 ;;  i               2    0        int 
 12256 ;;  done            2    0        int 
 12257 ;;  c               1    0        unsigned char 
 12258 ;; Return value:  Size  Location     Type
 12259 ;;                  2   63[COMRAM] int 
 12260 ;; Registers used:
 12261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12262 ;; Tracked objects:
 12263 ;;		On entry : 0/0
 12264 ;;		On exit  : 0/0
 12265 ;;		Unchanged: 0/0
 12266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12267 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12268 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;Total ram usage:       16 bytes
 12272 ;; Hardware stack levels used: 1
 12273 ;; Hardware stack levels required when called: 6
 12274 ;; This function calls:
 12275 ;;		_dtoa
 12276 ;;		_fputc
 12277 ;; This function is called by:
 12278 ;;		_vfprintf
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text62
 12283  00405A                     __ptext62:
 12284                           	callstack 0
 12285  00405A                     _vfpfcnvrt:
 12286                           	callstack 20
 12287  00405A                     
 12288                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12289  00405A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12290  00405E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12291  004062  CFDE FFF6          	movff	postinc2,tblptrl
 12292  004066  CFDD FFF7          	movff	postdec2,tblptrh
 12293  00406A                     	if	0	;tblptru may be non-zero
 12294  00406A                     	endif
 12295  00406A                     	if	0	;tblptru may be non-zero
 12296  00406A                     	endif
 12297  00406A  0008               	tblrd		*
 12298  00406C  50F5               	movf	tablat,w,c
 12299  00406E  0A25               	xorlw	37
 12300  004070  A4D8               	btfss	status,2,c
 12301  004072  EF3D  F020         	goto	u3731
 12302  004076  EF3F  F020         	goto	u3730
 12303  00407A                     u3731:
 12304  00407A  EFEB  F020         	goto	l4116
 12305  00407E                     u3730:
 12306  00407E                     
 12307                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12308  00407E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12309  004082  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12310  004086  2ADE               	incf	postinc2,f,c
 12311  004088  0E00               	movlw	0
 12312  00408A  22DD               	addwfc	postdec2,f,c
 12313  00408C                     
 12314                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12315  00408C  0E00               	movlw	0
 12316  00408E  0101               	movlb	1	; () banked
 12317  004090  6F57               	movwf	(_width+1)& (0+255),b
 12318  004092  0E00               	movlw	0
 12319  004094  6F56               	movwf	_width& (0+255),b
 12320  004096  C156  F15A         	movff	_width,_flags
 12321  00409A  C157  F15B         	movff	_width+1,_flags+1
 12322  00409E                     
 12323                           ; BSR set to: 1
 12324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12325  00409E  6958               	setf	_prec& (0+255),b
 12326  0040A0  6959               	setf	(_prec+1)& (0+255),b
 12327  0040A2                     
 12328                           ; BSR set to: 1
 12329                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12330  0040A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12331  0040A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12332  0040AA  CFDE FFF6          	movff	postinc2,tblptrl
 12333  0040AE  CFDD FFF7          	movff	postdec2,tblptrh
 12334  0040B2                     	if	0	;tblptru may be non-zero
 12335  0040B2                     	endif
 12336  0040B2                     	if	0	;tblptru may be non-zero
 12337  0040B2                     	endif
 12338  0040B2  0008               	tblrd		*
 12339  0040B4  50F5               	movf	tablat,w,c
 12340  0040B6  0A64               	xorlw	100
 12341  0040B8  B4D8               	btfsc	status,2,c
 12342  0040BA  EF61  F020         	goto	u3741
 12343  0040BE  EF63  F020         	goto	u3740
 12344  0040C2                     u3741:
 12345  0040C2  EF75  F020         	goto	l4094
 12346  0040C6                     u3740:
 12347  0040C6                     
 12348                           ; BSR set to: 1
 12349  0040C6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12350  0040CA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12351  0040CE  CFDE FFF6          	movff	postinc2,tblptrl
 12352  0040D2  CFDD FFF7          	movff	postdec2,tblptrh
 12353  0040D6                     	if	0	;tblptru may be non-zero
 12354  0040D6                     	endif
 12355  0040D6                     	if	0	;tblptru may be non-zero
 12356  0040D6                     	endif
 12357  0040D6  0008               	tblrd		*
 12358  0040D8  50F5               	movf	tablat,w,c
 12359  0040DA  0A69               	xorlw	105
 12360  0040DC  A4D8               	btfss	status,2,c
 12361  0040DE  EF73  F020         	goto	u3751
 12362  0040E2  EF75  F020         	goto	u3750
 12363  0040E6                     u3751:
 12364  0040E6  EFB5  F020         	goto	l4100
 12365  0040EA                     u3750:
 12366  0040EA                     l4094:
 12367                           
 12368                           ; BSR set to: 1
 12369                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12370  0040EA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12371  0040EE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12372  0040F2  2ADE               	incf	postinc2,f,c
 12373  0040F4  0E00               	movlw	0
 12374  0040F6  22DD               	addwfc	postdec2,f,c
 12375                           
 12376                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12377  0040F8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12378  0040FC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12379  004100  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12380  004104  0E02               	movlw	2
 12381  004106  26DE               	addwf	postinc2,f,c
 12382  004108  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12383  00410C  0E00               	movlw	0
 12384  00410E  22DD               	addwfc	postdec2,f,c
 12385  004110  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12386  004114  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12387  004118  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12388  00411C  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12389  004120  0E00               	movlw	0
 12390  004122  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12391  004124  0EFF               	movlw	-1
 12392  004126  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12393  004128  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12394  00412A  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12395  00412C  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12396  00412E  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12397  004130  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12398  004132                     
 12399                           ; BSR set to: 1
 12400                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12401  004132  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12402  004136  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12403  00413A  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12404  00413E  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12405  004142  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12406  004146  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12407  00414A  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12408  00414E  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12409  004152  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12410  004156  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12411  00415A  EC7F  F017         	call	_dtoa	;wreg free
 12412  00415E  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12413  004162  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12414  004166  EF06  F021         	goto	l1522
 12415  00416A                     l4100:
 12416                           
 12417                           ; BSR set to: 1
 12418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12419  00416A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12420  00416E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12421  004172  CFDE FFF6          	movff	postinc2,tblptrl
 12422  004176  CFDD FFF7          	movff	postdec2,tblptrh
 12423  00417A                     	if	0	;tblptru may be non-zero
 12424  00417A                     	endif
 12425  00417A                     	if	0	;tblptru may be non-zero
 12426  00417A                     	endif
 12427  00417A  0008               	tblrd		*
 12428  00417C  50F5               	movf	tablat,w,c
 12429  00417E  0A25               	xorlw	37
 12430  004180  A4D8               	btfss	status,2,c
 12431  004182  EFC5  F020         	goto	u3761
 12432  004186  EFC7  F020         	goto	u3760
 12433  00418A                     u3761:
 12434  00418A  EFDE  F020         	goto	l4110
 12435  00418E                     u3760:
 12436  00418E                     
 12437                           ; BSR set to: 1
 12438                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12439  00418E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12440  004192  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12441  004196  2ADE               	incf	postinc2,f,c
 12442  004198  0E00               	movlw	0
 12443  00419A  22DD               	addwfc	postdec2,f,c
 12444  00419C                     
 12445                           ; BSR set to: 1
 12446                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12447  00419C  0E00               	movlw	0
 12448  00419E  6E02               	movwf	(fputc@c+1)^0,c
 12449  0041A0  0E25               	movlw	37
 12450  0041A2  6E01               	movwf	fputc@c^0,c
 12451  0041A4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12452  0041A8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12453  0041AC  ECD3  F026         	call	_fputc	;wreg free
 12454  0041B0                     l4106:
 12455                           
 12456                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12457  0041B0  0E00               	movlw	0
 12458  0041B2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12459  0041B4  0E01               	movlw	1
 12460  0041B6  6E40               	movwf	?_vfpfcnvrt^0,c
 12461  0041B8  EF06  F021         	goto	l1522
 12462  0041BC                     l4110:
 12463                           
 12464                           ; BSR set to: 1
 12465                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12466  0041BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12467  0041C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12468  0041C4  2ADE               	incf	postinc2,f,c
 12469  0041C6  0E00               	movlw	0
 12470  0041C8  22DD               	addwfc	postdec2,f,c
 12471  0041CA                     
 12472                           ; BSR set to: 1
 12473                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12474  0041CA  0E00               	movlw	0
 12475  0041CC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12476  0041CE  0E00               	movlw	0
 12477  0041D0  6E40               	movwf	?_vfpfcnvrt^0,c
 12478  0041D2  EF06  F021         	goto	l1522
 12479  0041D6                     l4116:
 12480                           
 12481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12482  0041D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12483  0041DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12484  0041DE  CFDE FFF6          	movff	postinc2,tblptrl
 12485  0041E2  CFDD FFF7          	movff	postdec2,tblptrh
 12486  0041E6                     	if	0	;tblptru may be non-zero
 12487  0041E6                     	endif
 12488  0041E6                     	if	0	;tblptru may be non-zero
 12489  0041E6                     	endif
 12490  0041E6  0008               	tblrd		*
 12491  0041E8  50F5               	movf	tablat,w,c
 12492  0041EA  6E01               	movwf	fputc@c^0,c
 12493  0041EC  6A02               	clrf	(fputc@c+1)^0,c
 12494  0041EE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12495  0041F2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12496  0041F6  ECD3  F026         	call	_fputc	;wreg free
 12497  0041FA                     
 12498                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12499  0041FA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12500  0041FE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12501  004202  2ADE               	incf	postinc2,f,c
 12502  004204  0E00               	movlw	0
 12503  004206  22DD               	addwfc	postdec2,f,c
 12504  004208  EFD8  F020         	goto	l4106
 12505  00420C                     l1522:
 12506  00420C  0012               	return		;funcret
 12507  00420E                     __end_of_vfpfcnvrt:
 12508                           	callstack 0
 12509                           
 12510 ;; *************** function _dtoa *****************
 12511 ;; Defined at:
 12512 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12515 ;;		 -> sprintf@f(11), 
 12516 ;;  d               8   29[COMRAM] long long 
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;  n               8   53[COMRAM] long long 
 12519 ;;  i               2   61[COMRAM] int 
 12520 ;;  s               2   51[COMRAM] int 
 12521 ;;  w               2   49[COMRAM] int 
 12522 ;;  p               2   47[COMRAM] int 
 12523 ;; Return value:  Size  Location     Type
 12524 ;;                  2   27[COMRAM] int 
 12525 ;; Registers used:
 12526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12527 ;; Tracked objects:
 12528 ;;		On entry : 0/0
 12529 ;;		On exit  : 0/0
 12530 ;;		Unchanged: 0/0
 12531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12532 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12533 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12534 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12535 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12536 ;;Total ram usage:       36 bytes
 12537 ;; Hardware stack levels used: 1
 12538 ;; Hardware stack levels required when called: 5
 12539 ;; This function calls:
 12540 ;;		___aodiv
 12541 ;;		___aomod
 12542 ;;		_abs
 12543 ;;		_pad
 12544 ;; This function is called by:
 12545 ;;		_vfpfcnvrt
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text63
 12550  002EFE                     __ptext63:
 12551                           	callstack 0
 12552  002EFE                     _dtoa:
 12553                           	callstack 20
 12554  002EFE                     
 12555                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12556  002EFE  C01E  F036         	movff	dtoa@d,dtoa@n
 12557  002F02  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12558  002F06  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12559  002F0A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12560  002F0E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12561  002F12  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12562  002F16  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12563  002F1A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12564  002F1E                     
 12565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12566  002F1E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12567  002F20  EF94  F017         	goto	u3131
 12568  002F24  EF97  F017         	goto	u3130
 12569  002F28                     u3131:
 12570  002F28  0E01               	movlw	1
 12571  002F2A  EF98  F017         	goto	u3140
 12572  002F2E                     u3130:
 12573  002F2E  0E00               	movlw	0
 12574  002F30                     u3140:
 12575  002F30  6E34               	movwf	dtoa@s^0,c
 12576  002F32  6A35               	clrf	(dtoa@s+1)^0,c
 12577                           
 12578                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12579  002F34  5034               	movf	dtoa@s^0,w,c
 12580  002F36  1035               	iorwf	(dtoa@s+1)^0,w,c
 12581  002F38  B4D8               	btfsc	status,2,c
 12582  002F3A  EFA1  F017         	goto	u3151
 12583  002F3E  EFA3  F017         	goto	u3150
 12584  002F42                     u3151:
 12585  002F42  EFB3  F017         	goto	l3806
 12586  002F46                     u3150:
 12587  002F46                     
 12588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12589  002F46  1E3D               	comf	(dtoa@n+7)^0,f,c
 12590  002F48  1E3C               	comf	(dtoa@n+6)^0,f,c
 12591  002F4A  1E3B               	comf	(dtoa@n+5)^0,f,c
 12592  002F4C  1E3A               	comf	(dtoa@n+4)^0,f,c
 12593  002F4E  1E39               	comf	(dtoa@n+3)^0,f,c
 12594  002F50  1E38               	comf	(dtoa@n+2)^0,f,c
 12595  002F52  1E37               	comf	(dtoa@n+1)^0,f,c
 12596  002F54  6C36               	negf	dtoa@n^0,c
 12597  002F56  0E00               	movlw	0
 12598  002F58  2237               	addwfc	(dtoa@n+1)^0,f,c
 12599  002F5A  2238               	addwfc	(dtoa@n+2)^0,f,c
 12600  002F5C  2239               	addwfc	(dtoa@n+3)^0,f,c
 12601  002F5E  223A               	addwfc	(dtoa@n+4)^0,f,c
 12602  002F60  223B               	addwfc	(dtoa@n+5)^0,f,c
 12603  002F62  223C               	addwfc	(dtoa@n+6)^0,f,c
 12604  002F64  223D               	addwfc	(dtoa@n+7)^0,f,c
 12605  002F66                     l3806:
 12606                           
 12607                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12608  002F66  0101               	movlb	1	; () banked
 12609  002F68  BF59               	btfsc	(_prec+1)& (0+255),7,b
 12610  002F6A  EFB9  F017         	goto	u3161
 12611  002F6E  EFBB  F017         	goto	u3160
 12612  002F72                     u3161:
 12613  002F72  EFBC  F017         	goto	l3810
 12614  002F76                     u3160:
 12615  002F76                     
 12616                           ; BSR set to: 1
 12617                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12618  002F76  935A               	bcf	_flags& (0+255),1,b
 12619  002F78                     l3810:
 12620                           
 12621                           ; BSR set to: 1
 12622                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12623  002F78  BF59               	btfsc	(_prec+1)& (0+255),7,b
 12624  002F7A  EFC9  F017         	goto	u3170
 12625  002F7E  5159               	movf	(_prec+1)& (0+255),w,b
 12626  002F80  E106               	bnz	u3171
 12627  002F82  0558               	decf	_prec& (0+255),w,b
 12628  002F84  B0D8               	btfsc	status,0,c
 12629  002F86  EFC7  F017         	goto	u3171
 12630  002F8A  EFC9  F017         	goto	u3170
 12631  002F8E                     u3171:
 12632  002F8E  EFCF  F017         	goto	l1495
 12633  002F92                     u3170:
 12634  002F92                     
 12635                           ; BSR set to: 1
 12636  002F92  0E00               	movlw	0
 12637  002F94  6E31               	movwf	(dtoa@p+1)^0,c
 12638  002F96  0E01               	movlw	1
 12639  002F98  6E30               	movwf	dtoa@p^0,c
 12640  002F9A  EFD3  F017         	goto	l1497
 12641  002F9E                     l1495:
 12642                           
 12643                           ; BSR set to: 1
 12644  002F9E  C158  F030         	movff	_prec,dtoa@p
 12645  002FA2  C159  F031         	movff	_prec+1,dtoa@p+1
 12646  002FA6                     l1497:
 12647                           
 12648                           ; BSR set to: 1
 12649                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12650  002FA6  C156  F032         	movff	_width,dtoa@w
 12651  002FAA  C157  F033         	movff	_width+1,dtoa@w+1
 12652  002FAE                     
 12653                           ; BSR set to: 1
 12654                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12655  002FAE  5034               	movf	dtoa@s^0,w,c
 12656  002FB0  1035               	iorwf	(dtoa@s+1)^0,w,c
 12657  002FB2  A4D8               	btfss	status,2,c
 12658  002FB4  EFDE  F017         	goto	u3181
 12659  002FB8  EFE0  F017         	goto	u3180
 12660  002FBC                     u3181:
 12661  002FBC  EFE7  F017         	goto	l3818
 12662  002FC0                     u3180:
 12663  002FC0                     
 12664                           ; BSR set to: 1
 12665  002FC0  A55A               	btfss	_flags& (0+255),2,b
 12666  002FC2  EFE5  F017         	goto	u3191
 12667  002FC6  EFE7  F017         	goto	u3190
 12668  002FCA                     u3191:
 12669  002FCA  EFEA  F017         	goto	l3820
 12670  002FCE                     u3190:
 12671  002FCE                     l3818:
 12672                           
 12673                           ; BSR set to: 1
 12674                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12675  002FCE  0632               	decf	dtoa@w^0,f,c
 12676  002FD0  A0D8               	btfss	status,0,c
 12677  002FD2  0633               	decf	(dtoa@w+1)^0,f,c
 12678  002FD4                     l3820:
 12679                           
 12680                           ; BSR set to: 1
 12681                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12682  002FD4  0E00               	movlw	0
 12683  002FD6  6E3F               	movwf	(dtoa@i+1)^0,c
 12684  002FD8  0E1F               	movlw	31
 12685  002FDA  6E3E               	movwf	dtoa@i^0,c
 12686  002FDC                     
 12687                           ; BSR set to: 1
 12688                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12689  002FDC  0E00               	movlw	0
 12690  002FDE  6F87               	movwf	(_dbuf+31)& (0+255),b
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12693  002FE0  EF6E  F018         	goto	l3834
 12694  002FE4                     l3824:
 12695                           
 12696                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12697  002FE4  063E               	decf	dtoa@i^0,f,c
 12698  002FE6  A0D8               	btfss	status,0,c
 12699  002FE8  063F               	decf	(dtoa@i+1)^0,f,c
 12700  002FEA                     
 12701                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12702  002FEA  0E68               	movlw	low _dbuf
 12703  002FEC  243E               	addwf	dtoa@i^0,w,c
 12704  002FEE  6ED9               	movwf	fsr2l,c
 12705  002FF0  0E01               	movlw	high _dbuf
 12706  002FF2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12707  002FF4  6EDA               	movwf	fsr2h,c
 12708  002FF6  C036  F001         	movff	dtoa@n,___aomod@dividend
 12709  002FFA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12710  002FFE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12711  003002  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12712  003006  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12713  00300A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12714  00300E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12715  003012  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12716  003016  0E0A               	movlw	10
 12717  003018  6E09               	movwf	___aomod@divisor^0,c
 12718  00301A  0E00               	movlw	0
 12719  00301C  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12720  00301E  0E00               	movlw	0
 12721  003020  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12722  003022  0E00               	movlw	0
 12723  003024  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12724  003026  0E00               	movlw	0
 12725  003028  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12726  00302A  0E00               	movlw	0
 12727  00302C  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12728  00302E  0E00               	movlw	0
 12729  003030  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12730  003032  0E00               	movlw	0
 12731  003034  6E10               	movwf	(___aomod@divisor+7)^0,c
 12732  003036  EC1E  F024         	call	___aomod	;wreg free
 12733  00303A  C001  F026         	movff	?___aomod,??_dtoa
 12734  00303E  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12735  003042  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12736  003046  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12737  00304A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12738  00304E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12739  003052  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12740  003056  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12741  00305A  C026  F013         	movff	??_dtoa,abs@a
 12742  00305E  C028  F014         	movff	??_dtoa+2,abs@a+1
 12743  003062  EC5B  F02C         	call	_abs	;wreg free
 12744  003066  5013               	movf	?_abs^0,w,c
 12745  003068  0F30               	addlw	48
 12746  00306A  6EDF               	movwf	indf2,c
 12747  00306C                     
 12748                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12749  00306C  0630               	decf	dtoa@p^0,f,c
 12750  00306E  A0D8               	btfss	status,0,c
 12751  003070  0631               	decf	(dtoa@p+1)^0,f,c
 12752  003072                     
 12753                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12754  003072  0632               	decf	dtoa@w^0,f,c
 12755  003074  A0D8               	btfss	status,0,c
 12756  003076  0633               	decf	(dtoa@w+1)^0,f,c
 12757  003078                     
 12758                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12759  003078  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12760  00307C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12761  003080  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12762  003084  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12763  003088  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12764  00308C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12765  003090  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12766  003094  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12767  003098  0E0A               	movlw	10
 12768  00309A  6E09               	movwf	___aodiv@divisor^0,c
 12769  00309C  0E00               	movlw	0
 12770  00309E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12771  0030A0  0E00               	movlw	0
 12772  0030A2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12773  0030A4  0E00               	movlw	0
 12774  0030A6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12775  0030A8  0E00               	movlw	0
 12776  0030AA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12777  0030AC  0E00               	movlw	0
 12778  0030AE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12779  0030B0  0E00               	movlw	0
 12780  0030B2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12781  0030B4  0E00               	movlw	0
 12782  0030B6  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12783  0030B8  EC5A  F023         	call	___aodiv	;wreg free
 12784  0030BC  C001  F036         	movff	?___aodiv,dtoa@n
 12785  0030C0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12786  0030C4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12787  0030C8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12788  0030CC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12789  0030D0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12790  0030D4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12791  0030D8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12792  0030DC                     l3834:
 12793                           
 12794                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12795  0030DC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12796  0030DE  EF79  F018         	goto	u3201
 12797  0030E2  503F               	movf	(dtoa@i+1)^0,w,c
 12798  0030E4  E108               	bnz	u3200
 12799  0030E6  043E               	decf	dtoa@i^0,w,c
 12800  0030E8  A0D8               	btfss	status,0,c
 12801  0030EA  EF79  F018         	goto	u3201
 12802  0030EE  EF7B  F018         	goto	u3200
 12803  0030F2                     u3201:
 12804  0030F2  EFAC  F018         	goto	l3844
 12805  0030F6                     u3200:
 12806  0030F6  5036               	movf	dtoa@n^0,w,c
 12807  0030F8  1037               	iorwf	(dtoa@n+1)^0,w,c
 12808  0030FA  1038               	iorwf	(dtoa@n+2)^0,w,c
 12809  0030FC  1039               	iorwf	(dtoa@n+3)^0,w,c
 12810  0030FE  103A               	iorwf	(dtoa@n+4)^0,w,c
 12811  003100  103B               	iorwf	(dtoa@n+5)^0,w,c
 12812  003102  103C               	iorwf	(dtoa@n+6)^0,w,c
 12813  003104  103D               	iorwf	(dtoa@n+7)^0,w,c
 12814  003106  A4D8               	btfss	status,2,c
 12815  003108  EF88  F018         	goto	u3211
 12816  00310C  EF8A  F018         	goto	u3210
 12817  003110                     u3211:
 12818  003110  EFF2  F017         	goto	l3824
 12819  003114                     u3210:
 12820  003114  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12821  003116  EF97  F018         	goto	u3220
 12822  00311A  5031               	movf	(dtoa@p+1)^0,w,c
 12823  00311C  E106               	bnz	u3221
 12824  00311E  0430               	decf	dtoa@p^0,w,c
 12825  003120  B0D8               	btfsc	status,0,c
 12826  003122  EF95  F018         	goto	u3221
 12827  003126  EF97  F018         	goto	u3220
 12828  00312A                     u3221:
 12829  00312A  EFF2  F017         	goto	l3824
 12830  00312E                     u3220:
 12831  00312E  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12832  003130  EFA2  F018         	goto	u3231
 12833  003134  5033               	movf	(dtoa@w+1)^0,w,c
 12834  003136  E108               	bnz	u3230
 12835  003138  0432               	decf	dtoa@w^0,w,c
 12836  00313A  A0D8               	btfss	status,0,c
 12837  00313C  EFA2  F018         	goto	u3231
 12838  003140  EFA4  F018         	goto	u3230
 12839  003144                     u3231:
 12840  003144  EFAC  F018         	goto	l3844
 12841  003148                     u3230:
 12842  003148  0101               	movlb	1	; () banked
 12843  00314A  B35A               	btfsc	_flags& (0+255),1,b
 12844  00314C  EFAA  F018         	goto	u3241
 12845  003150  EFAC  F018         	goto	u3240
 12846  003154                     u3241:
 12847  003154  EFF2  F017         	goto	l3824
 12848  003158                     u3240:
 12849  003158                     l3844:
 12850                           
 12851                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12852  003158  5034               	movf	dtoa@s^0,w,c
 12853  00315A  1035               	iorwf	(dtoa@s+1)^0,w,c
 12854  00315C  A4D8               	btfss	status,2,c
 12855  00315E  EFB3  F018         	goto	u3251
 12856  003162  EFB5  F018         	goto	u3250
 12857  003166                     u3251:
 12858  003166  EFBD  F018         	goto	l3848
 12859  00316A                     u3250:
 12860  00316A  0101               	movlb	1	; () banked
 12861  00316C  A55A               	btfss	_flags& (0+255),2,b
 12862  00316E  EFBB  F018         	goto	u3261
 12863  003172  EFBD  F018         	goto	u3260
 12864  003176                     u3261:
 12865  003176  EFDB  F018         	goto	l3858
 12866  00317A                     u3260:
 12867  00317A                     l3848:
 12868                           
 12869                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12870  00317A  063E               	decf	dtoa@i^0,f,c
 12871  00317C  A0D8               	btfss	status,0,c
 12872  00317E  063F               	decf	(dtoa@i+1)^0,f,c
 12873  003180                     
 12874                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12875  003180  5034               	movf	dtoa@s^0,w,c
 12876  003182  1035               	iorwf	(dtoa@s+1)^0,w,c
 12877  003184  A4D8               	btfss	status,2,c
 12878  003186  EFC7  F018         	goto	u3271
 12879  00318A  EFC9  F018         	goto	u3270
 12880  00318E                     u3271:
 12881  00318E  EFCF  F018         	goto	l3854
 12882  003192                     u3270:
 12883  003192  0E00               	movlw	0
 12884  003194  6E2F               	movwf	(_dtoa$2887+1)^0,c
 12885  003196  0E2B               	movlw	43
 12886  003198  6E2E               	movwf	_dtoa$2887^0,c
 12887  00319A  EFD3  F018         	goto	l3856
 12888  00319E                     l3854:
 12889  00319E  0E00               	movlw	0
 12890  0031A0  6E2F               	movwf	(_dtoa$2887+1)^0,c
 12891  0031A2  0E2D               	movlw	45
 12892  0031A4  6E2E               	movwf	_dtoa$2887^0,c
 12893  0031A6                     l3856:
 12894  0031A6  0E68               	movlw	low _dbuf
 12895  0031A8  243E               	addwf	dtoa@i^0,w,c
 12896  0031AA  6ED9               	movwf	fsr2l,c
 12897  0031AC  0E01               	movlw	high _dbuf
 12898  0031AE  203F               	addwfc	(dtoa@i+1)^0,w,c
 12899  0031B0  6EDA               	movwf	fsr2h,c
 12900  0031B2  C02E  FFDF         	movff	_dtoa$2887,indf2
 12901  0031B6                     l3858:
 12902                           
 12903                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12904  0031B6  C01C  F011         	movff	dtoa@fp,pad@fp
 12905  0031BA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12906  0031BE  0E68               	movlw	low _dbuf
 12907  0031C0  243E               	addwf	dtoa@i^0,w,c
 12908  0031C2  6E13               	movwf	pad@buf^0,c
 12909  0031C4  0E01               	movlw	high _dbuf
 12910  0031C6  203F               	addwfc	(dtoa@i+1)^0,w,c
 12911  0031C8  6E14               	movwf	(pad@buf+1)^0,c
 12912  0031CA  C032  F015         	movff	dtoa@w,pad@p
 12913  0031CE  C033  F016         	movff	dtoa@w+1,pad@p+1
 12914  0031D2  EC9B  F027         	call	_pad	;wreg free
 12915  0031D6  C011  F01C         	movff	?_pad,?_dtoa
 12916  0031DA  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12917  0031DE  0012               	return		;funcret
 12918  0031E0                     __end_of_dtoa:
 12919                           	callstack 0
 12920                           
 12921 ;; *************** function _pad *****************
 12922 ;; Defined at:
 12923 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12924 ;; Parameters:    Size  Location     Type
 12925 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12926 ;;		 -> sprintf@f(11), 
 12927 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12928 ;;		 -> dbuf(32), 
 12929 ;;  p               2   20[COMRAM] int 
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;  w               2   25[COMRAM] int 
 12932 ;;  i               2   23[COMRAM] int 
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  2   16[COMRAM] int 
 12935 ;; Registers used:
 12936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12942 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12945 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12946 ;;Total ram usage:       11 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 4
 12949 ;; This function calls:
 12950 ;;		_fputc
 12951 ;;		_fputs
 12952 ;;		_strlen
 12953 ;; This function is called by:
 12954 ;;		_dtoa
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           	psect	text64
 12959  004F36                     __ptext64:
 12960                           	callstack 0
 12961  004F36                     _pad:
 12962                           	callstack 20
 12963  004F36                     
 12964                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12965  004F36  0101               	movlb	1	; () banked
 12966  004F38  A15A               	btfss	_flags& (0+255),0,b
 12967  004F3A  EFA1  F027         	goto	u3021
 12968  004F3E  EFA3  F027         	goto	u3020
 12969  004F42                     u3021:
 12970  004F42  EFAD  F027         	goto	l3728
 12971  004F46                     u3020:
 12972  004F46                     
 12973                           ; BSR set to: 1
 12974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12975  004F46  C013  F00A         	movff	pad@buf,fputs@s
 12976  004F4A  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12977  004F4E  C011  F00C         	movff	pad@fp,fputs@fp
 12978  004F52  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12979  004F56  EC95  F02B         	call	_fputs	;wreg free
 12980  004F5A                     l3728:
 12981                           
 12982                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12983  004F5A  BE16               	btfsc	(pad@p+1)^0,7,c
 12984  004F5C  EFB2  F027         	goto	u3031
 12985  004F60  EFB4  F027         	goto	u3030
 12986  004F64                     u3031:
 12987  004F64  EFBA  F027         	goto	l3732
 12988  004F68                     u3030:
 12989  004F68  C015  F01A         	movff	pad@p,pad@w
 12990  004F6C  C016  F01B         	movff	pad@p+1,pad@w+1
 12991  004F70  EFBE  F027         	goto	l1484
 12992  004F74                     l3732:
 12993  004F74  0E00               	movlw	0
 12994  004F76  6E1B               	movwf	(pad@w+1)^0,c
 12995  004F78  0E00               	movlw	0
 12996  004F7A  6E1A               	movwf	pad@w^0,c
 12997  004F7C                     l1484:
 12998                           
 12999                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13000  004F7C  0E00               	movlw	0
 13001  004F7E  6E19               	movwf	(pad@i+1)^0,c
 13002  004F80  0E00               	movlw	0
 13003  004F82  6E18               	movwf	pad@i^0,c
 13004                           
 13005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13006  004F84  EFD0  F027         	goto	l3738
 13007  004F88                     l3734:
 13008                           
 13009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13010  004F88  0E00               	movlw	0
 13011  004F8A  6E02               	movwf	(fputc@c+1)^0,c
 13012  004F8C  0E20               	movlw	32
 13013  004F8E  6E01               	movwf	fputc@c^0,c
 13014  004F90  C011  F003         	movff	pad@fp,fputc@fp
 13015  004F94  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13016  004F98  ECD3  F026         	call	_fputc	;wreg free
 13017  004F9C                     
 13018                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13019  004F9C  4A18               	infsnz	pad@i^0,f,c
 13020  004F9E  2A19               	incf	(pad@i+1)^0,f,c
 13021  004FA0                     l3738:
 13022                           
 13023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13024  004FA0  501A               	movf	pad@w^0,w,c
 13025  004FA2  5C18               	subwf	pad@i^0,w,c
 13026  004FA4  5019               	movf	(pad@i+1)^0,w,c
 13027  004FA6  0A80               	xorlw	128
 13028  004FA8  6E17               	movwf	??_pad^0,c
 13029  004FAA  501B               	movf	(pad@w+1)^0,w,c
 13030  004FAC  0A80               	xorlw	128
 13031  004FAE  5817               	subwfb	??_pad^0,w,c
 13032  004FB0  A0D8               	btfss	status,0,c
 13033  004FB2  EFDD  F027         	goto	u3041
 13034  004FB6  EFDF  F027         	goto	u3040
 13035  004FBA                     u3041:
 13036  004FBA  EFC4  F027         	goto	l3734
 13037  004FBE                     u3040:
 13038  004FBE                     
 13039                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13040  004FBE  0101               	movlb	1	; () banked
 13041  004FC0  B15A               	btfsc	_flags& (0+255),0,b
 13042  004FC2  EFE5  F027         	goto	u3051
 13043  004FC6  EFE7  F027         	goto	u3050
 13044  004FCA                     u3051:
 13045  004FCA  EFF1  F027         	goto	l3742
 13046  004FCE                     u3050:
 13047  004FCE                     
 13048                           ; BSR set to: 1
 13049                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13050  004FCE  C013  F00A         	movff	pad@buf,fputs@s
 13051  004FD2  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13052  004FD6  C011  F00C         	movff	pad@fp,fputs@fp
 13053  004FDA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13054  004FDE  EC95  F02B         	call	_fputs	;wreg free
 13055  004FE2                     l3742:
 13056                           
 13057                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13058  004FE2  C013  F001         	movff	pad@buf,strlen@s
 13059  004FE6  C014  F002         	movff	pad@buf+1,strlen@s+1
 13060  004FEA  ECD1  F02C         	call	_strlen	;wreg free
 13061  004FEE  501A               	movf	pad@w^0,w,c
 13062  004FF0  2401               	addwf	?_strlen^0,w,c
 13063  004FF2  6E11               	movwf	?_pad^0,c
 13064  004FF4  501B               	movf	(pad@w+1)^0,w,c
 13065  004FF6  2002               	addwfc	(?_strlen+1)^0,w,c
 13066  004FF8  6E12               	movwf	(?_pad+1)^0,c
 13067  004FFA  0012               	return		;funcret
 13068  004FFC                     __end_of_pad:
 13069                           	callstack 0
 13070                           
 13071 ;; *************** function _strlen *****************
 13072 ;; Defined at:
 13073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13076 ;;		 -> dbuf(32), 
 13077 ;; Auto vars:     Size  Location     Type
 13078 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13079 ;;		 -> dbuf(32), 
 13080 ;; Return value:  Size  Location     Type
 13081 ;;                  2    0[COMRAM] unsigned int 
 13082 ;; Registers used:
 13083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13084 ;; Tracked objects:
 13085 ;;		On entry : 0/0
 13086 ;;		On exit  : 0/0
 13087 ;;		Unchanged: 0/0
 13088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13093 ;;Total ram usage:        4 bytes
 13094 ;; Hardware stack levels used: 1
 13095 ;; Hardware stack levels required when called: 1
 13096 ;; This function calls:
 13097 ;;		Nothing
 13098 ;; This function is called by:
 13099 ;;		_pad
 13100 ;; This function uses a non-reentrant model
 13101 ;;
 13102                           
 13103                           	psect	text65
 13104  0059A2                     __ptext65:
 13105                           	callstack 0
 13106  0059A2                     _strlen:
 13107                           	callstack 22
 13108  0059A2  C001  F003         	movff	strlen@s,strlen@a
 13109  0059A6  C002  F004         	movff	strlen@s+1,strlen@a+1
 13110  0059AA  EFD9  F02C         	goto	l3638
 13111  0059AE                     l3636:
 13112  0059AE  4A01               	infsnz	strlen@s^0,f,c
 13113  0059B0  2A02               	incf	(strlen@s+1)^0,f,c
 13114  0059B2                     l3638:
 13115  0059B2  C001  FFD9         	movff	strlen@s,fsr2l
 13116  0059B6  C002  FFDA         	movff	strlen@s+1,fsr2h
 13117  0059BA  50DF               	movf	indf2,w,c
 13118  0059BC  A4D8               	btfss	status,2,c
 13119  0059BE  EFE3  F02C         	goto	u2881
 13120  0059C2  EFE5  F02C         	goto	u2880
 13121  0059C6                     u2881:
 13122  0059C6  EFD7  F02C         	goto	l3636
 13123  0059CA                     u2880:
 13124  0059CA  5003               	movf	strlen@a^0,w,c
 13125  0059CC  5C01               	subwf	strlen@s^0,w,c
 13126  0059CE  6E01               	movwf	?_strlen^0,c
 13127  0059D0  5004               	movf	(strlen@a+1)^0,w,c
 13128  0059D2  5802               	subwfb	(strlen@s+1)^0,w,c
 13129  0059D4  6E02               	movwf	(?_strlen+1)^0,c
 13130  0059D6  0012               	return		;funcret
 13131  0059D8                     __end_of_strlen:
 13132                           	callstack 0
 13133                           
 13134 ;; *************** function _fputs *****************
 13135 ;; Defined at:
 13136 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 13137 ;; Parameters:    Size  Location     Type
 13138 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13139 ;;		 -> dbuf(32), 
 13140 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13141 ;;		 -> sprintf@f(11), 
 13142 ;; Auto vars:     Size  Location     Type
 13143 ;;  i               2   14[COMRAM] int 
 13144 ;;  c               1   13[COMRAM] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  2    9[COMRAM] int 
 13147 ;; Registers used:
 13148 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13157 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13158 ;;Total ram usage:        7 bytes
 13159 ;; Hardware stack levels used: 1
 13160 ;; Hardware stack levels required when called: 3
 13161 ;; This function calls:
 13162 ;;		_fputc
 13163 ;; This function is called by:
 13164 ;;		_pad
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text66
 13169  00572A                     __ptext66:
 13170                           	callstack 0
 13171  00572A                     _fputs:
 13172                           	callstack 20
 13173  00572A  0E00               	movlw	0
 13174  00572C  6E10               	movwf	(fputs@i+1)^0,c
 13175  00572E  0E00               	movlw	0
 13176  005730  6E0F               	movwf	fputs@i^0,c
 13177  005732  EFA6  F02B         	goto	l3632
 13178  005736                     l3628:
 13179  005736  C00E  F001         	movff	fputs@c,fputc@c
 13180  00573A  6A02               	clrf	(fputc@c+1)^0,c
 13181  00573C  C00C  F003         	movff	fputs@fp,fputc@fp
 13182  005740  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13183  005744  ECD3  F026         	call	_fputc	;wreg free
 13184  005748  4A0F               	infsnz	fputs@i^0,f,c
 13185  00574A  2A10               	incf	(fputs@i+1)^0,f,c
 13186  00574C                     l3632:
 13187  00574C  500F               	movf	fputs@i^0,w,c
 13188  00574E  240A               	addwf	fputs@s^0,w,c
 13189  005750  6ED9               	movwf	fsr2l,c
 13190  005752  5010               	movf	(fputs@i+1)^0,w,c
 13191  005754  200B               	addwfc	(fputs@s+1)^0,w,c
 13192  005756  6EDA               	movwf	fsr2h,c
 13193  005758  50DF               	movf	indf2,w,c
 13194  00575A  6E0E               	movwf	fputs@c^0,c
 13195  00575C  500E               	movf	fputs@c^0,w,c
 13196  00575E  A4D8               	btfss	status,2,c
 13197  005760  EFB4  F02B         	goto	u2871
 13198  005764  EFB6  F02B         	goto	u2870
 13199  005768                     u2871:
 13200  005768  EF9B  F02B         	goto	l3628
 13201  00576C                     u2870:
 13202  00576C  0012               	return		;funcret
 13203  00576E                     __end_of_fputs:
 13204                           	callstack 0
 13205                           
 13206 ;; *************** function _fputc *****************
 13207 ;; Defined at:
 13208 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13209 ;; Parameters:    Size  Location     Type
 13210 ;;  c               2    0[COMRAM] int 
 13211 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13212 ;;		 -> sprintf@f(11), 
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;		None
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  2    0[COMRAM] int 
 13217 ;; Registers used:
 13218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13226 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13227 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13228 ;;Total ram usage:        9 bytes
 13229 ;; Hardware stack levels used: 1
 13230 ;; Hardware stack levels required when called: 2
 13231 ;; This function calls:
 13232 ;;		_putch
 13233 ;; This function is called by:
 13234 ;;		_pad
 13235 ;;		_vfpfcnvrt
 13236 ;;		_fputs
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text67
 13241  004DA6                     __ptext67:
 13242                           	callstack 0
 13243  004DA6                     _fputc:
 13244                           	callstack 23
 13245  004DA6  5003               	movf	fputc@fp^0,w,c
 13246  004DA8  1004               	iorwf	(fputc@fp+1)^0,w,c
 13247  004DAA  B4D8               	btfsc	status,2,c
 13248  004DAC  EFDA  F026         	goto	u2831
 13249  004DB0  EFDC  F026         	goto	u2830
 13250  004DB4                     u2831:
 13251  004DB4  EFE5  F026         	goto	l3616
 13252  004DB8                     u2830:
 13253  004DB8  5003               	movf	fputc@fp^0,w,c
 13254  004DBA  1004               	iorwf	(fputc@fp+1)^0,w,c
 13255  004DBC  A4D8               	btfss	status,2,c
 13256  004DBE  EFE3  F026         	goto	u2841
 13257  004DC2  EFE5  F026         	goto	u2840
 13258  004DC6                     u2841:
 13259  004DC6  EFEA  F026         	goto	l3618
 13260  004DCA                     u2840:
 13261  004DCA                     l3616:
 13262  004DCA  5001               	movf	fputc@c^0,w,c
 13263  004DCC  EC33  F02E         	call	_putch
 13264  004DD0  EF37  F027         	goto	l1548
 13265  004DD4                     l3618:
 13266  004DD4  EE20 F009          	lfsr	2,9
 13267  004DD8  5003               	movf	fputc@fp^0,w,c
 13268  004DDA  26D9               	addwf	fsr2l,f,c
 13269  004DDC  5004               	movf	(fputc@fp+1)^0,w,c
 13270  004DDE  22DA               	addwfc	fsr2h,f,c
 13271  004DE0  50DE               	movf	postinc2,w,c
 13272  004DE2  10DE               	iorwf	postinc2,w,c
 13273  004DE4  B4D8               	btfsc	status,2,c
 13274  004DE6  EFF7  F026         	goto	u2851
 13275  004DEA  EFF9  F026         	goto	u2850
 13276  004DEE                     u2851:
 13277  004DEE  EF14  F027         	goto	l3622
 13278  004DF2                     u2850:
 13279  004DF2  EE20 F009          	lfsr	2,9
 13280  004DF6  5003               	movf	fputc@fp^0,w,c
 13281  004DF8  26D9               	addwf	fsr2l,f,c
 13282  004DFA  5004               	movf	(fputc@fp+1)^0,w,c
 13283  004DFC  22DA               	addwfc	fsr2h,f,c
 13284  004DFE  EE10 F003          	lfsr	1,3
 13285  004E02  5003               	movf	fputc@fp^0,w,c
 13286  004E04  26E1               	addwf	fsr1l,f,c
 13287  004E06  5004               	movf	(fputc@fp+1)^0,w,c
 13288  004E08  22E2               	addwfc	fsr1h,f,c
 13289  004E0A  50DE               	movf	postinc2,w,c
 13290  004E0C  5CE6               	subwf	postinc1,w,c
 13291  004E0E  50E6               	movf	postinc1,w,c
 13292  004E10  0A80               	xorlw	128
 13293  004E12  6E09               	movwf	(??_fputc+4)^0,c
 13294  004E14  50DE               	movf	postinc2,w,c
 13295  004E16  0A80               	xorlw	128
 13296  004E18  5809               	subwfb	(??_fputc+4)^0,w,c
 13297  004E1A  B0D8               	btfsc	status,0,c
 13298  004E1C  EF12  F027         	goto	u2861
 13299  004E20  EF14  F027         	goto	u2860
 13300  004E24                     u2861:
 13301  004E24  EF37  F027         	goto	l1548
 13302  004E28                     u2860:
 13303  004E28                     l3622:
 13304  004E28  EE20 F003          	lfsr	2,3
 13305  004E2C  5003               	movf	fputc@fp^0,w,c
 13306  004E2E  26D9               	addwf	fsr2l,f,c
 13307  004E30  5004               	movf	(fputc@fp+1)^0,w,c
 13308  004E32  22DA               	addwfc	fsr2h,f,c
 13309  004E34  CFDE F005          	movff	postinc2,??_fputc
 13310  004E38  CFDD F006          	movff	postdec2,??_fputc+1
 13311  004E3C  C003  FFD9         	movff	fputc@fp,fsr2l
 13312  004E40  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13313  004E44  CFDE F007          	movff	postinc2,??_fputc+2
 13314  004E48  CFDD F008          	movff	postdec2,??_fputc+3
 13315  004E4C  5005               	movf	??_fputc^0,w,c
 13316  004E4E  2407               	addwf	(??_fputc+2)^0,w,c
 13317  004E50  6ED9               	movwf	fsr2l,c
 13318  004E52  5006               	movf	(??_fputc+1)^0,w,c
 13319  004E54  2008               	addwfc	(??_fputc+3)^0,w,c
 13320  004E56  6EDA               	movwf	fsr2h,c
 13321  004E58  C001  FFDF         	movff	fputc@c,indf2
 13322  004E5C  EE20 F003          	lfsr	2,3
 13323  004E60  5003               	movf	fputc@fp^0,w,c
 13324  004E62  26D9               	addwf	fsr2l,f,c
 13325  004E64  5004               	movf	(fputc@fp+1)^0,w,c
 13326  004E66  22DA               	addwfc	fsr2h,f,c
 13327  004E68  2ADE               	incf	postinc2,f,c
 13328  004E6A  0E00               	movlw	0
 13329  004E6C  22DD               	addwfc	postdec2,f,c
 13330  004E6E                     l1548:
 13331  004E6E  0012               	return		;funcret
 13332  004E70                     __end_of_fputc:
 13333                           	callstack 0
 13334                           
 13335 ;; *************** function _putch *****************
 13336 ;; Defined at:
 13337 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;  c               1    wreg     unsigned char 
 13340 ;; Auto vars:     Size  Location     Type
 13341 ;;  c               1    0[COMRAM] unsigned char 
 13342 ;; Return value:  Size  Location     Type
 13343 ;;                  1    wreg      void 
 13344 ;; Registers used:
 13345 ;;		wreg
 13346 ;; Tracked objects:
 13347 ;;		On entry : 0/0
 13348 ;;		On exit  : 0/0
 13349 ;;		Unchanged: 0/0
 13350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13355 ;;Total ram usage:        0 bytes
 13356 ;; Hardware stack levels used: 1
 13357 ;; Hardware stack levels required when called: 1
 13358 ;; This function calls:
 13359 ;;		Nothing
 13360 ;; This function is called by:
 13361 ;;		_fputc
 13362 ;; This function uses a non-reentrant model
 13363 ;;
 13364                           
 13365                           	psect	text68
 13366  005C66                     __ptext68:
 13367                           	callstack 0
 13368  005C66                     _putch:
 13369                           	callstack 23
 13370  005C66  0012               	return		;funcret
 13371  005C68                     __end_of_putch:
 13372                           	callstack 0
 13373                           
 13374 ;; *************** function _abs *****************
 13375 ;; Defined at:
 13376 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13377 ;; Parameters:    Size  Location     Type
 13378 ;;  a               2   18[COMRAM] int 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;		None
 13381 ;; Return value:  Size  Location     Type
 13382 ;;                  2   18[COMRAM] int 
 13383 ;; Registers used:
 13384 ;;		wreg, status,2, status,0
 13385 ;; Tracked objects:
 13386 ;;		On entry : 0/0
 13387 ;;		On exit  : 0/0
 13388 ;;		Unchanged: 0/0
 13389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13394 ;;Total ram usage:        4 bytes
 13395 ;; Hardware stack levels used: 1
 13396 ;; Hardware stack levels required when called: 1
 13397 ;; This function calls:
 13398 ;;		Nothing
 13399 ;; This function is called by:
 13400 ;;		_dtoa
 13401 ;; This function uses a non-reentrant model
 13402 ;;
 13403                           
 13404                           	psect	text69
 13405  0058B6                     __ptext69:
 13406                           	callstack 0
 13407  0058B6                     _abs:
 13408                           	callstack 23
 13409  0058B6  BE14               	btfsc	(abs@a+1)^0,7,c
 13410  0058B8  EF68  F02C         	goto	u3060
 13411  0058BC  5014               	movf	(abs@a+1)^0,w,c
 13412  0058BE  E106               	bnz	u3061
 13413  0058C0  0413               	decf	abs@a^0,w,c
 13414  0058C2  B0D8               	btfsc	status,0,c
 13415  0058C4  EF66  F02C         	goto	u3061
 13416  0058C8  EF68  F02C         	goto	u3060
 13417  0058CC                     u3061:
 13418  0058CC  EF76  F02C         	goto	l1533
 13419  0058D0                     u3060:
 13420  0058D0  C013  F015         	movff	abs@a,??_abs
 13421  0058D4  C014  F016         	movff	abs@a+1,??_abs+1
 13422  0058D8  1E15               	comf	??_abs^0,f,c
 13423  0058DA  1E16               	comf	(??_abs+1)^0,f,c
 13424  0058DC  4A15               	infsnz	??_abs^0,f,c
 13425  0058DE  2A16               	incf	(??_abs+1)^0,f,c
 13426  0058E0  C015  F013         	movff	??_abs,?_abs
 13427  0058E4  C016  F014         	movff	??_abs+1,?_abs+1
 13428  0058E8  EF7A  F02C         	goto	l1536
 13429  0058EC                     l1533:
 13430  0058EC  C013  F013         	movff	abs@a,?_abs
 13431  0058F0  C014  F014         	movff	abs@a+1,?_abs+1
 13432  0058F4                     l1536:
 13433  0058F4  0012               	return		;funcret
 13434  0058F6                     __end_of_abs:
 13435                           	callstack 0
 13436                           
 13437 ;; *************** function ___aomod *****************
 13438 ;; Defined at:
 13439 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13440 ;; Parameters:    Size  Location     Type
 13441 ;;  dividend        8    0[COMRAM] long long 
 13442 ;;  divisor         8    8[COMRAM] long long 
 13443 ;; Auto vars:     Size  Location     Type
 13444 ;;  sign            1   17[COMRAM] unsigned char 
 13445 ;;  counter         1   16[COMRAM] unsigned char 
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  8    0[COMRAM] long long 
 13448 ;; Registers used:
 13449 ;;		wreg, status,2, status,0
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13455 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13458 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13459 ;;Total ram usage:       18 bytes
 13460 ;; Hardware stack levels used: 1
 13461 ;; Hardware stack levels required when called: 1
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_dtoa
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469                           	psect	text70
 13470  00483C                     __ptext70:
 13471                           	callstack 0
 13472  00483C                     ___aomod:
 13473                           	callstack 23
 13474  00483C  0E00               	movlw	0
 13475  00483E  6E12               	movwf	___aomod@sign^0,c
 13476  004840  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13477  004842  EF27  F024         	goto	u2960
 13478  004846  EF25  F024         	goto	u2961
 13479  00484A                     u2961:
 13480  00484A  EF39  F024         	goto	l3696
 13481  00484E                     u2960:
 13482  00484E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13483  004850  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13484  004852  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13485  004854  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13486  004856  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13487  004858  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13488  00485A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13489  00485C  6C01               	negf	___aomod@dividend^0,c
 13490  00485E  0E00               	movlw	0
 13491  004860  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13492  004862  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13493  004864  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13494  004866  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13495  004868  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13496  00486A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13497  00486C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13498  00486E  0E01               	movlw	1
 13499  004870  6E12               	movwf	___aomod@sign^0,c
 13500  004872                     l3696:
 13501  004872  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13502  004874  EF40  F024         	goto	u2970
 13503  004878  EF3E  F024         	goto	u2971
 13504  00487C                     u2971:
 13505  00487C  EF50  F024         	goto	l3700
 13506  004880                     u2970:
 13507  004880  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13508  004882  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13509  004884  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13510  004886  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13511  004888  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13512  00488A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13513  00488C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13514  00488E  6C09               	negf	___aomod@divisor^0,c
 13515  004890  0E00               	movlw	0
 13516  004892  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13517  004894  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13518  004896  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13519  004898  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13520  00489A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13521  00489C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13522  00489E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13523  0048A0                     l3700:
 13524  0048A0  5009               	movf	___aomod@divisor^0,w,c
 13525  0048A2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13526  0048A4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13527  0048A6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13528  0048A8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13529  0048AA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13530  0048AC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13531  0048AE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13532  0048B0  B4D8               	btfsc	status,2,c
 13533  0048B2  EF5D  F024         	goto	u2981
 13534  0048B6  EF5F  F024         	goto	u2980
 13535  0048BA                     u2981:
 13536  0048BA  EFA7  F024         	goto	l3716
 13537  0048BE                     u2980:
 13538  0048BE  0E01               	movlw	1
 13539  0048C0  6E11               	movwf	___aomod@counter^0,c
 13540  0048C2  EF6D  F024         	goto	l3706
 13541  0048C6                     l3704:
 13542  0048C6  90D8               	bcf	status,0,c
 13543  0048C8  3609               	rlcf	___aomod@divisor^0,f,c
 13544  0048CA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13545  0048CC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13546  0048CE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13547  0048D0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13548  0048D2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13549  0048D4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13550  0048D6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13551  0048D8  2A11               	incf	___aomod@counter^0,f,c
 13552  0048DA                     l3706:
 13553  0048DA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13554  0048DC  EF72  F024         	goto	u2991
 13555  0048E0  EF74  F024         	goto	u2990
 13556  0048E4                     u2991:
 13557  0048E4  EF63  F024         	goto	l3704
 13558  0048E8                     u2990:
 13559  0048E8                     l3708:
 13560  0048E8  5009               	movf	___aomod@divisor^0,w,c
 13561  0048EA  5C01               	subwf	___aomod@dividend^0,w,c
 13562  0048EC  500A               	movf	(___aomod@divisor+1)^0,w,c
 13563  0048EE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13564  0048F0  500B               	movf	(___aomod@divisor+2)^0,w,c
 13565  0048F2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13566  0048F4  500C               	movf	(___aomod@divisor+3)^0,w,c
 13567  0048F6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13568  0048F8  500D               	movf	(___aomod@divisor+4)^0,w,c
 13569  0048FA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13570  0048FC  500E               	movf	(___aomod@divisor+5)^0,w,c
 13571  0048FE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13572  004900  500F               	movf	(___aomod@divisor+6)^0,w,c
 13573  004902  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13574  004904  5010               	movf	(___aomod@divisor+7)^0,w,c
 13575  004906  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13576  004908  A0D8               	btfss	status,0,c
 13577  00490A  EF89  F024         	goto	u3001
 13578  00490E  EF8B  F024         	goto	u3000
 13579  004912                     u3001:
 13580  004912  EF9B  F024         	goto	l3712
 13581  004916                     u3000:
 13582  004916  5009               	movf	___aomod@divisor^0,w,c
 13583  004918  5E01               	subwf	___aomod@dividend^0,f,c
 13584  00491A  500A               	movf	(___aomod@divisor+1)^0,w,c
 13585  00491C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13586  00491E  500B               	movf	(___aomod@divisor+2)^0,w,c
 13587  004920  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13588  004922  500C               	movf	(___aomod@divisor+3)^0,w,c
 13589  004924  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13590  004926  500D               	movf	(___aomod@divisor+4)^0,w,c
 13591  004928  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13592  00492A  500E               	movf	(___aomod@divisor+5)^0,w,c
 13593  00492C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13594  00492E  500F               	movf	(___aomod@divisor+6)^0,w,c
 13595  004930  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13596  004932  5010               	movf	(___aomod@divisor+7)^0,w,c
 13597  004934  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13598  004936                     l3712:
 13599  004936  90D8               	bcf	status,0,c
 13600  004938  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13601  00493A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13602  00493C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13603  00493E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13604  004940  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13605  004942  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13606  004944  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13607  004946  3209               	rrcf	___aomod@divisor^0,f,c
 13608  004948  2E11               	decfsz	___aomod@counter^0,f,c
 13609  00494A  EF74  F024         	goto	l3708
 13610  00494E                     l3716:
 13611  00494E  5012               	movf	___aomod@sign^0,w,c
 13612  004950  B4D8               	btfsc	status,2,c
 13613  004952  EFAD  F024         	goto	u3011
 13614  004956  EFAF  F024         	goto	u3010
 13615  00495A                     u3011:
 13616  00495A  EFBF  F024         	goto	l3720
 13617  00495E                     u3010:
 13618  00495E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13619  004960  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13620  004962  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13621  004964  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13622  004966  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13623  004968  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13624  00496A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13625  00496C  6C01               	negf	___aomod@dividend^0,c
 13626  00496E  0E00               	movlw	0
 13627  004970  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13628  004972  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13629  004974  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13630  004976  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13631  004978  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13632  00497A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13633  00497C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13634  00497E                     l3720:
 13635  00497E  C001  F001         	movff	___aomod@dividend,?___aomod
 13636  004982  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13637  004986  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13638  00498A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13639  00498E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13640  004992  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13641  004996  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13642  00499A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13643  00499E  0012               	return		;funcret
 13644  0049A0                     __end_of___aomod:
 13645                           	callstack 0
 13646                           
 13647 ;; *************** function ___aodiv *****************
 13648 ;; Defined at:
 13649 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13650 ;; Parameters:    Size  Location     Type
 13651 ;;  dividend        8    0[COMRAM] long long 
 13652 ;;  divisor         8    8[COMRAM] long long 
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;  quotient        8   18[COMRAM] long long 
 13655 ;;  sign            1   17[COMRAM] unsigned char 
 13656 ;;  counter         1   16[COMRAM] unsigned char 
 13657 ;; Return value:  Size  Location     Type
 13658 ;;                  8    0[COMRAM] long long 
 13659 ;; Registers used:
 13660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13661 ;; Tracked objects:
 13662 ;;		On entry : 0/0
 13663 ;;		On exit  : 0/0
 13664 ;;		Unchanged: 0/0
 13665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13666 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13667 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13669 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13670 ;;Total ram usage:       26 bytes
 13671 ;; Hardware stack levels used: 1
 13672 ;; Hardware stack levels required when called: 1
 13673 ;; This function calls:
 13674 ;;		Nothing
 13675 ;; This function is called by:
 13676 ;;		_dtoa
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           	psect	text71
 13681  0046B4                     __ptext71:
 13682                           	callstack 0
 13683  0046B4                     ___aodiv:
 13684                           	callstack 23
 13685  0046B4  0E00               	movlw	0
 13686  0046B6  6E12               	movwf	___aodiv@sign^0,c
 13687  0046B8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13688  0046BA  EF63  F023         	goto	u2890
 13689  0046BE  EF61  F023         	goto	u2891
 13690  0046C2                     u2891:
 13691  0046C2  EF75  F023         	goto	l3652
 13692  0046C6                     u2890:
 13693  0046C6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13694  0046C8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13695  0046CA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13696  0046CC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13697  0046CE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13698  0046D0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13699  0046D2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13700  0046D4  6C09               	negf	___aodiv@divisor^0,c
 13701  0046D6  0E00               	movlw	0
 13702  0046D8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13703  0046DA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13704  0046DC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13705  0046DE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13706  0046E0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13707  0046E2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13708  0046E4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13709  0046E6  0E01               	movlw	1
 13710  0046E8  6E12               	movwf	___aodiv@sign^0,c
 13711  0046EA                     l3652:
 13712  0046EA  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13713  0046EC  EF7C  F023         	goto	u2900
 13714  0046F0  EF7A  F023         	goto	u2901
 13715  0046F4                     u2901:
 13716  0046F4  EF8E  F023         	goto	l3658
 13717  0046F8                     u2900:
 13718  0046F8  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13719  0046FA  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13720  0046FC  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13721  0046FE  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13722  004700  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13723  004702  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13724  004704  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13725  004706  6C01               	negf	___aodiv@dividend^0,c
 13726  004708  0E00               	movlw	0
 13727  00470A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13728  00470C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13729  00470E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13730  004710  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13731  004712  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13732  004714  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13733  004716  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13734  004718  0E01               	movlw	1
 13735  00471A  1A12               	xorwf	___aodiv@sign^0,f,c
 13736  00471C                     l3658:
 13737  00471C  EE20  F013         	lfsr	2,___aodiv@quotient
 13738  004720  0E07               	movlw	7
 13739  004722                     u2911:
 13740  004722  6ADE               	clrf	postinc2,c
 13741  004724  06E8               	decf	wreg,f,c
 13742  004726  E2FD               	bc	u2911
 13743  004728  5009               	movf	___aodiv@divisor^0,w,c
 13744  00472A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13745  00472C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13746  00472E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13747  004730  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13748  004732  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13749  004734  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13750  004736  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13751  004738  B4D8               	btfsc	status,2,c
 13752  00473A  EFA1  F023         	goto	u2921
 13753  00473E  EFA3  F023         	goto	u2920
 13754  004742                     u2921:
 13755  004742  EFF5  F023         	goto	l3680
 13756  004746                     u2920:
 13757  004746  0E01               	movlw	1
 13758  004748  6E11               	movwf	___aodiv@counter^0,c
 13759  00474A  EFB1  F023         	goto	l3666
 13760  00474E                     l3664:
 13761  00474E  90D8               	bcf	status,0,c
 13762  004750  3609               	rlcf	___aodiv@divisor^0,f,c
 13763  004752  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13764  004754  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13765  004756  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13766  004758  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13767  00475A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13768  00475C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13769  00475E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13770  004760  2A11               	incf	___aodiv@counter^0,f,c
 13771  004762                     l3666:
 13772  004762  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13773  004764  EFB6  F023         	goto	u2931
 13774  004768  EFB8  F023         	goto	u2930
 13775  00476C                     u2931:
 13776  00476C  EFA7  F023         	goto	l3664
 13777  004770                     u2930:
 13778  004770                     l3668:
 13779  004770  90D8               	bcf	status,0,c
 13780  004772  3613               	rlcf	___aodiv@quotient^0,f,c
 13781  004774  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13782  004776  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13783  004778  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13784  00477A  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13785  00477C  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13786  00477E  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13787  004780  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13788  004782  5009               	movf	___aodiv@divisor^0,w,c
 13789  004784  5C01               	subwf	___aodiv@dividend^0,w,c
 13790  004786  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13791  004788  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13792  00478A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13793  00478C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13794  00478E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13795  004790  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13796  004792  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13797  004794  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13798  004796  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13799  004798  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13800  00479A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13801  00479C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13802  00479E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13803  0047A0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13804  0047A2  A0D8               	btfss	status,0,c
 13805  0047A4  EFD6  F023         	goto	u2941
 13806  0047A8  EFD8  F023         	goto	u2940
 13807  0047AC                     u2941:
 13808  0047AC  EFE9  F023         	goto	l3676
 13809  0047B0                     u2940:
 13810  0047B0  5009               	movf	___aodiv@divisor^0,w,c
 13811  0047B2  5E01               	subwf	___aodiv@dividend^0,f,c
 13812  0047B4  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13813  0047B6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13814  0047B8  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13815  0047BA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13816  0047BC  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13817  0047BE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13818  0047C0  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13819  0047C2  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13820  0047C4  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13821  0047C6  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13822  0047C8  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13823  0047CA  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13824  0047CC  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13825  0047CE  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13826  0047D0  8013               	bsf	___aodiv@quotient^0,0,c
 13827  0047D2                     l3676:
 13828  0047D2  90D8               	bcf	status,0,c
 13829  0047D4  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13830  0047D6  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13831  0047D8  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13832  0047DA  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13833  0047DC  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13834  0047DE  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13835  0047E0  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13836  0047E2  3209               	rrcf	___aodiv@divisor^0,f,c
 13837  0047E4  2E11               	decfsz	___aodiv@counter^0,f,c
 13838  0047E6  EFB8  F023         	goto	l3668
 13839  0047EA                     l3680:
 13840  0047EA  5012               	movf	___aodiv@sign^0,w,c
 13841  0047EC  B4D8               	btfsc	status,2,c
 13842  0047EE  EFFB  F023         	goto	u2951
 13843  0047F2  EFFD  F023         	goto	u2950
 13844  0047F6                     u2951:
 13845  0047F6  EF0D  F024         	goto	l3684
 13846  0047FA                     u2950:
 13847  0047FA  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13848  0047FC  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13849  0047FE  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13850  004800  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13851  004802  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13852  004804  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13853  004806  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13854  004808  6C13               	negf	___aodiv@quotient^0,c
 13855  00480A  0E00               	movlw	0
 13856  00480C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13857  00480E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13858  004810  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13859  004812  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13860  004814  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13861  004816  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13862  004818  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13863  00481A                     l3684:
 13864  00481A  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13865  00481E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13866  004822  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13867  004826  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13868  00482A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13869  00482E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13870  004832  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13871  004836  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13872  00483A  0012               	return		;funcret
 13873  00483C                     __end_of___aodiv:
 13874                           	callstack 0
 13875                           
 13876 ;; *************** function _sendStringSerial4 *****************
 13877 ;; Defined at:
 13878 ;;		line 36 in file "serial.c"
 13879 ;; Parameters:    Size  Location     Type
 13880 ;;  string          2    1[COMRAM] PTR unsigned char 
 13881 ;;		 -> detect_color@buf(100), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
 13882 ;; Auto vars:     Size  Location     Type
 13883 ;;		None
 13884 ;; Return value:  Size  Location     Type
 13885 ;;                  1    wreg      void 
 13886 ;; Registers used:
 13887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13888 ;; Tracked objects:
 13889 ;;		On entry : 0/0
 13890 ;;		On exit  : 0/0
 13891 ;;		Unchanged: 0/0
 13892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13897 ;;Total ram usage:        2 bytes
 13898 ;; Hardware stack levels used: 1
 13899 ;; Hardware stack levels required when called: 2
 13900 ;; This function calls:
 13901 ;;		_sendCharSerial4
 13902 ;; This function is called by:
 13903 ;;		_color_display
 13904 ;;		_color_predict
 13905 ;;		_detect_color
 13906 ;;		_check_color_reading
 13907 ;; This function uses a non-reentrant model
 13908 ;;
 13909                           
 13910                           	psect	text72
 13911  005A0C                     __ptext72:
 13912                           	callstack 0
 13913  005A0C                     _sendStringSerial4:
 13914                           	callstack 26
 13915  005A0C                     
 13916                           ;serial.c: 38:     while(*string != 0){
 13917  005A0C  EF11  F02D         	goto	l4396
 13918  005A10                     l4392:
 13919                           
 13920                           ;serial.c: 39:   sendCharSerial4(*string++);}
 13921  005A10  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13922  005A14  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13923  005A18  50DF               	movf	indf2,w,c
 13924  005A1A  ECFF  F02D         	call	_sendCharSerial4
 13925  005A1E  4A02               	infsnz	sendStringSerial4@string^0,f,c
 13926  005A20  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 13927  005A22                     l4396:
 13928                           
 13929                           ;serial.c: 38:     while(*string != 0){
 13930  005A22  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13931  005A26  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13932  005A2A  50DF               	movf	indf2,w,c
 13933  005A2C  A4D8               	btfss	status,2,c
 13934  005A2E  EF1B  F02D         	goto	u4101
 13935  005A32  EF1D  F02D         	goto	u4100
 13936  005A36                     u4101:
 13937  005A36  EF08  F02D         	goto	l4392
 13938  005A3A                     u4100:
 13939  005A3A  0012               	return		;funcret
 13940  005A3C                     __end_of_sendStringSerial4:
 13941                           	callstack 0
 13942                           
 13943 ;; *************** function _sendCharSerial4 *****************
 13944 ;; Defined at:
 13945 ;;		line 29 in file "serial.c"
 13946 ;; Parameters:    Size  Location     Type
 13947 ;;  charToSend      1    wreg     unsigned char 
 13948 ;; Auto vars:     Size  Location     Type
 13949 ;;  charToSend      1    0[COMRAM] unsigned char 
 13950 ;; Return value:  Size  Location     Type
 13951 ;;                  1    wreg      void 
 13952 ;; Registers used:
 13953 ;;		wreg
 13954 ;; Tracked objects:
 13955 ;;		On entry : 0/0
 13956 ;;		On exit  : 0/0
 13957 ;;		Unchanged: 0/0
 13958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13963 ;;Total ram usage:        1 bytes
 13964 ;; Hardware stack levels used: 1
 13965 ;; Hardware stack levels required when called: 1
 13966 ;; This function calls:
 13967 ;;		Nothing
 13968 ;; This function is called by:
 13969 ;;		_sendStringSerial4
 13970 ;; This function uses a non-reentrant model
 13971 ;;
 13972                           
 13973                           	psect	text73
 13974  005BFE                     __ptext73:
 13975                           	callstack 0
 13976  005BFE                     _sendCharSerial4:
 13977                           	callstack 26
 13978                           
 13979                           ;incstack = 0
 13980                           ;sendCharSerial4@charToSend stored from wreg
 13981  005BFE  6E01               	movwf	sendCharSerial4@charToSend^0,c
 13982  005C00                     l418:
 13983  005C00  010E               	movlb	14	; () banked
 13984  005C02  A537               	btfss	55,2,b	;volatile
 13985  005C04  EF06  F02E         	goto	u3831
 13986  005C08  EF08  F02E         	goto	u3830
 13987  005C0C                     u3831:
 13988  005C0C  EF00  F02E         	goto	l418
 13989  005C10                     u3830:
 13990  005C10                     
 13991                           ; BSR set to: 14
 13992                           ;serial.c: 31:     TX4REG = charToSend;
 13993  005C10  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 13994  005C14                     
 13995                           ; BSR set to: 14
 13996  005C14  0012               	return		;funcret
 13997  005C16                     __end_of_sendCharSerial4:
 13998                           	callstack 0
 13999                           
 14000 ;; *************** function _Timer0_init *****************
 14001 ;; Defined at:
 14002 ;;		line 7 in file "timers.c"
 14003 ;; Parameters:    Size  Location     Type
 14004 ;;		None
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;		None
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      void 
 14009 ;; Registers used:
 14010 ;;		wreg, status,2
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14020 ;;Total ram usage:        0 bytes
 14021 ;; Hardware stack levels used: 1
 14022 ;; Hardware stack levels required when called: 1
 14023 ;; This function calls:
 14024 ;;		Nothing
 14025 ;; This function is called by:
 14026 ;;		_main
 14027 ;; This function uses a non-reentrant model
 14028 ;;
 14029                           
 14030                           	psect	text74
 14031  005BE0                     __ptext74:
 14032                           	callstack 0
 14033  005BE0                     _Timer0_init:
 14034                           	callstack 29
 14035  005BE0                     
 14036                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14037  005BE0  50D6               	movf	214,w,c	;volatile
 14038  005BE2  0B1F               	andlw	-225
 14039  005BE4  0940               	iorlw	64
 14040  005BE6  6ED6               	movwf	214,c	;volatile
 14041  005BE8                     
 14042                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14043  005BE8  88D6               	bsf	214,4,c	;volatile
 14044                           
 14045                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 14046  005BEA  50D6               	movf	214,w,c	;volatile
 14047  005BEC  0BF0               	andlw	-16
 14048  005BEE  0908               	iorlw	8
 14049  005BF0  6ED6               	movwf	214,c	;volatile
 14050  005BF2                     
 14051                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14052  005BF2  88D5               	bsf	213,4,c	;volatile
 14053                           
 14054                           ;timers.c: 16:     TMR0H=0b00001011;
 14055  005BF4  0E0B               	movlw	11
 14056  005BF6  6ED4               	movwf	212,c	;volatile
 14057                           
 14058                           ;timers.c: 17:     TMR0L=0b11011011;
 14059  005BF8  0EDB               	movlw	219
 14060  005BFA  6ED3               	movwf	211,c	;volatile
 14061  005BFC  0012               	return		;funcret
 14062  005BFE                     __end_of_Timer0_init:
 14063                           	callstack 0
 14064                           
 14065 ;; *************** function _Interrupts_init *****************
 14066 ;; Defined at:
 14067 ;;		line 9 in file "interrupts.c"
 14068 ;; Parameters:    Size  Location     Type
 14069 ;;		None
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;		None
 14072 ;; Return value:  Size  Location     Type
 14073 ;;                  1    wreg      void 
 14074 ;; Registers used:
 14075 ;;		None
 14076 ;; Tracked objects:
 14077 ;;		On entry : 0/0
 14078 ;;		On exit  : 0/0
 14079 ;;		Unchanged: 0/0
 14080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14085 ;;Total ram usage:        0 bytes
 14086 ;; Hardware stack levels used: 1
 14087 ;; Hardware stack levels required when called: 1
 14088 ;; This function calls:
 14089 ;;		Nothing
 14090 ;; This function is called by:
 14091 ;;		_main
 14092 ;; This function uses a non-reentrant model
 14093 ;;
 14094                           
 14095                           	psect	text75
 14096  005C38                     __ptext75:
 14097                           	callstack 0
 14098  005C38                     _Interrupts_init:
 14099                           	callstack 29
 14100  005C38  8EF2               	bsf	242,7,c	;volatile
 14101                           
 14102                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14103  005C3A  8AF2               	bsf	242,5,c	;volatile
 14104                           
 14105                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14106  005C3C  8CF2               	bsf	242,6,c	;volatile
 14107                           
 14108                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14109  005C3E  010E               	movlb	14	; () banked
 14110  005C40  8B29               	bsf	41,5,b	;volatile
 14111  005C42                     
 14112                           ; BSR set to: 14
 14113  005C42  0012               	return		;funcret
 14114  005C44                     __end_of_Interrupts_init:
 14115                           	callstack 0
 14116                           
 14117 ;; *************** function _HighISR *****************
 14118 ;; Defined at:
 14119 ;;		line 21 in file "interrupts.c"
 14120 ;; Parameters:    Size  Location     Type
 14121 ;;		None
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1    wreg      void 
 14126 ;; Registers used:
 14127 ;;		status,2, status,0
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14137 ;;Total ram usage:        0 bytes
 14138 ;; Hardware stack levels used: 1
 14139 ;; This function calls:
 14140 ;;		Nothing
 14141 ;; This function is called by:
 14142 ;;		Interrupt level 2
 14143 ;; This function uses a non-reentrant model
 14144 ;;
 14145                           
 14146                           	psect	intcode
 14147  000008                     __pintcode:
 14148                           	callstack 0
 14149  000008                     _HighISR:
 14150                           	callstack 19
 14151                           
 14152                           ; BSR set to: 14
 14153                           ;incstack = 0
 14154  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14155  00000A                     
 14156                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14157  00000A  010E               	movlb	14	; () banked
 14158  00000C  AB33               	btfss	51,5,b	;volatile
 14159  00000E  EF0B  F000         	goto	i2u557_41
 14160  000012  EF0D  F000         	goto	i2u557_40
 14161  000016                     i2u557_41:
 14162  000016  EF12  F000         	goto	i2l674
 14163  00001A                     i2u557_40:
 14164  00001A                     
 14165                           ; BSR set to: 14
 14166                           ;interrupts.c: 24:         second ++;
 14167  00001A  0101               	movlb	1	; () banked
 14168  00001C  4B60               	infsnz	_second& (0+255),f,b
 14169  00001E  2B61               	incf	(_second+1)& (0+255),f,b
 14170  000020                     
 14171                           ; BSR set to: 1
 14172                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14173  000020  010E               	movlb	14	; () banked
 14174  000022  9B33               	bcf	51,5,b	;volatile
 14175  000024                     i2l674:
 14176                           
 14177                           ; BSR set to: 14
 14178  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14179  000026  0011               	retfie		f
 14180  000028                     __end_of_HighISR:
 14181                           	callstack 0
 14182                           
 14183                           	psect	rparam
 14184  0000                     
 14185                           	psect	temp
 14186  00005F                     btemp:
 14187                           	callstack 0
 14188  00005F                     	ds	1
 14189  0000                     int$flags	set	btemp
 14190  0000                     wtemp8	set	btemp+1
 14191  0000                     ttemp5	set	btemp+1
 14192  0000                     ttemp6	set	btemp+4
 14193  0000                     ttemp7	set	btemp+8
 14194                           
 14195                           	psect	idloc
 14196                           
 14197                           ;Config register IDLOC0 @ 0x200000
 14198                           ;	unspecified, using default values
 14199  200000                     	org	2097152
 14200  200000  0FFF               	dw	4095
 14201                           
 14202                           ;Config register IDLOC1 @ 0x200002
 14203                           ;	unspecified, using default values
 14204  200002                     	org	2097154
 14205  200002  0FFF               	dw	4095
 14206                           
 14207                           ;Config register IDLOC2 @ 0x200004
 14208                           ;	unspecified, using default values
 14209  200004                     	org	2097156
 14210  200004  0FFF               	dw	4095
 14211                           
 14212                           ;Config register IDLOC3 @ 0x200006
 14213                           ;	unspecified, using default values
 14214  200006                     	org	2097158
 14215  200006  0FFF               	dw	4095
 14216                           
 14217                           ;Config register IDLOC4 @ 0x200008
 14218                           ;	unspecified, using default values
 14219  200008                     	org	2097160
 14220  200008  0FFF               	dw	4095
 14221                           
 14222                           ;Config register IDLOC5 @ 0x20000A
 14223                           ;	unspecified, using default values
 14224  20000A                     	org	2097162
 14225  20000A  0FFF               	dw	4095
 14226                           
 14227                           ;Config register IDLOC6 @ 0x20000C
 14228                           ;	unspecified, using default values
 14229  20000C                     	org	2097164
 14230  20000C  0FFF               	dw	4095
 14231                           
 14232                           ;Config register IDLOC7 @ 0x20000E
 14233                           ;	unspecified, using default values
 14234  20000E                     	org	2097166
 14235  20000E  0FFF               	dw	4095
 14236                           
 14237                           	psect	config
 14238                           
 14239                           ;Config register CONFIG1L @ 0x300000
 14240                           ;	External Oscillator mode Selection bits
 14241                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14242                           ;	Power-up default value for COSC bits
 14243                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14244  300000                     	org	3145728
 14245  300000  AA                 	db	170
 14246                           
 14247                           ;Config register CONFIG1H @ 0x300001
 14248                           ;	unspecified, using default values
 14249                           ;	Clock Out Enable bit
 14250                           ;	CLKOUTEN = 0x1, unprogrammed default
 14251                           ;	Clock Switch Enable bit
 14252                           ;	CSWEN = 0x1, unprogrammed default
 14253                           ;	Fail-Safe Clock Monitor Enable bit
 14254                           ;	FCMEN = 0x1, unprogrammed default
 14255  300001                     	org	3145729
 14256  300001  FF                 	db	255
 14257                           
 14258                           ;Config register CONFIG2L @ 0x300002
 14259                           ;	unspecified, using default values
 14260                           ;	Master Clear Enable bit
 14261                           ;	MCLRE = 0x1, unprogrammed default
 14262                           ;	Power-up Timer Enable bit
 14263                           ;	PWRTE = 0x1, unprogrammed default
 14264                           ;	Low-power BOR enable bit
 14265                           ;	LPBOREN = 0x1, unprogrammed default
 14266                           ;	Brown-out Reset Enable bits
 14267                           ;	BOREN = 0x3, unprogrammed default
 14268  300002                     	org	3145730
 14269  300002  FF                 	db	255
 14270                           
 14271                           ;Config register CONFIG2H @ 0x300003
 14272                           ;	unspecified, using default values
 14273                           ;	Brown Out Reset Voltage selection bits
 14274                           ;	BORV = 0x3, unprogrammed default
 14275                           ;	ZCD Disable bit
 14276                           ;	ZCD = 0x1, unprogrammed default
 14277                           ;	PPSLOCK bit One-Way Set Enable bit
 14278                           ;	PPS1WAY = 0x1, unprogrammed default
 14279                           ;	Stack Full/Underflow Reset Enable bit
 14280                           ;	STVREN = 0x1, unprogrammed default
 14281                           ;	Debugger Enable bit
 14282                           ;	DEBUG = 0x1, unprogrammed default
 14283                           ;	Extended Instruction Set Enable bit
 14284                           ;	XINST = 0x1, unprogrammed default
 14285  300003                     	org	3145731
 14286  300003  FF                 	db	255
 14287                           
 14288                           ;Config register CONFIG3L @ 0x300004
 14289                           ;	WDT Period Select bits
 14290                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14291                           ;	WDT operating mode
 14292                           ;	WDTE = OFF, WDT Disabled
 14293  300004                     	org	3145732
 14294  300004  9F                 	db	159
 14295                           
 14296                           ;Config register CONFIG3H @ 0x300005
 14297                           ;	unspecified, using default values
 14298                           ;	WDT Window Select bits
 14299                           ;	WDTCWS = 0x7, unprogrammed default
 14300                           ;	WDT input clock selector
 14301                           ;	WDTCCS = 0x7, unprogrammed default
 14302  300005                     	org	3145733
 14303  300005  FF                 	db	255
 14304                           
 14305                           ;Config register CONFIG4L @ 0x300006
 14306                           ;	unspecified, using default values
 14307                           ;	Write Protection Block 0
 14308                           ;	WRT0 = 0x1, unprogrammed default
 14309                           ;	Write Protection Block 1
 14310                           ;	WRT1 = 0x1, unprogrammed default
 14311                           ;	Write Protection Block 2
 14312                           ;	WRT2 = 0x1, unprogrammed default
 14313                           ;	Write Protection Block 3
 14314                           ;	WRT3 = 0x1, unprogrammed default
 14315                           ;	Write Protection Block 3
 14316                           ;	WRT4 = 0x1, unprogrammed default
 14317                           ;	Write Protection Block 3
 14318                           ;	WRT5 = 0x1, unprogrammed default
 14319                           ;	Write Protection Block 3
 14320                           ;	WRT6 = 0x1, unprogrammed default
 14321                           ;	Write Protection Block 3
 14322                           ;	WRT7 = 0x1, unprogrammed default
 14323  300006                     	org	3145734
 14324  300006  FF                 	db	255
 14325                           
 14326                           ;Config register CONFIG4H @ 0x300007
 14327                           ;	unspecified, using default values
 14328                           ;	Configuration Register Write Protection bit
 14329                           ;	WRTC = 0x1, unprogrammed default
 14330                           ;	Boot Block Write Protection bit
 14331                           ;	WRTB = 0x1, unprogrammed default
 14332                           ;	Data EEPROM Write Protection bit
 14333                           ;	WRTD = 0x1, unprogrammed default
 14334                           ;	Scanner Enable bit
 14335                           ;	SCANE = 0x1, unprogrammed default
 14336                           ;	Low Voltage Programming Enable bit
 14337                           ;	LVP = 0x1, unprogrammed default
 14338  300007                     	org	3145735
 14339  300007  FF                 	db	255
 14340                           
 14341                           ;Config register CONFIG5L @ 0x300008
 14342                           ;	unspecified, using default values
 14343                           ;	UserNVM Program Memory Code Protection bit
 14344                           ;	CP = 0x1, unprogrammed default
 14345                           ;	DataNVM Memory Code Protection bit
 14346                           ;	CPD = 0x1, unprogrammed default
 14347  300008                     	org	3145736
 14348  300008  FF                 	db	255
 14349                           
 14350                           ;Config register CONFIG5H @ 0x300009
 14351                           ;	unspecified, using default values
 14352  300009                     	org	3145737
 14353  300009  FF                 	db	255
 14354                           
 14355                           ;Config register CONFIG6L @ 0x30000A
 14356                           ;	unspecified, using default values
 14357                           ;	Table Read Protection Block 0
 14358                           ;	EBTR0 = 0x1, unprogrammed default
 14359                           ;	Table Read Protection Block 1
 14360                           ;	EBTR1 = 0x1, unprogrammed default
 14361                           ;	Table Read Protection Block 2
 14362                           ;	EBTR2 = 0x1, unprogrammed default
 14363                           ;	Table Read Protection Block 3
 14364                           ;	EBTR3 = 0x1, unprogrammed default
 14365                           ;	Table Read Protection Block 4
 14366                           ;	EBTR4 = 0x1, unprogrammed default
 14367                           ;	Table Read Protection Block 5
 14368                           ;	EBTR5 = 0x1, unprogrammed default
 14369                           ;	Table Read Protection Block 6
 14370                           ;	EBTR6 = 0x1, unprogrammed default
 14371                           ;	Table Read Protection Block 7
 14372                           ;	EBTR7 = 0x1, unprogrammed default
 14373  30000A                     	org	3145738
 14374  30000A  FF                 	db	255
 14375                           
 14376                           ;Config register CONFIG6H @ 0x30000B
 14377                           ;	unspecified, using default values
 14378                           ;	Boot Block Table Read Protection bit
 14379                           ;	EBTRB = 0x1, unprogrammed default
 14380  30000B                     	org	3145739
 14381  30000B  FF                 	db	255
 14382                           tosu	equ	0xFFF
 14383                           tosh	equ	0xFFE
 14384                           tosl	equ	0xFFD
 14385                           stkptr	equ	0xFFC
 14386                           pclatu	equ	0xFFB
 14387                           pclath	equ	0xFFA
 14388                           pcl	equ	0xFF9
 14389                           tblptru	equ	0xFF8
 14390                           tblptrh	equ	0xFF7
 14391                           tblptrl	equ	0xFF6
 14392                           tablat	equ	0xFF5
 14393                           prodh	equ	0xFF4
 14394                           prodl	equ	0xFF3
 14395                           indf0	equ	0xFEF
 14396                           postinc0	equ	0xFEE
 14397                           postdec0	equ	0xFED
 14398                           preinc0	equ	0xFEC
 14399                           plusw0	equ	0xFEB
 14400                           fsr0h	equ	0xFEA
 14401                           fsr0l	equ	0xFE9
 14402                           wreg	equ	0xFE8
 14403                           indf1	equ	0xFE7
 14404                           postinc1	equ	0xFE6
 14405                           postdec1	equ	0xFE5
 14406                           preinc1	equ	0xFE4
 14407                           plusw1	equ	0xFE3
 14408                           fsr1h	equ	0xFE2
 14409                           fsr1l	equ	0xFE1
 14410                           bsr	equ	0xFE0
 14411                           indf2	equ	0xFDF
 14412                           postinc2	equ	0xFDE
 14413                           postdec2	equ	0xFDD
 14414                           preinc2	equ	0xFDC
 14415                           plusw2	equ	0xFDB
 14416                           fsr2h	equ	0xFDA
 14417                           fsr2l	equ	0xFD9
 14418                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    160     160
    BANK1           256     70     209
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[6]), 
		 -> STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[6]), 
		 -> STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[6]), 
		 -> STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2805$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2805$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> detect_color@buf(BANK0[100]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead_test@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead_test@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_action
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _test_action->_turnLeft
    _test_action->_turnRight
    _fullSpeedAhead_test->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _main->_verify_color
    _verify_color->_detect_color
    _test_function->_detect_color
    _distance_measure->_lroundf
    _detect_color->_sprintf
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_test_function

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  377737
                                             14 BANK1     56    56      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                        _test_action
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   37355
                                            158 BANK0      2     2      0
                                              0 BANK1      7     3      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  121829
                                            158 BANK0      2     2      0
                                              0 BANK1     14     6      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   20203
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   37069
                                             25 BANK0    133   129      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                  _sendStringSerial4
                            _sprintf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2164
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19879
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13552
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11933
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3636
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2214
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    3139
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _test_action                                          4     0      4   29948
                                             49 COMRAM     4     0      4
                _fullSpeedAhead_test
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead_test                                  6     2      4    9070
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   93179
                                             93 COMRAM     1     1      0
                                            128 BANK0      4     0      4
                             _goback
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   12237
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   47648
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    9505
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5   10189
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11933
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    7050
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4187
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3275
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2339
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     751
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___wmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _sendStringSerial4
     _sprintf
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_action
     _fullSpeedAhead_test
       _fullSpeedAhead
       _stop
     _turnLeft
     _turnRight
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      D1       7       81.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     20B      57        0.0%
DATA                 0      0     20B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 13:20:39 2022

                ?_short_reverse 0026                  _color_read_Red 555C                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 55FC  
                 _color_predict 5A3C                              l71 5C2A                              l82 3756  
                            l74 3744                              l91 55AA                              l85 5A0A  
                            l94 564A                              l88 5BC0                              l97 55FA  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 564C  
              _color_read_Green 55AC               ??_Interrupts_init 0001                             l100 569A  
                           l103 5508                             l112 5B80                             l106 5B20  
                           l203 5A92                             l115 5B60                             l212 5C60  
                           l132 5448                             l221 5C36                             l109 5B00  
                           l141 3960                             l206 5A94                             l118 5B40  
                           l303 3B34                             l311 523A                             l215 5C4C  
                           l224 57AE                             l160 1BCE                             l209 5ABA  
                           l129 3EA4                             l138 5A68                             l322 44B6  
                           l218 5C56                             l163 592C                             l340 4328  
                           l172 4AC6                             l164 592E                             l421 5C14  
                           l326 44FE                             l318 446E                             l175 4F32  
                           l344 4370                             l336 42E0                             l176 4F34  
                           l168 5358                             l329 4528                             l409 5BDE  
                           l418 5C00                             l427 5A3A                             l355 52CE  
                           l347 439A                             l372 58B4                             l293 5832  
                           l366 517E                             l358 57F0                             l630 3CEE  
                           l296 4DA4                             l369 5874                             l633 5BA0  
                           l627 34AA                             l901 499E                             l668 5C42  
                           l685 5BFC                             l774 5AE0                             l888 483A  
             verify_color@color 018E                ?_calibrate_white 000C        __end_of_distance_measure 4F36  
                           _abs 58B6                             _pad 4F36                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 0039                    ___flmul@bexp 003A  
                  ___flmul@sign 0034                    ___flmul@temp 003F                    ___flmul@prod 003B  
               __end_of_LED_OFF 5B22                    ___fltol@exp1 0065                            l1005 50BE  
                          ?_abs 0013                            l1044 4CD2                            l1302 1DBE  
                          l1071 4BCE                            l1039 4C8C                            l1311 208E  
                          l1303 1DAC                            l1048 59A0                            l1304 1D72  
                          l1405 247A                            l1319 1ED8                            l1432 4058  
                          l1328 1FA8                            l4000 1E3C                            l1344 5728  
                          l1361 2A24                            l1329 1F96                            l1522 420C  
                          l1370 2B0C                            l4010 1EA8                            l4002 1E46  
                          l1450 5968                            l1515 31DE                            l1443 3FF0  
                          l4100 416A                            l1356 2C00                            l1436 3F94  
                          l4012 1EB8                            l4004 1E4C                            l1533 58EC  
                          l1429 3EFC                            l4102 418E                            l4110 41BC  
                          l1358 2A60                            l4030 1F3A                            l4022 1F12  
                          l4006 1E72                            l4014 1EC8                            l1367 2AA6  
                          l1536 58F4                            l4112 41CA                            l4104 419C  
                          l1528 54A2                            l1392 24B8                            l4200 20FE  
                          l4032 1F42                            l4024 1F1C                            l4016 1EEE  
                          l4008 1EA6                            l4040 1F66                            l5000 385E  
                          l1529 54AA                            l1457 555A                            l1369 2B1E  
                          l4106 41B0                            l4130 5C32                            l4210 213E  
                          l4202 210C                            l4050 1FB8                            l4042 1F6A  
                          l4034 1F46                            l4026 1F2A                            l4018 1EFE  
                          l5010 38C2                            l5002 3876                            l1395 234A  
                          l1548 4E6E                            l1556 576C                            l1580 59D6  
                          l1484 4F7C                            l4116 41D6                            l4124 5C58  
                          l4132 5C4E                            l4140 5770                            l4300 249C  
                          l4220 2188                            l1388 2154                            l4212 2144  
                          l4204 210E                            l4060 201E                            l4052 1FC4  
                          l4044 1F78                            l4036 1F56                            l4028 1F2C  
                          l5020 393A                            l5012 38DA                            l5004 388E  
                          l5100 180C                            l1397 23C2                            l4118 41FA  
                          l4126 5C5C                            l4134 5C52                            l4150 57AC  
                          l4142 5774                            l4302 249E                            l1398 23B0  
                          l4230 21D8                            l4222 2194                            l4214 2164  
                          l4206 211E                            l4070 2066                            l4062 202E  
                          l4054 1FD2                            l4046 1F8E                            l4038 1F58  
                          l4310 56E4                            l5022 393E                            l5014 38F2  
                          l5006 38A6                            l5110 1918                            l5102 1816  
                          l5030 0E72                            l1559 5C66                            l1487 4FBE  
                          l1495 2F9E                            l1567 2866                            l4160 51A8  
                          l4400 50E4                            l4128 5C2E                            l5200 57DC  
                          l4144 577C                            l4136 5C44                            l4320 4C0E  
                          l4304 24A4                            l4240 221A                            l4232 21E4  
                          l4224 219E                            l4216 2174                            l4208 212E  
                          l4072 2068                            l4064 204E                            l4056 200C  
                          l4312 56F4                            l5016 390A                            l5008 38BE  
                          l5120 1A02                            l5112 1922                            l5104 1820  
                          l5040 1096                            l5032 0F0E                            l5024 0E14  
                          l1489 4FFA                            l1497 2FA6                            l4090 40A2  
                          l4082 405A                            l4162 51C0                            l4170 51F2  
                          l4154 5180                            l4410 513A                            l4402 50FC  
                          l5210 2C1A                            l5202 5834                            l4146 5784  
                          l4138 5C48                            l4330 4C7A                            l4322 4C3C  
                          l4306 24A8                            l4250 227C                            l4242 2226  
                          l4234 21F0                            l4226 21B4                            l4074 206E  
                          l4066 2052                            l4058 200E                            l5018 3922  
                          l5130 1B02                            l5122 1A7E                            l5114 193A  
                          l5106 184E                            l5050 1108                            l5042 10B2  
                          l5034 0F2A                            l5026 0E62                            l3700 48A0  
                          l3620 4DF2                            l3612 4DA6                            l4092 40C6  
                          l4084 407E                            l4172 520A                            l4164 51CC  
                          l4156 5184                            l4412 5152                            l4404 5108  
                          l5220 2C56                            l5212 2C1E                            l5204 5848  
                          l4500 34EA                            l4148 57AA                            l4332 4CCA  
                          l4324 4C4C                            l4316 4BD0                            l4260 2312  
                          l4252 2288                            l4244 2236                            l4236 21FE  
                          l4228 21C0                            l4180 2090                            l4340 5980  
                          l4076 207C                            l4068 2060                            l5140 1BAC  
                          l5132 1B44                            l5124 1AB6                            l5116 1942  
                          l5108 190E                            l5060 1296                            l5052 1114  
                          l5044 10CA                            l5036 0FD2                            l5028 0E66  
                          l5300 52EC                            l3710 4916                            l3702 48BE  
                          l3622 4E28                            l3614 4DB8                            l3630 5748  
                          l4094 40EA                            l4086 408C                            l4350 5460  
                          l4174 5222                            l4166 51D8                            l4158 519C  
                          l4414 516A                            l4406 5114                            l5230 2CC0  
                          l5222 2C64                            l5214 2C24                            l5206 5860  
                          l4510 3584                            l4502 3502                            l4430 4B34  
                          l4422 4AF4                            l4334 4CD0                            l4326 4C5A  
                          l4318 4BFE                            l4270 2368                            l4262 2330  
                          l4254 22A4                            l4246 2250                            l4238 220A  
                          l4190 20CC                            l4182 209C                            l4342 5990  
                          l4078 207E                            l5150 49BA                            l5142 1BC0  
                          l5134 1B4A                            l5126 1ABE                            l5118 1A02  
                          l5070 13AC                            l5062 133E                            l5054 11B6  
                          l5046 10F8                            l5038 0FEE                            l5302 530C  
                          l4176 5C00                            l3720 497E                            l3712 4936  
                          l3704 48C6                            l3616 4DCA                            l3632 574C  
                          l3640 59CA                            l3800 2EFE                            l4096 4132  
                          l4088 409E                            l4352 5486                            l4168 51E4  
                          l4408 5122                            l4600 443C                            l5240 2CF6  
                          l5224 2C7C                            l5216 2C3C                            l5208 2C02  
                          l4520 3646                            l4512 35BC                            l4504 353A  
                          l5320 581A                            l4440 4B64                            l4432 4B42  
                          l4424 4B1E                            l4416 4AC8                            l4328 4C6C  
                          l4280 23D2                            l4272 236C                            l4264 233A  
                          l4256 22CE                            l4248 2260                            l4192 20DC  
                          l4184 20AA                            l5160 4A04                            l5152 49C4  
                          l4360 55FC                            l5144 1BCA                            l5136 1B78  
                          l5128 1AC2                            l5080 1522                            l5072 13B0  
                          l5064 135A                            l5056 11D2                            l5048 1104  
                          l5400 4610                            l5312 5356                            l5304 5324  
                          l4178 5C10                            l3650 46E6                            l3714 4948  
                          l3706 48DA                            l3618 4DD4                            l3626 572A  
                          l3634 59A2                            l3730 4F68                            l3810 2F78  
                          l3802 2F1E                            l4346 544A                            l4610 4496  
                          l4602 444E                            l5250 2D60                            l5242 2CFC  
                          l5234 2CD6                            l5226 2C82                            l5218 2C42  
                          l4530 36D6                            l4522 3658                            l4514 35CE  
                          l4506 354C                            l5322 582E                            l5330 4CF0  
                          l4450 4B8E                            l4442 4B6E                            l4426 4B20  
                          l4418 4AE0                            l4290 2434                            l4282 23DE  
                          l4274 237A                            l4266 2348                            l4258 2304  
                          l4194 20E2                            l4186 20AC                            l4338 596A  
                          l5170 4AB4                            l5162 4A10                            l5154 49C8  
                          l4362 5642                            l4354 555C                            l5138 1BA6  
                          l5090 16BE                            l5082 153E                            l5074 13BC  
                          l5066 1372                            l5058 127A                            l5410 466A  
                          l5402 4620                            l5306 534E                            l3660 4728  
                          l3652 46EA                            l3644 46B4                            l3708 48E8  
                          l3716 494E                            l3628 5736                            l3636 59AE  
                          l3740 4FCE                            l3732 4F74                            l3724 4F36  
                          l3820 2FD4                            l3812 2F92                            l3804 2F46  
                          l4348 5452                            l4380 551C                            l4620 44EA  
                          l4612 44A2                            l4604 445A                            l5260 2DBC  
                          l5252 2D78                            l5244 2D20                            l5236 2CD8  
                          l5228 2CAC                            l4532 36F4                            l4524 3676  
                          l4516 35F2                            l4508 356C                            l5420 31F2  
                          l5324 5830                            l5316 57F2                            l5332 4D04  
                          l5340 5BC2                            l4700 28A4                            l4372 564C  
                          l4452 4B9E                            l4428 4B30                            l4292 2448  
                          l4284 23EC                            l4276 23A8                            l4268 235A  
                          l4196 20F2                            l4188 20BC                            l3900 1C3C  
                          l4460 24BA                            l5172 4ABE                            l5164 4A28  
                          l5156 49E0                            l5148 49A0                            l4540 5B02  
                          l4356 55A2                            l5092 16D6                            l5084 15E6  
                          l5076 145E                            l5068 13A0                            l5180 4E8A  
                          l5412 467A                            l4390 5A0C                            l3670 4782  
                          l3662 4746                            l3654 46F8                            l3646 46B8  
                          l3718 495E                            l3638 59B2                            l3742 4FE2  
                          l3734 4F88                            l3726 4F46                            l3830 3072  
                          l3822 2FDC                            l3814 2FAE                            l3806 2F66  
                          l4382 5524                            l3750 5ABC                            l4622 44FA  
                          l4614 44B2                            l4606 446A                            l4630 424A  
                          l5270 2E60                            l5262 2DE0                            l5254 2D7C  
                          l5246 2D38                            l5238 2CDE                            l4534 370C  
                          l4526 368E                            l4518 360A                            l5430 325C  
                          l5422 3202                            l5318 5802                            l5334 4D18  
                          l5326 4CD4                            l5350 5BDC                            l5342 5BCC  
                          l4550 5B68                            l4710 28D4                            l4702 28B4  
                          l4374 5692                            l4454 4BAE                            l4438 4B5A  
                          l4294 2462                            l4286 2416                            l4198 20F8  
                          l3910 1C66                            l3902 1C4E                            l4470 2596  
                          l4462 24DA                            l5166 4A34                            l5158 49EC  
                          l4542 5B08                            l4366 55AC                            l5094 1704  
                          l5086 1602                            l5078 147A                            l5190 4F16  
                          l5182 4EA4                            l5414 468E                            l5406 4636  
                          ?_pad 0011                            l5360 5BF2                            l4392 5A10  
                          l3672 47B0                            l3664 474E                            l3680 47EA  
                          l3656 4718                            l3648 46C6                            l3736 4F9C  
                          l3728 4F5A                            l3840 312E                            l3832 3078  
                          l3824 2FE4                            l3816 2FC0                            l3808 2F76  
                          l4384 552C                            l3760 500E                            l3752 5AD8  
                          l4624 4514                            l4616 44CC                            l4608 4484  
                          l4640 4296                            l4632 4256                            l5280 2EC8  
                          l5272 2E64                            l5264 2E0C                            l5256 2DA0  
                          l5248 2D3C                            l4536 3742                            l4528 36C4  
                          l5440 32E2                            l5432 3288                            l5424 322E  
                          l5336 4D28                            l5328 4CE0                            l5344 5BCE  
                          l4800 2B48                            l4720 290A                            l4712 28DA  
                          l4704 28B6                            l4456 4BBE                            l4448 4B82  
                          l4296 247E                            l4288 241A                            l3912 1C76  
                          l3920 1CA0                            l3904 1C50                            l4480 2724  
                          l4472 25B2                            l4464 2522                            l5168 4A4C  
                          l4552 5B42                            l4544 5AE2                            l4368 55F2  
                          l4560 53DA                            l5096 1710                            l5088 16AA  
                          l5192 4F2E                            l5184 4EB0                            l5176 4E70  
                          l5416 46A8                            l5408 464A                            l5362 5C38  
                          l4394 5A1E                            l3682 47FA                            l3674 47D0  
                          l3666 4762                            l3658 471C                            l3690 4840  
                          l3746 58B6                            l3738 4FA0                            l3850 3180  
                          l3842 3148                            l3826 2FEA                            l3834 30DC  
                          l3818 2FCE                            l4386 5548                            l4378 550A  
                          l3770 5034                            l3762 5016                            l4618 44DE  
                          l4650 42DC                            l4642 42A2                            l4634 4262  
                          l4626 420E                            l5274 2E88                            l5266 2E10  
                          l5258 2DB8                            l5450 3356                            l5442 32FC  
                          l5434 32A2                            l5426 3248                            l5418 31E2  
                          l5290 59DC                            l5338 4D3C                            l5346 5BD8  
                          l4810 2BC0                            l4802 2B72                            l4730 294A  
                          l4722 291A                            l4714 28E8                            l4706 28BE  
                          l4298 248E                            l3930 1CD8                            l3922 1CB0  
                          l3914 1C86                            l3906 1C56                            l4490 2856  
                          l4482 2756                            l4466 2536                            l4554 5B48  
                          l4546 5AE8                            l4562 543C                            l4538 54AC  
                          l5098 173E                            l5186 4EB4                            l5178 4E86  
                          l5370 4540                            l5356 5BE0                            l4396 5A22  
                          l3684 481A                            l3676 47D2                            l3668 4770  
                          l3692 484E                            l3748 58D0                            l3852 3192  
                          l3836 30F6                            l3844 3158                            l3828 306C  
                          l4564 5A40                            l3780 506C                            l3772 503C  
                          l3764 501A                            l3756 4FFC                            l4660 433E  
                          l4652 42F6                            l4644 42AE                            l4628 4232  
                          l4636 4270                            l5276 2EA0                            l5268 2E34  
                          l5284 2EE4                            l5460 33B2                            l5452 3358  
                          l5444 32FE                            l5436 32A4                            l5428 324A  
                          l5292 59E6                            l5348 5BDA                            l5364 5B82  
                          l5196 57B0                            l4548 5B62                            l4820 2BF6  
                          l4812 2BDC                            l4804 2B76                            l4732 295A  
                          l4740 297A                            l4724 291C                            l4716 28EA  
                          l4708 28CE                            l3940 1CEC                            l3932 1CDC  
                          l3924 1CC2                            l3916 1C96                            l3908 1C64  
                          l4484 27C2                            l4476 25EA                            l4468 2572  
                          l4556 5B22                            l4900 3D2E                            l4572 58F6  
                          l5188 4EFA                            l5380 4598                            l5372 4552  
                          l5540 5372                            l5532 535A                            l5358 5BE8  
                          l3678 47E4                            l3694 486E                            l3854 319E  
                          l3846 316A                            l3838 3114                            l4566 5A5C  
                          l3790 5098                            l3782 5072                            l3774 504E  
                          l3766 5028                            l3758 5000                            l3870 39E0  
                          l4670 523C                            l4398 50C0                            l4590 43F0  
                          l4582 439C                            l4662 4350                            l4654 4308  
                          l4646 42C0                            l4638 4288                            l5278 2EA4  
                          l4494 34AE                            l5470 341E                            l5462 33C4  
                          l5454 336A                            l5446 3310                            l5438 32B6  
                          l5286 5C16                            l3862 5A94                            l5294 59F6  
                          l5198 57C4                            l5366 3B36                            l4814 2BE0  
                          l4806 2B90                            l4750 29B8                            l4742 298A  
                          l4734 2962                            l4718 28FA                            l4726 2924  
                          l4830 3EB8                            l3950 1D00                            l3942 1CF0  
                          l3934 1CE0                            l3926 1CD0                            l3918 1C98  
                          l4486 27F6                            l4478 26B8                            l4558 5B28  
                          l4902 3D46                            l4574 58FC                            l5390 45E0  
                          l5382 459C                            l5374 455E                            l5550 5396  
                          l5542 5376                            l5534 535E                            l3696 4872  
                          l3688 483C                            l3856 31A6                            l3848 317A  
                          l3784 5088                            l3776 5056                            l3792 509E  
                          l3768 5030                            l3872 3A26                            l4672 5260  
                          l4680 529E                            l4584 43C0                            l4592 43FE  
                          l4664 435C                            l4656 4314                            l4648 42CC  
                          l4496 34BA                            l5480 3482                            l5472 344A  
                          l5464 33F0                            l5456 3396                            l5448 333C  
                          l3864 5AA4                            l5296 5A00                            l5288 59D8  
                          l4816 2BEE                            l4808 2BA6                            l4760 2A00  
                          l4752 29C8                            l4744 298A                            l4736 2966  
                          l4728 2934                            l4840 3F36                            l4832 3EC6  
                          l3960 1D14                            l3952 1D04                            l3944 1CF4  
                          l3936 1CE4                            l3928 1CD4                            l3880 1BD0  
                          l4488 2832                            l4568 5930                            l4920 3D94  
                          l4904 3D4C                            l4576 5912                            l5392 45E6  
                          l5384 45A8                            l5376 4572                            l5368 452E  
                          l5560 53AA                            l5552 5396                            l5544 537A  
                          l5536 5362                            l3698 4880                            l3858 31B6  
                          l3794 50AE                            l3786 5090                            l3778 505E  
                          l3874 3A46                            l3866 3962                            l4682 52B6  
                          l4674 5278                            l4594 4416                            l4586 43D8  
                          l4666 436C                            l4658 4324                            l4498 34CA  
                          l5482 3496                            l5474 3464                            l5466 340A  
                          l5458 33B0                            l4818 2BF4                            l4770 2A4E  
                          l4762 2A14                            l4754 29D8                            l4690 2868  
                          l4850 3F8A                            l4842 3F3E                            l4834 3F0C  
                          l3970 1D8C                            l3962 1D3E                            l3954 1D08  
                          l3946 1CF8                            l3938 1CE8                            l3890 1C0C  
                          l3882 1BDC                            l4922 3DAC                            l4914 3D78  
                          l4906 3D68                            l4578 5928                            l5386 45B4  
                          l5378 4586                            l5298 52D4                            l5554 5396  
                          l5546 537E                            l5538 536E                            l3796 50B6  
                          l3788 5092                            l3876 3A62                            l3868 397E  
                          l4676 5284                            l4684 5876                            l4596 4424  
                          l4588 43E4                            l4668 4386                            l5476 3466  
                          l5468 340C                            l4780 2A96                            l4772 2A5E  
                          l4764 2A22                            l4756 29E8                            l4748 299E  
                          l4692 2874                            l4860 4000                            l4852 3FC6  
                          l4844 3F4A                            l4836 3F22                            l4828 3EA8  
                          l3980 1DCC                            l3972 1D90                            l3964 1D5A  
                          l3956 1D0C                            l3948 1CFC                            l3892 1C1C  
                          l3884 1BEA                            l4940 3DFA                            l4924 3DB2  
                          l4916 3D7C                            l4908 3D6E                            l5396 45FE  
                          l5388 45C8                            l5548 5382                            l3878 3ACC  
                          l4678 5290                            l4686 588A                            l4598 4430  
                          l5478 3478                            l4790 2AD6                            l4782 2AA4  
                          l4774 2A70                            l4766 2A2E                            l4758 29F0  
                          l4694 2882                            l4870 4048                            l4862 4004  
                          l4854 3FD2                            l4846 3F7C                            l3990 1E0E  
                          l3982 1DDC                            l3974 1D9E                            l3966 1D6A  
                          l3958 1D10                            l3894 1C1E                            l3886 1BEC  
                          l4942 3E12                            l4934 3DDE                            l4926 3DCE  
                          l4918 3D88                            l5398 460A                            l4688 58A0  
                          l4880 5A7C                            l4792 2B04                            l4776 2A86  
                          l4784 2AB6                            l4768 2A4C                            l4696 2884  
                          l4864 4028                            l4856 3FE0                            l4848 3F7E  
                          l3992 1E1C                            l3976 1DA0                            l3968 1D80  
                          l3888 1BFC                            l3896 1C26                            l4960 3E60  
                          l4944 3E18                            l4936 3DE2                            l4928 3DD4  
                          l4882 5A7E                            l4874 5A6A                            l4786 2AC4  
                          l4778 2A8C                            l4698 2894                            l4866 4038  
                          l4858 3FFE                            l3994 1E28                            l3986 1DF0  
                          l3978 1DAA                            l3898 1C36                            l4970 3758  
                          l4962 3E78                            l4954 3E44                            l4946 3E34  
                          l4938 3DEE                            l4884 5A80                            l4876 5A74  
                          l4796 2B2E                            l4788 2AC8                            l4868 4046  
                          l3996 1E2C                            l3988 1E00                            l4980 3796  
                          l4972 375C                            l4964 3E7E                            l4956 3E48  
                          l4948 3E3A                            l4878 5A7A                            l4886 5BA4  
                          l4798 2B3A                            l3998 1E3A                            l4990 37FA  
                          l4982 37AE                            l4974 3766                            l4966 3E9A  
                          l4958 3E54                            l4894 3D12                            l4992 3812  
                          l4984 37C6                            l4976 377E                            l4968 3EA0  
                          l4896 3D16                            l4888 3CF0                            l4994 382A  
                          l4986 37DE                            l4978 3782                            l4898 3D22  
                          l4996 3842                            l4988 37E2                            l4998 3846  
                          STR_1 0E05                            STR_3 0E0D                            STR_4 0E08  
                          STR_5 0E08                            STR_6 0E08                            u3000 4916  
                          u3001 4912                            u3010 495E                            u3011 495A  
                          u3020 4F46                            u3100 506C                            u3021 4F42  
                          u3101 5068                            u3030 4F68                            u3110 5088  
                          u3031 4F64                            u3111 5084                            u3040 4FBE  
                          u3200 30F6                            u3120 50AE                            u4000 2434  
                  _BAUD4CONbits 000EE9                            u3041 4FBA                            u3201 30F2  
                          u3121 50AA                            u4001 2430                            _LATE 000F7D  
                          u3050 4FCE                            u3210 3114                            u3130 2F2E  
                          u4010 2462                            u3051 4FCA                            u3211 3110  
                          u3131 2F28                            u4011 245E                            _LATG 000F7F  
                          u4100 5A3A                            u3060 58D0                            u3220 312E  
                          u3140 2F30                            u3300 397E                            u4020 249C  
                          u4101 5A36                            u3061 58CC                            u3221 312A  
                          u3301 397A                            u4021 2498                            u3230 3148  
                          u3150 2F46                            u3070 500E                            u3310 3A62  
                          u4110 513A                            u4030 4BFE                            u3231 3144  
                          u3151 2F42                            u3071 500A                            u3311 3A5E  
                          u4111 5136                            u4031 4BFA                            u3240 3158  
                          u3160 2F76                            u3080 5028                            u4120 5152  
                          u5000 3FC2                            u4040 4C3C                            u3400 1C86  
                          u4200 24FA                            u3241 3154                            u3161 2F72  
                          u3081 5024                            u4121 514E                            u5001 3FBE  
                          u4041 4C38                            u3401 1C82                            u3250 316A  
                          u3170 2F92                            u3090 504E                            u5010 3FE0  
                          u4130 4AE0                            u4050 4C5A                            u3410 1CC2  
                          u4210 2522                            _T2PR 000FBC                            u3251 3166  
                          u3171 2F8E                            u3091 504A                            u5011 3FDC  
                          u4131 4ADC                            u4051 4C56                            u3411 1CBE  
                          u4211 251E                            u3260 317A                            u3180 2FC0  
                          u3324 3ABC                            u4300 34DC                            u5020 3FF0  
                          u4140 4B14                            u4060 4C7A                            u3500 1DDC  
                          u3420 1CD0                            u3340 1BEA                            u4220 2556  
                          u5100 173E                            u3261 3176                            u3181 2FBC  
                          u3325 3AB8                            u4301 34D4                            u5021 3FEC  
                          u4061 4C76                            u3501 1DD8                            u3421 1CCC  
                          u3341 1BE6                            u4205 24F0                            u5101 173A  
                          u3270 3192                            u3190 2FCE                            u3334 3B26  
                          u5030 3FFE                            u4150 4B42                            u4070 4CCA  
                          u3510 1E0E                            u3430 1D3E                            u3350 1BFC  
                          u4230 2572                            u5110 180C                            u3271 318E  
                          u3191 2FCA                            u3335 3B22                            u5031 3FFA  
                          u4151 4B3E                            u4071 4CC6                            u3511 1E0A  
                          u3431 1D3A                            u3351 1BF8                            u4231 256E  
                          u5111 1808                            u4400 35E0                            u4320 3514  
                          u3280 5AA4                            u5040 4038                            u4160 4B56  
                          u4080 5980                            u3600 1F56                            u3520 1E1C  
                          u3440 1D56                            u3360 1C0C                            u4240 25B2  
                          u5200 1BA6                            u5120 184E                            u4401 35D8  
                          u4321 350C                            u3281 5AA0                            u5041 4034  
                          u4161 4B52                            u4145 4B0A                            u4081 597C  
                          u3601 1F52                            u3521 1E18                            u3441 1D50  
                          u3361 1C08                            u4241 25AE                            u4225 254C  
                          u5201 1BA2                            u5121 184A                            u4090 54A2  
                          u3290 5ABA                            u5050 4046                            u4170 4B7E  
                          u3610 1F66                            u3530 1E3A                            u3450 1D58  
                          u3370 1C4E                            u4250 26B8                            u5210 1BC0  
                          u5130 190E                            u4091 549E                            u3291 5AB6  
                          u5051 4042                            u4171 4B7A                            u3611 1F62  
                          u3531 1E36                            u3371 1C4A                            u4251 26B4  
                          u5211 1BBC                            u5131 190A                            u2900 46F8  
                          u5300 2E88                            u4500 36E8                            u4420 361C  
                          u4340 354C                            u4180 4B9E                            u3700 204E  
                          u3620 1F78                            u3540 1E72                            u3460 1D80  
                          u3380 1C64                            u4260 2756                            u5060 3D68  
                          u5140 193A                            u5220 4F2E                            u2901 46F4  
                          u5301 2E84                            u4501 36E0                            u4421 3614  
                          u4341 3548                            u4181 4B9A                            u3701 204A  
                          u3621 1F74                            u3541 1E6E                            u3461 1D7C  
                          u3381 1C60                            u4261 2752                            u5061 3D64  
                          u5141 1936                            u5221 4F2A                            u2830 4DB8  
                          u5310 2EC8                            u5230 2CAC                            u4350 355E  
                          u4318 34DE                            u4190 4BAE                            u3710 2060  
                          u3630 1F8E                            u3550 1EB8                            u3470 1D9E  
                          u3390 1C76                            u4270 2816                            u5070 3DCE  
                          u5150 1A02                            u2911 4722                            u2831 4DB4  
                          u5311 2EC4                            u5231 2CA8                            u6007 36FE  
                          u4351 3556                            u4191 4BAA                            u3711 205C  
                          u3631 1F8A                            u3551 1EB4                            u3471 1D9A  
                          u3391 1C72                            u5071 3DCA                            u5151 19FE  
                          u2920 4746                            u2840 4DCA                            u3800 51C0  
                          u4600 4496                            u5240 2CD2                            u4520 371E  
                          u4440 3658                            u3720 207C                            u3640 1FA4  
                          u3560 1EEE                            u3480 1DBE                            u4280 2832  
                          u5080 3E34                            u5160 1AB6                            u5400 4620  
                          u5320 534E                            u2921 4742                            u2841 4DC6  
                          u3801 51BC                            u4601 4492                            u5241 2CCE  
                          u6017 3734                            u4521 3716                            u4441 3654  
                          u3721 2078                            u3641 1FA0                            u3561 1EEA  
                          u3481 1DBA                            u4281 282E                            u5081 3E30  
                          u5161 1AB2                            u5401 461C                            u5321 534A  
                          u2930 4770                            u2850 4DF2                            u3730 407E  
                          u3810 520A                            u4610 44CC                            u5250 2D20  
                          u4450 366A                            u4418 35E2                            u4370 3596  
                          u4338 3516                            u4290 34CA                            u3650 1FB8  
                          u3570 1EFE                            u3490 1DCC                            u5090 3E9A  
                          u5170 1B02                            u5410 4632              verify_color@color2 018C  
                          u2931 476C                            u2851 4DEE                            u3731 407A  
                          u3811 5206                            u4611 44C8                            u6107 44A8  
                          u5251 2D1C                            u6027 5852                            u4451 3662  
                          u4371 358E                            u4291 34C6                            u3651 1FB4  
                          u3571 1EFA                            u3491 1DC8                            u4275 280C  
                          u5091 3E96                            u5171 1AFE                            u5411 462E  
                          u2940 47B0                            u2860 4E28                            u3740 40C6  
                          u3820 5222                            u4620 44DE                            u4700 4386  
                          u5260 2D60                            u4540 3756                            u5500 341E  
                          u3900 2164                            u3660 1FD2                            u3580 1F2A  
                          u5180 1B44                            u5420 467A                            u2941 47AC  
                          u2861 4E24                            u3741 40C2                            u3821 521E  
                          u6117 44F0                            u4621 44DA                            u4701 4382  
                          u5261 2D5C                            u6037 2C6E                            u4541 3752  
                          u5501 341A                            u3901 2160                            u3661 1FCE  
                          u3581 1F26                            u5181 1B40                            u5421 4676  
                          u3830 5C10                            u2950 47FA                            u2870 576C  
                          u3750 40EA                            u4710 52B6                            u4630 4514  
                          u5270 2DA0                            u4518 36EA                            u4470 36A0  
                          u4438 361E                            u4390 35CE                            u5510 3478  
                          u5430 31F2                            u3910 2174                            u3670 200C  
                          u3590 1F3A                            u4550 5912                            u5190 1B78  
                          u5350 4552                            u3831 5C0C                            u2951 47F6  
                          u2871 5768                            u3751 40E6                            u4711 52B2  
                          u6127 5894                            u4631 4510                            u6047 4268  
                          u5271 2D9C                            u4471 3698                            u4391 35CA  
                          u5511 3474                            u5431 31EE                            u3911 2170  
                          u3671 2008                            u3591 1F36                            u4551 590E  
                          u5191 1B74                            u5351 454E                            u2960 484E  
                          u2880 59CA                            u3760 418E                            u4720 52CE  
                          u4640 4288                            u5280 2DE0                            u4368 3560  
                          u5440 3202                            u4800 298A                            u3920 22EE  
                          u3840 20AA                            u3680 201E                            u4560 5928  
                          u5360 4572                            u2961 484A                            u2881 59C6  
                          u3761 418A                            u4721 52CA                            u6137 511A  
                          u6057 42D2                            u4641 4284                            u5281 2DDC  
                          u5441 31FE                            u4801 2986                            u3841 20A6  
                          u3681 201A                            u4561 5924                            u5361 456E  
                          u2890 46C6                            u2970 4880                            u4570 4416  
                          u4650 42C0                            u5290 2E34                            u4538 3720  
                          u4490 36D6                            u5450 325C                            u4810 2A00  
                          u4730 2882                            u3770 5798                            u3930 2348  
                          u3850 20BC                            u3690 202E                            u5370 4598  
                          u2891 46C2                            u2971 487C                            u6147 515C  
                          u4571 4412                            u6067 431A                            u4651 42BC  
                          u5291 2E30                            u4491 36D2                            u5451 3258  
                          u4811 29FC                            u4731 287E                            u3771 5790  
                          u3931 2344                            u3851 20B8                            u3691 202A  
                          u5371 4594                            u2980 48BE                            u4580 444E  
                          u4660 42F6                            u4468 366C                            u4388 3598  
                          u5460 32B6                            u4900 2B1A                            u4820 2A22  
                          u4740 2894                            u3940 2368                            u3860 20CC  
                          u5380 45C8                            u2981 48BA                            u6157 51EA  
                          u4581 444A                            u6077 4362                            u4661 42F2  
                          u5461 32B2                            u4901 2B16                            u4821 2A1E  
                          u4741 2890                            u3941 2364                            u3925 22E4  
                          u3861 20C8                            u5381 45C4                            u2990 48E8  
                          u3790 519C                            u4590 4484                            u4670 4308  
                          u5470 3310                            u4910 2B2E                            u4830 2A4C  
                          u4750 28A4                            u3950 237A                            u3870 210C  
                          u5390 45FA                            u2991 48E4                            u6167 522C  
                          u3791 5198                            u4591 4480                            u6087 43F6  
                          u4671 4304                            u5471 330C                            u4911 2B2A  
                          u4831 2A48                            u4751 28A0                            u3951 2376  
                          u3871 2108                            u5391 45F6                            u4680 433E  
                          u4488 36A2                            u5480 336A                            u4920 2B48  
                          u4840 2A70                            u4760 28E8                            u3960 23A8  
                          u3880 211E                            u6177 5296                            u6097 4460  
                          u4681 433A                            u5481 3366                            u4921 2B44  
                          u4841 2A6C                            u4761 28E4                            u3961 23A4  
                          u3881 211A                            u4690 4350                            u5490 33C4  
                          u4930 2B90                            u4850 2A86                            u4770 28FA  
                          u3970 23BE                            u3890 212E                            u4691 434C  
                          u5491 33C0                            u4931 2B8C                            u4851 2A82  
                          u4771 28F6                            u3971 23BA                            u3891 212A  
                          u5707 16CA                            u4940 2BC0                            u4860 2AA4  
                          u4780 290A                            u3788 579A                            u3980 23D2  
                          u4941 2BBC                            u4861 2AA0                            u4781 2906  
                          u3981 23CE                            u5717 3D38                            u4950 2BEE  
                          u4870 2AC4                            u4790 294A                            u3990 23EC  
                          u4951 2BEA                            u4871 2AC0                            u4791 2946  
                          u3991 23E8                            u5807 3948                            u5727 3D9E  
                          u5647 52E0                            u4880 2AD6                            u4960 3EB8  
                          u4881 2AD2                            u4961 3EB4                            u5817 5AF2  
                          u5737 3E04                            u5657 5318                            u4890 2B04  
                          u4970 3EC6                            u5907 57CE                            u4891 2B00  
                          u4971 3EC2                            u5827 5B12                            u5747 3E6A  
                          u5667 469A                            u4980 3F22                            u5917 59EC  
                          u4981 3F1E                            u5837 5B32                            u5757 3770  
                          u5677 4E96                            u4990 3F78                            u5927 34F4  
                          u4991 3F74                            u5847 5B52                            u5767 37D0  
                          u5687 10BE                            u5937 352C                            u5857 49D4  
                          u5777 3834                            u5697 1366                            u5947 3576  
                          u5867 49F8                            u5787 38B0                            u5957 35AE  
                          u5877 4A1C                            u5797 392C                            u5967 35FC  
                          u5887 4A40                            u5977 3638                            u5897 5B72  
                          u5987 3680                            u5997 36B6                            abs@a 0013  
                          _dbuf 0168                            _main 535A                            _dtoa 2EFE  
                          _prec 0158                            _nout 0154                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 5180                            prodh 000FF4                            prodl 000FF3  
                          start 0028                  ?_color_display 0058                   test_action@mL 0032  
                 test_action@mR 0034                 ___fldiv@new_exp 0020          __end_of_color_read_Red 55AC  
               __end_of_HighISR 0028                    ___param_bank 000000                 detect_color@buf 0081  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 483C       amb_light_measure@CC_amb_1 0072  
     amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076                 __end_of___fladd 2090  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 49A0  
               __end_of___fldiv 2C02                 __end_of___awdiv 50C0                 __end_of___flneg 59A2  
               __end_of___flmul 24BA                 __end_of___flsub 572A                 __end_of___fltol 4BD0  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 5B42  
                         _LED_C 5B62                           _LED_G 5B22                           _LED_R 5AE2  
                         i2l674 0024                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5C16  
    __end_of_I2C_2_Master_Start 5C62         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5C38  
               __end_of_compare 5930                    compare@lower 006A                           _flags 015A  
                         _color 0162                    compare@upper 006E                           _fputc 4DA6  
                         _fputs 572A                           pad@fp 0011                           _width 0156  
                         _putch 5C66                           _toint 0E01                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                 ??_test_function 00FE  
          amb_light_measure@amb 006A                           tablat 000FF5                 __end_of_lroundf 596A  
                         ttemp5 0060                           ttemp6 0063                           ttemp7 0067  
                         status 000FD8                           wtemp8 0060                 __end_of_sprintf 555C  
              color_display@buf 0079         __end_of_color_read_Blue 564C           _I2C_2_Master_RepStart 5C44  
               ??_short_reverse 002A                 ?_color_read_Red 0005                 __initialization 569C  
                  __end_of_main 53DA                    __end_of_dtoa 31E0            __end_of_detect_color 1BD0  
                  __end_of_stop 523C          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
                        ??_main 005F                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001                 _buggylight_init 5C16  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4CD4                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5600 000A                          i2l5602 001A  
                        i2l5604 0020              turnLeft@angle_left 0024                       ??_HighISR 0001  
      __end_of_color_click_init 5A0C                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                __end_of___xxtofl 405A                   ??_Timer0_init 0001  
               ??_color_predict 0058                    vfprintf@cfmt 0056                          ___flge 4BD0  
                     ??___aodiv 0011                       ??___fladd 0009                       ??___aomod 0011  
                        ___wmul 5ABC                       ??___fldiv 0017                       ??___awdiv 000B  
                     ??___flneg 0005                       ??___flmul 0030                          _action 31E0  
                     ??___flsub 0019                       ??___fltol 0060                          _goback 2C02  
                 compare@result 0070                          _memory 0100                          clear_0 56C0  
                        clear_1 56CC                ___awdiv@quotient 000D                          _second 0160  
                        _motorL 0146                          _motorR 013C                          isa$std 000001  
                        pad@buf 0013                          _roundf 24BA                          dtoa@fp 001C  
                        _strlen 59A2                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 5BA2                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 0188                  test_function@w 018A                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 54AC                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                    ?_test_action 0032  
                     ??_sprintf 0058                __end_of_turnLeft 452A                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                      __accesstop 0060         __end_of__initialization 56D2  
                 verify_color@m 0188                   verify_color@w 018A        __end_of_color_read_Clear 569C  
                    ___flneg@f1 0001        __end_of_color_read_Green 55FC          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 5B62  
                 __end_of_LED_C 5B82                   __end_of_LED_G 5B42                   __end_of_LED_R 5B02  
              ?_color_read_Blue 0005                 _Interrupts_init 5C38                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 50C0                    __pidataBANK1 5C62         __end_of_buggylight_init 5C2C  
          turnRight@angle_right 0024           _distance_measure$3251 0074                   __end_of_fputc 4E70  
             detect_color@color 00F3                   __end_of_fputs 576E                   __end_of_putch 5C68  
                 __end_of_toint 0E05             __end_of_Timer0_init 5BFE                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A           fullSpeedAhead_test@mL 0020           fullSpeedAhead_test@mR 0022  
            ??_distance_measure 0070                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK1 0100                      __pbssBANK2 0200  
              color_predict@buf 0079       distance_measure@amb_light 006E               _color_writetoaddr 5BA2  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?___wmul 0001                         ?_action 00E0  
                       ?_goback 0058                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                         _LED_OFF 5B02                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 006E                    _detect_color 0E14   __end_of_color_data_collection 3EA6  
       __end_of_Interrupts_init 5C44          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5BC2              _I2C_2_Master_Start 5C58  
                    _initUSART4 5BC2              _I2C_2_Master_Write 5C2C             _fullSpeedAhead_test 57B0  
                     ?_pin_init 0001                         __Hparam 0000           test_function@complete 0192  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 5BE0  
       sendStringSerial4@string 0002                         ___aodiv 46B4                         ___fladd 1BD0  
                       ___aomod 483C                         ___fldiv 2868                         ___awdiv 4FFC  
                       ___flneg 596A                         ___flmul 2090                         ___flsub 56E4  
                       ___fltol 4AC8             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 007A                         __pcinit 569C                         __ramtop 0E00  
                    _read_color 54AC                       ?_turnLeft 0020                         __ptext0 535A  
                       __ptext1 52D0                         __ptext2 452A                         __ptext3 4E70  
                       __ptext4 0E14                         __ptext5 58F6                         __ptext6 3CF0  
                       __ptext7 54AC                         __ptext8 53DA                         __ptext9 3758  
                       _compare 58F6         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
          ?_fullSpeedAhead_test 0020                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
                       _lroundf 5930                   _RxBufWriteCnt 0167                         goback@i 00DE  
        distance_measure@CC_amb 0078          distance_measure@CG_amb 0072                         _sprintf 550A  
                       main@rgb 0196            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 56D2              setMotorPWM@PWMduty 0018                 _CALIBRATION_135 01D0  
               _CALIBRATION_180 01CF                         fputc@fp 0003           __end_of_test_function 46B4  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 018C  
               test_function@mR 018E                 ??_fullSpeedBack 0024                      ??_pin_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 420E           __end_of_short_reverse 5876  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 57F2                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4DA6  
                     _PORTFbits 000F8E        test_function@stop_signal 0194           ??_fullSpeedAhead_test 0024  
             __end_of_turnRight 439C                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                      _start_move 015E                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 0128                    _EUSART4TXbuf 0200               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0188  
         __end_of_color_display 544A                      main@motorL 01BA                      main@motorR 01C4  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 00F4  
                detect_color@BC 00E5                  detect_color@BG 00F6                  detect_color@GB 00EB  
                detect_color@GG 00EF                  detect_color@BR 00F8                  detect_color@GR 00ED  
                detect_color@RB 00E9                  detect_color@RG 00E7                  detect_color@RR 00F1  
         __end_of_color_predict 5A6A                  __end_of___flge 4CD4                  _fullSpeedAhead 523C  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5AE2                  __end_of_action 34AC                     ?_read_color 000C  
                __end_of_goback 2EFE                  __end_of_roundf 2868              turnRight@delay_135 0026  
            turnRight@delay_180 0028                  __end_of_strlen 59D8             color_read_Clear@tmp 000A  
           start_initialization 569C                     __end_of_abs 58F6                     __end_of_pad 4FFC  
                 _TxBufWriteCnt 0165               turnLeft@delay_135 0026               turnLeft@delay_180 0028  
                ??_toggle_light 0002                  ??_verify_color 00FE             color_read_Green@tmp 000A  
                _reverse_square 5876         __end_of_initDCmotorsPWM 5834                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 52D0                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 005E                        ??_goback 005C                 short_reverse@mL 0026  
               short_reverse@mR 0028                     __pdataBANK1 01CE                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 0188  
              ___aodiv@dividend 0001                        ?_HighISR 0001          __end_of_reverse_square 58B6  
                     _dtoa$2887 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B              test_function@color 0193  
               turnRight@i_1362 002C                 turnRight@i_1363 002E                  turnLeft@i_1337 002C  
                turnLeft@i_1338 002E            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 5A94  
             _I2C_2_Master_Init 5A6A               _I2C_2_Master_Read 576E               _I2C_2_Master_Stop 5C4E  
        toggle_light@toggletime 0001                    _RxBufReadCnt 0166                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 5A0C           _color_data_collection 3CF0  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0026                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u557_40 001A  
                      i2u557_41 0016                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0163                       _vfpfcnvrt 405A       __end_of_I2C_2_Master_Idle 5ABC  
          __end_of_toggle_light 3758       __end_of_I2C_2_Master_Init 5A94       __end_of_I2C_2_Master_Read 57B0  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5C58                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 535A          test_function@amb_light 0190  
                     main@white 019E               ??_color_read_Blue 0007                       _stop_move 015C  
                 detect_color@m 0079                   detect_color@w 007B                    _TxBufReadCnt 0164  
                     _turnRight 420E                   ??_test_action 0036                 _calibrate_white 3758  
     __end_of_sendStringSerial4 5A3C               _amb_light_measure 49A0   __end_of_I2C_2_Master_RepStart 5C4E  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 3B36                      roundf@F527 0150  
              _distance_measure 4E70                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 5180                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C     __end_of_fullSpeedAhead_test 57F2  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 005E                      sprintf@fmt 0062                        ___xxtofl 3EA6  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5BE0  
                    ?_turnRight 0020                        __ptext10 555C                        __ptext11 55AC  
                      __ptext20 56E4                        __ptext12 55FC                        __ptext21 1BD0  
                      __ptext13 5AE2                        __ptext30 2868                        __ptext22 596A  
                      __ptext14 5B02                        __ptext31 5B62                        __ptext23 2090  
                      __ptext15 5B22                        __ptext40 5C2C                        __ptext32 3B36  
                      __ptext24 4BD0                        __ptext16 5B42                        __ptext41 5C4E  
                      __ptext33 57B0                        __ptext25 4AC8                        __ptext17 49A0  
                      __ptext50 420E                        __ptext42 5C58                        __ptext34 5B82  
                      __ptext26 564C                        __ptext18 5930                        __ptext51 439C  
                      __ptext43 5A94                        __ptext35 5BC2                        __ptext27 5C44  
                      __ptext19 24BA                        __ptext60 550A                        __ptext52 5876  
                      __ptext44 5A6A                        __ptext36 4CD4                        __ptext28 576E  
                      __ptext61 544A                        __ptext53 50C0                        __ptext45 5C16  
                      __ptext37 57F2                        __ptext29 3EA6                        __ptext70 483C  
                      __ptext62 405A                        __ptext54 5180                        __ptext46 31E0  
                      __ptext38 59D8                        __ptext71 46B4                        __ptext63 2EFE  
                      __ptext55 523C                        __ptext47 34AC                        __ptext39 5BA2  
                      __ptext72 5A0C                        __ptext64 4F36                        __ptext56 3962  
                      __ptext48 5834                        __ptext73 5BFE                        __ptext65 59A2  
                      __ptext57 5ABC                        __ptext49 2C02                        __ptext74 5BE0  
                      __ptext66 572A                        __ptext58 4FFC                        __ptext75 5C38  
                      __ptext67 4DA6                        __ptext59 5A3C                        __ptext68 5C66  
                      __ptext69 58B6       __end_of_amb_light_measure 4AC8                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A                  turnRight@delay 0030  
        test_function@test_code 0195                   turnLeft@delay 0030                        action@mL 00E0  
                      action@mR 00E2                      turnLeft@mL 0020                      turnLeft@mR 0022  
           __end_of_test_action 3CF0              __end_of_read_color 550A                        _pin_init 5B82  
                    turnRight@i 002A                        isa$xinst 000000            distance_measure@stop 007C  
                    _RC4STAbits 000EE7                        int$flags 005F                     _SENSITIVITY 01CE  
                      goback@mL 0058                        goback@mR 005A                        _vfprintf 544A  
                      _turnLeft 439C                ___aomod@dividend 0001         __end_of_calibrate_white 3962  
                    _INTCONbits 000FF2                     _setMotorPWM 3962                   ?_detect_color 0079  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0001                ??_fullSpeedAhead 001E  
                 _test_function 452A                       turnLeft@i 002A                reverse_square@mL 0026  
              reverse_square@mR 0028                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 5834                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 59D8                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3250 00FA                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 007D                     ??_turnRight 0025                     _test_action 3B36  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 5BFE                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 0188                    _toggle_light 34AC  
                  ___aomod@sign 0012                    _verify_color 52D0                     _roundf$3252 004F  
                   _roundf$3253 0049                   _color_display 53DA  
