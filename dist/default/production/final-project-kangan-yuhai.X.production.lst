

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 16 19:25:59 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 05/05/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK0
   132  005D8C                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _SENSITIVITY
   136  005D8C  0159               	dw	345
   137                           
   138                           	psect	smallconst
   139  000E00                     __psmallconst:
   140                           	callstack 0
   141  000E00  00                 	db	0
   142  000E01  0000               	dw	0
   143  000E03  4B00               	dw	19200
   144  000E05                     __end_of_toint:
   145                           	callstack 0
   146  0000                     _TX4REG	set	3812
   147  0000                     _RC4STAbits	set	3815
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISEbits	set	3973
   151  0000                     _LATHbits	set	3968
   152  0000                     _SSP2CON2bits	set	3802
   153  0000                     _LATG	set	3967
   154  0000                     _LATE	set	3965
   155  0000                     _RX4PPS	set	3605
   156  0000                     _SSP2CLKPPS	set	3612
   157  0000                     _SSP2DATPPS	set	3613
   158  0000                     _ANSELDbits	set	3751
   159  0000                     _ANSELFbits	set	3764
   160  0000                     _TRISFbits	set	3974
   161  0000                     _PORTFbits	set	3982
   162  0000                     _T2PR	set	4028
   163  0000                     _T2CONbits	set	4029
   164  0000                     _TRISHbits	set	3976
   165  0000                     _TRISGbits	set	3975
   166  0000                     _PWM7DCH	set	4000
   167  0000                     _PWM6DCH	set	4003
   168  0000                     _SSP2BUF	set	3797
   169  0000                     _SSP2ADD	set	3798
   170  0000                     _SSP2CON1bits	set	3801
   171  0000                     _LATAbits	set	3961
   172  0000                     _LATFbits	set	3966
   173  0000                     _LATGbits	set	3967
   174  0000                     _TRISAbits	set	3969
   175  0000                     _TRISCbits	set	3971
   176  0000                     _TRISDbits	set	3972
   177  0000                     _LATCbits	set	3963
   178  0000                     _LATDbits	set	3964
   179  0000                     _RC4REG	set	3811
   180  0000                     _SP4BRGL	set	3813
   181  0000                     _TX4STAbits	set	3816
   182  0000                     _BAUD4CONbits	set	3817
   183  0000                     _SSP2CON2	set	3802
   184  0000                     _SSP2STAT	set	3800
   185  0000                     _PIE0bits	set	3625
   186  0000                     _PIR4bits	set	3639
   187  0000                     _RC0PPS	set	3682
   188  0000                     _RC7PPS	set	3689
   189  0000                     _RD5PPS	set	3695
   190  0000                     _RE2PPS	set	3700
   191  0000                     _RD6PPS	set	3696
   192  0000                     _TMR0L	set	4051
   193  0000                     _TMR0H	set	4052
   194  0000                     _T0CON0bits	set	4053
   195  0000                     _T2CLKCONbits	set	4031
   196  0000                     _T2HLTbits	set	4030
   197  0000                     _PWM6CONbits	set	4004
   198  0000                     _PWM7CONbits	set	4001
   199  0000                     _T0CON1bits	set	4054
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PIR0bits	set	3635
   202  000E05                     STR_1:
   203                           
   204                           ; BSR set to: 14
   205  000E05  25                 	db	37
   206  000E06  64                 	db	100	;'d'
   207  000E07  09                 	db	9
   208  000E08  25                 	db	37
   209  000E09  64                 	db	100	;'d'
   210  000E0A  09                 	db	9
   211  000E0B  25                 	db	37
   212  000E0C  64                 	db	100	;'d'
   213  000E0D  09                 	db	9
   214  000E0E  25                 	db	37
   215  000E0F  64                 	db	100	;'d'
   216  000E10  0D                 	db	13
   217  000E11  0A                 	db	10
   218  000E12  00                 	db	0
   219  000E13  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  0059A2                     __pcinit:
   225                           	callstack 0
   226  0059A2                     start_initialization:
   227                           	callstack 0
   228  0059A2                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Initialize objects allocated to BANK0 (2 bytes)
   232                           ; load TBLPTR registers with __pidataBANK0
   233  0059A2  0E8C               	movlw	low __pidataBANK0
   234  0059A4  6EF6               	movwf	tblptrl,c
   235  0059A6  0E5D               	movlw	high __pidataBANK0
   236  0059A8  6EF7               	movwf	tblptrh,c
   237  0059AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   238  0059AC  6EF8               	movwf	tblptru,c
   239  0059AE  0009               	tblrd		*+	;fetch initializer
   240  0059B0  CFF5 F0FE          	movff	tablat,__pdataBANK0
   241  0059B4  0009               	tblrd		*+	;fetch initializer
   242  0059B6  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   243                           
   244                           ; Clear objects allocated to BANK1 (102 bytes)
   245  0059BA  EE01  F000         	lfsr	0,__pbssBANK1
   246  0059BE  0E66               	movlw	102
   247  0059C0                     clear_0:
   248  0059C0  6AEE               	clrf	postinc0,c
   249  0059C2  06E8               	decf	wreg,f,c
   250  0059C4  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (4 bytes)
   253  0059C6  0100               	movlb	0
   254  0059C8  6BFD               	clrf	(__pbssBANK0+3)& (0+255),b
   255  0059CA  6BFC               	clrf	(__pbssBANK0+2)& (0+255),b
   256  0059CC  6BFB               	clrf	(__pbssBANK0+1)& (0+255),b
   257  0059CE  6BFA               	clrf	__pbssBANK0& (0+255),b
   258  0059D0                     end_of_initialization:
   259                           	callstack 0
   260  0059D0                     __end_of__initialization:
   261                           	callstack 0
   262  0059D0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  0059D2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  0059D4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   265  0059D6  6EF8               	movwf	tblptru,c
   266  0059D8  0E0E               	movlw	high __Lsmallconst
   267  0059DA  6EF7               	movwf	tblptrh,c
   268  0059DC  0100               	movlb	0
   269  0059DE  EF37  F01B         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssBANK0
   272  0000FA                     __pbssBANK0:
   273                           	callstack 0
   274  0000FA                     _prec:
   275                           	callstack 0
   276  0000FA                     	ds	2
   277  0000FC                     _flags:
   278                           	callstack 0
   279  0000FC                     	ds	2
   280                           
   281                           	psect	dataBANK0
   282  0000FE                     __pdataBANK0:
   283                           	callstack 0
   284  0000FE                     _SENSITIVITY:
   285                           	callstack 0
   286  0000FE                     	ds	2
   287                           
   288                           	psect	bssBANK1
   289  000100                     __pbssBANK1:
   290                           	callstack 0
   291  000100                     _memory:
   292                           	callstack 0
   293  000100                     	ds	40
   294  000128                     _motorR:
   295                           	callstack 0
   296  000128                     	ds	9
   297  000131                     _motorL:
   298                           	callstack 0
   299  000131                     	ds	9
   300  00013A                     roundf@F527:
   301                           	callstack 0
   302  00013A                     	ds	4
   303  00013E                     _nout:
   304                           	callstack 0
   305  00013E                     	ds	2
   306  000140                     _width:
   307                           	callstack 0
   308  000140                     	ds	2
   309  000142                     _centisecond:
   310                           	callstack 0
   311  000142                     	ds	2
   312  000144                     _color:
   313                           	callstack 0
   314  000144                     	ds	1
   315  000145                     _array_index:
   316                           	callstack 0
   317  000145                     	ds	1
   318  000146                     _dbuf:
   319                           	callstack 0
   320  000146                     	ds	32
   321                           
   322                           	psect	cstackBANK1
   323  000166                     __pcstackBANK1:
   324                           	callstack 0
   325  000166                     main@amb:
   326                           	callstack 0
   327                           
   328                           ; 8 bytes @ 0x0
   329  000166                     	ds	8
   330  00016E                     main@amb_light:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x8
   334  00016E                     	ds	2
   335  000170                     main@stop_signal:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0xA
   339  000170                     	ds	1
   340  000171                     main@start_time:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0xB
   344  000171                     	ds	2
   345  000173                     main@stop_time:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xD
   349  000173                     	ds	2
   350  000175                     main@accident:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0xF
   354  000175                     	ds	1
   355  000176                     main@rgb:
   356                           	callstack 0
   357                           
   358                           ; 8 bytes @ 0x10
   359  000176                     	ds	8
   360  00017E                     main@white:
   361                           	callstack 0
   362                           
   363                           ; 28 bytes @ 0x18
   364  00017E                     	ds	28
   365  00019A                     main@motorL:
   366                           	callstack 0
   367                           
   368                           ; 9 bytes @ 0x34
   369  00019A                     	ds	9
   370  0001A3                     main@motorR:
   371                           	callstack 0
   372                           
   373                           ; 9 bytes @ 0x3D
   374  0001A3                     	ds	9
   375                           
   376                           	psect	cstackBANK0
   377  000060                     __pcstackBANK0:
   378                           	callstack 0
   379  000060                     ??___fltol:
   380  000060                     ?_sprintf:
   381                           	callstack 0
   382  000060                     sprintf@s:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x0
   386  000060                     	ds	2
   387  000062                     sprintf@fmt:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391  000062                     	ds	2
   392  000064                     ___fltol@sign1:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x4
   396  000064                     	ds	1
   397  000065                     ___fltol@exp1:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x5
   401  000065                     	ds	1
   402  000066                     ?_lroundf:
   403                           	callstack 0
   404  000066                     lroundf@x:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x6
   408  000066                     	ds	4
   409  00006A                     ?_amb_light_measure:
   410                           	callstack 0
   411  00006A                     compare@lower:
   412                           	callstack 0
   413  00006A                     amb_light_measure@amb:
   414                           	callstack 0
   415  00006A                     detect_wall@mL:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xA
   419  00006A                     	ds	2
   420  00006C                     ??_amb_light_measure:
   421  00006C                     compare@value2compare:
   422                           	callstack 0
   423  00006C                     detect_wall@mR:
   424                           	callstack 0
   425  00006C                     sprintf@ap:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xC
   429  00006C                     	ds	2
   430  00006E                     compare@upper:
   431                           	callstack 0
   432  00006E                     amb_light_measure@upper_bound:
   433                           	callstack 0
   434  00006E                     detect_wall@amb_light:
   435                           	callstack 0
   436  00006E                     sprintf@f:
   437                           	callstack 0
   438                           
   439                           ; 11 bytes @ 0xE
   440  00006E                     	ds	2
   441  000070                     ??_detect_wall:
   442  000070                     compare@result:
   443                           	callstack 0
   444  000070                     amb_light_measure@CC_amb_ave:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x10
   448  000070                     	ds	1
   449  000071                     detect_color@m:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x11
   453  000071                     	ds	1
   454  000072                     amb_light_measure@CC_amb_1:
   455                           	callstack 0
   456  000072                     detect_wall@CG_amb:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x12
   460  000072                     	ds	1
   461  000073                     detect_color@w:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x13
   465  000073                     	ds	1
   466  000074                     amb_light_measure@CC_amb_2:
   467                           	callstack 0
   468  000074                     _detect_wall$2945:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x14
   472  000074                     	ds	1
   473  000075                     ??_detect_color:
   474                           
   475                           ; 1 bytes @ 0x15
   476  000075                     	ds	1
   477  000076                     amb_light_measure@CC_amb_3:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x16
   481  000076                     	ds	2
   482  000078                     ?_setup:
   483                           	callstack 0
   484  000078                     detect_wall@CC_amb:
   485                           	callstack 0
   486  000078                     setup@white:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  000078                     	ds	1
   491  000079                     detect_color@RG:
   492                           	callstack 0
   493  000079                     color_display@buf:
   494                           	callstack 0
   495  000079                     color_predict@buf:
   496                           	callstack 0
   497                           
   498                           ; 100 bytes @ 0x19
   499  000079                     	ds	1
   500  00007A                     detect_wall@threshold:
   501                           	callstack 0
   502  00007A                     setup@amb:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x1A
   506  00007A                     	ds	1
   507  00007B                     detect_color@BC:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x1B
   511  00007B                     	ds	1
   512  00007C                     detect_wall@stop:
   513                           	callstack 0
   514  00007C                     setup@mL:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x1C
   518  00007C                     	ds	1
   519  00007D                     detect_color@GR:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1D
   523  00007D                     	ds	1
   524  00007E                     setup@mR:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1E
   528  00007E                     	ds	1
   529  00007F                     detect_color@BB:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1F
   533  00007F                     	ds	1
   534  000080                     ??_setup:
   535                           
   536                           ; 1 bytes @ 0x20
   537  000080                     	ds	1
   538  000081                     detect_color@RB:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x21
   542  000081                     	ds	1
   543  000082                     setup@amb_light:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x22
   547  000082                     	ds	1
   548  000083                     detect_color@GB:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x23
   552  000083                     	ds	2
   553  000085                     detect_color@BR:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x25
   557  000085                     	ds	2
   558  000087                     detect_color@GG:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x27
   562  000087                     	ds	2
   563  000089                     detect_color@color:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x29
   567  000089                     	ds	1
   568  00008A                     detect_color@RR:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x2A
   572  00008A                     	ds	2
   573  00008C                     detect_color@BG:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0x2C
   577  00008C                     	ds	2
   578  00008E                     _detect_color$2944:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x2E
   582  00008E                     	ds	4
   583  000092                     verify_color@m:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x32
   587  000092                     	ds	2
   588  000094                     verify_color@w:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x34
   592  000094                     	ds	2
   593  000096                     ??_verify_color:
   594                           
   595                           ; 1 bytes @ 0x36
   596  000096                     	ds	2
   597  000098                     verify_color@color2:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x38
   601  000098                     	ds	2
   602  00009A                     verify_color@color:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x3A
   606  00009A                     	ds	67
   607  0000DD                     color_predict@color:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x7D
   611  0000DD                     	ds	1
   612  0000DE                     color_data_collection@i:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x7E
   616  0000DE                     	ds	2
   617  0000E0                     color_data_collection@j:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x80
   621  0000E0                     	ds	2
   622  0000E2                     color_data_collection@k:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x82
   626  0000E2                     	ds	2
   627  0000E4                     color_data_collection@x:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x84
   631  0000E4                     	ds	2
   632  0000E6                     test_function@m:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x86
   636  0000E6                     	ds	2
   637  0000E8                     test_function@w:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x88
   641  0000E8                     	ds	2
   642  0000EA                     test_function@mL:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x8A
   646  0000EA                     	ds	2
   647  0000EC                     test_function@mR:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x8C
   651  0000EC                     	ds	2
   652  0000EE                     ??_test_function:
   653                           
   654                           ; 1 bytes @ 0x8E
   655  0000EE                     	ds	2
   656  0000F0                     test_function@amb_light:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x90
   660  0000F0                     	ds	2
   661  0000F2                     test_function@complete:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x92
   665  0000F2                     	ds	1
   666  0000F3                     test_function@color:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x93
   670  0000F3                     	ds	1
   671  0000F4                     test_function@stop_signal:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x94
   675  0000F4                     	ds	1
   676  0000F5                     test_function@test_code:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x95
   680  0000F5                     	ds	1
   681  0000F6                     ??_main:
   682                           
   683                           ; 1 bytes @ 0x96
   684  0000F6                     	ds	4
   685                           
   686                           	psect	cstackCOMRAM
   687  000001                     __pcstackCOMRAM:
   688                           	callstack 0
   689  000001                     ??_LED_OFF:
   690  000001                     ??_LED_R:
   691  000001                     ??_LED_C:
   692  000001                     ??_LED_B:
   693  000001                     ??_LED_G:
   694  000001                     ??_I2C_2_Master_Idle:
   695  000001                     ?_strlen:
   696                           	callstack 0
   697  000001                     ?___wmul:
   698                           	callstack 0
   699  000001                     ?___fladd:
   700                           	callstack 0
   701  000001                     ?___flneg:
   702                           	callstack 0
   703  000001                     ?___xxtofl:
   704                           	callstack 0
   705  000001                     ?___aodiv:
   706                           	callstack 0
   707  000001                     ?___aomod:
   708                           	callstack 0
   709  000001                     toggle_light@toggletime:
   710                           	callstack 0
   711  000001                     sendCharSerial4@charToSend:
   712                           	callstack 0
   713  000001                     initDCmotorsPWM@PWMperiod:
   714                           	callstack 0
   715  000001                     initDCmotors_parameter@motorL:
   716                           	callstack 0
   717  000001                     ___wmul@multiplier:
   718                           	callstack 0
   719  000001                     fputc@c:
   720                           	callstack 0
   721  000001                     strlen@s:
   722                           	callstack 0
   723  000001                     ___flge@ff1:
   724                           	callstack 0
   725  000001                     ___flneg@f1:
   726                           	callstack 0
   727  000001                     ___fladd@b:
   728                           	callstack 0
   729  000001                     ___xxtofl@val:
   730                           	callstack 0
   731  000001                     ___aodiv@dividend:
   732                           	callstack 0
   733  000001                     ___aomod@dividend:
   734                           	callstack 0
   735                           
   736                           ; 8 bytes @ 0x0
   737  000001                     	ds	1
   738  000002                     ??_I2C_2_Master_Read:
   739  000002                     ??_toggle_light:
   740  000002                     I2C_2_Master_Write@data_byte:
   741                           	callstack 0
   742  000002                     sendStringSerial4@string:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x1
   746  000002                     	ds	1
   747  000003                     color_writetoaddr@value:
   748                           	callstack 0
   749  000003                     I2C_2_Master_Read@ack:
   750                           	callstack 0
   751  000003                     initDCmotors_parameter@motorR:
   752                           	callstack 0
   753  000003                     ___wmul@multiplicand:
   754                           	callstack 0
   755  000003                     fputc@fp:
   756                           	callstack 0
   757  000003                     strlen@a:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x2
   761  000003                     	ds	1
   762  000004                     toggle_light@i:
   763                           	callstack 0
   764  000004                     color_writetoaddr@address:
   765                           	callstack 0
   766  000004                     I2C_2_Master_Read@tmp:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x3
   770  000004                     	ds	1
   771  000005                     ??_fputc:
   772  000005                     ??_color_click_init:
   773  000005                     ??___xxtofl:
   774  000005                     ?_color_read_Red:
   775                           	callstack 0
   776  000005                     ?_color_read_Blue:
   777                           	callstack 0
   778  000005                     ?_color_read_Green:
   779                           	callstack 0
   780  000005                     ?_color_read_Clear:
   781                           	callstack 0
   782  000005                     toggle_light@lightnumber:
   783                           	callstack 0
   784  000005                     ___wmul@product:
   785                           	callstack 0
   786  000005                     ___flge@ff2:
   787                           	callstack 0
   788  000005                     ___fladd@a:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792  000005                     	ds	2
   793  000007                     ??_color_read_Red:
   794  000007                     ??_color_read_Blue:
   795  000007                     ??_color_read_Green:
   796  000007                     ??_color_read_Clear:
   797  000007                     ?___awdiv:
   798                           	callstack 0
   799  000007                     ___awdiv@dividend:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x6
   803  000007                     	ds	2
   804  000009                     ??___fladd:
   805  000009                     ??___flge:
   806  000009                     ___xxtofl@sign:
   807                           	callstack 0
   808  000009                     ___awdiv@divisor:
   809                           	callstack 0
   810  000009                     ___aodiv@divisor:
   811                           	callstack 0
   812  000009                     ___aomod@divisor:
   813                           	callstack 0
   814                           
   815                           ; 8 bytes @ 0x8
   816  000009                     	ds	1
   817  00000A                     ___xxtofl@exp:
   818                           	callstack 0
   819  00000A                     color_read_Red@tmp:
   820                           	callstack 0
   821  00000A                     color_read_Blue@tmp:
   822                           	callstack 0
   823  00000A                     color_read_Green@tmp:
   824                           	callstack 0
   825  00000A                     color_read_Clear@tmp:
   826                           	callstack 0
   827  00000A                     fputs@s:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x9
   831  00000A                     	ds	1
   832  00000B                     ___awdiv@counter:
   833                           	callstack 0
   834  00000B                     ___xxtofl@arg:
   835                           	callstack 0
   836                           
   837                           ; 4 bytes @ 0xA
   838  00000B                     	ds	1
   839  00000C                     ___awdiv@sign:
   840                           	callstack 0
   841  00000C                     read_color@m:
   842                           	callstack 0
   843  00000C                     calibrate_white@w:
   844                           	callstack 0
   845  00000C                     fputs@fp:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0xB
   849  00000C                     	ds	1
   850  00000D                     ___fladd@signs:
   851                           	callstack 0
   852  00000D                     ___awdiv@quotient:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0xC
   856  00000D                     	ds	1
   857  00000E                     ??_calibrate_white:
   858  00000E                     ___fladd@aexp:
   859                           	callstack 0
   860  00000E                     fputs@c:
   861                           	callstack 0
   862                           
   863                           ; 1 bytes @ 0xD
   864  00000E                     	ds	1
   865  00000F                     ?___fldiv:
   866                           	callstack 0
   867  00000F                     ___fladd@bexp:
   868                           	callstack 0
   869  00000F                     setMotorPWM@m:
   870                           	callstack 0
   871  00000F                     fputs@i:
   872                           	callstack 0
   873  00000F                     ___fldiv@b:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0xE
   877  00000F                     	ds	1
   878  000010                     ___fladd@grs:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0xF
   882  000010                     	ds	1
   883  000011                     ??_setMotorPWM:
   884  000011                     ?_pad:
   885                           	callstack 0
   886  000011                     ?___flsub:
   887                           	callstack 0
   888  000011                     ___aodiv@counter:
   889                           	callstack 0
   890  000011                     ___aomod@counter:
   891                           	callstack 0
   892  000011                     pad@fp:
   893                           	callstack 0
   894  000011                     ___flsub@b:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x10
   898  000011                     	ds	1
   899  000012                     ___aodiv@sign:
   900                           	callstack 0
   901  000012                     ___aomod@sign:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x11
   905  000012                     	ds	1
   906  000013                     ?_abs:
   907                           	callstack 0
   908  000013                     pad@buf:
   909                           	callstack 0
   910  000013                     abs@a:
   911                           	callstack 0
   912  000013                     ___fldiv@a:
   913                           	callstack 0
   914  000013                     ___aodiv@quotient:
   915                           	callstack 0
   916                           
   917                           ; 8 bytes @ 0x12
   918  000013                     	ds	2
   919  000015                     ??_abs:
   920  000015                     pad@p:
   921                           	callstack 0
   922  000015                     ___flsub@a:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0x14
   926  000015                     	ds	2
   927  000017                     ??___fldiv:
   928  000017                     ??_pad:
   929                           
   930                           ; 1 bytes @ 0x16
   931  000017                     	ds	1
   932  000018                     setMotorPWM@PWMduty:
   933                           	callstack 0
   934  000018                     pad@i:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x17
   938  000018                     	ds	1
   939  000019                     
   940                           ; 1 bytes @ 0x18
   941  000019                     	ds	1
   942  00001A                     stop@mL:
   943                           	callstack 0
   944  00001A                     fullSpeedAhead@mL:
   945                           	callstack 0
   946  00001A                     pad@w:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x19
   950  00001A                     	ds	1
   951  00001B                     ___fldiv@rem:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x1A
   955  00001B                     	ds	1
   956  00001C                     ?_dtoa:
   957                           	callstack 0
   958  00001C                     stop@mR:
   959                           	callstack 0
   960  00001C                     fullSpeedAhead@mR:
   961                           	callstack 0
   962  00001C                     dtoa@fp:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x1B
   966  00001C                     	ds	2
   967  00001E                     ??_stop:
   968  00001E                     ??_fullSpeedAhead:
   969  00001E                     dtoa@d:
   970                           	callstack 0
   971                           
   972                           ; 8 bytes @ 0x1D
   973  00001E                     	ds	1
   974  00001F                     ___fldiv@sign:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0x1E
   978  00001F                     	ds	1
   979  000020                     turn45@mL:
   980                           	callstack 0
   981  000020                     fullSpeedBack@mL:
   982                           	callstack 0
   983  000020                     short_burst@mL:
   984                           	callstack 0
   985  000020                     ___fldiv@new_exp:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x1F
   989  000020                     	ds	2
   990  000022                     turn45@mR:
   991                           	callstack 0
   992  000022                     fullSpeedBack@mR:
   993                           	callstack 0
   994  000022                     short_burst@mR:
   995                           	callstack 0
   996  000022                     ___fldiv@grs:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x21
  1000  000022                     	ds	2
  1001  000024                     ??_short_burst:
  1002  000024                     turn45@turn_time:
  1003                           	callstack 0
  1004  000024                     fullSpeedBack@instruction:
  1005                           	callstack 0
  1006                           
  1007                           ; 1 bytes @ 0x23
  1008  000024                     	ds	1
  1009  000025                     ??_fullSpeedBack:
  1010  000025                     turn45@direction:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x24
  1014  000025                     	ds	1
  1015  000026                     ??_turn45:
  1016  000026                     ??_dtoa:
  1017  000026                     ___fldiv@bexp:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x25
  1021  000026                     	ds	1
  1022  000027                     ___fldiv@aexp:
  1023                           	callstack 0
  1024  000027                     turn45@i_1331:
  1025                           	callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x26
  1028  000027                     	ds	1
  1029  000028                     ?___flmul:
  1030                           	callstack 0
  1031  000028                     ___flmul@b:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x27
  1035  000028                     	ds	1
  1036  000029                     turn45@i_1333:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x28
  1040  000029                     	ds	2
  1041  00002B                     turn45@i:
  1042                           	callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x2A
  1045  00002B                     	ds	1
  1046  00002C                     goback@mL:
  1047                           	callstack 0
  1048  00002C                     test_action@mL:
  1049                           	callstack 0
  1050  00002C                     ___flmul@a:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x2B
  1054  00002C                     	ds	2
  1055  00002E                     goback@mR:
  1056                           	callstack 0
  1057  00002E                     test_action@mR:
  1058                           	callstack 0
  1059  00002E                     _dtoa$2616:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x2D
  1063  00002E                     	ds	2
  1064  000030                     ??_goback:
  1065  000030                     ??___flmul:
  1066  000030                     ??_test_action:
  1067  000030                     dtoa@p:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x2F
  1071  000030                     	ds	2
  1072  000032                     goback@i:
  1073                           	callstack 0
  1074  000032                     calibration_motor@mL:
  1075                           	callstack 0
  1076  000032                     dtoa@w:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x31
  1080  000032                     	ds	2
  1081  000034                     ___flmul@sign:
  1082                           	callstack 0
  1083  000034                     turning_action@mL:
  1084                           	callstack 0
  1085  000034                     calibration_motor@mR:
  1086                           	callstack 0
  1087  000034                     dtoa@s:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x33
  1091  000034                     	ds	1
  1092  000035                     ___flmul@grs:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x34
  1096  000035                     	ds	1
  1097  000036                     ??_calibration_motor:
  1098  000036                     turning_action@mR:
  1099                           	callstack 0
  1100  000036                     dtoa@n:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x35
  1104  000036                     	ds	2
  1105  000038                     turning_action@color:
  1106                           	callstack 0
  1107                           
  1108                           ; 1 bytes @ 0x37
  1109  000038                     	ds	1
  1110  000039                     ___flmul@aexp:
  1111                           	callstack 0
  1112                           
  1113                           ; 1 bytes @ 0x38
  1114  000039                     	ds	1
  1115  00003A                     ___flmul@bexp:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x39
  1119  00003A                     	ds	1
  1120  00003B                     ___flmul@prod:
  1121                           	callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x3A
  1124  00003B                     	ds	3
  1125  00003E                     dtoa@i:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x3D
  1129  00003E                     	ds	1
  1130  00003F                     ___flmul@temp:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x3E
  1134  00003F                     	ds	1
  1135  000040                     ?_vfpfcnvrt:
  1136                           	callstack 0
  1137  000040                     vfpfcnvrt@fp:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x3F
  1141  000040                     	ds	1
  1142  000041                     ?_roundf:
  1143                           	callstack 0
  1144  000041                     roundf@x:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x40
  1148  000041                     	ds	1
  1149  000042                     vfpfcnvrt@fmt:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x41
  1153  000042                     	ds	2
  1154  000044                     vfpfcnvrt@ap:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x43
  1158  000044                     	ds	1
  1159  000045                     ??_roundf:
  1160                           
  1161                           ; 1 bytes @ 0x44
  1162  000045                     	ds	1
  1163  000046                     ??_vfpfcnvrt:
  1164                           
  1165                           ; 1 bytes @ 0x45
  1166  000046                     	ds	2
  1167  000048                     vfpfcnvrt@ll:
  1168                           	callstack 0
  1169                           
  1170                           ; 8 bytes @ 0x47
  1171  000048                     	ds	1
  1172  000049                     _roundf$2947:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x48
  1176  000049                     	ds	4
  1177  00004D                     roundf@e:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x4C
  1181  00004D                     	ds	2
  1182  00004F                     _roundf$2946:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x4E
  1186  00004F                     	ds	1
  1187  000050                     ?_vfprintf:
  1188                           	callstack 0
  1189  000050                     vfprintf@fp:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x4F
  1193  000050                     	ds	2
  1194  000052                     vfprintf@fmt:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x51
  1198  000052                     	ds	1
  1199  000053                     roundf@u:
  1200                           	callstack 0
  1201                           
  1202                           ; 4 bytes @ 0x52
  1203  000053                     	ds	1
  1204  000054                     vfprintf@ap:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x53
  1208  000054                     	ds	2
  1209  000056                     vfprintf@cfmt:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x55
  1213  000056                     	ds	1
  1214  000057                     roundf@y:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x56
  1218  000057                     	ds	1
  1219  000058                     color_display@m:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x57
  1223  000058                     	ds	2
  1224  00005A                     color_data_collection@m:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x59
  1228  00005A                     	ds	1
  1229  00005B                     ?___fltol:
  1230                           	callstack 0
  1231  00005B                     ___fltol@f1:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x5A
  1235  00005B                     	ds	1
  1236  00005C                     ??_color_data_collection:
  1237                           
  1238                           ; 1 bytes @ 0x5B
  1239  00005C                     	ds	3
  1240  00005F                     
  1241                           ; 1 bytes @ 0x5E
  1242 ;;
  1243 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1244 ;;
  1245 ;; *************** function _main *****************
  1246 ;; Defined at:
  1247 ;;		line 27 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  white          28   24[BANK1 ] struct white_card
  1252 ;;  motorR          9   61[BANK1 ] struct DC_motor
  1253 ;;  motorL          9   52[BANK1 ] struct DC_motor
  1254 ;;  rgb             8   16[BANK1 ] struct color_rgb
  1255 ;;  amb             8    0[BANK1 ] struct color_rgb
  1256 ;;  stop_time       2   13[BANK1 ] unsigned int 
  1257 ;;  start_time      2   11[BANK1 ] unsigned int 
  1258 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1259 ;;  accident        1   15[BANK1 ] unsigned char 
  1260 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1272 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1273 ;;      Totals:         0       4      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;Total ram usage:       74 bytes
  1275 ;; Hardware stack levels required when called: 12
  1276 ;; This function calls:
  1277 ;;		_Interrupts_init
  1278 ;;		_Timer0_init
  1279 ;;		_color_click_init
  1280 ;;		_color_predict
  1281 ;;		_detect_color
  1282 ;;		_detect_wall
  1283 ;;		_fullSpeedAhead
  1284 ;;		_goback
  1285 ;;		_initDCmotorsPWM
  1286 ;;		_initDCmotors_parameter
  1287 ;;		_initUSART4
  1288 ;;		_pin_init
  1289 ;;		_setup
  1290 ;;		_short_burst
  1291 ;;		_stop
  1292 ;;		_test_function
  1293 ;;		_turning_action
  1294 ;;		_verify_color
  1295 ;; This function is called by:
  1296 ;;		Startup code after reset
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text0
  1301  00366E                     __ptext0:
  1302                           	callstack 0
  1303  00366E                     _main:
  1304                           	callstack 19
  1305  00366E                     
  1306                           ;main.c: 29:     struct color_rgb rgb, amb;;main.c: 30:     struct white_card white;;mai
      +                          n.c: 31:     struct DC_motor motorL, motorR;;main.c: 35:     color_click_init();
  1307  00366E  EC9C  F02D         	call	_color_click_init	;wreg free
  1308  003672                     
  1309                           ;main.c: 36:     pin_init();
  1310  003672  EC82  F02D         	call	_pin_init	;wreg free
  1311  003676                     
  1312                           ;main.c: 37:     initDCmotorsPWM(199);
  1313  003676  0E00               	movlw	0
  1314  003678  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1315  00367A  0EC7               	movlw	199
  1316  00367C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1317  00367E  ECB0  F02C         	call	_initDCmotorsPWM	;wreg free
  1318  003682                     
  1319                           ;main.c: 38:     initDCmotors_parameter(&motorL, &motorR);
  1320  003682  0E9A               	movlw	low main@motorL
  1321  003684  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1322  003686  0E01               	movlw	high main@motorL
  1323  003688  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1324  00368A  0EA3               	movlw	low main@motorR
  1325  00368C  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1326  00368E  0E01               	movlw	high main@motorR
  1327  003690  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1328  003692  ECD3  F027         	call	_initDCmotors_parameter	;wreg free
  1329  003696                     
  1330                           ;main.c: 39:     initUSART4();
  1331  003696  EC81  F02E         	call	_initUSART4	;wreg free
  1332  00369A                     
  1333                           ;main.c: 40:     Timer0_init();
  1334  00369A  EC90  F02E         	call	_Timer0_init	;wreg free
  1335  00369E                     
  1336                           ;main.c: 41:     Interrupts_init();
  1337  00369E  ECB1  F02E         	call	_Interrupts_init	;wreg free
  1338  0036A2                     
  1339                           ;main.c: 43:     unsigned char stop_signal = 0;
  1340  0036A2  0E00               	movlw	0
  1341  0036A4  0101               	movlb	1	; () banked
  1342  0036A6  6F70               	movwf	main@stop_signal& (0+255),b
  1343  0036A8                     
  1344                           ; BSR set to: 1
  1345                           ;main.c: 45:     unsigned char accident = 0;
  1346  0036A8  0E00               	movlw	0
  1347  0036AA  6F75               	movwf	main@accident& (0+255),b
  1348  0036AC                     
  1349                           ; BSR set to: 1
  1350                           ;main.c: 50:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1351  0036AC  0E7E               	movlw	low main@white
  1352  0036AE  0100               	movlb	0	; () banked
  1353  0036B0  6F78               	movwf	setup@white& (0+255),b
  1354  0036B2  0E01               	movlw	high main@white
  1355  0036B4  6F79               	movwf	(setup@white+1)& (0+255),b
  1356  0036B6  0E66               	movlw	low main@amb
  1357  0036B8  6F7A               	movwf	setup@amb& (0+255),b
  1358  0036BA  0E01               	movlw	high main@amb
  1359  0036BC  6F7B               	movwf	(setup@amb+1)& (0+255),b
  1360  0036BE  0E9A               	movlw	low main@motorL
  1361  0036C0  6F7C               	movwf	setup@mL& (0+255),b
  1362  0036C2  0E01               	movlw	high main@motorL
  1363  0036C4  6F7D               	movwf	(setup@mL+1)& (0+255),b
  1364  0036C6  0EA3               	movlw	low main@motorR
  1365  0036C8  6F7E               	movwf	setup@mR& (0+255),b
  1366  0036CA  0E01               	movlw	high main@motorR
  1367  0036CC  6F7F               	movwf	(setup@mR+1)& (0+255),b
  1368  0036CE  ECD6  F023         	call	_setup	;wreg free
  1369  0036D2  C078  F16E         	movff	?_setup,main@amb_light
  1370  0036D6  C079  F16F         	movff	?_setup+1,main@amb_light+1
  1371  0036DA                     l5368:
  1372                           
  1373                           ;main.c: 56:             T0CON0bits.T0EN=1;
  1374  0036DA  8ED5               	bsf	213,7,c	;volatile
  1375  0036DC                     
  1376                           ;main.c: 57:             start_time = centisecond;
  1377  0036DC  C142  F171         	movff	_centisecond,main@start_time
  1378  0036E0  C143  F172         	movff	_centisecond+1,main@start_time+1
  1379                           
  1380                           ;main.c: 58:             while (stop_signal == 0){
  1381  0036E4  EF8F  F01B         	goto	l5376
  1382  0036E8                     l5372:
  1383                           
  1384                           ; BSR set to: 1
  1385                           ;main.c: 59:                 fullSpeedAhead(&motorL, &motorR);
  1386  0036E8  0E9A               	movlw	low main@motorL
  1387  0036EA  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1388  0036EC  0E01               	movlw	high main@motorL
  1389  0036EE  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1390  0036F0  0EA3               	movlw	low main@motorR
  1391  0036F2  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1392  0036F4  0E01               	movlw	high main@motorR
  1393  0036F6  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1394  0036F8  EC67  F029         	call	_fullSpeedAhead	;wreg free
  1395  0036FC                     
  1396                           ;main.c: 60:                 stop_signal = detect_wall(&motorL, &motorR, amb_light);
  1397  0036FC  0E9A               	movlw	low main@motorL
  1398  0036FE  0100               	movlb	0	; () banked
  1399  003700  6F6A               	movwf	detect_wall@mL& (0+255),b
  1400  003702  0E01               	movlw	high main@motorL
  1401  003704  6F6B               	movwf	(detect_wall@mL+1)& (0+255),b
  1402  003706  0EA3               	movlw	low main@motorR
  1403  003708  6F6C               	movwf	detect_wall@mR& (0+255),b
  1404  00370A  0E01               	movlw	high main@motorR
  1405  00370C  6F6D               	movwf	(detect_wall@mR+1)& (0+255),b
  1406  00370E  C16E  F06E         	movff	main@amb_light,detect_wall@amb_light
  1407  003712  C16F  F06F         	movff	main@amb_light+1,detect_wall@amb_light+1
  1408  003716  ECA1  F028         	call	_detect_wall	;wreg free
  1409  00371A  0101               	movlb	1	; () banked
  1410  00371C  6F70               	movwf	main@stop_signal& (0+255),b
  1411  00371E                     l5376:
  1412                           
  1413                           ;main.c: 58:             while (stop_signal == 0){
  1414  00371E  0101               	movlb	1	; () banked
  1415  003720  5170               	movf	main@stop_signal& (0+255),w,b
  1416  003722  B4D8               	btfsc	status,2,c
  1417  003724  EF96  F01B         	goto	u5851
  1418  003728  EF98  F01B         	goto	u5850
  1419  00372C                     u5851:
  1420  00372C  EF74  F01B         	goto	l5372
  1421  003730                     u5850:
  1422  003730                     
  1423                           ; BSR set to: 1
  1424                           ;main.c: 62:             T0CON0bits.T0EN=0;
  1425  003730  9ED5               	bcf	213,7,c	;volatile
  1426                           
  1427                           ;main.c: 63:             stop_time = centisecond;
  1428  003732  C142  F173         	movff	_centisecond,main@stop_time
  1429  003736  C143  F174         	movff	_centisecond+1,main@stop_time+1
  1430  00373A                     
  1431                           ; BSR set to: 1
  1432                           ;main.c: 64:             if ((stop_time-start_time)>10){
  1433  00373A  5171               	movf	main@start_time& (0+255),w,b
  1434  00373C  5D73               	subwf	main@stop_time& (0+255),w,b
  1435  00373E  0100               	movlb	0	; () banked
  1436  003740  6FF6               	movwf	??_main& (0+255),b
  1437  003742  0101               	movlb	1	; () banked
  1438  003744  5172               	movf	(main@start_time+1)& (0+255),w,b
  1439  003746  5974               	subwfb	(main@stop_time+1)& (0+255),w,b
  1440  003748  0100               	movlb	0	; () banked
  1441  00374A  6FF7               	movwf	(??_main+1)& (0+255),b
  1442  00374C  51F7               	movf	(??_main+1)& (0+255),w,b
  1443  00374E  E109               	bnz	u5860
  1444  003750  0E0B               	movlw	11
  1445  003752  5DF6               	subwf	??_main& (0+255),w,b
  1446  003754  A0D8               	btfss	status,0,c
  1447  003756  EFAF  F01B         	goto	u5861
  1448  00375A  EFB1  F01B         	goto	u5860
  1449  00375E                     u5861:
  1450  00375E  EFD3  F01B         	goto	l5384
  1451  003762                     u5860:
  1452  003762                     
  1453                           ; BSR set to: 0
  1454                           ;main.c: 65:                 memory[array_index] = (stop_time-start_time-3);
  1455  003762  0EFD               	movlw	253
  1456  003764  6FF6               	movwf	??_main& (0+255),b
  1457  003766  0EFF               	movlw	255
  1458  003768  6FF7               	movwf	(??_main+1)& (0+255),b
  1459  00376A  0101               	movlb	1	; () banked
  1460  00376C  5171               	movf	main@start_time& (0+255),w,b
  1461  00376E  5D73               	subwf	main@stop_time& (0+255),w,b
  1462  003770  0100               	movlb	0	; () banked
  1463  003772  6FF8               	movwf	(??_main+2)& (0+255),b
  1464  003774  0101               	movlb	1	; () banked
  1465  003776  5172               	movf	(main@start_time+1)& (0+255),w,b
  1466  003778  5974               	subwfb	(main@stop_time+1)& (0+255),w,b
  1467  00377A  0100               	movlb	0	; () banked
  1468  00377C  6FF9               	movwf	(??_main+3)& (0+255),b
  1469  00377E  51F6               	movf	??_main& (0+255),w,b
  1470  003780  27F8               	addwf	(??_main+2)& (0+255),f,b
  1471  003782  51F7               	movf	(??_main+1)& (0+255),w,b
  1472  003784  23F9               	addwfc	(??_main+3)& (0+255),f,b
  1473  003786  0101               	movlb	1	; () banked
  1474  003788  5145               	movf	_array_index& (0+255),w,b
  1475  00378A  0D02               	mullw	2
  1476  00378C  0E00               	movlw	low _memory
  1477  00378E  24F3               	addwf	243,w,c
  1478  003790  6ED9               	movwf	fsr2l,c
  1479  003792  0E01               	movlw	high _memory
  1480  003794  20F4               	addwfc	prodh,w,c
  1481  003796  6EDA               	movwf	fsr2h,c
  1482  003798  C0F8  FFDE         	movff	??_main+2,postinc2
  1483  00379C  C0F9  FFDD         	movff	??_main+3,postdec2
  1484  0037A0                     
  1485                           ; BSR set to: 1
  1486                           ;main.c: 66:                 array_index++;
  1487  0037A0  2B45               	incf	_array_index& (0+255),f,b
  1488                           
  1489                           ;main.c: 67:             }
  1490  0037A2  EFEE  F01B         	goto	l5394
  1491  0037A6                     l5384:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;main.c: 69:                 accident++;
  1495  0037A6  0101               	movlb	1	; () banked
  1496  0037A8  2B75               	incf	main@accident& (0+255),f,b
  1497  0037AA                     
  1498                           ; BSR set to: 1
  1499                           ;main.c: 70:                 color_predict(accident);
  1500  0037AA  5175               	movf	main@accident& (0+255),w,b
  1501  0037AC  ECCE  F02D         	call	_color_predict
  1502  0037B0                     
  1503                           ;main.c: 71:                 if (accident >= 5){
  1504  0037B0  0E04               	movlw	4
  1505  0037B2  0101               	movlb	1	; () banked
  1506  0037B4  6575               	cpfsgt	main@accident& (0+255),b
  1507  0037B6  EFDF  F01B         	goto	u5871
  1508  0037BA  EFE1  F01B         	goto	u5870
  1509  0037BE                     u5871:
  1510  0037BE  EFEE  F01B         	goto	l5394
  1511  0037C2                     u5870:
  1512  0037C2                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 72:                     goback(&motorL, &motorR);
  1515  0037C2  0E9A               	movlw	low main@motorL
  1516  0037C4  6E2C               	movwf	goback@mL^0,c
  1517  0037C6  0E01               	movlw	high main@motorL
  1518  0037C8  6E2D               	movwf	(goback@mL+1)^0,c
  1519  0037CA  0EA3               	movlw	low main@motorR
  1520  0037CC  6E2E               	movwf	goback@mR^0,c
  1521  0037CE  0E01               	movlw	high main@motorR
  1522  0037D0  6E2F               	movwf	(goback@mR+1)^0,c
  1523  0037D2  EC58  F013         	call	_goback	;wreg free
  1524  0037D6                     
  1525                           ;main.c: 73:                     accident = 0;
  1526  0037D6  0E00               	movlw	0
  1527  0037D8  0101               	movlb	1	; () banked
  1528  0037DA  6F75               	movwf	main@accident& (0+255),b
  1529  0037DC                     l5394:
  1530                           
  1531                           ; BSR set to: 1
  1532                           ;main.c: 76:             stop(&motorL, &motorR);
  1533  0037DC  0E9A               	movlw	low main@motorL
  1534  0037DE  6E1A               	movwf	stop@mL^0,c
  1535  0037E0  0E01               	movlw	high main@motorL
  1536  0037E2  6E1B               	movwf	(stop@mL+1)^0,c
  1537  0037E4  0EA3               	movlw	low main@motorR
  1538  0037E6  6E1C               	movwf	stop@mR^0,c
  1539  0037E8  0E01               	movlw	high main@motorR
  1540  0037EA  6E1D               	movwf	(stop@mR+1)^0,c
  1541  0037EC  EC2B  F02A         	call	_stop	;wreg free
  1542  0037F0                     
  1543                           ;main.c: 77:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1544  0037F0  0E52               	movlw	82
  1545  0037F2  0100               	movlb	0	; () banked
  1546  0037F4  6FF7               	movwf	(??_main+1)& (0+255),b
  1547  0037F6  0E2B               	movlw	43
  1548  0037F8  6FF6               	movwf	??_main& (0+255),b
  1549  0037FA  0E00               	movlw	0
  1550  0037FC                     u5907:
  1551  0037FC  2EE8               	decfsz	wreg,f,c
  1552  0037FE  D7FE               	bra	u5907
  1553  003800  2FF6               	decfsz	??_main& (0+255),f,b
  1554  003802  D7FC               	bra	u5907
  1555  003804  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1556  003806  D7FA               	bra	u5907
  1557  003808  F000               	nop	
  1558  00380A                     
  1559                           ;main.c: 78:             short_burst(&motorL, &motorR);
  1560  00380A  0E9A               	movlw	low main@motorL
  1561  00380C  6E20               	movwf	short_burst@mL^0,c
  1562  00380E  0E01               	movlw	high main@motorL
  1563  003810  6E21               	movwf	(short_burst@mL+1)^0,c
  1564  003812  0EA3               	movlw	low main@motorR
  1565  003814  6E22               	movwf	short_burst@mR^0,c
  1566  003816  0E01               	movlw	high main@motorR
  1567  003818  6E23               	movwf	(short_burst@mR+1)^0,c
  1568  00381A  EC6E  F02C         	call	_short_burst	;wreg free
  1569  00381E                     
  1570                           ;main.c: 79:             color = detect_color(&rgb, &white);
  1571  00381E  0E76               	movlw	low main@rgb
  1572  003820  0100               	movlb	0	; () banked
  1573  003822  6F71               	movwf	detect_color@m& (0+255),b
  1574  003824  0E01               	movlw	high main@rgb
  1575  003826  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1576  003828  0E7E               	movlw	low main@white
  1577  00382A  6F73               	movwf	detect_color@w& (0+255),b
  1578  00382C  0E01               	movlw	high main@white
  1579  00382E  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1580  003830  EC0A  F007         	call	_detect_color	;wreg free
  1581  003834  0101               	movlb	1	; () banked
  1582  003836  6F44               	movwf	_color& (0+255),b
  1583  003838                     
  1584                           ; BSR set to: 1
  1585                           ;main.c: 80:             color = verify_color(color, &rgb, &white);
  1586  003838  0E76               	movlw	low main@rgb
  1587  00383A  0100               	movlb	0	; () banked
  1588  00383C  6F92               	movwf	verify_color@m& (0+255),b
  1589  00383E  0E01               	movlw	high main@rgb
  1590  003840  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1591  003842  0E7E               	movlw	low main@white
  1592  003844  6F94               	movwf	verify_color@w& (0+255),b
  1593  003846  0E01               	movlw	high main@white
  1594  003848  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1595  00384A  0101               	movlb	1	; () banked
  1596  00384C  5144               	movf	_color& (0+255),w,b
  1597  00384E  EC8A  F02A         	call	_verify_color
  1598  003852  0101               	movlb	1	; () banked
  1599  003854  6F44               	movwf	_color& (0+255),b
  1600  003856                     
  1601                           ; BSR set to: 1
  1602                           ;main.c: 81:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1603  003856  5144               	movf	_color& (0+255),w,b
  1604  003858  B4D8               	btfsc	status,2,c
  1605  00385A  EF31  F01C         	goto	u5881
  1606  00385E  EF33  F01C         	goto	u5880
  1607  003862                     u5881:
  1608  003862  EF41  F01C         	goto	l5410
  1609  003866                     u5880:
  1610  003866                     
  1611                           ; BSR set to: 1
  1612  003866  0E9A               	movlw	low main@motorL
  1613  003868  6E34               	movwf	turning_action@mL^0,c
  1614  00386A  0E01               	movlw	high main@motorL
  1615  00386C  6E35               	movwf	(turning_action@mL+1)^0,c
  1616  00386E  0EA3               	movlw	low main@motorR
  1617  003870  6E36               	movwf	turning_action@mR^0,c
  1618  003872  0E01               	movlw	high main@motorR
  1619  003874  6E37               	movwf	(turning_action@mR+1)^0,c
  1620  003876  5144               	movf	_color& (0+255),w,b
  1621  003878  ECF7  F016         	call	_turning_action
  1622  00387C  0E00               	movlw	0
  1623  00387E  0101               	movlb	1	; () banked
  1624  003880  6F44               	movwf	_color& (0+255),b
  1625  003882                     l5410:
  1626                           
  1627                           ; BSR set to: 1
  1628                           ;main.c: 82:             stop_signal = 0;
  1629  003882  0E00               	movlw	0
  1630  003884  6F70               	movwf	main@stop_signal& (0+255),b
  1631  003886  EF6D  F01B         	goto	l5368
  1632  00388A  EF18  F000         	goto	start
  1633  00388E                     __end_of_main:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _verify_color *****************
  1637 ;; Defined at:
  1638 ;;		line 345 in file "color.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  color           1    wreg     unsigned char 
  1641 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1642 ;;		 -> main@rgb(8), 
  1643 ;;  w               2   52[BANK0 ] PTR struct white_card
  1644 ;;		 -> main@white(28), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  color           1   58[BANK0 ] unsigned char 
  1647 ;;  color2          2   56[BANK0 ] unsigned int 
  1648 ;;  color3          2    0        unsigned int 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      unsigned char 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1658 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;Total ram usage:        9 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 6
  1665 ;; This function calls:
  1666 ;;		_detect_color
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text1
  1673  005514                     __ptext1:
  1674                           	callstack 0
  1675  005514                     _verify_color:
  1676                           	callstack 24
  1677                           
  1678                           ; BSR set to: 1
  1679                           ;incstack = 0
  1680                           ;verify_color@color stored from wreg
  1681  005514  0100               	movlb	0	; () banked
  1682  005516  6F9A               	movwf	verify_color@color& (0+255),b
  1683  005518                     
  1684                           ;color.c: 345: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 346: {;color.c: 347:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1685  005518  0E05               	movlw	5
  1686  00551A  0100               	movlb	0	; () banked
  1687  00551C  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1688  00551E  0E0F               	movlw	15
  1689  005520  6F96               	movwf	??_verify_color& (0+255),b
  1690  005522  0EF1               	movlw	241
  1691  005524                     u5917:
  1692  005524  2EE8               	decfsz	wreg,f,c
  1693  005526  D7FE               	bra	u5917
  1694  005528  2F96               	decfsz	??_verify_color& (0+255),f,b
  1695  00552A  D7FC               	bra	u5917
  1696  00552C  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1697  00552E  D7FA               	bra	u5917
  1698  005530                     
  1699                           ;color.c: 348:     unsigned int color2, color3;;color.c: 349:     color2 = detect_color(
      +                          m,w);
  1700  005530  C092  F071         	movff	verify_color@m,detect_color@m
  1701  005534  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1702  005538  C094  F073         	movff	verify_color@w,detect_color@w
  1703  00553C  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1704  005540  EC0A  F007         	call	_detect_color	;wreg free
  1705  005544  0100               	movlb	0	; () banked
  1706  005546  6F96               	movwf	??_verify_color& (0+255),b
  1707  005548  5196               	movf	??_verify_color& (0+255),w,b
  1708  00554A  6F98               	movwf	verify_color@color2& (0+255),b
  1709  00554C  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1710  00554E                     
  1711                           ; BSR set to: 0
  1712                           ;color.c: 350:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1713  00554E  0E05               	movlw	5
  1714  005550  0100               	movlb	0	; () banked
  1715  005552  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1716  005554  0E0F               	movlw	15
  1717  005556  6F96               	movwf	??_verify_color& (0+255),b
  1718  005558  0EF1               	movlw	241
  1719  00555A                     u5927:
  1720  00555A  2EE8               	decfsz	wreg,f,c
  1721  00555C  D7FE               	bra	u5927
  1722  00555E  2F96               	decfsz	??_verify_color& (0+255),f,b
  1723  005560  D7FC               	bra	u5927
  1724  005562  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1725  005564  D7FA               	bra	u5927
  1726  005566                     
  1727                           ;color.c: 352:     if (color == color2){return color;}
  1728  005566  0100               	movlb	0	; () banked
  1729  005568  519A               	movf	verify_color@color& (0+255),w,b
  1730  00556A  6F96               	movwf	??_verify_color& (0+255),b
  1731  00556C  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1732  00556E  5198               	movf	verify_color@color2& (0+255),w,b
  1733  005570  1996               	xorwf	??_verify_color& (0+255),w,b
  1734  005572  E107               	bnz	u5561
  1735  005574  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1736  005576  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1737  005578  A4D8               	btfss	status,2,c
  1738  00557A  EFC1  F02A         	goto	u5561
  1739  00557E  EFC3  F02A         	goto	u5560
  1740  005582                     u5561:
  1741  005582  EFC6  F02A         	goto	l5126
  1742  005586                     u5560:
  1743  005586                     
  1744                           ; BSR set to: 0
  1745  005586  519A               	movf	verify_color@color& (0+255),w,b
  1746  005588  EFC7  F02A         	goto	l141
  1747  00558C                     l5126:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;color.c: 355:         return color;}
  1751  00558C  0E00               	movlw	0
  1752  00558E                     l141:
  1753                           
  1754                           ; BSR set to: 0
  1755  00558E  0012               	return		;funcret
  1756  005590                     __end_of_verify_color:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _turning_action *****************
  1760 ;; Defined at:
  1761 ;;		line 14 in file "movement.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  color           1    wreg     unsigned char 
  1764 ;;  mL              2   51[COMRAM] PTR struct DC_motor
  1765 ;;		 -> main@motorL(9), 
  1766 ;;  mR              2   53[COMRAM] PTR struct DC_motor
  1767 ;;		 -> main@motorR(9), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  color           1   55[COMRAM] unsigned char 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;Total ram usage:        5 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 6
  1786 ;; This function calls:
  1787 ;;		_fullSpeedBack
  1788 ;;		_goback
  1789 ;;		_toggle_light
  1790 ;;		_turn45
  1791 ;; This function is called by:
  1792 ;;		_main
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text2
  1797  002DEE                     __ptext2:
  1798                           	callstack 0
  1799  002DEE                     _turning_action:
  1800                           	callstack 24
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;incstack = 0
  1804                           ;turning_action@color stored from wreg
  1805  002DEE  6E38               	movwf	turning_action@color^0,c
  1806  002DF0                     
  1807                           ;movement.c: 14: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 15: { if (color != 0){
  1808  002DF0  5038               	movf	turning_action@color^0,w,c
  1809  002DF2  B4D8               	btfsc	status,2,c
  1810  002DF4  EFFE  F016         	goto	u5761
  1811  002DF8  EF00  F017         	goto	u5760
  1812  002DFC                     u5761:
  1813  002DFC  EF6E  F018         	goto	l452
  1814  002E00                     u5760:
  1815  002E00                     
  1816                           ;movement.c: 16:         if (color == 1){
  1817  002E00  0438               	decf	turning_action@color^0,w,c
  1818  002E02  A4D8               	btfss	status,2,c
  1819  002E04  EF06  F017         	goto	u5771
  1820  002E08  EF08  F017         	goto	u5770
  1821  002E0C                     u5771:
  1822  002E0C  EF30  F017         	goto	l5286
  1823  002E10                     u5770:
  1824  002E10                     
  1825                           ;movement.c: 17:             fullSpeedBack(mL,mR,1);
  1826  002E10  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1827  002E14  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1828  002E18  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1829  002E1C  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1830  002E20  0E01               	movlw	1
  1831  002E22  6E24               	movwf	fullSpeedBack@instruction^0,c
  1832  002E24  EC82  F024         	call	_fullSpeedBack	;wreg free
  1833                           
  1834                           ;movement.c: 18:             turn45(mL,mR,2,2);
  1835  002E28  C034  F020         	movff	turning_action@mL,turn45@mL
  1836  002E2C  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1837  002E30  C036  F022         	movff	turning_action@mR,turn45@mR
  1838  002E34  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1839  002E38  0E02               	movlw	2
  1840  002E3A  6E24               	movwf	turn45@turn_time^0,c
  1841  002E3C  0E02               	movlw	2
  1842  002E3E  6E25               	movwf	turn45@direction^0,c
  1843  002E40  ECC3  F020         	call	_turn45	;wreg free
  1844  002E44                     
  1845                           ;movement.c: 19:             memory[array_index] = 1;
  1846  002E44  0101               	movlb	1	; () banked
  1847  002E46  5145               	movf	_array_index& (0+255),w,b
  1848  002E48  0D02               	mullw	2
  1849  002E4A  0E00               	movlw	low _memory
  1850  002E4C  24F3               	addwf	243,w,c
  1851  002E4E  6ED9               	movwf	fsr2l,c
  1852  002E50  0E01               	movlw	high _memory
  1853  002E52  20F4               	addwfc	prodh,w,c
  1854  002E54  6EDA               	movwf	fsr2h,c
  1855  002E56  0E01               	movlw	1
  1856  002E58  6EDE               	movwf	postinc2,c
  1857  002E5A  0E00               	movlw	0
  1858  002E5C  6EDD               	movwf	postdec2,c
  1859  002E5E                     
  1860                           ; BSR set to: 1
  1861                           ;movement.c: 20:             array_index++;
  1862  002E5E  2B45               	incf	_array_index& (0+255),f,b
  1863  002E60                     l5286:
  1864                           
  1865                           ;movement.c: 22:         if (color == 2){
  1866  002E60  0E02               	movlw	2
  1867  002E62  1838               	xorwf	turning_action@color^0,w,c
  1868  002E64  A4D8               	btfss	status,2,c
  1869  002E66  EF37  F017         	goto	u5781
  1870  002E6A  EF39  F017         	goto	u5780
  1871  002E6E                     u5781:
  1872  002E6E  EF61  F017         	goto	l5294
  1873  002E72                     u5780:
  1874  002E72                     
  1875                           ;movement.c: 23:             fullSpeedBack(mL,mR,1);
  1876  002E72  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1877  002E76  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1878  002E7A  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1879  002E7E  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1880  002E82  0E01               	movlw	1
  1881  002E84  6E24               	movwf	fullSpeedBack@instruction^0,c
  1882  002E86  EC82  F024         	call	_fullSpeedBack	;wreg free
  1883                           
  1884                           ;movement.c: 24:             turn45(mL,mR,2,1);
  1885  002E8A  C034  F020         	movff	turning_action@mL,turn45@mL
  1886  002E8E  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1887  002E92  C036  F022         	movff	turning_action@mR,turn45@mR
  1888  002E96  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1889  002E9A  0E02               	movlw	2
  1890  002E9C  6E24               	movwf	turn45@turn_time^0,c
  1891  002E9E  0E01               	movlw	1
  1892  002EA0  6E25               	movwf	turn45@direction^0,c
  1893  002EA2  ECC3  F020         	call	_turn45	;wreg free
  1894  002EA6                     
  1895                           ;movement.c: 25:             memory[array_index] = 2;
  1896  002EA6  0101               	movlb	1	; () banked
  1897  002EA8  5145               	movf	_array_index& (0+255),w,b
  1898  002EAA  0D02               	mullw	2
  1899  002EAC  0E00               	movlw	low _memory
  1900  002EAE  24F3               	addwf	243,w,c
  1901  002EB0  6ED9               	movwf	fsr2l,c
  1902  002EB2  0E01               	movlw	high _memory
  1903  002EB4  20F4               	addwfc	prodh,w,c
  1904  002EB6  6EDA               	movwf	fsr2h,c
  1905  002EB8  0E02               	movlw	2
  1906  002EBA  6EDE               	movwf	postinc2,c
  1907  002EBC  0E00               	movlw	0
  1908  002EBE  6EDD               	movwf	postdec2,c
  1909  002EC0                     
  1910                           ; BSR set to: 1
  1911                           ;movement.c: 26:             array_index++;
  1912  002EC0  2B45               	incf	_array_index& (0+255),f,b
  1913  002EC2                     l5294:
  1914                           
  1915                           ;movement.c: 28:         if (color == 3){
  1916  002EC2  0E03               	movlw	3
  1917  002EC4  1838               	xorwf	turning_action@color^0,w,c
  1918  002EC6  A4D8               	btfss	status,2,c
  1919  002EC8  EF68  F017         	goto	u5791
  1920  002ECC  EF6A  F017         	goto	u5790
  1921  002ED0                     u5791:
  1922  002ED0  EF92  F017         	goto	l5302
  1923  002ED4                     u5790:
  1924  002ED4                     
  1925                           ;movement.c: 29:             fullSpeedBack(mL,mR,1);
  1926  002ED4  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1927  002ED8  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1928  002EDC  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1929  002EE0  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1930  002EE4  0E01               	movlw	1
  1931  002EE6  6E24               	movwf	fullSpeedBack@instruction^0,c
  1932  002EE8  EC82  F024         	call	_fullSpeedBack	;wreg free
  1933                           
  1934                           ;movement.c: 30:             turn45(mL,mR,4,1);
  1935  002EEC  C034  F020         	movff	turning_action@mL,turn45@mL
  1936  002EF0  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1937  002EF4  C036  F022         	movff	turning_action@mR,turn45@mR
  1938  002EF8  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1939  002EFC  0E04               	movlw	4
  1940  002EFE  6E24               	movwf	turn45@turn_time^0,c
  1941  002F00  0E01               	movlw	1
  1942  002F02  6E25               	movwf	turn45@direction^0,c
  1943  002F04  ECC3  F020         	call	_turn45	;wreg free
  1944  002F08                     
  1945                           ;movement.c: 31:             memory[array_index] = 3;
  1946  002F08  0101               	movlb	1	; () banked
  1947  002F0A  5145               	movf	_array_index& (0+255),w,b
  1948  002F0C  0D02               	mullw	2
  1949  002F0E  0E00               	movlw	low _memory
  1950  002F10  24F3               	addwf	243,w,c
  1951  002F12  6ED9               	movwf	fsr2l,c
  1952  002F14  0E01               	movlw	high _memory
  1953  002F16  20F4               	addwfc	prodh,w,c
  1954  002F18  6EDA               	movwf	fsr2h,c
  1955  002F1A  0E03               	movlw	3
  1956  002F1C  6EDE               	movwf	postinc2,c
  1957  002F1E  0E00               	movlw	0
  1958  002F20  6EDD               	movwf	postdec2,c
  1959  002F22                     
  1960                           ; BSR set to: 1
  1961                           ;movement.c: 32:             array_index++;
  1962  002F22  2B45               	incf	_array_index& (0+255),f,b
  1963  002F24                     l5302:
  1964                           
  1965                           ;movement.c: 34:         if (color == 4){
  1966  002F24  0E04               	movlw	4
  1967  002F26  1838               	xorwf	turning_action@color^0,w,c
  1968  002F28  A4D8               	btfss	status,2,c
  1969  002F2A  EF99  F017         	goto	u5801
  1970  002F2E  EF9B  F017         	goto	u5800
  1971  002F32                     u5801:
  1972  002F32  EFC3  F017         	goto	l5310
  1973  002F36                     u5800:
  1974  002F36                     
  1975                           ;movement.c: 35:             fullSpeedBack(mL,mR,3);
  1976  002F36  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1977  002F3A  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1978  002F3E  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1979  002F42  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1980  002F46  0E03               	movlw	3
  1981  002F48  6E24               	movwf	fullSpeedBack@instruction^0,c
  1982  002F4A  EC82  F024         	call	_fullSpeedBack	;wreg free
  1983                           
  1984                           ;movement.c: 36:             turn45(mL,mR,2,2);
  1985  002F4E  C034  F020         	movff	turning_action@mL,turn45@mL
  1986  002F52  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  1987  002F56  C036  F022         	movff	turning_action@mR,turn45@mR
  1988  002F5A  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  1989  002F5E  0E02               	movlw	2
  1990  002F60  6E24               	movwf	turn45@turn_time^0,c
  1991  002F62  0E02               	movlw	2
  1992  002F64  6E25               	movwf	turn45@direction^0,c
  1993  002F66  ECC3  F020         	call	_turn45	;wreg free
  1994  002F6A                     
  1995                           ;movement.c: 37:             memory[array_index] = 4;
  1996  002F6A  0101               	movlb	1	; () banked
  1997  002F6C  5145               	movf	_array_index& (0+255),w,b
  1998  002F6E  0D02               	mullw	2
  1999  002F70  0E00               	movlw	low _memory
  2000  002F72  24F3               	addwf	243,w,c
  2001  002F74  6ED9               	movwf	fsr2l,c
  2002  002F76  0E01               	movlw	high _memory
  2003  002F78  20F4               	addwfc	prodh,w,c
  2004  002F7A  6EDA               	movwf	fsr2h,c
  2005  002F7C  0E04               	movlw	4
  2006  002F7E  6EDE               	movwf	postinc2,c
  2007  002F80  0E00               	movlw	0
  2008  002F82  6EDD               	movwf	postdec2,c
  2009  002F84                     
  2010                           ; BSR set to: 1
  2011                           ;movement.c: 38:             array_index++;
  2012  002F84  2B45               	incf	_array_index& (0+255),f,b
  2013  002F86                     l5310:
  2014                           
  2015                           ;movement.c: 40:         if (color == 5){
  2016  002F86  0E05               	movlw	5
  2017  002F88  1838               	xorwf	turning_action@color^0,w,c
  2018  002F8A  A4D8               	btfss	status,2,c
  2019  002F8C  EFCA  F017         	goto	u5811
  2020  002F90  EFCC  F017         	goto	u5810
  2021  002F94                     u5811:
  2022  002F94  EFF4  F017         	goto	l5318
  2023  002F98                     u5810:
  2024  002F98                     
  2025                           ;movement.c: 41:             fullSpeedBack(mL,mR,3);
  2026  002F98  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2027  002F9C  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2028  002FA0  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2029  002FA4  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2030  002FA8  0E03               	movlw	3
  2031  002FAA  6E24               	movwf	fullSpeedBack@instruction^0,c
  2032  002FAC  EC82  F024         	call	_fullSpeedBack	;wreg free
  2033                           
  2034                           ;movement.c: 42:             turn45(mL,mR,2,1);
  2035  002FB0  C034  F020         	movff	turning_action@mL,turn45@mL
  2036  002FB4  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  2037  002FB8  C036  F022         	movff	turning_action@mR,turn45@mR
  2038  002FBC  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  2039  002FC0  0E02               	movlw	2
  2040  002FC2  6E24               	movwf	turn45@turn_time^0,c
  2041  002FC4  0E01               	movlw	1
  2042  002FC6  6E25               	movwf	turn45@direction^0,c
  2043  002FC8  ECC3  F020         	call	_turn45	;wreg free
  2044  002FCC                     
  2045                           ;movement.c: 43:             memory[array_index] = 5;
  2046  002FCC  0101               	movlb	1	; () banked
  2047  002FCE  5145               	movf	_array_index& (0+255),w,b
  2048  002FD0  0D02               	mullw	2
  2049  002FD2  0E00               	movlw	low _memory
  2050  002FD4  24F3               	addwf	243,w,c
  2051  002FD6  6ED9               	movwf	fsr2l,c
  2052  002FD8  0E01               	movlw	high _memory
  2053  002FDA  20F4               	addwfc	prodh,w,c
  2054  002FDC  6EDA               	movwf	fsr2h,c
  2055  002FDE  0E05               	movlw	5
  2056  002FE0  6EDE               	movwf	postinc2,c
  2057  002FE2  0E00               	movlw	0
  2058  002FE4  6EDD               	movwf	postdec2,c
  2059  002FE6                     
  2060                           ; BSR set to: 1
  2061                           ;movement.c: 44:             array_index++;
  2062  002FE6  2B45               	incf	_array_index& (0+255),f,b
  2063  002FE8                     l5318:
  2064                           
  2065                           ;movement.c: 46:         if (color == 6){
  2066  002FE8  0E06               	movlw	6
  2067  002FEA  1838               	xorwf	turning_action@color^0,w,c
  2068  002FEC  A4D8               	btfss	status,2,c
  2069  002FEE  EFFB  F017         	goto	u5821
  2070  002FF2  EFFD  F017         	goto	u5820
  2071  002FF6                     u5821:
  2072  002FF6  EF25  F018         	goto	l5326
  2073  002FFA                     u5820:
  2074  002FFA                     
  2075                           ;movement.c: 47:             fullSpeedBack(mL,mR,1);
  2076  002FFA  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2077  002FFE  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2078  003002  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2079  003006  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2080  00300A  0E01               	movlw	1
  2081  00300C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2082  00300E  EC82  F024         	call	_fullSpeedBack	;wreg free
  2083                           
  2084                           ;movement.c: 48:             turn45(mL,mR,3,2);
  2085  003012  C034  F020         	movff	turning_action@mL,turn45@mL
  2086  003016  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  2087  00301A  C036  F022         	movff	turning_action@mR,turn45@mR
  2088  00301E  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  2089  003022  0E03               	movlw	3
  2090  003024  6E24               	movwf	turn45@turn_time^0,c
  2091  003026  0E02               	movlw	2
  2092  003028  6E25               	movwf	turn45@direction^0,c
  2093  00302A  ECC3  F020         	call	_turn45	;wreg free
  2094  00302E                     
  2095                           ;movement.c: 49:             memory[array_index] = 6;
  2096  00302E  0101               	movlb	1	; () banked
  2097  003030  5145               	movf	_array_index& (0+255),w,b
  2098  003032  0D02               	mullw	2
  2099  003034  0E00               	movlw	low _memory
  2100  003036  24F3               	addwf	243,w,c
  2101  003038  6ED9               	movwf	fsr2l,c
  2102  00303A  0E01               	movlw	high _memory
  2103  00303C  20F4               	addwfc	prodh,w,c
  2104  00303E  6EDA               	movwf	fsr2h,c
  2105  003040  0E06               	movlw	6
  2106  003042  6EDE               	movwf	postinc2,c
  2107  003044  0E00               	movlw	0
  2108  003046  6EDD               	movwf	postdec2,c
  2109  003048                     
  2110                           ; BSR set to: 1
  2111                           ;movement.c: 50:             array_index++;
  2112  003048  2B45               	incf	_array_index& (0+255),f,b
  2113  00304A                     l5326:
  2114                           
  2115                           ;movement.c: 52:         if (color == 7){
  2116  00304A  0E07               	movlw	7
  2117  00304C  1838               	xorwf	turning_action@color^0,w,c
  2118  00304E  A4D8               	btfss	status,2,c
  2119  003050  EF2C  F018         	goto	u5831
  2120  003054  EF2E  F018         	goto	u5830
  2121  003058                     u5831:
  2122  003058  EF56  F018         	goto	l5334
  2123  00305C                     u5830:
  2124  00305C                     
  2125                           ;movement.c: 53:             fullSpeedBack(mL,mR,1);
  2126  00305C  C034  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2127  003060  C035  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2128  003064  C036  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2129  003068  C037  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2130  00306C  0E01               	movlw	1
  2131  00306E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2132  003070  EC82  F024         	call	_fullSpeedBack	;wreg free
  2133                           
  2134                           ;movement.c: 54:             turn45(mL,mR,3,1);
  2135  003074  C034  F020         	movff	turning_action@mL,turn45@mL
  2136  003078  C035  F021         	movff	turning_action@mL+1,turn45@mL+1
  2137  00307C  C036  F022         	movff	turning_action@mR,turn45@mR
  2138  003080  C037  F023         	movff	turning_action@mR+1,turn45@mR+1
  2139  003084  0E03               	movlw	3
  2140  003086  6E24               	movwf	turn45@turn_time^0,c
  2141  003088  0E01               	movlw	1
  2142  00308A  6E25               	movwf	turn45@direction^0,c
  2143  00308C  ECC3  F020         	call	_turn45	;wreg free
  2144  003090                     
  2145                           ;movement.c: 55:             memory[array_index] = 7;
  2146  003090  0101               	movlb	1	; () banked
  2147  003092  5145               	movf	_array_index& (0+255),w,b
  2148  003094  0D02               	mullw	2
  2149  003096  0E00               	movlw	low _memory
  2150  003098  24F3               	addwf	243,w,c
  2151  00309A  6ED9               	movwf	fsr2l,c
  2152  00309C  0E01               	movlw	high _memory
  2153  00309E  20F4               	addwfc	prodh,w,c
  2154  0030A0  6EDA               	movwf	fsr2h,c
  2155  0030A2  0E07               	movlw	7
  2156  0030A4  6EDE               	movwf	postinc2,c
  2157  0030A6  0E00               	movlw	0
  2158  0030A8  6EDD               	movwf	postdec2,c
  2159  0030AA                     
  2160                           ; BSR set to: 1
  2161                           ;movement.c: 56:             array_index++;
  2162  0030AA  2B45               	incf	_array_index& (0+255),f,b
  2163  0030AC                     l5334:
  2164                           
  2165                           ;movement.c: 58:         if (color == 8){
  2166  0030AC  0E08               	movlw	8
  2167  0030AE  1838               	xorwf	turning_action@color^0,w,c
  2168  0030B0  A4D8               	btfss	status,2,c
  2169  0030B2  EF5D  F018         	goto	u5841
  2170  0030B6  EF5F  F018         	goto	u5840
  2171  0030BA                     u5841:
  2172  0030BA  EF6E  F018         	goto	l452
  2173  0030BE                     u5840:
  2174  0030BE                     
  2175                           ;movement.c: 59:             toggle_light(2,1);
  2176  0030BE  0E01               	movlw	1
  2177  0030C0  6E01               	movwf	toggle_light@toggletime^0,c
  2178  0030C2  0E02               	movlw	2
  2179  0030C4  ECE1  F019         	call	_toggle_light
  2180  0030C8                     
  2181                           ;movement.c: 60:             goback(mL,mR);
  2182  0030C8  C034  F02C         	movff	turning_action@mL,goback@mL
  2183  0030CC  C035  F02D         	movff	turning_action@mL+1,goback@mL+1
  2184  0030D0  C036  F02E         	movff	turning_action@mR,goback@mR
  2185  0030D4  C037  F02F         	movff	turning_action@mR+1,goback@mR+1
  2186  0030D8  EC58  F013         	call	_goback	;wreg free
  2187  0030DC                     l452:
  2188  0030DC  0012               	return		;funcret
  2189  0030DE                     __end_of_turning_action:
  2190                           	callstack 0
  2191                           
  2192 ;; *************** function _goback *****************
  2193 ;; Defined at:
  2194 ;;		line 65 in file "movement.c"
  2195 ;; Parameters:    Size  Location     Type
  2196 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  2197 ;;		 -> main@motorL(9), 
  2198 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  2199 ;;		 -> main@motorR(9), 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;  i               2   49[COMRAM] unsigned int 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  1    wreg      void 
  2204 ;; Registers used:
  2205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2215 ;;Total ram usage:        8 bytes
  2216 ;; Hardware stack levels used: 1
  2217 ;; Hardware stack levels required when called: 5
  2218 ;; This function calls:
  2219 ;;		_fullSpeedAhead
  2220 ;;		_fullSpeedBack
  2221 ;;		_stop
  2222 ;;		_turn45
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;;		_turning_action
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text3
  2230  0026B0                     __ptext3:
  2231                           	callstack 0
  2232  0026B0                     _goback:
  2233                           	callstack 24
  2234  0026B0                     
  2235                           ;movement.c: 65: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 66: {
      +                           fullSpeedBack(mL,mR,1);
  2236  0026B0  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2237  0026B4  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2238  0026B8  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2239  0026BC  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2240  0026C0  0E01               	movlw	1
  2241  0026C2  6E24               	movwf	fullSpeedBack@instruction^0,c
  2242  0026C4  EC82  F024         	call	_fullSpeedBack	;wreg free
  2243                           
  2244                           ;movement.c: 67:     turn45(mL,mR,4,1);
  2245  0026C8  C02C  F020         	movff	goback@mL,turn45@mL
  2246  0026CC  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2247  0026D0  C02E  F022         	movff	goback@mR,turn45@mR
  2248  0026D4  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2249  0026D8  0E04               	movlw	4
  2250  0026DA  6E24               	movwf	turn45@turn_time^0,c
  2251  0026DC  0E01               	movlw	1
  2252  0026DE  6E25               	movwf	turn45@direction^0,c
  2253  0026E0  ECC3  F020         	call	_turn45	;wreg free
  2254                           
  2255                           ;movement.c: 68:     fullSpeedBack(mL,mR,2);
  2256  0026E4  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2257  0026E8  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2258  0026EC  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2259  0026F0  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2260  0026F4  0E02               	movlw	2
  2261  0026F6  6E24               	movwf	fullSpeedBack@instruction^0,c
  2262  0026F8  EC82  F024         	call	_fullSpeedBack	;wreg free
  2263  0026FC                     l4928:
  2264                           
  2265                           ;movement.c: 69:     array_index--;
  2266  0026FC  0101               	movlb	1	; () banked
  2267  0026FE  0745               	decf	_array_index& (0+255),f,b
  2268  002700                     l4930:
  2269                           
  2270                           ; BSR set to: 1
  2271                           ;movement.c: 71:         fullSpeedAhead(mL,mR);
  2272  002700  C02C  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2273  002704  C02D  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2274  002708  C02E  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2275  00270C  C02F  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2276  002710  EC67  F029         	call	_fullSpeedAhead	;wreg free
  2277  002714                     
  2278                           ;movement.c: 72:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2279  002714  0E00               	movlw	0
  2280  002716  6E33               	movwf	(goback@i+1)^0,c
  2281  002718  0E00               	movlw	0
  2282  00271A  6E32               	movwf	goback@i^0,c
  2283  00271C  EF9E  F013         	goto	l4938
  2284  002720                     l4934:
  2285                           
  2286                           ; BSR set to: 1
  2287  002720  0E09               	movlw	9
  2288  002722  6E31               	movwf	(??_goback+1)^0,c
  2289  002724  0E1E               	movlw	30
  2290  002726  6E30               	movwf	??_goback^0,c
  2291  002728  0EE4               	movlw	228
  2292  00272A                     u5937:
  2293  00272A  2EE8               	decfsz	wreg,f,c
  2294  00272C  D7FE               	bra	u5937
  2295  00272E  2E30               	decfsz	??_goback^0,f,c
  2296  002730  D7FC               	bra	u5937
  2297  002732  2E31               	decfsz	(??_goback+1)^0,f,c
  2298  002734  D7FA               	bra	u5937
  2299  002736  D000               	nop2	
  2300  002738  4A32               	infsnz	goback@i^0,f,c
  2301  00273A  2A33               	incf	(goback@i+1)^0,f,c
  2302  00273C                     l4938:
  2303  00273C  0101               	movlb	1	; () banked
  2304  00273E  5145               	movf	_array_index& (0+255),w,b
  2305  002740  0D02               	mullw	2
  2306  002742  0E00               	movlw	low _memory
  2307  002744  24F3               	addwf	243,w,c
  2308  002746  6ED9               	movwf	fsr2l,c
  2309  002748  0E01               	movlw	high _memory
  2310  00274A  20F4               	addwfc	prodh,w,c
  2311  00274C  6EDA               	movwf	fsr2h,c
  2312  00274E  50DE               	movf	postinc2,w,c
  2313  002750  5C32               	subwf	goback@i^0,w,c
  2314  002752  50DE               	movf	postinc2,w,c
  2315  002754  5833               	subwfb	(goback@i+1)^0,w,c
  2316  002756  A0D8               	btfss	status,0,c
  2317  002758  EFB0  F013         	goto	u5351
  2318  00275C  EFB2  F013         	goto	u5350
  2319  002760                     u5351:
  2320  002760  EF90  F013         	goto	l4934
  2321  002764                     u5350:
  2322  002764                     
  2323                           ; BSR set to: 1
  2324                           ;movement.c: 73:         stop(mL,mR);
  2325  002764  C02C  F01A         	movff	goback@mL,stop@mL
  2326  002768  C02D  F01B         	movff	goback@mL+1,stop@mL+1
  2327  00276C  C02E  F01C         	movff	goback@mR,stop@mR
  2328  002770  C02F  F01D         	movff	goback@mR+1,stop@mR+1
  2329  002774  EC2B  F02A         	call	_stop	;wreg free
  2330  002778                     
  2331                           ;movement.c: 74:         if (array_index == 0){break;}
  2332  002778  0101               	movlb	1	; () banked
  2333  00277A  5145               	movf	_array_index& (0+255),w,b
  2334  00277C  A4D8               	btfss	status,2,c
  2335  00277E  EFC3  F013         	goto	u5361
  2336  002782  EFC5  F013         	goto	u5360
  2337  002786                     u5361:
  2338  002786  EFC7  F013         	goto	l4946
  2339  00278A                     u5360:
  2340  00278A  EF0B  F015         	goto	l461
  2341  00278E                     l4946:
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;movement.c: 75:         array_index--;
  2345  00278E  0745               	decf	_array_index& (0+255),f,b
  2346  002790                     
  2347                           ; BSR set to: 1
  2348                           ;movement.c: 76:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2349  002790  5145               	movf	_array_index& (0+255),w,b
  2350  002792  0D02               	mullw	2
  2351  002794  0E00               	movlw	low _memory
  2352  002796  24F3               	addwf	243,w,c
  2353  002798  6ED9               	movwf	fsr2l,c
  2354  00279A  0E01               	movlw	high _memory
  2355  00279C  20F4               	addwfc	prodh,w,c
  2356  00279E  6EDA               	movwf	fsr2h,c
  2357  0027A0  04DE               	decf	postinc2,w,c
  2358  0027A2  10DE               	iorwf	postinc2,w,c
  2359  0027A4  A4D8               	btfss	status,2,c
  2360  0027A6  EFD7  F013         	goto	u5371
  2361  0027AA  EFD9  F013         	goto	u5370
  2362  0027AE                     u5371:
  2363  0027AE  EFF5  F013         	goto	l4954
  2364  0027B2                     u5370:
  2365  0027B2                     
  2366                           ; BSR set to: 1
  2367  0027B2  C02C  F020         	movff	goback@mL,turn45@mL
  2368  0027B6  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2369  0027BA  C02E  F022         	movff	goback@mR,turn45@mR
  2370  0027BE  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2371  0027C2  0E02               	movlw	2
  2372  0027C4  6E24               	movwf	turn45@turn_time^0,c
  2373  0027C6  0E01               	movlw	1
  2374  0027C8  6E25               	movwf	turn45@direction^0,c
  2375  0027CA  ECC3  F020         	call	_turn45	;wreg free
  2376  0027CE  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2377  0027D2  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2378  0027D6  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2379  0027DA  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2380  0027DE  0E02               	movlw	2
  2381  0027E0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2382  0027E2  EC82  F024         	call	_fullSpeedBack	;wreg free
  2383  0027E6  EF7E  F013         	goto	l4928
  2384  0027EA                     l4954:
  2385                           
  2386                           ; BSR set to: 1
  2387  0027EA  5145               	movf	_array_index& (0+255),w,b
  2388  0027EC  0D02               	mullw	2
  2389  0027EE  0E00               	movlw	low _memory
  2390  0027F0  24F3               	addwf	243,w,c
  2391  0027F2  6ED9               	movwf	fsr2l,c
  2392  0027F4  0E01               	movlw	high _memory
  2393  0027F6  20F4               	addwfc	prodh,w,c
  2394  0027F8  6EDA               	movwf	fsr2h,c
  2395  0027FA  0E02               	movlw	2
  2396  0027FC  18DE               	xorwf	postinc2,w,c
  2397  0027FE  10DE               	iorwf	postinc2,w,c
  2398  002800  A4D8               	btfss	status,2,c
  2399  002802  EF05  F014         	goto	u5381
  2400  002806  EF07  F014         	goto	u5380
  2401  00280A                     u5381:
  2402  00280A  EF23  F014         	goto	l4960
  2403  00280E                     u5380:
  2404  00280E                     
  2405                           ; BSR set to: 1
  2406  00280E  C02C  F020         	movff	goback@mL,turn45@mL
  2407  002812  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2408  002816  C02E  F022         	movff	goback@mR,turn45@mR
  2409  00281A  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2410  00281E  0E02               	movlw	2
  2411  002820  6E24               	movwf	turn45@turn_time^0,c
  2412  002822  0E02               	movlw	2
  2413  002824  6E25               	movwf	turn45@direction^0,c
  2414  002826  ECC3  F020         	call	_turn45	;wreg free
  2415  00282A  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2416  00282E  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2417  002832  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2418  002836  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2419  00283A  0E02               	movlw	2
  2420  00283C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2421  00283E  EC82  F024         	call	_fullSpeedBack	;wreg free
  2422  002842  EF7E  F013         	goto	l4928
  2423  002846                     l4960:
  2424                           
  2425                           ; BSR set to: 1
  2426  002846  5145               	movf	_array_index& (0+255),w,b
  2427  002848  0D02               	mullw	2
  2428  00284A  0E00               	movlw	low _memory
  2429  00284C  24F3               	addwf	243,w,c
  2430  00284E  6ED9               	movwf	fsr2l,c
  2431  002850  0E01               	movlw	high _memory
  2432  002852  20F4               	addwfc	prodh,w,c
  2433  002854  6EDA               	movwf	fsr2h,c
  2434  002856  0E03               	movlw	3
  2435  002858  18DE               	xorwf	postinc2,w,c
  2436  00285A  10DE               	iorwf	postinc2,w,c
  2437  00285C  A4D8               	btfss	status,2,c
  2438  00285E  EF33  F014         	goto	u5391
  2439  002862  EF35  F014         	goto	u5390
  2440  002866                     u5391:
  2441  002866  EF51  F014         	goto	l4966
  2442  00286A                     u5390:
  2443  00286A                     
  2444                           ; BSR set to: 1
  2445  00286A  C02C  F020         	movff	goback@mL,turn45@mL
  2446  00286E  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2447  002872  C02E  F022         	movff	goback@mR,turn45@mR
  2448  002876  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2449  00287A  0E04               	movlw	4
  2450  00287C  6E24               	movwf	turn45@turn_time^0,c
  2451  00287E  0E02               	movlw	2
  2452  002880  6E25               	movwf	turn45@direction^0,c
  2453  002882  ECC3  F020         	call	_turn45	;wreg free
  2454  002886  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2455  00288A  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2456  00288E  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2457  002892  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2458  002896  0E02               	movlw	2
  2459  002898  6E24               	movwf	fullSpeedBack@instruction^0,c
  2460  00289A  EC82  F024         	call	_fullSpeedBack	;wreg free
  2461  00289E  EF7E  F013         	goto	l4928
  2462  0028A2                     l4966:
  2463                           
  2464                           ; BSR set to: 1
  2465  0028A2  5145               	movf	_array_index& (0+255),w,b
  2466  0028A4  0D02               	mullw	2
  2467  0028A6  0E00               	movlw	low _memory
  2468  0028A8  24F3               	addwf	243,w,c
  2469  0028AA  6ED9               	movwf	fsr2l,c
  2470  0028AC  0E01               	movlw	high _memory
  2471  0028AE  20F4               	addwfc	prodh,w,c
  2472  0028B0  6EDA               	movwf	fsr2h,c
  2473  0028B2  0E04               	movlw	4
  2474  0028B4  18DE               	xorwf	postinc2,w,c
  2475  0028B6  10DE               	iorwf	postinc2,w,c
  2476  0028B8  A4D8               	btfss	status,2,c
  2477  0028BA  EF61  F014         	goto	u5401
  2478  0028BE  EF63  F014         	goto	u5400
  2479  0028C2                     u5401:
  2480  0028C2  EF7F  F014         	goto	l4972
  2481  0028C6                     u5400:
  2482  0028C6                     
  2483                           ; BSR set to: 1
  2484  0028C6  C02C  F020         	movff	goback@mL,turn45@mL
  2485  0028CA  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2486  0028CE  C02E  F022         	movff	goback@mR,turn45@mR
  2487  0028D2  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2488  0028D6  0E02               	movlw	2
  2489  0028D8  6E24               	movwf	turn45@turn_time^0,c
  2490  0028DA  0E01               	movlw	1
  2491  0028DC  6E25               	movwf	turn45@direction^0,c
  2492  0028DE  ECC3  F020         	call	_turn45	;wreg free
  2493  0028E2  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2494  0028E6  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2495  0028EA  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2496  0028EE  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2497  0028F2  0E03               	movlw	3
  2498  0028F4  6E24               	movwf	fullSpeedBack@instruction^0,c
  2499  0028F6  EC82  F024         	call	_fullSpeedBack	;wreg free
  2500  0028FA  EF7E  F013         	goto	l4928
  2501  0028FE                     l4972:
  2502                           
  2503                           ; BSR set to: 1
  2504  0028FE  5145               	movf	_array_index& (0+255),w,b
  2505  002900  0D02               	mullw	2
  2506  002902  0E00               	movlw	low _memory
  2507  002904  24F3               	addwf	243,w,c
  2508  002906  6ED9               	movwf	fsr2l,c
  2509  002908  0E01               	movlw	high _memory
  2510  00290A  20F4               	addwfc	prodh,w,c
  2511  00290C  6EDA               	movwf	fsr2h,c
  2512  00290E  0E05               	movlw	5
  2513  002910  18DE               	xorwf	postinc2,w,c
  2514  002912  10DE               	iorwf	postinc2,w,c
  2515  002914  A4D8               	btfss	status,2,c
  2516  002916  EF8F  F014         	goto	u5411
  2517  00291A  EF91  F014         	goto	u5410
  2518  00291E                     u5411:
  2519  00291E  EFAD  F014         	goto	l4978
  2520  002922                     u5410:
  2521  002922                     
  2522                           ; BSR set to: 1
  2523  002922  C02C  F020         	movff	goback@mL,turn45@mL
  2524  002926  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2525  00292A  C02E  F022         	movff	goback@mR,turn45@mR
  2526  00292E  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2527  002932  0E02               	movlw	2
  2528  002934  6E24               	movwf	turn45@turn_time^0,c
  2529  002936  0E02               	movlw	2
  2530  002938  6E25               	movwf	turn45@direction^0,c
  2531  00293A  ECC3  F020         	call	_turn45	;wreg free
  2532  00293E  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2533  002942  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2534  002946  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2535  00294A  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2536  00294E  0E03               	movlw	3
  2537  002950  6E24               	movwf	fullSpeedBack@instruction^0,c
  2538  002952  EC82  F024         	call	_fullSpeedBack	;wreg free
  2539  002956  EF7E  F013         	goto	l4928
  2540  00295A                     l4978:
  2541                           
  2542                           ; BSR set to: 1
  2543  00295A  5145               	movf	_array_index& (0+255),w,b
  2544  00295C  0D02               	mullw	2
  2545  00295E  0E00               	movlw	low _memory
  2546  002960  24F3               	addwf	243,w,c
  2547  002962  6ED9               	movwf	fsr2l,c
  2548  002964  0E01               	movlw	high _memory
  2549  002966  20F4               	addwfc	prodh,w,c
  2550  002968  6EDA               	movwf	fsr2h,c
  2551  00296A  0E06               	movlw	6
  2552  00296C  18DE               	xorwf	postinc2,w,c
  2553  00296E  10DE               	iorwf	postinc2,w,c
  2554  002970  A4D8               	btfss	status,2,c
  2555  002972  EFBD  F014         	goto	u5421
  2556  002976  EFBF  F014         	goto	u5420
  2557  00297A                     u5421:
  2558  00297A  EFDB  F014         	goto	l4984
  2559  00297E                     u5420:
  2560  00297E                     
  2561                           ; BSR set to: 1
  2562  00297E  C02C  F020         	movff	goback@mL,turn45@mL
  2563  002982  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2564  002986  C02E  F022         	movff	goback@mR,turn45@mR
  2565  00298A  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2566  00298E  0E03               	movlw	3
  2567  002990  6E24               	movwf	turn45@turn_time^0,c
  2568  002992  0E01               	movlw	1
  2569  002994  6E25               	movwf	turn45@direction^0,c
  2570  002996  ECC3  F020         	call	_turn45	;wreg free
  2571  00299A  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2572  00299E  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2573  0029A2  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2574  0029A6  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2575  0029AA  0E02               	movlw	2
  2576  0029AC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2577  0029AE  EC82  F024         	call	_fullSpeedBack	;wreg free
  2578  0029B2  EF7E  F013         	goto	l4928
  2579  0029B6                     l4984:
  2580                           
  2581                           ; BSR set to: 1
  2582  0029B6  5145               	movf	_array_index& (0+255),w,b
  2583  0029B8  0D02               	mullw	2
  2584  0029BA  0E00               	movlw	low _memory
  2585  0029BC  24F3               	addwf	243,w,c
  2586  0029BE  6ED9               	movwf	fsr2l,c
  2587  0029C0  0E01               	movlw	high _memory
  2588  0029C2  20F4               	addwfc	prodh,w,c
  2589  0029C4  6EDA               	movwf	fsr2h,c
  2590  0029C6  0E07               	movlw	7
  2591  0029C8  18DE               	xorwf	postinc2,w,c
  2592  0029CA  10DE               	iorwf	postinc2,w,c
  2593  0029CC  A4D8               	btfss	status,2,c
  2594  0029CE  EFEB  F014         	goto	u5431
  2595  0029D2  EFED  F014         	goto	u5430
  2596  0029D6                     u5431:
  2597  0029D6  EF09  F015         	goto	l469
  2598  0029DA                     u5430:
  2599  0029DA                     
  2600                           ; BSR set to: 1
  2601  0029DA  C02C  F020         	movff	goback@mL,turn45@mL
  2602  0029DE  C02D  F021         	movff	goback@mL+1,turn45@mL+1
  2603  0029E2  C02E  F022         	movff	goback@mR,turn45@mR
  2604  0029E6  C02F  F023         	movff	goback@mR+1,turn45@mR+1
  2605  0029EA  0E03               	movlw	3
  2606  0029EC  6E24               	movwf	turn45@turn_time^0,c
  2607  0029EE  0E02               	movlw	2
  2608  0029F0  6E25               	movwf	turn45@direction^0,c
  2609  0029F2  ECC3  F020         	call	_turn45	;wreg free
  2610  0029F6  C02C  F020         	movff	goback@mL,fullSpeedBack@mL
  2611  0029FA  C02D  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2612  0029FE  C02E  F022         	movff	goback@mR,fullSpeedBack@mR
  2613  002A02  C02F  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2614  002A06  0E02               	movlw	2
  2615  002A08  6E24               	movwf	fullSpeedBack@instruction^0,c
  2616  002A0A  EC82  F024         	call	_fullSpeedBack	;wreg free
  2617  002A0E  EF7E  F013         	goto	l4928
  2618  002A12                     l469:
  2619                           
  2620                           ; BSR set to: 1
  2621  002A12  EF80  F013         	goto	l4930
  2622  002A16                     l461:
  2623                           
  2624                           ; BSR set to: 1
  2625                           ;movement.c: 84:     LATDbits.LATD7 = 1;
  2626  002A16  8E7C               	bsf	124,7,c	;volatile
  2627                           
  2628                           ;movement.c: 85:     while(PORTFbits.RF2){
  2629  002A18  EF22  F015         	goto	l475
  2630  002A1C                     l4990:
  2631                           
  2632                           ;movement.c: 86:         stop(mL,mR);
  2633  002A1C  C02C  F01A         	movff	goback@mL,stop@mL
  2634  002A20  C02D  F01B         	movff	goback@mL+1,stop@mL+1
  2635  002A24  C02E  F01C         	movff	goback@mR,stop@mR
  2636  002A28  C02F  F01D         	movff	goback@mR+1,stop@mR+1
  2637  002A2C  EC2B  F02A         	call	_stop	;wreg free
  2638  002A30                     
  2639                           ;movement.c: 87:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2640  002A30  B48E               	btfsc	142,2,c	;volatile
  2641  002A32  EF1D  F015         	goto	u5441
  2642  002A36  EF1F  F015         	goto	u5440
  2643  002A3A                     u5441:
  2644  002A3A  EF22  F015         	goto	l475
  2645  002A3E                     u5440:
  2646  002A3E  9E7C               	bcf	124,7,c	;volatile
  2647  002A40  EF29  F015         	goto	l479
  2648  002A44                     l475:
  2649                           
  2650                           ;movement.c: 85:     while(PORTFbits.RF2){
  2651  002A44  B48E               	btfsc	142,2,c	;volatile
  2652  002A46  EF27  F015         	goto	u5451
  2653  002A4A  EF29  F015         	goto	u5450
  2654  002A4E                     u5451:
  2655  002A4E  EF0E  F015         	goto	l4990
  2656  002A52                     u5450:
  2657  002A52                     l479:
  2658  002A52  0012               	return		;funcret
  2659  002A54                     __end_of_goback:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _fullSpeedBack *****************
  2663 ;; Defined at:
  2664 ;;		line 136 in file "dc_motor.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2667 ;;		 -> main@motorL(9), 
  2668 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2669 ;;		 -> main@motorR(9), 
  2670 ;;  instruction     1   35[COMRAM] unsigned char 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2682 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2686 ;;Total ram usage:        7 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 4
  2689 ;; This function calls:
  2690 ;;		_setMotorPWM
  2691 ;;		_stop
  2692 ;; This function is called by:
  2693 ;;		_turning_action
  2694 ;;		_goback
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text4
  2699  004904                     __ptext4:
  2700                           	callstack 0
  2701  004904                     _fullSpeedBack:
  2702                           	callstack 24
  2703  004904                     
  2704                           ;dc_motor.c: 136: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 137: {;dc_motor.c: 138:     mL->direction=0;
  2705  004904  EE20 F001          	lfsr	2,1
  2706  004908  5020               	movf	fullSpeedBack@mL^0,w,c
  2707  00490A  26D9               	addwf	fsr2l,f,c
  2708  00490C  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2709  00490E  22DA               	addwfc	fsr2h,f,c
  2710  004910  0E00               	movlw	0
  2711  004912  6EDF               	movwf	indf2,c
  2712                           
  2713                           ;dc_motor.c: 139:     mR->direction=0;
  2714  004914  EE20 F001          	lfsr	2,1
  2715  004918  5022               	movf	fullSpeedBack@mR^0,w,c
  2716  00491A  26D9               	addwf	fsr2l,f,c
  2717  00491C  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2718  00491E  22DA               	addwfc	fsr2h,f,c
  2719  004920  0E00               	movlw	0
  2720  004922  6EDF               	movwf	indf2,c
  2721                           
  2722                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2723  004924  EFCC  F024         	goto	l4470
  2724  004928                     l4456:
  2725                           
  2726                           ;dc_motor.c: 141:         if (mL->power<44) {mL->power += 2;}
  2727  004928  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2728  00492C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2729  004930  0E2C               	movlw	44
  2730  004932  60DF               	cpfslt	indf2,c
  2731  004934  EF9E  F024         	goto	u4791
  2732  004938  EFA0  F024         	goto	u4790
  2733  00493C                     u4791:
  2734  00493C  EFA6  F024         	goto	l4460
  2735  004940                     u4790:
  2736  004940  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2737  004944  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2738  004948  0E02               	movlw	2
  2739  00494A  26DF               	addwf	indf2,f,c
  2740  00494C                     l4460:
  2741                           
  2742                           ;dc_motor.c: 142:         if (mR->power<44) {mR->power += 2;}
  2743  00494C  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2744  004950  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2745  004954  0E2C               	movlw	44
  2746  004956  60DF               	cpfslt	indf2,c
  2747  004958  EFB0  F024         	goto	u4801
  2748  00495C  EFB2  F024         	goto	u4800
  2749  004960                     u4801:
  2750  004960  EFB8  F024         	goto	l4464
  2751  004964                     u4800:
  2752  004964  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2753  004968  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2754  00496C  0E02               	movlw	2
  2755  00496E  26DF               	addwf	indf2,f,c
  2756  004970                     l4464:
  2757                           
  2758                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2759  004970  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2760  004974  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2761  004978  EC4C  F01D         	call	_setMotorPWM	;wreg free
  2762  00497C                     
  2763                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2764  00497C  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2765  004980  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2766  004984  EC4C  F01D         	call	_setMotorPWM	;wreg free
  2767  004988                     
  2768                           ;dc_motor.c: 145:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2769  004988  0E68               	movlw	104
  2770  00498A  6E25               	movwf	??_fullSpeedBack^0,c
  2771  00498C  0EE4               	movlw	228
  2772  00498E                     u5947:
  2773  00498E  2EE8               	decfsz	wreg,f,c
  2774  004990  D7FE               	bra	u5947
  2775  004992  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2776  004994  D7FC               	bra	u5947
  2777  004996  D000               	nop2	
  2778  004998                     l4470:
  2779                           
  2780                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2781  004998  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2782  00499C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2783  0049A0  0E2B               	movlw	43
  2784  0049A2  64DF               	cpfsgt	indf2,c
  2785  0049A4  EFD6  F024         	goto	u4811
  2786  0049A8  EFD8  F024         	goto	u4810
  2787  0049AC                     u4811:
  2788  0049AC  EF94  F024         	goto	l4456
  2789  0049B0                     u4810:
  2790  0049B0  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2791  0049B4  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2792  0049B8  0E2B               	movlw	43
  2793  0049BA  64DF               	cpfsgt	indf2,c
  2794  0049BC  EFE2  F024         	goto	u4821
  2795  0049C0  EFE4  F024         	goto	u4820
  2796  0049C4                     u4821:
  2797  0049C4  EF94  F024         	goto	l4456
  2798  0049C8                     u4820:
  2799  0049C8                     
  2800                           ;dc_motor.c: 148:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2801  0049C8  0424               	decf	fullSpeedBack@instruction^0,w,c
  2802  0049CA  A4D8               	btfss	status,2,c
  2803  0049CC  EFEA  F024         	goto	u4831
  2804  0049D0  EFEC  F024         	goto	u4830
  2805  0049D4                     u4831:
  2806  0049D4  EFF7  F024         	goto	l4478
  2807  0049D8                     u4830:
  2808  0049D8  0E31               	movlw	49
  2809  0049DA  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2810  0049DC  0EB4               	movlw	180
  2811  0049DE  6E25               	movwf	??_fullSpeedBack^0,c
  2812  0049E0  0E66               	movlw	102
  2813  0049E2                     u5957:
  2814  0049E2  2EE8               	decfsz	wreg,f,c
  2815  0049E4  D7FE               	bra	u5957
  2816  0049E6  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2817  0049E8  D7FC               	bra	u5957
  2818  0049EA  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2819  0049EC  D7FA               	bra	u5957
  2820  0049EE                     l4478:
  2821                           
  2822                           ;dc_motor.c: 149:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2823  0049EE  0E02               	movlw	2
  2824  0049F0  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2825  0049F2  A4D8               	btfss	status,2,c
  2826  0049F4  EFFE  F024         	goto	u4841
  2827  0049F8  EF00  F025         	goto	u4840
  2828  0049FC                     u4841:
  2829  0049FC  EF0C  F025         	goto	l4482
  2830  004A00                     u4840:
  2831  004A00  0E52               	movlw	82
  2832  004A02  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2833  004A04  0E2B               	movlw	43
  2834  004A06  6E25               	movwf	??_fullSpeedBack^0,c
  2835  004A08  0E00               	movlw	0
  2836  004A0A                     u5967:
  2837  004A0A  2EE8               	decfsz	wreg,f,c
  2838  004A0C  D7FE               	bra	u5967
  2839  004A0E  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2840  004A10  D7FC               	bra	u5967
  2841  004A12  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2842  004A14  D7FA               	bra	u5967
  2843  004A16  D000               	nop2	
  2844  004A18                     l4482:
  2845                           
  2846                           ;dc_motor.c: 150:     if (instruction == 3) {_delay((unsigned long)((1900)*(64000000/400
      +                          0.0)));}
  2847  004A18  0E03               	movlw	3
  2848  004A1A  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2849  004A1C  A4D8               	btfss	status,2,c
  2850  004A1E  EF13  F025         	goto	u4851
  2851  004A22  EF15  F025         	goto	u4850
  2852  004A26                     u4851:
  2853  004A26  EF20  F025         	goto	l4486
  2854  004A2A                     u4850:
  2855  004A2A  0E9B               	movlw	155
  2856  004A2C  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2857  004A2E  0E39               	movlw	57
  2858  004A30  6E25               	movwf	??_fullSpeedBack^0,c
  2859  004A32  0E1C               	movlw	28
  2860  004A34                     u5977:
  2861  004A34  2EE8               	decfsz	wreg,f,c
  2862  004A36  D7FE               	bra	u5977
  2863  004A38  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2864  004A3A  D7FC               	bra	u5977
  2865  004A3C  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2866  004A3E  D7FA               	bra	u5977
  2867  004A40                     l4486:
  2868                           
  2869                           ;dc_motor.c: 151:     stop(mL,mR);
  2870  004A40  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2871  004A44  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2872  004A48  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2873  004A4C  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2874  004A50  EC2B  F02A         	call	_stop	;wreg free
  2875  004A54  0012               	return		;funcret
  2876  004A56                     __end_of_fullSpeedBack:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _test_function *****************
  2880 ;; Defined at:
  2881 ;;		line 81 in file "test_and_calibration.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  test_code       1    wreg     unsigned char 
  2884 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  2885 ;;		 -> main@rgb(8), 
  2886 ;;  w               2  136[BANK0 ] PTR struct white_card
  2887 ;;		 -> main@white(28), 
  2888 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  2889 ;;		 -> main@motorL(9), 
  2890 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  2891 ;;		 -> main@motorR(9), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  test_code       1  149[BANK0 ] unsigned char 
  2894 ;;  amb_light       2  144[BANK0 ] unsigned int 
  2895 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  2896 ;;  color           1  147[BANK0 ] unsigned char 
  2897 ;;  complete        1  146[BANK0 ] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2907 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;Total ram usage:       16 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 11
  2914 ;; This function calls:
  2915 ;;		_LED_C
  2916 ;;		_amb_light_measure
  2917 ;;		_calibrate_white
  2918 ;;		_color_data_collection
  2919 ;;		_color_display
  2920 ;;		_color_predict
  2921 ;;		_detect_color
  2922 ;;		_detect_wall
  2923 ;;		_fullSpeedAhead
  2924 ;;		_read_color
  2925 ;;		_stop
  2926 ;;		_test_action
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text5
  2933  003FD6                     __ptext5:
  2934                           	callstack 0
  2935  003FD6                     _test_function:
  2936                           	callstack 19
  2937                           
  2938                           ;incstack = 0
  2939                           ;test_function@test_code stored from wreg
  2940  003FD6  0100               	movlb	0	; () banked
  2941  003FD8  6FF5               	movwf	test_function@test_code& (0+255),b
  2942  003FDA                     
  2943                           ;test_and_calibration.c: 81: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 82: {;test_and_calibration.c: 83:     unsigned char complete = 0;
  2944  003FDA  0E00               	movlw	0
  2945  003FDC  0100               	movlb	0	; () banked
  2946  003FDE  6FF2               	movwf	test_function@complete& (0+255),b
  2947                           
  2948                           ;test_and_calibration.c: 85:     unsigned char stop_signal = 0;
  2949  003FE0  0E00               	movlw	0
  2950  003FE2  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2951                           
  2952                           ;test_and_calibration.c: 86:     unsigned int amb_light = 0;
  2953  003FE4  0E00               	movlw	0
  2954  003FE6  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  2955  003FE8  0E00               	movlw	0
  2956  003FEA  6FF0               	movwf	test_function@amb_light& (0+255),b
  2957  003FEC                     
  2958                           ; BSR set to: 0
  2959                           ;test_and_calibration.c: 88:     if (test_code == 2){calibrate_white(w);}
  2960  003FEC  0E02               	movlw	2
  2961  003FEE  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2962  003FF0  A4D8               	btfss	status,2,c
  2963  003FF2  EFFD  F01F         	goto	u5671
  2964  003FF6  EFFF  F01F         	goto	u5670
  2965  003FFA                     u5671:
  2966  003FFA  EF05  F020         	goto	l5222
  2967  003FFE                     u5670:
  2968  003FFE                     
  2969                           ; BSR set to: 0
  2970  003FFE  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  2971  004002  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2972  004006  EC47  F01C         	call	_calibrate_white	;wreg free
  2973  00400A                     l5222:
  2974                           
  2975                           ;test_and_calibration.c: 89:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2976  00400A  0E04               	movlw	4
  2977  00400C  0100               	movlb	0	; () banked
  2978  00400E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2979  004010  A4D8               	btfss	status,2,c
  2980  004012  EF0D  F020         	goto	u5681
  2981  004016  EF0F  F020         	goto	u5680
  2982  00401A                     u5681:
  2983  00401A  EF19  F020         	goto	l5226
  2984  00401E                     u5680:
  2985  00401E                     
  2986                           ; BSR set to: 0
  2987  00401E  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  2988  004022  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2989  004026  ECC2  F025         	call	_amb_light_measure	;wreg free
  2990  00402A  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  2991  00402E  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2992  004032                     l5226:
  2993                           
  2994                           ;test_and_calibration.c: 93:         if (test_code == 1){
  2995  004032  0100               	movlb	0	; () banked
  2996  004034  05F5               	decf	test_function@test_code& (0+255),w,b
  2997  004036  A4D8               	btfss	status,2,c
  2998  004038  EF20  F020         	goto	u5691
  2999  00403C  EF22  F020         	goto	u5690
  3000  004040                     u5691:
  3001  004040  EF30  F020         	goto	l5234
  3002  004044                     u5690:
  3003  004044                     
  3004                           ; BSR set to: 0
  3005                           ;test_and_calibration.c: 94:             LED_C();
  3006  004044  EC61  F02E         	call	_LED_C	;wreg free
  3007  004048                     
  3008                           ;test_and_calibration.c: 95:             read_color(m);
  3009  004048  C0E6  F00C         	movff	test_function@m,read_color@m
  3010  00404C  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  3011  004050  EC31  F02B         	call	_read_color	;wreg free
  3012  004054                     
  3013                           ;test_and_calibration.c: 96:             color_display(m);
  3014  004054  C0E6  F058         	movff	test_function@m,color_display@m
  3015  004058  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  3016  00405C  ECC8  F02A         	call	_color_display	;wreg free
  3017  004060                     l5234:
  3018                           
  3019                           ;test_and_calibration.c: 99:         if (test_code == 2){
  3020  004060  0E02               	movlw	2
  3021  004062  0100               	movlb	0	; () banked
  3022  004064  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3023  004066  A4D8               	btfss	status,2,c
  3024  004068  EF38  F020         	goto	u5701
  3025  00406C  EF3A  F020         	goto	u5700
  3026  004070                     u5701:
  3027  004070  EF49  F020         	goto	l5240
  3028  004074                     u5700:
  3029  004074                     
  3030                           ; BSR set to: 0
  3031                           ;test_and_calibration.c: 100:             color = detect_color(m,w);
  3032  004074  C0E6  F071         	movff	test_function@m,detect_color@m
  3033  004078  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  3034  00407C  C0E8  F073         	movff	test_function@w,detect_color@w
  3035  004080  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  3036  004084  EC0A  F007         	call	_detect_color	;wreg free
  3037  004088  0100               	movlb	0	; () banked
  3038  00408A  6FF3               	movwf	test_function@color& (0+255),b
  3039  00408C                     
  3040                           ; BSR set to: 0
  3041                           ;test_and_calibration.c: 102:             color_predict(color);
  3042  00408C  51F3               	movf	test_function@color& (0+255),w,b
  3043  00408E  ECCE  F02D         	call	_color_predict
  3044  004092                     l5240:
  3045                           
  3046                           ;test_and_calibration.c: 105:         if (test_code == 3){
  3047  004092  0E03               	movlw	3
  3048  004094  0100               	movlb	0	; () banked
  3049  004096  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3050  004098  A4D8               	btfss	status,2,c
  3051  00409A  EF51  F020         	goto	u5711
  3052  00409E  EF53  F020         	goto	u5710
  3053  0040A2                     u5711:
  3054  0040A2  EF66  F020         	goto	l5250
  3055  0040A6                     u5710:
  3056  0040A6  EF5E  F020         	goto	l5248
  3057  0040AA                     l5244:
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;test_and_calibration.c: 107:                 color_data_collection(m);
  3061  0040AA  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  3062  0040AE  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  3063  0040B2  EC95  F021         	call	_color_data_collection	;wreg free
  3064  0040B6                     
  3065                           ;test_and_calibration.c: 108:                 complete = 1;
  3066  0040B6  0E01               	movlw	1
  3067  0040B8  0100               	movlb	0	; () banked
  3068  0040BA  6FF2               	movwf	test_function@complete& (0+255),b
  3069  0040BC                     l5248:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;test_and_calibration.c: 106:             while (complete == 0){
  3073  0040BC  51F2               	movf	test_function@complete& (0+255),w,b
  3074  0040BE  B4D8               	btfsc	status,2,c
  3075  0040C0  EF64  F020         	goto	u5721
  3076  0040C4  EF66  F020         	goto	u5720
  3077  0040C8                     u5721:
  3078  0040C8  EF55  F020         	goto	l5244
  3079  0040CC                     u5720:
  3080  0040CC                     l5250:
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;test_and_calibration.c: 112:         if (test_code == 4){
  3084  0040CC  0E04               	movlw	4
  3085  0040CE  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3086  0040D0  A4D8               	btfss	status,2,c
  3087  0040D2  EF6D  F020         	goto	u5731
  3088  0040D6  EF6F  F020         	goto	u5730
  3089  0040DA                     u5731:
  3090  0040DA  EFAD  F020         	goto	l5266
  3091  0040DE                     u5730:
  3092  0040DE  EF8B  F020         	goto	l5258
  3093  0040E2                     l5254:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;test_and_calibration.c: 114:                 fullSpeedAhead(mL, mR);
  3097  0040E2  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3098  0040E6  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3099  0040EA  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3100  0040EE  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3101  0040F2  EC67  F029         	call	_fullSpeedAhead	;wreg free
  3102  0040F6                     
  3103                           ;test_and_calibration.c: 115:                 stop_signal = detect_wall(mL, mR, amb_ligh
      +                          t);
  3104  0040F6  C0EA  F06A         	movff	test_function@mL,detect_wall@mL
  3105  0040FA  C0EB  F06B         	movff	test_function@mL+1,detect_wall@mL+1
  3106  0040FE  C0EC  F06C         	movff	test_function@mR,detect_wall@mR
  3107  004102  C0ED  F06D         	movff	test_function@mR+1,detect_wall@mR+1
  3108  004106  C0F0  F06E         	movff	test_function@amb_light,detect_wall@amb_light
  3109  00410A  C0F1  F06F         	movff	test_function@amb_light+1,detect_wall@amb_light+1
  3110  00410E  ECA1  F028         	call	_detect_wall	;wreg free
  3111  004112  0100               	movlb	0	; () banked
  3112  004114  6FF4               	movwf	test_function@stop_signal& (0+255),b
  3113  004116                     l5258:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;test_and_calibration.c: 113:             while (stop_signal == 0){
  3117  004116  51F4               	movf	test_function@stop_signal& (0+255),w,b
  3118  004118  B4D8               	btfsc	status,2,c
  3119  00411A  EF91  F020         	goto	u5741
  3120  00411E  EF93  F020         	goto	u5740
  3121  004122                     u5741:
  3122  004122  EF71  F020         	goto	l5254
  3123  004126                     u5740:
  3124  004126                     
  3125                           ; BSR set to: 0
  3126                           ;test_and_calibration.c: 117:             stop(mL, mR);
  3127  004126  C0EA  F01A         	movff	test_function@mL,stop@mL
  3128  00412A  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  3129  00412E  C0EC  F01C         	movff	test_function@mR,stop@mR
  3130  004132  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  3131  004136  EC2B  F02A         	call	_stop	;wreg free
  3132  00413A                     
  3133                           ;test_and_calibration.c: 118:             _delay((unsigned long)((1000)*(64000000/4000.0
      +                          )));
  3134  00413A  0E52               	movlw	82
  3135  00413C  0100               	movlb	0	; () banked
  3136  00413E  6FEF               	movwf	(??_test_function+1)& (0+255),b
  3137  004140  0E2B               	movlw	43
  3138  004142  6FEE               	movwf	??_test_function& (0+255),b
  3139  004144  0E00               	movlw	0
  3140  004146                     u5987:
  3141  004146  2EE8               	decfsz	wreg,f,c
  3142  004148  D7FE               	bra	u5987
  3143  00414A  2FEE               	decfsz	??_test_function& (0+255),f,b
  3144  00414C  D7FC               	bra	u5987
  3145  00414E  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  3146  004150  D7FA               	bra	u5987
  3147  004152  F000               	nop	
  3148  004154                     
  3149                           ;test_and_calibration.c: 119:             stop_signal = 0;
  3150  004154  0E00               	movlw	0
  3151  004156  0100               	movlb	0	; () banked
  3152  004158  6FF4               	movwf	test_function@stop_signal& (0+255),b
  3153  00415A                     l5266:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;test_and_calibration.c: 122:         if (test_code == 5){
  3157  00415A  0E05               	movlw	5
  3158  00415C  19F5               	xorwf	test_function@test_code& (0+255),w,b
  3159  00415E  A4D8               	btfss	status,2,c
  3160  004160  EFB4  F020         	goto	u5751
  3161  004164  EFB6  F020         	goto	u5750
  3162  004168                     u5751:
  3163  004168  EF19  F020         	goto	l5226
  3164  00416C                     u5750:
  3165  00416C                     
  3166                           ; BSR set to: 0
  3167                           ;test_and_calibration.c: 123:             test_action(mL,mR);
  3168  00416C  C0EA  F02C         	movff	test_function@mL,test_action@mL
  3169  004170  C0EB  F02D         	movff	test_function@mL+1,test_action@mL+1
  3170  004174  C0EC  F02E         	movff	test_function@mR,test_action@mR
  3171  004178  C0ED  F02F         	movff	test_function@mR+1,test_action@mR+1
  3172  00417C  EC2B  F025         	call	_test_action	;wreg free
  3173  004180  EF19  F020         	goto	l5226
  3174  004184  0012               	return		;funcret
  3175  004186                     __end_of_test_function:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function _detect_wall *****************
  3179 ;; Defined at:
  3180 ;;		line 381 in file "color.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  3183 ;;		 -> main@motorL(9), 
  3184 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  3185 ;;		 -> main@motorR(9), 
  3186 ;;  amb_light       2   14[BANK0 ] unsigned int 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  threshold       2   26[BANK0 ] unsigned int 
  3189 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  3190 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  3191 ;;  stop            1   28[BANK0 ] unsigned char 
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      unsigned char 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3201 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3204 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3205 ;;Total ram usage:       19 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 5
  3208 ;; This function calls:
  3209 ;;		_LED_C
  3210 ;;		___flmul
  3211 ;;		___xxtofl
  3212 ;;		_color_read_Clear
  3213 ;;		_color_read_Green
  3214 ;;		_lroundf
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;;		_test_function
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	text6
  3222  005142                     __ptext6:
  3223                           	callstack 0
  3224  005142                     _detect_wall:
  3225                           	callstack 24
  3226  005142  0E00               	movlw	0
  3227  005144  0100               	movlb	0	; () banked
  3228  005146  6F73               	movwf	(detect_wall@CG_amb+1)& (0+255),b
  3229  005148  0E00               	movlw	0
  3230  00514A  6F72               	movwf	detect_wall@CG_amb& (0+255),b
  3231                           
  3232                           ;color.c: 384:     unsigned char stop = 0;
  3233  00514C  0E00               	movlw	0
  3234  00514E  6F7C               	movwf	detect_wall@stop& (0+255),b
  3235                           
  3236                           ;color.c: 385:     unsigned int threshold = 0;
  3237  005150  0E00               	movlw	0
  3238  005152  6F7B               	movwf	(detect_wall@threshold+1)& (0+255),b
  3239  005154  0E00               	movlw	0
  3240  005156  6F7A               	movwf	detect_wall@threshold& (0+255),b
  3241  005158                     
  3242                           ; BSR set to: 0
  3243                           ;color.c: 386:     LED_C();
  3244  005158  EC61  F02E         	call	_LED_C	;wreg free
  3245  00515C                     
  3246                           ;color.c: 387:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3247  00515C  0E09               	movlw	9
  3248  00515E  0100               	movlb	0	; () banked
  3249  005160  6F71               	movwf	(??_detect_wall+1)& (0+255),b
  3250  005162  0E1E               	movlw	30
  3251  005164  6F70               	movwf	??_detect_wall& (0+255),b
  3252  005166  0EE4               	movlw	228
  3253  005168                     u5997:
  3254  005168  2EE8               	decfsz	wreg,f,c
  3255  00516A  D7FE               	bra	u5997
  3256  00516C  2F70               	decfsz	??_detect_wall& (0+255),f,b
  3257  00516E  D7FC               	bra	u5997
  3258  005170  2F71               	decfsz	(??_detect_wall+1)& (0+255),f,b
  3259  005172  D7FA               	bra	u5997
  3260  005174  F000               	nop	
  3261  005176                     
  3262                           ;color.c: 388:     CC_amb = color_read_Clear();
  3263  005176  EC01  F02C         	call	_color_read_Clear	;wreg free
  3264  00517A  C005  F078         	movff	?_color_read_Clear,detect_wall@CC_amb
  3265  00517E  C006  F079         	movff	?_color_read_Clear+1,detect_wall@CC_amb+1
  3266  005182  ECB1  F02B         	call	_color_read_Green	;wreg free
  3267  005186                     
  3268                           ;color.c: 390:     threshold = lroundf((float)amb_light * 1.1);
  3269  005186  C06E  F001         	movff	detect_wall@amb_light,___xxtofl@val
  3270  00518A  C06F  F002         	movff	detect_wall@amb_light+1,___xxtofl@val+1
  3271  00518E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3272  005190  6A04               	clrf	(___xxtofl@val+3)^0,c
  3273  005192  0E00               	movlw	0
  3274  005194  EC11  F01F         	call	___xxtofl
  3275  005198  C001  F028         	movff	?___xxtofl,___flmul@b
  3276  00519C  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3277  0051A0  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3278  0051A4  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3279  0051A8  0ECD               	movlw	205
  3280  0051AA  6E2C               	movwf	___flmul@a^0,c
  3281  0051AC  0ECC               	movlw	204
  3282  0051AE  6E2D               	movwf	(___flmul@a+1)^0,c
  3283  0051B0  0E8C               	movlw	140
  3284  0051B2  6E2E               	movwf	(___flmul@a+2)^0,c
  3285  0051B4  0E3F               	movlw	63
  3286  0051B6  6E2F               	movwf	(___flmul@a+3)^0,c
  3287  0051B8  EC6C  F00F         	call	___flmul	;wreg free
  3288  0051BC  C028  F074         	movff	?___flmul,_detect_wall$2945
  3289  0051C0  C029  F075         	movff	?___flmul+1,_detect_wall$2945+1
  3290  0051C4  C02A  F076         	movff	?___flmul+2,_detect_wall$2945+2
  3291  0051C8  C02B  F077         	movff	?___flmul+3,_detect_wall$2945+3
  3292  0051CC                     
  3293                           ;color.c: 390:     threshold = lroundf((float)amb_light * 1.1);
  3294  0051CC  C074  F066         	movff	_detect_wall$2945,lroundf@x
  3295  0051D0  C075  F067         	movff	_detect_wall$2945+1,lroundf@x+1
  3296  0051D4  C076  F068         	movff	_detect_wall$2945+2,lroundf@x+2
  3297  0051D8  C077  F069         	movff	_detect_wall$2945+3,lroundf@x+3
  3298  0051DC  EC2E  F02D         	call	_lroundf	;wreg free
  3299  0051E0  C066  F07A         	movff	?_lroundf,detect_wall@threshold
  3300  0051E4  C067  F07B         	movff	?_lroundf+1,detect_wall@threshold+1
  3301  0051E8                     
  3302                           ;color.c: 393:     if (CC_amb >= threshold){stop = 1;}
  3303  0051E8  0100               	movlb	0	; () banked
  3304  0051EA  517A               	movf	detect_wall@threshold& (0+255),w,b
  3305  0051EC  5D78               	subwf	detect_wall@CC_amb& (0+255),w,b
  3306  0051EE  517B               	movf	(detect_wall@threshold+1)& (0+255),w,b
  3307  0051F0  5979               	subwfb	(detect_wall@CC_amb+1)& (0+255),w,b
  3308  0051F2  A0D8               	btfss	status,0,c
  3309  0051F4  EFFE  F028         	goto	u5341
  3310  0051F8  EF00  F029         	goto	u5340
  3311  0051FC                     u5341:
  3312  0051FC  EF02  F029         	goto	l148
  3313  005200                     u5340:
  3314  005200                     
  3315                           ; BSR set to: 0
  3316  005200  0E01               	movlw	1
  3317  005202  6F7C               	movwf	detect_wall@stop& (0+255),b
  3318  005204                     l148:
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;color.c: 394:     return stop;
  3322  005204  517C               	movf	detect_wall@stop& (0+255),w,b
  3323  005206                     
  3324                           ; BSR set to: 0
  3325  005206  0012               	return		;funcret
  3326  005208                     __end_of_detect_wall:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function _detect_color *****************
  3330 ;; Defined at:
  3331 ;;		line 270 in file "color.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  3334 ;;		 -> main@rgb(8), 
  3335 ;;  w               2   19[BANK0 ] PTR struct white_card
  3336 ;;		 -> main@white(28), 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  BG              2   44[BANK0 ] unsigned int 
  3339 ;;  RR              2   42[BANK0 ] unsigned int 
  3340 ;;  GG              2   39[BANK0 ] unsigned int 
  3341 ;;  BR              2   37[BANK0 ] unsigned int 
  3342 ;;  GB              2   35[BANK0 ] unsigned int 
  3343 ;;  RB              2   33[BANK0 ] unsigned int 
  3344 ;;  BB              2   31[BANK0 ] unsigned int 
  3345 ;;  GR              2   29[BANK0 ] unsigned int 
  3346 ;;  BC              2   27[BANK0 ] unsigned int 
  3347 ;;  RG              2   25[BANK0 ] unsigned int 
  3348 ;;  color           1   41[BANK0 ] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  1    wreg      unsigned char 
  3351 ;; Registers used:
  3352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;Total ram usage:       33 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; Hardware stack levels required when called: 5
  3365 ;; This function calls:
  3366 ;;		_LED_B
  3367 ;;		_LED_G
  3368 ;;		_LED_R
  3369 ;;		___fldiv
  3370 ;;		___flmul
  3371 ;;		___xxtofl
  3372 ;;		_compare
  3373 ;;		_lroundf
  3374 ;;		_read_color
  3375 ;;		_toggle_light
  3376 ;; This function is called by:
  3377 ;;		_verify_color
  3378 ;;		_main
  3379 ;;		_test_function
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text7
  3384  000E14                     __ptext7:
  3385                           	callstack 0
  3386  000E14                     _detect_color:
  3387                           	callstack 24
  3388  000E14  0E00               	movlw	0
  3389  000E16  0100               	movlb	0	; () banked
  3390  000E18  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  3391  000E1A  0E00               	movlw	0
  3392  000E1C  6F79               	movwf	detect_color@RG& (0+255),b
  3393  000E1E  0E00               	movlw	0
  3394  000E20  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  3395  000E22  0E00               	movlw	0
  3396  000E24  6F81               	movwf	detect_color@RB& (0+255),b
  3397  000E26  0E00               	movlw	0
  3398  000E28  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  3399  000E2A  0E00               	movlw	0
  3400  000E2C  6F7D               	movwf	detect_color@GR& (0+255),b
  3401  000E2E  0E00               	movlw	0
  3402  000E30  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  3403  000E32  0E00               	movlw	0
  3404  000E34  6F87               	movwf	detect_color@GG& (0+255),b
  3405  000E36  0E00               	movlw	0
  3406  000E38  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  3407  000E3A  0E00               	movlw	0
  3408  000E3C  6F83               	movwf	detect_color@GB& (0+255),b
  3409  000E3E  0E00               	movlw	0
  3410  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  3411  000E42  0E00               	movlw	0
  3412  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  3413  000E46  0E00               	movlw	0
  3414  000E48  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  3415  000E4A  0E00               	movlw	0
  3416  000E4C  6F8C               	movwf	detect_color@BG& (0+255),b
  3417  000E4E  0E00               	movlw	0
  3418  000E50  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  3419  000E52  0E00               	movlw	0
  3420  000E54  6F7F               	movwf	detect_color@BB& (0+255),b
  3421  000E56  0E00               	movlw	0
  3422  000E58  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  3423  000E5A  0E00               	movlw	0
  3424  000E5C  6F7B               	movwf	detect_color@BC& (0+255),b
  3425                           
  3426                           ;color.c: 276:     unsigned char color = 0;
  3427  000E5E  0E00               	movlw	0
  3428  000E60  6F89               	movwf	detect_color@color& (0+255),b
  3429  000E62                     
  3430                           ; BSR set to: 0
  3431                           ;color.c: 278:     LED_R();
  3432  000E62  EC21  F02E         	call	_LED_R	;wreg free
  3433  000E66                     
  3434                           ;color.c: 279:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3435  000E66  0E09               	movlw	9
  3436  000E68  0100               	movlb	0	; () banked
  3437  000E6A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3438  000E6C  0E1E               	movlw	30
  3439  000E6E  6F75               	movwf	??_detect_color& (0+255),b
  3440  000E70  0EE4               	movlw	228
  3441  000E72                     u6007:
  3442  000E72  2EE8               	decfsz	wreg,f,c
  3443  000E74  D7FE               	bra	u6007
  3444  000E76  2F75               	decfsz	??_detect_color& (0+255),f,b
  3445  000E78  D7FC               	bra	u6007
  3446  000E7A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3447  000E7C  D7FA               	bra	u6007
  3448  000E7E  F000               	nop	
  3449  000E80                     
  3450                           ;color.c: 280:     read_color(m);
  3451  000E80  C071  F00C         	movff	detect_color@m,read_color@m
  3452  000E84  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3453  000E88  EC31  F02B         	call	_read_color	;wreg free
  3454  000E8C                     
  3455                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3456  000E8C  C073  FFD9         	movff	detect_color@w,fsr2l
  3457  000E90  C074  FFDA         	movff	detect_color@w+1,fsr2h
  3458  000E94  CFDE F075          	movff	postinc2,??_detect_color
  3459  000E98  CFDD F076          	movff	postdec2,??_detect_color+1
  3460  000E9C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3461  000EA0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3462  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3463  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3464  000EA8  0E00               	movlw	0
  3465  000EAA  EC11  F01F         	call	___xxtofl
  3466  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3467  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3468  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3469  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3470  000EBE  C071  FFD9         	movff	detect_color@m,fsr2l
  3471  000EC2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3472  000EC6  CFDE F077          	movff	postinc2,??_detect_color+2
  3473  000ECA  CFDD F078          	movff	postdec2,??_detect_color+3
  3474  000ECE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3475  000ED2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3476  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3477  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3478  000EDA  0E00               	movlw	0
  3479  000EDC  EC11  F01F         	call	___xxtofl
  3480  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3481  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3482  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3483  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3484  000EF0  EC2A  F015         	call	___fldiv	;wreg free
  3485  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  3486  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3487  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3488  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3489  000F04  0E00               	movlw	0
  3490  000F06  6E2C               	movwf	___flmul@a^0,c
  3491  000F08  0E00               	movlw	0
  3492  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  3493  000F0C  0EC8               	movlw	200
  3494  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  3495  000F10  0E42               	movlw	66
  3496  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  3497  000F14  EC6C  F00F         	call	___flmul	;wreg free
  3498  000F18  C028  F08E         	movff	?___flmul,_detect_color$2944
  3499  000F1C  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3500  000F20  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3501  000F24  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3502  000F28                     
  3503                           ;color.c: 282:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3504  000F28  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3505  000F2C  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3506  000F30  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3507  000F34  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3508  000F38  EC2E  F02D         	call	_lroundf	;wreg free
  3509  000F3C  C066  F08A         	movff	?_lroundf,detect_color@RR
  3510  000F40  C067  F08B         	movff	?_lroundf+1,detect_color@RR+1
  3511  000F44  0100               	movlb	0	; () banked
  3512  000F46  EE20 F002          	lfsr	2,2
  3513  000F4A  5173               	movf	detect_color@w& (0+255),w,b
  3514  000F4C  26D9               	addwf	fsr2l,f,c
  3515  000F4E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3516  000F50  22DA               	addwfc	fsr2h,f,c
  3517  000F52  CFDE F075          	movff	postinc2,??_detect_color
  3518  000F56  CFDD F076          	movff	postdec2,??_detect_color+1
  3519  000F5A  C075  F001         	movff	??_detect_color,___xxtofl@val
  3520  000F5E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3521  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  3522  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  3523  000F66  0E00               	movlw	0
  3524  000F68  EC11  F01F         	call	___xxtofl
  3525  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3526  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3527  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3528  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3529  000F7C  0100               	movlb	0	; () banked
  3530  000F7E  EE20 F002          	lfsr	2,2
  3531  000F82  5171               	movf	detect_color@m& (0+255),w,b
  3532  000F84  26D9               	addwf	fsr2l,f,c
  3533  000F86  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3534  000F88  22DA               	addwfc	fsr2h,f,c
  3535  000F8A  CFDE F077          	movff	postinc2,??_detect_color+2
  3536  000F8E  CFDD F078          	movff	postdec2,??_detect_color+3
  3537  000F92  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3538  000F96  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3539  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3540  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3541  000F9E  0E00               	movlw	0
  3542  000FA0  EC11  F01F         	call	___xxtofl
  3543  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3544  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3545  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3546  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3547  000FB4  EC2A  F015         	call	___fldiv	;wreg free
  3548  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  3549  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3550  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3551  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3552  000FC8  0E00               	movlw	0
  3553  000FCA  6E2C               	movwf	___flmul@a^0,c
  3554  000FCC  0E00               	movlw	0
  3555  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  3556  000FD0  0EC8               	movlw	200
  3557  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  3558  000FD4  0E42               	movlw	66
  3559  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  3560  000FD8  EC6C  F00F         	call	___flmul	;wreg free
  3561  000FDC  C028  F08E         	movff	?___flmul,_detect_color$2944
  3562  000FE0  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3563  000FE4  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3564  000FE8  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3565  000FEC  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3566  000FF0  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3567  000FF4  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3568  000FF8  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3569  000FFC  EC2E  F02D         	call	_lroundf	;wreg free
  3570  001000  0100               	movlb	0	; () banked
  3571  001002  EE20 F004          	lfsr	2,4
  3572  001006  5173               	movf	detect_color@w& (0+255),w,b
  3573  001008  26D9               	addwf	fsr2l,f,c
  3574  00100A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3575  00100C  22DA               	addwfc	fsr2h,f,c
  3576  00100E  CFDE F075          	movff	postinc2,??_detect_color
  3577  001012  CFDD F076          	movff	postdec2,??_detect_color+1
  3578  001016  C075  F001         	movff	??_detect_color,___xxtofl@val
  3579  00101A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3580  00101E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3581  001020  6A04               	clrf	(___xxtofl@val+3)^0,c
  3582  001022  0E00               	movlw	0
  3583  001024  EC11  F01F         	call	___xxtofl
  3584  001028  C001  F013         	movff	?___xxtofl,___fldiv@a
  3585  00102C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3586  001030  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3587  001034  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3588  001038  0100               	movlb	0	; () banked
  3589  00103A  EE20 F004          	lfsr	2,4
  3590  00103E  5171               	movf	detect_color@m& (0+255),w,b
  3591  001040  26D9               	addwf	fsr2l,f,c
  3592  001042  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3593  001044  22DA               	addwfc	fsr2h,f,c
  3594  001046  CFDE F077          	movff	postinc2,??_detect_color+2
  3595  00104A  CFDD F078          	movff	postdec2,??_detect_color+3
  3596  00104E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3597  001052  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3598  001056  6A03               	clrf	(___xxtofl@val+2)^0,c
  3599  001058  6A04               	clrf	(___xxtofl@val+3)^0,c
  3600  00105A  0E00               	movlw	0
  3601  00105C  EC11  F01F         	call	___xxtofl
  3602  001060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3603  001064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3604  001068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3605  00106C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3606  001070  EC2A  F015         	call	___fldiv	;wreg free
  3607  001074  C00F  F028         	movff	?___fldiv,___flmul@b
  3608  001078  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3609  00107C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3610  001080  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3611  001084  0E00               	movlw	0
  3612  001086  6E2C               	movwf	___flmul@a^0,c
  3613  001088  0E00               	movlw	0
  3614  00108A  6E2D               	movwf	(___flmul@a+1)^0,c
  3615  00108C  0EC8               	movlw	200
  3616  00108E  6E2E               	movwf	(___flmul@a+2)^0,c
  3617  001090  0E42               	movlw	66
  3618  001092  6E2F               	movwf	(___flmul@a+3)^0,c
  3619  001094  EC6C  F00F         	call	___flmul	;wreg free
  3620  001098  C028  F08E         	movff	?___flmul,_detect_color$2944
  3621  00109C  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3622  0010A0  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3623  0010A4  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3624  0010A8  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3625  0010AC  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3626  0010B0  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3627  0010B4  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3628  0010B8  EC2E  F02D         	call	_lroundf	;wreg free
  3629  0010BC  C066  F081         	movff	?_lroundf,detect_color@RB
  3630  0010C0  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  3631  0010C4                     
  3632                           ;color.c: 283:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3633  0010C4  0E05               	movlw	5
  3634  0010C6  0100               	movlb	0	; () banked
  3635  0010C8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3636  0010CA  0E0F               	movlw	15
  3637  0010CC  6F75               	movwf	??_detect_color& (0+255),b
  3638  0010CE  0EF1               	movlw	241
  3639  0010D0                     u6017:
  3640  0010D0  2EE8               	decfsz	wreg,f,c
  3641  0010D2  D7FE               	bra	u6017
  3642  0010D4  2F75               	decfsz	??_detect_color& (0+255),f,b
  3643  0010D6  D7FC               	bra	u6017
  3644  0010D8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3645  0010DA  D7FA               	bra	u6017
  3646  0010DC                     
  3647                           ;color.c: 289:     LED_G();
  3648  0010DC  EC41  F02E         	call	_LED_G	;wreg free
  3649  0010E0                     
  3650                           ;color.c: 290:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3651  0010E0  0E09               	movlw	9
  3652  0010E2  0100               	movlb	0	; () banked
  3653  0010E4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3654  0010E6  0E1E               	movlw	30
  3655  0010E8  6F75               	movwf	??_detect_color& (0+255),b
  3656  0010EA  0EE4               	movlw	228
  3657  0010EC                     u6027:
  3658  0010EC  2EE8               	decfsz	wreg,f,c
  3659  0010EE  D7FE               	bra	u6027
  3660  0010F0  2F75               	decfsz	??_detect_color& (0+255),f,b
  3661  0010F2  D7FC               	bra	u6027
  3662  0010F4  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3663  0010F6  D7FA               	bra	u6027
  3664  0010F8  F000               	nop	
  3665  0010FA                     
  3666                           ;color.c: 291:     read_color(m);
  3667  0010FA  C071  F00C         	movff	detect_color@m,read_color@m
  3668  0010FE  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3669  001102  EC31  F02B         	call	_read_color	;wreg free
  3670  001106                     
  3671                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3672  001106  0100               	movlb	0	; () banked
  3673  001108  EE20 F006          	lfsr	2,6
  3674  00110C  5173               	movf	detect_color@w& (0+255),w,b
  3675  00110E  26D9               	addwf	fsr2l,f,c
  3676  001110  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3677  001112  22DA               	addwfc	fsr2h,f,c
  3678  001114  CFDE F075          	movff	postinc2,??_detect_color
  3679  001118  CFDD F076          	movff	postdec2,??_detect_color+1
  3680  00111C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3681  001120  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3682  001124  6A03               	clrf	(___xxtofl@val+2)^0,c
  3683  001126  6A04               	clrf	(___xxtofl@val+3)^0,c
  3684  001128  0E00               	movlw	0
  3685  00112A  EC11  F01F         	call	___xxtofl
  3686  00112E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3687  001132  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3688  001136  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3689  00113A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3690  00113E  C071  FFD9         	movff	detect_color@m,fsr2l
  3691  001142  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3692  001146  CFDE F077          	movff	postinc2,??_detect_color+2
  3693  00114A  CFDD F078          	movff	postdec2,??_detect_color+3
  3694  00114E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3695  001152  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3696  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  3697  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  3698  00115A  0E00               	movlw	0
  3699  00115C  EC11  F01F         	call	___xxtofl
  3700  001160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3701  001164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3702  001168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3703  00116C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3704  001170  EC2A  F015         	call	___fldiv	;wreg free
  3705  001174  C00F  F028         	movff	?___fldiv,___flmul@b
  3706  001178  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3707  00117C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3708  001180  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3709  001184  0E00               	movlw	0
  3710  001186  6E2C               	movwf	___flmul@a^0,c
  3711  001188  0E00               	movlw	0
  3712  00118A  6E2D               	movwf	(___flmul@a+1)^0,c
  3713  00118C  0EC8               	movlw	200
  3714  00118E  6E2E               	movwf	(___flmul@a+2)^0,c
  3715  001190  0E42               	movlw	66
  3716  001192  6E2F               	movwf	(___flmul@a+3)^0,c
  3717  001194  EC6C  F00F         	call	___flmul	;wreg free
  3718  001198  C028  F08E         	movff	?___flmul,_detect_color$2944
  3719  00119C  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3720  0011A0  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3721  0011A4  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3722  0011A8                     
  3723                           ;color.c: 294:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3724  0011A8  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3725  0011AC  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3726  0011B0  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3727  0011B4  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3728  0011B8  EC2E  F02D         	call	_lroundf	;wreg free
  3729  0011BC  C066  F07D         	movff	?_lroundf,detect_color@GR
  3730  0011C0  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  3731  0011C4  0100               	movlb	0	; () banked
  3732  0011C6  EE20 F008          	lfsr	2,8
  3733  0011CA  5173               	movf	detect_color@w& (0+255),w,b
  3734  0011CC  26D9               	addwf	fsr2l,f,c
  3735  0011CE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3736  0011D0  22DA               	addwfc	fsr2h,f,c
  3737  0011D2  CFDE F075          	movff	postinc2,??_detect_color
  3738  0011D6  CFDD F076          	movff	postdec2,??_detect_color+1
  3739  0011DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  3740  0011DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3741  0011E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3742  0011E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3743  0011E6  0E00               	movlw	0
  3744  0011E8  EC11  F01F         	call	___xxtofl
  3745  0011EC  C001  F013         	movff	?___xxtofl,___fldiv@a
  3746  0011F0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3747  0011F4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3748  0011F8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3749  0011FC  0100               	movlb	0	; () banked
  3750  0011FE  EE20 F002          	lfsr	2,2
  3751  001202  5171               	movf	detect_color@m& (0+255),w,b
  3752  001204  26D9               	addwf	fsr2l,f,c
  3753  001206  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3754  001208  22DA               	addwfc	fsr2h,f,c
  3755  00120A  CFDE F077          	movff	postinc2,??_detect_color+2
  3756  00120E  CFDD F078          	movff	postdec2,??_detect_color+3
  3757  001212  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3758  001216  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3759  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3760  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3761  00121E  0E00               	movlw	0
  3762  001220  EC11  F01F         	call	___xxtofl
  3763  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3764  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3765  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3766  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3767  001234  EC2A  F015         	call	___fldiv	;wreg free
  3768  001238  C00F  F028         	movff	?___fldiv,___flmul@b
  3769  00123C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3770  001240  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3771  001244  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3772  001248  0E00               	movlw	0
  3773  00124A  6E2C               	movwf	___flmul@a^0,c
  3774  00124C  0E00               	movlw	0
  3775  00124E  6E2D               	movwf	(___flmul@a+1)^0,c
  3776  001250  0EC8               	movlw	200
  3777  001252  6E2E               	movwf	(___flmul@a+2)^0,c
  3778  001254  0E42               	movlw	66
  3779  001256  6E2F               	movwf	(___flmul@a+3)^0,c
  3780  001258  EC6C  F00F         	call	___flmul	;wreg free
  3781  00125C  C028  F08E         	movff	?___flmul,_detect_color$2944
  3782  001260  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3783  001264  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3784  001268  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3785  00126C  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3786  001270  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3787  001274  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3788  001278  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3789  00127C  EC2E  F02D         	call	_lroundf	;wreg free
  3790  001280  C066  F087         	movff	?_lroundf,detect_color@GG
  3791  001284  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  3792  001288  0100               	movlb	0	; () banked
  3793  00128A  EE20 F00A          	lfsr	2,10
  3794  00128E  5173               	movf	detect_color@w& (0+255),w,b
  3795  001290  26D9               	addwf	fsr2l,f,c
  3796  001292  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3797  001294  22DA               	addwfc	fsr2h,f,c
  3798  001296  CFDE F075          	movff	postinc2,??_detect_color
  3799  00129A  CFDD F076          	movff	postdec2,??_detect_color+1
  3800  00129E  C075  F001         	movff	??_detect_color,___xxtofl@val
  3801  0012A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3802  0012A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3803  0012A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3804  0012AA  0E00               	movlw	0
  3805  0012AC  EC11  F01F         	call	___xxtofl
  3806  0012B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3807  0012B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3808  0012B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3809  0012BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3810  0012C0  0100               	movlb	0	; () banked
  3811  0012C2  EE20 F004          	lfsr	2,4
  3812  0012C6  5171               	movf	detect_color@m& (0+255),w,b
  3813  0012C8  26D9               	addwf	fsr2l,f,c
  3814  0012CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3815  0012CC  22DA               	addwfc	fsr2h,f,c
  3816  0012CE  CFDE F077          	movff	postinc2,??_detect_color+2
  3817  0012D2  CFDD F078          	movff	postdec2,??_detect_color+3
  3818  0012D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3819  0012DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3820  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3821  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3822  0012E2  0E00               	movlw	0
  3823  0012E4  EC11  F01F         	call	___xxtofl
  3824  0012E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3825  0012EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3826  0012F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3827  0012F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3828  0012F8  EC2A  F015         	call	___fldiv	;wreg free
  3829  0012FC  C00F  F028         	movff	?___fldiv,___flmul@b
  3830  001300  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3831  001304  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3832  001308  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3833  00130C  0E00               	movlw	0
  3834  00130E  6E2C               	movwf	___flmul@a^0,c
  3835  001310  0E00               	movlw	0
  3836  001312  6E2D               	movwf	(___flmul@a+1)^0,c
  3837  001314  0EC8               	movlw	200
  3838  001316  6E2E               	movwf	(___flmul@a+2)^0,c
  3839  001318  0E42               	movlw	66
  3840  00131A  6E2F               	movwf	(___flmul@a+3)^0,c
  3841  00131C  EC6C  F00F         	call	___flmul	;wreg free
  3842  001320  C028  F08E         	movff	?___flmul,_detect_color$2944
  3843  001324  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3844  001328  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3845  00132C  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3846  001330  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3847  001334  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3848  001338  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3849  00133C  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3850  001340  EC2E  F02D         	call	_lroundf	;wreg free
  3851  001344  C066  F083         	movff	?_lroundf,detect_color@GB
  3852  001348  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  3853  00134C                     
  3854                           ;color.c: 299:     LED_B();
  3855  00134C  EC51  F02E         	call	_LED_B	;wreg free
  3856  001350                     
  3857                           ;color.c: 300:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3858  001350  0E09               	movlw	9
  3859  001352  0100               	movlb	0	; () banked
  3860  001354  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3861  001356  0E1E               	movlw	30
  3862  001358  6F75               	movwf	??_detect_color& (0+255),b
  3863  00135A  0EE4               	movlw	228
  3864  00135C                     u6037:
  3865  00135C  2EE8               	decfsz	wreg,f,c
  3866  00135E  D7FE               	bra	u6037
  3867  001360  2F75               	decfsz	??_detect_color& (0+255),f,b
  3868  001362  D7FC               	bra	u6037
  3869  001364  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  3870  001366  D7FA               	bra	u6037
  3871  001368  F000               	nop	
  3872  00136A                     
  3873                           ;color.c: 301:     read_color(m);
  3874  00136A  C071  F00C         	movff	detect_color@m,read_color@m
  3875  00136E  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  3876  001372  EC31  F02B         	call	_read_color	;wreg free
  3877  001376                     
  3878                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3879  001376  0100               	movlb	0	; () banked
  3880  001378  EE20 F00C          	lfsr	2,12
  3881  00137C  5173               	movf	detect_color@w& (0+255),w,b
  3882  00137E  26D9               	addwf	fsr2l,f,c
  3883  001380  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3884  001382  22DA               	addwfc	fsr2h,f,c
  3885  001384  CFDE F075          	movff	postinc2,??_detect_color
  3886  001388  CFDD F076          	movff	postdec2,??_detect_color+1
  3887  00138C  C075  F001         	movff	??_detect_color,___xxtofl@val
  3888  001390  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3889  001394  6A03               	clrf	(___xxtofl@val+2)^0,c
  3890  001396  6A04               	clrf	(___xxtofl@val+3)^0,c
  3891  001398  0E00               	movlw	0
  3892  00139A  EC11  F01F         	call	___xxtofl
  3893  00139E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3894  0013A2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3895  0013A6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3896  0013AA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3897  0013AE  C071  FFD9         	movff	detect_color@m,fsr2l
  3898  0013B2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  3899  0013B6  CFDE F077          	movff	postinc2,??_detect_color+2
  3900  0013BA  CFDD F078          	movff	postdec2,??_detect_color+3
  3901  0013BE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3902  0013C2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3903  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3904  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3905  0013CA  0E00               	movlw	0
  3906  0013CC  EC11  F01F         	call	___xxtofl
  3907  0013D0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3908  0013D4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3909  0013D8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3910  0013DC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3911  0013E0  EC2A  F015         	call	___fldiv	;wreg free
  3912  0013E4  C00F  F028         	movff	?___fldiv,___flmul@b
  3913  0013E8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3914  0013EC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3915  0013F0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3916  0013F4  0E00               	movlw	0
  3917  0013F6  6E2C               	movwf	___flmul@a^0,c
  3918  0013F8  0E00               	movlw	0
  3919  0013FA  6E2D               	movwf	(___flmul@a+1)^0,c
  3920  0013FC  0EC8               	movlw	200
  3921  0013FE  6E2E               	movwf	(___flmul@a+2)^0,c
  3922  001400  0E42               	movlw	66
  3923  001402  6E2F               	movwf	(___flmul@a+3)^0,c
  3924  001404  EC6C  F00F         	call	___flmul	;wreg free
  3925  001408  C028  F08E         	movff	?___flmul,_detect_color$2944
  3926  00140C  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3927  001410  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3928  001414  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3929  001418                     
  3930                           ;color.c: 302:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3931  001418  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3932  00141C  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3933  001420  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3934  001424  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3935  001428  EC2E  F02D         	call	_lroundf	;wreg free
  3936  00142C  C066  F085         	movff	?_lroundf,detect_color@BR
  3937  001430  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  3938  001434  0100               	movlb	0	; () banked
  3939  001436  EE20 F00E          	lfsr	2,14
  3940  00143A  5173               	movf	detect_color@w& (0+255),w,b
  3941  00143C  26D9               	addwf	fsr2l,f,c
  3942  00143E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3943  001440  22DA               	addwfc	fsr2h,f,c
  3944  001442  CFDE F075          	movff	postinc2,??_detect_color
  3945  001446  CFDD F076          	movff	postdec2,??_detect_color+1
  3946  00144A  C075  F001         	movff	??_detect_color,___xxtofl@val
  3947  00144E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3948  001452  6A03               	clrf	(___xxtofl@val+2)^0,c
  3949  001454  6A04               	clrf	(___xxtofl@val+3)^0,c
  3950  001456  0E00               	movlw	0
  3951  001458  EC11  F01F         	call	___xxtofl
  3952  00145C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3953  001460  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3954  001464  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3955  001468  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3956  00146C  0100               	movlb	0	; () banked
  3957  00146E  EE20 F002          	lfsr	2,2
  3958  001472  5171               	movf	detect_color@m& (0+255),w,b
  3959  001474  26D9               	addwf	fsr2l,f,c
  3960  001476  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3961  001478  22DA               	addwfc	fsr2h,f,c
  3962  00147A  CFDE F077          	movff	postinc2,??_detect_color+2
  3963  00147E  CFDD F078          	movff	postdec2,??_detect_color+3
  3964  001482  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3965  001486  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3966  00148A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3967  00148C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3968  00148E  0E00               	movlw	0
  3969  001490  EC11  F01F         	call	___xxtofl
  3970  001494  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3971  001498  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3972  00149C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3973  0014A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3974  0014A4  EC2A  F015         	call	___fldiv	;wreg free
  3975  0014A8  C00F  F028         	movff	?___fldiv,___flmul@b
  3976  0014AC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3977  0014B0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3978  0014B4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3979  0014B8  0E00               	movlw	0
  3980  0014BA  6E2C               	movwf	___flmul@a^0,c
  3981  0014BC  0E00               	movlw	0
  3982  0014BE  6E2D               	movwf	(___flmul@a+1)^0,c
  3983  0014C0  0EC8               	movlw	200
  3984  0014C2  6E2E               	movwf	(___flmul@a+2)^0,c
  3985  0014C4  0E42               	movlw	66
  3986  0014C6  6E2F               	movwf	(___flmul@a+3)^0,c
  3987  0014C8  EC6C  F00F         	call	___flmul	;wreg free
  3988  0014CC  C028  F08E         	movff	?___flmul,_detect_color$2944
  3989  0014D0  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  3990  0014D4  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  3991  0014D8  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  3992  0014DC  C08E  F066         	movff	_detect_color$2944,lroundf@x
  3993  0014E0  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  3994  0014E4  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  3995  0014E8  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  3996  0014EC  EC2E  F02D         	call	_lroundf	;wreg free
  3997  0014F0  C066  F08C         	movff	?_lroundf,detect_color@BG
  3998  0014F4  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  3999  0014F8  0100               	movlb	0	; () banked
  4000  0014FA  EE20 F010          	lfsr	2,16
  4001  0014FE  5173               	movf	detect_color@w& (0+255),w,b
  4002  001500  26D9               	addwf	fsr2l,f,c
  4003  001502  5174               	movf	(detect_color@w+1)& (0+255),w,b
  4004  001504  22DA               	addwfc	fsr2h,f,c
  4005  001506  CFDE F075          	movff	postinc2,??_detect_color
  4006  00150A  CFDD F076          	movff	postdec2,??_detect_color+1
  4007  00150E  C075  F001         	movff	??_detect_color,___xxtofl@val
  4008  001512  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4009  001516  6A03               	clrf	(___xxtofl@val+2)^0,c
  4010  001518  6A04               	clrf	(___xxtofl@val+3)^0,c
  4011  00151A  0E00               	movlw	0
  4012  00151C  EC11  F01F         	call	___xxtofl
  4013  001520  C001  F013         	movff	?___xxtofl,___fldiv@a
  4014  001524  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4015  001528  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4016  00152C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4017  001530  0100               	movlb	0	; () banked
  4018  001532  EE20 F004          	lfsr	2,4
  4019  001536  5171               	movf	detect_color@m& (0+255),w,b
  4020  001538  26D9               	addwf	fsr2l,f,c
  4021  00153A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  4022  00153C  22DA               	addwfc	fsr2h,f,c
  4023  00153E  CFDE F077          	movff	postinc2,??_detect_color+2
  4024  001542  CFDD F078          	movff	postdec2,??_detect_color+3
  4025  001546  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  4026  00154A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4027  00154E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4028  001550  6A04               	clrf	(___xxtofl@val+3)^0,c
  4029  001552  0E00               	movlw	0
  4030  001554  EC11  F01F         	call	___xxtofl
  4031  001558  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4032  00155C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4033  001560  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4034  001564  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4035  001568  EC2A  F015         	call	___fldiv	;wreg free
  4036  00156C  C00F  F028         	movff	?___fldiv,___flmul@b
  4037  001570  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4038  001574  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4039  001578  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4040  00157C  0E00               	movlw	0
  4041  00157E  6E2C               	movwf	___flmul@a^0,c
  4042  001580  0E00               	movlw	0
  4043  001582  6E2D               	movwf	(___flmul@a+1)^0,c
  4044  001584  0EC8               	movlw	200
  4045  001586  6E2E               	movwf	(___flmul@a+2)^0,c
  4046  001588  0E42               	movlw	66
  4047  00158A  6E2F               	movwf	(___flmul@a+3)^0,c
  4048  00158C  EC6C  F00F         	call	___flmul	;wreg free
  4049  001590  C028  F08E         	movff	?___flmul,_detect_color$2944
  4050  001594  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  4051  001598  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  4052  00159C  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  4053  0015A0  C08E  F066         	movff	_detect_color$2944,lroundf@x
  4054  0015A4  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  4055  0015A8  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  4056  0015AC  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  4057  0015B0  EC2E  F02D         	call	_lroundf	;wreg free
  4058  0015B4  C066  F07F         	movff	?_lroundf,detect_color@BB
  4059  0015B8  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  4060  0015BC                     
  4061                           ;color.c: 303:     BC = lroundf((float)(m->C)/(w->BC)*100);
  4062  0015BC  0100               	movlb	0	; () banked
  4063  0015BE  EE20 F01A          	lfsr	2,26
  4064  0015C2  5173               	movf	detect_color@w& (0+255),w,b
  4065  0015C4  26D9               	addwf	fsr2l,f,c
  4066  0015C6  5174               	movf	(detect_color@w+1)& (0+255),w,b
  4067  0015C8  22DA               	addwfc	fsr2h,f,c
  4068  0015CA  CFDE F075          	movff	postinc2,??_detect_color
  4069  0015CE  CFDD F076          	movff	postdec2,??_detect_color+1
  4070  0015D2  C075  F001         	movff	??_detect_color,___xxtofl@val
  4071  0015D6  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4072  0015DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  4073  0015DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  4074  0015DE  0E00               	movlw	0
  4075  0015E0  EC11  F01F         	call	___xxtofl
  4076  0015E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  4077  0015E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4078  0015EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4079  0015F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4080  0015F4  0100               	movlb	0	; () banked
  4081  0015F6  EE20 F006          	lfsr	2,6
  4082  0015FA  5171               	movf	detect_color@m& (0+255),w,b
  4083  0015FC  26D9               	addwf	fsr2l,f,c
  4084  0015FE  5172               	movf	(detect_color@m+1)& (0+255),w,b
  4085  001600  22DA               	addwfc	fsr2h,f,c
  4086  001602  CFDE F077          	movff	postinc2,??_detect_color+2
  4087  001606  CFDD F078          	movff	postdec2,??_detect_color+3
  4088  00160A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  4089  00160E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4090  001612  6A03               	clrf	(___xxtofl@val+2)^0,c
  4091  001614  6A04               	clrf	(___xxtofl@val+3)^0,c
  4092  001616  0E00               	movlw	0
  4093  001618  EC11  F01F         	call	___xxtofl
  4094  00161C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4095  001620  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4096  001624  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4097  001628  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4098  00162C  EC2A  F015         	call	___fldiv	;wreg free
  4099  001630  C00F  F028         	movff	?___fldiv,___flmul@b
  4100  001634  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4101  001638  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4102  00163C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4103  001640  0E00               	movlw	0
  4104  001642  6E2C               	movwf	___flmul@a^0,c
  4105  001644  0E00               	movlw	0
  4106  001646  6E2D               	movwf	(___flmul@a+1)^0,c
  4107  001648  0EC8               	movlw	200
  4108  00164A  6E2E               	movwf	(___flmul@a+2)^0,c
  4109  00164C  0E42               	movlw	66
  4110  00164E  6E2F               	movwf	(___flmul@a+3)^0,c
  4111  001650  EC6C  F00F         	call	___flmul	;wreg free
  4112  001654  C028  F08E         	movff	?___flmul,_detect_color$2944
  4113  001658  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  4114  00165C  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  4115  001660  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  4116  001664  C08E  F066         	movff	_detect_color$2944,lroundf@x
  4117  001668  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  4118  00166C  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  4119  001670  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  4120  001674  EC2E  F02D         	call	_lroundf	;wreg free
  4121  001678                     
  4122                           ;color.c: 309:     if (compare(0, RR, 45)){
  4123  001678  0E00               	movlw	0
  4124  00167A  0100               	movlb	0	; () banked
  4125  00167C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4126  00167E  0E00               	movlw	0
  4127  001680  6F6A               	movwf	compare@lower& (0+255),b
  4128  001682  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4129  001686  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4130  00168A  0E00               	movlw	0
  4131  00168C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4132  00168E  0E2D               	movlw	45
  4133  001690  6F6E               	movwf	compare@upper& (0+255),b
  4134  001692  EC11  F02D         	call	_compare	;wreg free
  4135  001696  0900               	iorlw	0
  4136  001698  B4D8               	btfsc	status,2,c
  4137  00169A  EF51  F00B         	goto	u5191
  4138  00169E  EF53  F00B         	goto	u5190
  4139  0016A2                     u5191:
  4140  0016A2  EFC4  F00B         	goto	l4830
  4141  0016A6                     u5190:
  4142  0016A6                     
  4143                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4144  0016A6  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  4145  0016AA  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4146  0016AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4147  0016B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4148  0016B2  0E00               	movlw	0
  4149  0016B4  EC11  F01F         	call	___xxtofl
  4150  0016B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  4151  0016BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4152  0016C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4153  0016C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4154  0016C8  0100               	movlb	0	; () banked
  4155  0016CA  518C               	movf	detect_color@BG& (0+255),w,b
  4156  0016CC  2587               	addwf	detect_color@GG& (0+255),w,b
  4157  0016CE  6F75               	movwf	??_detect_color& (0+255),b
  4158  0016D0  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  4159  0016D2  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4160  0016D4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  4161  0016D6  C075  F001         	movff	??_detect_color,___xxtofl@val
  4162  0016DA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4163  0016DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4164  0016E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4165  0016E2  0E00               	movlw	0
  4166  0016E4  EC11  F01F         	call	___xxtofl
  4167  0016E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4168  0016EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4169  0016F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4170  0016F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4171  0016F8  EC2A  F015         	call	___fldiv	;wreg free
  4172  0016FC  C00F  F028         	movff	?___fldiv,___flmul@b
  4173  001700  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4174  001704  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4175  001708  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4176  00170C  0E00               	movlw	0
  4177  00170E  6E2C               	movwf	___flmul@a^0,c
  4178  001710  0E00               	movlw	0
  4179  001712  6E2D               	movwf	(___flmul@a+1)^0,c
  4180  001714  0E48               	movlw	72
  4181  001716  6E2E               	movwf	(___flmul@a+2)^0,c
  4182  001718  0E43               	movlw	67
  4183  00171A  6E2F               	movwf	(___flmul@a+3)^0,c
  4184  00171C  EC6C  F00F         	call	___flmul	;wreg free
  4185  001720  C028  F08E         	movff	?___flmul,_detect_color$2944
  4186  001724  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  4187  001728  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  4188  00172C  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  4189                           
  4190                           ;color.c: 310:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4191  001730  0E00               	movlw	0
  4192  001732  0100               	movlb	0	; () banked
  4193  001734  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4194  001736  0E00               	movlw	0
  4195  001738  6F6A               	movwf	compare@lower& (0+255),b
  4196  00173A  C08E  F066         	movff	_detect_color$2944,lroundf@x
  4197  00173E  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  4198  001742  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  4199  001746  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  4200  00174A  EC2E  F02D         	call	_lroundf	;wreg free
  4201  00174E  C066  F06C         	movff	?_lroundf,compare@value2compare
  4202  001752  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4203  001756  0E01               	movlw	1
  4204  001758  0100               	movlb	0	; () banked
  4205  00175A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4206  00175C  0ED3               	movlw	211
  4207  00175E  6F6E               	movwf	compare@upper& (0+255),b
  4208  001760  EC11  F02D         	call	_compare	;wreg free
  4209  001764  0900               	iorlw	0
  4210  001766  B4D8               	btfsc	status,2,c
  4211  001768  EFB8  F00B         	goto	u5201
  4212  00176C  EFBA  F00B         	goto	u5200
  4213  001770                     u5201:
  4214  001770  EFBF  F00B         	goto	l4828
  4215  001774                     u5200:
  4216  001774  0E03               	movlw	3
  4217  001776  0100               	movlb	0	; () banked
  4218  001778  6F89               	movwf	detect_color@color& (0+255),b
  4219  00177A  EF7F  F00C         	goto	l4856
  4220  00177E                     l4828:
  4221  00177E  0E02               	movlw	2
  4222  001780  0100               	movlb	0	; () banked
  4223  001782  6F89               	movwf	detect_color@color& (0+255),b
  4224  001784  EF7F  F00C         	goto	l4856
  4225  001788                     l4830:
  4226                           
  4227                           ;color.c: 314:         if (GG <= 30 && GB <= 30){
  4228  001788  0100               	movlb	0	; () banked
  4229  00178A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  4230  00178C  E107               	bnz	u5211
  4231  00178E  0E1F               	movlw	31
  4232  001790  5D87               	subwf	detect_color@GG& (0+255),w,b
  4233  001792  B0D8               	btfsc	status,0,c
  4234  001794  EFCE  F00B         	goto	u5211
  4235  001798  EFD0  F00B         	goto	u5210
  4236  00179C                     u5211:
  4237  00179C  EF45  F00C         	goto	l4840
  4238  0017A0                     u5210:
  4239  0017A0                     
  4240                           ; BSR set to: 0
  4241  0017A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  4242  0017A2  E107               	bnz	u5221
  4243  0017A4  0E1F               	movlw	31
  4244  0017A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  4245  0017A8  B0D8               	btfsc	status,0,c
  4246  0017AA  EFD9  F00B         	goto	u5221
  4247  0017AE  EFDB  F00B         	goto	u5220
  4248  0017B2                     u5221:
  4249  0017B2  EF45  F00C         	goto	l4840
  4250  0017B6                     u5220:
  4251  0017B6                     
  4252                           ; BSR set to: 0
  4253                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4254  0017B6  C08A  F001         	movff	detect_color@RR,___xxtofl@val
  4255  0017BA  C08B  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4256  0017BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  4257  0017C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  4258  0017C2  0E00               	movlw	0
  4259  0017C4  EC11  F01F         	call	___xxtofl
  4260  0017C8  C001  F013         	movff	?___xxtofl,___fldiv@a
  4261  0017CC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4262  0017D0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4263  0017D4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4264  0017D8  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  4265  0017DC  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4266  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  4267  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  4268  0017E4  0E00               	movlw	0
  4269  0017E6  EC11  F01F         	call	___xxtofl
  4270  0017EA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4271  0017EE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4272  0017F2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4273  0017F6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4274  0017FA  EC2A  F015         	call	___fldiv	;wreg free
  4275  0017FE  C00F  F028         	movff	?___fldiv,___flmul@b
  4276  001802  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4277  001806  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4278  00180A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4279  00180E  0E00               	movlw	0
  4280  001810  6E2C               	movwf	___flmul@a^0,c
  4281  001812  0E00               	movlw	0
  4282  001814  6E2D               	movwf	(___flmul@a+1)^0,c
  4283  001816  0EFA               	movlw	250
  4284  001818  6E2E               	movwf	(___flmul@a+2)^0,c
  4285  00181A  0E43               	movlw	67
  4286  00181C  6E2F               	movwf	(___flmul@a+3)^0,c
  4287  00181E  EC6C  F00F         	call	___flmul	;wreg free
  4288  001822  C028  F08E         	movff	?___flmul,_detect_color$2944
  4289  001826  C029  F08F         	movff	?___flmul+1,_detect_color$2944+1
  4290  00182A  C02A  F090         	movff	?___flmul+2,_detect_color$2944+2
  4291  00182E  C02B  F091         	movff	?___flmul+3,_detect_color$2944+3
  4292                           
  4293                           ;color.c: 316:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4294  001832  0E00               	movlw	0
  4295  001834  0100               	movlb	0	; () banked
  4296  001836  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4297  001838  0E00               	movlw	0
  4298  00183A  6F6A               	movwf	compare@lower& (0+255),b
  4299  00183C  C08E  F066         	movff	_detect_color$2944,lroundf@x
  4300  001840  C08F  F067         	movff	_detect_color$2944+1,lroundf@x+1
  4301  001844  C090  F068         	movff	_detect_color$2944+2,lroundf@x+2
  4302  001848  C091  F069         	movff	_detect_color$2944+3,lroundf@x+3
  4303  00184C  EC2E  F02D         	call	_lroundf	;wreg free
  4304  001850  C066  F06C         	movff	?_lroundf,compare@value2compare
  4305  001854  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4306  001858  0E00               	movlw	0
  4307  00185A  0100               	movlb	0	; () banked
  4308  00185C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4309  00185E  0E96               	movlw	150
  4310  001860  6F6E               	movwf	compare@upper& (0+255),b
  4311  001862  EC11  F02D         	call	_compare	;wreg free
  4312  001866  0900               	iorlw	0
  4313  001868  B4D8               	btfsc	status,2,c
  4314  00186A  EF39  F00C         	goto	u5231
  4315  00186E  EF3B  F00C         	goto	u5230
  4316  001872                     u5231:
  4317  001872  EF40  F00C         	goto	l4838
  4318  001876                     u5230:
  4319  001876  0E01               	movlw	1
  4320  001878  0100               	movlb	0	; () banked
  4321  00187A  6F89               	movwf	detect_color@color& (0+255),b
  4322  00187C  EF7F  F00C         	goto	l4856
  4323  001880                     l4838:
  4324  001880  0E06               	movlw	6
  4325  001882  0100               	movlb	0	; () banked
  4326  001884  6F89               	movwf	detect_color@color& (0+255),b
  4327  001886  EF7F  F00C         	goto	l4856
  4328  00188A                     l4840:
  4329                           
  4330                           ; BSR set to: 0
  4331  00188A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  4332  00188C  E109               	bnz	u5240
  4333  00188E  0E1F               	movlw	31
  4334  001890  5D87               	subwf	detect_color@GG& (0+255),w,b
  4335  001892  A0D8               	btfss	status,0,c
  4336  001894  EF4E  F00C         	goto	u5241
  4337  001898  EF50  F00C         	goto	u5240
  4338  00189C                     u5241:
  4339  00189C  EF7D  F00C         	goto	l4854
  4340  0018A0                     u5240:
  4341  0018A0                     
  4342                           ; BSR set to: 0
  4343  0018A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  4344  0018A2  E109               	bnz	u5250
  4345  0018A4  0E1F               	movlw	31
  4346  0018A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  4347  0018A8  A0D8               	btfss	status,0,c
  4348  0018AA  EF59  F00C         	goto	u5251
  4349  0018AE  EF5B  F00C         	goto	u5250
  4350  0018B2                     u5251:
  4351  0018B2  EF7D  F00C         	goto	l4854
  4352  0018B6                     u5250:
  4353  0018B6                     
  4354                           ; BSR set to: 0
  4355                           ;color.c: 321:             if (BG >= BR) {color = 7;}
  4356  0018B6  5185               	movf	detect_color@BR& (0+255),w,b
  4357  0018B8  5D8C               	subwf	detect_color@BG& (0+255),w,b
  4358  0018BA  5186               	movf	(detect_color@BR+1)& (0+255),w,b
  4359  0018BC  598D               	subwfb	(detect_color@BG+1)& (0+255),w,b
  4360  0018BE  A0D8               	btfss	status,0,c
  4361  0018C0  EF64  F00C         	goto	u5261
  4362  0018C4  EF66  F00C         	goto	u5260
  4363  0018C8                     u5261:
  4364  0018C8  EF6A  F00C         	goto	l4848
  4365  0018CC                     u5260:
  4366  0018CC                     
  4367                           ; BSR set to: 0
  4368  0018CC  0E07               	movlw	7
  4369  0018CE  6F89               	movwf	detect_color@color& (0+255),b
  4370  0018D0  EF7F  F00C         	goto	l4856
  4371  0018D4                     l4848:
  4372                           
  4373                           ; BSR set to: 0
  4374                           ;color.c: 323:                 if (BG < 48){color = 4;}
  4375  0018D4  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  4376  0018D6  E107               	bnz	u5271
  4377  0018D8  0E30               	movlw	48
  4378  0018DA  5D8C               	subwf	detect_color@BG& (0+255),w,b
  4379  0018DC  B0D8               	btfsc	status,0,c
  4380  0018DE  EF73  F00C         	goto	u5271
  4381  0018E2  EF75  F00C         	goto	u5270
  4382  0018E6                     u5271:
  4383  0018E6  EF79  F00C         	goto	l4852
  4384  0018EA                     u5270:
  4385  0018EA                     
  4386                           ; BSR set to: 0
  4387  0018EA  0E04               	movlw	4
  4388  0018EC  6F89               	movwf	detect_color@color& (0+255),b
  4389  0018EE  EF7F  F00C         	goto	l4856
  4390  0018F2                     l4852:
  4391                           
  4392                           ; BSR set to: 0
  4393  0018F2  0E05               	movlw	5
  4394  0018F4  6F89               	movwf	detect_color@color& (0+255),b
  4395  0018F6  EF7F  F00C         	goto	l4856
  4396  0018FA                     l4854:
  4397                           
  4398                           ; BSR set to: 0
  4399  0018FA  0E00               	movlw	0
  4400  0018FC  6F89               	movwf	detect_color@color& (0+255),b
  4401  0018FE                     l4856:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;color.c: 330:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4405  0018FE  0E00               	movlw	0
  4406  001900  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4407  001902  0E5A               	movlw	90
  4408  001904  6F6A               	movwf	compare@lower& (0+255),b
  4409  001906  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4410  00190A  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4411  00190E  90D8               	bcf	status,0,c
  4412  001910  358A               	rlcf	detect_color@RR& (0+255),w,b
  4413  001912  6F6E               	movwf	compare@upper& (0+255),b
  4414  001914  358B               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4415  001916  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4416  001918  EC11  F02D         	call	_compare	;wreg free
  4417  00191C  0900               	iorlw	0
  4418  00191E  B4D8               	btfsc	status,2,c
  4419  001920  EF94  F00C         	goto	u5281
  4420  001924  EF96  F00C         	goto	u5280
  4421  001928                     u5281:
  4422  001928  EFC9  F00C         	goto	l4864
  4423  00192C                     u5280:
  4424  00192C  0E00               	movlw	0
  4425  00192E  0100               	movlb	0	; () banked
  4426  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4427  001932  0E5A               	movlw	90
  4428  001934  6F6A               	movwf	compare@lower& (0+255),b
  4429  001936  C081  F06C         	movff	detect_color@RB,compare@value2compare
  4430  00193A  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  4431  00193E  90D8               	bcf	status,0,c
  4432  001940  3581               	rlcf	detect_color@RB& (0+255),w,b
  4433  001942  6F6E               	movwf	compare@upper& (0+255),b
  4434  001944  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4435  001946  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4436  001948  EC11  F02D         	call	_compare	;wreg free
  4437  00194C  0900               	iorlw	0
  4438  00194E  B4D8               	btfsc	status,2,c
  4439  001950  EFAC  F00C         	goto	u5291
  4440  001954  EFAE  F00C         	goto	u5290
  4441  001958                     u5291:
  4442  001958  EFC9  F00C         	goto	l4864
  4443  00195C                     u5290:
  4444  00195C  0E00               	movlw	0
  4445  00195E  0100               	movlb	0	; () banked
  4446  001960  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4447  001962  0E5A               	movlw	90
  4448  001964  6F6A               	movwf	compare@lower& (0+255),b
  4449  001966  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  4450  00196A  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4451  00196E  90D8               	bcf	status,0,c
  4452  001970  358C               	rlcf	detect_color@BG& (0+255),w,b
  4453  001972  6F6E               	movwf	compare@upper& (0+255),b
  4454  001974  358D               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4455  001976  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4456  001978  EC11  F02D         	call	_compare	;wreg free
  4457  00197C  0900               	iorlw	0
  4458  00197E  B4D8               	btfsc	status,2,c
  4459  001980  EFC4  F00C         	goto	u5301
  4460  001984  EFC6  F00C         	goto	u5300
  4461  001988                     u5301:
  4462  001988  EFC9  F00C         	goto	l4864
  4463  00198C                     u5300:
  4464  00198C  0E08               	movlw	8
  4465  00198E  0100               	movlb	0	; () banked
  4466  001990  6F89               	movwf	detect_color@color& (0+255),b
  4467  001992                     l4864:
  4468                           
  4469                           ;color.c: 331:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  4470  001992  0E00               	movlw	0
  4471  001994  0100               	movlb	0	; () banked
  4472  001996  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4473  001998  0E00               	movlw	0
  4474  00199A  6F6A               	movwf	compare@lower& (0+255),b
  4475  00199C  C085  F06C         	movff	detect_color@BR,compare@value2compare
  4476  0019A0  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  4477  0019A4  0E00               	movlw	0
  4478  0019A6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4479  0019A8  0E19               	movlw	25
  4480  0019AA  6F6E               	movwf	compare@upper& (0+255),b
  4481  0019AC  EC11  F02D         	call	_compare	;wreg free
  4482  0019B0  0900               	iorlw	0
  4483  0019B2  B4D8               	btfsc	status,2,c
  4484  0019B4  EFDE  F00C         	goto	u5311
  4485  0019B8  EFE0  F00C         	goto	u5310
  4486  0019BC                     u5311:
  4487  0019BC  EFFA  F00C         	goto	l4870
  4488  0019C0                     u5310:
  4489  0019C0  0E00               	movlw	0
  4490  0019C2  0100               	movlb	0	; () banked
  4491  0019C4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4492  0019C6  0E00               	movlw	0
  4493  0019C8  6F6A               	movwf	compare@lower& (0+255),b
  4494  0019CA  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  4495  0019CE  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4496  0019D2  0E00               	movlw	0
  4497  0019D4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4498  0019D6  0E1E               	movlw	30
  4499  0019D8  6F6E               	movwf	compare@upper& (0+255),b
  4500  0019DA  EC11  F02D         	call	_compare	;wreg free
  4501  0019DE  0900               	iorlw	0
  4502  0019E0  B4D8               	btfsc	status,2,c
  4503  0019E2  EFF5  F00C         	goto	u5321
  4504  0019E6  EFF7  F00C         	goto	u5320
  4505  0019EA                     u5321:
  4506  0019EA  EFFA  F00C         	goto	l4870
  4507  0019EE                     u5320:
  4508  0019EE  0E00               	movlw	0
  4509  0019F0  0100               	movlb	0	; () banked
  4510  0019F2  6F89               	movwf	detect_color@color& (0+255),b
  4511  0019F4                     l4870:
  4512                           
  4513                           ;color.c: 333:     if (color == 8) {toggle_light(2,1);}
  4514  0019F4  0E08               	movlw	8
  4515  0019F6  0100               	movlb	0	; () banked
  4516  0019F8  1989               	xorwf	detect_color@color& (0+255),w,b
  4517  0019FA  A4D8               	btfss	status,2,c
  4518  0019FC  EF02  F00D         	goto	u5331
  4519  001A00  EF04  F00D         	goto	u5330
  4520  001A04                     u5331:
  4521  001A04  EF09  F00D         	goto	l4874
  4522  001A08                     u5330:
  4523  001A08                     
  4524                           ; BSR set to: 0
  4525  001A08  0E01               	movlw	1
  4526  001A0A  6E01               	movwf	toggle_light@toggletime^0,c
  4527  001A0C  0E02               	movlw	2
  4528  001A0E  ECE1  F019         	call	_toggle_light
  4529  001A12                     l4874:
  4530                           
  4531                           ;color.c: 334:     return color;
  4532  001A12  0100               	movlb	0	; () banked
  4533  001A14  5189               	movf	detect_color@color& (0+255),w,b
  4534  001A16                     
  4535                           ; BSR set to: 0
  4536  001A16  0012               	return		;funcret
  4537  001A18                     __end_of_detect_color:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _compare *****************
  4541 ;; Defined at:
  4542 ;;		line 337 in file "color.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  lower           2   10[BANK0 ] unsigned int 
  4545 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4546 ;;  upper           2   14[BANK0 ] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  result          1   16[BANK0 ] unsigned char 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      unsigned char 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4558 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;Total ram usage:        7 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; Hardware stack levels required when called: 1
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_detect_color
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           	psect	text8
  4573  005A22                     __ptext8:
  4574                           	callstack 0
  4575  005A22                     _compare:
  4576                           	callstack 27
  4577  005A22                     
  4578                           ;color.c: 337: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 338: {;color.c: 339:     unsigned char result = 0;
  4579  005A22  0E00               	movlw	0
  4580  005A24  0100               	movlb	0	; () banked
  4581  005A26  6F70               	movwf	compare@result& (0+255),b
  4582  005A28                     
  4583                           ; BSR set to: 0
  4584                           ;color.c: 340:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4585  005A28  516C               	movf	compare@value2compare& (0+255),w,b
  4586  005A2A  5D6A               	subwf	compare@lower& (0+255),w,b
  4587  005A2C  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4588  005A2E  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4589  005A30  B0D8               	btfsc	status,0,c
  4590  005A32  EF1D  F02D         	goto	u4771
  4591  005A36  EF1F  F02D         	goto	u4770
  4592  005A3A                     u4771:
  4593  005A3A  EF2C  F02D         	goto	l136
  4594  005A3E                     u4770:
  4595  005A3E                     
  4596                           ; BSR set to: 0
  4597  005A3E  516C               	movf	compare@value2compare& (0+255),w,b
  4598  005A40  5D6E               	subwf	compare@upper& (0+255),w,b
  4599  005A42  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4600  005A44  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4601  005A46  A0D8               	btfss	status,0,c
  4602  005A48  EF28  F02D         	goto	u4781
  4603  005A4C  EF2A  F02D         	goto	u4780
  4604  005A50                     u4781:
  4605  005A50  EF2C  F02D         	goto	l136
  4606  005A54                     u4780:
  4607  005A54                     
  4608                           ; BSR set to: 0
  4609  005A54  0E01               	movlw	1
  4610  005A56  6F70               	movwf	compare@result& (0+255),b
  4611  005A58                     l136:
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;color.c: 341:     return result;
  4615  005A58  5170               	movf	compare@result& (0+255),w,b
  4616  005A5A                     
  4617                           ; BSR set to: 0
  4618  005A5A  0012               	return		;funcret
  4619  005A5C                     __end_of_compare:
  4620                           	callstack 0
  4621                           
  4622 ;; *************** function _color_data_collection *****************
  4623 ;; Defined at:
  4624 ;;		line 29 in file "test_and_calibration.c"
  4625 ;; Parameters:    Size  Location     Type
  4626 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4627 ;;		 -> main@rgb(8), 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  x               2  132[BANK0 ] int 
  4630 ;;  k               2  130[BANK0 ] int 
  4631 ;;  j               2  128[BANK0 ] int 
  4632 ;;  i               2  126[BANK0 ] int 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  1    wreg      void 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4645 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4646 ;;Total ram usage:       12 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 10
  4649 ;; This function calls:
  4650 ;;		_LED_B
  4651 ;;		_LED_C
  4652 ;;		_LED_G
  4653 ;;		_LED_R
  4654 ;;		_color_display
  4655 ;;		_color_predict
  4656 ;;		_read_color
  4657 ;; This function is called by:
  4658 ;;		_test_function
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text9
  4663  00432A                     __ptext9:
  4664                           	callstack 0
  4665  00432A                     _color_data_collection:
  4666                           	callstack 19
  4667  00432A                     
  4668                           ;test_and_calibration.c: 29: void color_data_collection(struct color_rgb *m);test_and_ca
      +                          libration.c: 30: {;test_and_calibration.c: 31:     int i = 0; int j = 0; int k = 0; int 
      +                          x = 0;
  4669  00432A  0E00               	movlw	0
  4670  00432C  0100               	movlb	0	; () banked
  4671  00432E  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4672  004330  0E00               	movlw	0
  4673  004332  6FDE               	movwf	color_data_collection@i& (0+255),b
  4674  004334  0E00               	movlw	0
  4675  004336  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4676  004338  0E00               	movlw	0
  4677  00433A  6FE2               	movwf	color_data_collection@k& (0+255),b
  4678  00433C  0E00               	movlw	0
  4679  00433E  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4680  004340  0E00               	movlw	0
  4681  004342  6FE4               	movwf	color_data_collection@x& (0+255),b
  4682                           
  4683                           ;test_and_calibration.c: 32:     for (i = 0; i < 1; ++i){
  4684  004344  0E00               	movlw	0
  4685  004346  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4686  004348  0E00               	movlw	0
  4687  00434A  6FDE               	movwf	color_data_collection@i& (0+255),b
  4688  00434C                     l5030:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;test_and_calibration.c: 33:         LED_C();
  4692  00434C  EC61  F02E         	call	_LED_C	;wreg free
  4693  004350                     
  4694                           ;test_and_calibration.c: 34:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4695  004350  0E09               	movlw	9
  4696  004352  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4697  004354  0E1E               	movlw	30
  4698  004356  6E5C               	movwf	??_color_data_collection^0,c
  4699  004358  0EE4               	movlw	228
  4700  00435A                     u6047:
  4701  00435A  2EE8               	decfsz	wreg,f,c
  4702  00435C  D7FE               	bra	u6047
  4703  00435E  2E5C               	decfsz	??_color_data_collection^0,f,c
  4704  004360  D7FC               	bra	u6047
  4705  004362  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4706  004364  D7FA               	bra	u6047
  4707  004366  D000               	nop2	
  4708  004368                     
  4709                           ;test_and_calibration.c: 35:         read_color(m);
  4710  004368  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4711  00436C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4712  004370  EC31  F02B         	call	_read_color	;wreg free
  4713  004374                     
  4714                           ;test_and_calibration.c: 36:         color_display(m);
  4715  004374  C05A  F058         	movff	color_data_collection@m,color_display@m
  4716  004378  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4717  00437C  ECC8  F02A         	call	_color_display	;wreg free
  4718  004380                     
  4719                           ;test_and_calibration.c: 37:     }
  4720  004380  0100               	movlb	0	; () banked
  4721  004382  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4722  004384  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4723  004386                     
  4724                           ; BSR set to: 0
  4725  004386  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4726  004388  EFCE  F021         	goto	u5521
  4727  00438C  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4728  00438E  E108               	bnz	u5520
  4729  004390  05DE               	decf	color_data_collection@i& (0+255),w,b
  4730  004392  A0D8               	btfss	status,0,c
  4731  004394  EFCE  F021         	goto	u5521
  4732  004398  EFD0  F021         	goto	u5520
  4733  00439C                     u5521:
  4734  00439C  EFA6  F021         	goto	l5030
  4735  0043A0                     u5520:
  4736  0043A0                     
  4737                           ; BSR set to: 0
  4738                           ;test_and_calibration.c: 39:     for (j = 0; j < 1; ++j){
  4739  0043A0  0E00               	movlw	0
  4740  0043A2  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  4741  0043A4  0E00               	movlw	0
  4742  0043A6  6FE0               	movwf	color_data_collection@j& (0+255),b
  4743  0043A8                     l5048:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;test_and_calibration.c: 40:         LED_R();
  4747  0043A8  EC21  F02E         	call	_LED_R	;wreg free
  4748  0043AC                     
  4749                           ;test_and_calibration.c: 41:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4750  0043AC  0E09               	movlw	9
  4751  0043AE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4752  0043B0  0E1E               	movlw	30
  4753  0043B2  6E5C               	movwf	??_color_data_collection^0,c
  4754  0043B4  0EE4               	movlw	228
  4755  0043B6                     u6057:
  4756  0043B6  2EE8               	decfsz	wreg,f,c
  4757  0043B8  D7FE               	bra	u6057
  4758  0043BA  2E5C               	decfsz	??_color_data_collection^0,f,c
  4759  0043BC  D7FC               	bra	u6057
  4760  0043BE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4761  0043C0  D7FA               	bra	u6057
  4762  0043C2  D000               	nop2	
  4763  0043C4                     
  4764                           ;test_and_calibration.c: 42:         read_color(m);
  4765  0043C4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4766  0043C8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4767  0043CC  EC31  F02B         	call	_read_color	;wreg free
  4768  0043D0                     
  4769                           ;test_and_calibration.c: 43:         color_display(m);
  4770  0043D0  C05A  F058         	movff	color_data_collection@m,color_display@m
  4771  0043D4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4772  0043D8  ECC8  F02A         	call	_color_display	;wreg free
  4773  0043DC                     
  4774                           ;test_and_calibration.c: 44:     }
  4775  0043DC  0100               	movlb	0	; () banked
  4776  0043DE  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  4777  0043E0  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  4778  0043E2                     
  4779                           ; BSR set to: 0
  4780  0043E2  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  4781  0043E4  EFFC  F021         	goto	u5531
  4782  0043E8  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  4783  0043EA  E108               	bnz	u5530
  4784  0043EC  05E0               	decf	color_data_collection@j& (0+255),w,b
  4785  0043EE  A0D8               	btfss	status,0,c
  4786  0043F0  EFFC  F021         	goto	u5531
  4787  0043F4  EFFE  F021         	goto	u5530
  4788  0043F8                     u5531:
  4789  0043F8  EFD4  F021         	goto	l5048
  4790  0043FC                     u5530:
  4791  0043FC                     
  4792                           ; BSR set to: 0
  4793                           ;test_and_calibration.c: 46:     for (k = 0; k < 1; ++k){
  4794  0043FC  0E00               	movlw	0
  4795  0043FE  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  4796  004400  0E00               	movlw	0
  4797  004402  6FE2               	movwf	color_data_collection@k& (0+255),b
  4798  004404                     l5066:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;test_and_calibration.c: 47:         LED_G();
  4802  004404  EC41  F02E         	call	_LED_G	;wreg free
  4803  004408                     
  4804                           ;test_and_calibration.c: 48:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4805  004408  0E09               	movlw	9
  4806  00440A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4807  00440C  0E1E               	movlw	30
  4808  00440E  6E5C               	movwf	??_color_data_collection^0,c
  4809  004410  0EE4               	movlw	228
  4810  004412                     u6067:
  4811  004412  2EE8               	decfsz	wreg,f,c
  4812  004414  D7FE               	bra	u6067
  4813  004416  2E5C               	decfsz	??_color_data_collection^0,f,c
  4814  004418  D7FC               	bra	u6067
  4815  00441A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4816  00441C  D7FA               	bra	u6067
  4817  00441E  D000               	nop2	
  4818  004420                     
  4819                           ;test_and_calibration.c: 49:         read_color(m);
  4820  004420  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4821  004424  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4822  004428  EC31  F02B         	call	_read_color	;wreg free
  4823  00442C                     
  4824                           ;test_and_calibration.c: 50:         color_display(m);
  4825  00442C  C05A  F058         	movff	color_data_collection@m,color_display@m
  4826  004430  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4827  004434  ECC8  F02A         	call	_color_display	;wreg free
  4828  004438                     
  4829                           ;test_and_calibration.c: 51:     }
  4830  004438  0100               	movlb	0	; () banked
  4831  00443A  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  4832  00443C  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  4833  00443E                     
  4834                           ; BSR set to: 0
  4835  00443E  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  4836  004440  EF2A  F022         	goto	u5541
  4837  004444  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  4838  004446  E108               	bnz	u5540
  4839  004448  05E2               	decf	color_data_collection@k& (0+255),w,b
  4840  00444A  A0D8               	btfss	status,0,c
  4841  00444C  EF2A  F022         	goto	u5541
  4842  004450  EF2C  F022         	goto	u5540
  4843  004454                     u5541:
  4844  004454  EF02  F022         	goto	l5066
  4845  004458                     u5540:
  4846  004458                     
  4847                           ; BSR set to: 0
  4848                           ;test_and_calibration.c: 53:     for (x = 0; x < 1; ++x){
  4849  004458  0E00               	movlw	0
  4850  00445A  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  4851  00445C  0E00               	movlw	0
  4852  00445E  6FE4               	movwf	color_data_collection@x& (0+255),b
  4853  004460                     l5084:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;test_and_calibration.c: 54:         LED_B();
  4857  004460  EC51  F02E         	call	_LED_B	;wreg free
  4858  004464                     
  4859                           ;test_and_calibration.c: 55:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4860  004464  0E09               	movlw	9
  4861  004466  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4862  004468  0E1E               	movlw	30
  4863  00446A  6E5C               	movwf	??_color_data_collection^0,c
  4864  00446C  0EE4               	movlw	228
  4865  00446E                     u6077:
  4866  00446E  2EE8               	decfsz	wreg,f,c
  4867  004470  D7FE               	bra	u6077
  4868  004472  2E5C               	decfsz	??_color_data_collection^0,f,c
  4869  004474  D7FC               	bra	u6077
  4870  004476  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4871  004478  D7FA               	bra	u6077
  4872  00447A  D000               	nop2	
  4873  00447C                     
  4874                           ;test_and_calibration.c: 56:         read_color(m);
  4875  00447C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4876  004480  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4877  004484  EC31  F02B         	call	_read_color	;wreg free
  4878  004488                     
  4879                           ;test_and_calibration.c: 57:         color_display(m);
  4880  004488  C05A  F058         	movff	color_data_collection@m,color_display@m
  4881  00448C  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4882  004490  ECC8  F02A         	call	_color_display	;wreg free
  4883  004494                     
  4884                           ;test_and_calibration.c: 58:     }
  4885  004494  0100               	movlb	0	; () banked
  4886  004496  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  4887  004498  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  4888  00449A                     
  4889                           ; BSR set to: 0
  4890  00449A  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  4891  00449C  EF58  F022         	goto	u5551
  4892  0044A0  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  4893  0044A2  E108               	bnz	u5550
  4894  0044A4  05E4               	decf	color_data_collection@x& (0+255),w,b
  4895  0044A6  A0D8               	btfss	status,0,c
  4896  0044A8  EF58  F022         	goto	u5551
  4897  0044AC  EF5A  F022         	goto	u5550
  4898  0044B0                     u5551:
  4899  0044B0  EF30  F022         	goto	l5084
  4900  0044B4                     u5550:
  4901  0044B4                     
  4902                           ; BSR set to: 0
  4903                           ;test_and_calibration.c: 59:     color_predict(1);
  4904  0044B4  0E01               	movlw	1
  4905  0044B6  ECCE  F02D         	call	_color_predict
  4906  0044BA                     
  4907                           ;test_and_calibration.c: 60:     LED_C();
  4908  0044BA  EC61  F02E         	call	_LED_C	;wreg free
  4909  0044BE  0012               	return		;funcret
  4910  0044C0                     __end_of_color_data_collection:
  4911                           	callstack 0
  4912                           
  4913 ;; *************** function _read_color *****************
  4914 ;; Defined at:
  4915 ;;		line 167 in file "color.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  m               2   11[COMRAM] PTR struct color_rgb
  4918 ;;		 -> main@rgb(8), 
  4919 ;; Auto vars:     Size  Location     Type
  4920 ;;		None
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      void 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4934 ;;Total ram usage:        2 bytes
  4935 ;; Hardware stack levels used: 1
  4936 ;; Hardware stack levels required when called: 4
  4937 ;; This function calls:
  4938 ;;		_color_read_Blue
  4939 ;;		_color_read_Clear
  4940 ;;		_color_read_Green
  4941 ;;		_color_read_Red
  4942 ;; This function is called by:
  4943 ;;		_detect_color
  4944 ;;		_color_data_collection
  4945 ;;		_test_function
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text10
  4950  005662                     __ptext10:
  4951                           	callstack 0
  4952  005662                     _read_color:
  4953                           	callstack 24
  4954  005662                     
  4955                           ;color.c: 167: void read_color (struct color_rgb *m);color.c: 168: {;color.c: 169:     m
      +                          ->R = color_read_Red();
  4956  005662  EC89  F02B         	call	_color_read_Red	;wreg free
  4957  005666  C00C  FFD9         	movff	read_color@m,fsr2l
  4958  00566A  C00D  FFDA         	movff	read_color@m+1,fsr2h
  4959  00566E  C005  FFDE         	movff	?_color_read_Red,postinc2
  4960  005672  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4961                           
  4962                           ;color.c: 170:     m->B = color_read_Blue();
  4963  005676  ECD9  F02B         	call	_color_read_Blue	;wreg free
  4964  00567A  EE20 F004          	lfsr	2,4
  4965  00567E  500C               	movf	read_color@m^0,w,c
  4966  005680  26D9               	addwf	fsr2l,f,c
  4967  005682  500D               	movf	(read_color@m+1)^0,w,c
  4968  005684  22DA               	addwfc	fsr2h,f,c
  4969  005686  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4970  00568A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4971                           
  4972                           ;color.c: 171:     m->G = color_read_Green();
  4973  00568E  ECB1  F02B         	call	_color_read_Green	;wreg free
  4974  005692  EE20 F002          	lfsr	2,2
  4975  005696  500C               	movf	read_color@m^0,w,c
  4976  005698  26D9               	addwf	fsr2l,f,c
  4977  00569A  500D               	movf	(read_color@m+1)^0,w,c
  4978  00569C  22DA               	addwfc	fsr2h,f,c
  4979  00569E  C005  FFDE         	movff	?_color_read_Green,postinc2
  4980  0056A2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4981                           
  4982                           ;color.c: 172:     m->C = color_read_Clear();
  4983  0056A6  EC01  F02C         	call	_color_read_Clear	;wreg free
  4984  0056AA  EE20 F006          	lfsr	2,6
  4985  0056AE  500C               	movf	read_color@m^0,w,c
  4986  0056B0  26D9               	addwf	fsr2l,f,c
  4987  0056B2  500D               	movf	(read_color@m+1)^0,w,c
  4988  0056B4  22DA               	addwfc	fsr2h,f,c
  4989  0056B6  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4990  0056BA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4991  0056BE  0012               	return		;funcret
  4992  0056C0                     __end_of_read_color:
  4993                           	callstack 0
  4994                           
  4995 ;; *************** function _color_predict *****************
  4996 ;; Defined at:
  4997 ;;		line 230 in file "color.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  color           1    wreg     unsigned char 
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  color           1  125[BANK0 ] unsigned char 
  5002 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5015 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;Total ram usage:      101 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; Hardware stack levels required when called: 9
  5019 ;; This function calls:
  5020 ;;		_sendStringSerial4
  5021 ;;		_sprintf
  5022 ;; This function is called by:
  5023 ;;		_main
  5024 ;;		_color_data_collection
  5025 ;;		_test_function
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text11
  5030  005B9C                     __ptext11:
  5031                           	callstack 0
  5032  005B9C                     _color_predict:
  5033                           	callstack 20
  5034                           
  5035                           ;incstack = 0
  5036                           ;color_predict@color stored from wreg
  5037  005B9C  0100               	movlb	0	; () banked
  5038  005B9E  6FDD               	movwf	color_predict@color& (0+255),b
  5039  005BA0                     
  5040                           ;color.c: 230: void color_predict(unsigned char color);color.c: 231: {;color.c: 232:    
      +                           char buf[100];;color.c: 233:     sprintf(buf,"\t%d\r\n", color);
  5041  005BA0  0E79               	movlw	low color_predict@buf
  5042  005BA2  0100               	movlb	0	; () banked
  5043  005BA4  6F60               	movwf	sprintf@s& (0+255),b
  5044  005BA6  0E00               	movlw	high color_predict@buf
  5045  005BA8  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5046  005BAA  0E0D               	movlw	low (STR_1+8)
  5047  005BAC  6F62               	movwf	sprintf@fmt& (0+255),b
  5048  005BAE  0E0E               	movlw	high (STR_1+8)
  5049  005BB0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5050  005BB2  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5051  005BB6  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5052  005BB8  EC60  F02B         	call	_sprintf	;wreg free
  5053  005BBC                     
  5054                           ;color.c: 234:     sendStringSerial4(buf);
  5055  005BBC  0E79               	movlw	low color_predict@buf
  5056  005BBE  6E02               	movwf	sendStringSerial4@string^0,c
  5057  005BC0  0E00               	movlw	high color_predict@buf
  5058  005BC2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5059  005BC4  ECB6  F02D         	call	_sendStringSerial4	;wreg free
  5060  005BC8  0012               	return		;funcret
  5061  005BCA                     __end_of_color_predict:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function _color_display *****************
  5065 ;; Defined at:
  5066 ;;		line 222 in file "color.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5069 ;;		 -> main@rgb(8), 
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:      102 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 9
  5088 ;; This function calls:
  5089 ;;		_sendStringSerial4
  5090 ;;		_sprintf
  5091 ;; This function is called by:
  5092 ;;		_color_data_collection
  5093 ;;		_test_function
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text12
  5098  005590                     __ptext12:
  5099                           	callstack 0
  5100  005590                     _color_display:
  5101                           	callstack 20
  5102  005590                     
  5103                           ;color.c: 222: void color_display(struct color_rgb *m);color.c: 223: {;color.c: 224:    
      +                           char buf[100];;color.c: 225:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  5104  005590  0E79               	movlw	low color_display@buf
  5105  005592  0100               	movlb	0	; () banked
  5106  005594  6F60               	movwf	sprintf@s& (0+255),b
  5107  005596  0E00               	movlw	high color_display@buf
  5108  005598  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5109  00559A  0E05               	movlw	low STR_1
  5110  00559C  6F62               	movwf	sprintf@fmt& (0+255),b
  5111  00559E  0E0E               	movlw	high STR_1
  5112  0055A0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5113  0055A2  C058  FFD9         	movff	color_display@m,fsr2l
  5114  0055A6  C059  FFDA         	movff	color_display@m+1,fsr2h
  5115  0055AA  CFDE F064          	movff	postinc2,?_sprintf+4
  5116  0055AE  CFDD F065          	movff	postdec2,?_sprintf+5
  5117  0055B2  EE20 F002          	lfsr	2,2
  5118  0055B6  5058               	movf	color_display@m^0,w,c
  5119  0055B8  26D9               	addwf	fsr2l,f,c
  5120  0055BA  5059               	movf	(color_display@m+1)^0,w,c
  5121  0055BC  22DA               	addwfc	fsr2h,f,c
  5122  0055BE  CFDE F066          	movff	postinc2,?_sprintf+6
  5123  0055C2  CFDD F067          	movff	postdec2,?_sprintf+7
  5124  0055C6  EE20 F004          	lfsr	2,4
  5125  0055CA  5058               	movf	color_display@m^0,w,c
  5126  0055CC  26D9               	addwf	fsr2l,f,c
  5127  0055CE  5059               	movf	(color_display@m+1)^0,w,c
  5128  0055D0  22DA               	addwfc	fsr2h,f,c
  5129  0055D2  CFDE F068          	movff	postinc2,?_sprintf+8
  5130  0055D6  CFDD F069          	movff	postdec2,?_sprintf+9
  5131  0055DA  EE20 F006          	lfsr	2,6
  5132  0055DE  5058               	movf	color_display@m^0,w,c
  5133  0055E0  26D9               	addwf	fsr2l,f,c
  5134  0055E2  5059               	movf	(color_display@m+1)^0,w,c
  5135  0055E4  22DA               	addwfc	fsr2h,f,c
  5136  0055E6  CFDE F06A          	movff	postinc2,?_sprintf+10
  5137  0055EA  CFDD F06B          	movff	postdec2,?_sprintf+11
  5138  0055EE  EC60  F02B         	call	_sprintf	;wreg free
  5139  0055F2                     
  5140                           ;color.c: 226:     sendStringSerial4(buf);
  5141  0055F2  0E79               	movlw	low color_display@buf
  5142  0055F4  6E02               	movwf	sendStringSerial4@string^0,c
  5143  0055F6  0E00               	movlw	high color_display@buf
  5144  0055F8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5145  0055FA  ECB6  F02D         	call	_sendStringSerial4	;wreg free
  5146  0055FE  0012               	return		;funcret
  5147  005600                     __end_of_color_display:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _sprintf *****************
  5151 ;; Defined at:
  5152 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5155 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  5156 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5157 ;;		 -> STR_2(6), STR_1(14), 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5160 ;;  ap              2   12[BANK0 ] PTR void [1]
  5161 ;;		 -> ?_sprintf(2), 
  5162 ;;  ret             2    0        int 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  2    0[BANK0 ] int 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5172 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;Total ram usage:       25 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 8
  5179 ;; This function calls:
  5180 ;;		_vfprintf
  5181 ;; This function is called by:
  5182 ;;		_color_display
  5183 ;;		_color_predict
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text13
  5188  0056C0                     __ptext13:
  5189                           	callstack 0
  5190  0056C0                     _sprintf:
  5191                           	callstack 20
  5192  0056C0  0E64               	movlw	low (?_sprintf+4)
  5193  0056C2  0100               	movlb	0	; () banked
  5194  0056C4  6F6C               	movwf	sprintf@ap& (0+255),b
  5195  0056C6  0E00               	movlw	high (?_sprintf+4)
  5196  0056C8  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5197  0056CA  C060  F06E         	movff	sprintf@s,sprintf@f
  5198  0056CE  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5199  0056D2                     
  5200                           ; BSR set to: 0
  5201  0056D2  0E00               	movlw	0
  5202  0056D4  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5203  0056D6  0E00               	movlw	0
  5204  0056D8  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5205  0056DA                     
  5206                           ; BSR set to: 0
  5207  0056DA  0E00               	movlw	0
  5208  0056DC  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5209  0056DE  0E00               	movlw	0
  5210  0056E0  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5211  0056E2                     
  5212                           ; BSR set to: 0
  5213  0056E2  0E6E               	movlw	low sprintf@f
  5214  0056E4  6E50               	movwf	vfprintf@fp^0,c
  5215  0056E6  0E00               	movlw	high sprintf@f
  5216  0056E8  6E51               	movwf	(vfprintf@fp+1)^0,c
  5217  0056EA  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5218  0056EE  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5219  0056F2  0E6C               	movlw	low sprintf@ap
  5220  0056F4  6E54               	movwf	vfprintf@ap^0,c
  5221  0056F6  0E00               	movlw	high sprintf@ap
  5222  0056F8  6E55               	movwf	(vfprintf@ap+1)^0,c
  5223  0056FA  EC00  F02B         	call	_vfprintf	;wreg free
  5224  0056FE  0100               	movlb	0	; () banked
  5225  005700  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5226  005702  2560               	addwf	sprintf@s& (0+255),w,b
  5227  005704  6ED9               	movwf	fsr2l,c
  5228  005706  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5229  005708  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5230  00570A  6EDA               	movwf	fsr2h,c
  5231  00570C  0E00               	movlw	0
  5232  00570E  6EDF               	movwf	indf2,c
  5233  005710                     
  5234                           ; BSR set to: 0
  5235  005710  0012               	return		;funcret
  5236  005712                     __end_of_sprintf:
  5237                           	callstack 0
  5238                           
  5239 ;; *************** function _vfprintf *****************
  5240 ;; Defined at:
  5241 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5244 ;;		 -> sprintf@f(11), 
  5245 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5246 ;;		 -> STR_2(6), STR_1(14), 
  5247 ;;  ap              2   83[COMRAM] PTR PTR void 
  5248 ;;		 -> sprintf@ap(2), 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5251 ;;		 -> STR_2(6), STR_1(14), 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  2   79[COMRAM] int 
  5254 ;; Registers used:
  5255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;Total ram usage:        8 bytes
  5266 ;; Hardware stack levels used: 1
  5267 ;; Hardware stack levels required when called: 7
  5268 ;; This function calls:
  5269 ;;		_vfpfcnvrt
  5270 ;; This function is called by:
  5271 ;;		_sprintf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text14
  5276  005600                     __ptext14:
  5277                           	callstack 0
  5278  005600                     _vfprintf:
  5279                           	callstack 20
  5280  005600                     
  5281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5282  005600  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5283  005604  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5284  005608                     
  5285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5286  005608  0E00               	movlw	0
  5287  00560A  0101               	movlb	1	; () banked
  5288  00560C  6F3F               	movwf	(_nout+1)& (0+255),b
  5289  00560E  0E00               	movlw	0
  5290  005610  6F3E               	movwf	_nout& (0+255),b
  5291                           
  5292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5293  005612  EF1E  F02B         	goto	l4170
  5294  005616                     l4168:
  5295                           
  5296                           ; BSR set to: 1
  5297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5298  005616  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5299  00561A  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5300  00561E  0E56               	movlw	low vfprintf@cfmt
  5301  005620  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5302  005622  0E00               	movlw	high vfprintf@cfmt
  5303  005624  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5304  005626  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5305  00562A  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5306  00562E  EC36  F01E         	call	_vfpfcnvrt	;wreg free
  5307  005632  5040               	movf	?_vfpfcnvrt^0,w,c
  5308  005634  0101               	movlb	1	; () banked
  5309  005636  273E               	addwf	_nout& (0+255),f,b
  5310  005638  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5311  00563A  233F               	addwfc	(_nout+1)& (0+255),f,b
  5312  00563C                     l4170:
  5313                           
  5314                           ; BSR set to: 1
  5315                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5316  00563C  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5317  005640  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5318  005644                     	if	0	;tblptru may be non-zero
  5319  005644                     	endif
  5320  005644                     	if	0	;tblptru may be non-zero
  5321  005644                     	endif
  5322  005644  0008               	tblrd		*
  5323  005646  50F5               	movf	tablat,w,c
  5324  005648  0900               	iorlw	0
  5325  00564A  A4D8               	btfss	status,2,c
  5326  00564C  EF2A  F02B         	goto	u4221
  5327  005650  EF2C  F02B         	goto	u4220
  5328  005654                     u4221:
  5329  005654  EF0B  F02B         	goto	l4168
  5330  005658                     u4220:
  5331  005658                     
  5332                           ; BSR set to: 1
  5333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5334  005658  C13E  F050         	movff	_nout,?_vfprintf
  5335  00565C  C13F  F051         	movff	_nout+1,?_vfprintf+1
  5336  005660                     
  5337                           ; BSR set to: 1
  5338  005660  0012               	return		;funcret
  5339  005662                     __end_of_vfprintf:
  5340                           	callstack 0
  5341                           
  5342 ;; *************** function _vfpfcnvrt *****************
  5343 ;; Defined at:
  5344 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5347 ;;		 -> sprintf@f(11), 
  5348 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5349 ;;		 -> vfprintf@cfmt(2), 
  5350 ;;  ap              2   67[COMRAM] PTR PTR void 
  5351 ;;		 -> sprintf@ap(2), 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  ll              8   71[COMRAM] long long 
  5354 ;;  llu             8    0        unsigned long long 
  5355 ;;  f               4    0        unsigned long long 
  5356 ;;  vp              3    0        PTR void 
  5357 ;;  ct              3    0        unsigned char [3]
  5358 ;;  cp              3    0        PTR unsigned char 
  5359 ;;  i               2    0        int 
  5360 ;;  done            2    0        int 
  5361 ;;  c               1    0        unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  2   63[COMRAM] int 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5371 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5374 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;Total ram usage:       16 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 6
  5378 ;; This function calls:
  5379 ;;		_dtoa
  5380 ;;		_fputc
  5381 ;; This function is called by:
  5382 ;;		_vfprintf
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text15
  5387  003C6C                     __ptext15:
  5388                           	callstack 0
  5389  003C6C                     _vfpfcnvrt:
  5390                           	callstack 20
  5391  003C6C                     
  5392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5393  003C6C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5394  003C70  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5395  003C74  CFDE FFF6          	movff	postinc2,tblptrl
  5396  003C78  CFDD FFF7          	movff	postdec2,tblptrh
  5397  003C7C                     	if	0	;tblptru may be non-zero
  5398  003C7C                     	endif
  5399  003C7C                     	if	0	;tblptru may be non-zero
  5400  003C7C                     	endif
  5401  003C7C  0008               	tblrd		*
  5402  003C7E  50F5               	movf	tablat,w,c
  5403  003C80  0A25               	xorlw	37
  5404  003C82  A4D8               	btfss	status,2,c
  5405  003C84  EF46  F01E         	goto	u3861
  5406  003C88  EF48  F01E         	goto	u3860
  5407  003C8C                     u3861:
  5408  003C8C  EFF5  F01E         	goto	l3934
  5409  003C90                     u3860:
  5410  003C90                     
  5411                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5412  003C90  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5413  003C94  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5414  003C98  2ADE               	incf	postinc2,f,c
  5415  003C9A  0E00               	movlw	0
  5416  003C9C  22DD               	addwfc	postdec2,f,c
  5417  003C9E                     
  5418                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5419  003C9E  0E00               	movlw	0
  5420  003CA0  0101               	movlb	1	; () banked
  5421  003CA2  6F41               	movwf	(_width+1)& (0+255),b
  5422  003CA4  0E00               	movlw	0
  5423  003CA6  6F40               	movwf	_width& (0+255),b
  5424  003CA8  C140  F0FC         	movff	_width,_flags
  5425  003CAC  C141  F0FD         	movff	_width+1,_flags+1
  5426  003CB0                     
  5427                           ; BSR set to: 1
  5428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5429  003CB0  0100               	movlb	0	; () banked
  5430  003CB2  69FA               	setf	_prec& (0+255),b
  5431  003CB4  69FB               	setf	(_prec+1)& (0+255),b
  5432  003CB6                     
  5433                           ; BSR set to: 0
  5434                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5435  003CB6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5436  003CBA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5437  003CBE  CFDE FFF6          	movff	postinc2,tblptrl
  5438  003CC2  CFDD FFF7          	movff	postdec2,tblptrh
  5439  003CC6                     	if	0	;tblptru may be non-zero
  5440  003CC6                     	endif
  5441  003CC6                     	if	0	;tblptru may be non-zero
  5442  003CC6                     	endif
  5443  003CC6  0008               	tblrd		*
  5444  003CC8  50F5               	movf	tablat,w,c
  5445  003CCA  0A64               	xorlw	100
  5446  003CCC  B4D8               	btfsc	status,2,c
  5447  003CCE  EF6B  F01E         	goto	u3871
  5448  003CD2  EF6D  F01E         	goto	u3870
  5449  003CD6                     u3871:
  5450  003CD6  EF7F  F01E         	goto	l3912
  5451  003CDA                     u3870:
  5452  003CDA                     
  5453                           ; BSR set to: 0
  5454  003CDA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5455  003CDE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5456  003CE2  CFDE FFF6          	movff	postinc2,tblptrl
  5457  003CE6  CFDD FFF7          	movff	postdec2,tblptrh
  5458  003CEA                     	if	0	;tblptru may be non-zero
  5459  003CEA                     	endif
  5460  003CEA                     	if	0	;tblptru may be non-zero
  5461  003CEA                     	endif
  5462  003CEA  0008               	tblrd		*
  5463  003CEC  50F5               	movf	tablat,w,c
  5464  003CEE  0A69               	xorlw	105
  5465  003CF0  A4D8               	btfss	status,2,c
  5466  003CF2  EF7D  F01E         	goto	u3881
  5467  003CF6  EF7F  F01E         	goto	u3880
  5468  003CFA                     u3881:
  5469  003CFA  EFBF  F01E         	goto	l3918
  5470  003CFE                     u3880:
  5471  003CFE                     l3912:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5475  003CFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5476  003D02  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5477  003D06  2ADE               	incf	postinc2,f,c
  5478  003D08  0E00               	movlw	0
  5479  003D0A  22DD               	addwfc	postdec2,f,c
  5480                           
  5481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5482  003D0C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5483  003D10  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5484  003D14  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5485  003D18  0E02               	movlw	2
  5486  003D1A  26DE               	addwf	postinc2,f,c
  5487  003D1C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5488  003D20  0E00               	movlw	0
  5489  003D22  22DD               	addwfc	postdec2,f,c
  5490  003D24  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5491  003D28  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5492  003D2C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5493  003D30  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5494  003D34  0E00               	movlw	0
  5495  003D36  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5496  003D38  0EFF               	movlw	-1
  5497  003D3A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5498  003D3C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5499  003D3E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5500  003D40  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5501  003D42  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5502  003D44  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5503  003D46                     
  5504                           ; BSR set to: 0
  5505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5506  003D46  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5507  003D4A  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5508  003D4E  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5509  003D52  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5510  003D56  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5511  003D5A  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5512  003D5E  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5513  003D62  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5514  003D66  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5515  003D6A  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5516  003D6E  EC6F  F018         	call	_dtoa	;wreg free
  5517  003D72  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5518  003D76  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5519  003D7A  EF10  F01F         	goto	l1374
  5520  003D7E                     l3918:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5524  003D7E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5525  003D82  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5526  003D86  CFDE FFF6          	movff	postinc2,tblptrl
  5527  003D8A  CFDD FFF7          	movff	postdec2,tblptrh
  5528  003D8E                     	if	0	;tblptru may be non-zero
  5529  003D8E                     	endif
  5530  003D8E                     	if	0	;tblptru may be non-zero
  5531  003D8E                     	endif
  5532  003D8E  0008               	tblrd		*
  5533  003D90  50F5               	movf	tablat,w,c
  5534  003D92  0A25               	xorlw	37
  5535  003D94  A4D8               	btfss	status,2,c
  5536  003D96  EFCF  F01E         	goto	u3891
  5537  003D9A  EFD1  F01E         	goto	u3890
  5538  003D9E                     u3891:
  5539  003D9E  EFE8  F01E         	goto	l3928
  5540  003DA2                     u3890:
  5541  003DA2                     
  5542                           ; BSR set to: 0
  5543                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5544  003DA2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5545  003DA6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5546  003DAA  2ADE               	incf	postinc2,f,c
  5547  003DAC  0E00               	movlw	0
  5548  003DAE  22DD               	addwfc	postdec2,f,c
  5549  003DB0                     
  5550                           ; BSR set to: 0
  5551                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5552  003DB0  0E00               	movlw	0
  5553  003DB2  6E02               	movwf	(fputc@c+1)^0,c
  5554  003DB4  0E25               	movlw	37
  5555  003DB6  6E01               	movwf	fputc@c^0,c
  5556  003DB8  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5557  003DBC  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5558  003DC0  EC3C  F028         	call	_fputc	;wreg free
  5559  003DC4                     l3924:
  5560                           
  5561                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5562  003DC4  0E00               	movlw	0
  5563  003DC6  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5564  003DC8  0E01               	movlw	1
  5565  003DCA  6E40               	movwf	?_vfpfcnvrt^0,c
  5566  003DCC  EF10  F01F         	goto	l1374
  5567  003DD0                     l3928:
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5571  003DD0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5572  003DD4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5573  003DD8  2ADE               	incf	postinc2,f,c
  5574  003DDA  0E00               	movlw	0
  5575  003DDC  22DD               	addwfc	postdec2,f,c
  5576  003DDE                     
  5577                           ; BSR set to: 0
  5578                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5579  003DDE  0E00               	movlw	0
  5580  003DE0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5581  003DE2  0E00               	movlw	0
  5582  003DE4  6E40               	movwf	?_vfpfcnvrt^0,c
  5583  003DE6  EF10  F01F         	goto	l1374
  5584  003DEA                     l3934:
  5585                           
  5586                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5587  003DEA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5588  003DEE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5589  003DF2  CFDE FFF6          	movff	postinc2,tblptrl
  5590  003DF6  CFDD FFF7          	movff	postdec2,tblptrh
  5591  003DFA                     	if	0	;tblptru may be non-zero
  5592  003DFA                     	endif
  5593  003DFA                     	if	0	;tblptru may be non-zero
  5594  003DFA                     	endif
  5595  003DFA  0008               	tblrd		*
  5596  003DFC  50F5               	movf	tablat,w,c
  5597  003DFE  6E01               	movwf	fputc@c^0,c
  5598  003E00  6A02               	clrf	(fputc@c+1)^0,c
  5599  003E02  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5600  003E06  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5601  003E0A  EC3C  F028         	call	_fputc	;wreg free
  5602  003E0E                     
  5603                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5604  003E0E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5605  003E12  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5606  003E16  2ADE               	incf	postinc2,f,c
  5607  003E18  0E00               	movlw	0
  5608  003E1A  22DD               	addwfc	postdec2,f,c
  5609  003E1C  EFE2  F01E         	goto	l3924
  5610  003E20                     l1374:
  5611  003E20  0012               	return		;funcret
  5612  003E22                     __end_of_vfpfcnvrt:
  5613                           	callstack 0
  5614                           
  5615 ;; *************** function _dtoa *****************
  5616 ;; Defined at:
  5617 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5620 ;;		 -> sprintf@f(11), 
  5621 ;;  d               8   29[COMRAM] long long 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  n               8   53[COMRAM] long long 
  5624 ;;  i               2   61[COMRAM] int 
  5625 ;;  s               2   51[COMRAM] int 
  5626 ;;  w               2   49[COMRAM] int 
  5627 ;;  p               2   47[COMRAM] int 
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  2   27[COMRAM] int 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5637 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;Total ram usage:       36 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 5
  5644 ;; This function calls:
  5645 ;;		___aodiv
  5646 ;;		___aomod
  5647 ;;		_abs
  5648 ;;		_pad
  5649 ;; This function is called by:
  5650 ;;		_vfpfcnvrt
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text16
  5655  0030DE                     __ptext16:
  5656                           	callstack 0
  5657  0030DE                     _dtoa:
  5658                           	callstack 20
  5659  0030DE                     
  5660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5661  0030DE  C01E  F036         	movff	dtoa@d,dtoa@n
  5662  0030E2  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5663  0030E6  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5664  0030EA  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5665  0030EE  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5666  0030F2  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5667  0030F6  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5668  0030FA  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5669  0030FE                     
  5670                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5671  0030FE  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5672  003100  EF84  F018         	goto	u3261
  5673  003104  EF87  F018         	goto	u3260
  5674  003108                     u3261:
  5675  003108  0E01               	movlw	1
  5676  00310A  EF88  F018         	goto	u3270
  5677  00310E                     u3260:
  5678  00310E  0E00               	movlw	0
  5679  003110                     u3270:
  5680  003110  6E34               	movwf	dtoa@s^0,c
  5681  003112  6A35               	clrf	(dtoa@s+1)^0,c
  5682                           
  5683                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5684  003114  5034               	movf	dtoa@s^0,w,c
  5685  003116  1035               	iorwf	(dtoa@s+1)^0,w,c
  5686  003118  B4D8               	btfsc	status,2,c
  5687  00311A  EF91  F018         	goto	u3281
  5688  00311E  EF93  F018         	goto	u3280
  5689  003122                     u3281:
  5690  003122  EFA3  F018         	goto	l3624
  5691  003126                     u3280:
  5692  003126                     
  5693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5694  003126  1E3D               	comf	(dtoa@n+7)^0,f,c
  5695  003128  1E3C               	comf	(dtoa@n+6)^0,f,c
  5696  00312A  1E3B               	comf	(dtoa@n+5)^0,f,c
  5697  00312C  1E3A               	comf	(dtoa@n+4)^0,f,c
  5698  00312E  1E39               	comf	(dtoa@n+3)^0,f,c
  5699  003130  1E38               	comf	(dtoa@n+2)^0,f,c
  5700  003132  1E37               	comf	(dtoa@n+1)^0,f,c
  5701  003134  6C36               	negf	dtoa@n^0,c
  5702  003136  0E00               	movlw	0
  5703  003138  2237               	addwfc	(dtoa@n+1)^0,f,c
  5704  00313A  2238               	addwfc	(dtoa@n+2)^0,f,c
  5705  00313C  2239               	addwfc	(dtoa@n+3)^0,f,c
  5706  00313E  223A               	addwfc	(dtoa@n+4)^0,f,c
  5707  003140  223B               	addwfc	(dtoa@n+5)^0,f,c
  5708  003142  223C               	addwfc	(dtoa@n+6)^0,f,c
  5709  003144  223D               	addwfc	(dtoa@n+7)^0,f,c
  5710  003146                     l3624:
  5711                           
  5712                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5713  003146  0100               	movlb	0	; () banked
  5714  003148  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  5715  00314A  EFA9  F018         	goto	u3291
  5716  00314E  EFAB  F018         	goto	u3290
  5717  003152                     u3291:
  5718  003152  EFAC  F018         	goto	l3628
  5719  003156                     u3290:
  5720  003156                     
  5721                           ; BSR set to: 0
  5722                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5723  003156  93FC               	bcf	_flags& (0+255),1,b
  5724  003158                     l3628:
  5725                           
  5726                           ; BSR set to: 0
  5727                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5728  003158  BFFB               	btfsc	(_prec+1)& (0+255),7,b
  5729  00315A  EFB9  F018         	goto	u3300
  5730  00315E  51FB               	movf	(_prec+1)& (0+255),w,b
  5731  003160  E106               	bnz	u3301
  5732  003162  05FA               	decf	_prec& (0+255),w,b
  5733  003164  B0D8               	btfsc	status,0,c
  5734  003166  EFB7  F018         	goto	u3301
  5735  00316A  EFB9  F018         	goto	u3300
  5736  00316E                     u3301:
  5737  00316E  EFBF  F018         	goto	l1347
  5738  003172                     u3300:
  5739  003172                     
  5740                           ; BSR set to: 0
  5741  003172  0E00               	movlw	0
  5742  003174  6E31               	movwf	(dtoa@p+1)^0,c
  5743  003176  0E01               	movlw	1
  5744  003178  6E30               	movwf	dtoa@p^0,c
  5745  00317A  EFC3  F018         	goto	l1349
  5746  00317E                     l1347:
  5747                           
  5748                           ; BSR set to: 0
  5749  00317E  C0FA  F030         	movff	_prec,dtoa@p
  5750  003182  C0FB  F031         	movff	_prec+1,dtoa@p+1
  5751  003186                     l1349:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5755  003186  C140  F032         	movff	_width,dtoa@w
  5756  00318A  C141  F033         	movff	_width+1,dtoa@w+1
  5757  00318E                     
  5758                           ; BSR set to: 0
  5759                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5760  00318E  5034               	movf	dtoa@s^0,w,c
  5761  003190  1035               	iorwf	(dtoa@s+1)^0,w,c
  5762  003192  A4D8               	btfss	status,2,c
  5763  003194  EFCE  F018         	goto	u3311
  5764  003198  EFD0  F018         	goto	u3310
  5765  00319C                     u3311:
  5766  00319C  EFD7  F018         	goto	l3636
  5767  0031A0                     u3310:
  5768  0031A0                     
  5769                           ; BSR set to: 0
  5770  0031A0  A5FC               	btfss	_flags& (0+255),2,b
  5771  0031A2  EFD5  F018         	goto	u3321
  5772  0031A6  EFD7  F018         	goto	u3320
  5773  0031AA                     u3321:
  5774  0031AA  EFDA  F018         	goto	l3638
  5775  0031AE                     u3320:
  5776  0031AE                     l3636:
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5780  0031AE  0632               	decf	dtoa@w^0,f,c
  5781  0031B0  A0D8               	btfss	status,0,c
  5782  0031B2  0633               	decf	(dtoa@w+1)^0,f,c
  5783  0031B4                     l3638:
  5784                           
  5785                           ; BSR set to: 0
  5786                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5787  0031B4  0E00               	movlw	0
  5788  0031B6  6E3F               	movwf	(dtoa@i+1)^0,c
  5789  0031B8  0E1F               	movlw	31
  5790  0031BA  6E3E               	movwf	dtoa@i^0,c
  5791  0031BC                     
  5792                           ; BSR set to: 0
  5793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5794  0031BC  0E00               	movlw	0
  5795  0031BE  0101               	movlb	1	; () banked
  5796  0031C0  6F65               	movwf	(_dbuf+31)& (0+255),b
  5797                           
  5798                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5799  0031C2  EF5F  F019         	goto	l3652
  5800  0031C6                     l3642:
  5801                           
  5802                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  5803  0031C6  063E               	decf	dtoa@i^0,f,c
  5804  0031C8  A0D8               	btfss	status,0,c
  5805  0031CA  063F               	decf	(dtoa@i+1)^0,f,c
  5806  0031CC                     
  5807                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5808  0031CC  0E46               	movlw	low _dbuf
  5809  0031CE  243E               	addwf	dtoa@i^0,w,c
  5810  0031D0  6ED9               	movwf	fsr2l,c
  5811  0031D2  0E01               	movlw	high _dbuf
  5812  0031D4  203F               	addwfc	(dtoa@i+1)^0,w,c
  5813  0031D6  6EDA               	movwf	fsr2h,c
  5814  0031D8  C036  F001         	movff	dtoa@n,___aomod@dividend
  5815  0031DC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5816  0031E0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5817  0031E4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5818  0031E8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5819  0031EC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5820  0031F0  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5821  0031F4  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5822  0031F8  0E0A               	movlw	10
  5823  0031FA  6E09               	movwf	___aomod@divisor^0,c
  5824  0031FC  0E00               	movlw	0
  5825  0031FE  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5826  003200  0E00               	movlw	0
  5827  003202  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5828  003204  0E00               	movlw	0
  5829  003206  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5830  003208  0E00               	movlw	0
  5831  00320A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5832  00320C  0E00               	movlw	0
  5833  00320E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5834  003210  0E00               	movlw	0
  5835  003212  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5836  003214  0E00               	movlw	0
  5837  003216  6E10               	movwf	(___aomod@divisor+7)^0,c
  5838  003218  EC24  F023         	call	___aomod	;wreg free
  5839  00321C  C001  F026         	movff	?___aomod,??_dtoa
  5840  003220  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5841  003224  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5842  003228  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5843  00322C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5844  003230  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5845  003234  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5846  003238  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5847  00323C  C026  F013         	movff	??_dtoa,abs@a
  5848  003240  C028  F014         	movff	??_dtoa+2,abs@a+1
  5849  003244  ECF1  F02C         	call	_abs	;wreg free
  5850  003248  5013               	movf	?_abs^0,w,c
  5851  00324A  0F30               	addlw	48
  5852  00324C  6EDF               	movwf	indf2,c
  5853  00324E                     
  5854                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  5855  00324E  0630               	decf	dtoa@p^0,f,c
  5856  003250  A0D8               	btfss	status,0,c
  5857  003252  0631               	decf	(dtoa@p+1)^0,f,c
  5858  003254                     
  5859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  5860  003254  0632               	decf	dtoa@w^0,f,c
  5861  003256  A0D8               	btfss	status,0,c
  5862  003258  0633               	decf	(dtoa@w+1)^0,f,c
  5863  00325A                     
  5864                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5865  00325A  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5866  00325E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5867  003262  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5868  003266  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5869  00326A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5870  00326E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5871  003272  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5872  003276  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5873  00327A  0E0A               	movlw	10
  5874  00327C  6E09               	movwf	___aodiv@divisor^0,c
  5875  00327E  0E00               	movlw	0
  5876  003280  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5877  003282  0E00               	movlw	0
  5878  003284  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5879  003286  0E00               	movlw	0
  5880  003288  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5881  00328A  0E00               	movlw	0
  5882  00328C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5883  00328E  0E00               	movlw	0
  5884  003290  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5885  003292  0E00               	movlw	0
  5886  003294  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5887  003296  0E00               	movlw	0
  5888  003298  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5889  00329A  EC60  F022         	call	___aodiv	;wreg free
  5890  00329E  C001  F036         	movff	?___aodiv,dtoa@n
  5891  0032A2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5892  0032A6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5893  0032AA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5894  0032AE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5895  0032B2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5896  0032B6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5897  0032BA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5898  0032BE                     l3652:
  5899                           
  5900                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5901  0032BE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5902  0032C0  EF6A  F019         	goto	u3331
  5903  0032C4  503F               	movf	(dtoa@i+1)^0,w,c
  5904  0032C6  E108               	bnz	u3330
  5905  0032C8  043E               	decf	dtoa@i^0,w,c
  5906  0032CA  A0D8               	btfss	status,0,c
  5907  0032CC  EF6A  F019         	goto	u3331
  5908  0032D0  EF6C  F019         	goto	u3330
  5909  0032D4                     u3331:
  5910  0032D4  EF9D  F019         	goto	l3662
  5911  0032D8                     u3330:
  5912  0032D8  5036               	movf	dtoa@n^0,w,c
  5913  0032DA  1037               	iorwf	(dtoa@n+1)^0,w,c
  5914  0032DC  1038               	iorwf	(dtoa@n+2)^0,w,c
  5915  0032DE  1039               	iorwf	(dtoa@n+3)^0,w,c
  5916  0032E0  103A               	iorwf	(dtoa@n+4)^0,w,c
  5917  0032E2  103B               	iorwf	(dtoa@n+5)^0,w,c
  5918  0032E4  103C               	iorwf	(dtoa@n+6)^0,w,c
  5919  0032E6  103D               	iorwf	(dtoa@n+7)^0,w,c
  5920  0032E8  A4D8               	btfss	status,2,c
  5921  0032EA  EF79  F019         	goto	u3341
  5922  0032EE  EF7B  F019         	goto	u3340
  5923  0032F2                     u3341:
  5924  0032F2  EFE3  F018         	goto	l3642
  5925  0032F6                     u3340:
  5926  0032F6  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5927  0032F8  EF88  F019         	goto	u3350
  5928  0032FC  5031               	movf	(dtoa@p+1)^0,w,c
  5929  0032FE  E106               	bnz	u3351
  5930  003300  0430               	decf	dtoa@p^0,w,c
  5931  003302  B0D8               	btfsc	status,0,c
  5932  003304  EF86  F019         	goto	u3351
  5933  003308  EF88  F019         	goto	u3350
  5934  00330C                     u3351:
  5935  00330C  EFE3  F018         	goto	l3642
  5936  003310                     u3350:
  5937  003310  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5938  003312  EF93  F019         	goto	u3361
  5939  003316  5033               	movf	(dtoa@w+1)^0,w,c
  5940  003318  E108               	bnz	u3360
  5941  00331A  0432               	decf	dtoa@w^0,w,c
  5942  00331C  A0D8               	btfss	status,0,c
  5943  00331E  EF93  F019         	goto	u3361
  5944  003322  EF95  F019         	goto	u3360
  5945  003326                     u3361:
  5946  003326  EF9D  F019         	goto	l3662
  5947  00332A                     u3360:
  5948  00332A  0100               	movlb	0	; () banked
  5949  00332C  B3FC               	btfsc	_flags& (0+255),1,b
  5950  00332E  EF9B  F019         	goto	u3371
  5951  003332  EF9D  F019         	goto	u3370
  5952  003336                     u3371:
  5953  003336  EFE3  F018         	goto	l3642
  5954  00333A                     u3370:
  5955  00333A                     l3662:
  5956                           
  5957                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5958  00333A  5034               	movf	dtoa@s^0,w,c
  5959  00333C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5960  00333E  A4D8               	btfss	status,2,c
  5961  003340  EFA4  F019         	goto	u3381
  5962  003344  EFA6  F019         	goto	u3380
  5963  003348                     u3381:
  5964  003348  EFAE  F019         	goto	l3666
  5965  00334C                     u3380:
  5966  00334C  0100               	movlb	0	; () banked
  5967  00334E  A5FC               	btfss	_flags& (0+255),2,b
  5968  003350  EFAC  F019         	goto	u3391
  5969  003354  EFAE  F019         	goto	u3390
  5970  003358                     u3391:
  5971  003358  EFCC  F019         	goto	l3676
  5972  00335C                     u3390:
  5973  00335C                     l3666:
  5974                           
  5975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  5976  00335C  063E               	decf	dtoa@i^0,f,c
  5977  00335E  A0D8               	btfss	status,0,c
  5978  003360  063F               	decf	(dtoa@i+1)^0,f,c
  5979  003362                     
  5980                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5981  003362  5034               	movf	dtoa@s^0,w,c
  5982  003364  1035               	iorwf	(dtoa@s+1)^0,w,c
  5983  003366  A4D8               	btfss	status,2,c
  5984  003368  EFB8  F019         	goto	u3401
  5985  00336C  EFBA  F019         	goto	u3400
  5986  003370                     u3401:
  5987  003370  EFC0  F019         	goto	l3672
  5988  003374                     u3400:
  5989  003374  0E00               	movlw	0
  5990  003376  6E2F               	movwf	(_dtoa$2616+1)^0,c
  5991  003378  0E2B               	movlw	43
  5992  00337A  6E2E               	movwf	_dtoa$2616^0,c
  5993  00337C  EFC4  F019         	goto	l3674
  5994  003380                     l3672:
  5995  003380  0E00               	movlw	0
  5996  003382  6E2F               	movwf	(_dtoa$2616+1)^0,c
  5997  003384  0E2D               	movlw	45
  5998  003386  6E2E               	movwf	_dtoa$2616^0,c
  5999  003388                     l3674:
  6000  003388  0E46               	movlw	low _dbuf
  6001  00338A  243E               	addwf	dtoa@i^0,w,c
  6002  00338C  6ED9               	movwf	fsr2l,c
  6003  00338E  0E01               	movlw	high _dbuf
  6004  003390  203F               	addwfc	(dtoa@i+1)^0,w,c
  6005  003392  6EDA               	movwf	fsr2h,c
  6006  003394  C02E  FFDF         	movff	_dtoa$2616,indf2
  6007  003398                     l3676:
  6008                           
  6009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6010  003398  C01C  F011         	movff	dtoa@fp,pad@fp
  6011  00339C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6012  0033A0  0E46               	movlw	low _dbuf
  6013  0033A2  243E               	addwf	dtoa@i^0,w,c
  6014  0033A4  6E13               	movwf	pad@buf^0,c
  6015  0033A6  0E01               	movlw	high _dbuf
  6016  0033A8  203F               	addwfc	(dtoa@i+1)^0,w,c
  6017  0033AA  6E14               	movwf	(pad@buf+1)^0,c
  6018  0033AC  C032  F015         	movff	dtoa@w,pad@p
  6019  0033B0  C033  F016         	movff	dtoa@w+1,pad@p+1
  6020  0033B4  EC04  F029         	call	_pad	;wreg free
  6021  0033B8  C011  F01C         	movff	?_pad,?_dtoa
  6022  0033BC  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6023  0033C0  0012               	return		;funcret
  6024  0033C2                     __end_of_dtoa:
  6025                           	callstack 0
  6026                           
  6027 ;; *************** function _pad *****************
  6028 ;; Defined at:
  6029 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6032 ;;		 -> sprintf@f(11), 
  6033 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6034 ;;		 -> dbuf(32), 
  6035 ;;  p               2   20[COMRAM] int 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  w               2   25[COMRAM] int 
  6038 ;;  i               2   23[COMRAM] int 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  2   16[COMRAM] int 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6048 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;Total ram usage:       11 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 4
  6055 ;; This function calls:
  6056 ;;		_fputc
  6057 ;;		_fputs
  6058 ;;		_strlen
  6059 ;; This function is called by:
  6060 ;;		_dtoa
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text17
  6065  005208                     __ptext17:
  6066                           	callstack 0
  6067  005208                     _pad:
  6068                           	callstack 20
  6069  005208                     
  6070                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6071  005208  0100               	movlb	0	; () banked
  6072  00520A  A1FC               	btfss	_flags& (0+255),0,b
  6073  00520C  EF0A  F029         	goto	u3151
  6074  005210  EF0C  F029         	goto	u3150
  6075  005214                     u3151:
  6076  005214  EF16  F029         	goto	l3546
  6077  005218                     u3150:
  6078  005218                     
  6079                           ; BSR set to: 0
  6080                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6081  005218  C013  F00A         	movff	pad@buf,fputs@s
  6082  00521C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6083  005220  C011  F00C         	movff	pad@fp,fputs@fp
  6084  005224  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6085  005228  EC4C  F02C         	call	_fputs	;wreg free
  6086  00522C                     l3546:
  6087                           
  6088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6089  00522C  BE16               	btfsc	(pad@p+1)^0,7,c
  6090  00522E  EF1B  F029         	goto	u3161
  6091  005232  EF1D  F029         	goto	u3160
  6092  005236                     u3161:
  6093  005236  EF23  F029         	goto	l3550
  6094  00523A                     u3160:
  6095  00523A  C015  F01A         	movff	pad@p,pad@w
  6096  00523E  C016  F01B         	movff	pad@p+1,pad@w+1
  6097  005242  EF27  F029         	goto	l1336
  6098  005246                     l3550:
  6099  005246  0E00               	movlw	0
  6100  005248  6E1B               	movwf	(pad@w+1)^0,c
  6101  00524A  0E00               	movlw	0
  6102  00524C  6E1A               	movwf	pad@w^0,c
  6103  00524E                     l1336:
  6104                           
  6105                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6106  00524E  0E00               	movlw	0
  6107  005250  6E19               	movwf	(pad@i+1)^0,c
  6108  005252  0E00               	movlw	0
  6109  005254  6E18               	movwf	pad@i^0,c
  6110                           
  6111                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6112  005256  EF39  F029         	goto	l3556
  6113  00525A                     l3552:
  6114                           
  6115                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6116  00525A  0E00               	movlw	0
  6117  00525C  6E02               	movwf	(fputc@c+1)^0,c
  6118  00525E  0E20               	movlw	32
  6119  005260  6E01               	movwf	fputc@c^0,c
  6120  005262  C011  F003         	movff	pad@fp,fputc@fp
  6121  005266  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6122  00526A  EC3C  F028         	call	_fputc	;wreg free
  6123  00526E                     
  6124                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6125  00526E  4A18               	infsnz	pad@i^0,f,c
  6126  005270  2A19               	incf	(pad@i+1)^0,f,c
  6127  005272                     l3556:
  6128                           
  6129                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6130  005272  501A               	movf	pad@w^0,w,c
  6131  005274  5C18               	subwf	pad@i^0,w,c
  6132  005276  5019               	movf	(pad@i+1)^0,w,c
  6133  005278  0A80               	xorlw	128
  6134  00527A  6E17               	movwf	??_pad^0,c
  6135  00527C  501B               	movf	(pad@w+1)^0,w,c
  6136  00527E  0A80               	xorlw	128
  6137  005280  5817               	subwfb	??_pad^0,w,c
  6138  005282  A0D8               	btfss	status,0,c
  6139  005284  EF46  F029         	goto	u3171
  6140  005288  EF48  F029         	goto	u3170
  6141  00528C                     u3171:
  6142  00528C  EF2D  F029         	goto	l3552
  6143  005290                     u3170:
  6144  005290                     
  6145                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6146  005290  0100               	movlb	0	; () banked
  6147  005292  B1FC               	btfsc	_flags& (0+255),0,b
  6148  005294  EF4E  F029         	goto	u3181
  6149  005298  EF50  F029         	goto	u3180
  6150  00529C                     u3181:
  6151  00529C  EF5A  F029         	goto	l3560
  6152  0052A0                     u3180:
  6153  0052A0                     
  6154                           ; BSR set to: 0
  6155                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6156  0052A0  C013  F00A         	movff	pad@buf,fputs@s
  6157  0052A4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6158  0052A8  C011  F00C         	movff	pad@fp,fputs@fp
  6159  0052AC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6160  0052B0  EC4C  F02C         	call	_fputs	;wreg free
  6161  0052B4                     l3560:
  6162                           
  6163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6164  0052B4  C013  F001         	movff	pad@buf,strlen@s
  6165  0052B8  C014  F002         	movff	pad@buf+1,strlen@s+1
  6166  0052BC  EC67  F02D         	call	_strlen	;wreg free
  6167  0052C0  501A               	movf	pad@w^0,w,c
  6168  0052C2  2401               	addwf	?_strlen^0,w,c
  6169  0052C4  6E11               	movwf	?_pad^0,c
  6170  0052C6  501B               	movf	(pad@w+1)^0,w,c
  6171  0052C8  2002               	addwfc	(?_strlen+1)^0,w,c
  6172  0052CA  6E12               	movwf	(?_pad+1)^0,c
  6173  0052CC  0012               	return		;funcret
  6174  0052CE                     __end_of_pad:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function _strlen *****************
  6178 ;; Defined at:
  6179 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6182 ;;		 -> dbuf(32), 
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6185 ;;		 -> dbuf(32), 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  2    0[COMRAM] unsigned int 
  6188 ;; Registers used:
  6189 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;Total ram usage:        4 bytes
  6200 ;; Hardware stack levels used: 1
  6201 ;; Hardware stack levels required when called: 1
  6202 ;; This function calls:
  6203 ;;		Nothing
  6204 ;; This function is called by:
  6205 ;;		_pad
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text18
  6210  005ACE                     __ptext18:
  6211                           	callstack 0
  6212  005ACE                     _strlen:
  6213                           	callstack 22
  6214  005ACE  C001  F003         	movff	strlen@s,strlen@a
  6215  005AD2  C002  F004         	movff	strlen@s+1,strlen@a+1
  6216  005AD6  EF6F  F02D         	goto	l3456
  6217  005ADA                     l3454:
  6218  005ADA  4A01               	infsnz	strlen@s^0,f,c
  6219  005ADC  2A02               	incf	(strlen@s+1)^0,f,c
  6220  005ADE                     l3456:
  6221  005ADE  C001  FFD9         	movff	strlen@s,fsr2l
  6222  005AE2  C002  FFDA         	movff	strlen@s+1,fsr2h
  6223  005AE6  50DF               	movf	indf2,w,c
  6224  005AE8  A4D8               	btfss	status,2,c
  6225  005AEA  EF79  F02D         	goto	u3011
  6226  005AEE  EF7B  F02D         	goto	u3010
  6227  005AF2                     u3011:
  6228  005AF2  EF6D  F02D         	goto	l3454
  6229  005AF6                     u3010:
  6230  005AF6  5003               	movf	strlen@a^0,w,c
  6231  005AF8  5C01               	subwf	strlen@s^0,w,c
  6232  005AFA  6E01               	movwf	?_strlen^0,c
  6233  005AFC  5004               	movf	(strlen@a+1)^0,w,c
  6234  005AFE  5802               	subwfb	(strlen@s+1)^0,w,c
  6235  005B00  6E02               	movwf	(?_strlen+1)^0,c
  6236  005B02  0012               	return		;funcret
  6237  005B04                     __end_of_strlen:
  6238                           	callstack 0
  6239                           
  6240 ;; *************** function _fputs *****************
  6241 ;; Defined at:
  6242 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6245 ;;		 -> dbuf(32), 
  6246 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6247 ;;		 -> sprintf@f(11), 
  6248 ;; Auto vars:     Size  Location     Type
  6249 ;;  i               2   14[COMRAM] int 
  6250 ;;  c               1   13[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  2    9[COMRAM] int 
  6253 ;; Registers used:
  6254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;Total ram usage:        7 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; Hardware stack levels required when called: 3
  6267 ;; This function calls:
  6268 ;;		_fputc
  6269 ;; This function is called by:
  6270 ;;		_pad
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text19
  6275  005898                     __ptext19:
  6276                           	callstack 0
  6277  005898                     _fputs:
  6278                           	callstack 20
  6279  005898  0E00               	movlw	0
  6280  00589A  6E10               	movwf	(fputs@i+1)^0,c
  6281  00589C  0E00               	movlw	0
  6282  00589E  6E0F               	movwf	fputs@i^0,c
  6283  0058A0  EF5D  F02C         	goto	l3450
  6284  0058A4                     l3446:
  6285  0058A4  C00E  F001         	movff	fputs@c,fputc@c
  6286  0058A8  6A02               	clrf	(fputc@c+1)^0,c
  6287  0058AA  C00C  F003         	movff	fputs@fp,fputc@fp
  6288  0058AE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6289  0058B2  EC3C  F028         	call	_fputc	;wreg free
  6290  0058B6  4A0F               	infsnz	fputs@i^0,f,c
  6291  0058B8  2A10               	incf	(fputs@i+1)^0,f,c
  6292  0058BA                     l3450:
  6293  0058BA  500F               	movf	fputs@i^0,w,c
  6294  0058BC  240A               	addwf	fputs@s^0,w,c
  6295  0058BE  6ED9               	movwf	fsr2l,c
  6296  0058C0  5010               	movf	(fputs@i+1)^0,w,c
  6297  0058C2  200B               	addwfc	(fputs@s+1)^0,w,c
  6298  0058C4  6EDA               	movwf	fsr2h,c
  6299  0058C6  50DF               	movf	indf2,w,c
  6300  0058C8  6E0E               	movwf	fputs@c^0,c
  6301  0058CA  500E               	movf	fputs@c^0,w,c
  6302  0058CC  A4D8               	btfss	status,2,c
  6303  0058CE  EF6B  F02C         	goto	u3001
  6304  0058D2  EF6D  F02C         	goto	u3000
  6305  0058D6                     u3001:
  6306  0058D6  EF52  F02C         	goto	l3446
  6307  0058DA                     u3000:
  6308  0058DA  0012               	return		;funcret
  6309  0058DC                     __end_of_fputs:
  6310                           	callstack 0
  6311                           
  6312 ;; *************** function _fputc *****************
  6313 ;; Defined at:
  6314 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  c               2    0[COMRAM] int 
  6317 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6318 ;;		 -> sprintf@f(11), 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;		None
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  2    0[COMRAM] int 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;Total ram usage:        9 bytes
  6335 ;; Hardware stack levels used: 1
  6336 ;; Hardware stack levels required when called: 2
  6337 ;; This function calls:
  6338 ;;		_putch
  6339 ;; This function is called by:
  6340 ;;		_pad
  6341 ;;		_vfpfcnvrt
  6342 ;;		_fputs
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text20
  6347  005078                     __ptext20:
  6348                           	callstack 0
  6349  005078                     _fputc:
  6350                           	callstack 23
  6351  005078  5003               	movf	fputc@fp^0,w,c
  6352  00507A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6353  00507C  B4D8               	btfsc	status,2,c
  6354  00507E  EF43  F028         	goto	u2961
  6355  005082  EF45  F028         	goto	u2960
  6356  005086                     u2961:
  6357  005086  EF4E  F028         	goto	l3434
  6358  00508A                     u2960:
  6359  00508A  5003               	movf	fputc@fp^0,w,c
  6360  00508C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6361  00508E  A4D8               	btfss	status,2,c
  6362  005090  EF4C  F028         	goto	u2971
  6363  005094  EF4E  F028         	goto	u2970
  6364  005098                     u2971:
  6365  005098  EF53  F028         	goto	l3436
  6366  00509C                     u2970:
  6367  00509C                     l3434:
  6368  00509C  5001               	movf	fputc@c^0,w,c
  6369  00509E  ECC7  F02E         	call	_putch
  6370  0050A2  EFA0  F028         	goto	l1400
  6371  0050A6                     l3436:
  6372  0050A6  EE20 F009          	lfsr	2,9
  6373  0050AA  5003               	movf	fputc@fp^0,w,c
  6374  0050AC  26D9               	addwf	fsr2l,f,c
  6375  0050AE  5004               	movf	(fputc@fp+1)^0,w,c
  6376  0050B0  22DA               	addwfc	fsr2h,f,c
  6377  0050B2  50DE               	movf	postinc2,w,c
  6378  0050B4  10DE               	iorwf	postinc2,w,c
  6379  0050B6  B4D8               	btfsc	status,2,c
  6380  0050B8  EF60  F028         	goto	u2981
  6381  0050BC  EF62  F028         	goto	u2980
  6382  0050C0                     u2981:
  6383  0050C0  EF7D  F028         	goto	l3440
  6384  0050C4                     u2980:
  6385  0050C4  EE20 F009          	lfsr	2,9
  6386  0050C8  5003               	movf	fputc@fp^0,w,c
  6387  0050CA  26D9               	addwf	fsr2l,f,c
  6388  0050CC  5004               	movf	(fputc@fp+1)^0,w,c
  6389  0050CE  22DA               	addwfc	fsr2h,f,c
  6390  0050D0  EE10 F003          	lfsr	1,3
  6391  0050D4  5003               	movf	fputc@fp^0,w,c
  6392  0050D6  26E1               	addwf	fsr1l,f,c
  6393  0050D8  5004               	movf	(fputc@fp+1)^0,w,c
  6394  0050DA  22E2               	addwfc	fsr1h,f,c
  6395  0050DC  50DE               	movf	postinc2,w,c
  6396  0050DE  5CE6               	subwf	postinc1,w,c
  6397  0050E0  50E6               	movf	postinc1,w,c
  6398  0050E2  0A80               	xorlw	128
  6399  0050E4  6E09               	movwf	(??_fputc+4)^0,c
  6400  0050E6  50DE               	movf	postinc2,w,c
  6401  0050E8  0A80               	xorlw	128
  6402  0050EA  5809               	subwfb	(??_fputc+4)^0,w,c
  6403  0050EC  B0D8               	btfsc	status,0,c
  6404  0050EE  EF7B  F028         	goto	u2991
  6405  0050F2  EF7D  F028         	goto	u2990
  6406  0050F6                     u2991:
  6407  0050F6  EFA0  F028         	goto	l1400
  6408  0050FA                     u2990:
  6409  0050FA                     l3440:
  6410  0050FA  EE20 F003          	lfsr	2,3
  6411  0050FE  5003               	movf	fputc@fp^0,w,c
  6412  005100  26D9               	addwf	fsr2l,f,c
  6413  005102  5004               	movf	(fputc@fp+1)^0,w,c
  6414  005104  22DA               	addwfc	fsr2h,f,c
  6415  005106  CFDE F005          	movff	postinc2,??_fputc
  6416  00510A  CFDD F006          	movff	postdec2,??_fputc+1
  6417  00510E  C003  FFD9         	movff	fputc@fp,fsr2l
  6418  005112  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6419  005116  CFDE F007          	movff	postinc2,??_fputc+2
  6420  00511A  CFDD F008          	movff	postdec2,??_fputc+3
  6421  00511E  5005               	movf	??_fputc^0,w,c
  6422  005120  2407               	addwf	(??_fputc+2)^0,w,c
  6423  005122  6ED9               	movwf	fsr2l,c
  6424  005124  5006               	movf	(??_fputc+1)^0,w,c
  6425  005126  2008               	addwfc	(??_fputc+3)^0,w,c
  6426  005128  6EDA               	movwf	fsr2h,c
  6427  00512A  C001  FFDF         	movff	fputc@c,indf2
  6428  00512E  EE20 F003          	lfsr	2,3
  6429  005132  5003               	movf	fputc@fp^0,w,c
  6430  005134  26D9               	addwf	fsr2l,f,c
  6431  005136  5004               	movf	(fputc@fp+1)^0,w,c
  6432  005138  22DA               	addwfc	fsr2h,f,c
  6433  00513A  2ADE               	incf	postinc2,f,c
  6434  00513C  0E00               	movlw	0
  6435  00513E  22DD               	addwfc	postdec2,f,c
  6436  005140                     l1400:
  6437  005140  0012               	return		;funcret
  6438  005142                     __end_of_fputc:
  6439                           	callstack 0
  6440                           
  6441 ;; *************** function _putch *****************
  6442 ;; Defined at:
  6443 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6444 ;; Parameters:    Size  Location     Type
  6445 ;;  c               1    wreg     unsigned char 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  c               1    0[COMRAM] unsigned char 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg
  6452 ;; Tracked objects:
  6453 ;;		On entry : 0/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;Total ram usage:        0 bytes
  6462 ;; Hardware stack levels used: 1
  6463 ;; Hardware stack levels required when called: 1
  6464 ;; This function calls:
  6465 ;;		Nothing
  6466 ;; This function is called by:
  6467 ;;		_fputc
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           	psect	text21
  6472  005D8E                     __ptext21:
  6473                           	callstack 0
  6474  005D8E                     _putch:
  6475                           	callstack 23
  6476  005D8E  0012               	return		;funcret
  6477  005D90                     __end_of_putch:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _abs *****************
  6481 ;; Defined at:
  6482 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  a               2   18[COMRAM] int 
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  2   18[COMRAM] int 
  6489 ;; Registers used:
  6490 ;;		wreg, status,2, status,0
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;Total ram usage:        4 bytes
  6501 ;; Hardware stack levels used: 1
  6502 ;; Hardware stack levels required when called: 1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_dtoa
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text22
  6511  0059E2                     __ptext22:
  6512                           	callstack 0
  6513  0059E2                     _abs:
  6514                           	callstack 23
  6515  0059E2  BE14               	btfsc	(abs@a+1)^0,7,c
  6516  0059E4  EFFE  F02C         	goto	u3190
  6517  0059E8  5014               	movf	(abs@a+1)^0,w,c
  6518  0059EA  E106               	bnz	u3191
  6519  0059EC  0413               	decf	abs@a^0,w,c
  6520  0059EE  B0D8               	btfsc	status,0,c
  6521  0059F0  EFFC  F02C         	goto	u3191
  6522  0059F4  EFFE  F02C         	goto	u3190
  6523  0059F8                     u3191:
  6524  0059F8  EF0C  F02D         	goto	l1385
  6525  0059FC                     u3190:
  6526  0059FC  C013  F015         	movff	abs@a,??_abs
  6527  005A00  C014  F016         	movff	abs@a+1,??_abs+1
  6528  005A04  1E15               	comf	??_abs^0,f,c
  6529  005A06  1E16               	comf	(??_abs+1)^0,f,c
  6530  005A08  4A15               	infsnz	??_abs^0,f,c
  6531  005A0A  2A16               	incf	(??_abs+1)^0,f,c
  6532  005A0C  C015  F013         	movff	??_abs,?_abs
  6533  005A10  C016  F014         	movff	??_abs+1,?_abs+1
  6534  005A14  EF10  F02D         	goto	l1388
  6535  005A18                     l1385:
  6536  005A18  C013  F013         	movff	abs@a,?_abs
  6537  005A1C  C014  F014         	movff	abs@a+1,?_abs+1
  6538  005A20                     l1388:
  6539  005A20  0012               	return		;funcret
  6540  005A22                     __end_of_abs:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function ___aomod *****************
  6544 ;; Defined at:
  6545 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  dividend        8    0[COMRAM] long long 
  6548 ;;  divisor         8    8[COMRAM] long long 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  sign            1   17[COMRAM] unsigned char 
  6551 ;;  counter         1   16[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  8    0[COMRAM] long long 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6561 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;Total ram usage:       18 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 1
  6568 ;; This function calls:
  6569 ;;		Nothing
  6570 ;; This function is called by:
  6571 ;;		_dtoa
  6572 ;; This function uses a non-reentrant model
  6573 ;;
  6574                           
  6575                           	psect	text23
  6576  004648                     __ptext23:
  6577                           	callstack 0
  6578  004648                     ___aomod:
  6579                           	callstack 23
  6580  004648  0E00               	movlw	0
  6581  00464A  6E12               	movwf	___aomod@sign^0,c
  6582  00464C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6583  00464E  EF2D  F023         	goto	u3090
  6584  004652  EF2B  F023         	goto	u3091
  6585  004656                     u3091:
  6586  004656  EF3F  F023         	goto	l3514
  6587  00465A                     u3090:
  6588  00465A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6589  00465C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6590  00465E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6591  004660  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6592  004662  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6593  004664  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6594  004666  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6595  004668  6C01               	negf	___aomod@dividend^0,c
  6596  00466A  0E00               	movlw	0
  6597  00466C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6598  00466E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6599  004670  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6600  004672  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6601  004674  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6602  004676  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6603  004678  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6604  00467A  0E01               	movlw	1
  6605  00467C  6E12               	movwf	___aomod@sign^0,c
  6606  00467E                     l3514:
  6607  00467E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6608  004680  EF46  F023         	goto	u3100
  6609  004684  EF44  F023         	goto	u3101
  6610  004688                     u3101:
  6611  004688  EF56  F023         	goto	l3518
  6612  00468C                     u3100:
  6613  00468C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6614  00468E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6615  004690  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6616  004692  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6617  004694  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6618  004696  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6619  004698  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6620  00469A  6C09               	negf	___aomod@divisor^0,c
  6621  00469C  0E00               	movlw	0
  6622  00469E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6623  0046A0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6624  0046A2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6625  0046A4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6626  0046A6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6627  0046A8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6628  0046AA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6629  0046AC                     l3518:
  6630  0046AC  5009               	movf	___aomod@divisor^0,w,c
  6631  0046AE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6632  0046B0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6633  0046B2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6634  0046B4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6635  0046B6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6636  0046B8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6637  0046BA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6638  0046BC  B4D8               	btfsc	status,2,c
  6639  0046BE  EF63  F023         	goto	u3111
  6640  0046C2  EF65  F023         	goto	u3110
  6641  0046C6                     u3111:
  6642  0046C6  EFAD  F023         	goto	l3534
  6643  0046CA                     u3110:
  6644  0046CA  0E01               	movlw	1
  6645  0046CC  6E11               	movwf	___aomod@counter^0,c
  6646  0046CE  EF73  F023         	goto	l3524
  6647  0046D2                     l3522:
  6648  0046D2  90D8               	bcf	status,0,c
  6649  0046D4  3609               	rlcf	___aomod@divisor^0,f,c
  6650  0046D6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6651  0046D8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6652  0046DA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6653  0046DC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6654  0046DE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6655  0046E0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6656  0046E2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6657  0046E4  2A11               	incf	___aomod@counter^0,f,c
  6658  0046E6                     l3524:
  6659  0046E6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6660  0046E8  EF78  F023         	goto	u3121
  6661  0046EC  EF7A  F023         	goto	u3120
  6662  0046F0                     u3121:
  6663  0046F0  EF69  F023         	goto	l3522
  6664  0046F4                     u3120:
  6665  0046F4                     l3526:
  6666  0046F4  5009               	movf	___aomod@divisor^0,w,c
  6667  0046F6  5C01               	subwf	___aomod@dividend^0,w,c
  6668  0046F8  500A               	movf	(___aomod@divisor+1)^0,w,c
  6669  0046FA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6670  0046FC  500B               	movf	(___aomod@divisor+2)^0,w,c
  6671  0046FE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6672  004700  500C               	movf	(___aomod@divisor+3)^0,w,c
  6673  004702  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6674  004704  500D               	movf	(___aomod@divisor+4)^0,w,c
  6675  004706  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6676  004708  500E               	movf	(___aomod@divisor+5)^0,w,c
  6677  00470A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6678  00470C  500F               	movf	(___aomod@divisor+6)^0,w,c
  6679  00470E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6680  004710  5010               	movf	(___aomod@divisor+7)^0,w,c
  6681  004712  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6682  004714  A0D8               	btfss	status,0,c
  6683  004716  EF8F  F023         	goto	u3131
  6684  00471A  EF91  F023         	goto	u3130
  6685  00471E                     u3131:
  6686  00471E  EFA1  F023         	goto	l3530
  6687  004722                     u3130:
  6688  004722  5009               	movf	___aomod@divisor^0,w,c
  6689  004724  5E01               	subwf	___aomod@dividend^0,f,c
  6690  004726  500A               	movf	(___aomod@divisor+1)^0,w,c
  6691  004728  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6692  00472A  500B               	movf	(___aomod@divisor+2)^0,w,c
  6693  00472C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6694  00472E  500C               	movf	(___aomod@divisor+3)^0,w,c
  6695  004730  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6696  004732  500D               	movf	(___aomod@divisor+4)^0,w,c
  6697  004734  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6698  004736  500E               	movf	(___aomod@divisor+5)^0,w,c
  6699  004738  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6700  00473A  500F               	movf	(___aomod@divisor+6)^0,w,c
  6701  00473C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6702  00473E  5010               	movf	(___aomod@divisor+7)^0,w,c
  6703  004740  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6704  004742                     l3530:
  6705  004742  90D8               	bcf	status,0,c
  6706  004744  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6707  004746  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6708  004748  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6709  00474A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6710  00474C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6711  00474E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6712  004750  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6713  004752  3209               	rrcf	___aomod@divisor^0,f,c
  6714  004754  2E11               	decfsz	___aomod@counter^0,f,c
  6715  004756  EF7A  F023         	goto	l3526
  6716  00475A                     l3534:
  6717  00475A  5012               	movf	___aomod@sign^0,w,c
  6718  00475C  B4D8               	btfsc	status,2,c
  6719  00475E  EFB3  F023         	goto	u3141
  6720  004762  EFB5  F023         	goto	u3140
  6721  004766                     u3141:
  6722  004766  EFC5  F023         	goto	l3538
  6723  00476A                     u3140:
  6724  00476A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6725  00476C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6726  00476E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6727  004770  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6728  004772  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6729  004774  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6730  004776  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6731  004778  6C01               	negf	___aomod@dividend^0,c
  6732  00477A  0E00               	movlw	0
  6733  00477C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6734  00477E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6735  004780  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6736  004782  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6737  004784  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6738  004786  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6739  004788  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6740  00478A                     l3538:
  6741  00478A  C001  F001         	movff	___aomod@dividend,?___aomod
  6742  00478E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6743  004792  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6744  004796  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6745  00479A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6746  00479E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6747  0047A2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6748  0047A6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6749  0047AA  0012               	return		;funcret
  6750  0047AC                     __end_of___aomod:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function ___aodiv *****************
  6754 ;; Defined at:
  6755 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  dividend        8    0[COMRAM] long long 
  6758 ;;  divisor         8    8[COMRAM] long long 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  quotient        8   18[COMRAM] long long 
  6761 ;;  sign            1   17[COMRAM] unsigned char 
  6762 ;;  counter         1   16[COMRAM] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  8    0[COMRAM] long long 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6772 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6773 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6775 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6776 ;;Total ram usage:       26 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; Hardware stack levels required when called: 1
  6779 ;; This function calls:
  6780 ;;		Nothing
  6781 ;; This function is called by:
  6782 ;;		_dtoa
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           	psect	text24
  6787  0044C0                     __ptext24:
  6788                           	callstack 0
  6789  0044C0                     ___aodiv:
  6790                           	callstack 23
  6791  0044C0  0E00               	movlw	0
  6792  0044C2  6E12               	movwf	___aodiv@sign^0,c
  6793  0044C4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6794  0044C6  EF69  F022         	goto	u3020
  6795  0044CA  EF67  F022         	goto	u3021
  6796  0044CE                     u3021:
  6797  0044CE  EF7B  F022         	goto	l3470
  6798  0044D2                     u3020:
  6799  0044D2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6800  0044D4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6801  0044D6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6802  0044D8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6803  0044DA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6804  0044DC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6805  0044DE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6806  0044E0  6C09               	negf	___aodiv@divisor^0,c
  6807  0044E2  0E00               	movlw	0
  6808  0044E4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6809  0044E6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6810  0044E8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6811  0044EA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6812  0044EC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6813  0044EE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6814  0044F0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6815  0044F2  0E01               	movlw	1
  6816  0044F4  6E12               	movwf	___aodiv@sign^0,c
  6817  0044F6                     l3470:
  6818  0044F6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6819  0044F8  EF82  F022         	goto	u3030
  6820  0044FC  EF80  F022         	goto	u3031
  6821  004500                     u3031:
  6822  004500  EF94  F022         	goto	l3476
  6823  004504                     u3030:
  6824  004504  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6825  004506  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6826  004508  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6827  00450A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6828  00450C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6829  00450E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6830  004510  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6831  004512  6C01               	negf	___aodiv@dividend^0,c
  6832  004514  0E00               	movlw	0
  6833  004516  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6834  004518  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6835  00451A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6836  00451C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6837  00451E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6838  004520  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6839  004522  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6840  004524  0E01               	movlw	1
  6841  004526  1A12               	xorwf	___aodiv@sign^0,f,c
  6842  004528                     l3476:
  6843  004528  EE20  F013         	lfsr	2,___aodiv@quotient
  6844  00452C  0E07               	movlw	7
  6845  00452E                     u3041:
  6846  00452E  6ADE               	clrf	postinc2,c
  6847  004530  06E8               	decf	wreg,f,c
  6848  004532  E2FD               	bc	u3041
  6849  004534  5009               	movf	___aodiv@divisor^0,w,c
  6850  004536  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6851  004538  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6852  00453A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6853  00453C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6854  00453E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6855  004540  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6856  004542  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6857  004544  B4D8               	btfsc	status,2,c
  6858  004546  EFA7  F022         	goto	u3051
  6859  00454A  EFA9  F022         	goto	u3050
  6860  00454E                     u3051:
  6861  00454E  EFFB  F022         	goto	l3498
  6862  004552                     u3050:
  6863  004552  0E01               	movlw	1
  6864  004554  6E11               	movwf	___aodiv@counter^0,c
  6865  004556  EFB7  F022         	goto	l3484
  6866  00455A                     l3482:
  6867  00455A  90D8               	bcf	status,0,c
  6868  00455C  3609               	rlcf	___aodiv@divisor^0,f,c
  6869  00455E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6870  004560  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6871  004562  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6872  004564  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6873  004566  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6874  004568  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6875  00456A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6876  00456C  2A11               	incf	___aodiv@counter^0,f,c
  6877  00456E                     l3484:
  6878  00456E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6879  004570  EFBC  F022         	goto	u3061
  6880  004574  EFBE  F022         	goto	u3060
  6881  004578                     u3061:
  6882  004578  EFAD  F022         	goto	l3482
  6883  00457C                     u3060:
  6884  00457C                     l3486:
  6885  00457C  90D8               	bcf	status,0,c
  6886  00457E  3613               	rlcf	___aodiv@quotient^0,f,c
  6887  004580  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6888  004582  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6889  004584  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6890  004586  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6891  004588  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6892  00458A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6893  00458C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6894  00458E  5009               	movf	___aodiv@divisor^0,w,c
  6895  004590  5C01               	subwf	___aodiv@dividend^0,w,c
  6896  004592  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6897  004594  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6898  004596  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6899  004598  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6900  00459A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6901  00459C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6902  00459E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6903  0045A0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6904  0045A2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6905  0045A4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6906  0045A6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6907  0045A8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6908  0045AA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6909  0045AC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6910  0045AE  A0D8               	btfss	status,0,c
  6911  0045B0  EFDC  F022         	goto	u3071
  6912  0045B4  EFDE  F022         	goto	u3070
  6913  0045B8                     u3071:
  6914  0045B8  EFEF  F022         	goto	l3494
  6915  0045BC                     u3070:
  6916  0045BC  5009               	movf	___aodiv@divisor^0,w,c
  6917  0045BE  5E01               	subwf	___aodiv@dividend^0,f,c
  6918  0045C0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6919  0045C2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6920  0045C4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6921  0045C6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6922  0045C8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6923  0045CA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6924  0045CC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6925  0045CE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6926  0045D0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6927  0045D2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6928  0045D4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6929  0045D6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6930  0045D8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6931  0045DA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6932  0045DC  8013               	bsf	___aodiv@quotient^0,0,c
  6933  0045DE                     l3494:
  6934  0045DE  90D8               	bcf	status,0,c
  6935  0045E0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6936  0045E2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6937  0045E4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6938  0045E6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6939  0045E8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6940  0045EA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6941  0045EC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6942  0045EE  3209               	rrcf	___aodiv@divisor^0,f,c
  6943  0045F0  2E11               	decfsz	___aodiv@counter^0,f,c
  6944  0045F2  EFBE  F022         	goto	l3486
  6945  0045F6                     l3498:
  6946  0045F6  5012               	movf	___aodiv@sign^0,w,c
  6947  0045F8  B4D8               	btfsc	status,2,c
  6948  0045FA  EF01  F023         	goto	u3081
  6949  0045FE  EF03  F023         	goto	u3080
  6950  004602                     u3081:
  6951  004602  EF13  F023         	goto	l3502
  6952  004606                     u3080:
  6953  004606  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6954  004608  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6955  00460A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6956  00460C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6957  00460E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6958  004610  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6959  004612  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6960  004614  6C13               	negf	___aodiv@quotient^0,c
  6961  004616  0E00               	movlw	0
  6962  004618  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6963  00461A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6964  00461C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6965  00461E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6966  004620  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6967  004622  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6968  004624  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6969  004626                     l3502:
  6970  004626  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6971  00462A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6972  00462E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6973  004632  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6974  004636  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6975  00463A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6976  00463E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6977  004642  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6978  004646  0012               	return		;funcret
  6979  004648                     __end_of___aodiv:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function _sendStringSerial4 *****************
  6983 ;; Defined at:
  6984 ;;		line 35 in file "serial.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  string          2    1[COMRAM] PTR unsigned char 
  6987 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;Total ram usage:        2 bytes
  7004 ;; Hardware stack levels used: 1
  7005 ;; Hardware stack levels required when called: 2
  7006 ;; This function calls:
  7007 ;;		_sendCharSerial4
  7008 ;; This function is called by:
  7009 ;;		_color_display
  7010 ;;		_color_predict
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text25
  7015  005B6C                     __ptext25:
  7016                           	callstack 0
  7017  005B6C                     _sendStringSerial4:
  7018                           	callstack 26
  7019  005B6C                     
  7020                           ;serial.c: 37:     while(*string != 0){
  7021  005B6C  EFC1  F02D         	goto	l4214
  7022  005B70                     l4210:
  7023                           
  7024                           ;serial.c: 38:   sendCharSerial4(*string++);}
  7025  005B70  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7026  005B74  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7027  005B78  50DF               	movf	indf2,w,c
  7028  005B7A  EC9F  F02E         	call	_sendCharSerial4
  7029  005B7E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7030  005B80  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7031  005B82                     l4214:
  7032                           
  7033                           ;serial.c: 37:     while(*string != 0){
  7034  005B82  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7035  005B86  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7036  005B8A  50DF               	movf	indf2,w,c
  7037  005B8C  A4D8               	btfss	status,2,c
  7038  005B8E  EFCB  F02D         	goto	u4231
  7039  005B92  EFCD  F02D         	goto	u4230
  7040  005B96                     u4231:
  7041  005B96  EFB8  F02D         	goto	l4210
  7042  005B9A                     u4230:
  7043  005B9A  0012               	return		;funcret
  7044  005B9C                     __end_of_sendStringSerial4:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function _sendCharSerial4 *****************
  7048 ;; Defined at:
  7049 ;;		line 29 in file "serial.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  charToSend      1    wreg     unsigned char 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;  charToSend      1    0[COMRAM] unsigned char 
  7054 ;; Return value:  Size  Location     Type
  7055 ;;                  1    wreg      void 
  7056 ;; Registers used:
  7057 ;;		wreg
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;Total ram usage:        1 bytes
  7068 ;; Hardware stack levels used: 1
  7069 ;; Hardware stack levels required when called: 1
  7070 ;; This function calls:
  7071 ;;		Nothing
  7072 ;; This function is called by:
  7073 ;;		_sendStringSerial4
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text26
  7078  005D3E                     __ptext26:
  7079                           	callstack 0
  7080  005D3E                     _sendCharSerial4:
  7081                           	callstack 26
  7082                           
  7083                           ;incstack = 0
  7084                           ;sendCharSerial4@charToSend stored from wreg
  7085  005D3E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7086  005D40                     l334:
  7087  005D40  010E               	movlb	14	; () banked
  7088  005D42  A537               	btfss	55,2,b	;volatile
  7089  005D44  EFA6  F02E         	goto	u3961
  7090  005D48  EFA8  F02E         	goto	u3960
  7091  005D4C                     u3961:
  7092  005D4C  EFA0  F02E         	goto	l334
  7093  005D50                     u3960:
  7094  005D50                     
  7095                           ; BSR set to: 14
  7096                           ;serial.c: 31:     TX4REG = charToSend;
  7097  005D50  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7098  005D54                     
  7099                           ; BSR set to: 14
  7100  005D54  0012               	return		;funcret
  7101  005D56                     __end_of_sendCharSerial4:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _short_burst *****************
  7105 ;; Defined at:
  7106 ;;		line 7 in file "movement.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7109 ;;		 -> main@motorL(9), 
  7110 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7111 ;;		 -> main@motorR(9), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      void 
  7116 ;; Registers used:
  7117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;Total ram usage:        6 bytes
  7128 ;; Hardware stack levels used: 1
  7129 ;; Hardware stack levels required when called: 4
  7130 ;; This function calls:
  7131 ;;		_fullSpeedAhead
  7132 ;;		_stop
  7133 ;; This function is called by:
  7134 ;;		_main
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           	psect	text27
  7139  0058DC                     __ptext27:
  7140                           	callstack 0
  7141  0058DC                     _short_burst:
  7142                           	callstack 26
  7143  0058DC                     
  7144                           ;movement.c: 7: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 8
      +                          : {;movement.c: 9:     fullSpeedAhead(mL,mR);
  7145  0058DC  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  7146  0058E0  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  7147  0058E4  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  7148  0058E8  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  7149  0058EC  EC67  F029         	call	_fullSpeedAhead	;wreg free
  7150  0058F0                     
  7151                           ;movement.c: 10:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7152  0058F0  0E21               	movlw	33
  7153  0058F2  6E25               	movwf	(??_short_burst+1)^0,c
  7154  0058F4  0E78               	movlw	120
  7155  0058F6  6E24               	movwf	??_short_burst^0,c
  7156  0058F8  0E98               	movlw	152
  7157  0058FA                     u6087:
  7158  0058FA  2EE8               	decfsz	wreg,f,c
  7159  0058FC  D7FE               	bra	u6087
  7160  0058FE  2E24               	decfsz	??_short_burst^0,f,c
  7161  005900  D7FC               	bra	u6087
  7162  005902  2E25               	decfsz	(??_short_burst+1)^0,f,c
  7163  005904  D7FA               	bra	u6087
  7164  005906  D000               	nop2	
  7165  005908                     
  7166                           ;movement.c: 11:     stop(mL,mR);
  7167  005908  C020  F01A         	movff	short_burst@mL,stop@mL
  7168  00590C  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  7169  005910  C022  F01C         	movff	short_burst@mR,stop@mR
  7170  005914  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  7171  005918  EC2B  F02A         	call	_stop	;wreg free
  7172  00591C  0012               	return		;funcret
  7173  00591E                     __end_of_short_burst:
  7174                           	callstack 0
  7175                           
  7176 ;; *************** function _setup *****************
  7177 ;; Defined at:
  7178 ;;		line 6 in file "test_and_calibration.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;  white           2   24[BANK0 ] PTR struct white_card
  7181 ;;		 -> main@white(28), 
  7182 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  7183 ;;		 -> main@amb(8), 
  7184 ;;  mL              2   28[BANK0 ] PTR struct DC_motor
  7185 ;;		 -> main@motorL(9), 
  7186 ;;  mR              2   30[BANK0 ] PTR struct DC_motor
  7187 ;;		 -> main@motorR(9), 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  amb_light       2   34[BANK0 ] unsigned int 
  7190 ;; Return value:  Size  Location     Type
  7191 ;;                  2   24[BANK0 ] unsigned int 
  7192 ;; Registers used:
  7193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7194 ;; Tracked objects:
  7195 ;;		On entry : 0/0
  7196 ;;		On exit  : 0/0
  7197 ;;		Unchanged: 0/0
  7198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7199 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7201 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;Total ram usage:       12 bytes
  7204 ;; Hardware stack levels used: 1
  7205 ;; Hardware stack levels required when called: 7
  7206 ;; This function calls:
  7207 ;;		_LED_OFF
  7208 ;;		_amb_light_measure
  7209 ;;		_calibrate_white
  7210 ;;		_calibration_motor
  7211 ;; This function is called by:
  7212 ;;		_main
  7213 ;; This function uses a non-reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text28
  7217  0047AC                     __ptext28:
  7218                           	callstack 0
  7219  0047AC                     _setup:
  7220                           	callstack 23
  7221  0047AC                     
  7222                           ;test_and_calibration.c: 6: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 7: {;test_and_cal
      +                          ibration.c: 8:     unsigned int amb_light = 0;
  7223  0047AC  0E00               	movlw	0
  7224  0047AE  0100               	movlb	0	; () banked
  7225  0047B0  6F83               	movwf	(setup@amb_light+1)& (0+255),b
  7226  0047B2  0E00               	movlw	0
  7227  0047B4  6F82               	movwf	setup@amb_light& (0+255),b
  7228  0047B6                     
  7229                           ; BSR set to: 0
  7230                           ;test_and_calibration.c: 9:     LED_OFF();
  7231  0047B6  EC31  F02E         	call	_LED_OFF	;wreg free
  7232  0047BA                     
  7233                           ;test_and_calibration.c: 10:     LATDbits.LATD7 = 1;
  7234  0047BA  8E7C               	bsf	124,7,c	;volatile
  7235  0047BC                     
  7236                           ;test_and_calibration.c: 11:     LATHbits.LATH3 = 1;
  7237  0047BC  8680               	bsf	128,3,c	;volatile
  7238  0047BE                     l560:
  7239  0047BE  B48E               	btfsc	142,2,c	;volatile
  7240  0047C0  EFE4  F023         	goto	u5571
  7241  0047C4  EFE6  F023         	goto	u5570
  7242  0047C8                     u5571:
  7243  0047C8  EFDF  F023         	goto	l560
  7244  0047CC                     u5570:
  7245  0047CC                     
  7246                           ;test_and_calibration.c: 14:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7247  0047CC  B48E               	btfsc	142,2,c	;volatile
  7248  0047CE  EFEB  F023         	goto	u5581
  7249  0047D2  EFED  F023         	goto	u5580
  7250  0047D6                     u5581:
  7251  0047D6  EF00  F024         	goto	l564
  7252  0047DA                     u5580:
  7253  0047DA  C078  F00C         	movff	setup@white,calibrate_white@w
  7254  0047DE  C079  F00D         	movff	setup@white+1,calibrate_white@w+1
  7255  0047E2  EC47  F01C         	call	_calibrate_white	;wreg free
  7256  0047E6  9E7C               	bcf	124,7,c	;volatile
  7257  0047E8  0E29               	movlw	41
  7258  0047EA  0100               	movlb	0	; () banked
  7259  0047EC  6F81               	movwf	(??_setup+1)& (0+255),b
  7260  0047EE  0E96               	movlw	150
  7261  0047F0  6F80               	movwf	??_setup& (0+255),b
  7262  0047F2  0E7F               	movlw	127
  7263  0047F4                     u6097:
  7264  0047F4  2EE8               	decfsz	wreg,f,c
  7265  0047F6  D7FE               	bra	u6097
  7266  0047F8  2F80               	decfsz	??_setup& (0+255),f,b
  7267  0047FA  D7FC               	bra	u6097
  7268  0047FC  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7269  0047FE  D7FA               	bra	u6097
  7270  004800                     l564:
  7271  004800  B68E               	btfsc	142,3,c	;volatile
  7272  004802  EF05  F024         	goto	u5591
  7273  004806  EF07  F024         	goto	u5590
  7274  00480A                     u5591:
  7275  00480A  EF00  F024         	goto	l564
  7276  00480E                     u5590:
  7277  00480E                     
  7278                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7279  00480E  B68E               	btfsc	142,3,c	;volatile
  7280  004810  EF0C  F024         	goto	u5601
  7281  004814  EF0E  F024         	goto	u5600
  7282  004818                     u5601:
  7283  004818  EF48  F024         	goto	l5198
  7284  00481C                     u5600:
  7285  00481C  C07A  F06A         	movff	setup@amb,amb_light_measure@amb
  7286  004820  C07B  F06B         	movff	setup@amb+1,amb_light_measure@amb+1
  7287  004824  ECC2  F025         	call	_amb_light_measure	;wreg free
  7288  004828  C06A  F082         	movff	?_amb_light_measure,setup@amb_light
  7289  00482C  C06B  F083         	movff	?_amb_light_measure+1,setup@amb_light+1
  7290  004830  9680               	bcf	128,3,c	;volatile
  7291  004832  0E29               	movlw	41
  7292  004834  0100               	movlb	0	; () banked
  7293  004836  6F81               	movwf	(??_setup+1)& (0+255),b
  7294  004838  0E96               	movlw	150
  7295  00483A  6F80               	movwf	??_setup& (0+255),b
  7296  00483C  0E7F               	movlw	127
  7297  00483E                     u6107:
  7298  00483E  2EE8               	decfsz	wreg,f,c
  7299  004840  D7FE               	bra	u6107
  7300  004842  2F80               	decfsz	??_setup& (0+255),f,b
  7301  004844  D7FC               	bra	u6107
  7302  004846  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7303  004848  D7FA               	bra	u6107
  7304  00484A  EF48  F024         	goto	l5198
  7305  00484E                     l570:
  7306  00484E  8E7C               	bsf	124,7,c	;volatile
  7307  004850  A680               	btfss	128,3,c	;volatile
  7308  004852  EF2D  F024         	goto	u5611
  7309  004856  EF32  F024         	goto	u5610
  7310  00485A                     u5611:
  7311  00485A  0100               	movlb	0	; () banked
  7312  00485C  6B80               	clrf	??_setup& (0+255),b
  7313  00485E  2B80               	incf	??_setup& (0+255),f,b
  7314  004860  EF34  F024         	goto	u5628
  7315  004864                     u5610:
  7316  004864  0100               	movlb	0	; () banked
  7317  004866  6B80               	clrf	??_setup& (0+255),b
  7318  004868                     u5628:
  7319  004868  4780               	rlncf	??_setup& (0+255),f,b
  7320  00486A  4780               	rlncf	??_setup& (0+255),f,b
  7321  00486C  4780               	rlncf	??_setup& (0+255),f,b
  7322  00486E  5080               	movf	128,w,c	;volatile
  7323  004870  1980               	xorwf	??_setup& (0+255),w,b
  7324  004872  0BF7               	andlw	-9
  7325  004874  1980               	xorwf	??_setup& (0+255),w,b
  7326  004876  6E80               	movwf	128,c	;volatile
  7327  004878                     
  7328                           ; BSR set to: 0
  7329  004878  0E11               	movlw	17
  7330  00487A  0100               	movlb	0	; () banked
  7331  00487C  6F81               	movwf	(??_setup+1)& (0+255),b
  7332  00487E  0E3C               	movlw	60
  7333  004880  6F80               	movwf	??_setup& (0+255),b
  7334  004882  0ECB               	movlw	203
  7335  004884                     u6117:
  7336  004884  2EE8               	decfsz	wreg,f,c
  7337  004886  D7FE               	bra	u6117
  7338  004888  2F80               	decfsz	??_setup& (0+255),f,b
  7339  00488A  D7FC               	bra	u6117
  7340  00488C  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7341  00488E  D7FA               	bra	u6117
  7342  004890                     l5198:
  7343  004890  A68E               	btfss	142,3,c	;volatile
  7344  004892  EF4D  F024         	goto	u5631
  7345  004896  EF4F  F024         	goto	u5630
  7346  00489A                     u5631:
  7347  00489A  EF56  F024         	goto	l573
  7348  00489E                     u5630:
  7349  00489E  B48E               	btfsc	142,2,c	;volatile
  7350  0048A0  EF54  F024         	goto	u5641
  7351  0048A4  EF56  F024         	goto	u5640
  7352  0048A8                     u5641:
  7353  0048A8  EF27  F024         	goto	l570
  7354  0048AC                     u5640:
  7355  0048AC                     l573:
  7356                           
  7357                           ;test_and_calibration.c: 22:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7358  0048AC  B68E               	btfsc	142,3,c	;volatile
  7359  0048AE  EF5B  F024         	goto	u5651
  7360  0048B2  EF5D  F024         	goto	u5650
  7361  0048B6                     u5651:
  7362  0048B6  EF68  F024         	goto	l5206
  7363  0048BA                     u5650:
  7364  0048BA  C07C  F032         	movff	setup@mL,calibration_motor@mL
  7365  0048BE  C07D  F033         	movff	setup@mL+1,calibration_motor@mL+1
  7366  0048C2  C07E  F034         	movff	setup@mR,calibration_motor@mR
  7367  0048C6  C07F  F035         	movff	setup@mR+1,calibration_motor@mR+1
  7368  0048CA  EC5C  F027         	call	_calibration_motor	;wreg free
  7369  0048CE  9E7C               	bcf	124,7,c	;volatile
  7370  0048D0                     l5206:
  7371                           
  7372                           ;test_and_calibration.c: 23:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7373  0048D0  B48E               	btfsc	142,2,c	;volatile
  7374  0048D2  EF6D  F024         	goto	u5661
  7375  0048D6  EF6F  F024         	goto	u5660
  7376  0048DA                     u5661:
  7377  0048DA  EF48  F024         	goto	l5198
  7378  0048DE                     u5660:
  7379  0048DE  9E7C               	bcf	124,7,c	;volatile
  7380  0048E0  9680               	bcf	128,3,c	;volatile
  7381  0048E2  0E29               	movlw	41
  7382  0048E4  0100               	movlb	0	; () banked
  7383  0048E6  6F81               	movwf	(??_setup+1)& (0+255),b
  7384  0048E8  0E96               	movlw	150
  7385  0048EA  6F80               	movwf	??_setup& (0+255),b
  7386  0048EC  0E7F               	movlw	127
  7387  0048EE                     u6127:
  7388  0048EE  2EE8               	decfsz	wreg,f,c
  7389  0048F0  D7FE               	bra	u6127
  7390  0048F2  2F80               	decfsz	??_setup& (0+255),f,b
  7391  0048F4  D7FC               	bra	u6127
  7392  0048F6  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7393  0048F8  D7FA               	bra	u6127
  7394  0048FA  C082  F078         	movff	setup@amb_light,?_setup
  7395  0048FE  C083  F079         	movff	setup@amb_light+1,?_setup+1
  7396  004902  0012               	return		;funcret
  7397  004904                     __end_of_setup:
  7398                           	callstack 0
  7399                           
  7400 ;; *************** function _calibration_motor *****************
  7401 ;; Defined at:
  7402 ;;		line 128 in file "test_and_calibration.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  mL              2   49[COMRAM] PTR struct DC_motor
  7405 ;;		 -> main@motorL(9), 
  7406 ;;  mR              2   51[COMRAM] PTR struct DC_motor
  7407 ;;		 -> main@motorR(9), 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;		None
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;Total ram usage:        6 bytes
  7424 ;; Hardware stack levels used: 1
  7425 ;; Hardware stack levels required when called: 6
  7426 ;; This function calls:
  7427 ;;		_test_action
  7428 ;; This function is called by:
  7429 ;;		_setup
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text29
  7434  004EB8                     __ptext29:
  7435                           	callstack 0
  7436  004EB8                     _calibration_motor:
  7437                           	callstack 23
  7438  004EB8                     l614:
  7439                           
  7440                           ;test_and_calibration.c: 131:         LATDbits.LATD7 = 1;
  7441  004EB8  8E7C               	bsf	124,7,c	;volatile
  7442                           
  7443                           ;test_and_calibration.c: 132:         LATHbits.LATH3 = 1;
  7444  004EBA  8680               	bsf	128,3,c	;volatile
  7445                           
  7446                           ;test_and_calibration.c: 134:         if (!PORTFbits.RF2) {
  7447  004EBC  B48E               	btfsc	142,2,c	;volatile
  7448  004EBE  EF63  F027         	goto	u5461
  7449  004EC2  EF65  F027         	goto	u5460
  7450  004EC6                     u5461:
  7451  004EC6  EF91  F027         	goto	l615
  7452  004ECA                     u5460:
  7453  004ECA                     
  7454                           ;test_and_calibration.c: 135:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7455  004ECA  0E19               	movlw	25
  7456  004ECC  6E37               	movwf	(??_calibration_motor+1)^0,c
  7457  004ECE  0E5A               	movlw	90
  7458  004ED0  6E36               	movwf	??_calibration_motor^0,c
  7459  004ED2  0EB2               	movlw	178
  7460  004ED4                     u6137:
  7461  004ED4  2EE8               	decfsz	wreg,f,c
  7462  004ED6  D7FE               	bra	u6137
  7463  004ED8  2E36               	decfsz	??_calibration_motor^0,f,c
  7464  004EDA  D7FC               	bra	u6137
  7465  004EDC  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7466  004EDE  D7FA               	bra	u6137
  7467  004EE0                     
  7468                           ;test_and_calibration.c: 136:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7469  004EE0  B48E               	btfsc	142,2,c	;volatile
  7470  004EE2  EF75  F027         	goto	u5471
  7471  004EE6  EF77  F027         	goto	u5470
  7472  004EEA                     u5471:
  7473  004EEA  EF88  F027         	goto	l5006
  7474  004EEE                     u5470:
  7475  004EEE  9E7C               	bcf	124,7,c	;volatile
  7476  004EF0  0E19               	movlw	25
  7477  004EF2  6E37               	movwf	(??_calibration_motor+1)^0,c
  7478  004EF4  0E5A               	movlw	90
  7479  004EF6  6E36               	movwf	??_calibration_motor^0,c
  7480  004EF8  0EB2               	movlw	178
  7481  004EFA                     u6147:
  7482  004EFA  2EE8               	decfsz	wreg,f,c
  7483  004EFC  D7FE               	bra	u6147
  7484  004EFE  2E36               	decfsz	??_calibration_motor^0,f,c
  7485  004F00  D7FC               	bra	u6147
  7486  004F02  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7487  004F04  D7FA               	bra	u6147
  7488  004F06  0E05               	movlw	5
  7489  004F08  0100               	movlb	0	; () banked
  7490  004F0A  27FE               	addwf	_SENSITIVITY& (0+255),f,b
  7491  004F0C  0E00               	movlw	0
  7492  004F0E  23FF               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7493  004F10                     l5006:
  7494                           
  7495                           ;test_and_calibration.c: 137:             if (!PORTFbits.RF3){break;}
  7496  004F10  B68E               	btfsc	142,3,c	;volatile
  7497  004F12  EF8D  F027         	goto	u5481
  7498  004F16  EF8F  F027         	goto	u5480
  7499  004F1A                     u5481:
  7500  004F1A  EF91  F027         	goto	l615
  7501  004F1E                     u5480:
  7502  004F1E  EFC6  F027         	goto	l618
  7503  004F22                     l615:
  7504                           
  7505                           ;test_and_calibration.c: 139:         if (!PORTFbits.RF3) {
  7506  004F22  B68E               	btfsc	142,3,c	;volatile
  7507  004F24  EF96  F027         	goto	u5491
  7508  004F28  EF98  F027         	goto	u5490
  7509  004F2C                     u5491:
  7510  004F2C  EF5C  F027         	goto	l614
  7511  004F30                     u5490:
  7512  004F30                     
  7513                           ;test_and_calibration.c: 140:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7514  004F30  0E19               	movlw	25
  7515  004F32  6E37               	movwf	(??_calibration_motor+1)^0,c
  7516  004F34  0E5A               	movlw	90
  7517  004F36  6E36               	movwf	??_calibration_motor^0,c
  7518  004F38  0EB2               	movlw	178
  7519  004F3A                     u6157:
  7520  004F3A  2EE8               	decfsz	wreg,f,c
  7521  004F3C  D7FE               	bra	u6157
  7522  004F3E  2E36               	decfsz	??_calibration_motor^0,f,c
  7523  004F40  D7FC               	bra	u6157
  7524  004F42  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7525  004F44  D7FA               	bra	u6157
  7526  004F46                     
  7527                           ;test_and_calibration.c: 141:             if (!PORTFbits.RF2){break;}
  7528  004F46  B48E               	btfsc	142,2,c	;volatile
  7529  004F48  EFA8  F027         	goto	u5501
  7530  004F4C  EFAA  F027         	goto	u5500
  7531  004F50                     u5501:
  7532  004F50  EFAC  F027         	goto	l620
  7533  004F54                     u5500:
  7534  004F54  EFC6  F027         	goto	l618
  7535  004F58                     l620:
  7536                           
  7537                           ;test_and_calibration.c: 142:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7538  004F58  B68E               	btfsc	142,3,c	;volatile
  7539  004F5A  EFB1  F027         	goto	u5511
  7540  004F5E  EFB3  F027         	goto	u5510
  7541  004F62                     u5511:
  7542  004F62  EF5C  F027         	goto	l614
  7543  004F66                     u5510:
  7544  004F66  9680               	bcf	128,3,c	;volatile
  7545  004F68  0E19               	movlw	25
  7546  004F6A  6E37               	movwf	(??_calibration_motor+1)^0,c
  7547  004F6C  0E5A               	movlw	90
  7548  004F6E  6E36               	movwf	??_calibration_motor^0,c
  7549  004F70  0EB2               	movlw	178
  7550  004F72                     u6167:
  7551  004F72  2EE8               	decfsz	wreg,f,c
  7552  004F74  D7FE               	bra	u6167
  7553  004F76  2E36               	decfsz	??_calibration_motor^0,f,c
  7554  004F78  D7FC               	bra	u6167
  7555  004F7A  2E37               	decfsz	(??_calibration_motor+1)^0,f,c
  7556  004F7C  D7FA               	bra	u6167
  7557  004F7E  0E05               	movlw	5
  7558  004F80  0100               	movlb	0	; () banked
  7559  004F82  5FFE               	subwf	_SENSITIVITY& (0+255),f,b
  7560  004F84  0E00               	movlw	0
  7561  004F86  5BFF               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7562  004F88  EF5C  F027         	goto	l614
  7563  004F8C                     l618:
  7564                           
  7565                           ;test_and_calibration.c: 145:     LATDbits.LATD7 = 0;
  7566  004F8C  9E7C               	bcf	124,7,c	;volatile
  7567                           
  7568                           ;test_and_calibration.c: 146:     LATHbits.LATH3 = 0;
  7569  004F8E  9680               	bcf	128,3,c	;volatile
  7570  004F90                     
  7571                           ;test_and_calibration.c: 147:     test_action(mL, mR);
  7572  004F90  C032  F02C         	movff	calibration_motor@mL,test_action@mL
  7573  004F94  C033  F02D         	movff	calibration_motor@mL+1,test_action@mL+1
  7574  004F98  C034  F02E         	movff	calibration_motor@mR,test_action@mR
  7575  004F9C  C035  F02F         	movff	calibration_motor@mR+1,test_action@mR+1
  7576  004FA0  EC2B  F025         	call	_test_action	;wreg free
  7577  004FA4  0012               	return		;funcret
  7578  004FA6                     __end_of_calibration_motor:
  7579                           	callstack 0
  7580                           
  7581 ;; *************** function _test_action *****************
  7582 ;; Defined at:
  7583 ;;		line 63 in file "test_and_calibration.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  7586 ;;		 -> main@motorL(9), 
  7587 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  7588 ;;		 -> main@motorR(9), 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1    wreg      void 
  7593 ;; Registers used:
  7594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : 0/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;Total ram usage:        6 bytes
  7605 ;; Hardware stack levels used: 1
  7606 ;; Hardware stack levels required when called: 5
  7607 ;; This function calls:
  7608 ;;		_fullSpeedAhead
  7609 ;;		_stop
  7610 ;;		_turn45
  7611 ;; This function is called by:
  7612 ;;		_test_function
  7613 ;;		_calibration_motor
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text30
  7618  004A56                     __ptext30:
  7619                           	callstack 0
  7620  004A56                     _test_action:
  7621                           	callstack 24
  7622  004A56                     
  7623                           ;test_and_calibration.c: 63: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 64: {;test_and_calibration.c: 65:     stop(mL,mR);
  7624  004A56  C02C  F01A         	movff	test_action@mL,stop@mL
  7625  004A5A  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7626  004A5E  C02E  F01C         	movff	test_action@mR,stop@mR
  7627  004A62  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7628  004A66  EC2B  F02A         	call	_stop	;wreg free
  7629  004A6A                     
  7630                           ;test_and_calibration.c: 66:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7631  004A6A  0EA3               	movlw	163
  7632  004A6C  6E31               	movwf	(??_test_action+1)^0,c
  7633  004A6E  0E57               	movlw	87
  7634  004A70  6E30               	movwf	??_test_action^0,c
  7635  004A72  0E02               	movlw	2
  7636  004A74                     u6177:
  7637  004A74  2EE8               	decfsz	wreg,f,c
  7638  004A76  D7FE               	bra	u6177
  7639  004A78  2E30               	decfsz	??_test_action^0,f,c
  7640  004A7A  D7FC               	bra	u6177
  7641  004A7C  2E31               	decfsz	(??_test_action+1)^0,f,c
  7642  004A7E  D7FA               	bra	u6177
  7643  004A80  D000               	nop2	
  7644  004A82                     
  7645                           ;test_and_calibration.c: 67:     turn45(mL,mR,8,1);
  7646  004A82  C02C  F020         	movff	test_action@mL,turn45@mL
  7647  004A86  C02D  F021         	movff	test_action@mL+1,turn45@mL+1
  7648  004A8A  C02E  F022         	movff	test_action@mR,turn45@mR
  7649  004A8E  C02F  F023         	movff	test_action@mR+1,turn45@mR+1
  7650  004A92  0E08               	movlw	8
  7651  004A94  6E24               	movwf	turn45@turn_time^0,c
  7652  004A96  0E01               	movlw	1
  7653  004A98  6E25               	movwf	turn45@direction^0,c
  7654  004A9A  ECC3  F020         	call	_turn45	;wreg free
  7655  004A9E                     
  7656                           ;test_and_calibration.c: 68:     stop(mL,mR);
  7657  004A9E  C02C  F01A         	movff	test_action@mL,stop@mL
  7658  004AA2  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7659  004AA6  C02E  F01C         	movff	test_action@mR,stop@mR
  7660  004AAA  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7661  004AAE  EC2B  F02A         	call	_stop	;wreg free
  7662  004AB2                     
  7663                           ;test_and_calibration.c: 69:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7664  004AB2  0EA3               	movlw	163
  7665  004AB4  6E31               	movwf	(??_test_action+1)^0,c
  7666  004AB6  0E57               	movlw	87
  7667  004AB8  6E30               	movwf	??_test_action^0,c
  7668  004ABA  0E02               	movlw	2
  7669  004ABC                     u6187:
  7670  004ABC  2EE8               	decfsz	wreg,f,c
  7671  004ABE  D7FE               	bra	u6187
  7672  004AC0  2E30               	decfsz	??_test_action^0,f,c
  7673  004AC2  D7FC               	bra	u6187
  7674  004AC4  2E31               	decfsz	(??_test_action+1)^0,f,c
  7675  004AC6  D7FA               	bra	u6187
  7676  004AC8  D000               	nop2	
  7677                           
  7678                           ;test_and_calibration.c: 70:     turn45(mL,mR,8,2);
  7679  004ACA  C02C  F020         	movff	test_action@mL,turn45@mL
  7680  004ACE  C02D  F021         	movff	test_action@mL+1,turn45@mL+1
  7681  004AD2  C02E  F022         	movff	test_action@mR,turn45@mR
  7682  004AD6  C02F  F023         	movff	test_action@mR+1,turn45@mR+1
  7683  004ADA  0E08               	movlw	8
  7684  004ADC  6E24               	movwf	turn45@turn_time^0,c
  7685  004ADE  0E02               	movlw	2
  7686  004AE0  6E25               	movwf	turn45@direction^0,c
  7687  004AE2  ECC3  F020         	call	_turn45	;wreg free
  7688                           
  7689                           ;test_and_calibration.c: 71:     fullSpeedAhead(mL,mR);
  7690  004AE6  C02C  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7691  004AEA  C02D  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7692  004AEE  C02E  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7693  004AF2  C02F  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7694  004AF6  EC67  F029         	call	_fullSpeedAhead	;wreg free
  7695  004AFA                     
  7696                           ;test_and_calibration.c: 72:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7697  004AFA  0EF4               	movlw	244
  7698  004AFC  6E31               	movwf	(??_test_action+1)^0,c
  7699  004AFE  0E82               	movlw	130
  7700  004B00  6E30               	movwf	??_test_action^0,c
  7701  004B02  0E05               	movlw	5
  7702  004B04                     u6197:
  7703  004B04  2EE8               	decfsz	wreg,f,c
  7704  004B06  D7FE               	bra	u6197
  7705  004B08  2E30               	decfsz	??_test_action^0,f,c
  7706  004B0A  D7FC               	bra	u6197
  7707  004B0C  2E31               	decfsz	(??_test_action+1)^0,f,c
  7708  004B0E  D7FA               	bra	u6197
  7709  004B10  F000               	nop	
  7710  004B12                     
  7711                           ;test_and_calibration.c: 73:     stop(mL,mR);
  7712  004B12  C02C  F01A         	movff	test_action@mL,stop@mL
  7713  004B16  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7714  004B1A  C02E  F01C         	movff	test_action@mR,stop@mR
  7715  004B1E  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7716  004B22  EC2B  F02A         	call	_stop	;wreg free
  7717  004B26                     
  7718                           ;test_and_calibration.c: 74:     turn45(mL,mR,4,1);
  7719  004B26  C02C  F020         	movff	test_action@mL,turn45@mL
  7720  004B2A  C02D  F021         	movff	test_action@mL+1,turn45@mL+1
  7721  004B2E  C02E  F022         	movff	test_action@mR,turn45@mR
  7722  004B32  C02F  F023         	movff	test_action@mR+1,turn45@mR+1
  7723  004B36  0E04               	movlw	4
  7724  004B38  6E24               	movwf	turn45@turn_time^0,c
  7725  004B3A  0E01               	movlw	1
  7726  004B3C  6E25               	movwf	turn45@direction^0,c
  7727  004B3E  ECC3  F020         	call	_turn45	;wreg free
  7728  004B42                     
  7729                           ;test_and_calibration.c: 75:     fullSpeedAhead(mL,mR);
  7730  004B42  C02C  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7731  004B46  C02D  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7732  004B4A  C02E  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7733  004B4E  C02F  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7734  004B52  EC67  F029         	call	_fullSpeedAhead	;wreg free
  7735                           
  7736                           ;test_and_calibration.c: 76:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7737  004B56  0EF4               	movlw	244
  7738  004B58  6E31               	movwf	(??_test_action+1)^0,c
  7739  004B5A  0E82               	movlw	130
  7740  004B5C  6E30               	movwf	??_test_action^0,c
  7741  004B5E  0E05               	movlw	5
  7742  004B60                     u6207:
  7743  004B60  2EE8               	decfsz	wreg,f,c
  7744  004B62  D7FE               	bra	u6207
  7745  004B64  2E30               	decfsz	??_test_action^0,f,c
  7746  004B66  D7FC               	bra	u6207
  7747  004B68  2E31               	decfsz	(??_test_action+1)^0,f,c
  7748  004B6A  D7FA               	bra	u6207
  7749  004B6C  F000               	nop	
  7750  004B6E                     
  7751                           ;test_and_calibration.c: 77:     stop(mL,mR);
  7752  004B6E  C02C  F01A         	movff	test_action@mL,stop@mL
  7753  004B72  C02D  F01B         	movff	test_action@mL+1,stop@mL+1
  7754  004B76  C02E  F01C         	movff	test_action@mR,stop@mR
  7755  004B7A  C02F  F01D         	movff	test_action@mR+1,stop@mR+1
  7756  004B7E  EC2B  F02A         	call	_stop	;wreg free
  7757  004B82  0012               	return		;funcret
  7758  004B84                     __end_of_test_action:
  7759                           	callstack 0
  7760                           
  7761 ;; *************** function _turn45 *****************
  7762 ;; Defined at:
  7763 ;;		line 88 in file "dc_motor.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7766 ;;		 -> main@motorL(9), 
  7767 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7768 ;;		 -> main@motorR(9), 
  7769 ;;  turn_time       1   35[COMRAM] unsigned char 
  7770 ;;  direction       1   36[COMRAM] unsigned char 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  i               2   40[COMRAM] unsigned int 
  7773 ;;  i               2   38[COMRAM] unsigned int 
  7774 ;;  i               1   42[COMRAM] unsigned char 
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7784 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;Total ram usage:       12 bytes
  7789 ;; Hardware stack levels used: 1
  7790 ;; Hardware stack levels required when called: 4
  7791 ;; This function calls:
  7792 ;;		_setMotorPWM
  7793 ;;		_stop
  7794 ;; This function is called by:
  7795 ;;		_turning_action
  7796 ;;		_goback
  7797 ;;		_test_action
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text31
  7802  004186                     __ptext31:
  7803                           	callstack 0
  7804  004186                     _turn45:
  7805                           	callstack 25
  7806  004186                     
  7807                           ;dc_motor.c: 88: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 89: {;dc_motor.c: 91:     unsigned char i =
      +                           0;
  7808  004186  0E00               	movlw	0
  7809  004188  6E2B               	movwf	turn45@i^0,c
  7810                           
  7811                           ;dc_motor.c: 92:     for (i = 0; i < turn_time; i++){
  7812  00418A  0E00               	movlw	0
  7813  00418C  6E2B               	movwf	turn45@i^0,c
  7814  00418E  EF8B  F021         	goto	l4266
  7815  004192                     l4218:
  7816                           
  7817                           ;dc_motor.c: 93:         mL->direction=1;
  7818  004192  EE20 F001          	lfsr	2,1
  7819  004196  5020               	movf	turn45@mL^0,w,c
  7820  004198  26D9               	addwf	fsr2l,f,c
  7821  00419A  5021               	movf	(turn45@mL+1)^0,w,c
  7822  00419C  22DA               	addwfc	fsr2h,f,c
  7823  00419E  0E01               	movlw	1
  7824  0041A0  6EDF               	movwf	indf2,c
  7825                           
  7826                           ;dc_motor.c: 94:         mR->direction=1;
  7827  0041A2  EE20 F001          	lfsr	2,1
  7828  0041A6  5022               	movf	turn45@mR^0,w,c
  7829  0041A8  26D9               	addwf	fsr2l,f,c
  7830  0041AA  5023               	movf	(turn45@mR+1)^0,w,c
  7831  0041AC  22DA               	addwfc	fsr2h,f,c
  7832  0041AE  0E01               	movlw	1
  7833  0041B0  6EDF               	movwf	indf2,c
  7834  0041B2                     
  7835                           ;dc_motor.c: 95:         if (direction == 1){
  7836  0041B2  0425               	decf	turn45@direction^0,w,c
  7837  0041B4  A4D8               	btfss	status,2,c
  7838  0041B6  EFDF  F020         	goto	u4241
  7839  0041BA  EFE1  F020         	goto	u4240
  7840  0041BE                     u4241:
  7841  0041BE  EF36  F021         	goto	l4242
  7842  0041C2                     u4240:
  7843  0041C2  EF02  F021         	goto	l4232
  7844  0041C6                     l4224:
  7845                           
  7846                           ;dc_motor.c: 97:                 mR->power += 5;
  7847  0041C6  C022  FFD9         	movff	turn45@mR,fsr2l
  7848  0041CA  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7849  0041CE  0E05               	movlw	5
  7850  0041D0  26DF               	addwf	indf2,f,c
  7851                           
  7852                           ;dc_motor.c: 98:                 mL->power = 0;
  7853  0041D2  C020  FFD9         	movff	turn45@mL,fsr2l
  7854  0041D6  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7855  0041DA  0E00               	movlw	0
  7856  0041DC  6EDF               	movwf	indf2,c
  7857  0041DE                     
  7858                           ;dc_motor.c: 99:                 setMotorPWM(mL);
  7859  0041DE  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7860  0041E2  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7861  0041E6  EC4C  F01D         	call	_setMotorPWM	;wreg free
  7862  0041EA                     
  7863                           ;dc_motor.c: 100:                 setMotorPWM(mR);
  7864  0041EA  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7865  0041EE  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7866  0041F2  EC4C  F01D         	call	_setMotorPWM	;wreg free
  7867  0041F6                     
  7868                           ;dc_motor.c: 101:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7869  0041F6  0ED0               	movlw	208
  7870  0041F8  6E26               	movwf	??_turn45^0,c
  7871  0041FA  0ECA               	movlw	202
  7872  0041FC                     u6217:
  7873  0041FC  2EE8               	decfsz	wreg,f,c
  7874  0041FE  D7FE               	bra	u6217
  7875  004200  2E26               	decfsz	??_turn45^0,f,c
  7876  004202  D7FC               	bra	u6217
  7877  004204                     l4232:
  7878                           
  7879                           ;dc_motor.c: 96:             while (mR->power <30){
  7880  004204  C022  FFD9         	movff	turn45@mR,fsr2l
  7881  004208  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7882  00420C  0E1D               	movlw	29
  7883  00420E  64DF               	cpfsgt	indf2,c
  7884  004210  EF0C  F021         	goto	u4251
  7885  004214  EF0E  F021         	goto	u4250
  7886  004218                     u4251:
  7887  004218  EFE3  F020         	goto	l4224
  7888  00421C                     u4250:
  7889  00421C                     
  7890                           ;dc_motor.c: 103:             for(unsigned int i = 0; i<SENSITIVITY; i++){_delay((unsign
      +                          ed long)((1)*(64000000/4000.0)));}
  7891  00421C  0E00               	movlw	0
  7892  00421E  6E28               	movwf	(turn45@i_1331+1)^0,c
  7893  004220  0E00               	movlw	0
  7894  004222  6E27               	movwf	turn45@i_1331^0,c
  7895  004224  EF1E  F021         	goto	l271
  7896  004228                     l4236:
  7897                           
  7898                           ; BSR set to: 0
  7899  004228  0E15               	movlw	21
  7900  00422A  6E26               	movwf	??_turn45^0,c
  7901  00422C  0EC6               	movlw	198
  7902  00422E                     u6227:
  7903  00422E  2EE8               	decfsz	wreg,f,c
  7904  004230  D7FE               	bra	u6227
  7905  004232  2E26               	decfsz	??_turn45^0,f,c
  7906  004234  D7FC               	bra	u6227
  7907  004236  D000               	nop2	
  7908  004238  4A27               	infsnz	turn45@i_1331^0,f,c
  7909  00423A  2A28               	incf	(turn45@i_1331+1)^0,f,c
  7910  00423C                     l271:
  7911  00423C  0100               	movlb	0	; () banked
  7912  00423E  51FE               	movf	_SENSITIVITY& (0+255),w,b
  7913  004240  5C27               	subwf	turn45@i_1331^0,w,c
  7914  004242  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  7915  004244  5828               	subwfb	(turn45@i_1331+1)^0,w,c
  7916  004246  A0D8               	btfss	status,0,c
  7917  004248  EF28  F021         	goto	u4261
  7918  00424C  EF2A  F021         	goto	u4260
  7919  004250                     u4261:
  7920  004250  EF14  F021         	goto	l4236
  7921  004254                     u4260:
  7922  004254                     l4240:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;dc_motor.c: 104:             stop(mL,mR);
  7926  004254  C020  F01A         	movff	turn45@mL,stop@mL
  7927  004258  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  7928  00425C  C022  F01C         	movff	turn45@mR,stop@mR
  7929  004260  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  7930  004264  EC2B  F02A         	call	_stop	;wreg free
  7931                           
  7932                           ;dc_motor.c: 105:         }
  7933  004268  EF8A  F021         	goto	l4264
  7934  00426C                     l4242:
  7935  00426C  0E02               	movlw	2
  7936  00426E  1825               	xorwf	turn45@direction^0,w,c
  7937  004270  A4D8               	btfss	status,2,c
  7938  004272  EF3D  F021         	goto	u4271
  7939  004276  EF3F  F021         	goto	u4270
  7940  00427A                     u4271:
  7941  00427A  EF8A  F021         	goto	l4264
  7942  00427E                     u4270:
  7943  00427E  EF60  F021         	goto	l4254
  7944  004282                     l4246:
  7945                           
  7946                           ;dc_motor.c: 108:                 mL->power += 5;
  7947  004282  C020  FFD9         	movff	turn45@mL,fsr2l
  7948  004286  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7949  00428A  0E05               	movlw	5
  7950  00428C  26DF               	addwf	indf2,f,c
  7951                           
  7952                           ;dc_motor.c: 109:                 mR->power = 0;
  7953  00428E  C022  FFD9         	movff	turn45@mR,fsr2l
  7954  004292  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7955  004296  0E00               	movlw	0
  7956  004298  6EDF               	movwf	indf2,c
  7957  00429A                     
  7958                           ;dc_motor.c: 110:                 setMotorPWM(mL);
  7959  00429A  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7960  00429E  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7961  0042A2  EC4C  F01D         	call	_setMotorPWM	;wreg free
  7962  0042A6                     
  7963                           ;dc_motor.c: 111:                 setMotorPWM(mR);
  7964  0042A6  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7965  0042AA  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7966  0042AE  EC4C  F01D         	call	_setMotorPWM	;wreg free
  7967  0042B2                     
  7968                           ;dc_motor.c: 112:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7969  0042B2  0ED0               	movlw	208
  7970  0042B4  6E26               	movwf	??_turn45^0,c
  7971  0042B6  0ECA               	movlw	202
  7972  0042B8                     u6237:
  7973  0042B8  2EE8               	decfsz	wreg,f,c
  7974  0042BA  D7FE               	bra	u6237
  7975  0042BC  2E26               	decfsz	??_turn45^0,f,c
  7976  0042BE  D7FC               	bra	u6237
  7977  0042C0                     l4254:
  7978                           
  7979                           ;dc_motor.c: 107:             while (mL->power <30){
  7980  0042C0  C020  FFD9         	movff	turn45@mL,fsr2l
  7981  0042C4  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7982  0042C8  0E1D               	movlw	29
  7983  0042CA  64DF               	cpfsgt	indf2,c
  7984  0042CC  EF6A  F021         	goto	u4281
  7985  0042D0  EF6C  F021         	goto	u4280
  7986  0042D4                     u4281:
  7987  0042D4  EF41  F021         	goto	l4246
  7988  0042D8                     u4280:
  7989  0042D8                     
  7990                           ;dc_motor.c: 114:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  7991  0042D8  0E00               	movlw	0
  7992  0042DA  6E2A               	movwf	(turn45@i_1333+1)^0,c
  7993  0042DC  0E00               	movlw	0
  7994  0042DE  6E29               	movwf	turn45@i_1333^0,c
  7995  0042E0  EF7C  F021         	goto	l279
  7996  0042E4                     l4258:
  7997                           
  7998                           ; BSR set to: 0
  7999  0042E4  0E15               	movlw	21
  8000  0042E6  6E26               	movwf	??_turn45^0,c
  8001  0042E8  0EC6               	movlw	198
  8002  0042EA                     u6247:
  8003  0042EA  2EE8               	decfsz	wreg,f,c
  8004  0042EC  D7FE               	bra	u6247
  8005  0042EE  2E26               	decfsz	??_turn45^0,f,c
  8006  0042F0  D7FC               	bra	u6247
  8007  0042F2  D000               	nop2	
  8008  0042F4  4A29               	infsnz	turn45@i_1333^0,f,c
  8009  0042F6  2A2A               	incf	(turn45@i_1333+1)^0,f,c
  8010  0042F8                     l279:
  8011  0042F8  0100               	movlb	0	; () banked
  8012  0042FA  51FE               	movf	_SENSITIVITY& (0+255),w,b
  8013  0042FC  5C29               	subwf	turn45@i_1333^0,w,c
  8014  0042FE  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  8015  004300  582A               	subwfb	(turn45@i_1333+1)^0,w,c
  8016  004302  A0D8               	btfss	status,0,c
  8017  004304  EF86  F021         	goto	u4291
  8018  004308  EF88  F021         	goto	u4290
  8019  00430C                     u4291:
  8020  00430C  EF72  F021         	goto	l4258
  8021  004310                     u4290:
  8022  004310  EF2A  F021         	goto	l4240
  8023  004314                     l4264:
  8024                           
  8025                           ;dc_motor.c: 117:     }
  8026  004314  2A2B               	incf	turn45@i^0,f,c
  8027  004316                     l4266:
  8028  004316  5024               	movf	turn45@turn_time^0,w,c
  8029  004318  5C2B               	subwf	turn45@i^0,w,c
  8030  00431A  A0D8               	btfss	status,0,c
  8031  00431C  EF92  F021         	goto	u4301
  8032  004320  EF94  F021         	goto	u4300
  8033  004324                     u4301:
  8034  004324  EFC9  F020         	goto	l4218
  8035  004328                     u4300:
  8036  004328  0012               	return		;funcret
  8037  00432A                     __end_of_turn45:
  8038                           	callstack 0
  8039                           
  8040 ;; *************** function _stop *****************
  8041 ;; Defined at:
  8042 ;;		line 76 in file "dc_motor.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8045 ;;		 -> main@motorL(9), 
  8046 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8047 ;;		 -> main@motorR(9), 
  8048 ;; Auto vars:     Size  Location     Type
  8049 ;;		None
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8061 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;Total ram usage:        6 bytes
  8064 ;; Hardware stack levels used: 1
  8065 ;; Hardware stack levels required when called: 3
  8066 ;; This function calls:
  8067 ;;		_setMotorPWM
  8068 ;; This function is called by:
  8069 ;;		_turn45
  8070 ;;		_fullSpeedBack
  8071 ;;		_main
  8072 ;;		_short_burst
  8073 ;;		_goback
  8074 ;;		_test_action
  8075 ;;		_test_function
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text32
  8080  005456                     __ptext32:
  8081                           	callstack 0
  8082  005456                     _stop:
  8083                           	callstack 25
  8084  005456                     
  8085                           ;dc_motor.c: 76: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: {;d
      +                          c_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8086  005456  EF65  F02A         	goto	l3988
  8087  00545A                     l3974:
  8088                           
  8089                           ;dc_motor.c: 79:         if (mL->power !=0){mL->power -= 2;}
  8090  00545A  C01A  FFD9         	movff	stop@mL,fsr2l
  8091  00545E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8092  005462  50DF               	movf	indf2,w,c
  8093  005464  B4D8               	btfsc	status,2,c
  8094  005466  EF37  F02A         	goto	u3921
  8095  00546A  EF39  F02A         	goto	u3920
  8096  00546E                     u3921:
  8097  00546E  EF3F  F02A         	goto	l3978
  8098  005472                     u3920:
  8099  005472  C01A  FFD9         	movff	stop@mL,fsr2l
  8100  005476  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8101  00547A  0E02               	movlw	2
  8102  00547C  5EDF               	subwf	indf2,f,c
  8103  00547E                     l3978:
  8104                           
  8105                           ;dc_motor.c: 80:         if (mR->power !=0){mR->power -= 2;}
  8106  00547E  C01C  FFD9         	movff	stop@mR,fsr2l
  8107  005482  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8108  005486  50DF               	movf	indf2,w,c
  8109  005488  B4D8               	btfsc	status,2,c
  8110  00548A  EF49  F02A         	goto	u3931
  8111  00548E  EF4B  F02A         	goto	u3930
  8112  005492                     u3931:
  8113  005492  EF51  F02A         	goto	l3982
  8114  005496                     u3930:
  8115  005496  C01C  FFD9         	movff	stop@mR,fsr2l
  8116  00549A  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8117  00549E  0E02               	movlw	2
  8118  0054A0  5EDF               	subwf	indf2,f,c
  8119  0054A2                     l3982:
  8120                           
  8121                           ;dc_motor.c: 81:         setMotorPWM(mL);
  8122  0054A2  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  8123  0054A6  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  8124  0054AA  EC4C  F01D         	call	_setMotorPWM	;wreg free
  8125  0054AE                     
  8126                           ;dc_motor.c: 82:         setMotorPWM(mR);
  8127  0054AE  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  8128  0054B2  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  8129  0054B6  EC4C  F01D         	call	_setMotorPWM	;wreg free
  8130  0054BA                     
  8131                           ;dc_motor.c: 83:         _delay((unsigned long)((5)*(64000000/4000.0)));
  8132  0054BA  0E68               	movlw	104
  8133  0054BC  6E1E               	movwf	??_stop^0,c
  8134  0054BE  0EE4               	movlw	228
  8135  0054C0                     u6257:
  8136  0054C0  2EE8               	decfsz	wreg,f,c
  8137  0054C2  D7FE               	bra	u6257
  8138  0054C4  2E1E               	decfsz	??_stop^0,f,c
  8139  0054C6  D7FC               	bra	u6257
  8140  0054C8  D000               	nop2	
  8141  0054CA                     l3988:
  8142                           
  8143                           ;dc_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8144  0054CA  C01A  FFD9         	movff	stop@mL,fsr2l
  8145  0054CE  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8146  0054D2  50DF               	movf	indf2,w,c
  8147  0054D4  A4D8               	btfss	status,2,c
  8148  0054D6  EF6F  F02A         	goto	u3941
  8149  0054DA  EF71  F02A         	goto	u3940
  8150  0054DE                     u3941:
  8151  0054DE  EF2D  F02A         	goto	l3974
  8152  0054E2                     u3940:
  8153  0054E2  C01C  FFD9         	movff	stop@mR,fsr2l
  8154  0054E6  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8155  0054EA  50DF               	movf	indf2,w,c
  8156  0054EC  A4D8               	btfss	status,2,c
  8157  0054EE  EF7B  F02A         	goto	u3951
  8158  0054F2  EF7D  F02A         	goto	u3950
  8159  0054F6                     u3951:
  8160  0054F6  EF2D  F02A         	goto	l3974
  8161  0054FA                     u3950:
  8162  0054FA                     
  8163                           ;dc_motor.c: 85:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8164  0054FA  0E29               	movlw	41
  8165  0054FC  6E1F               	movwf	(??_stop+1)^0,c
  8166  0054FE  0E96               	movlw	150
  8167  005500  6E1E               	movwf	??_stop^0,c
  8168  005502  0E7F               	movlw	127
  8169  005504                     u6267:
  8170  005504  2EE8               	decfsz	wreg,f,c
  8171  005506  D7FE               	bra	u6267
  8172  005508  2E1E               	decfsz	??_stop^0,f,c
  8173  00550A  D7FC               	bra	u6267
  8174  00550C  2E1F               	decfsz	(??_stop+1)^0,f,c
  8175  00550E  D7FA               	bra	u6267
  8176  005510  F000               	nop	
  8177  005512  0012               	return		;funcret
  8178  005514                     __end_of_stop:
  8179                           	callstack 0
  8180                           
  8181 ;; *************** function _fullSpeedAhead *****************
  8182 ;; Defined at:
  8183 ;;		line 121 in file "dc_motor.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8186 ;;		 -> main@motorL(9), 
  8187 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8188 ;;		 -> main@motorR(9), 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;		None
  8191 ;; Return value:  Size  Location     Type
  8192 ;;                  1    wreg      void 
  8193 ;; Registers used:
  8194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8203 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;Total ram usage:        5 bytes
  8205 ;; Hardware stack levels used: 1
  8206 ;; Hardware stack levels required when called: 3
  8207 ;; This function calls:
  8208 ;;		_setMotorPWM
  8209 ;; This function is called by:
  8210 ;;		_main
  8211 ;;		_short_burst
  8212 ;;		_goback
  8213 ;;		_test_action
  8214 ;;		_test_function
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text33
  8219  0052CE                     __ptext33:
  8220                           	callstack 0
  8221  0052CE                     _fullSpeedAhead:
  8222                           	callstack 25
  8223  0052CE                     
  8224                           ;dc_motor.c: 121: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 122: {;dc_motor.c: 123:     mL->direction=1;
  8225  0052CE  EE20 F001          	lfsr	2,1
  8226  0052D2  501A               	movf	fullSpeedAhead@mL^0,w,c
  8227  0052D4  26D9               	addwf	fsr2l,f,c
  8228  0052D6  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8229  0052D8  22DA               	addwfc	fsr2h,f,c
  8230  0052DA  0E01               	movlw	1
  8231  0052DC  6EDF               	movwf	indf2,c
  8232                           
  8233                           ;dc_motor.c: 124:     mR->direction=1;
  8234  0052DE  EE20 F001          	lfsr	2,1
  8235  0052E2  501C               	movf	fullSpeedAhead@mR^0,w,c
  8236  0052E4  26D9               	addwf	fsr2l,f,c
  8237  0052E6  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8238  0052E8  22DA               	addwfc	fsr2h,f,c
  8239  0052EA  0E01               	movlw	1
  8240  0052EC  6EDF               	movwf	indf2,c
  8241                           
  8242                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8243  0052EE  EFB0  F029         	goto	l4284
  8244  0052F2                     l4270:
  8245                           
  8246                           ;dc_motor.c: 126:         if (mL->power<30) {mL->power += 2;}
  8247  0052F2  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8248  0052F6  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8249  0052FA  0E1E               	movlw	30
  8250  0052FC  60DF               	cpfslt	indf2,c
  8251  0052FE  EF83  F029         	goto	u4311
  8252  005302  EF85  F029         	goto	u4310
  8253  005306                     u4311:
  8254  005306  EF8B  F029         	goto	l4274
  8255  00530A                     u4310:
  8256  00530A  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8257  00530E  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8258  005312  0E02               	movlw	2
  8259  005314  26DF               	addwf	indf2,f,c
  8260  005316                     l4274:
  8261                           
  8262                           ;dc_motor.c: 127:         if (mR->power<30) {mR->power += 2;}
  8263  005316  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8264  00531A  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8265  00531E  0E1E               	movlw	30
  8266  005320  60DF               	cpfslt	indf2,c
  8267  005322  EF95  F029         	goto	u4321
  8268  005326  EF97  F029         	goto	u4320
  8269  00532A                     u4321:
  8270  00532A  EF9D  F029         	goto	l4278
  8271  00532E                     u4320:
  8272  00532E  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8273  005332  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8274  005336  0E02               	movlw	2
  8275  005338  26DF               	addwf	indf2,f,c
  8276  00533A                     l4278:
  8277                           
  8278                           ;dc_motor.c: 128:         setMotorPWM(mL);
  8279  00533A  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8280  00533E  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8281  005342  EC4C  F01D         	call	_setMotorPWM	;wreg free
  8282  005346                     
  8283                           ;dc_motor.c: 129:         setMotorPWM(mR);
  8284  005346  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8285  00534A  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8286  00534E  EC4C  F01D         	call	_setMotorPWM	;wreg free
  8287  005352                     
  8288                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8289  005352  0ED0               	movlw	208
  8290  005354  6E1E               	movwf	??_fullSpeedAhead^0,c
  8291  005356  0ECA               	movlw	202
  8292  005358                     u6277:
  8293  005358  2EE8               	decfsz	wreg,f,c
  8294  00535A  D7FE               	bra	u6277
  8295  00535C  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8296  00535E  D7FC               	bra	u6277
  8297  005360                     l4284:
  8298                           
  8299                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8300  005360  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8301  005364  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8302  005368  0E1D               	movlw	29
  8303  00536A  64DF               	cpfsgt	indf2,c
  8304  00536C  EFBA  F029         	goto	u4331
  8305  005370  EFBC  F029         	goto	u4330
  8306  005374                     u4331:
  8307  005374  EF79  F029         	goto	l4270
  8308  005378                     u4330:
  8309  005378  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8310  00537C  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8311  005380  0E1D               	movlw	29
  8312  005382  64DF               	cpfsgt	indf2,c
  8313  005384  EFC6  F029         	goto	u4341
  8314  005388  EFC8  F029         	goto	u4340
  8315  00538C                     u4341:
  8316  00538C  EF79  F029         	goto	l4270
  8317  005390                     u4340:
  8318  005390  0012               	return		;funcret
  8319  005392                     __end_of_fullSpeedAhead:
  8320                           	callstack 0
  8321                           
  8322 ;; *************** function _setMotorPWM *****************
  8323 ;; Defined at:
  8324 ;;		line 56 in file "dc_motor.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8327 ;;		 -> main@motorR(9), main@motorL(9), 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  PWMduty         2   23[COMRAM] int 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;Total ram usage:       11 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 2
  8346 ;; This function calls:
  8347 ;;		___awdiv
  8348 ;;		___wmul
  8349 ;; This function is called by:
  8350 ;;		_stop
  8351 ;;		_turn45
  8352 ;;		_fullSpeedAhead
  8353 ;;		_fullSpeedBack
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text34
  8358  003A98                     __ptext34:
  8359                           	callstack 0
  8360  003A98                     _setMotorPWM:
  8361                           	callstack 25
  8362  003A98                     
  8363                           ;dc_motor.c: 56: void setMotorPWM(struct DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58: 
      +                           int PWMduty;;dc_motor.c: 59:  if (m->direction){
  8364  003A98  EE20 F001          	lfsr	2,1
  8365  003A9C  500F               	movf	setMotorPWM@m^0,w,c
  8366  003A9E  26D9               	addwf	fsr2l,f,c
  8367  003AA0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8368  003AA2  22DA               	addwfc	fsr2h,f,c
  8369  003AA4  50DF               	movf	indf2,w,c
  8370  003AA6  B4D8               	btfsc	status,2,c
  8371  003AA8  EF58  F01D         	goto	u3431
  8372  003AAC  EF5A  F01D         	goto	u3430
  8373  003AB0                     u3431:
  8374  003AB0  EF8B  F01D         	goto	l3688
  8375  003AB4                     u3430:
  8376  003AB4                     
  8377                           ;dc_motor.c: 61:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8378  003AB4  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8379  003AB8  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8380  003ABC  50DF               	movf	indf2,w,c
  8381  003ABE  6E11               	movwf	??_setMotorPWM^0,c
  8382  003AC0  5011               	movf	??_setMotorPWM^0,w,c
  8383  003AC2  6E01               	movwf	___wmul@multiplier^0,c
  8384  003AC4  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8385  003AC6  EE20 F007          	lfsr	2,7
  8386  003ACA  500F               	movf	setMotorPWM@m^0,w,c
  8387  003ACC  26D9               	addwf	fsr2l,f,c
  8388  003ACE  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8389  003AD0  22DA               	addwfc	fsr2h,f,c
  8390  003AD2  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8391  003AD6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8392  003ADA  EC0E  F02E         	call	___wmul	;wreg free
  8393  003ADE  C001  F007         	movff	?___wmul,___awdiv@dividend
  8394  003AE2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8395  003AE6  0E00               	movlw	0
  8396  003AE8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8397  003AEA  0E64               	movlw	100
  8398  003AEC  6E09               	movwf	___awdiv@divisor^0,c
  8399  003AEE  ECC9  F029         	call	___awdiv	;wreg free
  8400  003AF2  EE20 F007          	lfsr	2,7
  8401  003AF6  500F               	movf	setMotorPWM@m^0,w,c
  8402  003AF8  26D9               	addwf	fsr2l,f,c
  8403  003AFA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8404  003AFC  22DA               	addwfc	fsr2h,f,c
  8405  003AFE  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8406  003B02  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8407  003B06  5007               	movf	?___awdiv^0,w,c
  8408  003B08  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8409  003B0A  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8410  003B0C  5008               	movf	(?___awdiv+1)^0,w,c
  8411  003B0E  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8412  003B10  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8413                           
  8414                           ;dc_motor.c: 62:  }
  8415  003B12  EFAE  F01D         	goto	l3690
  8416  003B16                     l3688:
  8417                           
  8418                           ;dc_motor.c: 65:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8419  003B16  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8420  003B1A  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8421  003B1E  50DF               	movf	indf2,w,c
  8422  003B20  6E11               	movwf	??_setMotorPWM^0,c
  8423  003B22  5011               	movf	??_setMotorPWM^0,w,c
  8424  003B24  6E01               	movwf	___wmul@multiplier^0,c
  8425  003B26  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8426  003B28  EE20 F007          	lfsr	2,7
  8427  003B2C  500F               	movf	setMotorPWM@m^0,w,c
  8428  003B2E  26D9               	addwf	fsr2l,f,c
  8429  003B30  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8430  003B32  22DA               	addwfc	fsr2h,f,c
  8431  003B34  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8432  003B38  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8433  003B3C  EC0E  F02E         	call	___wmul	;wreg free
  8434  003B40  C001  F007         	movff	?___wmul,___awdiv@dividend
  8435  003B44  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8436  003B48  0E00               	movlw	0
  8437  003B4A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8438  003B4C  0E64               	movlw	100
  8439  003B4E  6E09               	movwf	___awdiv@divisor^0,c
  8440  003B50  ECC9  F029         	call	___awdiv	;wreg free
  8441  003B54  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8442  003B58  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8443  003B5C                     l3690:
  8444                           
  8445                           ;dc_motor.c: 67:  *(m->dutyHighByte) = PWMduty;
  8446  003B5C  EE20 F002          	lfsr	2,2
  8447  003B60  500F               	movf	setMotorPWM@m^0,w,c
  8448  003B62  26D9               	addwf	fsr2l,f,c
  8449  003B64  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8450  003B66  22DA               	addwfc	fsr2h,f,c
  8451  003B68  CFDE F011          	movff	postinc2,??_setMotorPWM
  8452  003B6C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8453  003B70  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8454  003B74  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8455  003B78  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8456  003B7C                     
  8457                           ;dc_motor.c: 68:  if (m->direction){
  8458  003B7C  EE20 F001          	lfsr	2,1
  8459  003B80  500F               	movf	setMotorPWM@m^0,w,c
  8460  003B82  26D9               	addwf	fsr2l,f,c
  8461  003B84  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8462  003B86  22DA               	addwfc	fsr2h,f,c
  8463  003B88  50DF               	movf	indf2,w,c
  8464  003B8A  B4D8               	btfsc	status,2,c
  8465  003B8C  EFCA  F01D         	goto	u3441
  8466  003B90  EFCC  F01D         	goto	u3440
  8467  003B94                     u3441:
  8468  003B94  EF01  F01E         	goto	l3696
  8469  003B98                     u3440:
  8470  003B98                     
  8471                           ;dc_motor.c: 69:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8472  003B98  EE20 F004          	lfsr	2,4
  8473  003B9C  500F               	movf	setMotorPWM@m^0,w,c
  8474  003B9E  26D9               	addwf	fsr2l,f,c
  8475  003BA0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8476  003BA2  22DA               	addwfc	fsr2h,f,c
  8477  003BA4  CFDE F011          	movff	postinc2,??_setMotorPWM
  8478  003BA8  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8479  003BAC  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8480  003BB0  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8481  003BB4  EE10 F004          	lfsr	1,4
  8482  003BB8  500F               	movf	setMotorPWM@m^0,w,c
  8483  003BBA  26E1               	addwf	fsr1l,f,c
  8484  003BBC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8485  003BBE  22E2               	addwfc	fsr1h,f,c
  8486  003BC0  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8487  003BC4  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8488  003BC8  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8489  003BCC  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8490  003BD0  50E7               	movf	indf1,w,c
  8491  003BD2  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8492  003BD4  EE10 F006          	lfsr	1,6
  8493  003BD8  500F               	movf	setMotorPWM@m^0,w,c
  8494  003BDA  26E1               	addwf	fsr1l,f,c
  8495  003BDC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8496  003BDE  22E2               	addwfc	fsr1h,f,c
  8497  003BE0  50E7               	movf	indf1,w,c
  8498  003BE2  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8499  003BE4  0E01               	movlw	1
  8500  003BE6  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8501  003BE8  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8502  003BEA  EFF9  F01D         	goto	u3454
  8503  003BEE                     u3455:
  8504  003BEE  90D8               	bcf	status,0,c
  8505  003BF0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8506  003BF2                     u3454:
  8507  003BF2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8508  003BF4  EFF7  F01D         	goto	u3455
  8509  003BF8  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8510  003BFA  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8511  003BFC  6EDF               	movwf	indf2,c
  8512                           
  8513                           ;dc_motor.c: 70:  } else {
  8514  003BFE  EF35  F01E         	goto	l254
  8515  003C02                     l3696:
  8516                           
  8517                           ;dc_motor.c: 71:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8518  003C02  EE20 F004          	lfsr	2,4
  8519  003C06  500F               	movf	setMotorPWM@m^0,w,c
  8520  003C08  26D9               	addwf	fsr2l,f,c
  8521  003C0A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8522  003C0C  22DA               	addwfc	fsr2h,f,c
  8523  003C0E  CFDE F011          	movff	postinc2,??_setMotorPWM
  8524  003C12  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8525  003C16  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8526  003C1A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8527  003C1E  EE10 F004          	lfsr	1,4
  8528  003C22  500F               	movf	setMotorPWM@m^0,w,c
  8529  003C24  26E1               	addwf	fsr1l,f,c
  8530  003C26  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8531  003C28  22E2               	addwfc	fsr1h,f,c
  8532  003C2A  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8533  003C2E  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8534  003C32  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8535  003C36  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8536  003C3A  50E7               	movf	indf1,w,c
  8537  003C3C  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8538  003C3E  EE10 F006          	lfsr	1,6
  8539  003C42  500F               	movf	setMotorPWM@m^0,w,c
  8540  003C44  26E1               	addwf	fsr1l,f,c
  8541  003C46  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8542  003C48  22E2               	addwfc	fsr1h,f,c
  8543  003C4A  50E7               	movf	indf1,w,c
  8544  003C4C  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8545  003C4E  0E01               	movlw	1
  8546  003C50  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8547  003C52  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8548  003C54  EF2E  F01E         	goto	u3464
  8549  003C58                     u3465:
  8550  003C58  90D8               	bcf	status,0,c
  8551  003C5A  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8552  003C5C                     u3464:
  8553  003C5C  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8554  003C5E  EF2C  F01E         	goto	u3465
  8555  003C62  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8556  003C64  0AFF               	xorlw	255
  8557  003C66  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8558  003C68  6EDF               	movwf	indf2,c
  8559  003C6A                     l254:
  8560  003C6A  0012               	return		;funcret
  8561  003C6C                     __end_of_setMotorPWM:
  8562                           	callstack 0
  8563                           
  8564 ;; *************** function ___wmul *****************
  8565 ;; Defined at:
  8566 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8567 ;; Parameters:    Size  Location     Type
  8568 ;;  multiplier      2    0[COMRAM] unsigned int 
  8569 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;  product         2    4[COMRAM] unsigned int 
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  2    0[COMRAM] unsigned int 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0, prodl, prodh
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;Total ram usage:        6 bytes
  8586 ;; Hardware stack levels used: 1
  8587 ;; Hardware stack levels required when called: 1
  8588 ;; This function calls:
  8589 ;;		Nothing
  8590 ;; This function is called by:
  8591 ;;		_setMotorPWM
  8592 ;; This function uses a non-reentrant model
  8593 ;;
  8594                           
  8595                           	psect	text35
  8596  005C1C                     __ptext35:
  8597                           	callstack 0
  8598  005C1C                     ___wmul:
  8599                           	callstack 25
  8600  005C1C  5001               	movf	___wmul@multiplier^0,w,c
  8601  005C1E  0203               	mulwf	___wmul@multiplicand^0,c
  8602  005C20  CFF3 F005          	movff	prodl,___wmul@product
  8603  005C24  CFF4 F006          	movff	prodh,___wmul@product+1
  8604  005C28  5001               	movf	___wmul@multiplier^0,w,c
  8605  005C2A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8606  005C2C  50F3               	movf	243,w,c
  8607  005C2E  2606               	addwf	(___wmul@product+1)^0,f,c
  8608  005C30  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8609  005C32  0203               	mulwf	___wmul@multiplicand^0,c
  8610  005C34  50F3               	movf	243,w,c
  8611  005C36  2606               	addwf	(___wmul@product+1)^0,f,c
  8612  005C38  C005  F001         	movff	___wmul@product,?___wmul
  8613  005C3C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8614  005C40  0012               	return		;funcret
  8615  005C42                     __end_of___wmul:
  8616                           	callstack 0
  8617                           
  8618 ;; *************** function ___awdiv *****************
  8619 ;; Defined at:
  8620 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  dividend        2    6[COMRAM] int 
  8623 ;;  divisor         2    8[COMRAM] int 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;  quotient        2   12[COMRAM] int 
  8626 ;;  sign            1   11[COMRAM] unsigned char 
  8627 ;;  counter         1   10[COMRAM] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;                  2    6[COMRAM] int 
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;Total ram usage:        8 bytes
  8642 ;; Hardware stack levels used: 1
  8643 ;; Hardware stack levels required when called: 1
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_setMotorPWM
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text36
  8652  005392                     __ptext36:
  8653                           	callstack 0
  8654  005392                     ___awdiv:
  8655                           	callstack 25
  8656  005392  0E00               	movlw	0
  8657  005394  6E0C               	movwf	___awdiv@sign^0,c
  8658  005396  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8659  005398  EFD2  F029         	goto	u3200
  8660  00539C  EFD0  F029         	goto	u3201
  8661  0053A0                     u3201:
  8662  0053A0  EFD8  F029         	goto	l3582
  8663  0053A4                     u3200:
  8664  0053A4  6C09               	negf	___awdiv@divisor^0,c
  8665  0053A6  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8666  0053A8  B0D8               	btfsc	status,0,c
  8667  0053AA  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8668  0053AC  0E01               	movlw	1
  8669  0053AE  6E0C               	movwf	___awdiv@sign^0,c
  8670  0053B0                     l3582:
  8671  0053B0  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8672  0053B2  EFDF  F029         	goto	u3210
  8673  0053B6  EFDD  F029         	goto	u3211
  8674  0053BA                     u3211:
  8675  0053BA  EFE5  F029         	goto	l3588
  8676  0053BE                     u3210:
  8677  0053BE  6C07               	negf	___awdiv@dividend^0,c
  8678  0053C0  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8679  0053C2  B0D8               	btfsc	status,0,c
  8680  0053C4  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8681  0053C6  0E01               	movlw	1
  8682  0053C8  1A0C               	xorwf	___awdiv@sign^0,f,c
  8683  0053CA                     l3588:
  8684  0053CA  0E00               	movlw	0
  8685  0053CC  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8686  0053CE  0E00               	movlw	0
  8687  0053D0  6E0D               	movwf	___awdiv@quotient^0,c
  8688  0053D2  5009               	movf	___awdiv@divisor^0,w,c
  8689  0053D4  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8690  0053D6  B4D8               	btfsc	status,2,c
  8691  0053D8  EFF0  F029         	goto	u3221
  8692  0053DC  EFF2  F029         	goto	u3220
  8693  0053E0                     u3221:
  8694  0053E0  EF1A  F02A         	goto	l3610
  8695  0053E4                     u3220:
  8696  0053E4  0E01               	movlw	1
  8697  0053E6  6E0B               	movwf	___awdiv@counter^0,c
  8698  0053E8  EFFA  F029         	goto	l3596
  8699  0053EC                     l3594:
  8700  0053EC  90D8               	bcf	status,0,c
  8701  0053EE  3609               	rlcf	___awdiv@divisor^0,f,c
  8702  0053F0  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8703  0053F2  2A0B               	incf	___awdiv@counter^0,f,c
  8704  0053F4                     l3596:
  8705  0053F4  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8706  0053F6  EFFF  F029         	goto	u3231
  8707  0053FA  EF01  F02A         	goto	u3230
  8708  0053FE                     u3231:
  8709  0053FE  EFF6  F029         	goto	l3594
  8710  005402                     u3230:
  8711  005402                     l3598:
  8712  005402  90D8               	bcf	status,0,c
  8713  005404  360D               	rlcf	___awdiv@quotient^0,f,c
  8714  005406  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8715  005408  5009               	movf	___awdiv@divisor^0,w,c
  8716  00540A  5C07               	subwf	___awdiv@dividend^0,w,c
  8717  00540C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8718  00540E  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8719  005410  A0D8               	btfss	status,0,c
  8720  005412  EF0D  F02A         	goto	u3241
  8721  005416  EF0F  F02A         	goto	u3240
  8722  00541A                     u3241:
  8723  00541A  EF14  F02A         	goto	l3606
  8724  00541E                     u3240:
  8725  00541E  5009               	movf	___awdiv@divisor^0,w,c
  8726  005420  5E07               	subwf	___awdiv@dividend^0,f,c
  8727  005422  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8728  005424  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8729  005426  800D               	bsf	___awdiv@quotient^0,0,c
  8730  005428                     l3606:
  8731  005428  90D8               	bcf	status,0,c
  8732  00542A  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8733  00542C  3209               	rrcf	___awdiv@divisor^0,f,c
  8734  00542E  2E0B               	decfsz	___awdiv@counter^0,f,c
  8735  005430  EF01  F02A         	goto	l3598
  8736  005434                     l3610:
  8737  005434  500C               	movf	___awdiv@sign^0,w,c
  8738  005436  B4D8               	btfsc	status,2,c
  8739  005438  EF20  F02A         	goto	u3251
  8740  00543C  EF22  F02A         	goto	u3250
  8741  005440                     u3251:
  8742  005440  EF26  F02A         	goto	l3614
  8743  005444                     u3250:
  8744  005444  6C0D               	negf	___awdiv@quotient^0,c
  8745  005446  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8746  005448  B0D8               	btfsc	status,0,c
  8747  00544A  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8748  00544C                     l3614:
  8749  00544C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8750  005450  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8751  005454  0012               	return		;funcret
  8752  005456                     __end_of___awdiv:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _calibrate_white *****************
  8756 ;; Defined at:
  8757 ;;		line 238 in file "color.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  w               2   11[COMRAM] PTR struct white_card
  8760 ;;		 -> main@white(28), 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;		None
  8763 ;; Return value:  Size  Location     Type
  8764 ;;                  1    wreg      void 
  8765 ;; Registers used:
  8766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8767 ;; Tracked objects:
  8768 ;;		On entry : 0/0
  8769 ;;		On exit  : 0/0
  8770 ;;		Unchanged: 0/0
  8771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;Total ram usage:        4 bytes
  8777 ;; Hardware stack levels used: 1
  8778 ;; Hardware stack levels required when called: 4
  8779 ;; This function calls:
  8780 ;;		_LED_B
  8781 ;;		_LED_C
  8782 ;;		_LED_G
  8783 ;;		_LED_OFF
  8784 ;;		_LED_R
  8785 ;;		_color_read_Blue
  8786 ;;		_color_read_Clear
  8787 ;;		_color_read_Green
  8788 ;;		_color_read_Red
  8789 ;;		_toggle_light
  8790 ;; This function is called by:
  8791 ;;		_setup
  8792 ;;		_test_function
  8793 ;; This function uses a non-reentrant model
  8794 ;;
  8795                           
  8796                           	psect	text37
  8797  00388E                     __ptext37:
  8798                           	callstack 0
  8799  00388E                     _calibrate_white:
  8800                           	callstack 25
  8801  00388E                     
  8802                           ;color.c: 238: void calibrate_white(struct white_card *w);color.c: 239: {;color.c: 240: 
      +                              LED_OFF();
  8803  00388E  EC31  F02E         	call	_LED_OFF	;wreg free
  8804  003892                     
  8805                           ;color.c: 241:     toggle_light(1,2);
  8806  003892  0E02               	movlw	2
  8807  003894  6E01               	movwf	toggle_light@toggletime^0,c
  8808  003896  0E01               	movlw	1
  8809  003898  ECE1  F019         	call	_toggle_light
  8810  00389C                     
  8811                           ;color.c: 242:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8812  00389C  0E29               	movlw	41
  8813  00389E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8814  0038A0  0E96               	movlw	150
  8815  0038A2  6E0E               	movwf	??_calibrate_white^0,c
  8816  0038A4  0E7F               	movlw	127
  8817  0038A6                     u6287:
  8818  0038A6  2EE8               	decfsz	wreg,f,c
  8819  0038A8  D7FE               	bra	u6287
  8820  0038AA  2E0E               	decfsz	??_calibrate_white^0,f,c
  8821  0038AC  D7FC               	bra	u6287
  8822  0038AE  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8823  0038B0  D7FA               	bra	u6287
  8824  0038B2  F000               	nop	
  8825  0038B4                     
  8826                           ;color.c: 244:     LED_R();
  8827  0038B4  EC21  F02E         	call	_LED_R	;wreg free
  8828  0038B8                     
  8829                           ;color.c: 245:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8830  0038B8  0E09               	movlw	9
  8831  0038BA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8832  0038BC  0E1E               	movlw	30
  8833  0038BE  6E0E               	movwf	??_calibrate_white^0,c
  8834  0038C0  0EE4               	movlw	228
  8835  0038C2                     u6297:
  8836  0038C2  2EE8               	decfsz	wreg,f,c
  8837  0038C4  D7FE               	bra	u6297
  8838  0038C6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8839  0038C8  D7FC               	bra	u6297
  8840  0038CA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8841  0038CC  D7FA               	bra	u6297
  8842  0038CE  D000               	nop2	
  8843  0038D0                     
  8844                           ;color.c: 246:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8845  0038D0  EC89  F02B         	call	_color_read_Red	;wreg free
  8846  0038D4  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8847  0038D8  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8848  0038DC  C005  FFDE         	movff	?_color_read_Red,postinc2
  8849  0038E0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8850  0038E4  ECB1  F02B         	call	_color_read_Green	;wreg free
  8851  0038E8  EE20 F002          	lfsr	2,2
  8852  0038EC  500C               	movf	calibrate_white@w^0,w,c
  8853  0038EE  26D9               	addwf	fsr2l,f,c
  8854  0038F0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8855  0038F2  22DA               	addwfc	fsr2h,f,c
  8856  0038F4  C005  FFDE         	movff	?_color_read_Green,postinc2
  8857  0038F8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8858  0038FC  ECD9  F02B         	call	_color_read_Blue	;wreg free
  8859  003900  EE20 F004          	lfsr	2,4
  8860  003904  500C               	movf	calibrate_white@w^0,w,c
  8861  003906  26D9               	addwf	fsr2l,f,c
  8862  003908  500D               	movf	(calibrate_white@w+1)^0,w,c
  8863  00390A  22DA               	addwfc	fsr2h,f,c
  8864  00390C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8865  003910  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8866  003914                     
  8867                           ;color.c: 249:     LED_G();
  8868  003914  EC41  F02E         	call	_LED_G	;wreg free
  8869  003918                     
  8870                           ;color.c: 250:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8871  003918  0E09               	movlw	9
  8872  00391A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8873  00391C  0E1E               	movlw	30
  8874  00391E  6E0E               	movwf	??_calibrate_white^0,c
  8875  003920  0EE4               	movlw	228
  8876  003922                     u6307:
  8877  003922  2EE8               	decfsz	wreg,f,c
  8878  003924  D7FE               	bra	u6307
  8879  003926  2E0E               	decfsz	??_calibrate_white^0,f,c
  8880  003928  D7FC               	bra	u6307
  8881  00392A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8882  00392C  D7FA               	bra	u6307
  8883  00392E  D000               	nop2	
  8884  003930                     
  8885                           ;color.c: 251:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8886  003930  EC89  F02B         	call	_color_read_Red	;wreg free
  8887  003934  EE20 F006          	lfsr	2,6
  8888  003938  500C               	movf	calibrate_white@w^0,w,c
  8889  00393A  26D9               	addwf	fsr2l,f,c
  8890  00393C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8891  00393E  22DA               	addwfc	fsr2h,f,c
  8892  003940  C005  FFDE         	movff	?_color_read_Red,postinc2
  8893  003944  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8894  003948  ECB1  F02B         	call	_color_read_Green	;wreg free
  8895  00394C  EE20 F008          	lfsr	2,8
  8896  003950  500C               	movf	calibrate_white@w^0,w,c
  8897  003952  26D9               	addwf	fsr2l,f,c
  8898  003954  500D               	movf	(calibrate_white@w+1)^0,w,c
  8899  003956  22DA               	addwfc	fsr2h,f,c
  8900  003958  C005  FFDE         	movff	?_color_read_Green,postinc2
  8901  00395C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8902  003960  ECD9  F02B         	call	_color_read_Blue	;wreg free
  8903  003964  EE20 F00A          	lfsr	2,10
  8904  003968  500C               	movf	calibrate_white@w^0,w,c
  8905  00396A  26D9               	addwf	fsr2l,f,c
  8906  00396C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8907  00396E  22DA               	addwfc	fsr2h,f,c
  8908  003970  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8909  003974  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8910  003978                     
  8911                           ;color.c: 255:     LED_B();
  8912  003978  EC51  F02E         	call	_LED_B	;wreg free
  8913  00397C                     
  8914                           ;color.c: 256:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8915  00397C  0E09               	movlw	9
  8916  00397E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8917  003980  0E1E               	movlw	30
  8918  003982  6E0E               	movwf	??_calibrate_white^0,c
  8919  003984  0EE4               	movlw	228
  8920  003986                     u6317:
  8921  003986  2EE8               	decfsz	wreg,f,c
  8922  003988  D7FE               	bra	u6317
  8923  00398A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8924  00398C  D7FC               	bra	u6317
  8925  00398E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8926  003990  D7FA               	bra	u6317
  8927  003992  D000               	nop2	
  8928  003994                     
  8929                           ;color.c: 257:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  8930  003994  EC89  F02B         	call	_color_read_Red	;wreg free
  8931  003998  EE20 F00C          	lfsr	2,12
  8932  00399C  500C               	movf	calibrate_white@w^0,w,c
  8933  00399E  26D9               	addwf	fsr2l,f,c
  8934  0039A0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8935  0039A2  22DA               	addwfc	fsr2h,f,c
  8936  0039A4  C005  FFDE         	movff	?_color_read_Red,postinc2
  8937  0039A8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8938  0039AC  ECB1  F02B         	call	_color_read_Green	;wreg free
  8939  0039B0  EE20 F00E          	lfsr	2,14
  8940  0039B4  500C               	movf	calibrate_white@w^0,w,c
  8941  0039B6  26D9               	addwf	fsr2l,f,c
  8942  0039B8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8943  0039BA  22DA               	addwfc	fsr2h,f,c
  8944  0039BC  C005  FFDE         	movff	?_color_read_Green,postinc2
  8945  0039C0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8946  0039C4  ECD9  F02B         	call	_color_read_Blue	;wreg free
  8947  0039C8  EE20 F010          	lfsr	2,16
  8948  0039CC  500C               	movf	calibrate_white@w^0,w,c
  8949  0039CE  26D9               	addwf	fsr2l,f,c
  8950  0039D0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8951  0039D2  22DA               	addwfc	fsr2h,f,c
  8952  0039D4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8953  0039D8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8954  0039DC  EC01  F02C         	call	_color_read_Clear	;wreg free
  8955  0039E0  EE20 F01A          	lfsr	2,26
  8956  0039E4  500C               	movf	calibrate_white@w^0,w,c
  8957  0039E6  26D9               	addwf	fsr2l,f,c
  8958  0039E8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8959  0039EA  22DA               	addwfc	fsr2h,f,c
  8960  0039EC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8961  0039F0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8962  0039F4                     
  8963                           ;color.c: 260:     LED_C();
  8964  0039F4  EC61  F02E         	call	_LED_C	;wreg free
  8965  0039F8                     
  8966                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8967  0039F8  0E09               	movlw	9
  8968  0039FA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8969  0039FC  0E1E               	movlw	30
  8970  0039FE  6E0E               	movwf	??_calibrate_white^0,c
  8971  003A00  0EE4               	movlw	228
  8972  003A02                     u6327:
  8973  003A02  2EE8               	decfsz	wreg,f,c
  8974  003A04  D7FE               	bra	u6327
  8975  003A06  2E0E               	decfsz	??_calibrate_white^0,f,c
  8976  003A08  D7FC               	bra	u6327
  8977  003A0A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8978  003A0C  D7FA               	bra	u6327
  8979  003A0E  D000               	nop2	
  8980  003A10                     
  8981                           ;color.c: 262:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  8982  003A10  EC89  F02B         	call	_color_read_Red	;wreg free
  8983  003A14  EE20 F012          	lfsr	2,18
  8984  003A18  500C               	movf	calibrate_white@w^0,w,c
  8985  003A1A  26D9               	addwf	fsr2l,f,c
  8986  003A1C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8987  003A1E  22DA               	addwfc	fsr2h,f,c
  8988  003A20  C005  FFDE         	movff	?_color_read_Red,postinc2
  8989  003A24  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8990  003A28  ECB1  F02B         	call	_color_read_Green	;wreg free
  8991  003A2C  EE20 F014          	lfsr	2,20
  8992  003A30  500C               	movf	calibrate_white@w^0,w,c
  8993  003A32  26D9               	addwf	fsr2l,f,c
  8994  003A34  500D               	movf	(calibrate_white@w+1)^0,w,c
  8995  003A36  22DA               	addwfc	fsr2h,f,c
  8996  003A38  C005  FFDE         	movff	?_color_read_Green,postinc2
  8997  003A3C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8998  003A40  ECD9  F02B         	call	_color_read_Blue	;wreg free
  8999  003A44  EE20 F016          	lfsr	2,22
  9000  003A48  500C               	movf	calibrate_white@w^0,w,c
  9001  003A4A  26D9               	addwf	fsr2l,f,c
  9002  003A4C  500D               	movf	(calibrate_white@w+1)^0,w,c
  9003  003A4E  22DA               	addwfc	fsr2h,f,c
  9004  003A50  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9005  003A54  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9006  003A58  EC01  F02C         	call	_color_read_Clear	;wreg free
  9007  003A5C  EE20 F018          	lfsr	2,24
  9008  003A60  500C               	movf	calibrate_white@w^0,w,c
  9009  003A62  26D9               	addwf	fsr2l,f,c
  9010  003A64  500D               	movf	(calibrate_white@w+1)^0,w,c
  9011  003A66  22DA               	addwfc	fsr2h,f,c
  9012  003A68  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9013  003A6C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9014  003A70                     
  9015                           ;color.c: 264:     LED_OFF();
  9016  003A70  EC31  F02E         	call	_LED_OFF	;wreg free
  9017  003A74                     
  9018                           ;color.c: 265:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9019  003A74  0E29               	movlw	41
  9020  003A76  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9021  003A78  0E96               	movlw	150
  9022  003A7A  6E0E               	movwf	??_calibrate_white^0,c
  9023  003A7C  0E7F               	movlw	127
  9024  003A7E                     u6337:
  9025  003A7E  2EE8               	decfsz	wreg,f,c
  9026  003A80  D7FE               	bra	u6337
  9027  003A82  2E0E               	decfsz	??_calibrate_white^0,f,c
  9028  003A84  D7FC               	bra	u6337
  9029  003A86  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9030  003A88  D7FA               	bra	u6337
  9031  003A8A  F000               	nop	
  9032                           
  9033                           ;color.c: 266:     toggle_light(1,2);
  9034  003A8C  0E02               	movlw	2
  9035  003A8E  6E01               	movwf	toggle_light@toggletime^0,c
  9036  003A90  0E01               	movlw	1
  9037  003A92  ECE1  F019         	call	_toggle_light
  9038  003A96  0012               	return		;funcret
  9039  003A98                     __end_of_calibrate_white:
  9040                           	callstack 0
  9041                           
  9042 ;; *************** function _color_read_Red *****************
  9043 ;; Defined at:
  9044 ;;		line 111 in file "color.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  tmp             2    9[COMRAM] unsigned int 
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  2    4[COMRAM] unsigned int 
  9051 ;; Registers used:
  9052 ;;		wreg, status,2, status,0, cstack
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;Total ram usage:        7 bytes
  9063 ;; Hardware stack levels used: 1
  9064 ;; Hardware stack levels required when called: 3
  9065 ;; This function calls:
  9066 ;;		_I2C_2_Master_Read
  9067 ;;		_I2C_2_Master_RepStart
  9068 ;;		_I2C_2_Master_Start
  9069 ;;		_I2C_2_Master_Stop
  9070 ;;		_I2C_2_Master_Write
  9071 ;; This function is called by:
  9072 ;;		_read_color
  9073 ;;		_calibrate_white
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text38
  9078  005712                     __ptext38:
  9079                           	callstack 0
  9080  005712                     _color_read_Red:
  9081                           	callstack 24
  9082  005712                     
  9083                           ;color.c: 113:  unsigned int tmp;;color.c: 114:  I2C_2_Master_Start();
  9084  005712  ECC1  F02E         	call	_I2C_2_Master_Start	;wreg free
  9085                           
  9086                           ;color.c: 115:  I2C_2_Master_Write(0x52 | 0x00);
  9087  005716  0E52               	movlw	82
  9088  005718  ECAB  F02E         	call	_I2C_2_Master_Write
  9089                           
  9090                           ;color.c: 116:  I2C_2_Master_Write(0xA0 | 0x16);
  9091  00571C  0EB6               	movlw	182
  9092  00571E  ECAB  F02E         	call	_I2C_2_Master_Write
  9093                           
  9094                           ;color.c: 117:  I2C_2_Master_RepStart();
  9095  005722  ECB7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9096                           
  9097                           ;color.c: 118:  I2C_2_Master_Write(0x52 | 0x01);
  9098  005726  0E53               	movlw	83
  9099  005728  ECAB  F02E         	call	_I2C_2_Master_Write
  9100                           
  9101                           ;color.c: 119:  tmp=I2C_2_Master_Read(1);
  9102  00572C  0E01               	movlw	1
  9103  00572E  EC8F  F02C         	call	_I2C_2_Master_Read
  9104  005732  6E07               	movwf	??_color_read_Red^0,c
  9105  005734  5007               	movf	??_color_read_Red^0,w,c
  9106  005736  6E0A               	movwf	color_read_Red@tmp^0,c
  9107  005738  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9108                           
  9109                           ;color.c: 120:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9110  00573A  0E00               	movlw	0
  9111  00573C  EC8F  F02C         	call	_I2C_2_Master_Read
  9112  005740  6E07               	movwf	??_color_read_Red^0,c
  9113  005742  5007               	movf	??_color_read_Red^0,w,c
  9114  005744  6E09               	movwf	(??_color_read_Red+2)^0,c
  9115  005746  6A08               	clrf	(??_color_read_Red+1)^0,c
  9116  005748  500A               	movf	color_read_Red@tmp^0,w,c
  9117  00574A  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9118  00574C  6E0A               	movwf	color_read_Red@tmp^0,c
  9119  00574E  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9120  005750  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9121  005752  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9122                           
  9123                           ;color.c: 121:  I2C_2_Master_Stop();
  9124  005754  ECBC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9125  005758                     
  9126                           ;color.c: 122:  return tmp;
  9127  005758  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9128  00575C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9129  005760  0012               	return		;funcret
  9130  005762                     __end_of_color_read_Red:
  9131                           	callstack 0
  9132                           
  9133 ;; *************** function _color_read_Green *****************
  9134 ;; Defined at:
  9135 ;;		line 139 in file "color.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  tmp             2    9[COMRAM] unsigned int 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  2    4[COMRAM] unsigned int 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0, cstack
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;Total ram usage:        7 bytes
  9154 ;; Hardware stack levels used: 1
  9155 ;; Hardware stack levels required when called: 3
  9156 ;; This function calls:
  9157 ;;		_I2C_2_Master_Read
  9158 ;;		_I2C_2_Master_RepStart
  9159 ;;		_I2C_2_Master_Start
  9160 ;;		_I2C_2_Master_Stop
  9161 ;;		_I2C_2_Master_Write
  9162 ;; This function is called by:
  9163 ;;		_read_color
  9164 ;;		_calibrate_white
  9165 ;;		_detect_wall
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text39
  9170  005762                     __ptext39:
  9171                           	callstack 0
  9172  005762                     _color_read_Green:
  9173                           	callstack 24
  9174  005762                     
  9175                           ;color.c: 141:  unsigned int tmp;;color.c: 142:  I2C_2_Master_Start();
  9176  005762  ECC1  F02E         	call	_I2C_2_Master_Start	;wreg free
  9177                           
  9178                           ;color.c: 143:  I2C_2_Master_Write(0x52 | 0x00);
  9179  005766  0E52               	movlw	82
  9180  005768  ECAB  F02E         	call	_I2C_2_Master_Write
  9181                           
  9182                           ;color.c: 144:  I2C_2_Master_Write(0xA0 | 0x18);
  9183  00576C  0EB8               	movlw	184
  9184  00576E  ECAB  F02E         	call	_I2C_2_Master_Write
  9185                           
  9186                           ;color.c: 145:  I2C_2_Master_RepStart();
  9187  005772  ECB7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9188                           
  9189                           ;color.c: 146:  I2C_2_Master_Write(0x52 | 0x01);
  9190  005776  0E53               	movlw	83
  9191  005778  ECAB  F02E         	call	_I2C_2_Master_Write
  9192                           
  9193                           ;color.c: 147:  tmp=I2C_2_Master_Read(1);
  9194  00577C  0E01               	movlw	1
  9195  00577E  EC8F  F02C         	call	_I2C_2_Master_Read
  9196  005782  6E07               	movwf	??_color_read_Green^0,c
  9197  005784  5007               	movf	??_color_read_Green^0,w,c
  9198  005786  6E0A               	movwf	color_read_Green@tmp^0,c
  9199  005788  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9200                           
  9201                           ;color.c: 148:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9202  00578A  0E00               	movlw	0
  9203  00578C  EC8F  F02C         	call	_I2C_2_Master_Read
  9204  005790  6E07               	movwf	??_color_read_Green^0,c
  9205  005792  5007               	movf	??_color_read_Green^0,w,c
  9206  005794  6E09               	movwf	(??_color_read_Green+2)^0,c
  9207  005796  6A08               	clrf	(??_color_read_Green+1)^0,c
  9208  005798  500A               	movf	color_read_Green@tmp^0,w,c
  9209  00579A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9210  00579C  6E0A               	movwf	color_read_Green@tmp^0,c
  9211  00579E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9212  0057A0  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9213  0057A2  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9214                           
  9215                           ;color.c: 149:  I2C_2_Master_Stop();
  9216  0057A4  ECBC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9217  0057A8                     
  9218                           ;color.c: 150:  return tmp;
  9219  0057A8  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9220  0057AC  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9221  0057B0  0012               	return		;funcret
  9222  0057B2                     __end_of_color_read_Green:
  9223                           	callstack 0
  9224                           
  9225 ;; *************** function _color_read_Blue *****************
  9226 ;; Defined at:
  9227 ;;		line 125 in file "color.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;		None
  9230 ;; Auto vars:     Size  Location     Type
  9231 ;;  tmp             2    9[COMRAM] unsigned int 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  2    4[COMRAM] unsigned int 
  9234 ;; Registers used:
  9235 ;;		wreg, status,2, status,0, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9243 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;Total ram usage:        7 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 3
  9248 ;; This function calls:
  9249 ;;		_I2C_2_Master_Read
  9250 ;;		_I2C_2_Master_RepStart
  9251 ;;		_I2C_2_Master_Start
  9252 ;;		_I2C_2_Master_Stop
  9253 ;;		_I2C_2_Master_Write
  9254 ;; This function is called by:
  9255 ;;		_read_color
  9256 ;;		_calibrate_white
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text40
  9261  0057B2                     __ptext40:
  9262                           	callstack 0
  9263  0057B2                     _color_read_Blue:
  9264                           	callstack 24
  9265  0057B2                     
  9266                           ;color.c: 127:  unsigned int tmp;;color.c: 128:  I2C_2_Master_Start();
  9267  0057B2  ECC1  F02E         	call	_I2C_2_Master_Start	;wreg free
  9268                           
  9269                           ;color.c: 129:  I2C_2_Master_Write(0x52 | 0x00);
  9270  0057B6  0E52               	movlw	82
  9271  0057B8  ECAB  F02E         	call	_I2C_2_Master_Write
  9272                           
  9273                           ;color.c: 130:  I2C_2_Master_Write(0xA0 | 0x1A);
  9274  0057BC  0EBA               	movlw	186
  9275  0057BE  ECAB  F02E         	call	_I2C_2_Master_Write
  9276                           
  9277                           ;color.c: 131:  I2C_2_Master_RepStart();
  9278  0057C2  ECB7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9279                           
  9280                           ;color.c: 132:  I2C_2_Master_Write(0x52 | 0x01);
  9281  0057C6  0E53               	movlw	83
  9282  0057C8  ECAB  F02E         	call	_I2C_2_Master_Write
  9283                           
  9284                           ;color.c: 133:  tmp=I2C_2_Master_Read(1);
  9285  0057CC  0E01               	movlw	1
  9286  0057CE  EC8F  F02C         	call	_I2C_2_Master_Read
  9287  0057D2  6E07               	movwf	??_color_read_Blue^0,c
  9288  0057D4  5007               	movf	??_color_read_Blue^0,w,c
  9289  0057D6  6E0A               	movwf	color_read_Blue@tmp^0,c
  9290  0057D8  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9291                           
  9292                           ;color.c: 134:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9293  0057DA  0E00               	movlw	0
  9294  0057DC  EC8F  F02C         	call	_I2C_2_Master_Read
  9295  0057E0  6E07               	movwf	??_color_read_Blue^0,c
  9296  0057E2  5007               	movf	??_color_read_Blue^0,w,c
  9297  0057E4  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9298  0057E6  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9299  0057E8  500A               	movf	color_read_Blue@tmp^0,w,c
  9300  0057EA  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9301  0057EC  6E0A               	movwf	color_read_Blue@tmp^0,c
  9302  0057EE  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9303  0057F0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9304  0057F2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9305                           
  9306                           ;color.c: 135:  I2C_2_Master_Stop();
  9307  0057F4  ECBC  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9308  0057F8                     
  9309                           ;color.c: 136:  return tmp;
  9310  0057F8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9311  0057FC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9312  005800  0012               	return		;funcret
  9313  005802                     __end_of_color_read_Blue:
  9314                           	callstack 0
  9315                           
  9316 ;; *************** function _LED_R *****************
  9317 ;; Defined at:
  9318 ;;		line 184 in file "color.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;		None
  9321 ;; Auto vars:     Size  Location     Type
  9322 ;;		None
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  1    wreg      void 
  9325 ;; Registers used:
  9326 ;;		wreg
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9336 ;;Total ram usage:        2 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 1
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_calibrate_white
  9343 ;;		_detect_color
  9344 ;;		_color_data_collection
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text41
  9349  005C42                     __ptext41:
  9350                           	callstack 0
  9351  005C42                     _LED_R:
  9352                           	callstack 27
  9353  005C42                     
  9354                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9355  005C42  827F               	bsf	127,1,c	;volatile
  9356                           
  9357                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9358  005C44  9E7E               	bcf	126,7,c	;volatile
  9359                           
  9360                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9361  005C46  9879               	bcf	121,4,c	;volatile
  9362  005C48                     
  9363                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9364  005C48  0E11               	movlw	17
  9365  005C4A  6E02               	movwf	(??_LED_R+1)^0,c
  9366  005C4C  0E3C               	movlw	60
  9367  005C4E  6E01               	movwf	??_LED_R^0,c
  9368  005C50  0ECB               	movlw	203
  9369  005C52                     u6347:
  9370  005C52  2EE8               	decfsz	wreg,f,c
  9371  005C54  D7FE               	bra	u6347
  9372  005C56  2E01               	decfsz	??_LED_R^0,f,c
  9373  005C58  D7FC               	bra	u6347
  9374  005C5A  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9375  005C5C  D7FA               	bra	u6347
  9376  005C5E  F000               	nop	
  9377  005C60  0012               	return		;funcret
  9378  005C62                     __end_of_LED_R:
  9379                           	callstack 0
  9380                           
  9381 ;; *************** function _LED_OFF *****************
  9382 ;; Defined at:
  9383 ;;		line 175 in file "color.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;		None
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;		None
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  1    wreg      void 
  9390 ;; Registers used:
  9391 ;;		wreg
  9392 ;; Tracked objects:
  9393 ;;		On entry : 0/0
  9394 ;;		On exit  : 0/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9400 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9401 ;;Total ram usage:        2 bytes
  9402 ;; Hardware stack levels used: 1
  9403 ;; Hardware stack levels required when called: 1
  9404 ;; This function calls:
  9405 ;;		Nothing
  9406 ;; This function is called by:
  9407 ;;		_calibrate_white
  9408 ;;		_setup
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text42
  9413  005C62                     __ptext42:
  9414                           	callstack 0
  9415  005C62                     _LED_OFF:
  9416                           	callstack 27
  9417  005C62                     
  9418                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9419  005C62  927F               	bcf	127,1,c	;volatile
  9420                           
  9421                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9422  005C64  9E7E               	bcf	126,7,c	;volatile
  9423                           
  9424                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9425  005C66  9879               	bcf	121,4,c	;volatile
  9426  005C68                     
  9427                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9428  005C68  0E11               	movlw	17
  9429  005C6A  6E02               	movwf	(??_LED_OFF+1)^0,c
  9430  005C6C  0E3C               	movlw	60
  9431  005C6E  6E01               	movwf	??_LED_OFF^0,c
  9432  005C70  0ECB               	movlw	203
  9433  005C72                     u6357:
  9434  005C72  2EE8               	decfsz	wreg,f,c
  9435  005C74  D7FE               	bra	u6357
  9436  005C76  2E01               	decfsz	??_LED_OFF^0,f,c
  9437  005C78  D7FC               	bra	u6357
  9438  005C7A  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9439  005C7C  D7FA               	bra	u6357
  9440  005C7E  F000               	nop	
  9441  005C80  0012               	return		;funcret
  9442  005C82                     __end_of_LED_OFF:
  9443                           	callstack 0
  9444                           
  9445 ;; *************** function _LED_G *****************
  9446 ;; Defined at:
  9447 ;;		line 211 in file "color.c"
  9448 ;; Parameters:    Size  Location     Type
  9449 ;;		None
  9450 ;; Auto vars:     Size  Location     Type
  9451 ;;		None
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  1    wreg      void 
  9454 ;; Registers used:
  9455 ;;		wreg
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9465 ;;Total ram usage:        2 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; Hardware stack levels required when called: 1
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		_calibrate_white
  9472 ;;		_detect_color
  9473 ;;		_color_data_collection
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           	psect	text43
  9478  005C82                     __ptext43:
  9479                           	callstack 0
  9480  005C82                     _LED_G:
  9481                           	callstack 27
  9482  005C82                     
  9483                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9484  005C82  927F               	bcf	127,1,c	;volatile
  9485                           
  9486                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9487  005C84  9E7E               	bcf	126,7,c	;volatile
  9488                           
  9489                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9490  005C86  8879               	bsf	121,4,c	;volatile
  9491  005C88                     
  9492                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9493  005C88  0E11               	movlw	17
  9494  005C8A  6E02               	movwf	(??_LED_G+1)^0,c
  9495  005C8C  0E3C               	movlw	60
  9496  005C8E  6E01               	movwf	??_LED_G^0,c
  9497  005C90  0ECB               	movlw	203
  9498  005C92                     u6367:
  9499  005C92  2EE8               	decfsz	wreg,f,c
  9500  005C94  D7FE               	bra	u6367
  9501  005C96  2E01               	decfsz	??_LED_G^0,f,c
  9502  005C98  D7FC               	bra	u6367
  9503  005C9A  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9504  005C9C  D7FA               	bra	u6367
  9505  005C9E  F000               	nop	
  9506  005CA0  0012               	return		;funcret
  9507  005CA2                     __end_of_LED_G:
  9508                           	callstack 0
  9509                           
  9510 ;; *************** function _LED_B *****************
  9511 ;; Defined at:
  9512 ;;		line 202 in file "color.c"
  9513 ;; Parameters:    Size  Location     Type
  9514 ;;		None
  9515 ;; Auto vars:     Size  Location     Type
  9516 ;;		None
  9517 ;; Return value:  Size  Location     Type
  9518 ;;                  1    wreg      void 
  9519 ;; Registers used:
  9520 ;;		wreg
  9521 ;; Tracked objects:
  9522 ;;		On entry : 0/0
  9523 ;;		On exit  : 0/0
  9524 ;;		Unchanged: 0/0
  9525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9528 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9530 ;;Total ram usage:        2 bytes
  9531 ;; Hardware stack levels used: 1
  9532 ;; Hardware stack levels required when called: 1
  9533 ;; This function calls:
  9534 ;;		Nothing
  9535 ;; This function is called by:
  9536 ;;		_calibrate_white
  9537 ;;		_detect_color
  9538 ;;		_color_data_collection
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           	psect	text44
  9543  005CA2                     __ptext44:
  9544                           	callstack 0
  9545  005CA2                     _LED_B:
  9546                           	callstack 27
  9547  005CA2                     
  9548                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9549  005CA2  927F               	bcf	127,1,c	;volatile
  9550                           
  9551                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9552  005CA4  8E7E               	bsf	126,7,c	;volatile
  9553                           
  9554                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9555  005CA6  9879               	bcf	121,4,c	;volatile
  9556  005CA8                     
  9557                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9558  005CA8  0E11               	movlw	17
  9559  005CAA  6E02               	movwf	(??_LED_B+1)^0,c
  9560  005CAC  0E3C               	movlw	60
  9561  005CAE  6E01               	movwf	??_LED_B^0,c
  9562  005CB0  0ECB               	movlw	203
  9563  005CB2                     u6377:
  9564  005CB2  2EE8               	decfsz	wreg,f,c
  9565  005CB4  D7FE               	bra	u6377
  9566  005CB6  2E01               	decfsz	??_LED_B^0,f,c
  9567  005CB8  D7FC               	bra	u6377
  9568  005CBA  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9569  005CBC  D7FA               	bra	u6377
  9570  005CBE  F000               	nop	
  9571  005CC0  0012               	return		;funcret
  9572  005CC2                     __end_of_LED_B:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _amb_light_measure *****************
  9576 ;; Defined at:
  9577 ;;		line 358 in file "color.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  9580 ;;		 -> main@rgb(8), main@amb(8), 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  9583 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  9584 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  9585 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  9586 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  2   10[BANK0 ] unsigned int 
  9589 ;; Registers used:
  9590 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9596 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9599 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9600 ;;Total ram usage:       14 bytes
  9601 ;; Hardware stack levels used: 1
  9602 ;; Hardware stack levels required when called: 5
  9603 ;; This function calls:
  9604 ;;		_LED_C
  9605 ;;		___fldiv
  9606 ;;		___xxtofl
  9607 ;;		_color_read_Clear
  9608 ;;		_lroundf
  9609 ;;		_toggle_light
  9610 ;; This function is called by:
  9611 ;;		_setup
  9612 ;;		_test_function
  9613 ;; This function uses a non-reentrant model
  9614 ;;
  9615                           
  9616                           	psect	text45
  9617  004B84                     __ptext45:
  9618                           	callstack 0
  9619  004B84                     _amb_light_measure:
  9620                           	callstack 24
  9621  004B84  0E00               	movlw	0
  9622  004B86  0100               	movlb	0	; () banked
  9623  004B88  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  9624  004B8A  0E00               	movlw	0
  9625  004B8C  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  9626  004B8E  0E00               	movlw	0
  9627  004B90  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  9628  004B92  0E00               	movlw	0
  9629  004B94  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  9630  004B96  0E00               	movlw	0
  9631  004B98  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  9632  004B9A  0E00               	movlw	0
  9633  004B9C  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  9634  004B9E                     
  9635                           ; BSR set to: 0
  9636                           ;color.c: 361:     toggle_light(2,2);
  9637  004B9E  0E02               	movlw	2
  9638  004BA0  6E01               	movwf	toggle_light@toggletime^0,c
  9639  004BA2  0E02               	movlw	2
  9640  004BA4  ECE1  F019         	call	_toggle_light
  9641  004BA8                     
  9642                           ;color.c: 362:     LED_C();
  9643  004BA8  EC61  F02E         	call	_LED_C	;wreg free
  9644  004BAC                     
  9645                           ;color.c: 363:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9646  004BAC  0E29               	movlw	41
  9647  004BAE  0100               	movlb	0	; () banked
  9648  004BB0  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9649  004BB2  0E96               	movlw	150
  9650  004BB4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9651  004BB6  0E7F               	movlw	127
  9652  004BB8                     u6387:
  9653  004BB8  2EE8               	decfsz	wreg,f,c
  9654  004BBA  D7FE               	bra	u6387
  9655  004BBC  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9656  004BBE  D7FC               	bra	u6387
  9657  004BC0  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9658  004BC2  D7FA               	bra	u6387
  9659  004BC4                     
  9660                           ;color.c: 365:     CC_amb_1 = color_read_Clear();
  9661  004BC4  EC01  F02C         	call	_color_read_Clear	;wreg free
  9662  004BC8  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9663  004BCC  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9664  004BD0                     
  9665                           ;color.c: 366:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9666  004BD0  0E11               	movlw	17
  9667  004BD2  0100               	movlb	0	; () banked
  9668  004BD4  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9669  004BD6  0E3C               	movlw	60
  9670  004BD8  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9671  004BDA  0ECB               	movlw	203
  9672  004BDC                     u6397:
  9673  004BDC  2EE8               	decfsz	wreg,f,c
  9674  004BDE  D7FE               	bra	u6397
  9675  004BE0  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9676  004BE2  D7FC               	bra	u6397
  9677  004BE4  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9678  004BE6  D7FA               	bra	u6397
  9679  004BE8                     
  9680                           ;color.c: 368:     CC_amb_2 = color_read_Clear();
  9681  004BE8  EC01  F02C         	call	_color_read_Clear	;wreg free
  9682  004BEC  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9683  004BF0  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9684  004BF4                     
  9685                           ;color.c: 369:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9686  004BF4  0E11               	movlw	17
  9687  004BF6  0100               	movlb	0	; () banked
  9688  004BF8  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9689  004BFA  0E3C               	movlw	60
  9690  004BFC  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9691  004BFE  0ECB               	movlw	203
  9692  004C00                     u6407:
  9693  004C00  2EE8               	decfsz	wreg,f,c
  9694  004C02  D7FE               	bra	u6407
  9695  004C04  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9696  004C06  D7FC               	bra	u6407
  9697  004C08  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9698  004C0A  D7FA               	bra	u6407
  9699  004C0C                     
  9700                           ;color.c: 371:     CC_amb_3 = color_read_Clear();
  9701  004C0C  EC01  F02C         	call	_color_read_Clear	;wreg free
  9702  004C10  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9703  004C14  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9704  004C18                     
  9705                           ;color.c: 372:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9706  004C18  0E11               	movlw	17
  9707  004C1A  0100               	movlb	0	; () banked
  9708  004C1C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9709  004C1E  0E3C               	movlw	60
  9710  004C20  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9711  004C22  0ECB               	movlw	203
  9712  004C24                     u6417:
  9713  004C24  2EE8               	decfsz	wreg,f,c
  9714  004C26  D7FE               	bra	u6417
  9715  004C28  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9716  004C2A  D7FC               	bra	u6417
  9717  004C2C  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9718  004C2E  D7FA               	bra	u6417
  9719  004C30                     
  9720                           ;color.c: 374:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9721  004C30  0100               	movlb	0	; () banked
  9722  004C32  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  9723  004C34  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  9724  004C36  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9725  004C38  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  9726  004C3A  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  9727  004C3C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9728  004C3E  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  9729  004C40  276C               	addwf	??_amb_light_measure& (0+255),f,b
  9730  004C42  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  9731  004C44  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  9732  004C46  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  9733  004C4A  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9734  004C4E  6A03               	clrf	(___xxtofl@val+2)^0,c
  9735  004C50  6A04               	clrf	(___xxtofl@val+3)^0,c
  9736  004C52  0E00               	movlw	0
  9737  004C54  EC11  F01F         	call	___xxtofl
  9738  004C58  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9739  004C5C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9740  004C60  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9741  004C64  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9742  004C68  0E00               	movlw	0
  9743  004C6A  6E13               	movwf	___fldiv@a^0,c
  9744  004C6C  0E00               	movlw	0
  9745  004C6E  6E14               	movwf	(___fldiv@a+1)^0,c
  9746  004C70  0E40               	movlw	64
  9747  004C72  6E15               	movwf	(___fldiv@a+2)^0,c
  9748  004C74  0E40               	movlw	64
  9749  004C76  6E16               	movwf	(___fldiv@a+3)^0,c
  9750  004C78  EC2A  F015         	call	___fldiv	;wreg free
  9751  004C7C  C00F  F066         	movff	?___fldiv,lroundf@x
  9752  004C80  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  9753  004C84  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  9754  004C88  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  9755  004C8C  EC2E  F02D         	call	_lroundf	;wreg free
  9756  004C90  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9757  004C94  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9758  004C98                     
  9759                           ;color.c: 376:     toggle_light(2,2);
  9760  004C98  0E02               	movlw	2
  9761  004C9A  6E01               	movwf	toggle_light@toggletime^0,c
  9762  004C9C  0E02               	movlw	2
  9763  004C9E  ECE1  F019         	call	_toggle_light
  9764  004CA2                     
  9765                           ;color.c: 378:     return CC_amb_ave;
  9766  004CA2  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9767  004CA6  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9768  004CAA  0012               	return		;funcret
  9769  004CAC                     __end_of_amb_light_measure:
  9770                           	callstack 0
  9771                           
  9772 ;; *************** function _toggle_light *****************
  9773 ;; Defined at:
  9774 ;;		line 49 in file "color.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  lightnumber     1    wreg     unsigned char 
  9777 ;;  toggletime      1    0[COMRAM] unsigned char 
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9780 ;;  i               1    3[COMRAM] unsigned char 
  9781 ;; Return value:  Size  Location     Type
  9782 ;;                  1    wreg      void 
  9783 ;; Registers used:
  9784 ;;		wreg, status,2, status,0
  9785 ;; Tracked objects:
  9786 ;;		On entry : 0/0
  9787 ;;		On exit  : 0/0
  9788 ;;		Unchanged: 0/0
  9789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9790 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9793 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9794 ;;Total ram usage:        5 bytes
  9795 ;; Hardware stack levels used: 1
  9796 ;; Hardware stack levels required when called: 1
  9797 ;; This function calls:
  9798 ;;		Nothing
  9799 ;; This function is called by:
  9800 ;;		_calibrate_white
  9801 ;;		_detect_color
  9802 ;;		_amb_light_measure
  9803 ;;		_turning_action
  9804 ;; This function uses a non-reentrant model
  9805 ;;
  9806                           
  9807                           	psect	text46
  9808  0033C2                     __ptext46:
  9809                           	callstack 0
  9810  0033C2                     _toggle_light:
  9811                           	callstack 27
  9812                           
  9813                           ;incstack = 0
  9814                           ;toggle_light@lightnumber stored from wreg
  9815  0033C2  6E05               	movwf	toggle_light@lightnumber^0,c
  9816  0033C4                     
  9817                           ;color.c: 49: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 50: {;color.c: 51:     unsigned char i = 0;
  9818  0033C4  0E00               	movlw	0
  9819  0033C6  6E04               	movwf	toggle_light@i^0,c
  9820                           
  9821                           ;color.c: 53:     for (i = 0; i < toggletime; i++){
  9822  0033C8  0E00               	movlw	0
  9823  0033CA  6E04               	movwf	toggle_light@i^0,c
  9824  0033CC  EF2D  F01B         	goto	l60
  9825  0033D0                     l4368:
  9826                           
  9827                           ;color.c: 54:         if (lightnumber == 1){
  9828  0033D0  0405               	decf	toggle_light@lightnumber^0,w,c
  9829  0033D2  A4D8               	btfss	status,2,c
  9830  0033D4  EFEE  F019         	goto	u4511
  9831  0033D8  EFF0  F019         	goto	u4510
  9832  0033DC                     u4511:
  9833  0033DC  EF28  F01A         	goto	l4376
  9834  0033E0                     u4510:
  9835  0033E0                     
  9836                           ;color.c: 55:             LATHbits.LATH1 = !LATHbits.LATH1;
  9837  0033E0  A280               	btfss	128,1,c	;volatile
  9838  0033E2  EFF5  F019         	goto	u4521
  9839  0033E6  EFF9  F019         	goto	u4520
  9840  0033EA                     u4521:
  9841  0033EA  6A02               	clrf	??_toggle_light^0,c
  9842  0033EC  2A02               	incf	??_toggle_light^0,f,c
  9843  0033EE  EFFA  F019         	goto	u4538
  9844  0033F2                     u4520:
  9845  0033F2  6A02               	clrf	??_toggle_light^0,c
  9846  0033F4                     u4538:
  9847  0033F4  4602               	rlncf	??_toggle_light^0,f,c
  9848  0033F6  5080               	movf	128,w,c	;volatile
  9849  0033F8  1802               	xorwf	??_toggle_light^0,w,c
  9850  0033FA  0BFD               	andlw	-3
  9851  0033FC  1802               	xorwf	??_toggle_light^0,w,c
  9852  0033FE  6E80               	movwf	128,c	;volatile
  9853  003400                     
  9854                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9855  003400  0E29               	movlw	41
  9856  003402  6E03               	movwf	(??_toggle_light+1)^0,c
  9857  003404  0E96               	movlw	150
  9858  003406  6E02               	movwf	??_toggle_light^0,c
  9859  003408  0E7F               	movlw	127
  9860  00340A                     u6427:
  9861  00340A  2EE8               	decfsz	wreg,f,c
  9862  00340C  D7FE               	bra	u6427
  9863  00340E  2E02               	decfsz	??_toggle_light^0,f,c
  9864  003410  D7FC               	bra	u6427
  9865  003412  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9866  003414  D7FA               	bra	u6427
  9867  003416  F000               	nop	
  9868  003418                     
  9869                           ;color.c: 57:             LATHbits.LATH1 = !LATHbits.LATH1;
  9870  003418  A280               	btfss	128,1,c	;volatile
  9871  00341A  EF11  F01A         	goto	u4541
  9872  00341E  EF15  F01A         	goto	u4540
  9873  003422                     u4541:
  9874  003422  6A02               	clrf	??_toggle_light^0,c
  9875  003424  2A02               	incf	??_toggle_light^0,f,c
  9876  003426  EF16  F01A         	goto	u4558
  9877  00342A                     u4540:
  9878  00342A  6A02               	clrf	??_toggle_light^0,c
  9879  00342C                     u4558:
  9880  00342C  4602               	rlncf	??_toggle_light^0,f,c
  9881  00342E  5080               	movf	128,w,c	;volatile
  9882  003430  1802               	xorwf	??_toggle_light^0,w,c
  9883  003432  0BFD               	andlw	-3
  9884  003434  1802               	xorwf	??_toggle_light^0,w,c
  9885  003436  6E80               	movwf	128,c	;volatile
  9886                           
  9887                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9888  003438  0E29               	movlw	41
  9889  00343A  6E03               	movwf	(??_toggle_light+1)^0,c
  9890  00343C  0E96               	movlw	150
  9891  00343E  6E02               	movwf	??_toggle_light^0,c
  9892  003440  0E7F               	movlw	127
  9893  003442                     u6437:
  9894  003442  2EE8               	decfsz	wreg,f,c
  9895  003444  D7FE               	bra	u6437
  9896  003446  2E02               	decfsz	??_toggle_light^0,f,c
  9897  003448  D7FC               	bra	u6437
  9898  00344A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9899  00344C  D7FA               	bra	u6437
  9900  00344E  F000               	nop	
  9901  003450                     l4376:
  9902                           
  9903                           ;color.c: 60:         if (lightnumber == 2){
  9904  003450  0E02               	movlw	2
  9905  003452  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9906  003454  A4D8               	btfss	status,2,c
  9907  003456  EF2F  F01A         	goto	u4561
  9908  00345A  EF31  F01A         	goto	u4560
  9909  00345E                     u4561:
  9910  00345E  EF69  F01A         	goto	l4384
  9911  003462                     u4560:
  9912  003462                     
  9913                           ;color.c: 61:             LATDbits.LATD4 = !LATDbits.LATD4;
  9914  003462  A87C               	btfss	124,4,c	;volatile
  9915  003464  EF36  F01A         	goto	u4571
  9916  003468  EF3A  F01A         	goto	u4570
  9917  00346C                     u4571:
  9918  00346C  6A02               	clrf	??_toggle_light^0,c
  9919  00346E  2A02               	incf	??_toggle_light^0,f,c
  9920  003470  EF3B  F01A         	goto	u4588
  9921  003474                     u4570:
  9922  003474  6A02               	clrf	??_toggle_light^0,c
  9923  003476                     u4588:
  9924  003476  3A02               	swapf	??_toggle_light^0,f,c
  9925  003478  507C               	movf	124,w,c	;volatile
  9926  00347A  1802               	xorwf	??_toggle_light^0,w,c
  9927  00347C  0BEF               	andlw	-17
  9928  00347E  1802               	xorwf	??_toggle_light^0,w,c
  9929  003480  6E7C               	movwf	124,c	;volatile
  9930  003482                     
  9931                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9932  003482  0E29               	movlw	41
  9933  003484  6E03               	movwf	(??_toggle_light+1)^0,c
  9934  003486  0E96               	movlw	150
  9935  003488  6E02               	movwf	??_toggle_light^0,c
  9936  00348A  0E7F               	movlw	127
  9937  00348C                     u6447:
  9938  00348C  2EE8               	decfsz	wreg,f,c
  9939  00348E  D7FE               	bra	u6447
  9940  003490  2E02               	decfsz	??_toggle_light^0,f,c
  9941  003492  D7FC               	bra	u6447
  9942  003494  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9943  003496  D7FA               	bra	u6447
  9944  003498  F000               	nop	
  9945  00349A                     
  9946                           ;color.c: 63:             LATDbits.LATD4 = !LATDbits.LATD4;
  9947  00349A  A87C               	btfss	124,4,c	;volatile
  9948  00349C  EF52  F01A         	goto	u4591
  9949  0034A0  EF56  F01A         	goto	u4590
  9950  0034A4                     u4591:
  9951  0034A4  6A02               	clrf	??_toggle_light^0,c
  9952  0034A6  2A02               	incf	??_toggle_light^0,f,c
  9953  0034A8  EF57  F01A         	goto	u4608
  9954  0034AC                     u4590:
  9955  0034AC  6A02               	clrf	??_toggle_light^0,c
  9956  0034AE                     u4608:
  9957  0034AE  3A02               	swapf	??_toggle_light^0,f,c
  9958  0034B0  507C               	movf	124,w,c	;volatile
  9959  0034B2  1802               	xorwf	??_toggle_light^0,w,c
  9960  0034B4  0BEF               	andlw	-17
  9961  0034B6  1802               	xorwf	??_toggle_light^0,w,c
  9962  0034B8  6E7C               	movwf	124,c	;volatile
  9963                           
  9964                           ;color.c: 64:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9965  0034BA  0E29               	movlw	41
  9966  0034BC  6E03               	movwf	(??_toggle_light+1)^0,c
  9967  0034BE  0E96               	movlw	150
  9968  0034C0  6E02               	movwf	??_toggle_light^0,c
  9969  0034C2  0E7F               	movlw	127
  9970  0034C4                     u6457:
  9971  0034C4  2EE8               	decfsz	wreg,f,c
  9972  0034C6  D7FE               	bra	u6457
  9973  0034C8  2E02               	decfsz	??_toggle_light^0,f,c
  9974  0034CA  D7FC               	bra	u6457
  9975  0034CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9976  0034CE  D7FA               	bra	u6457
  9977  0034D0  F000               	nop	
  9978  0034D2                     l4384:
  9979                           
  9980                           ;color.c: 66:         if (lightnumber == 3){
  9981  0034D2  0E03               	movlw	3
  9982  0034D4  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9983  0034D6  A4D8               	btfss	status,2,c
  9984  0034D8  EF70  F01A         	goto	u4611
  9985  0034DC  EF72  F01A         	goto	u4610
  9986  0034E0                     u4611:
  9987  0034E0  EFAE  F01A         	goto	l4392
  9988  0034E4                     u4610:
  9989  0034E4                     
  9990                           ;color.c: 67:             LATDbits.LATD3 = !LATDbits.LATD3;
  9991  0034E4  A67C               	btfss	124,3,c	;volatile
  9992  0034E6  EF77  F01A         	goto	u4621
  9993  0034EA  EF7B  F01A         	goto	u4620
  9994  0034EE                     u4621:
  9995  0034EE  6A02               	clrf	??_toggle_light^0,c
  9996  0034F0  2A02               	incf	??_toggle_light^0,f,c
  9997  0034F2  EF7C  F01A         	goto	u4638
  9998  0034F6                     u4620:
  9999  0034F6  6A02               	clrf	??_toggle_light^0,c
 10000  0034F8                     u4638:
 10001  0034F8  4602               	rlncf	??_toggle_light^0,f,c
 10002  0034FA  4602               	rlncf	??_toggle_light^0,f,c
 10003  0034FC  4602               	rlncf	??_toggle_light^0,f,c
 10004  0034FE  507C               	movf	124,w,c	;volatile
 10005  003500  1802               	xorwf	??_toggle_light^0,w,c
 10006  003502  0BF7               	andlw	-9
 10007  003504  1802               	xorwf	??_toggle_light^0,w,c
 10008  003506  6E7C               	movwf	124,c	;volatile
 10009  003508                     
 10010                           ;color.c: 68:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10011  003508  0E29               	movlw	41
 10012  00350A  6E03               	movwf	(??_toggle_light+1)^0,c
 10013  00350C  0E96               	movlw	150
 10014  00350E  6E02               	movwf	??_toggle_light^0,c
 10015  003510  0E7F               	movlw	127
 10016  003512                     u6467:
 10017  003512  2EE8               	decfsz	wreg,f,c
 10018  003514  D7FE               	bra	u6467
 10019  003516  2E02               	decfsz	??_toggle_light^0,f,c
 10020  003518  D7FC               	bra	u6467
 10021  00351A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10022  00351C  D7FA               	bra	u6467
 10023  00351E  F000               	nop	
 10024  003520                     
 10025                           ;color.c: 69:             LATDbits.LATD3 = !LATDbits.LATD3;
 10026  003520  A67C               	btfss	124,3,c	;volatile
 10027  003522  EF95  F01A         	goto	u4641
 10028  003526  EF99  F01A         	goto	u4640
 10029  00352A                     u4641:
 10030  00352A  6A02               	clrf	??_toggle_light^0,c
 10031  00352C  2A02               	incf	??_toggle_light^0,f,c
 10032  00352E  EF9A  F01A         	goto	u4658
 10033  003532                     u4640:
 10034  003532  6A02               	clrf	??_toggle_light^0,c
 10035  003534                     u4658:
 10036  003534  4602               	rlncf	??_toggle_light^0,f,c
 10037  003536  4602               	rlncf	??_toggle_light^0,f,c
 10038  003538  4602               	rlncf	??_toggle_light^0,f,c
 10039  00353A  507C               	movf	124,w,c	;volatile
 10040  00353C  1802               	xorwf	??_toggle_light^0,w,c
 10041  00353E  0BF7               	andlw	-9
 10042  003540  1802               	xorwf	??_toggle_light^0,w,c
 10043  003542  6E7C               	movwf	124,c	;volatile
 10044                           
 10045                           ;color.c: 70:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10046  003544  0E29               	movlw	41
 10047  003546  6E03               	movwf	(??_toggle_light+1)^0,c
 10048  003548  0E96               	movlw	150
 10049  00354A  6E02               	movwf	??_toggle_light^0,c
 10050  00354C  0E7F               	movlw	127
 10051  00354E                     u6477:
 10052  00354E  2EE8               	decfsz	wreg,f,c
 10053  003550  D7FE               	bra	u6477
 10054  003552  2E02               	decfsz	??_toggle_light^0,f,c
 10055  003554  D7FC               	bra	u6477
 10056  003556  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10057  003558  D7FA               	bra	u6477
 10058  00355A  F000               	nop	
 10059  00355C                     l4392:
 10060                           
 10061                           ;color.c: 72:         if (lightnumber == 4){
 10062  00355C  0E04               	movlw	4
 10063  00355E  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10064  003560  A4D8               	btfss	status,2,c
 10065  003562  EFB5  F01A         	goto	u4661
 10066  003566  EFB7  F01A         	goto	u4660
 10067  00356A                     u4661:
 10068  00356A  EFED  F01A         	goto	l4400
 10069  00356E                     u4660:
 10070  00356E                     
 10071                           ;color.c: 73:             LATFbits.LATF0 = !LATFbits.LATF0;
 10072  00356E  A07E               	btfss	126,0,c	;volatile
 10073  003570  EFBC  F01A         	goto	u4671
 10074  003574  EFC0  F01A         	goto	u4670
 10075  003578                     u4671:
 10076  003578  6A02               	clrf	??_toggle_light^0,c
 10077  00357A  2A02               	incf	??_toggle_light^0,f,c
 10078  00357C  EFC1  F01A         	goto	u4688
 10079  003580                     u4670:
 10080  003580  6A02               	clrf	??_toggle_light^0,c
 10081  003582                     u4688:
 10082  003582  507E               	movf	126,w,c	;volatile
 10083  003584  1802               	xorwf	??_toggle_light^0,w,c
 10084  003586  0BFE               	andlw	-2
 10085  003588  1802               	xorwf	??_toggle_light^0,w,c
 10086  00358A  6E7E               	movwf	126,c	;volatile
 10087  00358C                     
 10088                           ;color.c: 74:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10089  00358C  0E29               	movlw	41
 10090  00358E  6E03               	movwf	(??_toggle_light+1)^0,c
 10091  003590  0E96               	movlw	150
 10092  003592  6E02               	movwf	??_toggle_light^0,c
 10093  003594  0E7F               	movlw	127
 10094  003596                     u6487:
 10095  003596  2EE8               	decfsz	wreg,f,c
 10096  003598  D7FE               	bra	u6487
 10097  00359A  2E02               	decfsz	??_toggle_light^0,f,c
 10098  00359C  D7FC               	bra	u6487
 10099  00359E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10100  0035A0  D7FA               	bra	u6487
 10101  0035A2  F000               	nop	
 10102  0035A4                     
 10103                           ;color.c: 75:             LATFbits.LATF0 = !LATFbits.LATF0;
 10104  0035A4  A07E               	btfss	126,0,c	;volatile
 10105  0035A6  EFD7  F01A         	goto	u4691
 10106  0035AA  EFDB  F01A         	goto	u4690
 10107  0035AE                     u4691:
 10108  0035AE  6A02               	clrf	??_toggle_light^0,c
 10109  0035B0  2A02               	incf	??_toggle_light^0,f,c
 10110  0035B2  EFDC  F01A         	goto	u4708
 10111  0035B6                     u4690:
 10112  0035B6  6A02               	clrf	??_toggle_light^0,c
 10113  0035B8                     u4708:
 10114  0035B8  507E               	movf	126,w,c	;volatile
 10115  0035BA  1802               	xorwf	??_toggle_light^0,w,c
 10116  0035BC  0BFE               	andlw	-2
 10117  0035BE  1802               	xorwf	??_toggle_light^0,w,c
 10118  0035C0  6E7E               	movwf	126,c	;volatile
 10119                           
 10120                           ;color.c: 76:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10121  0035C2  0E29               	movlw	41
 10122  0035C4  6E03               	movwf	(??_toggle_light+1)^0,c
 10123  0035C6  0E96               	movlw	150
 10124  0035C8  6E02               	movwf	??_toggle_light^0,c
 10125  0035CA  0E7F               	movlw	127
 10126  0035CC                     u6497:
 10127  0035CC  2EE8               	decfsz	wreg,f,c
 10128  0035CE  D7FE               	bra	u6497
 10129  0035D0  2E02               	decfsz	??_toggle_light^0,f,c
 10130  0035D2  D7FC               	bra	u6497
 10131  0035D4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10132  0035D6  D7FA               	bra	u6497
 10133  0035D8  F000               	nop	
 10134  0035DA                     l4400:
 10135                           
 10136                           ;color.c: 78:         if (lightnumber == 3){
 10137  0035DA  0E03               	movlw	3
 10138  0035DC  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10139  0035DE  A4D8               	btfss	status,2,c
 10140  0035E0  EFF4  F01A         	goto	u4711
 10141  0035E4  EFF6  F01A         	goto	u4710
 10142  0035E8                     u4711:
 10143  0035E8  EF2C  F01B         	goto	l4408
 10144  0035EC                     u4710:
 10145  0035EC                     
 10146                           ;color.c: 79:             LATHbits.LATH0 = !LATHbits.LATH0;
 10147  0035EC  A080               	btfss	128,0,c	;volatile
 10148  0035EE  EFFB  F01A         	goto	u4721
 10149  0035F2  EFFF  F01A         	goto	u4720
 10150  0035F6                     u4721:
 10151  0035F6  6A02               	clrf	??_toggle_light^0,c
 10152  0035F8  2A02               	incf	??_toggle_light^0,f,c
 10153  0035FA  EF00  F01B         	goto	u4738
 10154  0035FE                     u4720:
 10155  0035FE  6A02               	clrf	??_toggle_light^0,c
 10156  003600                     u4738:
 10157  003600  5080               	movf	128,w,c	;volatile
 10158  003602  1802               	xorwf	??_toggle_light^0,w,c
 10159  003604  0BFE               	andlw	-2
 10160  003606  1802               	xorwf	??_toggle_light^0,w,c
 10161  003608  6E80               	movwf	128,c	;volatile
 10162  00360A                     
 10163                           ;color.c: 80:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10164  00360A  0E29               	movlw	41
 10165  00360C  6E03               	movwf	(??_toggle_light+1)^0,c
 10166  00360E  0E96               	movlw	150
 10167  003610  6E02               	movwf	??_toggle_light^0,c
 10168  003612  0E7F               	movlw	127
 10169  003614                     u6507:
 10170  003614  2EE8               	decfsz	wreg,f,c
 10171  003616  D7FE               	bra	u6507
 10172  003618  2E02               	decfsz	??_toggle_light^0,f,c
 10173  00361A  D7FC               	bra	u6507
 10174  00361C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10175  00361E  D7FA               	bra	u6507
 10176  003620  F000               	nop	
 10177  003622                     
 10178                           ;color.c: 81:             LATHbits.LATH0 = !LATHbits.LATH0;
 10179  003622  A080               	btfss	128,0,c	;volatile
 10180  003624  EF16  F01B         	goto	u4741
 10181  003628  EF1A  F01B         	goto	u4740
 10182  00362C                     u4741:
 10183  00362C  6A02               	clrf	??_toggle_light^0,c
 10184  00362E  2A02               	incf	??_toggle_light^0,f,c
 10185  003630  EF1B  F01B         	goto	u4758
 10186  003634                     u4740:
 10187  003634  6A02               	clrf	??_toggle_light^0,c
 10188  003636                     u4758:
 10189  003636  5080               	movf	128,w,c	;volatile
 10190  003638  1802               	xorwf	??_toggle_light^0,w,c
 10191  00363A  0BFE               	andlw	-2
 10192  00363C  1802               	xorwf	??_toggle_light^0,w,c
 10193  00363E  6E80               	movwf	128,c	;volatile
 10194                           
 10195                           ;color.c: 82:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10196  003640  0E29               	movlw	41
 10197  003642  6E03               	movwf	(??_toggle_light+1)^0,c
 10198  003644  0E96               	movlw	150
 10199  003646  6E02               	movwf	??_toggle_light^0,c
 10200  003648  0E7F               	movlw	127
 10201  00364A                     u6517:
 10202  00364A  2EE8               	decfsz	wreg,f,c
 10203  00364C  D7FE               	bra	u6517
 10204  00364E  2E02               	decfsz	??_toggle_light^0,f,c
 10205  003650  D7FC               	bra	u6517
 10206  003652  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10207  003654  D7FA               	bra	u6517
 10208  003656  F000               	nop	
 10209  003658                     l4408:
 10210                           
 10211                           ;color.c: 84:     }
 10212  003658  2A04               	incf	toggle_light@i^0,f,c
 10213  00365A                     l60:
 10214  00365A  5001               	movf	toggle_light@toggletime^0,w,c
 10215  00365C  5C04               	subwf	toggle_light@i^0,w,c
 10216  00365E  A0D8               	btfss	status,0,c
 10217  003660  EF34  F01B         	goto	u4761
 10218  003664  EF36  F01B         	goto	u4760
 10219  003668                     u4761:
 10220  003668  EFE8  F019         	goto	l4368
 10221  00366C                     u4760:
 10222  00366C  0012               	return		;funcret
 10223  00366E                     __end_of_toggle_light:
 10224                           	callstack 0
 10225                           
 10226 ;; *************** function _lroundf *****************
 10227 ;; Defined at:
 10228 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  x               4    6[BANK0 ] float 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;		None
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  4    6[BANK0 ] long 
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10242 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10245 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10246 ;;Total ram usage:        4 bytes
 10247 ;; Hardware stack levels used: 1
 10248 ;; Hardware stack levels required when called: 4
 10249 ;; This function calls:
 10250 ;;		___fltol
 10251 ;;		_roundf
 10252 ;; This function is called by:
 10253 ;;		_detect_color
 10254 ;;		_amb_light_measure
 10255 ;;		_detect_wall
 10256 ;; This function uses a non-reentrant model
 10257 ;;
 10258                           
 10259                           	psect	text47
 10260  005A5C                     __ptext47:
 10261                           	callstack 0
 10262  005A5C                     _lroundf:
 10263                           	callstack 24
 10264  005A5C  C066  F041         	movff	lroundf@x,roundf@x
 10265  005A60  C067  F042         	movff	lroundf@x+1,roundf@x+1
 10266  005A64  C068  F043         	movff	lroundf@x+2,roundf@x+2
 10267  005A68  C069  F044         	movff	lroundf@x+3,roundf@x+3
 10268  005A6C  EC81  F011         	call	_roundf	;wreg free
 10269  005A70  C041  F05B         	movff	?_roundf,___fltol@f1
 10270  005A74  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
 10271  005A78  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
 10272  005A7C  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
 10273  005A80  EC56  F026         	call	___fltol	;wreg free
 10274  005A84  C05B  F066         	movff	?___fltol,?_lroundf
 10275  005A88  C05C  F067         	movff	?___fltol+1,?_lroundf+1
 10276  005A8C  C05D  F068         	movff	?___fltol+2,?_lroundf+2
 10277  005A90  C05E  F069         	movff	?___fltol+3,?_lroundf+3
 10278  005A94  0012               	return		;funcret
 10279  005A96                     __end_of_lroundf:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _roundf *****************
 10283 ;; Defined at:
 10284 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;  x               4   64[COMRAM] float 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  y               4   86[COMRAM] float 
 10289 ;;  u               4   82[COMRAM] struct .
 10290 ;;  e               2   76[COMRAM] int 
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  4   64[COMRAM] float 
 10293 ;; Registers used:
 10294 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10301 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10303 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10304 ;;Total ram usage:       26 bytes
 10305 ;; Hardware stack levels used: 1
 10306 ;; Hardware stack levels required when called: 3
 10307 ;; This function calls:
 10308 ;;		___fladd
 10309 ;;		___flge
 10310 ;;		___flmul
 10311 ;;		___flneg
 10312 ;;		___flsub
 10313 ;; This function is called by:
 10314 ;;		_lroundf
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           	psect	text48
 10319  002302                     __ptext48:
 10320                           	callstack 0
 10321  002302                     _roundf:
 10322                           	callstack 24
 10323  002302  C13A  F053         	movff	roundf@F527,roundf@u
 10324  002306  C13B  F054         	movff	roundf@F527+1,roundf@u+1
 10325  00230A  C13C  F055         	movff	roundf@F527+2,roundf@u+2
 10326  00230E  C13D  F056         	movff	roundf@F527+3,roundf@u+3
 10327  002312  C041  F053         	movff	roundf@x,roundf@u
 10328  002316  C042  F054         	movff	roundf@x+1,roundf@u+1
 10329  00231A  C043  F055         	movff	roundf@x+2,roundf@u+2
 10330  00231E  C044  F056         	movff	roundf@x+3,roundf@u+3
 10331  002322  C053  F045         	movff	roundf@u,??_roundf
 10332  002326  C054  F046         	movff	roundf@u+1,??_roundf+1
 10333  00232A  C055  F047         	movff	roundf@u+2,??_roundf+2
 10334  00232E  C056  F048         	movff	roundf@u+3,??_roundf+3
 10335  002332  0E18               	movlw	24
 10336  002334  EFA1  F011         	goto	u4420
 10337  002338                     u4425:
 10338  002338  90D8               	bcf	status,0,c
 10339  00233A  3248               	rrcf	(??_roundf+3)^0,f,c
 10340  00233C  3247               	rrcf	(??_roundf+2)^0,f,c
 10341  00233E  3246               	rrcf	(??_roundf+1)^0,f,c
 10342  002340  3245               	rrcf	??_roundf^0,f,c
 10343  002342                     u4420:
 10344  002342  2EE8               	decfsz	wreg,f,c
 10345  002344  EF9C  F011         	goto	u4425
 10346  002348  5045               	movf	??_roundf^0,w,c
 10347  00234A  6E4D               	movwf	roundf@e^0,c
 10348  00234C  6A4E               	clrf	(roundf@e+1)^0,c
 10349  00234E  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10350  002350  EFB3  F011         	goto	u4431
 10351  002354  504E               	movf	(roundf@e+1)^0,w,c
 10352  002356  E109               	bnz	u4430
 10353  002358  0E96               	movlw	150
 10354  00235A  5C4D               	subwf	roundf@e^0,w,c
 10355  00235C  A0D8               	btfss	status,0,c
 10356  00235E  EFB3  F011         	goto	u4431
 10357  002362  EFB5  F011         	goto	u4430
 10358  002366                     u4431:
 10359  002366  EFBF  F011         	goto	l4338
 10360  00236A                     u4430:
 10361  00236A  C041  F041         	movff	roundf@x,?_roundf
 10362  00236E  C042  F042         	movff	roundf@x+1,?_roundf+1
 10363  002372  C043  F043         	movff	roundf@x+2,?_roundf+2
 10364  002376  C044  F044         	movff	roundf@x+3,?_roundf+3
 10365  00237A  EF57  F013         	goto	l1419
 10366  00237E                     l4338:
 10367  00237E  C053  F045         	movff	roundf@u,??_roundf
 10368  002382  C054  F046         	movff	roundf@u+1,??_roundf+1
 10369  002386  C055  F047         	movff	roundf@u+2,??_roundf+2
 10370  00238A  C056  F048         	movff	roundf@u+3,??_roundf+3
 10371  00238E  0E20               	movlw	32
 10372  002390  EFCF  F011         	goto	u4440
 10373  002394                     u4445:
 10374  002394  90D8               	bcf	status,0,c
 10375  002396  3248               	rrcf	(??_roundf+3)^0,f,c
 10376  002398  3247               	rrcf	(??_roundf+2)^0,f,c
 10377  00239A  3246               	rrcf	(??_roundf+1)^0,f,c
 10378  00239C  3245               	rrcf	??_roundf^0,f,c
 10379  00239E                     u4440:
 10380  00239E  2EE8               	decfsz	wreg,f,c
 10381  0023A0  EFCA  F011         	goto	u4445
 10382  0023A4  5045               	movf	??_roundf^0,w,c
 10383  0023A6  1046               	iorwf	(??_roundf+1)^0,w,c
 10384  0023A8  1047               	iorwf	(??_roundf+2)^0,w,c
 10385  0023AA  1048               	iorwf	(??_roundf+3)^0,w,c
 10386  0023AC  B4D8               	btfsc	status,2,c
 10387  0023AE  EFDB  F011         	goto	u4451
 10388  0023B2  EFDD  F011         	goto	u4450
 10389  0023B6                     u4451:
 10390  0023B6  EFEF  F011         	goto	l4342
 10391  0023BA                     u4450:
 10392  0023BA  C041  F001         	movff	roundf@x,___flneg@f1
 10393  0023BE  C042  F002         	movff	roundf@x+1,___flneg@f1+1
 10394  0023C2  C043  F003         	movff	roundf@x+2,___flneg@f1+2
 10395  0023C6  C044  F004         	movff	roundf@x+3,___flneg@f1+3
 10396  0023CA  EC4B  F02D         	call	___flneg	;wreg free
 10397  0023CE  C001  F041         	movff	?___flneg,roundf@x
 10398  0023D2  C002  F042         	movff	?___flneg+1,roundf@x+1
 10399  0023D6  C003  F043         	movff	?___flneg+2,roundf@x+2
 10400  0023DA  C004  F044         	movff	?___flneg+3,roundf@x+3
 10401  0023DE                     l4342:
 10402  0023DE  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10403  0023E0  EFFD  F011         	goto	u4460
 10404  0023E4  504E               	movf	(roundf@e+1)^0,w,c
 10405  0023E6  E107               	bnz	u4461
 10406  0023E8  0E7E               	movlw	126
 10407  0023EA  5C4D               	subwf	roundf@e^0,w,c
 10408  0023EC  B0D8               	btfsc	status,0,c
 10409  0023EE  EFFB  F011         	goto	u4461
 10410  0023F2  EFFD  F011         	goto	u4460
 10411  0023F6                     u4461:
 10412  0023F6  EF19  F012         	goto	l4348
 10413  0023FA                     u4460:
 10414  0023FA  C053  F028         	movff	roundf@u,___flmul@b
 10415  0023FE  C054  F029         	movff	roundf@u+1,___flmul@b+1
 10416  002402  C055  F02A         	movff	roundf@u+2,___flmul@b+2
 10417  002406  C056  F02B         	movff	roundf@u+3,___flmul@b+3
 10418  00240A  0E00               	movlw	0
 10419  00240C  6E2C               	movwf	___flmul@a^0,c
 10420  00240E  0E00               	movlw	0
 10421  002410  6E2D               	movwf	(___flmul@a+1)^0,c
 10422  002412  0E00               	movlw	0
 10423  002414  6E2E               	movwf	(___flmul@a+2)^0,c
 10424  002416  0E00               	movlw	0
 10425  002418  6E2F               	movwf	(___flmul@a+3)^0,c
 10426  00241A  EC6C  F00F         	call	___flmul	;wreg free
 10427  00241E  C028  F041         	movff	?___flmul,?_roundf
 10428  002422  C029  F042         	movff	?___flmul+1,?_roundf+1
 10429  002426  C02A  F043         	movff	?___flmul+2,?_roundf+2
 10430  00242A  C02B  F044         	movff	?___flmul+3,?_roundf+3
 10431  00242E  EF57  F013         	goto	l1419
 10432  002432                     l4348:
 10433  002432  0E00               	movlw	0
 10434  002434  6E05               	movwf	___fladd@a^0,c
 10435  002436  0E00               	movlw	0
 10436  002438  6E06               	movwf	(___fladd@a+1)^0,c
 10437  00243A  0E00               	movlw	0
 10438  00243C  6E07               	movwf	(___fladd@a+2)^0,c
 10439  00243E  0E4B               	movlw	75
 10440  002440  6E08               	movwf	(___fladd@a+3)^0,c
 10441  002442  C041  F001         	movff	roundf@x,___fladd@b
 10442  002446  C042  F002         	movff	roundf@x+1,___fladd@b+1
 10443  00244A  C043  F003         	movff	roundf@x+2,___fladd@b+2
 10444  00244E  C044  F004         	movff	roundf@x+3,___fladd@b+3
 10445  002452  EC0C  F00D         	call	___fladd	;wreg free
 10446  002456  C001  F04F         	movff	?___fladd,_roundf$2946
 10447  00245A  C002  F050         	movff	?___fladd+1,_roundf$2946+1
 10448  00245E  C003  F051         	movff	?___fladd+2,_roundf$2946+2
 10449  002462  C004  F052         	movff	?___fladd+3,_roundf$2946+3
 10450  002466  0E00               	movlw	0
 10451  002468  6E05               	movwf	___fladd@a^0,c
 10452  00246A  0E00               	movlw	0
 10453  00246C  6E06               	movwf	(___fladd@a+1)^0,c
 10454  00246E  0E00               	movlw	0
 10455  002470  6E07               	movwf	(___fladd@a+2)^0,c
 10456  002472  0ECB               	movlw	203
 10457  002474  6E08               	movwf	(___fladd@a+3)^0,c
 10458  002476  C04F  F001         	movff	_roundf$2946,___fladd@b
 10459  00247A  C050  F002         	movff	_roundf$2946+1,___fladd@b+1
 10460  00247E  C051  F003         	movff	_roundf$2946+2,___fladd@b+2
 10461  002482  C052  F004         	movff	_roundf$2946+3,___fladd@b+3
 10462  002486  EC0C  F00D         	call	___fladd	;wreg free
 10463  00248A  C001  F049         	movff	?___fladd,_roundf$2947
 10464  00248E  C002  F04A         	movff	?___fladd+1,_roundf$2947+1
 10465  002492  C003  F04B         	movff	?___fladd+2,_roundf$2947+2
 10466  002496  C004  F04C         	movff	?___fladd+3,_roundf$2947+3
 10467  00249A  C049  F011         	movff	_roundf$2947,___flsub@b
 10468  00249E  C04A  F012         	movff	_roundf$2947+1,___flsub@b+1
 10469  0024A2  C04B  F013         	movff	_roundf$2947+2,___flsub@b+2
 10470  0024A6  C04C  F014         	movff	_roundf$2947+3,___flsub@b+3
 10471  0024AA  C041  F015         	movff	roundf@x,___flsub@a
 10472  0024AE  C042  F016         	movff	roundf@x+1,___flsub@a+1
 10473  0024B2  C043  F017         	movff	roundf@x+2,___flsub@a+2
 10474  0024B6  C044  F018         	movff	roundf@x+3,___flsub@a+3
 10475  0024BA  EC29  F02C         	call	___flsub	;wreg free
 10476  0024BE  C011  F057         	movff	?___flsub,roundf@y
 10477  0024C2  C012  F058         	movff	?___flsub+1,roundf@y+1
 10478  0024C6  C013  F059         	movff	?___flsub+2,roundf@y+2
 10479  0024CA  C014  F05A         	movff	?___flsub+3,roundf@y+3
 10480  0024CE  0E00               	movlw	0
 10481  0024D0  6E01               	movwf	___flge@ff1^0,c
 10482  0024D2  0E00               	movlw	0
 10483  0024D4  6E02               	movwf	(___flge@ff1+1)^0,c
 10484  0024D6  0E00               	movlw	0
 10485  0024D8  6E03               	movwf	(___flge@ff1+2)^0,c
 10486  0024DA  0E3F               	movlw	63
 10487  0024DC  6E04               	movwf	(___flge@ff1+3)^0,c
 10488  0024DE  C057  F005         	movff	roundf@y,___flge@ff2
 10489  0024E2  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10490  0024E6  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10491  0024EA  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10492  0024EE  ECDA  F026         	call	___flge	;wreg free
 10493  0024F2  B0D8               	btfsc	status,0,c
 10494  0024F4  EF7E  F012         	goto	u4471
 10495  0024F8  EF80  F012         	goto	u4470
 10496  0024FC                     u4471:
 10497  0024FC  EFB6  F012         	goto	l4352
 10498  002500                     u4470:
 10499  002500  C041  F005         	movff	roundf@x,___fladd@a
 10500  002504  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10501  002508  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10502  00250C  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10503  002510  C057  F001         	movff	roundf@y,___fladd@b
 10504  002514  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10505  002518  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10506  00251C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10507  002520  EC0C  F00D         	call	___fladd	;wreg free
 10508  002524  C001  F04F         	movff	?___fladd,_roundf$2946
 10509  002528  C002  F050         	movff	?___fladd+1,_roundf$2946+1
 10510  00252C  C003  F051         	movff	?___fladd+2,_roundf$2946+2
 10511  002530  C004  F052         	movff	?___fladd+3,_roundf$2946+3
 10512  002534  C04F  F001         	movff	_roundf$2946,___fladd@b
 10513  002538  C050  F002         	movff	_roundf$2946+1,___fladd@b+1
 10514  00253C  C051  F003         	movff	_roundf$2946+2,___fladd@b+2
 10515  002540  C052  F004         	movff	_roundf$2946+3,___fladd@b+3
 10516  002544  0E00               	movlw	0
 10517  002546  6E05               	movwf	___fladd@a^0,c
 10518  002548  0E00               	movlw	0
 10519  00254A  6E06               	movwf	(___fladd@a+1)^0,c
 10520  00254C  0E80               	movlw	128
 10521  00254E  6E07               	movwf	(___fladd@a+2)^0,c
 10522  002550  0EBF               	movlw	191
 10523  002552  6E08               	movwf	(___fladd@a+3)^0,c
 10524  002554  EC0C  F00D         	call	___fladd	;wreg free
 10525  002558  C001  F057         	movff	?___fladd,roundf@y
 10526  00255C  C002  F058         	movff	?___fladd+1,roundf@y+1
 10527  002560  C003  F059         	movff	?___fladd+2,roundf@y+2
 10528  002564  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10529  002568  EF1F  F013         	goto	l4358
 10530  00256C                     l4352:
 10531  00256C  0E00               	movlw	0
 10532  00256E  6E01               	movwf	___flge@ff1^0,c
 10533  002570  0E00               	movlw	0
 10534  002572  6E02               	movwf	(___flge@ff1+1)^0,c
 10535  002574  0E00               	movlw	0
 10536  002576  6E03               	movwf	(___flge@ff1+2)^0,c
 10537  002578  0EBF               	movlw	191
 10538  00257A  6E04               	movwf	(___flge@ff1+3)^0,c
 10539  00257C  C057  F005         	movff	roundf@y,___flge@ff2
 10540  002580  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10541  002584  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10542  002588  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10543  00258C  ECDA  F026         	call	___flge	;wreg free
 10544  002590  A0D8               	btfss	status,0,c
 10545  002592  EFCD  F012         	goto	u4481
 10546  002596  EFCF  F012         	goto	u4480
 10547  00259A                     u4481:
 10548  00259A  EF05  F013         	goto	l4356
 10549  00259E                     u4480:
 10550  00259E  C041  F005         	movff	roundf@x,___fladd@a
 10551  0025A2  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10552  0025A6  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10553  0025AA  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10554  0025AE  C057  F001         	movff	roundf@y,___fladd@b
 10555  0025B2  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10556  0025B6  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10557  0025BA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10558  0025BE  EC0C  F00D         	call	___fladd	;wreg free
 10559  0025C2  C001  F04F         	movff	?___fladd,_roundf$2946
 10560  0025C6  C002  F050         	movff	?___fladd+1,_roundf$2946+1
 10561  0025CA  C003  F051         	movff	?___fladd+2,_roundf$2946+2
 10562  0025CE  C004  F052         	movff	?___fladd+3,_roundf$2946+3
 10563  0025D2  C04F  F001         	movff	_roundf$2946,___fladd@b
 10564  0025D6  C050  F002         	movff	_roundf$2946+1,___fladd@b+1
 10565  0025DA  C051  F003         	movff	_roundf$2946+2,___fladd@b+2
 10566  0025DE  C052  F004         	movff	_roundf$2946+3,___fladd@b+3
 10567  0025E2  0E00               	movlw	0
 10568  0025E4  6E05               	movwf	___fladd@a^0,c
 10569  0025E6  0E00               	movlw	0
 10570  0025E8  6E06               	movwf	(___fladd@a+1)^0,c
 10571  0025EA  0E80               	movlw	128
 10572  0025EC  6E07               	movwf	(___fladd@a+2)^0,c
 10573  0025EE  0E3F               	movlw	63
 10574  0025F0  6E08               	movwf	(___fladd@a+3)^0,c
 10575  0025F2  EC0C  F00D         	call	___fladd	;wreg free
 10576  0025F6  C001  F057         	movff	?___fladd,roundf@y
 10577  0025FA  C002  F058         	movff	?___fladd+1,roundf@y+1
 10578  0025FE  C003  F059         	movff	?___fladd+2,roundf@y+2
 10579  002602  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10580  002606  EF1F  F013         	goto	l4358
 10581  00260A                     l4356:
 10582  00260A  C057  F001         	movff	roundf@y,___fladd@b
 10583  00260E  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10584  002612  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10585  002616  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10586  00261A  C041  F005         	movff	roundf@x,___fladd@a
 10587  00261E  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10588  002622  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10589  002626  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10590  00262A  EC0C  F00D         	call	___fladd	;wreg free
 10591  00262E  C001  F057         	movff	?___fladd,roundf@y
 10592  002632  C002  F058         	movff	?___fladd+1,roundf@y+1
 10593  002636  C003  F059         	movff	?___fladd+2,roundf@y+2
 10594  00263A  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10595  00263E                     l4358:
 10596  00263E  C053  F045         	movff	roundf@u,??_roundf
 10597  002642  C054  F046         	movff	roundf@u+1,??_roundf+1
 10598  002646  C055  F047         	movff	roundf@u+2,??_roundf+2
 10599  00264A  C056  F048         	movff	roundf@u+3,??_roundf+3
 10600  00264E  0E20               	movlw	32
 10601  002650  EF2F  F013         	goto	u4490
 10602  002654                     u4495:
 10603  002654  90D8               	bcf	status,0,c
 10604  002656  3248               	rrcf	(??_roundf+3)^0,f,c
 10605  002658  3247               	rrcf	(??_roundf+2)^0,f,c
 10606  00265A  3246               	rrcf	(??_roundf+1)^0,f,c
 10607  00265C  3245               	rrcf	??_roundf^0,f,c
 10608  00265E                     u4490:
 10609  00265E  2EE8               	decfsz	wreg,f,c
 10610  002660  EF2A  F013         	goto	u4495
 10611  002664  5045               	movf	??_roundf^0,w,c
 10612  002666  1046               	iorwf	(??_roundf+1)^0,w,c
 10613  002668  1047               	iorwf	(??_roundf+2)^0,w,c
 10614  00266A  1048               	iorwf	(??_roundf+3)^0,w,c
 10615  00266C  B4D8               	btfsc	status,2,c
 10616  00266E  EF3B  F013         	goto	u4501
 10617  002672  EF3D  F013         	goto	u4500
 10618  002676                     u4501:
 10619  002676  EF4F  F013         	goto	l4362
 10620  00267A                     u4500:
 10621  00267A  C057  F001         	movff	roundf@y,___flneg@f1
 10622  00267E  C058  F002         	movff	roundf@y+1,___flneg@f1+1
 10623  002682  C059  F003         	movff	roundf@y+2,___flneg@f1+2
 10624  002686  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
 10625  00268A  EC4B  F02D         	call	___flneg	;wreg free
 10626  00268E  C001  F057         	movff	?___flneg,roundf@y
 10627  002692  C002  F058         	movff	?___flneg+1,roundf@y+1
 10628  002696  C003  F059         	movff	?___flneg+2,roundf@y+2
 10629  00269A  C004  F05A         	movff	?___flneg+3,roundf@y+3
 10630  00269E                     l4362:
 10631  00269E  C057  F041         	movff	roundf@y,?_roundf
 10632  0026A2  C058  F042         	movff	roundf@y+1,?_roundf+1
 10633  0026A6  C059  F043         	movff	roundf@y+2,?_roundf+2
 10634  0026AA  C05A  F044         	movff	roundf@y+3,?_roundf+3
 10635  0026AE                     l1419:
 10636  0026AE  0012               	return		;funcret
 10637  0026B0                     __end_of_roundf:
 10638                           	callstack 0
 10639                           
 10640 ;; *************** function ___flsub *****************
 10641 ;; Defined at:
 10642 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  b               4   16[COMRAM] float 
 10645 ;;  a               4   20[COMRAM] float 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;		None
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  4   16[COMRAM] float 
 10650 ;; Registers used:
 10651 ;;		wreg, status,2, status,0, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;Total ram usage:        8 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; Hardware stack levels required when called: 2
 10664 ;; This function calls:
 10665 ;;		___fladd
 10666 ;; This function is called by:
 10667 ;;		_roundf
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text49
 10672  005852                     __ptext49:
 10673                           	callstack 0
 10674  005852                     ___flsub:
 10675                           	callstack 24
 10676  005852  0E00               	movlw	0
 10677  005854  1A15               	xorwf	___flsub@a^0,f,c
 10678  005856  0E00               	movlw	0
 10679  005858  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10680  00585A  0E00               	movlw	0
 10681  00585C  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10682  00585E  0E80               	movlw	128
 10683  005860  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10684  005862  C011  F001         	movff	___flsub@b,___fladd@b
 10685  005866  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10686  00586A  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10687  00586E  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10688  005872  C015  F005         	movff	___flsub@a,___fladd@a
 10689  005876  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10690  00587A  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10691  00587E  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10692  005882  EC0C  F00D         	call	___fladd	;wreg free
 10693  005886  C001  F011         	movff	?___fladd,?___flsub
 10694  00588A  C002  F012         	movff	?___fladd+1,?___flsub+1
 10695  00588E  C003  F013         	movff	?___fladd+2,?___flsub+2
 10696  005892  C004  F014         	movff	?___fladd+3,?___flsub+3
 10697  005896  0012               	return		;funcret
 10698  005898                     __end_of___flsub:
 10699                           	callstack 0
 10700                           
 10701 ;; *************** function ___fladd *****************
 10702 ;; Defined at:
 10703 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10704 ;; Parameters:    Size  Location     Type
 10705 ;;  b               4    0[COMRAM] float 
 10706 ;;  a               4    4[COMRAM] float 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  grs             1   15[COMRAM] unsigned char 
 10709 ;;  bexp            1   14[COMRAM] unsigned char 
 10710 ;;  aexp            1   13[COMRAM] unsigned char 
 10711 ;;  signs           1   12[COMRAM] unsigned char 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  4    0[COMRAM] unsigned char 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, status,0
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10721 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10722 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10723 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10724 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10725 ;;Total ram usage:       16 bytes
 10726 ;; Hardware stack levels used: 1
 10727 ;; Hardware stack levels required when called: 1
 10728 ;; This function calls:
 10729 ;;		Nothing
 10730 ;; This function is called by:
 10731 ;;		___flsub
 10732 ;;		_roundf
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text50
 10737  001A18                     __ptext50:
 10738                           	callstack 0
 10739  001A18                     ___fladd:
 10740                           	callstack 24
 10741  001A18  5004               	movf	(___fladd@b+3)^0,w,c
 10742  001A1A  0B80               	andlw	128
 10743  001A1C  6E0D               	movwf	___fladd@signs^0,c
 10744  001A1E  5004               	movf	(___fladd@b+3)^0,w,c
 10745  001A20  2404               	addwf	(___fladd@b+3)^0,w,c
 10746  001A22  6E0F               	movwf	___fladd@bexp^0,c
 10747  001A24  AE03               	btfss	(___fladd@b+2)^0,7,c
 10748  001A26  EF17  F00D         	goto	u3471
 10749  001A2A  EF19  F00D         	goto	u3470
 10750  001A2E                     u3471:
 10751  001A2E  EF1A  F00D         	goto	l3704
 10752  001A32                     u3470:
 10753  001A32  800F               	bsf	___fladd@bexp^0,0,c
 10754  001A34                     l3704:
 10755  001A34  500F               	movf	___fladd@bexp^0,w,c
 10756  001A36  B4D8               	btfsc	status,2,c
 10757  001A38  EF20  F00D         	goto	u3481
 10758  001A3C  EF22  F00D         	goto	u3480
 10759  001A40                     u3481:
 10760  001A40  EF37  F00D         	goto	l3714
 10761  001A44                     u3480:
 10762  001A44  280F               	incf	___fladd@bexp^0,w,c
 10763  001A46  A4D8               	btfss	status,2,c
 10764  001A48  EF28  F00D         	goto	u3491
 10765  001A4C  EF2A  F00D         	goto	u3490
 10766  001A50                     u3491:
 10767  001A50  EF32  F00D         	goto	l3710
 10768  001A54                     u3490:
 10769  001A54  0E00               	movlw	0
 10770  001A56  6E01               	movwf	___fladd@b^0,c
 10771  001A58  0E00               	movlw	0
 10772  001A5A  6E02               	movwf	(___fladd@b+1)^0,c
 10773  001A5C  0E00               	movlw	0
 10774  001A5E  6E03               	movwf	(___fladd@b+2)^0,c
 10775  001A60  0E00               	movlw	0
 10776  001A62  6E04               	movwf	(___fladd@b+3)^0,c
 10777  001A64                     l3710:
 10778  001A64  8E03               	bsf	(___fladd@b+2)^0,7,c
 10779  001A66  0E00               	movlw	0
 10780  001A68  6E04               	movwf	(___fladd@b+3)^0,c
 10781  001A6A  EF3F  F00D         	goto	l3716
 10782  001A6E                     l3714:
 10783  001A6E  0E00               	movlw	0
 10784  001A70  6E01               	movwf	___fladd@b^0,c
 10785  001A72  0E00               	movlw	0
 10786  001A74  6E02               	movwf	(___fladd@b+1)^0,c
 10787  001A76  0E00               	movlw	0
 10788  001A78  6E03               	movwf	(___fladd@b+2)^0,c
 10789  001A7A  0E00               	movlw	0
 10790  001A7C  6E04               	movwf	(___fladd@b+3)^0,c
 10791  001A7E                     l3716:
 10792  001A7E  5008               	movf	(___fladd@a+3)^0,w,c
 10793  001A80  0B80               	andlw	128
 10794  001A82  6E0E               	movwf	___fladd@aexp^0,c
 10795  001A84  500D               	movf	___fladd@signs^0,w,c
 10796  001A86  180E               	xorwf	___fladd@aexp^0,w,c
 10797  001A88  B4D8               	btfsc	status,2,c
 10798  001A8A  EF49  F00D         	goto	u3501
 10799  001A8E  EF4B  F00D         	goto	u3500
 10800  001A92                     u3501:
 10801  001A92  EF4C  F00D         	goto	l3722
 10802  001A96                     u3500:
 10803  001A96  8C0D               	bsf	___fladd@signs^0,6,c
 10804  001A98                     l3722:
 10805  001A98  5008               	movf	(___fladd@a+3)^0,w,c
 10806  001A9A  2408               	addwf	(___fladd@a+3)^0,w,c
 10807  001A9C  6E0E               	movwf	___fladd@aexp^0,c
 10808  001A9E  AE07               	btfss	(___fladd@a+2)^0,7,c
 10809  001AA0  EF54  F00D         	goto	u3511
 10810  001AA4  EF56  F00D         	goto	u3510
 10811  001AA8                     u3511:
 10812  001AA8  EF57  F00D         	goto	l3728
 10813  001AAC                     u3510:
 10814  001AAC  800E               	bsf	___fladd@aexp^0,0,c
 10815  001AAE                     l3728:
 10816  001AAE  500E               	movf	___fladd@aexp^0,w,c
 10817  001AB0  B4D8               	btfsc	status,2,c
 10818  001AB2  EF5D  F00D         	goto	u3521
 10819  001AB6  EF5F  F00D         	goto	u3520
 10820  001ABA                     u3521:
 10821  001ABA  EF74  F00D         	goto	l3738
 10822  001ABE                     u3520:
 10823  001ABE  280E               	incf	___fladd@aexp^0,w,c
 10824  001AC0  A4D8               	btfss	status,2,c
 10825  001AC2  EF65  F00D         	goto	u3531
 10826  001AC6  EF67  F00D         	goto	u3530
 10827  001ACA                     u3531:
 10828  001ACA  EF6F  F00D         	goto	l3734
 10829  001ACE                     u3530:
 10830  001ACE  0E00               	movlw	0
 10831  001AD0  6E05               	movwf	___fladd@a^0,c
 10832  001AD2  0E00               	movlw	0
 10833  001AD4  6E06               	movwf	(___fladd@a+1)^0,c
 10834  001AD6  0E00               	movlw	0
 10835  001AD8  6E07               	movwf	(___fladd@a+2)^0,c
 10836  001ADA  0E00               	movlw	0
 10837  001ADC  6E08               	movwf	(___fladd@a+3)^0,c
 10838  001ADE                     l3734:
 10839  001ADE  8E07               	bsf	(___fladd@a+2)^0,7,c
 10840  001AE0  0E00               	movlw	0
 10841  001AE2  6E08               	movwf	(___fladd@a+3)^0,c
 10842  001AE4  EF7C  F00D         	goto	l3740
 10843  001AE8                     l3738:
 10844  001AE8  0E00               	movlw	0
 10845  001AEA  6E05               	movwf	___fladd@a^0,c
 10846  001AEC  0E00               	movlw	0
 10847  001AEE  6E06               	movwf	(___fladd@a+1)^0,c
 10848  001AF0  0E00               	movlw	0
 10849  001AF2  6E07               	movwf	(___fladd@a+2)^0,c
 10850  001AF4  0E00               	movlw	0
 10851  001AF6  6E08               	movwf	(___fladd@a+3)^0,c
 10852  001AF8                     l3740:
 10853  001AF8  500F               	movf	___fladd@bexp^0,w,c
 10854  001AFA  5C0E               	subwf	___fladd@aexp^0,w,c
 10855  001AFC  B0D8               	btfsc	status,0,c
 10856  001AFE  EF83  F00D         	goto	u3541
 10857  001B02  EF85  F00D         	goto	u3540
 10858  001B06                     u3541:
 10859  001B06  EFAC  F00D         	goto	l3776
 10860  001B0A                     u3540:
 10861  001B0A  AC0D               	btfss	___fladd@signs^0,6,c
 10862  001B0C  EF8A  F00D         	goto	u3551
 10863  001B10  EF8C  F00D         	goto	u3550
 10864  001B14                     u3551:
 10865  001B14  EF8E  F00D         	goto	l3746
 10866  001B18                     u3550:
 10867  001B18  0E80               	movlw	128
 10868  001B1A  1A0D               	xorwf	___fladd@signs^0,f,c
 10869  001B1C                     l3746:
 10870  001B1C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10871  001B20  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10872  001B24  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10873  001B28  C001  F010         	movff	___fladd@b,___fladd@grs
 10874  001B2C  C005  F001         	movff	___fladd@a,___fladd@b
 10875  001B30  C010  F005         	movff	___fladd@grs,___fladd@a
 10876  001B34  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10877  001B38  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10878  001B3C  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10879  001B40  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10880  001B44  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10881  001B48  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10882  001B4C  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10883  001B50  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10884  001B54  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10885  001B58                     l3776:
 10886  001B58  0E00               	movlw	0
 10887  001B5A  6E10               	movwf	___fladd@grs^0,c
 10888  001B5C  500F               	movf	___fladd@bexp^0,w,c
 10889  001B5E  C00E  F009         	movff	___fladd@aexp,??___fladd
 10890  001B62  6A0A               	clrf	(??___fladd+1)^0,c
 10891  001B64  5E09               	subwf	??___fladd^0,f,c
 10892  001B66  0E00               	movlw	0
 10893  001B68  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10894  001B6A  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10895  001B6C  EFC1  F00D         	goto	u3561
 10896  001B70  500A               	movf	(??___fladd+1)^0,w,c
 10897  001B72  E109               	bnz	u3560
 10898  001B74  0E1A               	movlw	26
 10899  001B76  5C09               	subwf	??___fladd^0,w,c
 10900  001B78  A0D8               	btfss	status,0,c
 10901  001B7A  EFC1  F00D         	goto	u3561
 10902  001B7E  EFC3  F00D         	goto	u3560
 10903  001B82                     u3561:
 10904  001B82  EFFA  F00D         	goto	l1155
 10905  001B86                     u3560:
 10906  001B86  5001               	movf	___fladd@b^0,w,c
 10907  001B88  1002               	iorwf	(___fladd@b+1)^0,w,c
 10908  001B8A  1003               	iorwf	(___fladd@b+2)^0,w,c
 10909  001B8C  1004               	iorwf	(___fladd@b+3)^0,w,c
 10910  001B8E  A4D8               	btfss	status,2,c
 10911  001B90  EFCC  F00D         	goto	u3571
 10912  001B94  EFCF  F00D         	goto	u3570
 10913  001B98                     u3571:
 10914  001B98  0E01               	movlw	1
 10915  001B9A  EFD0  F00D         	goto	u3580
 10916  001B9E                     u3570:
 10917  001B9E  0E00               	movlw	0
 10918  001BA0                     u3580:
 10919  001BA0  6E10               	movwf	___fladd@grs^0,c
 10920  001BA2  0E00               	movlw	0
 10921  001BA4  6E01               	movwf	___fladd@b^0,c
 10922  001BA6  0E00               	movlw	0
 10923  001BA8  6E02               	movwf	(___fladd@b+1)^0,c
 10924  001BAA  0E00               	movlw	0
 10925  001BAC  6E03               	movwf	(___fladd@b+2)^0,c
 10926  001BAE  0E00               	movlw	0
 10927  001BB0  6E04               	movwf	(___fladd@b+3)^0,c
 10928  001BB2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10929  001BB6  EF03  F00E         	goto	l1154
 10930  001BBA                     l1156:
 10931  001BBA  A010               	btfss	___fladd@grs^0,0,c
 10932  001BBC  EFE2  F00D         	goto	u3591
 10933  001BC0  EFE4  F00D         	goto	u3590
 10934  001BC4                     u3591:
 10935  001BC4  EFEA  F00D         	goto	l3788
 10936  001BC8                     u3590:
 10937  001BC8  90D8               	bcf	status,0,c
 10938  001BCA  3010               	rrcf	___fladd@grs^0,w,c
 10939  001BCC  0901               	iorlw	1
 10940  001BCE  6E10               	movwf	___fladd@grs^0,c
 10941  001BD0  EFEC  F00D         	goto	l3790
 10942  001BD4                     l3788:
 10943  001BD4  90D8               	bcf	status,0,c
 10944  001BD6  3210               	rrcf	___fladd@grs^0,f,c
 10945  001BD8                     l3790:
 10946  001BD8  A001               	btfss	___fladd@b^0,0,c
 10947  001BDA  EFF1  F00D         	goto	u3601
 10948  001BDE  EFF3  F00D         	goto	u3600
 10949  001BE2                     u3601:
 10950  001BE2  EFF4  F00D         	goto	l3794
 10951  001BE6                     u3600:
 10952  001BE6  8E10               	bsf	___fladd@grs^0,7,c
 10953  001BE8                     l3794:
 10954  001BE8  3404               	rlcf	(___fladd@b+3)^0,w,c
 10955  001BEA  3204               	rrcf	(___fladd@b+3)^0,f,c
 10956  001BEC  3203               	rrcf	(___fladd@b+2)^0,f,c
 10957  001BEE  3202               	rrcf	(___fladd@b+1)^0,f,c
 10958  001BF0  3201               	rrcf	___fladd@b^0,f,c
 10959  001BF2  2A0F               	incf	___fladd@bexp^0,f,c
 10960  001BF4                     l1155:
 10961  001BF4  500E               	movf	___fladd@aexp^0,w,c
 10962  001BF6  5C0F               	subwf	___fladd@bexp^0,w,c
 10963  001BF8  A0D8               	btfss	status,0,c
 10964  001BFA  EF01  F00E         	goto	u3611
 10965  001BFE  EF03  F00E         	goto	u3610
 10966  001C02                     u3611:
 10967  001C02  EFDD  F00D         	goto	l1156
 10968  001C06                     u3610:
 10969  001C06                     l1154:
 10970  001C06  BC0D               	btfsc	___fladd@signs^0,6,c
 10971  001C08  EF08  F00E         	goto	u3621
 10972  001C0C  EF0A  F00E         	goto	u3620
 10973  001C10                     u3621:
 10974  001C10  EF4A  F00E         	goto	l3822
 10975  001C14                     u3620:
 10976  001C14  500F               	movf	___fladd@bexp^0,w,c
 10977  001C16  A4D8               	btfss	status,2,c
 10978  001C18  EF10  F00E         	goto	u3631
 10979  001C1C  EF12  F00E         	goto	u3630
 10980  001C20                     u3631:
 10981  001C20  EF1C  F00E         	goto	l3804
 10982  001C24                     u3630:
 10983  001C24  0E00               	movlw	0
 10984  001C26  6E01               	movwf	?___fladd^0,c
 10985  001C28  0E00               	movlw	0
 10986  001C2A  6E02               	movwf	(?___fladd+1)^0,c
 10987  001C2C  0E00               	movlw	0
 10988  001C2E  6E03               	movwf	(?___fladd+2)^0,c
 10989  001C30  0E00               	movlw	0
 10990  001C32  6E04               	movwf	(?___fladd+3)^0,c
 10991  001C34  EF6B  F00F         	goto	l1163
 10992  001C38                     l3804:
 10993  001C38  5005               	movf	___fladd@a^0,w,c
 10994  001C3A  2601               	addwf	___fladd@b^0,f,c
 10995  001C3C  5006               	movf	(___fladd@a+1)^0,w,c
 10996  001C3E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10997  001C40  5007               	movf	(___fladd@a+2)^0,w,c
 10998  001C42  2203               	addwfc	(___fladd@b+2)^0,f,c
 10999  001C44  5008               	movf	(___fladd@a+3)^0,w,c
 11000  001C46  2204               	addwfc	(___fladd@b+3)^0,f,c
 11001  001C48  A004               	btfss	(___fladd@b+3)^0,0,c
 11002  001C4A  EF29  F00E         	goto	u3641
 11003  001C4E  EF2B  F00E         	goto	u3640
 11004  001C52                     u3641:
 11005  001C52  EFD7  F00E         	goto	l3858
 11006  001C56                     u3640:
 11007  001C56  A010               	btfss	___fladd@grs^0,0,c
 11008  001C58  EF30  F00E         	goto	u3651
 11009  001C5C  EF32  F00E         	goto	u3650
 11010  001C60                     u3651:
 11011  001C60  EF38  F00E         	goto	l3812
 11012  001C64                     u3650:
 11013  001C64  90D8               	bcf	status,0,c
 11014  001C66  3010               	rrcf	___fladd@grs^0,w,c
 11015  001C68  0901               	iorlw	1
 11016  001C6A  6E10               	movwf	___fladd@grs^0,c
 11017  001C6C  EF3A  F00E         	goto	l3814
 11018  001C70                     l3812:
 11019  001C70  90D8               	bcf	status,0,c
 11020  001C72  3210               	rrcf	___fladd@grs^0,f,c
 11021  001C74                     l3814:
 11022  001C74  A001               	btfss	___fladd@b^0,0,c
 11023  001C76  EF3F  F00E         	goto	u3661
 11024  001C7A  EF41  F00E         	goto	u3660
 11025  001C7E                     u3661:
 11026  001C7E  EF42  F00E         	goto	l3818
 11027  001C82                     u3660:
 11028  001C82  8E10               	bsf	___fladd@grs^0,7,c
 11029  001C84                     l3818:
 11030  001C84  3404               	rlcf	(___fladd@b+3)^0,w,c
 11031  001C86  3204               	rrcf	(___fladd@b+3)^0,f,c
 11032  001C88  3203               	rrcf	(___fladd@b+2)^0,f,c
 11033  001C8A  3202               	rrcf	(___fladd@b+1)^0,f,c
 11034  001C8C  3201               	rrcf	___fladd@b^0,f,c
 11035  001C8E  2A0F               	incf	___fladd@bexp^0,f,c
 11036  001C90  EFD7  F00E         	goto	l3858
 11037  001C94                     l3822:
 11038  001C94  5005               	movf	___fladd@a^0,w,c
 11039  001C96  5C01               	subwf	___fladd@b^0,w,c
 11040  001C98  5006               	movf	(___fladd@a+1)^0,w,c
 11041  001C9A  5802               	subwfb	(___fladd@b+1)^0,w,c
 11042  001C9C  5007               	movf	(___fladd@a+2)^0,w,c
 11043  001C9E  5803               	subwfb	(___fladd@b+2)^0,w,c
 11044  001CA0  5004               	movf	(___fladd@b+3)^0,w,c
 11045  001CA2  0A80               	xorlw	128
 11046  001CA4  6E09               	movwf	??___fladd^0,c
 11047  001CA6  5008               	movf	(___fladd@a+3)^0,w,c
 11048  001CA8  0A80               	xorlw	128
 11049  001CAA  5809               	subwfb	??___fladd^0,w,c
 11050  001CAC  B0D8               	btfsc	status,0,c
 11051  001CAE  EF5B  F00E         	goto	u3671
 11052  001CB2  EF5D  F00E         	goto	u3670
 11053  001CB6                     u3671:
 11054  001CB6  EF88  F00E         	goto	l3832
 11055  001CBA                     u3670:
 11056  001CBA  5001               	movf	___fladd@b^0,w,c
 11057  001CBC  5C05               	subwf	___fladd@a^0,w,c
 11058  001CBE  6E09               	movwf	??___fladd^0,c
 11059  001CC0  5002               	movf	(___fladd@b+1)^0,w,c
 11060  001CC2  5806               	subwfb	(___fladd@a+1)^0,w,c
 11061  001CC4  6E0A               	movwf	(??___fladd+1)^0,c
 11062  001CC6  5003               	movf	(___fladd@b+2)^0,w,c
 11063  001CC8  5807               	subwfb	(___fladd@a+2)^0,w,c
 11064  001CCA  6E0B               	movwf	(??___fladd+2)^0,c
 11065  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
 11066  001CCE  5808               	subwfb	(___fladd@a+3)^0,w,c
 11067  001CD0  6E0C               	movwf	(??___fladd+3)^0,c
 11068  001CD2  0EFF               	movlw	255
 11069  001CD4  2409               	addwf	??___fladd^0,w,c
 11070  001CD6  6E01               	movwf	___fladd@b^0,c
 11071  001CD8  0EFF               	movlw	255
 11072  001CDA  200A               	addwfc	(??___fladd+1)^0,w,c
 11073  001CDC  6E02               	movwf	(___fladd@b+1)^0,c
 11074  001CDE  0EFF               	movlw	255
 11075  001CE0  200B               	addwfc	(??___fladd+2)^0,w,c
 11076  001CE2  6E03               	movwf	(___fladd@b+2)^0,c
 11077  001CE4  0EFF               	movlw	255
 11078  001CE6  200C               	addwfc	(??___fladd+3)^0,w,c
 11079  001CE8  6E04               	movwf	(___fladd@b+3)^0,c
 11080  001CEA  0E80               	movlw	128
 11081  001CEC  1A0D               	xorwf	___fladd@signs^0,f,c
 11082  001CEE  6C10               	negf	___fladd@grs^0,c
 11083  001CF0  5010               	movf	___fladd@grs^0,w,c
 11084  001CF2  A4D8               	btfss	status,2,c
 11085  001CF4  EF7E  F00E         	goto	u3681
 11086  001CF8  EF80  F00E         	goto	u3680
 11087  001CFC                     u3681:
 11088  001CFC  EF90  F00E         	goto	l1171
 11089  001D00                     u3680:
 11090  001D00  0E01               	movlw	1
 11091  001D02  2601               	addwf	___fladd@b^0,f,c
 11092  001D04  0E00               	movlw	0
 11093  001D06  2202               	addwfc	(___fladd@b+1)^0,f,c
 11094  001D08  2203               	addwfc	(___fladd@b+2)^0,f,c
 11095  001D0A  2204               	addwfc	(___fladd@b+3)^0,f,c
 11096  001D0C  EF90  F00E         	goto	l1171
 11097  001D10                     l3832:
 11098  001D10  5005               	movf	___fladd@a^0,w,c
 11099  001D12  5E01               	subwf	___fladd@b^0,f,c
 11100  001D14  5006               	movf	(___fladd@a+1)^0,w,c
 11101  001D16  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11102  001D18  5007               	movf	(___fladd@a+2)^0,w,c
 11103  001D1A  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11104  001D1C  5008               	movf	(___fladd@a+3)^0,w,c
 11105  001D1E  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11106  001D20                     l1171:
 11107  001D20  5001               	movf	___fladd@b^0,w,c
 11108  001D22  1002               	iorwf	(___fladd@b+1)^0,w,c
 11109  001D24  1003               	iorwf	(___fladd@b+2)^0,w,c
 11110  001D26  1004               	iorwf	(___fladd@b+3)^0,w,c
 11111  001D28  A4D8               	btfss	status,2,c
 11112  001D2A  EF99  F00E         	goto	u3691
 11113  001D2E  EF9B  F00E         	goto	u3690
 11114  001D32                     u3691:
 11115  001D32  EFD0  F00E         	goto	l3856
 11116  001D36                     u3690:
 11117  001D36  5010               	movf	___fladd@grs^0,w,c
 11118  001D38  A4D8               	btfss	status,2,c
 11119  001D3A  EFA1  F00E         	goto	u3701
 11120  001D3E  EFA3  F00E         	goto	u3700
 11121  001D42                     u3701:
 11122  001D42  EFD0  F00E         	goto	l3856
 11123  001D46                     u3700:
 11124  001D46  0E00               	movlw	0
 11125  001D48  6E01               	movwf	?___fladd^0,c
 11126  001D4A  0E00               	movlw	0
 11127  001D4C  6E02               	movwf	(?___fladd+1)^0,c
 11128  001D4E  0E00               	movlw	0
 11129  001D50  6E03               	movwf	(?___fladd+2)^0,c
 11130  001D52  0E00               	movlw	0
 11131  001D54  6E04               	movwf	(?___fladd+3)^0,c
 11132  001D56  EF6B  F00F         	goto	l1163
 11133  001D5A                     l3840:
 11134  001D5A  90D8               	bcf	status,0,c
 11135  001D5C  3601               	rlcf	___fladd@b^0,f,c
 11136  001D5E  3602               	rlcf	(___fladd@b+1)^0,f,c
 11137  001D60  3603               	rlcf	(___fladd@b+2)^0,f,c
 11138  001D62  3604               	rlcf	(___fladd@b+3)^0,f,c
 11139  001D64  AE10               	btfss	___fladd@grs^0,7,c
 11140  001D66  EFB7  F00E         	goto	u3711
 11141  001D6A  EFB9  F00E         	goto	u3710
 11142  001D6E                     u3711:
 11143  001D6E  EFBA  F00E         	goto	l3846
 11144  001D72                     u3710:
 11145  001D72  8001               	bsf	___fladd@b^0,0,c
 11146  001D74                     l3846:
 11147  001D74  A010               	btfss	___fladd@grs^0,0,c
 11148  001D76  EFBF  F00E         	goto	u3721
 11149  001D7A  EFC1  F00E         	goto	u3720
 11150  001D7E                     u3721:
 11151  001D7E  EFC5  F00E         	goto	l3850
 11152  001D82                     u3720:
 11153  001D82  80D8               	bsf	status,0,c
 11154  001D84  3610               	rlcf	___fladd@grs^0,f,c
 11155  001D86  EFC7  F00E         	goto	l3852
 11156  001D8A                     l3850:
 11157  001D8A  90D8               	bcf	status,0,c
 11158  001D8C  3610               	rlcf	___fladd@grs^0,f,c
 11159  001D8E                     l3852:
 11160  001D8E  500F               	movf	___fladd@bexp^0,w,c
 11161  001D90  B4D8               	btfsc	status,2,c
 11162  001D92  EFCD  F00E         	goto	u3731
 11163  001D96  EFCF  F00E         	goto	u3730
 11164  001D9A                     u3731:
 11165  001D9A  EFD0  F00E         	goto	l3856
 11166  001D9E                     u3730:
 11167  001D9E  060F               	decf	___fladd@bexp^0,f,c
 11168  001DA0                     l3856:
 11169  001DA0  AE03               	btfss	(___fladd@b+2)^0,7,c
 11170  001DA2  EFD5  F00E         	goto	u3741
 11171  001DA6  EFD7  F00E         	goto	u3740
 11172  001DAA                     u3741:
 11173  001DAA  EFAD  F00E         	goto	l3840
 11174  001DAE                     u3740:
 11175  001DAE                     l3858:
 11176  001DAE  0E00               	movlw	0
 11177  001DB0  6E0E               	movwf	___fladd@aexp^0,c
 11178  001DB2  AE10               	btfss	___fladd@grs^0,7,c
 11179  001DB4  EFDE  F00E         	goto	u3751
 11180  001DB8  EFE0  F00E         	goto	u3750
 11181  001DBC                     u3751:
 11182  001DBC  EFF8  F00E         	goto	l1180
 11183  001DC0                     u3750:
 11184  001DC0  C010  F009         	movff	___fladd@grs,??___fladd
 11185  001DC4  0E7F               	movlw	127
 11186  001DC6  1609               	andwf	??___fladd^0,f,c
 11187  001DC8  B4D8               	btfsc	status,2,c
 11188  001DCA  EFE9  F00E         	goto	u3761
 11189  001DCE  EFEB  F00E         	goto	u3760
 11190  001DD2                     u3761:
 11191  001DD2  EFEF  F00E         	goto	l1181
 11192  001DD6                     u3760:
 11193  001DD6                     l3864:
 11194  001DD6  0E01               	movlw	1
 11195  001DD8  6E0E               	movwf	___fladd@aexp^0,c
 11196  001DDA  EFF8  F00E         	goto	l1180
 11197  001DDE                     l1181:
 11198  001DDE  A001               	btfss	___fladd@b^0,0,c
 11199  001DE0  EFF4  F00E         	goto	u3771
 11200  001DE4  EFF6  F00E         	goto	u3770
 11201  001DE8                     u3771:
 11202  001DE8  EFF8  F00E         	goto	l1180
 11203  001DEC                     u3770:
 11204  001DEC  EFEB  F00E         	goto	l3864
 11205  001DF0                     l1180:
 11206  001DF0  500E               	movf	___fladd@aexp^0,w,c
 11207  001DF2  B4D8               	btfsc	status,2,c
 11208  001DF4  EFFE  F00E         	goto	u3781
 11209  001DF8  EF00  F00F         	goto	u3780
 11210  001DFC                     u3781:
 11211  001DFC  EF2B  F00F         	goto	l3876
 11212  001E00                     u3780:
 11213  001E00  0E01               	movlw	1
 11214  001E02  2601               	addwf	___fladd@b^0,f,c
 11215  001E04  0E00               	movlw	0
 11216  001E06  2202               	addwfc	(___fladd@b+1)^0,f,c
 11217  001E08  2203               	addwfc	(___fladd@b+2)^0,f,c
 11218  001E0A  2204               	addwfc	(___fladd@b+3)^0,f,c
 11219  001E0C  A004               	btfss	(___fladd@b+3)^0,0,c
 11220  001E0E  EF0B  F00F         	goto	u3791
 11221  001E12  EF0D  F00F         	goto	u3790
 11222  001E16                     u3791:
 11223  001E16  EF2B  F00F         	goto	l3876
 11224  001E1A                     u3790:
 11225  001E1A  C001  F009         	movff	___fladd@b,??___fladd
 11226  001E1E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11227  001E22  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11228  001E26  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11229  001E2A  340C               	rlcf	(??___fladd+3)^0,w,c
 11230  001E2C  320C               	rrcf	(??___fladd+3)^0,f,c
 11231  001E2E  320B               	rrcf	(??___fladd+2)^0,f,c
 11232  001E30  320A               	rrcf	(??___fladd+1)^0,f,c
 11233  001E32  3209               	rrcf	??___fladd^0,f,c
 11234  001E34  C009  F001         	movff	??___fladd,___fladd@b
 11235  001E38  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11236  001E3C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11237  001E40  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11238  001E44  280F               	incf	___fladd@bexp^0,w,c
 11239  001E46  B4D8               	btfsc	status,2,c
 11240  001E48  EF28  F00F         	goto	u3801
 11241  001E4C  EF2A  F00F         	goto	u3800
 11242  001E50                     u3801:
 11243  001E50  EF2B  F00F         	goto	l3876
 11244  001E54                     u3800:
 11245  001E54  2A0F               	incf	___fladd@bexp^0,f,c
 11246  001E56                     l3876:
 11247  001E56  280F               	incf	___fladd@bexp^0,w,c
 11248  001E58  B4D8               	btfsc	status,2,c
 11249  001E5A  EF31  F00F         	goto	u3811
 11250  001E5E  EF33  F00F         	goto	u3810
 11251  001E62                     u3811:
 11252  001E62  EF3B  F00F         	goto	l3880
 11253  001E66                     u3810:
 11254  001E66  500F               	movf	___fladd@bexp^0,w,c
 11255  001E68  A4D8               	btfss	status,2,c
 11256  001E6A  EF39  F00F         	goto	u3821
 11257  001E6E  EF3B  F00F         	goto	u3820
 11258  001E72                     u3821:
 11259  001E72  EF4D  F00F         	goto	l3884
 11260  001E76                     u3820:
 11261  001E76                     l3880:
 11262  001E76  0E00               	movlw	0
 11263  001E78  6E01               	movwf	___fladd@b^0,c
 11264  001E7A  0E00               	movlw	0
 11265  001E7C  6E02               	movwf	(___fladd@b+1)^0,c
 11266  001E7E  0E00               	movlw	0
 11267  001E80  6E03               	movwf	(___fladd@b+2)^0,c
 11268  001E82  0E00               	movlw	0
 11269  001E84  6E04               	movwf	(___fladd@b+3)^0,c
 11270  001E86  500F               	movf	___fladd@bexp^0,w,c
 11271  001E88  A4D8               	btfss	status,2,c
 11272  001E8A  EF49  F00F         	goto	u3831
 11273  001E8E  EF4B  F00F         	goto	u3830
 11274  001E92                     u3831:
 11275  001E92  EF4D  F00F         	goto	l3884
 11276  001E96                     u3830:
 11277  001E96  0E00               	movlw	0
 11278  001E98  6E0D               	movwf	___fladd@signs^0,c
 11279  001E9A                     l3884:
 11280  001E9A  A00F               	btfss	___fladd@bexp^0,0,c
 11281  001E9C  EF52  F00F         	goto	u3841
 11282  001EA0  EF54  F00F         	goto	u3840
 11283  001EA4                     u3841:
 11284  001EA4  EF57  F00F         	goto	l3888
 11285  001EA8                     u3840:
 11286  001EA8  8E03               	bsf	(___fladd@b+2)^0,7,c
 11287  001EAA  EF58  F00F         	goto	l3890
 11288  001EAE                     l3888:
 11289  001EAE  9E03               	bcf	(___fladd@b+2)^0,7,c
 11290  001EB0                     l3890:
 11291  001EB0  90D8               	bcf	status,0,c
 11292  001EB2  300F               	rrcf	___fladd@bexp^0,w,c
 11293  001EB4  6E04               	movwf	(___fladd@b+3)^0,c
 11294  001EB6  AE0D               	btfss	___fladd@signs^0,7,c
 11295  001EB8  EF60  F00F         	goto	u3851
 11296  001EBC  EF62  F00F         	goto	u3850
 11297  001EC0                     u3851:
 11298  001EC0  EF63  F00F         	goto	l3896
 11299  001EC4                     u3850:
 11300  001EC4  8E04               	bsf	(___fladd@b+3)^0,7,c
 11301  001EC6                     l3896:
 11302  001EC6  C001  F001         	movff	___fladd@b,?___fladd
 11303  001ECA  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11304  001ECE  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11305  001ED2  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11306  001ED6                     l1163:
 11307  001ED6  0012               	return		;funcret
 11308  001ED8                     __end_of___fladd:
 11309                           	callstack 0
 11310                           
 11311 ;; *************** function ___flneg *****************
 11312 ;; Defined at:
 11313 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  f1              4    0[COMRAM] unsigned char 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;		None
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  4    0[COMRAM] unsigned char 
 11320 ;; Registers used:
 11321 ;;		wreg, status,2, status,0
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11331 ;;Total ram usage:        4 bytes
 11332 ;; Hardware stack levels used: 1
 11333 ;; Hardware stack levels required when called: 1
 11334 ;; This function calls:
 11335 ;;		Nothing
 11336 ;; This function is called by:
 11337 ;;		_roundf
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text51
 11342  005A96                     __ptext51:
 11343                           	callstack 0
 11344  005A96                     ___flneg:
 11345                           	callstack 25
 11346  005A96  5001               	movf	___flneg@f1^0,w,c
 11347  005A98  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11348  005A9A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11349  005A9C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11350  005A9E  B4D8               	btfsc	status,2,c
 11351  005AA0  EF54  F02D         	goto	u4211
 11352  005AA4  EF56  F02D         	goto	u4210
 11353  005AA8                     u4211:
 11354  005AA8  EF5E  F02D         	goto	l4160
 11355  005AAC                     u4210:
 11356  005AAC  0E00               	movlw	0
 11357  005AAE  1A01               	xorwf	___flneg@f1^0,f,c
 11358  005AB0  0E00               	movlw	0
 11359  005AB2  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11360  005AB4  0E00               	movlw	0
 11361  005AB6  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11362  005AB8  0E80               	movlw	128
 11363  005ABA  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11364  005ABC                     l4160:
 11365  005ABC  C001  F001         	movff	___flneg@f1,?___flneg
 11366  005AC0  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11367  005AC4  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11368  005AC8  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11369  005ACC  0012               	return		;funcret
 11370  005ACE                     __end_of___flneg:
 11371                           	callstack 0
 11372                           
 11373 ;; *************** function ___flmul *****************
 11374 ;; Defined at:
 11375 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11376 ;; Parameters:    Size  Location     Type
 11377 ;;  b               4   39[COMRAM] unsigned char 
 11378 ;;  a               4   43[COMRAM] unsigned char 
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;  prod            4   58[COMRAM] struct .
 11381 ;;  grs             4   52[COMRAM] unsigned long 
 11382 ;;  temp            2   62[COMRAM] struct .
 11383 ;;  bexp            1   57[COMRAM] unsigned char 
 11384 ;;  aexp            1   56[COMRAM] unsigned char 
 11385 ;;  sign            1   51[COMRAM] unsigned char 
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  4   39[COMRAM] unsigned char 
 11388 ;; Registers used:
 11389 ;;		wreg, status,2, status,0, prodl, prodh
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11396 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11397 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;Total ram usage:       25 bytes
 11400 ;; Hardware stack levels used: 1
 11401 ;; Hardware stack levels required when called: 1
 11402 ;; This function calls:
 11403 ;;		Nothing
 11404 ;; This function is called by:
 11405 ;;		_detect_color
 11406 ;;		_detect_wall
 11407 ;;		_roundf
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text52
 11412  001ED8                     __ptext52:
 11413                           	callstack 0
 11414  001ED8                     ___flmul:
 11415                           	callstack 25
 11416  001ED8  502B               	movf	(___flmul@b+3)^0,w,c
 11417  001EDA  0B80               	andlw	128
 11418  001EDC  6E34               	movwf	___flmul@sign^0,c
 11419  001EDE  502B               	movf	(___flmul@b+3)^0,w,c
 11420  001EE0  242B               	addwf	(___flmul@b+3)^0,w,c
 11421  001EE2  6E3A               	movwf	___flmul@bexp^0,c
 11422  001EE4  AE2A               	btfss	(___flmul@b+2)^0,7,c
 11423  001EE6  EF77  F00F         	goto	u3971
 11424  001EEA  EF79  F00F         	goto	u3970
 11425  001EEE                     u3971:
 11426  001EEE  EF7A  F00F         	goto	l4004
 11427  001EF2                     u3970:
 11428  001EF2  803A               	bsf	___flmul@bexp^0,0,c
 11429  001EF4                     l4004:
 11430  001EF4  503A               	movf	___flmul@bexp^0,w,c
 11431  001EF6  B4D8               	btfsc	status,2,c
 11432  001EF8  EF80  F00F         	goto	u3981
 11433  001EFC  EF82  F00F         	goto	u3980
 11434  001F00                     u3981:
 11435  001F00  EF95  F00F         	goto	l4012
 11436  001F04                     u3980:
 11437  001F04  283A               	incf	___flmul@bexp^0,w,c
 11438  001F06  A4D8               	btfss	status,2,c
 11439  001F08  EF88  F00F         	goto	u3991
 11440  001F0C  EF8A  F00F         	goto	u3990
 11441  001F10                     u3991:
 11442  001F10  EF92  F00F         	goto	l4010
 11443  001F14                     u3990:
 11444  001F14  0E00               	movlw	0
 11445  001F16  6E28               	movwf	___flmul@b^0,c
 11446  001F18  0E00               	movlw	0
 11447  001F1A  6E29               	movwf	(___flmul@b+1)^0,c
 11448  001F1C  0E00               	movlw	0
 11449  001F1E  6E2A               	movwf	(___flmul@b+2)^0,c
 11450  001F20  0E00               	movlw	0
 11451  001F22  6E2B               	movwf	(___flmul@b+3)^0,c
 11452  001F24                     l4010:
 11453  001F24  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11454  001F26  EF9D  F00F         	goto	l4014
 11455  001F2A                     l4012:
 11456  001F2A  0E00               	movlw	0
 11457  001F2C  6E28               	movwf	___flmul@b^0,c
 11458  001F2E  0E00               	movlw	0
 11459  001F30  6E29               	movwf	(___flmul@b+1)^0,c
 11460  001F32  0E00               	movlw	0
 11461  001F34  6E2A               	movwf	(___flmul@b+2)^0,c
 11462  001F36  0E00               	movlw	0
 11463  001F38  6E2B               	movwf	(___flmul@b+3)^0,c
 11464  001F3A                     l4014:
 11465  001F3A  502F               	movf	(___flmul@a+3)^0,w,c
 11466  001F3C  0B80               	andlw	128
 11467  001F3E  1A34               	xorwf	___flmul@sign^0,f,c
 11468  001F40  502F               	movf	(___flmul@a+3)^0,w,c
 11469  001F42  242F               	addwf	(___flmul@a+3)^0,w,c
 11470  001F44  6E39               	movwf	___flmul@aexp^0,c
 11471  001F46  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11472  001F48  EFA8  F00F         	goto	u4001
 11473  001F4C  EFAA  F00F         	goto	u4000
 11474  001F50                     u4001:
 11475  001F50  EFAB  F00F         	goto	l4022
 11476  001F54                     u4000:
 11477  001F54  8039               	bsf	___flmul@aexp^0,0,c
 11478  001F56                     l4022:
 11479  001F56  5039               	movf	___flmul@aexp^0,w,c
 11480  001F58  B4D8               	btfsc	status,2,c
 11481  001F5A  EFB1  F00F         	goto	u4011
 11482  001F5E  EFB3  F00F         	goto	u4010
 11483  001F62                     u4011:
 11484  001F62  EFC6  F00F         	goto	l4030
 11485  001F66                     u4010:
 11486  001F66  2839               	incf	___flmul@aexp^0,w,c
 11487  001F68  A4D8               	btfss	status,2,c
 11488  001F6A  EFB9  F00F         	goto	u4021
 11489  001F6E  EFBB  F00F         	goto	u4020
 11490  001F72                     u4021:
 11491  001F72  EFC3  F00F         	goto	l4028
 11492  001F76                     u4020:
 11493  001F76  0E00               	movlw	0
 11494  001F78  6E2C               	movwf	___flmul@a^0,c
 11495  001F7A  0E00               	movlw	0
 11496  001F7C  6E2D               	movwf	(___flmul@a+1)^0,c
 11497  001F7E  0E00               	movlw	0
 11498  001F80  6E2E               	movwf	(___flmul@a+2)^0,c
 11499  001F82  0E00               	movlw	0
 11500  001F84  6E2F               	movwf	(___flmul@a+3)^0,c
 11501  001F86                     l4028:
 11502  001F86  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11503  001F88  EFCE  F00F         	goto	l1240
 11504  001F8C                     l4030:
 11505  001F8C  0E00               	movlw	0
 11506  001F8E  6E2C               	movwf	___flmul@a^0,c
 11507  001F90  0E00               	movlw	0
 11508  001F92  6E2D               	movwf	(___flmul@a+1)^0,c
 11509  001F94  0E00               	movlw	0
 11510  001F96  6E2E               	movwf	(___flmul@a+2)^0,c
 11511  001F98  0E00               	movlw	0
 11512  001F9A  6E2F               	movwf	(___flmul@a+3)^0,c
 11513  001F9C                     l1240:
 11514  001F9C  5039               	movf	___flmul@aexp^0,w,c
 11515  001F9E  B4D8               	btfsc	status,2,c
 11516  001FA0  EFD4  F00F         	goto	u4031
 11517  001FA4  EFD6  F00F         	goto	u4030
 11518  001FA8                     u4031:
 11519  001FA8  EFDE  F00F         	goto	l4034
 11520  001FAC                     u4030:
 11521  001FAC  503A               	movf	___flmul@bexp^0,w,c
 11522  001FAE  A4D8               	btfss	status,2,c
 11523  001FB0  EFDC  F00F         	goto	u4041
 11524  001FB4  EFDE  F00F         	goto	u4040
 11525  001FB8                     u4041:
 11526  001FB8  EFE8  F00F         	goto	l4038
 11527  001FBC                     u4040:
 11528  001FBC                     l4034:
 11529  001FBC  0E00               	movlw	0
 11530  001FBE  6E28               	movwf	?___flmul^0,c
 11531  001FC0  0E00               	movlw	0
 11532  001FC2  6E29               	movwf	(?___flmul+1)^0,c
 11533  001FC4  0E00               	movlw	0
 11534  001FC6  6E2A               	movwf	(?___flmul+2)^0,c
 11535  001FC8  0E00               	movlw	0
 11536  001FCA  6E2B               	movwf	(?___flmul+3)^0,c
 11537  001FCC  EF80  F011         	goto	l1244
 11538  001FD0                     l4038:
 11539  001FD0  502E               	movf	(___flmul@a+2)^0,w,c
 11540  001FD2  0228               	mulwf	___flmul@b^0,c
 11541  001FD4  CFF3 F03F          	movff	prodl,___flmul@temp
 11542  001FD8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11543  001FDC  503F               	movf	___flmul@temp^0,w,c
 11544  001FDE  6E35               	movwf	___flmul@grs^0,c
 11545  001FE0  6A36               	clrf	(___flmul@grs+1)^0,c
 11546  001FE2  6A37               	clrf	(___flmul@grs+2)^0,c
 11547  001FE4  6A38               	clrf	(___flmul@grs+3)^0,c
 11548  001FE6  5040               	movf	(___flmul@temp+1)^0,w,c
 11549  001FE8  6E3B               	movwf	___flmul@prod^0,c
 11550  001FEA  6A3C               	clrf	(___flmul@prod+1)^0,c
 11551  001FEC  6A3D               	clrf	(___flmul@prod+2)^0,c
 11552  001FEE  6A3E               	clrf	(___flmul@prod+3)^0,c
 11553  001FF0  502D               	movf	(___flmul@a+1)^0,w,c
 11554  001FF2  0229               	mulwf	(___flmul@b+1)^0,c
 11555  001FF4  CFF3 F03F          	movff	prodl,___flmul@temp
 11556  001FF8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11557  001FFC  503F               	movf	___flmul@temp^0,w,c
 11558  001FFE  2635               	addwf	___flmul@grs^0,f,c
 11559  002000  0E00               	movlw	0
 11560  002002  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11561  002004  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11562  002006  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11563  002008  5040               	movf	(___flmul@temp+1)^0,w,c
 11564  00200A  263B               	addwf	___flmul@prod^0,f,c
 11565  00200C  0E00               	movlw	0
 11566  00200E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11567  002010  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11568  002012  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11569  002014  502C               	movf	___flmul@a^0,w,c
 11570  002016  022A               	mulwf	(___flmul@b+2)^0,c
 11571  002018  CFF3 F03F          	movff	prodl,___flmul@temp
 11572  00201C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11573  002020  503F               	movf	___flmul@temp^0,w,c
 11574  002022  2635               	addwf	___flmul@grs^0,f,c
 11575  002024  0E00               	movlw	0
 11576  002026  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11577  002028  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11578  00202A  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11579  00202C  5040               	movf	(___flmul@temp+1)^0,w,c
 11580  00202E  263B               	addwf	___flmul@prod^0,f,c
 11581  002030  0E00               	movlw	0
 11582  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11583  002034  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11584  002036  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11585  002038  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11586  00203C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11587  002040  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11588  002044  6A35               	clrf	___flmul@grs^0,c
 11589  002046  502C               	movf	___flmul@a^0,w,c
 11590  002048  0229               	mulwf	(___flmul@b+1)^0,c
 11591  00204A  CFF3 F03F          	movff	prodl,___flmul@temp
 11592  00204E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11593  002052  503F               	movf	___flmul@temp^0,w,c
 11594  002054  2635               	addwf	___flmul@grs^0,f,c
 11595  002056  5040               	movf	(___flmul@temp+1)^0,w,c
 11596  002058  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11597  00205A  0E00               	movlw	0
 11598  00205C  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11599  00205E  0E00               	movlw	0
 11600  002060  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11601  002062  502D               	movf	(___flmul@a+1)^0,w,c
 11602  002064  0228               	mulwf	___flmul@b^0,c
 11603  002066  CFF3 F03F          	movff	prodl,___flmul@temp
 11604  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
 11605  00206E  503F               	movf	___flmul@temp^0,w,c
 11606  002070  2635               	addwf	___flmul@grs^0,f,c
 11607  002072  5040               	movf	(___flmul@temp+1)^0,w,c
 11608  002074  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11609  002076  0E00               	movlw	0
 11610  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11611  00207A  0E00               	movlw	0
 11612  00207C  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11613  00207E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11614  002082  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11615  002086  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11616  00208A  6A35               	clrf	___flmul@grs^0,c
 11617  00208C  502C               	movf	___flmul@a^0,w,c
 11618  00208E  0228               	mulwf	___flmul@b^0,c
 11619  002090  CFF3 F03F          	movff	prodl,___flmul@temp
 11620  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
 11621  002098  503F               	movf	___flmul@temp^0,w,c
 11622  00209A  2635               	addwf	___flmul@grs^0,f,c
 11623  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
 11624  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11625  0020A0  0E00               	movlw	0
 11626  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11627  0020A4  0E00               	movlw	0
 11628  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11629  0020A8  502E               	movf	(___flmul@a+2)^0,w,c
 11630  0020AA  0229               	mulwf	(___flmul@b+1)^0,c
 11631  0020AC  CFF3 F03F          	movff	prodl,___flmul@temp
 11632  0020B0  CFF4 F040          	movff	prodh,___flmul@temp+1
 11633  0020B4  503F               	movf	___flmul@temp^0,w,c
 11634  0020B6  263B               	addwf	___flmul@prod^0,f,c
 11635  0020B8  5040               	movf	(___flmul@temp+1)^0,w,c
 11636  0020BA  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11637  0020BC  0E00               	movlw	0
 11638  0020BE  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11639  0020C0  0E00               	movlw	0
 11640  0020C2  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11641  0020C4  502D               	movf	(___flmul@a+1)^0,w,c
 11642  0020C6  022A               	mulwf	(___flmul@b+2)^0,c
 11643  0020C8  CFF3 F03F          	movff	prodl,___flmul@temp
 11644  0020CC  CFF4 F040          	movff	prodh,___flmul@temp+1
 11645  0020D0  503F               	movf	___flmul@temp^0,w,c
 11646  0020D2  263B               	addwf	___flmul@prod^0,f,c
 11647  0020D4  5040               	movf	(___flmul@temp+1)^0,w,c
 11648  0020D6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11649  0020D8  0E00               	movlw	0
 11650  0020DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11651  0020DC  0E00               	movlw	0
 11652  0020DE  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11653  0020E0  502E               	movf	(___flmul@a+2)^0,w,c
 11654  0020E2  022A               	mulwf	(___flmul@b+2)^0,c
 11655  0020E4  CFF3 F03F          	movff	prodl,___flmul@temp
 11656  0020E8  CFF4 F040          	movff	prodh,___flmul@temp+1
 11657  0020EC  503F               	movf	___flmul@temp^0,w,c
 11658  0020EE  6E30               	movwf	??___flmul^0,c
 11659  0020F0  5040               	movf	(___flmul@temp+1)^0,w,c
 11660  0020F2  6E31               	movwf	(??___flmul+1)^0,c
 11661  0020F4  6A32               	clrf	(??___flmul+2)^0,c
 11662  0020F6  6A33               	clrf	(??___flmul+3)^0,c
 11663  0020F8  C032  F033         	movff	??___flmul+2,??___flmul+3
 11664  0020FC  C031  F032         	movff	??___flmul+1,??___flmul+2
 11665  002100  C030  F031         	movff	??___flmul,??___flmul+1
 11666  002104  6A30               	clrf	??___flmul^0,c
 11667  002106  5030               	movf	??___flmul^0,w,c
 11668  002108  263B               	addwf	___flmul@prod^0,f,c
 11669  00210A  5031               	movf	(??___flmul+1)^0,w,c
 11670  00210C  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11671  00210E  5032               	movf	(??___flmul+2)^0,w,c
 11672  002110  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11673  002112  5033               	movf	(??___flmul+3)^0,w,c
 11674  002114  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11675  002116  C035  F030         	movff	___flmul@grs,??___flmul
 11676  00211A  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11677  00211E  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11678  002122  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11679  002126  0E19               	movlw	25
 11680  002128  EF9B  F010         	goto	u4050
 11681  00212C                     u4055:
 11682  00212C  90D8               	bcf	status,0,c
 11683  00212E  3233               	rrcf	(??___flmul+3)^0,f,c
 11684  002130  3232               	rrcf	(??___flmul+2)^0,f,c
 11685  002132  3231               	rrcf	(??___flmul+1)^0,f,c
 11686  002134  3230               	rrcf	??___flmul^0,f,c
 11687  002136                     u4050:
 11688  002136  2EE8               	decfsz	wreg,f,c
 11689  002138  EF96  F010         	goto	u4055
 11690  00213C  5030               	movf	??___flmul^0,w,c
 11691  00213E  263B               	addwf	___flmul@prod^0,f,c
 11692  002140  5031               	movf	(??___flmul+1)^0,w,c
 11693  002142  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11694  002144  5032               	movf	(??___flmul+2)^0,w,c
 11695  002146  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11696  002148  5033               	movf	(??___flmul+3)^0,w,c
 11697  00214A  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11698  00214C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11699  002150  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11700  002154  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11701  002158  6A35               	clrf	___flmul@grs^0,c
 11702  00215A  5039               	movf	___flmul@aexp^0,w,c
 11703  00215C  C03A  F030         	movff	___flmul@bexp,??___flmul
 11704  002160  6A31               	clrf	(??___flmul+1)^0,c
 11705  002162  2630               	addwf	??___flmul^0,f,c
 11706  002164  0E00               	movlw	0
 11707  002166  2231               	addwfc	(??___flmul+1)^0,f,c
 11708  002168  0E82               	movlw	130
 11709  00216A  2430               	addwf	??___flmul^0,w,c
 11710  00216C  6E3F               	movwf	___flmul@temp^0,c
 11711  00216E  0EFF               	movlw	255
 11712  002170  2031               	addwfc	(??___flmul+1)^0,w,c
 11713  002172  6E40               	movwf	(___flmul@temp+1)^0,c
 11714  002174  EFD1  F010         	goto	l4086
 11715  002178                     l4080:
 11716  002178  90D8               	bcf	status,0,c
 11717  00217A  363B               	rlcf	___flmul@prod^0,f,c
 11718  00217C  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11719  00217E  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11720  002180  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11721  002182  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11722  002184  EFC6  F010         	goto	u4061
 11723  002188  EFC8  F010         	goto	u4060
 11724  00218C                     u4061:
 11725  00218C  EFC9  F010         	goto	l1247
 11726  002190                     u4060:
 11727  002190  803B               	bsf	___flmul@prod^0,0,c
 11728  002192                     l1247:
 11729  002192  90D8               	bcf	status,0,c
 11730  002194  3635               	rlcf	___flmul@grs^0,f,c
 11731  002196  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11732  002198  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11733  00219A  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11734  00219C  063F               	decf	___flmul@temp^0,f,c
 11735  00219E  A0D8               	btfss	status,0,c
 11736  0021A0  0640               	decf	(___flmul@temp+1)^0,f,c
 11737  0021A2                     l4086:
 11738  0021A2  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11739  0021A4  EFD6  F010         	goto	u4071
 11740  0021A8  EFD8  F010         	goto	u4070
 11741  0021AC                     u4071:
 11742  0021AC  EFBC  F010         	goto	l4080
 11743  0021B0                     u4070:
 11744  0021B0  0E00               	movlw	0
 11745  0021B2  6E39               	movwf	___flmul@aexp^0,c
 11746  0021B4  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11747  0021B6  EFDF  F010         	goto	u4081
 11748  0021BA  EFE1  F010         	goto	u4080
 11749  0021BE                     u4081:
 11750  0021BE  EF05  F011         	goto	l1249
 11751  0021C2                     u4080:
 11752  0021C2  0EFF               	movlw	255
 11753  0021C4  1435               	andwf	___flmul@grs^0,w,c
 11754  0021C6  6E30               	movwf	??___flmul^0,c
 11755  0021C8  0EFF               	movlw	255
 11756  0021CA  1436               	andwf	(___flmul@grs+1)^0,w,c
 11757  0021CC  6E31               	movwf	(??___flmul+1)^0,c
 11758  0021CE  0EFF               	movlw	255
 11759  0021D0  1437               	andwf	(___flmul@grs+2)^0,w,c
 11760  0021D2  6E32               	movwf	(??___flmul+2)^0,c
 11761  0021D4  0E7F               	movlw	127
 11762  0021D6  1438               	andwf	(___flmul@grs+3)^0,w,c
 11763  0021D8  6E33               	movwf	(??___flmul+3)^0,c
 11764  0021DA  5030               	movf	??___flmul^0,w,c
 11765  0021DC  1031               	iorwf	(??___flmul+1)^0,w,c
 11766  0021DE  1032               	iorwf	(??___flmul+2)^0,w,c
 11767  0021E0  1033               	iorwf	(??___flmul+3)^0,w,c
 11768  0021E2  B4D8               	btfsc	status,2,c
 11769  0021E4  EFF6  F010         	goto	u4091
 11770  0021E8  EFF8  F010         	goto	u4090
 11771  0021EC                     u4091:
 11772  0021EC  EFFC  F010         	goto	l1250
 11773  0021F0                     u4090:
 11774  0021F0                     l4094:
 11775  0021F0  0E01               	movlw	1
 11776  0021F2  6E39               	movwf	___flmul@aexp^0,c
 11777  0021F4  EF05  F011         	goto	l1249
 11778  0021F8                     l1250:
 11779  0021F8  A03B               	btfss	___flmul@prod^0,0,c
 11780  0021FA  EF01  F011         	goto	u4101
 11781  0021FE  EF03  F011         	goto	u4100
 11782  002202                     u4101:
 11783  002202  EF05  F011         	goto	l1249
 11784  002206                     u4100:
 11785  002206  EFF8  F010         	goto	l4094
 11786  00220A                     l1249:
 11787  00220A  5039               	movf	___flmul@aexp^0,w,c
 11788  00220C  B4D8               	btfsc	status,2,c
 11789  00220E  EF0B  F011         	goto	u4111
 11790  002212  EF0D  F011         	goto	u4110
 11791  002216                     u4111:
 11792  002216  EF31  F011         	goto	l4106
 11793  00221A                     u4110:
 11794  00221A  0E01               	movlw	1
 11795  00221C  263B               	addwf	___flmul@prod^0,f,c
 11796  00221E  0E00               	movlw	0
 11797  002220  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11798  002222  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11799  002224  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11800  002226  A03E               	btfss	(___flmul@prod+3)^0,0,c
 11801  002228  EF18  F011         	goto	u4121
 11802  00222C  EF1A  F011         	goto	u4120
 11803  002230                     u4121:
 11804  002230  EF31  F011         	goto	l4106
 11805  002234                     u4120:
 11806  002234  C03B  F030         	movff	___flmul@prod,??___flmul
 11807  002238  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 11808  00223C  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 11809  002240  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 11810  002244  3433               	rlcf	(??___flmul+3)^0,w,c
 11811  002246  3233               	rrcf	(??___flmul+3)^0,f,c
 11812  002248  3232               	rrcf	(??___flmul+2)^0,f,c
 11813  00224A  3231               	rrcf	(??___flmul+1)^0,f,c
 11814  00224C  3230               	rrcf	??___flmul^0,f,c
 11815  00224E  C030  F03B         	movff	??___flmul,___flmul@prod
 11816  002252  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 11817  002256  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 11818  00225A  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 11819  00225E  4A3F               	infsnz	___flmul@temp^0,f,c
 11820  002260  2A40               	incf	(___flmul@temp+1)^0,f,c
 11821  002262                     l4106:
 11822  002262  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11823  002264  EF3C  F011         	goto	u4131
 11824  002268  5040               	movf	(___flmul@temp+1)^0,w,c
 11825  00226A  E108               	bnz	u4130
 11826  00226C  283F               	incf	___flmul@temp^0,w,c
 11827  00226E  A0D8               	btfss	status,0,c
 11828  002270  EF3C  F011         	goto	u4131
 11829  002274  EF3E  F011         	goto	u4130
 11830  002278                     u4131:
 11831  002278  EF48  F011         	goto	l4110
 11832  00227C                     u4130:
 11833  00227C  0E00               	movlw	0
 11834  00227E  6E3B               	movwf	___flmul@prod^0,c
 11835  002280  0E00               	movlw	0
 11836  002282  6E3C               	movwf	(___flmul@prod+1)^0,c
 11837  002284  0E80               	movlw	128
 11838  002286  6E3D               	movwf	(___flmul@prod+2)^0,c
 11839  002288  0E7F               	movlw	127
 11840  00228A  6E3E               	movwf	(___flmul@prod+3)^0,c
 11841  00228C  EF76  F011         	goto	l4122
 11842  002290                     l4110:
 11843  002290  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11844  002292  EF55  F011         	goto	u4140
 11845  002296  5040               	movf	(___flmul@temp+1)^0,w,c
 11846  002298  E106               	bnz	u4141
 11847  00229A  043F               	decf	___flmul@temp^0,w,c
 11848  00229C  B0D8               	btfsc	status,0,c
 11849  00229E  EF53  F011         	goto	u4141
 11850  0022A2  EF55  F011         	goto	u4140
 11851  0022A6                     u4141:
 11852  0022A6  EF61  F011         	goto	l1257
 11853  0022AA                     u4140:
 11854  0022AA  0E00               	movlw	0
 11855  0022AC  6E3B               	movwf	___flmul@prod^0,c
 11856  0022AE  0E00               	movlw	0
 11857  0022B0  6E3C               	movwf	(___flmul@prod+1)^0,c
 11858  0022B2  0E00               	movlw	0
 11859  0022B4  6E3D               	movwf	(___flmul@prod+2)^0,c
 11860  0022B6  0E00               	movlw	0
 11861  0022B8  6E3E               	movwf	(___flmul@prod+3)^0,c
 11862  0022BA  0E00               	movlw	0
 11863  0022BC  6E34               	movwf	___flmul@sign^0,c
 11864  0022BE  EF76  F011         	goto	l4122
 11865  0022C2                     l1257:
 11866  0022C2  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 11867  0022C6  0EFF               	movlw	255
 11868  0022C8  163B               	andwf	___flmul@prod^0,f,c
 11869  0022CA  0EFF               	movlw	255
 11870  0022CC  163C               	andwf	(___flmul@prod+1)^0,f,c
 11871  0022CE  0E7F               	movlw	127
 11872  0022D0  163D               	andwf	(___flmul@prod+2)^0,f,c
 11873  0022D2  0E00               	movlw	0
 11874  0022D4  163E               	andwf	(___flmul@prod+3)^0,f,c
 11875  0022D6  A03A               	btfss	___flmul@bexp^0,0,c
 11876  0022D8  EF70  F011         	goto	u4151
 11877  0022DC  EF72  F011         	goto	u4150
 11878  0022E0                     u4151:
 11879  0022E0  EF73  F011         	goto	l4120
 11880  0022E4                     u4150:
 11881  0022E4  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 11882  0022E6                     l4120:
 11883  0022E6  90D8               	bcf	status,0,c
 11884  0022E8  303A               	rrcf	___flmul@bexp^0,w,c
 11885  0022EA  6E3E               	movwf	(___flmul@prod+3)^0,c
 11886  0022EC                     l4122:
 11887  0022EC  5034               	movf	___flmul@sign^0,w,c
 11888  0022EE  123E               	iorwf	(___flmul@prod+3)^0,f,c
 11889  0022F0  C03B  F028         	movff	___flmul@prod,?___flmul
 11890  0022F4  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 11891  0022F8  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 11892  0022FC  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 11893  002300                     l1244:
 11894  002300  0012               	return		;funcret
 11895  002302                     __end_of___flmul:
 11896                           	callstack 0
 11897                           
 11898 ;; *************** function ___flge *****************
 11899 ;; Defined at:
 11900 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 11901 ;; Parameters:    Size  Location     Type
 11902 ;;  ff1             4    0[COMRAM] unsigned char 
 11903 ;;  ff2             4    4[COMRAM] unsigned char 
 11904 ;; Auto vars:     Size  Location     Type
 11905 ;;		None
 11906 ;; Return value:  Size  Location     Type
 11907 ;;		None               void
 11908 ;; Registers used:
 11909 ;;		wreg, status,2, status,0
 11910 ;; Tracked objects:
 11911 ;;		On entry : 0/0
 11912 ;;		On exit  : 0/0
 11913 ;;		Unchanged: 0/0
 11914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11915 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11917 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11918 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11919 ;;Total ram usage:       12 bytes
 11920 ;; Hardware stack levels used: 1
 11921 ;; Hardware stack levels required when called: 1
 11922 ;; This function calls:
 11923 ;;		Nothing
 11924 ;; This function is called by:
 11925 ;;		_roundf
 11926 ;; This function uses a non-reentrant model
 11927 ;;
 11928                           
 11929                           	psect	text53
 11930  004DB4                     __ptext53:
 11931                           	callstack 0
 11932  004DB4                     ___flge:
 11933                           	callstack 25
 11934  004DB4  0E00               	movlw	0
 11935  004DB6  1401               	andwf	___flge@ff1^0,w,c
 11936  004DB8  6E09               	movwf	??___flge^0,c
 11937  004DBA  0E00               	movlw	0
 11938  004DBC  1402               	andwf	(___flge@ff1+1)^0,w,c
 11939  004DBE  6E0A               	movwf	(??___flge+1)^0,c
 11940  004DC0  0E80               	movlw	128
 11941  004DC2  1403               	andwf	(___flge@ff1+2)^0,w,c
 11942  004DC4  6E0B               	movwf	(??___flge+2)^0,c
 11943  004DC6  0E7F               	movlw	127
 11944  004DC8  1404               	andwf	(___flge@ff1+3)^0,w,c
 11945  004DCA  6E0C               	movwf	(??___flge+3)^0,c
 11946  004DCC  5009               	movf	??___flge^0,w,c
 11947  004DCE  100A               	iorwf	(??___flge+1)^0,w,c
 11948  004DD0  100B               	iorwf	(??___flge+2)^0,w,c
 11949  004DD2  100C               	iorwf	(??___flge+3)^0,w,c
 11950  004DD4  A4D8               	btfss	status,2,c
 11951  004DD6  EFEF  F026         	goto	u4161
 11952  004DDA  EFF1  F026         	goto	u4160
 11953  004DDE                     u4161:
 11954  004DDE  EFF9  F026         	goto	l4138
 11955  004DE2                     u4160:
 11956  004DE2  0E00               	movlw	0
 11957  004DE4  6E01               	movwf	___flge@ff1^0,c
 11958  004DE6  0E00               	movlw	0
 11959  004DE8  6E02               	movwf	(___flge@ff1+1)^0,c
 11960  004DEA  0E00               	movlw	0
 11961  004DEC  6E03               	movwf	(___flge@ff1+2)^0,c
 11962  004DEE  0E00               	movlw	0
 11963  004DF0  6E04               	movwf	(___flge@ff1+3)^0,c
 11964  004DF2                     l4138:
 11965  004DF2  0E00               	movlw	0
 11966  004DF4  1405               	andwf	___flge@ff2^0,w,c
 11967  004DF6  6E09               	movwf	??___flge^0,c
 11968  004DF8  0E00               	movlw	0
 11969  004DFA  1406               	andwf	(___flge@ff2+1)^0,w,c
 11970  004DFC  6E0A               	movwf	(??___flge+1)^0,c
 11971  004DFE  0E80               	movlw	128
 11972  004E00  1407               	andwf	(___flge@ff2+2)^0,w,c
 11973  004E02  6E0B               	movwf	(??___flge+2)^0,c
 11974  004E04  0E7F               	movlw	127
 11975  004E06  1408               	andwf	(___flge@ff2+3)^0,w,c
 11976  004E08  6E0C               	movwf	(??___flge+3)^0,c
 11977  004E0A  5009               	movf	??___flge^0,w,c
 11978  004E0C  100A               	iorwf	(??___flge+1)^0,w,c
 11979  004E0E  100B               	iorwf	(??___flge+2)^0,w,c
 11980  004E10  100C               	iorwf	(??___flge+3)^0,w,c
 11981  004E12  A4D8               	btfss	status,2,c
 11982  004E14  EF0E  F027         	goto	u4171
 11983  004E18  EF10  F027         	goto	u4170
 11984  004E1C                     u4171:
 11985  004E1C  EF18  F027         	goto	l4142
 11986  004E20                     u4170:
 11987  004E20  0E00               	movlw	0
 11988  004E22  6E05               	movwf	___flge@ff2^0,c
 11989  004E24  0E00               	movlw	0
 11990  004E26  6E06               	movwf	(___flge@ff2+1)^0,c
 11991  004E28  0E00               	movlw	0
 11992  004E2A  6E07               	movwf	(___flge@ff2+2)^0,c
 11993  004E2C  0E00               	movlw	0
 11994  004E2E  6E08               	movwf	(___flge@ff2+3)^0,c
 11995  004E30                     l4142:
 11996  004E30  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11997  004E32  EF1D  F027         	goto	u4181
 11998  004E36  EF1F  F027         	goto	u4180
 11999  004E3A                     u4181:
 12000  004E3A  EF28  F027         	goto	l4146
 12001  004E3E                     u4180:
 12002  004E3E  6C01               	negf	___flge@ff1^0,c
 12003  004E40  1E02               	comf	(___flge@ff1+1)^0,f,c
 12004  004E42  B0D8               	btfsc	status,0,c
 12005  004E44  2A02               	incf	(___flge@ff1+1)^0,f,c
 12006  004E46  1E03               	comf	(___flge@ff1+2)^0,f,c
 12007  004E48  B0D8               	btfsc	status,0,c
 12008  004E4A  2A03               	incf	(___flge@ff1+2)^0,f,c
 12009  004E4C  0E80               	movlw	128
 12010  004E4E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 12011  004E50                     l4146:
 12012  004E50  AE08               	btfss	(___flge@ff2+3)^0,7,c
 12013  004E52  EF2D  F027         	goto	u4191
 12014  004E56  EF2F  F027         	goto	u4190
 12015  004E5A                     u4191:
 12016  004E5A  EF38  F027         	goto	l891
 12017  004E5E                     u4190:
 12018  004E5E  6C05               	negf	___flge@ff2^0,c
 12019  004E60  1E06               	comf	(___flge@ff2+1)^0,f,c
 12020  004E62  B0D8               	btfsc	status,0,c
 12021  004E64  2A06               	incf	(___flge@ff2+1)^0,f,c
 12022  004E66  1E07               	comf	(___flge@ff2+2)^0,f,c
 12023  004E68  B0D8               	btfsc	status,0,c
 12024  004E6A  2A07               	incf	(___flge@ff2+2)^0,f,c
 12025  004E6C  0E80               	movlw	128
 12026  004E6E  5608               	subfwb	(___flge@ff2+3)^0,f,c
 12027  004E70                     l891:
 12028  004E70  0E00               	movlw	0
 12029  004E72  1A01               	xorwf	___flge@ff1^0,f,c
 12030  004E74  0E00               	movlw	0
 12031  004E76  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 12032  004E78  0E00               	movlw	0
 12033  004E7A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 12034  004E7C  0E80               	movlw	128
 12035  004E7E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 12036  004E80  0E00               	movlw	0
 12037  004E82  1A05               	xorwf	___flge@ff2^0,f,c
 12038  004E84  0E00               	movlw	0
 12039  004E86  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 12040  004E88  0E00               	movlw	0
 12041  004E8A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 12042  004E8C  0E80               	movlw	128
 12043  004E8E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 12044  004E90  5005               	movf	___flge@ff2^0,w,c
 12045  004E92  5C01               	subwf	___flge@ff1^0,w,c
 12046  004E94  5006               	movf	(___flge@ff2+1)^0,w,c
 12047  004E96  5802               	subwfb	(___flge@ff1+1)^0,w,c
 12048  004E98  5007               	movf	(___flge@ff2+2)^0,w,c
 12049  004E9A  5803               	subwfb	(___flge@ff1+2)^0,w,c
 12050  004E9C  5008               	movf	(___flge@ff2+3)^0,w,c
 12051  004E9E  5804               	subwfb	(___flge@ff1+3)^0,w,c
 12052  004EA0  B0D8               	btfsc	status,0,c
 12053  004EA2  EF55  F027         	goto	u4201
 12054  004EA6  EF57  F027         	goto	u4200
 12055  004EAA                     u4201:
 12056  004EAA  EF5A  F027         	goto	l4152
 12057  004EAE                     u4200:
 12058  004EAE  90D8               	bcf	status,0,c
 12059  004EB0  EF5B  F027         	goto	l896
 12060  004EB4                     l4152:
 12061  004EB4  80D8               	bsf	status,0,c
 12062  004EB6                     l896:
 12063  004EB6  0012               	return		;funcret
 12064  004EB8                     __end_of___flge:
 12065                           	callstack 0
 12066                           
 12067 ;; *************** function ___fltol *****************
 12068 ;; Defined at:
 12069 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 12070 ;; Parameters:    Size  Location     Type
 12071 ;;  f1              4   90[COMRAM] unsigned char 
 12072 ;; Auto vars:     Size  Location     Type
 12073 ;;  exp1            1    5[BANK0 ] unsigned char 
 12074 ;;  sign1           1    4[BANK0 ] unsigned char 
 12075 ;; Return value:  Size  Location     Type
 12076 ;;                  4   90[COMRAM] long 
 12077 ;; Registers used:
 12078 ;;		wreg, status,2, status,0
 12079 ;; Tracked objects:
 12080 ;;		On entry : 0/0
 12081 ;;		On exit  : 0/0
 12082 ;;		Unchanged: 0/0
 12083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12085 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12087 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12088 ;;Total ram usage:       10 bytes
 12089 ;; Hardware stack levels used: 1
 12090 ;; Hardware stack levels required when called: 1
 12091 ;; This function calls:
 12092 ;;		Nothing
 12093 ;; This function is called by:
 12094 ;;		_lroundf
 12095 ;; This function uses a non-reentrant model
 12096 ;;
 12097                           
 12098                           	psect	text54
 12099  004CAC                     __ptext54:
 12100                           	callstack 0
 12101  004CAC                     ___fltol:
 12102                           	callstack 26
 12103  004CAC  345D               	rlcf	(___fltol@f1+2)^0,w,c
 12104  004CAE  345E               	rlcf	(___fltol@f1+3)^0,w,c
 12105  004CB0  0100               	movlb	0	; () banked
 12106  004CB2  6F65               	movwf	___fltol@exp1& (0+255),b
 12107  004CB4  5165               	movf	___fltol@exp1& (0+255),w,b
 12108  004CB6  A4D8               	btfss	status,2,c
 12109  004CB8  EF60  F026         	goto	u4351
 12110  004CBC  EF62  F026         	goto	u4350
 12111  004CC0                     u4351:
 12112  004CC0  EF6C  F026         	goto	l4294
 12113  004CC4                     u4350:
 12114  004CC4                     l4290:
 12115                           
 12116                           ; BSR set to: 0
 12117  004CC4  0E00               	movlw	0
 12118  004CC6  6E5B               	movwf	?___fltol^0,c
 12119  004CC8  0E00               	movlw	0
 12120  004CCA  6E5C               	movwf	(?___fltol+1)^0,c
 12121  004CCC  0E00               	movlw	0
 12122  004CCE  6E5D               	movwf	(?___fltol+2)^0,c
 12123  004CD0  0E00               	movlw	0
 12124  004CD2  6E5E               	movwf	(?___fltol+3)^0,c
 12125  004CD4  EFD9  F026         	goto	l923
 12126  004CD8                     l4294:
 12127                           
 12128                           ; BSR set to: 0
 12129  004CD8  C05B  F060         	movff	___fltol@f1,??___fltol
 12130  004CDC  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
 12131  004CE0  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
 12132  004CE4  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
 12133  004CE8  0E20               	movlw	32
 12134  004CEA  EF7C  F026         	goto	u4360
 12135  004CEE                     u4365:
 12136  004CEE  90D8               	bcf	status,0,c
 12137  004CF0  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 12138  004CF2  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 12139  004CF4  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 12140  004CF6  3360               	rrcf	??___fltol& (0+255),f,b
 12141  004CF8                     u4360:
 12142  004CF8  2EE8               	decfsz	wreg,f,c
 12143  004CFA  EF77  F026         	goto	u4365
 12144  004CFE  5160               	movf	??___fltol& (0+255),w,b
 12145  004D00  6F64               	movwf	___fltol@sign1& (0+255),b
 12146  004D02                     
 12147                           ; BSR set to: 0
 12148  004D02  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 12149  004D04                     
 12150                           ; BSR set to: 0
 12151  004D04  0EFF               	movlw	255
 12152  004D06  165B               	andwf	___fltol@f1^0,f,c
 12153  004D08  0EFF               	movlw	255
 12154  004D0A  165C               	andwf	(___fltol@f1+1)^0,f,c
 12155  004D0C  0EFF               	movlw	255
 12156  004D0E  165D               	andwf	(___fltol@f1+2)^0,f,c
 12157  004D10  0E00               	movlw	0
 12158  004D12  165E               	andwf	(___fltol@f1+3)^0,f,c
 12159  004D14                     
 12160                           ; BSR set to: 0
 12161  004D14  0E96               	movlw	150
 12162  004D16  5F65               	subwf	___fltol@exp1& (0+255),f,b
 12163  004D18                     
 12164                           ; BSR set to: 0
 12165  004D18  BF65               	btfsc	___fltol@exp1& (0+255),7,b
 12166  004D1A  EF93  F026         	goto	u4370
 12167  004D1E  EF91  F026         	goto	u4371
 12168  004D22                     u4371:
 12169  004D22  EFA9  F026         	goto	l4314
 12170  004D26                     u4370:
 12171  004D26                     
 12172                           ; BSR set to: 0
 12173  004D26  5165               	movf	___fltol@exp1& (0+255),w,b
 12174  004D28  0A80               	xorlw	128
 12175  004D2A  0F97               	addlw	151
 12176  004D2C  B0D8               	btfsc	status,0,c
 12177  004D2E  EF9B  F026         	goto	u4381
 12178  004D32  EF9D  F026         	goto	u4380
 12179  004D36                     u4381:
 12180  004D36  EF9F  F026         	goto	l4310
 12181  004D3A                     u4380:
 12182  004D3A  EF62  F026         	goto	l4290
 12183  004D3E                     l4310:
 12184                           
 12185                           ; BSR set to: 0
 12186  004D3E  90D8               	bcf	status,0,c
 12187  004D40  325E               	rrcf	(___fltol@f1+3)^0,f,c
 12188  004D42  325D               	rrcf	(___fltol@f1+2)^0,f,c
 12189  004D44  325C               	rrcf	(___fltol@f1+1)^0,f,c
 12190  004D46  325B               	rrcf	___fltol@f1^0,f,c
 12191  004D48                     
 12192                           ; BSR set to: 0
 12193  004D48  3F65               	incfsz	___fltol@exp1& (0+255),f,b
 12194  004D4A  EF9F  F026         	goto	l4310
 12195  004D4E  EFC1  F026         	goto	l4324
 12196  004D52                     l4314:
 12197                           
 12198                           ; BSR set to: 0
 12199  004D52  0E1F               	movlw	31
 12200  004D54  6565               	cpfsgt	___fltol@exp1& (0+255),b
 12201  004D56  EFAF  F026         	goto	u4391
 12202  004D5A  EFB1  F026         	goto	u4390
 12203  004D5E                     u4391:
 12204  004D5E  EFB9  F026         	goto	l4322
 12205  004D62                     u4390:
 12206  004D62  EF62  F026         	goto	l4290
 12207  004D66                     l4320:
 12208                           
 12209                           ; BSR set to: 0
 12210  004D66  90D8               	bcf	status,0,c
 12211  004D68  365B               	rlcf	___fltol@f1^0,f,c
 12212  004D6A  365C               	rlcf	(___fltol@f1+1)^0,f,c
 12213  004D6C  365D               	rlcf	(___fltol@f1+2)^0,f,c
 12214  004D6E  365E               	rlcf	(___fltol@f1+3)^0,f,c
 12215  004D70  0765               	decf	___fltol@exp1& (0+255),f,b
 12216  004D72                     l4322:
 12217                           
 12218                           ; BSR set to: 0
 12219  004D72  5165               	movf	___fltol@exp1& (0+255),w,b
 12220  004D74  A4D8               	btfss	status,2,c
 12221  004D76  EFBF  F026         	goto	u4401
 12222  004D7A  EFC1  F026         	goto	u4400
 12223  004D7E                     u4401:
 12224  004D7E  EFB3  F026         	goto	l4320
 12225  004D82                     u4400:
 12226  004D82                     l4324:
 12227                           
 12228                           ; BSR set to: 0
 12229  004D82  5164               	movf	___fltol@sign1& (0+255),w,b
 12230  004D84  B4D8               	btfsc	status,2,c
 12231  004D86  EFC7  F026         	goto	u4411
 12232  004D8A  EFC9  F026         	goto	u4410
 12233  004D8E                     u4411:
 12234  004D8E  EFD1  F026         	goto	l4328
 12235  004D92                     u4410:
 12236  004D92                     
 12237                           ; BSR set to: 0
 12238  004D92  1E5E               	comf	(___fltol@f1+3)^0,f,c
 12239  004D94  1E5D               	comf	(___fltol@f1+2)^0,f,c
 12240  004D96  1E5C               	comf	(___fltol@f1+1)^0,f,c
 12241  004D98  6C5B               	negf	___fltol@f1^0,c
 12242  004D9A  0E00               	movlw	0
 12243  004D9C  225C               	addwfc	(___fltol@f1+1)^0,f,c
 12244  004D9E  225D               	addwfc	(___fltol@f1+2)^0,f,c
 12245  004DA0  225E               	addwfc	(___fltol@f1+3)^0,f,c
 12246  004DA2                     l4328:
 12247                           
 12248                           ; BSR set to: 0
 12249  004DA2  C05B  F05B         	movff	___fltol@f1,?___fltol
 12250  004DA6  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 12251  004DAA  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 12252  004DAE  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 12253  004DB2                     l923:
 12254                           
 12255                           ; BSR set to: 0
 12256  004DB2  0012               	return		;funcret
 12257  004DB4                     __end_of___fltol:
 12258                           	callstack 0
 12259                           
 12260 ;; *************** function _color_read_Clear *****************
 12261 ;; Defined at:
 12262 ;;		line 153 in file "color.c"
 12263 ;; Parameters:    Size  Location     Type
 12264 ;;		None
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;  tmp             2    9[COMRAM] unsigned int 
 12267 ;; Return value:  Size  Location     Type
 12268 ;;                  2    4[COMRAM] unsigned int 
 12269 ;; Registers used:
 12270 ;;		wreg, status,2, status,0, cstack
 12271 ;; Tracked objects:
 12272 ;;		On entry : 0/0
 12273 ;;		On exit  : 0/0
 12274 ;;		Unchanged: 0/0
 12275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12278 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12279 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12280 ;;Total ram usage:        7 bytes
 12281 ;; Hardware stack levels used: 1
 12282 ;; Hardware stack levels required when called: 3
 12283 ;; This function calls:
 12284 ;;		_I2C_2_Master_Read
 12285 ;;		_I2C_2_Master_RepStart
 12286 ;;		_I2C_2_Master_Start
 12287 ;;		_I2C_2_Master_Stop
 12288 ;;		_I2C_2_Master_Write
 12289 ;; This function is called by:
 12290 ;;		_read_color
 12291 ;;		_calibrate_white
 12292 ;;		_amb_light_measure
 12293 ;;		_detect_wall
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text55
 12298  005802                     __ptext55:
 12299                           	callstack 0
 12300  005802                     _color_read_Clear:
 12301                           	callstack 24
 12302  005802                     
 12303                           ;color.c: 155:  unsigned int tmp;;color.c: 156:  I2C_2_Master_Start();
 12304  005802  ECC1  F02E         	call	_I2C_2_Master_Start	;wreg free
 12305                           
 12306                           ;color.c: 157:  I2C_2_Master_Write(0x52 | 0x00);
 12307  005806  0E52               	movlw	82
 12308  005808  ECAB  F02E         	call	_I2C_2_Master_Write
 12309                           
 12310                           ;color.c: 158:  I2C_2_Master_Write(0xA0 | 0x14);
 12311  00580C  0EB4               	movlw	180
 12312  00580E  ECAB  F02E         	call	_I2C_2_Master_Write
 12313                           
 12314                           ;color.c: 159:  I2C_2_Master_RepStart();
 12315  005812  ECB7  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 12316                           
 12317                           ;color.c: 160:  I2C_2_Master_Write(0x52 | 0x01);
 12318  005816  0E53               	movlw	83
 12319  005818  ECAB  F02E         	call	_I2C_2_Master_Write
 12320                           
 12321                           ;color.c: 161:  tmp=I2C_2_Master_Read(1);
 12322  00581C  0E01               	movlw	1
 12323  00581E  EC8F  F02C         	call	_I2C_2_Master_Read
 12324  005822  6E07               	movwf	??_color_read_Clear^0,c
 12325  005824  5007               	movf	??_color_read_Clear^0,w,c
 12326  005826  6E0A               	movwf	color_read_Clear@tmp^0,c
 12327  005828  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12328                           
 12329                           ;color.c: 162:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12330  00582A  0E00               	movlw	0
 12331  00582C  EC8F  F02C         	call	_I2C_2_Master_Read
 12332  005830  6E07               	movwf	??_color_read_Clear^0,c
 12333  005832  5007               	movf	??_color_read_Clear^0,w,c
 12334  005834  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12335  005836  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12336  005838  500A               	movf	color_read_Clear@tmp^0,w,c
 12337  00583A  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12338  00583C  6E0A               	movwf	color_read_Clear@tmp^0,c
 12339  00583E  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12340  005840  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12341  005842  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12342                           
 12343                           ;color.c: 163:  I2C_2_Master_Stop();
 12344  005844  ECBC  F02E         	call	_I2C_2_Master_Stop	;wreg free
 12345  005848                     
 12346                           ;color.c: 164:  return tmp;
 12347  005848  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12348  00584C  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12349  005850  0012               	return		;funcret
 12350  005852                     __end_of_color_read_Clear:
 12351                           	callstack 0
 12352                           
 12353 ;; *************** function _I2C_2_Master_RepStart *****************
 12354 ;; Defined at:
 12355 ;;		line 33 in file "i2c.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;		None
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		wreg, status,2, status,0, cstack
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12373 ;;Total ram usage:        0 bytes
 12374 ;; Hardware stack levels used: 1
 12375 ;; Hardware stack levels required when called: 2
 12376 ;; This function calls:
 12377 ;;		_I2C_2_Master_Idle
 12378 ;; This function is called by:
 12379 ;;		_color_read_Red
 12380 ;;		_color_read_Blue
 12381 ;;		_color_read_Green
 12382 ;;		_color_read_Clear
 12383 ;; This function uses a non-reentrant model
 12384 ;;
 12385                           
 12386                           	psect	text56
 12387  005D6E                     __ptext56:
 12388                           	callstack 0
 12389  005D6E                     _I2C_2_Master_RepStart:
 12390                           	callstack 24
 12391  005D6E                     
 12392                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12393  005D6E  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12394  005D72                     
 12395                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12396  005D72  010E               	movlb	14	; () banked
 12397  005D74  83DA               	bsf	218,1,b	;volatile
 12398  005D76                     
 12399                           ; BSR set to: 14
 12400  005D76  0012               	return		;funcret
 12401  005D78                     __end_of_I2C_2_Master_RepStart:
 12402                           	callstack 0
 12403                           
 12404 ;; *************** function _I2C_2_Master_Read *****************
 12405 ;; Defined at:
 12406 ;;		line 51 in file "i2c.c"
 12407 ;; Parameters:    Size  Location     Type
 12408 ;;  ack             1    wreg     unsigned char 
 12409 ;; Auto vars:     Size  Location     Type
 12410 ;;  ack             1    2[COMRAM] unsigned char 
 12411 ;;  tmp             1    3[COMRAM] unsigned char 
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  1    wreg      unsigned char 
 12414 ;; Registers used:
 12415 ;;		wreg, status,2, status,0, cstack
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12424 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12425 ;;Total ram usage:        3 bytes
 12426 ;; Hardware stack levels used: 1
 12427 ;; Hardware stack levels required when called: 2
 12428 ;; This function calls:
 12429 ;;		_I2C_2_Master_Idle
 12430 ;; This function is called by:
 12431 ;;		_color_read_Red
 12432 ;;		_color_read_Blue
 12433 ;;		_color_read_Green
 12434 ;;		_color_read_Clear
 12435 ;; This function uses a non-reentrant model
 12436 ;;
 12437                           
 12438                           	psect	text57
 12439  00591E                     __ptext57:
 12440                           	callstack 0
 12441  00591E                     _I2C_2_Master_Read:
 12442                           	callstack 24
 12443                           
 12444                           ; BSR set to: 14
 12445                           ;incstack = 0
 12446                           ;I2C_2_Master_Read@ack stored from wreg
 12447  00591E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12448  005920                     
 12449                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12450  005920  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12451  005924                     
 12452                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12453  005924  010E               	movlb	14	; () banked
 12454  005926  87DA               	bsf	218,3,b	;volatile
 12455                           
 12456                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12457  005928  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12458  00592C                     
 12459                           ;i2c.c: 57:   tmp = SSP2BUF;
 12460  00592C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12461                           
 12462                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12463  005930  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12464  005934                     
 12465                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12466  005934  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12467  005936  B4D8               	btfsc	status,2,c
 12468  005938  EFA0  F02C         	goto	u3901
 12469  00593C  EFA4  F02C         	goto	u3900
 12470  005940                     u3901:
 12471  005940  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12472  005942  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12473  005944  EFA5  F02C         	goto	u3918
 12474  005948                     u3900:
 12475  005948  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12476  00594A                     u3918:
 12477  00594A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12478  00594C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12479  00594E  010E               	movlb	14	; () banked
 12480  005950  51DA               	movf	218,w,b	;volatile
 12481  005952  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12482  005954  0BDF               	andlw	-33
 12483  005956  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12484  005958  6FDA               	movwf	218,b	;volatile
 12485  00595A                     
 12486                           ; BSR set to: 14
 12487                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12488  00595A  89DA               	bsf	218,4,b	;volatile
 12489  00595C                     
 12490                           ; BSR set to: 14
 12491                           ;i2c.c: 61:   return tmp;
 12492  00595C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12493  00595E                     
 12494                           ; BSR set to: 14
 12495  00595E  0012               	return		;funcret
 12496  005960                     __end_of_I2C_2_Master_Read:
 12497                           	callstack 0
 12498                           
 12499 ;; *************** function ___xxtofl *****************
 12500 ;; Defined at:
 12501 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  sign            1    wreg     unsigned char 
 12504 ;;  val             4    0[COMRAM] long 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  sign            1    8[COMRAM] unsigned char 
 12507 ;;  arg             4   10[COMRAM] unsigned long 
 12508 ;;  exp             1    9[COMRAM] unsigned char 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  4    0[COMRAM] unsigned char 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12519 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12520 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12521 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12522 ;;Total ram usage:       14 bytes
 12523 ;; Hardware stack levels used: 1
 12524 ;; Hardware stack levels required when called: 1
 12525 ;; This function calls:
 12526 ;;		Nothing
 12527 ;; This function is called by:
 12528 ;;		_detect_color
 12529 ;;		_amb_light_measure
 12530 ;;		_detect_wall
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           	psect	text58
 12535  003E22                     __ptext58:
 12536                           	callstack 0
 12537  003E22                     ___xxtofl:
 12538                           	callstack 27
 12539                           
 12540                           ; BSR set to: 14
 12541                           ;incstack = 0
 12542                           ;___xxtofl@sign stored from wreg
 12543  003E22  6E09               	movwf	___xxtofl@sign^0,c
 12544  003E24  5009               	movf	___xxtofl@sign^0,w,c
 12545  003E26  B4D8               	btfsc	status,2,c
 12546  003E28  EF18  F01F         	goto	u5091
 12547  003E2C  EF1A  F01F         	goto	u5090
 12548  003E30                     u5091:
 12549  003E30  EF3C  F01F         	goto	l1281
 12550  003E34                     u5090:
 12551  003E34  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12552  003E36  EF21  F01F         	goto	u5100
 12553  003E3A  EF1F  F01F         	goto	u5101
 12554  003E3E                     u5101:
 12555  003E3E  EF3C  F01F         	goto	l1281
 12556  003E42                     u5100:
 12557  003E42  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12558  003E46  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12559  003E4A  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12560  003E4E  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12561  003E52  1E05               	comf	??___xxtofl^0,f,c
 12562  003E54  1E06               	comf	(??___xxtofl+1)^0,f,c
 12563  003E56  1E07               	comf	(??___xxtofl+2)^0,f,c
 12564  003E58  1E08               	comf	(??___xxtofl+3)^0,f,c
 12565  003E5A  2A05               	incf	??___xxtofl^0,f,c
 12566  003E5C  0E00               	movlw	0
 12567  003E5E  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12568  003E60  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12569  003E62  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12570  003E64  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12571  003E68  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12572  003E6C  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12573  003E70  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12574  003E74  EF44  F01F         	goto	l4652
 12575  003E78                     l1281:
 12576  003E78  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12577  003E7C  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12578  003E80  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12579  003E84  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12580  003E88                     l4652:
 12581  003E88  5001               	movf	___xxtofl@val^0,w,c
 12582  003E8A  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12583  003E8C  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12584  003E8E  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12585  003E90  A4D8               	btfss	status,2,c
 12586  003E92  EF4D  F01F         	goto	u5111
 12587  003E96  EF4F  F01F         	goto	u5110
 12588  003E9A                     u5111:
 12589  003E9A  EF59  F01F         	goto	l4658
 12590  003E9E                     u5110:
 12591  003E9E  0E00               	movlw	0
 12592  003EA0  6E01               	movwf	?___xxtofl^0,c
 12593  003EA2  0E00               	movlw	0
 12594  003EA4  6E02               	movwf	(?___xxtofl+1)^0,c
 12595  003EA6  0E00               	movlw	0
 12596  003EA8  6E03               	movwf	(?___xxtofl+2)^0,c
 12597  003EAA  0E00               	movlw	0
 12598  003EAC  6E04               	movwf	(?___xxtofl+3)^0,c
 12599  003EAE  EFEA  F01F         	goto	l1284
 12600  003EB2                     l4658:
 12601  003EB2  0E96               	movlw	150
 12602  003EB4  6E0A               	movwf	___xxtofl@exp^0,c
 12603  003EB6  EF63  F01F         	goto	l4662
 12604  003EBA                     l4660:
 12605  003EBA  2A0A               	incf	___xxtofl@exp^0,f,c
 12606  003EBC  90D8               	bcf	status,0,c
 12607  003EBE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12608  003EC0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12609  003EC2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12610  003EC4  320B               	rrcf	___xxtofl@arg^0,f,c
 12611  003EC6                     l4662:
 12612  003EC6  0E00               	movlw	0
 12613  003EC8  140B               	andwf	___xxtofl@arg^0,w,c
 12614  003ECA  6E05               	movwf	??___xxtofl^0,c
 12615  003ECC  0E00               	movlw	0
 12616  003ECE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12617  003ED0  6E06               	movwf	(??___xxtofl+1)^0,c
 12618  003ED2  0E00               	movlw	0
 12619  003ED4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12620  003ED6  6E07               	movwf	(??___xxtofl+2)^0,c
 12621  003ED8  0EFE               	movlw	254
 12622  003EDA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12623  003EDC  6E08               	movwf	(??___xxtofl+3)^0,c
 12624  003EDE  5005               	movf	??___xxtofl^0,w,c
 12625  003EE0  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12626  003EE2  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12627  003EE4  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12628  003EE6  A4D8               	btfss	status,2,c
 12629  003EE8  EF78  F01F         	goto	u5121
 12630  003EEC  EF7A  F01F         	goto	u5120
 12631  003EF0                     u5121:
 12632  003EF0  EF5D  F01F         	goto	l4660
 12633  003EF4                     u5120:
 12634  003EF4  EF88  F01F         	goto	l1288
 12635  003EF8                     l4664:
 12636  003EF8  2A0A               	incf	___xxtofl@exp^0,f,c
 12637  003EFA  0E01               	movlw	1
 12638  003EFC  260B               	addwf	___xxtofl@arg^0,f,c
 12639  003EFE  0E00               	movlw	0
 12640  003F00  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12641  003F02  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12642  003F04  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12643  003F06  90D8               	bcf	status,0,c
 12644  003F08  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12645  003F0A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12646  003F0C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12647  003F0E  320B               	rrcf	___xxtofl@arg^0,f,c
 12648  003F10                     l1288:
 12649  003F10  0E00               	movlw	0
 12650  003F12  140B               	andwf	___xxtofl@arg^0,w,c
 12651  003F14  6E05               	movwf	??___xxtofl^0,c
 12652  003F16  0E00               	movlw	0
 12653  003F18  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12654  003F1A  6E06               	movwf	(??___xxtofl+1)^0,c
 12655  003F1C  0E00               	movlw	0
 12656  003F1E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12657  003F20  6E07               	movwf	(??___xxtofl+2)^0,c
 12658  003F22  0EFF               	movlw	255
 12659  003F24  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12660  003F26  6E08               	movwf	(??___xxtofl+3)^0,c
 12661  003F28  5005               	movf	??___xxtofl^0,w,c
 12662  003F2A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12663  003F2C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12664  003F2E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12665  003F30  A4D8               	btfss	status,2,c
 12666  003F32  EF9D  F01F         	goto	u5131
 12667  003F36  EF9F  F01F         	goto	u5130
 12668  003F3A                     u5131:
 12669  003F3A  EF7C  F01F         	goto	l4664
 12670  003F3E                     u5130:
 12671  003F3E  EFA7  F01F         	goto	l4672
 12672  003F42                     l4670:
 12673  003F42  060A               	decf	___xxtofl@exp^0,f,c
 12674  003F44  90D8               	bcf	status,0,c
 12675  003F46  360B               	rlcf	___xxtofl@arg^0,f,c
 12676  003F48  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12677  003F4A  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12678  003F4C  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12679  003F4E                     l4672:
 12680  003F4E  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12681  003F50  EFAC  F01F         	goto	u5141
 12682  003F54  EFAE  F01F         	goto	u5140
 12683  003F58                     u5141:
 12684  003F58  EFB6  F01F         	goto	l1295
 12685  003F5C                     u5140:
 12686  003F5C  0E02               	movlw	2
 12687  003F5E  600A               	cpfslt	___xxtofl@exp^0,c
 12688  003F60  EFB4  F01F         	goto	u5151
 12689  003F64  EFB6  F01F         	goto	u5150
 12690  003F68                     u5151:
 12691  003F68  EFA1  F01F         	goto	l4670
 12692  003F6C                     u5150:
 12693  003F6C                     l1295:
 12694  003F6C  B00A               	btfsc	___xxtofl@exp^0,0,c
 12695  003F6E  EFBB  F01F         	goto	u5161
 12696  003F72  EFBD  F01F         	goto	u5160
 12697  003F76                     u5161:
 12698  003F76  EFBE  F01F         	goto	l4678
 12699  003F7A                     u5160:
 12700  003F7A  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12701  003F7C                     l4678:
 12702  003F7C  90D8               	bcf	status,0,c
 12703  003F7E  320A               	rrcf	___xxtofl@exp^0,f,c
 12704  003F80  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12705  003F84  6A06               	clrf	(??___xxtofl+1)^0,c
 12706  003F86  6A07               	clrf	(??___xxtofl+2)^0,c
 12707  003F88  6A08               	clrf	(??___xxtofl+3)^0,c
 12708  003F8A  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12709  003F8E  6A07               	clrf	(??___xxtofl+2)^0,c
 12710  003F90  6A06               	clrf	(??___xxtofl+1)^0,c
 12711  003F92  6A05               	clrf	??___xxtofl^0,c
 12712  003F94  5005               	movf	??___xxtofl^0,w,c
 12713  003F96  120B               	iorwf	___xxtofl@arg^0,f,c
 12714  003F98  5006               	movf	(??___xxtofl+1)^0,w,c
 12715  003F9A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12716  003F9C  5007               	movf	(??___xxtofl+2)^0,w,c
 12717  003F9E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12718  003FA0  5008               	movf	(??___xxtofl+3)^0,w,c
 12719  003FA2  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12720  003FA4  5009               	movf	___xxtofl@sign^0,w,c
 12721  003FA6  B4D8               	btfsc	status,2,c
 12722  003FA8  EFD8  F01F         	goto	u5171
 12723  003FAC  EFDA  F01F         	goto	u5170
 12724  003FB0                     u5171:
 12725  003FB0  EFE2  F01F         	goto	l4688
 12726  003FB4                     u5170:
 12727  003FB4  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12728  003FB6  EFE1  F01F         	goto	u5180
 12729  003FBA  EFDF  F01F         	goto	u5181
 12730  003FBE                     u5181:
 12731  003FBE  EFE2  F01F         	goto	l4688
 12732  003FC2                     u5180:
 12733  003FC2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12734  003FC4                     l4688:
 12735  003FC4  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12736  003FC8  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12737  003FCC  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12738  003FD0  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12739  003FD4                     l1284:
 12740  003FD4  0012               	return		;funcret
 12741  003FD6                     __end_of___xxtofl:
 12742                           	callstack 0
 12743                           
 12744 ;; *************** function ___fldiv *****************
 12745 ;; Defined at:
 12746 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12747 ;; Parameters:    Size  Location     Type
 12748 ;;  b               4   14[COMRAM] unsigned char 
 12749 ;;  a               4   18[COMRAM] unsigned char 
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;  grs             4   33[COMRAM] unsigned long 
 12752 ;;  rem             4   26[COMRAM] unsigned long 
 12753 ;;  new_exp         2   31[COMRAM] short 
 12754 ;;  aexp            1   38[COMRAM] unsigned char 
 12755 ;;  bexp            1   37[COMRAM] unsigned char 
 12756 ;;  sign            1   30[COMRAM] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  4   14[COMRAM] unsigned char 
 12759 ;; Registers used:
 12760 ;;		wreg, status,2, status,0
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/0
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12766 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12767 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12769 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12770 ;;Total ram usage:       25 bytes
 12771 ;; Hardware stack levels used: 1
 12772 ;; Hardware stack levels required when called: 1
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		_detect_color
 12777 ;;		_amb_light_measure
 12778 ;; This function uses a non-reentrant model
 12779 ;;
 12780                           
 12781                           	psect	text59
 12782  002A54                     __ptext59:
 12783                           	callstack 0
 12784  002A54                     ___fldiv:
 12785                           	callstack 27
 12786  002A54  5012               	movf	(___fldiv@b+3)^0,w,c
 12787  002A56  0B80               	andlw	128
 12788  002A58  6E1F               	movwf	___fldiv@sign^0,c
 12789  002A5A  5012               	movf	(___fldiv@b+3)^0,w,c
 12790  002A5C  2412               	addwf	(___fldiv@b+3)^0,w,c
 12791  002A5E  6E26               	movwf	___fldiv@bexp^0,c
 12792  002A60  AE11               	btfss	(___fldiv@b+2)^0,7,c
 12793  002A62  EF35  F015         	goto	u4861
 12794  002A66  EF37  F015         	goto	u4860
 12795  002A6A                     u4861:
 12796  002A6A  EF38  F015         	goto	l4514
 12797  002A6E                     u4860:
 12798  002A6E  8026               	bsf	___fldiv@bexp^0,0,c
 12799  002A70                     l4514:
 12800  002A70  5026               	movf	___fldiv@bexp^0,w,c
 12801  002A72  B4D8               	btfsc	status,2,c
 12802  002A74  EF3E  F015         	goto	u4871
 12803  002A78  EF40  F015         	goto	u4870
 12804  002A7C                     u4871:
 12805  002A7C  EF55  F015         	goto	l4524
 12806  002A80                     u4870:
 12807  002A80  2826               	incf	___fldiv@bexp^0,w,c
 12808  002A82  A4D8               	btfss	status,2,c
 12809  002A84  EF46  F015         	goto	u4881
 12810  002A88  EF48  F015         	goto	u4880
 12811  002A8C                     u4881:
 12812  002A8C  EF50  F015         	goto	l4520
 12813  002A90                     u4880:
 12814  002A90  0E00               	movlw	0
 12815  002A92  6E0F               	movwf	___fldiv@b^0,c
 12816  002A94  0E00               	movlw	0
 12817  002A96  6E10               	movwf	(___fldiv@b+1)^0,c
 12818  002A98  0E00               	movlw	0
 12819  002A9A  6E11               	movwf	(___fldiv@b+2)^0,c
 12820  002A9C  0E00               	movlw	0
 12821  002A9E  6E12               	movwf	(___fldiv@b+3)^0,c
 12822  002AA0                     l4520:
 12823  002AA0  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12824  002AA2  0E00               	movlw	0
 12825  002AA4  6E12               	movwf	(___fldiv@b+3)^0,c
 12826  002AA6  EF5D  F015         	goto	l4526
 12827  002AAA                     l4524:
 12828  002AAA  0E00               	movlw	0
 12829  002AAC  6E0F               	movwf	___fldiv@b^0,c
 12830  002AAE  0E00               	movlw	0
 12831  002AB0  6E10               	movwf	(___fldiv@b+1)^0,c
 12832  002AB2  0E00               	movlw	0
 12833  002AB4  6E11               	movwf	(___fldiv@b+2)^0,c
 12834  002AB6  0E00               	movlw	0
 12835  002AB8  6E12               	movwf	(___fldiv@b+3)^0,c
 12836  002ABA                     l4526:
 12837  002ABA  5016               	movf	(___fldiv@a+3)^0,w,c
 12838  002ABC  0B80               	andlw	128
 12839  002ABE  1A1F               	xorwf	___fldiv@sign^0,f,c
 12840  002AC0  5016               	movf	(___fldiv@a+3)^0,w,c
 12841  002AC2  2416               	addwf	(___fldiv@a+3)^0,w,c
 12842  002AC4  6E27               	movwf	___fldiv@aexp^0,c
 12843  002AC6  AE15               	btfss	(___fldiv@a+2)^0,7,c
 12844  002AC8  EF68  F015         	goto	u4891
 12845  002ACC  EF6A  F015         	goto	u4890
 12846  002AD0                     u4891:
 12847  002AD0  EF6B  F015         	goto	l4534
 12848  002AD4                     u4890:
 12849  002AD4  8027               	bsf	___fldiv@aexp^0,0,c
 12850  002AD6                     l4534:
 12851  002AD6  5027               	movf	___fldiv@aexp^0,w,c
 12852  002AD8  B4D8               	btfsc	status,2,c
 12853  002ADA  EF71  F015         	goto	u4901
 12854  002ADE  EF73  F015         	goto	u4900
 12855  002AE2                     u4901:
 12856  002AE2  EF88  F015         	goto	l4544
 12857  002AE6                     u4900:
 12858  002AE6  2827               	incf	___fldiv@aexp^0,w,c
 12859  002AE8  A4D8               	btfss	status,2,c
 12860  002AEA  EF79  F015         	goto	u4911
 12861  002AEE  EF7B  F015         	goto	u4910
 12862  002AF2                     u4911:
 12863  002AF2  EF83  F015         	goto	l4540
 12864  002AF6                     u4910:
 12865  002AF6  0E00               	movlw	0
 12866  002AF8  6E13               	movwf	___fldiv@a^0,c
 12867  002AFA  0E00               	movlw	0
 12868  002AFC  6E14               	movwf	(___fldiv@a+1)^0,c
 12869  002AFE  0E00               	movlw	0
 12870  002B00  6E15               	movwf	(___fldiv@a+2)^0,c
 12871  002B02  0E00               	movlw	0
 12872  002B04  6E16               	movwf	(___fldiv@a+3)^0,c
 12873  002B06                     l4540:
 12874  002B06  8E15               	bsf	(___fldiv@a+2)^0,7,c
 12875  002B08  0E00               	movlw	0
 12876  002B0A  6E16               	movwf	(___fldiv@a+3)^0,c
 12877  002B0C  EF90  F015         	goto	l4546
 12878  002B10                     l4544:
 12879  002B10  0E00               	movlw	0
 12880  002B12  6E13               	movwf	___fldiv@a^0,c
 12881  002B14  0E00               	movlw	0
 12882  002B16  6E14               	movwf	(___fldiv@a+1)^0,c
 12883  002B18  0E00               	movlw	0
 12884  002B1A  6E15               	movwf	(___fldiv@a+2)^0,c
 12885  002B1C  0E00               	movlw	0
 12886  002B1E  6E16               	movwf	(___fldiv@a+3)^0,c
 12887  002B20                     l4546:
 12888  002B20  5013               	movf	___fldiv@a^0,w,c
 12889  002B22  1014               	iorwf	(___fldiv@a+1)^0,w,c
 12890  002B24  1015               	iorwf	(___fldiv@a+2)^0,w,c
 12891  002B26  1016               	iorwf	(___fldiv@a+3)^0,w,c
 12892  002B28  A4D8               	btfss	status,2,c
 12893  002B2A  EF99  F015         	goto	u4921
 12894  002B2E  EF9B  F015         	goto	u4920
 12895  002B32                     u4921:
 12896  002B32  EFB3  F015         	goto	l4558
 12897  002B36                     u4920:
 12898  002B36  0E00               	movlw	0
 12899  002B38  6E0F               	movwf	___fldiv@b^0,c
 12900  002B3A  0E00               	movlw	0
 12901  002B3C  6E10               	movwf	(___fldiv@b+1)^0,c
 12902  002B3E  0E00               	movlw	0
 12903  002B40  6E11               	movwf	(___fldiv@b+2)^0,c
 12904  002B42  0E00               	movlw	0
 12905  002B44  6E12               	movwf	(___fldiv@b+3)^0,c
 12906  002B46  0E80               	movlw	128
 12907  002B48  1211               	iorwf	(___fldiv@b+2)^0,f,c
 12908  002B4A  0E7F               	movlw	127
 12909  002B4C  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12910  002B4E                     l4552:
 12911  002B4E  501F               	movf	___fldiv@sign^0,w,c
 12912  002B50  1212               	iorwf	(___fldiv@b+3)^0,f,c
 12913  002B52  C00F  F00F         	movff	___fldiv@b,?___fldiv
 12914  002B56  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 12915  002B5A  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 12916  002B5E  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 12917  002B62  EFF6  F016         	goto	l1208
 12918  002B66                     l4558:
 12919  002B66  5026               	movf	___fldiv@bexp^0,w,c
 12920  002B68  A4D8               	btfss	status,2,c
 12921  002B6A  EFB9  F015         	goto	u4931
 12922  002B6E  EFBB  F015         	goto	u4930
 12923  002B72                     u4931:
 12924  002B72  EFC5  F015         	goto	l4566
 12925  002B76                     u4930:
 12926  002B76  0E00               	movlw	0
 12927  002B78  6E0F               	movwf	?___fldiv^0,c
 12928  002B7A  0E00               	movlw	0
 12929  002B7C  6E10               	movwf	(?___fldiv+1)^0,c
 12930  002B7E  0E00               	movlw	0
 12931  002B80  6E11               	movwf	(?___fldiv+2)^0,c
 12932  002B82  0E00               	movlw	0
 12933  002B84  6E12               	movwf	(?___fldiv+3)^0,c
 12934  002B86  EFF6  F016         	goto	l1208
 12935  002B8A                     l4566:
 12936  002B8A  5027               	movf	___fldiv@aexp^0,w,c
 12937  002B8C  C026  F017         	movff	___fldiv@bexp,??___fldiv
 12938  002B90  6A18               	clrf	(??___fldiv+1)^0,c
 12939  002B92  5E17               	subwf	??___fldiv^0,f,c
 12940  002B94  0E00               	movlw	0
 12941  002B96  5A18               	subwfb	(??___fldiv+1)^0,f,c
 12942  002B98  0E7F               	movlw	127
 12943  002B9A  2417               	addwf	??___fldiv^0,w,c
 12944  002B9C  6E20               	movwf	___fldiv@new_exp^0,c
 12945  002B9E  0E00               	movlw	0
 12946  002BA0  2018               	addwfc	(??___fldiv+1)^0,w,c
 12947  002BA2  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 12948  002BA4  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 12949  002BA8  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 12950  002BAC  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 12951  002BB0  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 12952  002BB4  0E00               	movlw	0
 12953  002BB6  6E0F               	movwf	___fldiv@b^0,c
 12954  002BB8  0E00               	movlw	0
 12955  002BBA  6E10               	movwf	(___fldiv@b+1)^0,c
 12956  002BBC  0E00               	movlw	0
 12957  002BBE  6E11               	movwf	(___fldiv@b+2)^0,c
 12958  002BC0  0E00               	movlw	0
 12959  002BC2  6E12               	movwf	(___fldiv@b+3)^0,c
 12960  002BC4  0E00               	movlw	0
 12961  002BC6  6E22               	movwf	___fldiv@grs^0,c
 12962  002BC8  0E00               	movlw	0
 12963  002BCA  6E23               	movwf	(___fldiv@grs+1)^0,c
 12964  002BCC  0E00               	movlw	0
 12965  002BCE  6E24               	movwf	(___fldiv@grs+2)^0,c
 12966  002BD0  0E00               	movlw	0
 12967  002BD2  6E25               	movwf	(___fldiv@grs+3)^0,c
 12968  002BD4  0E00               	movlw	0
 12969  002BD6  6E27               	movwf	___fldiv@aexp^0,c
 12970  002BD8  EF26  F016         	goto	l1210
 12971  002BDC                     l4576:
 12972  002BDC  5027               	movf	___fldiv@aexp^0,w,c
 12973  002BDE  B4D8               	btfsc	status,2,c
 12974  002BE0  EFF4  F015         	goto	u4941
 12975  002BE4  EFF6  F015         	goto	u4940
 12976  002BE8                     u4941:
 12977  002BE8  EF0D  F016         	goto	l4584
 12978  002BEC                     u4940:
 12979  002BEC  90D8               	bcf	status,0,c
 12980  002BEE  361B               	rlcf	___fldiv@rem^0,f,c
 12981  002BF0  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 12982  002BF2  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 12983  002BF4  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 12984  002BF6  90D8               	bcf	status,0,c
 12985  002BF8  360F               	rlcf	___fldiv@b^0,f,c
 12986  002BFA  3610               	rlcf	(___fldiv@b+1)^0,f,c
 12987  002BFC  3611               	rlcf	(___fldiv@b+2)^0,f,c
 12988  002BFE  3612               	rlcf	(___fldiv@b+3)^0,f,c
 12989  002C00  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 12990  002C02  EF05  F016         	goto	u4951
 12991  002C06  EF07  F016         	goto	u4950
 12992  002C0A                     u4951:
 12993  002C0A  EF08  F016         	goto	l1213
 12994  002C0E                     u4950:
 12995  002C0E  800F               	bsf	___fldiv@b^0,0,c
 12996  002C10                     l1213:
 12997  002C10  90D8               	bcf	status,0,c
 12998  002C12  3622               	rlcf	___fldiv@grs^0,f,c
 12999  002C14  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13000  002C16  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13001  002C18  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13002  002C1A                     l4584:
 13003  002C1A  5013               	movf	___fldiv@a^0,w,c
 13004  002C1C  5C1B               	subwf	___fldiv@rem^0,w,c
 13005  002C1E  5014               	movf	(___fldiv@a+1)^0,w,c
 13006  002C20  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 13007  002C22  5015               	movf	(___fldiv@a+2)^0,w,c
 13008  002C24  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 13009  002C26  5016               	movf	(___fldiv@a+3)^0,w,c
 13010  002C28  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 13011  002C2A  A0D8               	btfss	status,0,c
 13012  002C2C  EF1A  F016         	goto	u4961
 13013  002C30  EF1C  F016         	goto	u4960
 13014  002C34                     u4961:
 13015  002C34  EF25  F016         	goto	l4590
 13016  002C38                     u4960:
 13017  002C38  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 13018  002C3A  5013               	movf	___fldiv@a^0,w,c
 13019  002C3C  5E1B               	subwf	___fldiv@rem^0,f,c
 13020  002C3E  5014               	movf	(___fldiv@a+1)^0,w,c
 13021  002C40  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 13022  002C42  5015               	movf	(___fldiv@a+2)^0,w,c
 13023  002C44  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 13024  002C46  5016               	movf	(___fldiv@a+3)^0,w,c
 13025  002C48  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 13026  002C4A                     l4590:
 13027  002C4A  2A27               	incf	___fldiv@aexp^0,f,c
 13028  002C4C                     l1210:
 13029  002C4C  0E19               	movlw	25
 13030  002C4E  6427               	cpfsgt	___fldiv@aexp^0,c
 13031  002C50  EF2C  F016         	goto	u4971
 13032  002C54  EF2E  F016         	goto	u4970
 13033  002C58                     u4971:
 13034  002C58  EFEE  F015         	goto	l4576
 13035  002C5C                     u4970:
 13036  002C5C  501B               	movf	___fldiv@rem^0,w,c
 13037  002C5E  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 13038  002C60  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 13039  002C62  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 13040  002C64  B4D8               	btfsc	status,2,c
 13041  002C66  EF37  F016         	goto	u4981
 13042  002C6A  EF39  F016         	goto	u4980
 13043  002C6E                     u4981:
 13044  002C6E  EF51  F016         	goto	l4602
 13045  002C72                     u4980:
 13046  002C72  8022               	bsf	___fldiv@grs^0,0,c
 13047  002C74  EF51  F016         	goto	l4602
 13048  002C78                     l4596:
 13049  002C78  90D8               	bcf	status,0,c
 13050  002C7A  360F               	rlcf	___fldiv@b^0,f,c
 13051  002C7C  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13052  002C7E  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13053  002C80  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13054  002C82  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13055  002C84  EF46  F016         	goto	u4991
 13056  002C88  EF48  F016         	goto	u4990
 13057  002C8C                     u4991:
 13058  002C8C  EF49  F016         	goto	l1219
 13059  002C90                     u4990:
 13060  002C90  800F               	bsf	___fldiv@b^0,0,c
 13061  002C92                     l1219:
 13062  002C92  90D8               	bcf	status,0,c
 13063  002C94  3622               	rlcf	___fldiv@grs^0,f,c
 13064  002C96  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13065  002C98  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13066  002C9A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13067  002C9C  0620               	decf	___fldiv@new_exp^0,f,c
 13068  002C9E  A0D8               	btfss	status,0,c
 13069  002CA0  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 13070  002CA2                     l4602:
 13071  002CA2  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13072  002CA4  EF56  F016         	goto	u5001
 13073  002CA8  EF58  F016         	goto	u5000
 13074  002CAC                     u5001:
 13075  002CAC  EF3C  F016         	goto	l4596
 13076  002CB0                     u5000:
 13077  002CB0  0E00               	movlw	0
 13078  002CB2  6E27               	movwf	___fldiv@aexp^0,c
 13079  002CB4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13080  002CB6  EF5F  F016         	goto	u5011
 13081  002CBA  EF61  F016         	goto	u5010
 13082  002CBE                     u5011:
 13083  002CBE  EF85  F016         	goto	l1221
 13084  002CC2                     u5010:
 13085  002CC2  0EFF               	movlw	255
 13086  002CC4  1422               	andwf	___fldiv@grs^0,w,c
 13087  002CC6  6E17               	movwf	??___fldiv^0,c
 13088  002CC8  0EFF               	movlw	255
 13089  002CCA  1423               	andwf	(___fldiv@grs+1)^0,w,c
 13090  002CCC  6E18               	movwf	(??___fldiv+1)^0,c
 13091  002CCE  0EFF               	movlw	255
 13092  002CD0  1424               	andwf	(___fldiv@grs+2)^0,w,c
 13093  002CD2  6E19               	movwf	(??___fldiv+2)^0,c
 13094  002CD4  0E7F               	movlw	127
 13095  002CD6  1425               	andwf	(___fldiv@grs+3)^0,w,c
 13096  002CD8  6E1A               	movwf	(??___fldiv+3)^0,c
 13097  002CDA  5017               	movf	??___fldiv^0,w,c
 13098  002CDC  1018               	iorwf	(??___fldiv+1)^0,w,c
 13099  002CDE  1019               	iorwf	(??___fldiv+2)^0,w,c
 13100  002CE0  101A               	iorwf	(??___fldiv+3)^0,w,c
 13101  002CE2  B4D8               	btfsc	status,2,c
 13102  002CE4  EF76  F016         	goto	u5021
 13103  002CE8  EF78  F016         	goto	u5020
 13104  002CEC                     u5021:
 13105  002CEC  EF7C  F016         	goto	l1222
 13106  002CF0                     u5020:
 13107  002CF0                     l4610:
 13108  002CF0  0E01               	movlw	1
 13109  002CF2  6E27               	movwf	___fldiv@aexp^0,c
 13110  002CF4  EF85  F016         	goto	l1221
 13111  002CF8                     l1222:
 13112  002CF8  A00F               	btfss	___fldiv@b^0,0,c
 13113  002CFA  EF81  F016         	goto	u5031
 13114  002CFE  EF83  F016         	goto	u5030
 13115  002D02                     u5031:
 13116  002D02  EF85  F016         	goto	l1221
 13117  002D06                     u5030:
 13118  002D06  EF78  F016         	goto	l4610
 13119  002D0A                     l1221:
 13120  002D0A  5027               	movf	___fldiv@aexp^0,w,c
 13121  002D0C  B4D8               	btfsc	status,2,c
 13122  002D0E  EF8B  F016         	goto	u5041
 13123  002D12  EF8D  F016         	goto	u5040
 13124  002D16                     u5041:
 13125  002D16  EFB1  F016         	goto	l4622
 13126  002D1A                     u5040:
 13127  002D1A  0E01               	movlw	1
 13128  002D1C  260F               	addwf	___fldiv@b^0,f,c
 13129  002D1E  0E00               	movlw	0
 13130  002D20  2210               	addwfc	(___fldiv@b+1)^0,f,c
 13131  002D22  2211               	addwfc	(___fldiv@b+2)^0,f,c
 13132  002D24  2212               	addwfc	(___fldiv@b+3)^0,f,c
 13133  002D26  A012               	btfss	(___fldiv@b+3)^0,0,c
 13134  002D28  EF98  F016         	goto	u5051
 13135  002D2C  EF9A  F016         	goto	u5050
 13136  002D30                     u5051:
 13137  002D30  EFB1  F016         	goto	l4622
 13138  002D34                     u5050:
 13139  002D34  C00F  F017         	movff	___fldiv@b,??___fldiv
 13140  002D38  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13141  002D3C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13142  002D40  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13143  002D44  341A               	rlcf	(??___fldiv+3)^0,w,c
 13144  002D46  321A               	rrcf	(??___fldiv+3)^0,f,c
 13145  002D48  3219               	rrcf	(??___fldiv+2)^0,f,c
 13146  002D4A  3218               	rrcf	(??___fldiv+1)^0,f,c
 13147  002D4C  3217               	rrcf	??___fldiv^0,f,c
 13148  002D4E  C017  F00F         	movff	??___fldiv,___fldiv@b
 13149  002D52  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13150  002D56  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13151  002D5A  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13152  002D5E  4A20               	infsnz	___fldiv@new_exp^0,f,c
 13153  002D60  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 13154  002D62                     l4622:
 13155  002D62  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13156  002D64  EFBC  F016         	goto	u5061
 13157  002D68  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13158  002D6A  E108               	bnz	u5060
 13159  002D6C  2820               	incf	___fldiv@new_exp^0,w,c
 13160  002D6E  A0D8               	btfss	status,0,c
 13161  002D70  EFBC  F016         	goto	u5061
 13162  002D74  EFBE  F016         	goto	u5060
 13163  002D78                     u5061:
 13164  002D78  EFC9  F016         	goto	l4626
 13165  002D7C                     u5060:
 13166  002D7C  0E00               	movlw	0
 13167  002D7E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13168  002D80  6820               	setf	___fldiv@new_exp^0,c
 13169  002D82  0E00               	movlw	0
 13170  002D84  6E0F               	movwf	___fldiv@b^0,c
 13171  002D86  0E00               	movlw	0
 13172  002D88  6E10               	movwf	(___fldiv@b+1)^0,c
 13173  002D8A  0E00               	movlw	0
 13174  002D8C  6E11               	movwf	(___fldiv@b+2)^0,c
 13175  002D8E  0E00               	movlw	0
 13176  002D90  6E12               	movwf	(___fldiv@b+3)^0,c
 13177  002D92                     l4626:
 13178  002D92  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13179  002D94  EFD6  F016         	goto	u5070
 13180  002D98  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13181  002D9A  E106               	bnz	u5071
 13182  002D9C  0420               	decf	___fldiv@new_exp^0,w,c
 13183  002D9E  B0D8               	btfsc	status,0,c
 13184  002DA0  EFD4  F016         	goto	u5071
 13185  002DA4  EFD6  F016         	goto	u5070
 13186  002DA8                     u5071:
 13187  002DA8  EFE4  F016         	goto	l4630
 13188  002DAC                     u5070:
 13189  002DAC  0E00               	movlw	0
 13190  002DAE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13191  002DB0  0E00               	movlw	0
 13192  002DB2  6E20               	movwf	___fldiv@new_exp^0,c
 13193  002DB4  0E00               	movlw	0
 13194  002DB6  6E0F               	movwf	___fldiv@b^0,c
 13195  002DB8  0E00               	movlw	0
 13196  002DBA  6E10               	movwf	(___fldiv@b+1)^0,c
 13197  002DBC  0E00               	movlw	0
 13198  002DBE  6E11               	movwf	(___fldiv@b+2)^0,c
 13199  002DC0  0E00               	movlw	0
 13200  002DC2  6E12               	movwf	(___fldiv@b+3)^0,c
 13201  002DC4  0E00               	movlw	0
 13202  002DC6  6E1F               	movwf	___fldiv@sign^0,c
 13203  002DC8                     l4630:
 13204  002DC8  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13205  002DCC  A026               	btfss	___fldiv@bexp^0,0,c
 13206  002DCE  EFEB  F016         	goto	u5081
 13207  002DD2  EFED  F016         	goto	u5080
 13208  002DD6                     u5081:
 13209  002DD6  EFF0  F016         	goto	l4636
 13210  002DDA                     u5080:
 13211  002DDA  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13212  002DDC  EFF1  F016         	goto	l4638
 13213  002DE0                     l4636:
 13214  002DE0  9E11               	bcf	(___fldiv@b+2)^0,7,c
 13215  002DE2                     l4638:
 13216  002DE2  90D8               	bcf	status,0,c
 13217  002DE4  3026               	rrcf	___fldiv@bexp^0,w,c
 13218  002DE6  6E12               	movwf	(___fldiv@b+3)^0,c
 13219  002DE8  EFA7  F015         	goto	l4552
 13220  002DEC                     l1208:
 13221  002DEC  0012               	return		;funcret
 13222  002DEE                     __end_of___fldiv:
 13223                           	callstack 0
 13224                           
 13225 ;; *************** function _LED_C *****************
 13226 ;; Defined at:
 13227 ;;		line 193 in file "color.c"
 13228 ;; Parameters:    Size  Location     Type
 13229 ;;		None
 13230 ;; Auto vars:     Size  Location     Type
 13231 ;;		None
 13232 ;; Return value:  Size  Location     Type
 13233 ;;                  1    wreg      void 
 13234 ;; Registers used:
 13235 ;;		wreg
 13236 ;; Tracked objects:
 13237 ;;		On entry : 0/0
 13238 ;;		On exit  : 0/0
 13239 ;;		Unchanged: 0/0
 13240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13245 ;;Total ram usage:        2 bytes
 13246 ;; Hardware stack levels used: 1
 13247 ;; Hardware stack levels required when called: 1
 13248 ;; This function calls:
 13249 ;;		Nothing
 13250 ;; This function is called by:
 13251 ;;		_calibrate_white
 13252 ;;		_amb_light_measure
 13253 ;;		_detect_wall
 13254 ;;		_color_data_collection
 13255 ;;		_test_function
 13256 ;; This function uses a non-reentrant model
 13257 ;;
 13258                           
 13259                           	psect	text60
 13260  005CC2                     __ptext60:
 13261                           	callstack 0
 13262  005CC2                     _LED_C:
 13263                           	callstack 27
 13264  005CC2                     
 13265                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13266  005CC2  827F               	bsf	127,1,c	;volatile
 13267                           
 13268                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13269  005CC4  8E7E               	bsf	126,7,c	;volatile
 13270                           
 13271                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13272  005CC6  8879               	bsf	121,4,c	;volatile
 13273  005CC8                     
 13274                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13275  005CC8  0E11               	movlw	17
 13276  005CCA  6E02               	movwf	(??_LED_C+1)^0,c
 13277  005CCC  0E3C               	movlw	60
 13278  005CCE  6E01               	movwf	??_LED_C^0,c
 13279  005CD0  0ECB               	movlw	203
 13280  005CD2                     u6527:
 13281  005CD2  2EE8               	decfsz	wreg,f,c
 13282  005CD4  D7FE               	bra	u6527
 13283  005CD6  2E01               	decfsz	??_LED_C^0,f,c
 13284  005CD8  D7FC               	bra	u6527
 13285  005CDA  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13286  005CDC  D7FA               	bra	u6527
 13287  005CDE  F000               	nop	
 13288  005CE0  0012               	return		;funcret
 13289  005CE2                     __end_of_LED_C:
 13290                           	callstack 0
 13291                           
 13292 ;; *************** function _pin_init *****************
 13293 ;; Defined at:
 13294 ;;		line 13 in file "color.c"
 13295 ;; Parameters:    Size  Location     Type
 13296 ;;		None
 13297 ;; Auto vars:     Size  Location     Type
 13298 ;;		None
 13299 ;; Return value:  Size  Location     Type
 13300 ;;                  1    wreg      void 
 13301 ;; Registers used:
 13302 ;;		None
 13303 ;; Tracked objects:
 13304 ;;		On entry : 0/0
 13305 ;;		On exit  : 0/0
 13306 ;;		Unchanged: 0/0
 13307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13312 ;;Total ram usage:        0 bytes
 13313 ;; Hardware stack levels used: 1
 13314 ;; Hardware stack levels required when called: 1
 13315 ;; This function calls:
 13316 ;;		Nothing
 13317 ;; This function is called by:
 13318 ;;		_main
 13319 ;; This function uses a non-reentrant model
 13320 ;;
 13321                           
 13322                           	psect	text61
 13323  005B04                     __ptext61:
 13324                           	callstack 0
 13325  005B04                     _pin_init:
 13326                           	callstack 29
 13327  005B04  8486               	bsf	134,2,c	;volatile
 13328                           
 13329                           ;color.c: 15:     ANSELFbits.ANSELF2=0;
 13330  005B06  010E               	movlb	14	; () banked
 13331  005B08  95B4               	bcf	180,2,b	;volatile
 13332                           
 13333                           ;color.c: 16:     TRISFbits.TRISF3=1;
 13334  005B0A  8686               	bsf	134,3,c	;volatile
 13335                           
 13336                           ;color.c: 17:     ANSELFbits.ANSELF3=0;
 13337  005B0C  97B4               	bcf	180,3,b	;volatile
 13338                           
 13339                           ;color.c: 19:     TRISGbits.TRISG1 = 0;
 13340  005B0E  9287               	bcf	135,1,c	;volatile
 13341                           
 13342                           ;color.c: 20:     TRISFbits.TRISF7 = 0;
 13343  005B10  9E86               	bcf	134,7,c	;volatile
 13344                           
 13345                           ;color.c: 21:     TRISAbits.TRISA4 = 0;
 13346  005B12  9881               	bcf	129,4,c	;volatile
 13347                           
 13348                           ;color.c: 23:     LATGbits.LATG1 = 1;
 13349  005B14  827F               	bsf	127,1,c	;volatile
 13350                           
 13351                           ;color.c: 24:     LATFbits.LATF7 = 1;
 13352  005B16  8E7E               	bsf	126,7,c	;volatile
 13353                           
 13354                           ;color.c: 25:     LATAbits.LATA4 = 1;
 13355  005B18  8879               	bsf	121,4,c	;volatile
 13356                           
 13357                           ;color.c: 28:     TRISDbits.TRISD7 = 0;
 13358  005B1A  9E84               	bcf	132,7,c	;volatile
 13359                           
 13360                           ;color.c: 29:     LATDbits.LATD7 = 0;
 13361  005B1C  9E7C               	bcf	124,7,c	;volatile
 13362                           
 13363                           ;color.c: 30:     TRISHbits.TRISH3 = 0;
 13364  005B1E  9688               	bcf	136,3,c	;volatile
 13365                           
 13366                           ;color.c: 31:     LATHbits.LATH3 = 0;
 13367  005B20  9680               	bcf	128,3,c	;volatile
 13368                           
 13369                           ;color.c: 34:     TRISHbits.TRISH1=0;
 13370  005B22  9288               	bcf	136,1,c	;volatile
 13371                           
 13372                           ;color.c: 35:     TRISDbits.TRISD4=0;
 13373  005B24  9884               	bcf	132,4,c	;volatile
 13374                           
 13375                           ;color.c: 36:     TRISDbits.TRISD3=0;
 13376  005B26  9684               	bcf	132,3,c	;volatile
 13377                           
 13378                           ;color.c: 37:     TRISFbits.TRISF0=0;
 13379  005B28  9086               	bcf	134,0,c	;volatile
 13380                           
 13381                           ;color.c: 38:     TRISHbits.TRISH0=0;
 13382  005B2A  9088               	bcf	136,0,c	;volatile
 13383                           
 13384                           ;color.c: 40:     LATHbits.LATH1 = 0;
 13385  005B2C  9280               	bcf	128,1,c	;volatile
 13386                           
 13387                           ;color.c: 41:     LATDbits.LATD4 = 0;
 13388  005B2E  987C               	bcf	124,4,c	;volatile
 13389                           
 13390                           ;color.c: 42:     LATDbits.LATD3 = 0;
 13391  005B30  967C               	bcf	124,3,c	;volatile
 13392                           
 13393                           ;color.c: 43:     LATFbits.LATF0 = 0;
 13394  005B32  907E               	bcf	126,0,c	;volatile
 13395                           
 13396                           ;color.c: 44:     LATHbits.LATH0 = 0;
 13397  005B34  9080               	bcf	128,0,c	;volatile
 13398  005B36                     
 13399                           ; BSR set to: 14
 13400  005B36  0012               	return		;funcret
 13401  005B38                     __end_of_pin_init:
 13402                           	callstack 0
 13403                           
 13404 ;; *************** function _initUSART4 *****************
 13405 ;; Defined at:
 13406 ;;		line 4 in file "serial.c"
 13407 ;; Parameters:    Size  Location     Type
 13408 ;;		None
 13409 ;; Auto vars:     Size  Location     Type
 13410 ;;		None
 13411 ;; Return value:  Size  Location     Type
 13412 ;;                  1    wreg      void 
 13413 ;; Registers used:
 13414 ;;		wreg, status,2
 13415 ;; Tracked objects:
 13416 ;;		On entry : 0/0
 13417 ;;		On exit  : 0/0
 13418 ;;		Unchanged: 0/0
 13419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13424 ;;Total ram usage:        0 bytes
 13425 ;; Hardware stack levels used: 1
 13426 ;; Hardware stack levels required when called: 1
 13427 ;; This function calls:
 13428 ;;		Nothing
 13429 ;; This function is called by:
 13430 ;;		_main
 13431 ;; This function uses a non-reentrant model
 13432 ;;
 13433                           
 13434                           	psect	text62
 13435  005D02                     __ptext62:
 13436                           	callstack 0
 13437  005D02                     _initUSART4:
 13438                           	callstack 29
 13439  005D02                     
 13440                           ;serial.c: 8:     RC0PPS = 0x12;
 13441  005D02  0E12               	movlw	18
 13442  005D04  010E               	movlb	14	; () banked
 13443  005D06  6F62               	movwf	98,b	;volatile
 13444                           
 13445                           ;serial.c: 9:     RX4PPS = 0x11;
 13446  005D08  0E11               	movlw	17
 13447  005D0A  6F15               	movwf	21,b	;volatile
 13448  005D0C                     
 13449                           ; BSR set to: 14
 13450                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13451  005D0C  97E9               	bcf	233,3,b	;volatile
 13452  005D0E                     
 13453                           ; BSR set to: 14
 13454                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13455  005D0E  95E8               	bcf	232,2,b	;volatile
 13456                           
 13457                           ;serial.c: 13:     SP4BRGL = 51;
 13458  005D10  0E33               	movlw	51
 13459  005D12  6FE5               	movwf	229,b	;volatile
 13460                           
 13461                           ;serial.c: 15:     SP4BRGH = 0;
 13462  005D14  0E00               	movlw	0
 13463  005D16  6FE6               	movwf	230,b	;volatile
 13464  005D18                     
 13465                           ; BSR set to: 14
 13466                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13467  005D18  89E7               	bsf	231,4,b	;volatile
 13468  005D1A                     
 13469                           ; BSR set to: 14
 13470                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13471  005D1A  8BE8               	bsf	232,5,b	;volatile
 13472  005D1C                     
 13473                           ; BSR set to: 14
 13474                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13475  005D1C  8FE7               	bsf	231,7,b	;volatile
 13476  005D1E                     
 13477                           ; BSR set to: 14
 13478  005D1E  0012               	return		;funcret
 13479  005D20                     __end_of_initUSART4:
 13480                           	callstack 0
 13481                           
 13482 ;; *************** function _initDCmotors_parameter *****************
 13483 ;; Defined at:
 13484 ;;		line 37 in file "dc_motor.c"
 13485 ;; Parameters:    Size  Location     Type
 13486 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13487 ;;		 -> main@motorL(9), 
 13488 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13489 ;;		 -> main@motorR(9), 
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13501 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13504 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13505 ;;Total ram usage:        4 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; Hardware stack levels required when called: 1
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_main
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text63
 13516  004FA6                     __ptext63:
 13517                           	callstack 0
 13518  004FA6                     _initDCmotors_parameter:
 13519                           	callstack 29
 13520  004FA6                     
 13521                           ;dc_motor.c: 39:     motorL->power = 0;
 13522  004FA6  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13523  004FAA  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13524  004FAE  0E00               	movlw	0
 13525  004FB0  6EDF               	movwf	indf2,c
 13526  004FB2                     
 13527                           ;dc_motor.c: 40:     motorL->direction = 1;
 13528  004FB2  EE20 F001          	lfsr	2,1
 13529  004FB6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13530  004FB8  26D9               	addwf	fsr2l,f,c
 13531  004FBA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13532  004FBC  22DA               	addwfc	fsr2h,f,c
 13533  004FBE  0E01               	movlw	1
 13534  004FC0  6EDF               	movwf	indf2,c
 13535  004FC2                     
 13536                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13537  004FC2  EE20 F002          	lfsr	2,2
 13538  004FC6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13539  004FC8  26D9               	addwf	fsr2l,f,c
 13540  004FCA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13541  004FCC  22DA               	addwfc	fsr2h,f,c
 13542  004FCE  0EA3               	movlw	163
 13543  004FD0  6EDE               	movwf	postinc2,c
 13544  004FD2  0E0F               	movlw	15
 13545  004FD4  6EDD               	movwf	postdec2,c
 13546  004FD6                     
 13547                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13548  004FD6  EE20 F004          	lfsr	2,4
 13549  004FDA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13550  004FDC  26D9               	addwf	fsr2l,f,c
 13551  004FDE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13552  004FE0  22DA               	addwfc	fsr2h,f,c
 13553  004FE2  0E7D               	movlw	125
 13554  004FE4  6EDE               	movwf	postinc2,c
 13555  004FE6  0E0F               	movlw	15
 13556  004FE8  6EDD               	movwf	postdec2,c
 13557  004FEA                     
 13558                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
 13559  004FEA  EE20 F006          	lfsr	2,6
 13560  004FEE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13561  004FF0  26D9               	addwf	fsr2l,f,c
 13562  004FF2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13563  004FF4  22DA               	addwfc	fsr2h,f,c
 13564  004FF6  0E04               	movlw	4
 13565  004FF8  6EDF               	movwf	indf2,c
 13566  004FFA                     
 13567                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
 13568  004FFA  EE20 F007          	lfsr	2,7
 13569  004FFE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13570  005000  26D9               	addwf	fsr2l,f,c
 13571  005002  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13572  005004  22DA               	addwfc	fsr2h,f,c
 13573  005006  0EC7               	movlw	199
 13574  005008  6EDE               	movwf	postinc2,c
 13575  00500A  0E00               	movlw	0
 13576  00500C  6EDD               	movwf	postdec2,c
 13577  00500E                     
 13578                           ;dc_motor.c: 47:     motorR->power = 0;
 13579  00500E  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13580  005012  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13581  005016  0E00               	movlw	0
 13582  005018  6EDF               	movwf	indf2,c
 13583                           
 13584                           ;dc_motor.c: 48:     motorR->direction = 1;
 13585  00501A  EE20 F001          	lfsr	2,1
 13586  00501E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13587  005020  26D9               	addwf	fsr2l,f,c
 13588  005022  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13589  005024  22DA               	addwfc	fsr2h,f,c
 13590  005026  0E01               	movlw	1
 13591  005028  6EDF               	movwf	indf2,c
 13592                           
 13593                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13594  00502A  EE20 F002          	lfsr	2,2
 13595  00502E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13596  005030  26D9               	addwf	fsr2l,f,c
 13597  005032  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13598  005034  22DA               	addwfc	fsr2h,f,c
 13599  005036  0EA0               	movlw	160
 13600  005038  6EDE               	movwf	postinc2,c
 13601  00503A  0E0F               	movlw	15
 13602  00503C  6EDD               	movwf	postdec2,c
 13603                           
 13604                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13605  00503E  EE20 F004          	lfsr	2,4
 13606  005042  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13607  005044  26D9               	addwf	fsr2l,f,c
 13608  005046  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13609  005048  22DA               	addwfc	fsr2h,f,c
 13610  00504A  0E7F               	movlw	127
 13611  00504C  6EDE               	movwf	postinc2,c
 13612  00504E  0E0F               	movlw	15
 13613  005050  6EDD               	movwf	postdec2,c
 13614                           
 13615                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
 13616  005052  EE20 F006          	lfsr	2,6
 13617  005056  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13618  005058  26D9               	addwf	fsr2l,f,c
 13619  00505A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13620  00505C  22DA               	addwfc	fsr2h,f,c
 13621  00505E  0E06               	movlw	6
 13622  005060  6EDF               	movwf	indf2,c
 13623                           
 13624                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
 13625  005062  EE20 F007          	lfsr	2,7
 13626  005066  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13627  005068  26D9               	addwf	fsr2l,f,c
 13628  00506A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13629  00506C  22DA               	addwfc	fsr2h,f,c
 13630  00506E  0EC7               	movlw	199
 13631  005070  6EDE               	movwf	postinc2,c
 13632  005072  0E00               	movlw	0
 13633  005074  6EDD               	movwf	postdec2,c
 13634  005076  0012               	return		;funcret
 13635  005078                     __end_of_initDCmotors_parameter:
 13636                           	callstack 0
 13637                           
 13638 ;; *************** function _initDCmotorsPWM *****************
 13639 ;; Defined at:
 13640 ;;		line 7 in file "dc_motor.c"
 13641 ;; Parameters:    Size  Location     Type
 13642 ;;  PWMperiod       2    0[COMRAM] int 
 13643 ;; Auto vars:     Size  Location     Type
 13644 ;;		None
 13645 ;; Return value:  Size  Location     Type
 13646 ;;                  1    wreg      void 
 13647 ;; Registers used:
 13648 ;;		wreg, status,2
 13649 ;; Tracked objects:
 13650 ;;		On entry : 0/0
 13651 ;;		On exit  : 0/0
 13652 ;;		Unchanged: 0/0
 13653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13657 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13658 ;;Total ram usage:        2 bytes
 13659 ;; Hardware stack levels used: 1
 13660 ;; Hardware stack levels required when called: 1
 13661 ;; This function calls:
 13662 ;;		Nothing
 13663 ;; This function is called by:
 13664 ;;		_main
 13665 ;; This function uses a non-reentrant model
 13666 ;;
 13667                           
 13668                           	psect	text64
 13669  005960                     __ptext64:
 13670                           	callstack 0
 13671  005960                     _initDCmotorsPWM:
 13672                           	callstack 29
 13673  005960                     
 13674                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
 13675  005960  9485               	bcf	133,2,c	;volatile
 13676                           
 13677                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
 13678  005962  9E83               	bcf	131,7,c	;volatile
 13679                           
 13680                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
 13681  005964  9C87               	bcf	135,6,c	;volatile
 13682                           
 13683                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
 13684  005966  9885               	bcf	133,4,c	;volatile
 13685                           
 13686                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
 13687  005968  947D               	bcf	125,2,c	;volatile
 13688                           
 13689                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
 13690  00596A  9E7B               	bcf	123,7,c	;volatile
 13691                           
 13692                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
 13693  00596C  9C7F               	bcf	127,6,c	;volatile
 13694                           
 13695                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
 13696  00596E  987D               	bcf	125,4,c	;volatile
 13697  005970                     
 13698                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
 13699  005970  50BD               	movf	189,w,c	;volatile
 13700  005972  0B8F               	andlw	-113
 13701  005974  0930               	iorlw	48
 13702  005976  6EBD               	movwf	189,c	;volatile
 13703                           
 13704                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
 13705  005978  0EE0               	movlw	-32
 13706  00597A  16BE               	andwf	190,f,c	;volatile
 13707                           
 13708                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
 13709  00597C  50BF               	movf	191,w,c	;volatile
 13710  00597E  0BF0               	andlw	-16
 13711  005980  0901               	iorlw	1
 13712  005982  6EBF               	movwf	191,c	;volatile
 13713                           
 13714                           ;dc_motor.c: 25:     T2PR=200-1;
 13715  005984  0EC7               	movlw	199
 13716  005986  6EBC               	movwf	188,c	;volatile
 13717  005988                     
 13718                           ;dc_motor.c: 26:     T2CONbits.ON=1;
 13719  005988  8EBD               	bsf	189,7,c	;volatile
 13720                           
 13721                           ;dc_motor.c: 28:     RE2PPS=0x0A;
 13722  00598A  0E0A               	movlw	10
 13723  00598C  010E               	movlb	14	; () banked
 13724  00598E  6F74               	movwf	116,b	;volatile
 13725                           
 13726                           ;dc_motor.c: 29:     RC7PPS=0x0B;
 13727  005990  0E0B               	movlw	11
 13728  005992  6F69               	movwf	105,b	;volatile
 13729                           
 13730                           ;dc_motor.c: 31:     PWM6DCH=0;
 13731  005994  0E00               	movlw	0
 13732  005996  6EA3               	movwf	163,c	;volatile
 13733                           
 13734                           ;dc_motor.c: 32:     PWM7DCH=0;
 13735  005998  0E00               	movlw	0
 13736  00599A  6EA0               	movwf	160,c	;volatile
 13737  00599C                     
 13738                           ; BSR set to: 14
 13739                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
 13740  00599C  8EA4               	bsf	164,7,c	;volatile
 13741  00599E                     
 13742                           ; BSR set to: 14
 13743                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
 13744  00599E  8EA1               	bsf	161,7,c	;volatile
 13745  0059A0                     
 13746                           ; BSR set to: 14
 13747  0059A0  0012               	return		;funcret
 13748  0059A2                     __end_of_initDCmotorsPWM:
 13749                           	callstack 0
 13750                           
 13751 ;; *************** function _color_click_init *****************
 13752 ;; Defined at:
 13753 ;;		line 87 in file "color.c"
 13754 ;; Parameters:    Size  Location     Type
 13755 ;;		None
 13756 ;; Auto vars:     Size  Location     Type
 13757 ;;		None
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  1    wreg      void 
 13760 ;; Registers used:
 13761 ;;		wreg, status,2, status,0, cstack
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13771 ;;Total ram usage:        1 bytes
 13772 ;; Hardware stack levels used: 1
 13773 ;; Hardware stack levels required when called: 4
 13774 ;; This function calls:
 13775 ;;		_I2C_2_Master_Init
 13776 ;;		_color_writetoaddr
 13777 ;; This function is called by:
 13778 ;;		_main
 13779 ;; This function uses a non-reentrant model
 13780 ;;
 13781                           
 13782                           	psect	text65
 13783  005B38                     __ptext65:
 13784                           	callstack 0
 13785  005B38                     _color_click_init:
 13786                           	callstack 26
 13787  005B38                     
 13788                           ;color.c: 90:     I2C_2_Master_Init();
 13789  005B38  ECE5  F02D         	call	_I2C_2_Master_Init	;wreg free
 13790  005B3C                     
 13791                           ;color.c: 93:  color_writetoaddr(0x00, 0x01);
 13792  005B3C  0E01               	movlw	1
 13793  005B3E  6E03               	movwf	color_writetoaddr@value^0,c
 13794  005B40  0E00               	movlw	0
 13795  005B42  EC71  F02E         	call	_color_writetoaddr
 13796  005B46                     
 13797                           ;color.c: 94:     _delay((unsigned long)((3)*(64000000/4000.0)));
 13798  005B46  0E3F               	movlw	63
 13799  005B48  6E05               	movwf	??_color_click_init^0,c
 13800  005B4A  0E55               	movlw	85
 13801  005B4C                     u6537:
 13802  005B4C  2EE8               	decfsz	wreg,f,c
 13803  005B4E  D7FE               	bra	u6537
 13804  005B50  2E05               	decfsz	??_color_click_init^0,f,c
 13805  005B52  D7FC               	bra	u6537
 13806  005B54  F000               	nop	
 13807  005B56                     
 13808                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 13809  005B56  0E03               	movlw	3
 13810  005B58  6E03               	movwf	color_writetoaddr@value^0,c
 13811  005B5A  0E00               	movlw	0
 13812  005B5C  EC71  F02E         	call	_color_writetoaddr
 13813  005B60                     
 13814                           ;color.c: 100:  color_writetoaddr(0x01, 0xD5);
 13815  005B60  0ED5               	movlw	213
 13816  005B62  6E03               	movwf	color_writetoaddr@value^0,c
 13817  005B64  0E01               	movlw	1
 13818  005B66  EC71  F02E         	call	_color_writetoaddr
 13819  005B6A  0012               	return		;funcret
 13820  005B6C                     __end_of_color_click_init:
 13821                           	callstack 0
 13822                           
 13823 ;; *************** function _color_writetoaddr *****************
 13824 ;; Defined at:
 13825 ;;		line 103 in file "color.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;  address         1    wreg     unsigned char 
 13828 ;;  value           1    2[COMRAM] unsigned char 
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;  address         1    3[COMRAM] unsigned char 
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      void 
 13833 ;; Registers used:
 13834 ;;		wreg, status,2, status,0, cstack
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13840 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13841 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13844 ;;Total ram usage:        2 bytes
 13845 ;; Hardware stack levels used: 1
 13846 ;; Hardware stack levels required when called: 3
 13847 ;; This function calls:
 13848 ;;		_I2C_2_Master_Start
 13849 ;;		_I2C_2_Master_Stop
 13850 ;;		_I2C_2_Master_Write
 13851 ;; This function is called by:
 13852 ;;		_color_click_init
 13853 ;; This function uses a non-reentrant model
 13854 ;;
 13855                           
 13856                           	psect	text66
 13857  005CE2                     __ptext66:
 13858                           	callstack 0
 13859  005CE2                     _color_writetoaddr:
 13860                           	callstack 26
 13861                           
 13862                           ;incstack = 0
 13863                           ;color_writetoaddr@address stored from wreg
 13864  005CE2  6E04               	movwf	color_writetoaddr@address^0,c
 13865  005CE4                     
 13866                           ;color.c: 104:     I2C_2_Master_Start();
 13867  005CE4  ECC1  F02E         	call	_I2C_2_Master_Start	;wreg free
 13868                           
 13869                           ;color.c: 105:     I2C_2_Master_Write(0x52 | 0x00);
 13870  005CE8  0E52               	movlw	82
 13871  005CEA  ECAB  F02E         	call	_I2C_2_Master_Write
 13872                           
 13873                           ;color.c: 106:     I2C_2_Master_Write(0x80 | address);
 13874  005CEE  5004               	movf	color_writetoaddr@address^0,w,c
 13875  005CF0  0980               	iorlw	128
 13876  005CF2  ECAB  F02E         	call	_I2C_2_Master_Write
 13877                           
 13878                           ;color.c: 107:     I2C_2_Master_Write(value);
 13879  005CF6  5003               	movf	color_writetoaddr@value^0,w,c
 13880  005CF8  ECAB  F02E         	call	_I2C_2_Master_Write
 13881                           
 13882                           ;color.c: 108:     I2C_2_Master_Stop();
 13883  005CFC  ECBC  F02E         	call	_I2C_2_Master_Stop	;wreg free
 13884  005D00  0012               	return		;funcret
 13885  005D02                     __end_of_color_writetoaddr:
 13886                           	callstack 0
 13887                           
 13888 ;; *************** function _I2C_2_Master_Write *****************
 13889 ;; Defined at:
 13890 ;;		line 45 in file "i2c.c"
 13891 ;; Parameters:    Size  Location     Type
 13892 ;;  data_byte       1    wreg     unsigned char 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  data_byte       1    1[COMRAM] unsigned char 
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13908 ;;Total ram usage:        1 bytes
 13909 ;; Hardware stack levels used: 1
 13910 ;; Hardware stack levels required when called: 2
 13911 ;; This function calls:
 13912 ;;		_I2C_2_Master_Idle
 13913 ;; This function is called by:
 13914 ;;		_color_writetoaddr
 13915 ;;		_color_read_Red
 13916 ;;		_color_read_Blue
 13917 ;;		_color_read_Green
 13918 ;;		_color_read_Clear
 13919 ;; This function uses a non-reentrant model
 13920 ;;
 13921                           
 13922                           	psect	text67
 13923  005D56                     __ptext67:
 13924                           	callstack 0
 13925  005D56                     _I2C_2_Master_Write:
 13926                           	callstack 24
 13927                           
 13928                           ;incstack = 0
 13929                           ;I2C_2_Master_Write@data_byte stored from wreg
 13930  005D56  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13931  005D58                     
 13932                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 13933  005D58  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13934  005D5C                     
 13935                           ;i2c.c: 48:   SSP2BUF = data_byte;
 13936  005D5C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13937  005D60  0012               	return		;funcret
 13938  005D62                     __end_of_I2C_2_Master_Write:
 13939                           	callstack 0
 13940                           
 13941 ;; *************** function _I2C_2_Master_Stop *****************
 13942 ;; Defined at:
 13943 ;;		line 39 in file "i2c.c"
 13944 ;; Parameters:    Size  Location     Type
 13945 ;;		None
 13946 ;; Auto vars:     Size  Location     Type
 13947 ;;		None
 13948 ;; Return value:  Size  Location     Type
 13949 ;;                  1    wreg      void 
 13950 ;; Registers used:
 13951 ;;		wreg, status,2, status,0, cstack
 13952 ;; Tracked objects:
 13953 ;;		On entry : 0/0
 13954 ;;		On exit  : 0/0
 13955 ;;		Unchanged: 0/0
 13956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13961 ;;Total ram usage:        0 bytes
 13962 ;; Hardware stack levels used: 1
 13963 ;; Hardware stack levels required when called: 2
 13964 ;; This function calls:
 13965 ;;		_I2C_2_Master_Idle
 13966 ;; This function is called by:
 13967 ;;		_color_writetoaddr
 13968 ;;		_color_read_Red
 13969 ;;		_color_read_Blue
 13970 ;;		_color_read_Green
 13971 ;;		_color_read_Clear
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text68
 13976  005D78                     __ptext68:
 13977                           	callstack 0
 13978  005D78                     _I2C_2_Master_Stop:
 13979                           	callstack 24
 13980  005D78                     
 13981                           ;i2c.c: 41:   I2C_2_Master_Idle();
 13982  005D78  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13983  005D7C                     
 13984                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 13985  005D7C  010E               	movlb	14	; () banked
 13986  005D7E  85DA               	bsf	218,2,b	;volatile
 13987  005D80                     
 13988                           ; BSR set to: 14
 13989  005D80  0012               	return		;funcret
 13990  005D82                     __end_of_I2C_2_Master_Stop:
 13991                           	callstack 0
 13992                           
 13993 ;; *************** function _I2C_2_Master_Start *****************
 13994 ;; Defined at:
 13995 ;;		line 27 in file "i2c.c"
 13996 ;; Parameters:    Size  Location     Type
 13997 ;;		None
 13998 ;; Auto vars:     Size  Location     Type
 13999 ;;		None
 14000 ;; Return value:  Size  Location     Type
 14001 ;;                  1    wreg      void 
 14002 ;; Registers used:
 14003 ;;		wreg, status,2, status,0, cstack
 14004 ;; Tracked objects:
 14005 ;;		On entry : 0/0
 14006 ;;		On exit  : 0/0
 14007 ;;		Unchanged: 0/0
 14008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14013 ;;Total ram usage:        0 bytes
 14014 ;; Hardware stack levels used: 1
 14015 ;; Hardware stack levels required when called: 2
 14016 ;; This function calls:
 14017 ;;		_I2C_2_Master_Idle
 14018 ;; This function is called by:
 14019 ;;		_color_writetoaddr
 14020 ;;		_color_read_Red
 14021 ;;		_color_read_Blue
 14022 ;;		_color_read_Green
 14023 ;;		_color_read_Clear
 14024 ;; This function uses a non-reentrant model
 14025 ;;
 14026                           
 14027                           	psect	text69
 14028  005D82                     __ptext69:
 14029                           	callstack 0
 14030  005D82                     _I2C_2_Master_Start:
 14031                           	callstack 24
 14032  005D82                     
 14033                           ;i2c.c: 29:   I2C_2_Master_Idle();
 14034  005D82  ECFA  F02D         	call	_I2C_2_Master_Idle	;wreg free
 14035  005D86                     
 14036                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14037  005D86  010E               	movlb	14	; () banked
 14038  005D88  81DA               	bsf	218,0,b	;volatile
 14039  005D8A                     
 14040                           ; BSR set to: 14
 14041  005D8A  0012               	return		;funcret
 14042  005D8C                     __end_of_I2C_2_Master_Start:
 14043                           	callstack 0
 14044                           
 14045 ;; *************** function _I2C_2_Master_Idle *****************
 14046 ;; Defined at:
 14047 ;;		line 22 in file "i2c.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;		None
 14050 ;; Auto vars:     Size  Location     Type
 14051 ;;		None
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  1    wreg      void 
 14054 ;; Registers used:
 14055 ;;		wreg, status,2, status,0
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14065 ;;Total ram usage:        1 bytes
 14066 ;; Hardware stack levels used: 1
 14067 ;; Hardware stack levels required when called: 1
 14068 ;; This function calls:
 14069 ;;		Nothing
 14070 ;; This function is called by:
 14071 ;;		_I2C_2_Master_Start
 14072 ;;		_I2C_2_Master_RepStart
 14073 ;;		_I2C_2_Master_Stop
 14074 ;;		_I2C_2_Master_Write
 14075 ;;		_I2C_2_Master_Read
 14076 ;; This function uses a non-reentrant model
 14077 ;;
 14078                           
 14079                           	psect	text70
 14080  005BF4                     __ptext70:
 14081                           	callstack 0
 14082  005BF4                     _I2C_2_Master_Idle:
 14083                           	callstack 24
 14084  005BF4                     l179:
 14085  005BF4  010E               	movlb	14	; () banked
 14086  005BF6  B5D8               	btfsc	216,2,b	;volatile
 14087  005BF8  EF00  F02E         	goto	u3411
 14088  005BFC  EF02  F02E         	goto	u3410
 14089  005C00                     u3411:
 14090  005C00  EFFA  F02D         	goto	l179
 14091  005C04                     u3410:
 14092  005C04                     
 14093                           ; BSR set to: 14
 14094  005C04  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14095  005C08  0E1F               	movlw	31
 14096  005C0A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14097  005C0C  A4D8               	btfss	status,2,c
 14098  005C0E  EF0B  F02E         	goto	u3421
 14099  005C12  EF0D  F02E         	goto	u3420
 14100  005C16                     u3421:
 14101  005C16  EFFA  F02D         	goto	l179
 14102  005C1A                     u3420:
 14103  005C1A                     
 14104                           ; BSR set to: 14
 14105  005C1A  0012               	return		;funcret
 14106  005C1C                     __end_of_I2C_2_Master_Idle:
 14107                           	callstack 0
 14108                           
 14109 ;; *************** function _I2C_2_Master_Init *****************
 14110 ;; Defined at:
 14111 ;;		line 4 in file "i2c.c"
 14112 ;; Parameters:    Size  Location     Type
 14113 ;;		None
 14114 ;; Auto vars:     Size  Location     Type
 14115 ;;		None
 14116 ;; Return value:  Size  Location     Type
 14117 ;;                  1    wreg      void 
 14118 ;; Registers used:
 14119 ;;		wreg, status,2
 14120 ;; Tracked objects:
 14121 ;;		On entry : 0/0
 14122 ;;		On exit  : 0/0
 14123 ;;		Unchanged: 0/0
 14124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14129 ;;Total ram usage:        0 bytes
 14130 ;; Hardware stack levels used: 1
 14131 ;; Hardware stack levels required when called: 1
 14132 ;; This function calls:
 14133 ;;		Nothing
 14134 ;; This function is called by:
 14135 ;;		_color_click_init
 14136 ;; This function uses a non-reentrant model
 14137 ;;
 14138                           
 14139                           	psect	text71
 14140  005BCA                     __ptext71:
 14141                           	callstack 0
 14142  005BCA                     _I2C_2_Master_Init:
 14143                           	callstack 28
 14144  005BCA                     
 14145                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14146  005BCA  010E               	movlb	14	; () banked
 14147  005BCC  51D9               	movf	217,w,b	;volatile
 14148  005BCE  0BF0               	andlw	-16
 14149  005BD0  0908               	iorlw	8
 14150  005BD2  6FD9               	movwf	217,b	;volatile
 14151  005BD4                     
 14152                           ; BSR set to: 14
 14153                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14154  005BD4  8BD9               	bsf	217,5,b	;volatile
 14155                           
 14156                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14157  005BD6  0E9F               	movlw	159
 14158  005BD8  6FD6               	movwf	214,b	;volatile
 14159  005BDA                     
 14160                           ; BSR set to: 14
 14161                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14162  005BDA  8A84               	bsf	132,5,c	;volatile
 14163  005BDC                     
 14164                           ; BSR set to: 14
 14165                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14166  005BDC  8C84               	bsf	132,6,c	;volatile
 14167  005BDE                     
 14168                           ; BSR set to: 14
 14169                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14170  005BDE  9BA7               	bcf	167,5,b	;volatile
 14171  005BE0                     
 14172                           ; BSR set to: 14
 14173                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14174  005BE0  9DA7               	bcf	167,6,b	;volatile
 14175                           
 14176                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14177  005BE2  0E1D               	movlw	29
 14178  005BE4  6F1D               	movwf	29,b	;volatile
 14179                           
 14180                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14181  005BE6  0E1E               	movlw	30
 14182  005BE8  6F1C               	movwf	28,b	;volatile
 14183                           
 14184                           ;i2c.c: 18:   RD5PPS=0x1C;
 14185  005BEA  0E1C               	movlw	28
 14186  005BEC  6F6F               	movwf	111,b	;volatile
 14187                           
 14188                           ;i2c.c: 19:   RD6PPS=0x1B;
 14189  005BEE  0E1B               	movlw	27
 14190  005BF0  6F70               	movwf	112,b	;volatile
 14191  005BF2                     
 14192                           ; BSR set to: 14
 14193  005BF2  0012               	return		;funcret
 14194  005BF4                     __end_of_I2C_2_Master_Init:
 14195                           	callstack 0
 14196                           
 14197 ;; *************** function _Timer0_init *****************
 14198 ;; Defined at:
 14199 ;;		line 7 in file "timers.c"
 14200 ;; Parameters:    Size  Location     Type
 14201 ;;		None
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;		None
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      void 
 14206 ;; Registers used:
 14207 ;;		wreg, status,2
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14217 ;;Total ram usage:        0 bytes
 14218 ;; Hardware stack levels used: 1
 14219 ;; Hardware stack levels required when called: 1
 14220 ;; This function calls:
 14221 ;;		Nothing
 14222 ;; This function is called by:
 14223 ;;		_main
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           	psect	text72
 14228  005D20                     __ptext72:
 14229                           	callstack 0
 14230  005D20                     _Timer0_init:
 14231                           	callstack 29
 14232  005D20                     
 14233                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14234  005D20  50D6               	movf	214,w,c	;volatile
 14235  005D22  0B1F               	andlw	-225
 14236  005D24  0940               	iorlw	64
 14237  005D26  6ED6               	movwf	214,c	;volatile
 14238  005D28                     
 14239                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14240  005D28  88D6               	bsf	214,4,c	;volatile
 14241                           
 14242                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14243  005D2A  50D6               	movf	214,w,c	;volatile
 14244  005D2C  0BF0               	andlw	-16
 14245  005D2E  0905               	iorlw	5
 14246  005D30  6ED6               	movwf	214,c	;volatile
 14247  005D32                     
 14248                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14249  005D32  88D5               	bsf	213,4,c	;volatile
 14250                           
 14251                           ;timers.c: 16:     TMR0H=0b00111100;
 14252  005D34  0E3C               	movlw	60
 14253  005D36  6ED4               	movwf	212,c	;volatile
 14254                           
 14255                           ;timers.c: 17:     TMR0L=0b10101111;
 14256  005D38  0EAF               	movlw	175
 14257  005D3A  6ED3               	movwf	211,c	;volatile
 14258  005D3C  0012               	return		;funcret
 14259  005D3E                     __end_of_Timer0_init:
 14260                           	callstack 0
 14261                           
 14262 ;; *************** function _Interrupts_init *****************
 14263 ;; Defined at:
 14264 ;;		line 9 in file "interrupts.c"
 14265 ;; Parameters:    Size  Location     Type
 14266 ;;		None
 14267 ;; Auto vars:     Size  Location     Type
 14268 ;;		None
 14269 ;; Return value:  Size  Location     Type
 14270 ;;                  1    wreg      void 
 14271 ;; Registers used:
 14272 ;;		None
 14273 ;; Tracked objects:
 14274 ;;		On entry : 0/0
 14275 ;;		On exit  : 0/0
 14276 ;;		Unchanged: 0/0
 14277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14282 ;;Total ram usage:        0 bytes
 14283 ;; Hardware stack levels used: 1
 14284 ;; Hardware stack levels required when called: 1
 14285 ;; This function calls:
 14286 ;;		Nothing
 14287 ;; This function is called by:
 14288 ;;		_main
 14289 ;; This function uses a non-reentrant model
 14290 ;;
 14291                           
 14292                           	psect	text73
 14293  005D62                     __ptext73:
 14294                           	callstack 0
 14295  005D62                     _Interrupts_init:
 14296                           	callstack 29
 14297  005D62  8EF2               	bsf	242,7,c	;volatile
 14298                           
 14299                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14300  005D64  8AF2               	bsf	242,5,c	;volatile
 14301                           
 14302                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14303  005D66  8CF2               	bsf	242,6,c	;volatile
 14304                           
 14305                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14306  005D68  010E               	movlb	14	; () banked
 14307  005D6A  8B29               	bsf	41,5,b	;volatile
 14308  005D6C                     
 14309                           ; BSR set to: 14
 14310  005D6C  0012               	return		;funcret
 14311  005D6E                     __end_of_Interrupts_init:
 14312                           	callstack 0
 14313                           
 14314 ;; *************** function _HighISR *****************
 14315 ;; Defined at:
 14316 ;;		line 21 in file "interrupts.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;		None
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1    wreg      void 
 14323 ;; Registers used:
 14324 ;;		wreg, status,2, status,0
 14325 ;; Tracked objects:
 14326 ;;		On entry : 0/0
 14327 ;;		On exit  : 0/0
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14334 ;;Total ram usage:        0 bytes
 14335 ;; Hardware stack levels used: 1
 14336 ;; This function calls:
 14337 ;;		Nothing
 14338 ;; This function is called by:
 14339 ;;		Interrupt level 2
 14340 ;; This function uses a non-reentrant model
 14341 ;;
 14342                           
 14343                           	psect	intcode
 14344  000008                     __pintcode:
 14345                           	callstack 0
 14346  000008                     _HighISR:
 14347                           	callstack 19
 14348                           
 14349                           ; BSR set to: 14
 14350                           ;incstack = 0
 14351  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14352  00000A                     
 14353                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14354  00000A  010E               	movlb	14	; () banked
 14355  00000C  AB33               	btfss	51,5,b	;volatile
 14356  00000E  EF0B  F000         	goto	i2u589_41
 14357  000012  EF0D  F000         	goto	i2u589_40
 14358  000016                     i2u589_41:
 14359  000016  EF16  F000         	goto	i2l504
 14360  00001A                     i2u589_40:
 14361  00001A                     
 14362                           ; BSR set to: 14
 14363                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14364  00001A  0E3C               	movlw	60
 14365  00001C  6ED4               	movwf	212,c	;volatile
 14366                           
 14367                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14368  00001E  0EAF               	movlw	175
 14369  000020  6ED3               	movwf	211,c	;volatile
 14370  000022                     
 14371                           ; BSR set to: 14
 14372                           ;interrupts.c: 26:         centisecond ++;
 14373  000022  0101               	movlb	1	; () banked
 14374  000024  4B42               	infsnz	_centisecond& (0+255),f,b
 14375  000026  2B43               	incf	(_centisecond+1)& (0+255),f,b
 14376  000028                     
 14377                           ; BSR set to: 1
 14378                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14379  000028  010E               	movlb	14	; () banked
 14380  00002A  9B33               	bcf	51,5,b	;volatile
 14381  00002C                     i2l504:
 14382                           
 14383                           ; BSR set to: 14
 14384  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14385  00002E  0011               	retfie		f
 14386  000030                     __end_of_HighISR:
 14387                           	callstack 0
 14388                           
 14389                           	psect	rparam
 14390  0000                     
 14391                           	psect	temp
 14392  00005F                     btemp:
 14393                           	callstack 0
 14394  00005F                     	ds	1
 14395  0000                     int$flags	set	btemp
 14396  0000                     wtemp8	set	btemp+1
 14397  0000                     ttemp5	set	btemp+1
 14398  0000                     ttemp6	set	btemp+4
 14399  0000                     ttemp7	set	btemp+8
 14400                           
 14401                           	psect	idloc
 14402                           
 14403                           ;Config register IDLOC0 @ 0x200000
 14404                           ;	unspecified, using default values
 14405  200000                     	org	2097152
 14406  200000  0FFF               	dw	4095
 14407                           
 14408                           ;Config register IDLOC1 @ 0x200002
 14409                           ;	unspecified, using default values
 14410  200002                     	org	2097154
 14411  200002  0FFF               	dw	4095
 14412                           
 14413                           ;Config register IDLOC2 @ 0x200004
 14414                           ;	unspecified, using default values
 14415  200004                     	org	2097156
 14416  200004  0FFF               	dw	4095
 14417                           
 14418                           ;Config register IDLOC3 @ 0x200006
 14419                           ;	unspecified, using default values
 14420  200006                     	org	2097158
 14421  200006  0FFF               	dw	4095
 14422                           
 14423                           ;Config register IDLOC4 @ 0x200008
 14424                           ;	unspecified, using default values
 14425  200008                     	org	2097160
 14426  200008  0FFF               	dw	4095
 14427                           
 14428                           ;Config register IDLOC5 @ 0x20000A
 14429                           ;	unspecified, using default values
 14430  20000A                     	org	2097162
 14431  20000A  0FFF               	dw	4095
 14432                           
 14433                           ;Config register IDLOC6 @ 0x20000C
 14434                           ;	unspecified, using default values
 14435  20000C                     	org	2097164
 14436  20000C  0FFF               	dw	4095
 14437                           
 14438                           ;Config register IDLOC7 @ 0x20000E
 14439                           ;	unspecified, using default values
 14440  20000E                     	org	2097166
 14441  20000E  0FFF               	dw	4095
 14442                           
 14443                           	psect	config
 14444                           
 14445                           ;Config register CONFIG1L @ 0x300000
 14446                           ;	External Oscillator mode Selection bits
 14447                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14448                           ;	Power-up default value for COSC bits
 14449                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14450  300000                     	org	3145728
 14451  300000  AA                 	db	170
 14452                           
 14453                           ;Config register CONFIG1H @ 0x300001
 14454                           ;	unspecified, using default values
 14455                           ;	Clock Out Enable bit
 14456                           ;	CLKOUTEN = 0x1, unprogrammed default
 14457                           ;	Clock Switch Enable bit
 14458                           ;	CSWEN = 0x1, unprogrammed default
 14459                           ;	Fail-Safe Clock Monitor Enable bit
 14460                           ;	FCMEN = 0x1, unprogrammed default
 14461  300001                     	org	3145729
 14462  300001  FF                 	db	255
 14463                           
 14464                           ;Config register CONFIG2L @ 0x300002
 14465                           ;	unspecified, using default values
 14466                           ;	Master Clear Enable bit
 14467                           ;	MCLRE = 0x1, unprogrammed default
 14468                           ;	Power-up Timer Enable bit
 14469                           ;	PWRTE = 0x1, unprogrammed default
 14470                           ;	Low-power BOR enable bit
 14471                           ;	LPBOREN = 0x1, unprogrammed default
 14472                           ;	Brown-out Reset Enable bits
 14473                           ;	BOREN = 0x3, unprogrammed default
 14474  300002                     	org	3145730
 14475  300002  FF                 	db	255
 14476                           
 14477                           ;Config register CONFIG2H @ 0x300003
 14478                           ;	unspecified, using default values
 14479                           ;	Brown Out Reset Voltage selection bits
 14480                           ;	BORV = 0x3, unprogrammed default
 14481                           ;	ZCD Disable bit
 14482                           ;	ZCD = 0x1, unprogrammed default
 14483                           ;	PPSLOCK bit One-Way Set Enable bit
 14484                           ;	PPS1WAY = 0x1, unprogrammed default
 14485                           ;	Stack Full/Underflow Reset Enable bit
 14486                           ;	STVREN = 0x1, unprogrammed default
 14487                           ;	Debugger Enable bit
 14488                           ;	DEBUG = 0x1, unprogrammed default
 14489                           ;	Extended Instruction Set Enable bit
 14490                           ;	XINST = 0x1, unprogrammed default
 14491  300003                     	org	3145731
 14492  300003  FF                 	db	255
 14493                           
 14494                           ;Config register CONFIG3L @ 0x300004
 14495                           ;	WDT Period Select bits
 14496                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14497                           ;	WDT operating mode
 14498                           ;	WDTE = OFF, WDT Disabled
 14499  300004                     	org	3145732
 14500  300004  9F                 	db	159
 14501                           
 14502                           ;Config register CONFIG3H @ 0x300005
 14503                           ;	unspecified, using default values
 14504                           ;	WDT Window Select bits
 14505                           ;	WDTCWS = 0x7, unprogrammed default
 14506                           ;	WDT input clock selector
 14507                           ;	WDTCCS = 0x7, unprogrammed default
 14508  300005                     	org	3145733
 14509  300005  FF                 	db	255
 14510                           
 14511                           ;Config register CONFIG4L @ 0x300006
 14512                           ;	unspecified, using default values
 14513                           ;	Write Protection Block 0
 14514                           ;	WRT0 = 0x1, unprogrammed default
 14515                           ;	Write Protection Block 1
 14516                           ;	WRT1 = 0x1, unprogrammed default
 14517                           ;	Write Protection Block 2
 14518                           ;	WRT2 = 0x1, unprogrammed default
 14519                           ;	Write Protection Block 3
 14520                           ;	WRT3 = 0x1, unprogrammed default
 14521                           ;	Write Protection Block 3
 14522                           ;	WRT4 = 0x1, unprogrammed default
 14523                           ;	Write Protection Block 3
 14524                           ;	WRT5 = 0x1, unprogrammed default
 14525                           ;	Write Protection Block 3
 14526                           ;	WRT6 = 0x1, unprogrammed default
 14527                           ;	Write Protection Block 3
 14528                           ;	WRT7 = 0x1, unprogrammed default
 14529  300006                     	org	3145734
 14530  300006  FF                 	db	255
 14531                           
 14532                           ;Config register CONFIG4H @ 0x300007
 14533                           ;	unspecified, using default values
 14534                           ;	Configuration Register Write Protection bit
 14535                           ;	WRTC = 0x1, unprogrammed default
 14536                           ;	Boot Block Write Protection bit
 14537                           ;	WRTB = 0x1, unprogrammed default
 14538                           ;	Data EEPROM Write Protection bit
 14539                           ;	WRTD = 0x1, unprogrammed default
 14540                           ;	Scanner Enable bit
 14541                           ;	SCANE = 0x1, unprogrammed default
 14542                           ;	Low Voltage Programming Enable bit
 14543                           ;	LVP = 0x1, unprogrammed default
 14544  300007                     	org	3145735
 14545  300007  FF                 	db	255
 14546                           
 14547                           ;Config register CONFIG5L @ 0x300008
 14548                           ;	unspecified, using default values
 14549                           ;	UserNVM Program Memory Code Protection bit
 14550                           ;	CP = 0x1, unprogrammed default
 14551                           ;	DataNVM Memory Code Protection bit
 14552                           ;	CPD = 0x1, unprogrammed default
 14553  300008                     	org	3145736
 14554  300008  FF                 	db	255
 14555                           
 14556                           ;Config register CONFIG5H @ 0x300009
 14557                           ;	unspecified, using default values
 14558  300009                     	org	3145737
 14559  300009  FF                 	db	255
 14560                           
 14561                           ;Config register CONFIG6L @ 0x30000A
 14562                           ;	unspecified, using default values
 14563                           ;	Table Read Protection Block 0
 14564                           ;	EBTR0 = 0x1, unprogrammed default
 14565                           ;	Table Read Protection Block 1
 14566                           ;	EBTR1 = 0x1, unprogrammed default
 14567                           ;	Table Read Protection Block 2
 14568                           ;	EBTR2 = 0x1, unprogrammed default
 14569                           ;	Table Read Protection Block 3
 14570                           ;	EBTR3 = 0x1, unprogrammed default
 14571                           ;	Table Read Protection Block 4
 14572                           ;	EBTR4 = 0x1, unprogrammed default
 14573                           ;	Table Read Protection Block 5
 14574                           ;	EBTR5 = 0x1, unprogrammed default
 14575                           ;	Table Read Protection Block 6
 14576                           ;	EBTR6 = 0x1, unprogrammed default
 14577                           ;	Table Read Protection Block 7
 14578                           ;	EBTR7 = 0x1, unprogrammed default
 14579  30000A                     	org	3145738
 14580  30000A  FF                 	db	255
 14581                           
 14582                           ;Config register CONFIG6H @ 0x30000B
 14583                           ;	unspecified, using default values
 14584                           ;	Boot Block Table Read Protection bit
 14585                           ;	EBTRB = 0x1, unprogrammed default
 14586  30000B                     	org	3145739
 14587  30000B  FF                 	db	255
 14588                           tosu	equ	0xFFF
 14589                           tosh	equ	0xFFE
 14590                           tosl	equ	0xFFD
 14591                           stkptr	equ	0xFFC
 14592                           pclatu	equ	0xFFB
 14593                           pclath	equ	0xFFA
 14594                           pcl	equ	0xFF9
 14595                           tblptru	equ	0xFF8
 14596                           tblptrh	equ	0xFF7
 14597                           tblptrl	equ	0xFF6
 14598                           tablat	equ	0xFF5
 14599                           prodh	equ	0xFF4
 14600                           prodl	equ	0xFF3
 14601                           indf0	equ	0xFEF
 14602                           postinc0	equ	0xFEE
 14603                           postdec0	equ	0xFED
 14604                           preinc0	equ	0xFEC
 14605                           plusw0	equ	0xFEB
 14606                           fsr0h	equ	0xFEA
 14607                           fsr0l	equ	0xFE9
 14608                           wreg	equ	0xFE8
 14609                           indf1	equ	0xFE7
 14610                           postinc1	equ	0xFE6
 14611                           postdec1	equ	0xFE5
 14612                           preinc1	equ	0xFE4
 14613                           plusw1	equ	0xFE3
 14614                           fsr1h	equ	0xFE2
 14615                           fsr1l	equ	0xFE1
 14616                           bsr	equ	0xFE0
 14617                           indf2	equ	0xFDF
 14618                           postinc2	equ	0xFDE
 14619                           postdec2	equ	0xFDD
 14620                           preinc2	equ	0xFDC
 14621                           plusw2	equ	0xFDB
 14622                           fsr2h	equ	0xFDA
 14623                           fsr2l	equ	0xFD9
 14624                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         106
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    154     160
    BANK1           256     70     172
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    detect_wall@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    detect_wall@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2534$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2534$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S429DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S429DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _detect_wall->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _setup->_amb_light_measure
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  342725
                                            150 BANK0      4     4      0
                                              0 BANK1     70    70      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26247
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             51 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             43 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  123622
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _detect_wall                                         19    13      6   18607
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   25961
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   15832
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7345
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   40355
                                             24 BANK0     12     4      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             49 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             43 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              12     6      6   12033
                                             31 COMRAM    12     6      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18283
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12868
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11477
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1758
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2683
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_predict
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _toggle_light
   _detect_wall
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _detect_wall
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      AC       7       67.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9A      A0       5      100.0%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllhl      1      0       0      40        0.0%
BITBIGSFRlhhl        1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AA      56        0.0%
DATA                 0      0     1AA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 16 19:25:59 2022

                _color_read_Red 5712                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 57B2                   _color_predict 5B9C  
                            l60 365A                              l71 5B6A                              l80 5800  
                            l57 5B36                              l74 5D00                              l83 57B0  
                            l68 366C                              l92 5C80                              l77 5760  
                            l86 5850                              l95 5C60                              l89 56BE  
                            l98 5CE0                    ___awdiv@sign 000C                _detect_wall$2945 0074  
           ___wmul@multiplicand 0003                _color_read_Clear 5802                _color_read_Green 5762  
             ??_Interrupts_init 0001                             l101 5CC0                             l110 5BC8  
                           l104 5CA0                             l113 3A96                             l107 55FE  
                           l133 1A16                             l141 558E                             l302 4A54  
                           l136 5A58                             l145 4CAA                             l137 5A5A  
                           l244 59A0                             l148 5204                             l404 3730  
                           l325 5D1E                             l149 5206                             l182 5C1A  
                           l254 3C6A                             l262 5512                             l334 5D40  
                           l191 5D80                             l247 5076                             l271 423C  
                           l343 5B9A                             l176 5BF2                             l440 591C  
                           l185 5D8A                             l337 5D54                             l194 5D60  
                           l515 5D3C                             l179 5BF4                             l291 5390  
                           l283 4328                             l188 5D76                             l620 4F58  
                           l452 30DC                             l197 595E                             l461 2A16  
                           l614 4EB8                             l279 42F8                             l623 4FA4  
                           l615 4F22                             l560 47BE                             l626 5C40  
                           l618 4F8C                             l570 484E                             l562 47CC  
                           l475 2A44                             l900 5ACC                             l564 4800  
                           l740 4646                             l573 48AC                             l469 2A12  
                           l566 480E                             l479 2A52                             l592 4B82  
                           l576 4902                             l753 47AA                             l498 5D6C  
                           l923 4DB2                             l589 44BE                             l857 5454  
                           l891 4E70                             l896 4EB6               verify_color@color 009A  
              ?_calibrate_white 000C                             _abs 59E2                             _pad 5208  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5C82                    ___fltol@exp1 0065  
                          l1210 2C4C                            ?_abs 0013                            l1221 2D0A  
                          l1213 2C10                            l1222 2CF8                            l1302 5A94  
                          l1208 2DEC                            l1240 1F9C                            l1400 5140  
                          l1250 21F8                            l1154 1C06                            l1219 2C92  
                          l1171 1D20                            l1163 1ED6                            l1155 1BF4  
                          l1411 5D8E                            l1244 2300                            l1180 1DF0  
                          l1156 1BBA                            l1181 1DDE                            l1341 52CC  
                          l1309 5710                            l1247 2192                            l4000 1EE4  
                          l1408 58DA                            l1432 5B02                            l1336 524E  
                          l1281 3E78                            l1257 22C2                            l1249 220A  
                          l4010 1F24                            l4002 1EF2                            l1419 26AE  
                          l1339 5290                            l1347 317E                            l1284 3FD4  
                          l4100 2226                            l4020 1F54                            l4012 1F2A  
                          l4004 1EF4                            l1196 5896                            l1380 5658  
                          l1349 3186                            l1381 5660                            l4110 2290  
                          l4102 2234                            l4030 1F8C                            l4022 1F56  
                          l4014 1F3A                            l4006 1F04                            l1374 3E20  
                          l1295 3F6C                            l1367 33C0                            l1288 3F10  
                          l4120 22E6                            l4112 22AA                            l4104 225E  
                          l4040 1FDC                            l4032 1FAC                            l4024 1F66  
                          l4016 1F40                            l4008 1F14                            l5000 4EEE  
                          l4200 56DA                            l1385 5A18                            l4114 22C6  
                          l4122 22EC                            l4106 2262                            l4050 202C  
                          l4042 1FE6                            l4034 1FBC                            l4026 1F76  
                          l4018 1F46                            l4130 5862                            l5010 4F30  
                          l5002 4EF0                            l4210 5B70                            l4202 56E2  
                          l5100 5B04                            l4300 4D14                            l4140 4E20  
                          l4124 22F0                            l4116 22D6                            l4108 227C  
                          l4060 206E                            l4052 2038                            l4044 1FFC  
                          l4028 1F86                            l4220 41B2                            l5020 4F7E  
                          l5012 4F46                            l5004 4F06                            l4212 5B7E  
                          l3500 4606                            l1388 5A20                            l4204 56FE  
                          l5110 5B60                            l5102 5B38                            l4310 4D3E  
                          l4302 4D18                            l4150 4EAE                            l4142 4E30  
                          l4134 4DB4                            l4118 22E4                            l4070 20D0  
                          l4062 207E                            l4054 2046                            l4046 2008  
                          l4038 1FD0                            l4230 41F6                            l5022 4F90  
                          l5006 4F10                            l4214 5B82                            l3502 4626  
                          l3510 465A                            l3430 5078                            l5030 434C  
                          l5104 5B3C                            l4320 4D66                            l4312 4D48  
                          l4304 4D26                            l4152 4EB4                            l4144 4E3E  
                          l4136 4DE2                            l4080 2178                            l4072 20EC  
                          l4064 2098                            l4056 2052                            l4048 2020  
                          l4160 5ABC                            l4128 5852                            l4400 35DA  
                          l3600 5408                            l4240 4254                            l4224 41C6  
                          l4232 4204                            l4216 4186                            l5016 4F66  
                          l5200 489E                            l4208 5B6C                            l3520 46CA  
                          l3512 467A                            l3440 50FA                            l3432 508A  
                          l5040 4386                            l5032 4350                            l5024 432A  
                          l5120 5586                            l5112 5518                            l5106 5B46  
                          l5130 5960                            l4322 4D72                            l4314 4D52  
                          l4146 4E50                            l4138 4DF2                            l4090 21B4  
                          l4082 2182                            l4074 2116                            l4066 20A8  
                          l4058 2062                            l4402 35EC                            l3602 541E  
                          l3610 5434                            l4250 42A6                            l4234 421C  
                          l4226 41DE                            l4242 426C                            l4218 4192  
                          l5018 4F68                            l5210 48E2                            l5202 48BA  
                          l3530 4742                            l3522 46D2                            l3514 467E  
                          l3506 4648                            l3434 509C                            l3450 58BA  
                          l4170 563C                            l4410 5662                            l5050 43AC  
                          l5042 43A0                            l5034 4368                            l5114 5530  
                          l5108 5B56                            l5132 5970                            l5140 4FA6  
                          l4420 5CC2                            l4324 4D82                            l4148 4E5E  
                          l4092 21C2                            l4084 2190                            l4076 214C  
                          l4068 20C4                            l4156 5A96                            l3700 1A24  
                          l4340 23BA                            l4332 2302                            l4404 360A  
                          l4412 5C62                            l4180 57F8                            l4172 5712  
                          l3612 5444                            l3604 5426                            l4260 42F4  
                          l4252 42B2                            l4236 4228                            l4228 41EA  
                          l4500 4B12                            l5212 48FA                            l5204 48CE  
                          l3532 4754                            l3524 46E6                            l3516 468C  
                          l3508 464C                            l3436 50A6                            l3444 5898  
                          l3452 5ACE                            l3620 30FE                            l4164 5600  
                          l5060 43FC                            l5052 43C4                            l5036 4374  
                          l5220 3FFE                            l5300 2F22                            l5116 554E  
                          l5134 5988                            l5150 4FFA                            l5142 4FB2  
                          l4422 5CC8                            l4510 2A60                            l4190 5802  
                          l4326 4D92                            l4094 21F0                            l4086 21A2  
                          l4078 215A                            l4158 5AAC                            l3710 1A64  
                          l3702 1A32                            l4350 2500                            l4342 23DE  
                          l4334 2322                            l4406 3622                            l4430 5C88  
                          l4414 5C68                            l4174 5758                            l3614 544C  
                          l3606 5428                            l4270 52F2                            l4246 4282  
                          l4254 42C0                            l4238 4238                            l4502 4B26  
                          l5206 48D0                            l3470 44F6                            l3462 44C0  
                          l3526 46F4                            l3534 475A                            l3518 46AC  
                          l3438 50C4                            l3446 58A4                            l3454 5ADA  
                          l3550 5246                            l3542 5208                            l3630 3172  
                          l3622 3126                            l4166 5608                            l5070 4420  
                          l5054 43D0                            l5038 4380                            l5230 4048  
                          l5222 400A                            l5310 2F86                            l5302 2F24  
                          l5126 558C                            l5118 5566                            l5136 599C  
                          l5152 500E                            l5144 4FC2                            l5160 5D18  
                          l4600 2C90                            l4520 2AA0                            l4512 2A6E  
                          l4192 5848                            l4328 4DA2                            l4088 21B0  
                          l3800 1C24                            l3720 1A96                            l3712 1A66  
                          l3704 1A34                            l4360 267A                            l4352 256C  
                          l4344 23FA                            l4336 236A                            l4440 5A5C  
                          l4408 3658                            l4424 5CA2                            l4416 5C42  
                          l4184 5762                            l3608 542E                            l4280 5346  
                          l4272 530A                            l4256 42D8                            l4248 429A  
                          l4264 4314                            l4504 4B42                            l5208 48DE  
                          l3480 4552                            l3472 4504                            l3464 44C4  
                          l3536 476A                            l3528 4722                            l3448 58B6  
                          l3456 5ADE                            l3560 52B4                            l3552 525A  
                          l3544 5218                            l3640 31BC                            l3632 318E  
                          l3624 3146                            l4168 5616                            l4432 5590  
                          l5072 442C                            l5056 43DC                            l5048 43A8  
                          l5240 4092                            l5232 4054                            l5224 401E  
                          l5216 3FDA                            l5320 2FFA                            l5312 2F98  
                          l5304 2F36                            l5400 381E                            l5170 5D32  
                          l5138 599E                            l5146 4FD6                            l5162 5D1A  
                          l5154 5D02                            l4610 2CF0                            l4602 2CA2  
                          l4530 2AC6                            l4522 2AA2                            l4514 2A70  
                          l4290 4CC4                            l4098 221A                            l3810 1C64  
                          l3730 1ABE                            l3722 1A98                            l3706 1A44  
                          l3714 1A6E                            l4362 269E                            l4354 259E  
                          l4338 237E                            l4370 33E0                            l4426 5CA8  
                          l4418 5C48                            l4178 57B2                            l4186 57A8  
                          l3570 5C38                            l4282 5352                            l4274 5316  
                          l4258 42E4                            l4266 4316                            l4506 4B6E  
                          l3490 45BC                            l3482 455A                            l3474 4524  
                          l3466 44D2                            l3538 478A                            l3458 5AF6  
                          l3554 526E                            l3546 522C                            l3650 325A  
                          l3642 31C6                            l3634 31A0                            l3626 3156  
                          l3618 30DE                            l4434 55F2                            l5090 4488  
                          l5074 4438                            l5066 4404                            l5058 43E2  
                          l4450 5A54                            l5250 40CC                            l5234 4060  
                          l5226 4032                            l5218 3FEC                            l5330 3090  
                          l5322 302E                            l5314 2FCC                            l5306 2F6A  
                          l5410 3882                            l5402 3838                            l5172 5D62  
                          l4700 5BDE                            l5148 4FEA                            l5164 5D1C  
                          l5156 5D0C                            l4620 2D5E                            l4604 2CB0  
                          l4540 2B06                            l4532 2AD4                            l4516 2A80  
                          l4524 2AAA                            l4508 2A54                            l3820 1C8E  
                          l3812 1C70                            l3804 1C38                            l3740 1AF8  
                          l3732 1ACE                            l3724 1A9E                            l3716 1A7E  
                          l3708 1A54                            l4356 260A                            l4348 2432  
                          l4380 3482                            l4372 3400                            l4428 5C82  
                          l3580 53AC                            l4276 532E                            l4284 5360  
                          l4268 52CE                            l5180 47BC                            l3492 45DC  
                          l3484 456E                            l3476 4528                            l3468 44F2  
                          l3564 59E2                            l3556 5272                            l3548 523A  
                          l3660 332A                            l3644 31CC                            l3652 32BE  
                          l3636 31AE                            l3628 3158                            l3900 3C6C  
                          l4196 56C0                            l4436 5BA0                            l5092 4494  
                          l5084 4460                            l5076 443E                            l5068 4408  
                          l4444 5A22                            l5260 4126                            l5244 40AA  
                          l5236 4074                            l5228 4044                            l4460 494C  
                          l5332 30AA                            l5324 3048                            l5316 2FE6  
                          l5308 2F84                            l5404 3856                            l5340 366E  
                          l5166 5D20                            l4702 5BE0                            l5158 5D0E  
                          l4630 2DC8                            l4614 2D1A                            l4622 2D62  
                          l4606 2CB4                            l4550 2B46                            l4542 2B08  
                          l4534 2AD6                            l4526 2ABA                            l4518 2A90  
                          l4294 4CD8                            l3830 1D00                            l3814 1C74  
                          l3806 1C48                            l3822 1C94                            l3750 1B24  
                          l3742 1B0A                            l3734 1ADE                            l3726 1AAC  
                          l3718 1A84                            l4358 263E                            l4390 3520  
                          l4382 349A                            l4374 3418                            l4366 33C4  
                          l4710 389C                            l3590 53D2                            l3582 53B0  
                          l3574 5392                            l4286 5378                            l4278 533A  
                          l5190 4830                            l5182 47DA                            l5174 47AC  
                          l5270 58DC                            l3494 45DE                            l3486 457C  
                          l3478 4534                            l3566 59FC                            l3558 52A0  
                          l3670 3374                            l3654 32D8                            l3662 333A  
                          l3646 324E                            l3638 31B4                            l3910 3CDA  
                          l3902 3C90                            l4198 56D2                            l4438 5BBC  
                          l5094 449A                            l5086 4464                            l5078 4458  
                          l4446 5A28                            l5262 413A                            l5254 40E2  
                          l5246 40B6                            l5238 408C                            l4462 4964  
                          l4470 4998                            l4454 4904                            l5334 30AC  
                          l5326 304A                            l5318 2FE8                            l5406 3866  
                          l5350 369A                            l5342 3672                            ?_pad 0011  
                          l5168 5D28                            l3680 5BF4                            l4704 5CE4  
                          l4632 2DCC                            l4624 2D7C                            l4616 2D26  
                          l4608 2CC2                            l4560 2B76                            l4552 2B4E  
                          l4536 2AE6                            l4544 2B10                            l4528 2AC0  
                          l4296 4D02                            l4288 4CAC                            l3840 1D5A  
                          l3824 1CBA                            l3832 1D10                            l3816 1C82  
                          l3808 1C56                            l3760 1B38                            l3752 1B28  
                          l3744 1B18                            l3736 1AE0                            l3728 1AAE  
                          l4392 355C                            l4384 34D2                            l4376 3450  
                          l4368 33D0                            l4720 38FC                            l4712 38B4  
                          l3592 53E4                            l3584 53BE                            l3576 5396  
                          l3568 5C1C                            l5192 4832                            l5184 47E6  
                          l5176 47B6                            l5272 58F0                            l3496 45F0  
                          l3488 458E                            l3672 3380                            l3664 334C  
                          l3656 32F6                            l3648 3254                            l3920 3DA2  
                          l3912 3CFE                            l3904 3C9E                            l5096 44B4  
                          l5088 447C                            l4448 5A3E                            l4800 134C  
                          l5264 4154                            l5256 40F6                            l5248 40BC  
                          l4480 4A00                            l4472 49B0                            l4464 4970  
                          l4456 4928                            l5336 30BE                            l5328 305C  
                          l5280 2E10                            l5408 387C                            l5360 36AC  
                          l5352 369E                            l5344 3676                            l3682 5C04  
                          l4634 2DDA                            l4626 2D92                            l4618 2D34  
                          l4570 2BB4                            l4562 2B76                            l4554 2B52  
                          l4546 2B20                            l4538 2AF6                            l4650 3E42  
                          l4298 4D04                            l3850 1D8A                            l3842 1D64  
                          l3834 1D36                            l3826 1CEE                            l3818 1C84  
                          l3770 1B4C                            l3762 1B3C                            l3754 1B2C  
                          l3746 1B1C                            l3738 1AE8                            l4394 356E  
                          l4386 34E4                            l4378 3462                            l4730 3960  
                          l4722 3914                            l4714 38B8                            l4706 388E  
                          l3594 53EC                            l3586 53C6                            l3578 53A4  
                          l3690 3B5C                            l4490 4A6A                            l5194 4850  
                          l5186 47E8                            l5178 47BA                            l5274 5908  
                          l3498 45F6                            l3674 3388                            l3666 335C  
                          l3658 3310                            l3930 3DDE                            l3922 3DB0  
                          l3914 3D46                            l3906 3CB0                            l5098 44BA  
                          l4810 1434                            l4802 1350                            l5258 4116  
                          l5266 415A                            l4482 4A18                            l4474 49C8  
                          l4466 497C                            l4458 4940                            l5338 30C8  
                          l5290 2EA6                            l5282 2E44                            l5370 36DC  
                          l5362 36AC                            l5354 36A2                            l5346 3682  
                          l4636 2DE0                            l4628 2DAC                            l4580 2C00  
                          l4572 2BC4                            l4548 2B36                            l4660 3EBA  
                          l4652 3E88                            l3860 1DB2                            l3852 1D8E  
                          l3844 1D72                            l3836 1D46                            l3828 1CF0  
                          l3780 1B86                            l3772 1B50                            l3764 1B40  
                          l3756 1B30                            l3748 1B20                            l4396 358C  
                          l4388 3508                            l4900 4C98                            l4740 39C4  
                          l4732 3978                            l4724 3918                            l4716 38D0  
                          l4708 3892                            l3596 53F4                            l3588 53CA  
                          l3692 3B7C                            l3684 3A98                            l4492 4A82  
                          l5196 4878                            l5188 481C                            l3668 3362  
                          l3676 3398                            l3924 3DC4                            l3908 3CB6  
                          l4820 1664                            l4812 14DC                            l4804 136A  
                          l5268 416C                            l4484 4A2A                            l4476 49D8  
                          l4468 4988                            l5292 2EC0                            l5284 2E5E  
                          l5276 2DF0                            l5380 3762                            l5372 36E8  
                          l5364 36AC                            l5356 36A8                            l5348 3696  
                          l3942 5D82                            l3950 5D78                            l4638 2DE2  
                          l4590 2C4A                            l4582 2C0E                            l4574 2BD4  
                          l4566 2B8A                            l4558 2B66                            l4670 3F42  
                          l4662 3EC6                            l4654 3E9E                            l4646 3E24  
                          l3870 1E0C                            l3862 1DC0                            l3854 1D9E  
                          l3846 1D74                            l3790 1BD8                            l3782 1BA2  
                          l3774 1B54                            l3766 1B44                            l3758 1B34  
                          l4398 35A4                            l4902 4CA2                            l4750 3A28  
                          l4742 39DC                            l4734 397C                            l4726 3930  
                          l4718 38E4                            l3598 5402                            l3694 3B98  
                          l3686 3AB4                            l4494 4A9E                            l5198 4890  
                          l3918 3D7E                            l3934 3DEA                            l4830 1788  
                          l4822 1678                            l4814 14F8                            l4806 1376  
                          l4910 515C                            l4486 4A40                            l4478 49EE  
                          l5294 2EC2                            l5286 2E60                            l5278 2E00  
                          l5390 37C2                            l5382 37A0                            l5374 36FC  
                          l5358 36A8                            l3944 5D86                            l3952 5D7C  
                          l4592 2C5C                            l4584 2C1A                            l4576 2BDC  
                          l4568 2BA4                            l4680 3F80                            l4672 3F4E  
                          l4664 3EF8                            l4648 3E34                            l3960 5924  
                          l3880 1E76                            l3872 1E1A                            l3864 1DD6  
                          l3848 1D82                            l3856 1DA0                            l3792 1BE6  
                          l3784 1BB2                            l3768 1B48                            l3776 1B58  
                          l4752 3A40                            l4744 39F4                            l4736 3994  
                          l4728 3948                            l3696 3C02                            l3688 3B16  
                          l4496 4AB2                            l4488 4A56                            l3936 3E0E  
                          l3928 3DD0                            l4832 17A0                            l4840 188A  
                          l4824 16A6                            l4816 15A0                            l4808 1418  
                          l4760 0E14                            l4920 51E8                            l4912 5176  
                          l5296 2ED4                            l5288 2E72                            l5392 37D6  
                          l5384 37A6                            l5376 371E                            l5368 36DA  
                          l3946 5D58                            l4594 2C72                            l4586 2C38  
                          l4578 2BEC                            l4682 3FA4                            l4674 3F5C  
                          l4666 3EFA                            l4658 3EB2                            l3962 592C  
                          l3954 5D6E                            l3890 1EB0                            l3882 1E96  
                          l3874 1E54                            l3858 1DAE                            l3794 1BE8  
                          l3786 1BC8                            l3778 1B5C                            l3698 1A18  
                          l4754 3A58                            l4746 39F8                            l4738 39AC  
                          l4498 4AFA                            l4850 18EA                            l4842 18A0  
                          l4834 17B6                            l4826 1774                            l4818 15BC  
                          l4770 0F28                            l4762 0E62                            l4922 5200  
                          l4914 5182                            l4906 5142                            l4930 2700  
                          l5298 2F08                            l5386 37AA                            l5394 37DC  
                          l5378 373A                            l4692 5BCA                            l3948 5D5C  
                          l4596 2C78                            l4588 2C3A                            l4684 3FB4  
                          l4676 3F7A                            l4668 3F06                            l3964 5934  
                          l3956 5D72                            l3892 1EB6                            l3884 1E9A  
                          l3868 1E00                            l3876 1E56                            l3796 1BF2  
                          l3788 1BD4                            l4756 3A70                            l4748 3A10  
                          l3980 5496                            l3972 5456                            l4860 195C  
                          l4852 18F2                            l4844 18B6                            l4836 1876  
                          l4828 177E                            l4780 10C4                            l4772 0F44  
                          l4764 0E66                            l4916 5186                            l4908 5158  
                          l4940 2764                            l4932 2714                            l5396 37F0  
                          l5388 37B0                            l4694 5BD4                            l4598 2C82  
                          l4686 3FC2                            l4678 3F7C                            l3966 595A  
                          l3958 5920                            l3894 1EC4                            l3886 1EA8  
                          l3878 1E66                            l3798 1C14                            l4758 3A74  
                          l3990 54E2                            l3982 54A2                            l3974 545A  
                          l4870 19F4                            l4862 198C                            l4846 18CC  
                          l4854 18FA                            l4838 1880                            l4790 11A8  
                          l4782 10DC                            l4774 0FEC                            l4766 0E80  
                          l4918 51CC                            l4950 27B2                            l4942 2778  
                          l4934 2720                            l4926 26B0                            l5398 380A  
                          l4696 5BDA                            l4688 3FC4                            l3968 595C  
                          l3896 1EC6                            l3888 1EAE                            l4880 4B9E  
                          l3992 54FA                            l3984 54AE                            l3976 5472  
                          l4872 1A08                            l4864 1992                            l4848 18D4  
                          l4856 18FE                            l4792 11C4                            l4784 10E0  
                          l4776 1000                            l4768 0E8C                            l4960 2846  
                          l4936 2738                            l4928 26FC                            l4698 5BDC  
                          l4890 4BE8                            l4882 4BA8                            l3986 54BA  
                          l3978 547E                            l3994 5D40                            l4874 1A12  
                          l4866 19C0                            l4858 192C                            l4794 126C  
                          l4786 10FA                            l4778 10A8                            l4962 286A  
                          l4954 27EA                            l4946 278E                            l4938 273C  
                          l4892 4BF4                            l4884 4BAC                            l3988 54CA  
                          l3996 5D50                            l4868 19EE                            l4796 1288  
                          l4788 1106                            l4980 297E                            l4972 28FE  
                          l4956 280E                            l4948 2790                            l3998 1ED8  
                          l4894 4C0C                            l4886 4BC4                            l4878 4B84  
                          l4798 1330                            l4990 2A1C                            l4974 2922  
                          l4966 28A2                            l4896 4C18                            l4888 4BD0  
                          l4992 2A30                            l4984 29B6                            l4968 28C6  
                          l4898 4C30                            l4994 2A3E                            l4986 29DA  
                          l4978 295A                            l4996 4ECA                            l4998 4EE0  
                          STR_1 0E05                            STR_2 0E0D                            u3000 58DA  
                          u3001 58D6                            u3010 5AF6                            u3011 5AF2  
                          u3020 44D2                            u3100 468C                            u3021 44CE  
                          u3101 4688                            u3030 4504                            u3110 46CA  
                          u3031 4500                            u3111 46C6                            u4000 1F54  
                          u3200 53A4                            u3120 46F4                    _BAUD4CONbits 000EE9  
                          u4001 1F50                            u3201 53A0                            u3041 452E  
                          u3121 46F0                            _LATE 000F7D                            u4010 1F66  
                          u3210 53BE                            u3050 4552                            u3130 4722  
                          u4011 1F62                            u3211 53BA                            u3051 454E  
                          u3131 471E                            _LATG 000F7F                            u4100 2206  
                          u4020 1F76                            u3220 53E4                            u3060 457C  
                          u3140 476A                            u3300 3172                            u4101 2202  
                          u4021 1F72                            u3221 53E0                            u3061 4578  
                          u3141 4766                            u3301 316E                            u4110 221A  
                          u4030 1FAC                            u3230 5402                            u3070 45BC  
                          u3150 5218                            u3310 31A0                            u4111 2216  
                          u4031 1FA8                            u3231 53FE                            u3071 45B8  
                          u3151 5214                            u3311 319C                            u5000 2CB0  
                          u4200 4EAE                            u4120 2234                            u4040 1FBC  
                          u3240 541E                            u3080 4606                            u3160 523A  
                          u3400 3374                            u3320 31AE                            u5001 2CAC  
                          u4201 4EAA                            u4121 2230                            u4041 1FB8  
                          u3241 541A                            u3081 4602                            u3161 5236  
                          u3401 3370                            u3321 31AA                            u3410 5C04  
                          u5010 2CC2                            u4130 227C                            u4050 2136  
                          u4210 5AAC                            u3250 5444                            u3090 465A  
                          u3170 5290                            u3330 32D8                            _T2PR 000FBC  
                          u3411 5C00                            u5011 2CBE                            u4131 2278  
                          u4211 5AA8                            u3251 5440                            u3091 4656  
                          u3171 528C                            u3331 32D4                            u3420 5C1A  
                          u5020 2CF0                            u5100 3E42                            u4140 22AA  
                          u4060 2190                            u3500 1A96                            u4300 4328  
                          u3180 52A0                            u3340 32F6                            u3260 310E  
                          u4220 5658                            u3421 5C16                            u5021 2CEC  
                          u5101 3E3E                            u4141 22A6                            u4061 218C  
                          u3501 1A92                            u4301 4324                            u3181 529C  
                          u3341 32F2                            u3261 3108                            u4221 5654  
                          u5030 2D06                            u5110 3E9E                            u4150 22E4  
                          u4070 21B0                            u3510 1AAC                            u3430 3AB4  
                          u4310 530A                            u4230 5B9A                            u3190 59FC  
                          u3350 3310                            u3270 3110                            u5031 2D02  
                          u5111 3E9A                            u4151 22E0                            u4071 21AC  
                          u4055 212C                            u3511 1AA8                            u3431 3AB0  
                          u4311 5306                            u4231 5B96                            u3191 59F8  
                          u3351 330C                            u5040 2D1A                            u5120 3EF4  
                          u4400 4D82                            u4160 4DE2                            u4080 21C2  
                          u3600 1BE6                            u3520 1ABE                            u3440 3B98  
                          u4320 532E                            u4240 41C2                            u3360 332A  
                          u3280 3126                            u5200 1774                            u5041 2D16  
                          u5121 3EF0                            u4401 4D7E                            u4161 4DDE  
                          u4081 21BE                            u3601 1BE2                            u3521 1ABA  
                          u3441 3B94                            u4321 532A                            u4241 41BE  
                          u3361 3326                            u3281 3122                            u5201 1770  
                          u5050 2D34                            u5130 3F3E                            u4410 4D92  
                          u4170 4E20                            u4090 21F0                            u3610 1C06  
                          u3530 1ACE                            u4330 5378                            u4250 421C  
                          u3370 333A                            u3290 3156                            u5210 17A0  
                          u5051 2D30                            u5131 3F3A                            u4411 4D8E  
                          u4171 4E1C                            u4091 21EC                            u3611 1C02  
                          u3531 1ACA                            u4331 5374                            u4251 4218  
                          u3371 3336                            u3291 3152                            u5211 179C  
                          u5060 2D7C                            u5140 3F5C                            u4180 4E3E  
                          u3700 1D46                            u3620 1C14                            u3540 1B0A  
                          u4500 267A                            u4420 2342                            u4340 5390  
                          u4260 4254                            u3380 334C                            u5300 198C  
                          u5220 17B6                            u5061 2D78                            u5141 3F58  
                          u4181 4E3A                            u3701 1D42                            u3621 1C10  
                          u3541 1B06                            u4501 2676                            u4341 538C  
                          u4261 4250                            u3381 3348                            u5301 1988  
                          u5221 17B2                            u5070 2DAC                            u5150 3F6C  
                          u4350 4CC4                            u4190 4E5E                            u3710 1D72  
                          u3630 1C24                            u3550 1B18                            u3470 1A32  
                          u4430 236A                            u4510 33E0                            u3454 3BF2  
                          u4270 427E                            u3390 335C                            u5310 19C0  
                          u5230 1876                            u5071 2DA8                            u5151 3F68  
                          u4351 4CC0                            u4191 4E5A                            u3711 1D6E  
                          u3631 1C20                            u3551 1B14                            u3471 1A2E  
                          u4431 2366                            u4511 33DC                            u3455 3BEE  
                          u4271 427A                            u3391 3358                            u5311 19BC  
                          u5231 1872                            u6007 0E72                            u5080 2DDA  
                          u5160 3F7A                            u4360 4CF8                            u3800 1E54  
                          u3720 1D82                            u3640 1C56                            u3560 1B86  
                          u3480 1A44                            u4440 239E                            u4520 33F2  
                          u3464 3C5C                            u4280 42D8                            u5320 19EE  
                          u5240 18A0                            u5400 28C6                            u5081 2DD6  
                          u5161 3F76                            u3801 1E50                            u3721 1D7E  
                          u3641 1C52                            u3561 1B82                            u3481 1A40  
                          u4425 2338                            u4521 33EA                            u3465 3C58  
                          u4281 42D4                            u5321 19EA                            u5241 189C  
                          u6017 10D0                            u5401 28C2                            u5170 3FB4  
                          u5090 3E34                            u4370 4D26                            u3810 1E66  
                          u3730 1D9E                            u3650 1C64                            u3570 1B9E  
                          u3490 1A54                            u4450 23BA                            u4610 34E4  
                          u4290 4310                            u5330 1A08                            u5250 18B6  
                          u5410 2922              verify_color@color2 0098                            u5171 3FB0  
                          u5091 3E30                            u4371 4D22                            u3811 1E62  
                          u3731 1D9A                            u3651 1C60                            u3571 1B98  
                          u3491 1A50                            u4451 23B6                            u4611 34E0  
                          u4291 430C                            u6107 483E                            u5331 1A04  
                          u5251 18B2                            u6027 10EC                            u5411 291E  
                          u5180 3FC2                            u3900 5948                            u4380 4D3A  
                          u3820 1E76                            u3740 1DAE                            u3660 1C82  
                          u3580 1BA0                            u4460 23FA                            u4620 34F6  
                          u4540 342A                            u5500 4F54                            u5260 18CC  
                          u5340 5200                            u5420 297E                            u5181 3FBE  
                          u3901 5940                            u4381 4D36                            u4365 4CEE  
                          u3821 1E72                            u3741 1DAA                            u3661 1C7E  
                          u4461 23F6                            u4445 2394                            u4621 34EE  
                          u4541 3422                            u5501 4F50                            u6117 4884  
                          u5261 18C8                            u6037 135C                            u5341 51FC  
                          u5421 297A                            u4390 4D62                            u3830 1E96  
                          u3750 1DC0                            u3670 1CBA                            u3590 1BC8  
                          u4470 2500                            u4710 35EC                            u5510 4F66  
                          u5270 18EA                            u5190 16A6                            u5430 29DA  
                          u5350 2764                            u4391 4D5E                            u3831 1E92  
                          u3751 1DBC                            u3671 1CB6                            u3591 1BC4  
                          u4471 24FC                            u4711 35E8                            u6207 4B60  
                          u5511 4F62                            u6127 48EE                            u6047 435A  
                          u5271 18E6                            u5191 16A2                            u5431 29D6  
                          u5351 2760                            u3840 1EA8                            u3760 1DD6  
                          u3680 1D00                            u4480 259E                            u4720 35FE  
                          u4640 3532                            u4608 34AE                            u4560 3462  
                          u3920 5472                            u5600 481C                            u2960 508A  
                          u5520 43A0                            u5280 192C                            u4800 4964  
                          u5440 2A3E                            u5360 278A                            u3841 1EA4  
                          u3761 1DD2                            u3681 1CFC                            u4481 259A  
                          u4721 35F6                            u4641 352A                            u4561 345E  
                          u3921 546E                            u6217 41FC                            u6137 4ED4  
                          u5601 4818                            u2961 5086                            u6057 43B6  
                          u5521 439C                            u5281 1928                            u4801 4960  
                          u5441 2A3A                            u5361 2786                            u3850 1EC4  
                          u3770 1DEC                            u3690 1D36                            u4490 265E  
                          u4570 3474                            u4538 33F4                            u3930 5496  
                          u5610 4864                            u2970 509C                            u5530 43FC  
                          u5290 195C                            u4810 49B0                            u5450 2A52  
                          u5370 27B2                            u3851 1EC0                            u3771 1DE8  
                          u3691 1D32                            u4571 346C                            u6307 3922  
                          u3931 5492                            u6227 422E                            u6147 4EFA  
                          u5611 485A                            u2971 5098                            u6067 4412  
                          u5531 43F8                            u5291 1958                            u4811 49AC  
                          u5451 2A4E                            u5371 27AE                            u4900 2AE6  
                          u3780 1E00                            u4740 3634                            u4708 35B8  
                          u4660 356E                            u3940 54E2                            u5460 4ECA  
                          u2980 50C4                            u3860 3C90                            u5540 4458  
                          u5700 4074                            u4820 49C8                            u5380 280E  
                          u4901 2AE2                            u3781 1DFC                            u4741 362C  
                          u4661 356A                            u6317 3986                            u3941 54DE  
                          u6237 42B8                            u6157 4F3A                            u5461 4EC6  
                          u2981 50C0                            u3861 3C8C                            u6077 446E  
                          u5541 4454                            u5701 4070                            u4821 49C4  
                          u5381 280A                            u4910 2AF6                            u3918 594A  
                          u3790 1E1A                            u4670 3580                            u4638 34F8  
                          u4590 34AC                            u4558 342C                            u3950 54FA  
                          u5470 4EEE                            u5630 489E                            u2990 50FA  
                          u3870 3CDA                            u5550 44B4                            u5710 40A6  
                          u4830 49D8                            u5390 286A                            u4911 2AF2  
                          u3791 1E16                            u4495 2654                            u4671 3578  
                          u4591 34A4                            u6407 4C00                            u6327 3A02  
                          u3951 54F6                            u6247 42EA                            u6167 4F72  
                          u5471 4EEA                            u5631 489A                            u6087 58FA  
                          u2991 50F6                            u3871 3CD6                            u5551 44B0  
                          u5711 40A2                            u4831 49D4                            u5391 2866  
                          u4920 2B36                            u4760 366C                            u5480 4F1E  
                          u5640 48AC                            u3960 5D50                            u3880 3CFE  
                          u5720 40CC                            u4840 4A00                            u5800 2F36  
                          u5560 5586                            u4921 2B32                            u4761 3668  
                          u6417 4C24                            u6337 3A7E                            u6257 54C0  
                          u6177 4A74                            u5481 4F1A                            u5641 48A8  
                          u6097 47F4                            u3961 5D4C                            u3881 3CFA  
                          u5721 40C8                            u4841 49FC                            u5801 2F32  
                          u5561 5582                            u4930 2B76                            u3970 1EF2  
                          u4738 3600                            u4690 35B6                            u4658 3534  
                          u5490 4F30                            u5650 48BA                            u5570 47CC  
                          u3890 3DA2                            u4770 5A3E                            u5730 40DE  
                          u4850 4A2A                            u5810 2F98                            u4931 2B72  
                          u3971 1EEE                            u6507 3614                            u4691 35AE  
                          u6427 340A                            u6347 5C52                            u6267 5504  
                          u6187 4ABC                            u5491 4F2C                            u5651 48B6  
                          u5571 47C8                            u3891 3D9E                            u4771 5A3A  
                          u5731 40DA                            u4851 4A26                            u5811 2F94  
                          u4940 2BEC                            u4860 2A6E                            u3980 1F04  
                          u4588 3476                            u5660 48DE                            u5628 4868  
                          u5580 47DA                            u4780 5A54                            u5740 4126  
                          u5820 2FFA                            u4941 2BE8                            u4861 2A6A  
                          u3981 1F00                            u6517 364A                            u6437 3442  
                          u6357 5C72                            u6277 5358                            u6197 4B04  
                          u5661 48DA                            u5581 47D6                            u4781 5A50  
                          u5741 4122                            u5821 2FF6                            u4950 2C0E  
                          u4870 2A80                            u3990 1F14                            u4758 3636  
                          u5590 480E                            u5750 416C                            u5670 3FFE  
                          u4790 4940                            u5830 305C                            u6527 5CD2  
                          u4951 2C0A                            u4871 2A7C                            u3991 1F10  
                          u6447 348C                            u6367 5C92                            u6287 38A6  
                          u5591 480A                            u5751 4168                            u5671 3FFA  
                          u4791 493C                            u5831 3058                            u4960 2C38  
                          u4880 2A90                            u4688 3582                            u5680 401E  
                          u5840 30BE                            u5760 2E00                            u6537 5B4C  
                          u4961 2C34                            u4881 2A8C                            u6457 34C4  
                          u6377 5CB2                            u6297 38C2                            u5681 401A  
                          u5841 30BA                            u5761 2DFC                            u4970 2C5C  
                          u4890 2AD4                            u5690 4044                            u5770 2E10  
                          u5850 3730                            u4971 2C58                            u4891 2AD0  
                          u6467 3512                            u6387 4BB8                            u5691 4040  
                          u5771 2E0C                            u5907 37FC                            u5851 372C  
                          u4980 2C72                            u5780 2E72                            u5860 3762  
                          u4981 2C6E                            u6477 354E                            u6397 4BDC  
                          u5781 2E6E                            u5917 5524                            u5861 375E  
                          u4990 2C90                            u5790 2ED4                            u5870 37C2  
                          u4991 2C8C                            u6487 3596                            u5791 2ED0  
                          u5927 555A                            u5871 37BE                            u5880 3866  
                          u6497 35CC                            u5937 272A                            u5881 3862  
                          u5947 498E                            u5957 49E2                            u5967 4A0A  
                          u5977 4A34                            u5987 4146                            u5997 5168  
                          abs@a 0013                            _dbuf 0146                            _main 366E  
                          _dtoa 30DE                turning_action@mL 0034                turning_action@mR 0036  
                          _prec 00FA                            _nout 013E                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 5456                            prodh 000FF4                            prodl 000FF3  
                          start 0030                    main@accident 0175                  ?_color_display 0058  
                 test_action@mL 002C                   test_action@mR 002E                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 5762                 __end_of_HighISR 0030                    ___param_bank 000000  
                ?_color_predict 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 4648       amb_light_measure@CC_amb_1 0072  
     amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076                 __end_of___fladd 1ED8  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 47AC  
               __end_of___fldiv 2DEE                 __end_of___awdiv 5456                 __end_of___flneg 5ACE  
               __end_of___flmul 2302                 __end_of___flsub 5898                 __end_of___fltol 4DB4  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 5CA2  
                         _LED_C 5CC2                           _LED_G 5C82                           _LED_R 5C42  
                         i2l504 002C                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5D56  
    __end_of_I2C_2_Master_Start 5D8C         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5D62  
               __end_of_compare 5A5C                    compare@lower 006A                           _flags 00FC  
                         _color 0144                    compare@upper 006E                           _fputc 5078  
                         _fputs 5898                           _setup 47AC                           pad@fp 0011  
                         _width 0140                           _putch 5D8E                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 5A96                 detect_wall@stop 007C                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 5712                color_display@buf 0079  
       __end_of_color_read_Blue 5802           _I2C_2_Master_RepStart 5D6E               _calibration_motor 4EB8  
               ?_color_read_Red 0005                 __initialization 59A2                   short_burst@mL 0020  
                 short_burst@mR 0022              ?_calibration_motor 0032                    __end_of_main 388E  
                  __end_of_dtoa 33C2                   main@amb_light 016E            __end_of_detect_color 1A18  
                  __end_of_stop 5514          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
           ??_calibration_motor 0036                          ??_main 00F6                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4FA6                    turn45@i_1331 0027  
                  turn45@i_1333 0029                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_setup 0078  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5412 000A                          i2l5414 001A  
                        i2l5416 0022                          i2l5418 0028                       ??_HighISR 0001  
      __end_of_color_click_init 5B6C                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A       __end_of_calibration_motor 4FA6                __end_of___xxtofl 3FD6  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 4DB4                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5C1C                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                     ??___flsub 0019                       ??___fltol 0060                          _goback 26B0  
                 compare@result 0070                          _memory 0100                          clear_0 59C0  
              ___awdiv@quotient 000D                          _motorL 0131                          _motorR 0128  
                        isa$std 000001                          pad@buf 0013                          _turn45 4186  
                        _roundf 2302                          dtoa@fp 001C                          _strlen 5ACE  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5B38  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E6  
                test_function@w 00E8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 5662                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                ??_turning_action 0038                    ?_test_action 002C  
                     ??_sprintf 0058                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                  ?_short_burst 0020                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                   main@stop_time 0173                      __accesstop 0060  
       __end_of__initialization 59D0                   verify_color@m 0092                   verify_color@w 0094  
      __end_of_color_read_Clear 5852                      ___flneg@f1 0001        __end_of_color_read_Green 57B2  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 5CC2                   __end_of_LED_C 5CE2                   __end_of_LED_G 5CA2  
                 __end_of_LED_R 5C62                ?_color_read_Blue 0005                 _Interrupts_init 5D62  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4904                    __pidataBANK0 5D8C  
                 __end_of_fputc 5142               detect_color@color 0089                   __end_of_fputs 58DC  
                 __end_of_setup 4904                   __end_of_putch 5D90                   __end_of_toint 0E05  
           __end_of_Timer0_init 5D3E                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001                         ??_fputc 0005  
                       ??_fputs 000E                         ??_setup 0080                         ??_putch 0001  
                    __pbssBANK0 00FA                      __pbssBANK1 0100             calibration_motor@mL 0032  
           calibration_motor@mR 0034                color_predict@buf 0079               _color_writetoaddr 5CE2  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?___wmul 0001                         ?_goback 002C  
                       ?_turn45 0020                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                         _LED_OFF 5C62                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 006E                    _detect_color 0E14   __end_of_color_data_collection 44C0  
       __end_of_Interrupts_init 5D6E          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5D02              _I2C_2_Master_Start 5D82  
                    _initUSART4 5D02              _I2C_2_Master_Write 5D56                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 00F2                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5D20         sendStringSerial4@string 0002  
                       ___aodiv 44C0                         ___fladd 1A18                         ___aomod 4648  
                       ___fldiv 2A54                         ___awdiv 5392                         ___flneg 5A96  
                       ___flmul 1ED8                         ___flsub 5852                         ___fltol 4CAC  
           ?_I2C_2_Master_Start 0001        fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 59A2  
                       __ramtop 0E00                      _read_color 5662                         __ptext0 366E  
                       __ptext1 5514                         __ptext2 2DEE                         __ptext3 26B0  
                       __ptext4 4904                         __ptext5 3FD6                         __ptext6 5142  
                       __ptext7 0E14                         __ptext8 5A22                         __ptext9 432A  
                       _compare 5A22         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005               detect_wall@CC_amb 0078               detect_wall@CG_amb 0072  
           turning_action@color 0038                       _T2HLTbits 000FBE                         _lroundf 5A5C  
                       goback@i 0032                         main@amb 0166                         _sprintf 56C0  
                       main@rgb 0176            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 59D0              setMotorPWM@PWMduty 0018                         fputc@fp 0003  
         __end_of_test_function 4186                         fputs@fp 000C               ?_color_click_init 0001  
               test_function@mL 00EA                 test_function@mR 00EC                 ??_fullSpeedBack 0025  
                    ??_pin_init 0001              ??_color_click_init 0005                         setup@mL 007C  
             __end_of_vfpfcnvrt 3E22                         setup@mR 007E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         turn45@i 002B                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                  main@start_time 0171                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 5960                 turn45@direction 0025  
__end_of_initDCmotors_parameter 5078                   ??_detect_wall 0070                       _PORTFbits 000F8E  
      test_function@stop_signal 00F4                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                ?_Interrupts_init 0001                     ___flmul@grs 0035  
                 ?_toggle_light 0001               ?_color_read_Clear 0005               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0092  
         __end_of_color_display 5600                      main@motorL 019A                      main@motorR 01A3  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 007F  
                detect_color@BC 007B                  detect_color@BG 008C                  detect_color@GB 0083  
                detect_color@GG 0087                  detect_color@BR 0085                  detect_color@GR 007D  
                detect_color@RB 0081                  detect_color@RG 0079                  detect_color@RR 008A  
         __end_of_color_predict 5BCA                  __end_of___flge 4EB8                  _fullSpeedAhead 52CE  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5C42                     ?_read_color 000C                  __end_of_goback 2A54  
                __end_of_turn45 432A                  __end_of_roundf 26B0                  __end_of_strlen 5B04  
           color_read_Clear@tmp 000A             start_initialization 59A2                     __end_of_abs 5A22  
                   __end_of_pad 52CE             __end_of_detect_wall 5208                 turn45@turn_time 0024  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 59A2                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 5392  
                      ??___flge 0009                        ??___wmul 0005                        ??_goback 0030  
                   __pdataBANK0 00FE                        ??_turn45 0026                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 0166  
              ___aodiv@dividend 0001            detect_wall@amb_light 006E                        ?_HighISR 0001  
                     _dtoa$2616 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B              test_function@color 00F3  
                   _centisecond 0142            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     _detect_wall 5142                     __smallconst 0E00  
             _I2C_2_Master_Idle 5BF4               _I2C_2_Master_Init 5BCA               _I2C_2_Master_Read 591E  
             _I2C_2_Master_Stop 5D78          toggle_light@toggletime 0001                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 5B6C           _color_data_collection 432A  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u589_40 001A                        i2u589_41 0016  
          detect_wall@threshold 007A                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0145                       _vfpfcnvrt 3C6C                      setup@white 0078  
     __end_of_I2C_2_Master_Idle 5C1C            __end_of_toggle_light 366E       __end_of_I2C_2_Master_Init 5BF4  
     __end_of_I2C_2_Master_Read 5960               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5D82  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 5590  
        test_function@amb_light 00F0                       main@white 017E               ??_color_read_Blue 0007  
                 detect_color@m 0071                   detect_color@w 0073                   ??_test_action 0030  
               _calibrate_white 388E       __end_of_sendStringSerial4 5B9C                   detect_wall@mL 006A  
                 detect_wall@mR 006C                   ??_short_burst 0024               _amb_light_measure 4B84  
 __end_of_I2C_2_Master_RepStart 5D78              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3C6C  
                    roundf@F527 013A                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 4A56                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                      sprintf@fmt 0062  
                      ___xxtofl 3E22                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5D20                        __ptext10 5662                        __ptext11 5B9C  
                      __ptext20 5078                        __ptext12 5590                        __ptext21 5D8E  
                      __ptext13 56C0                        __ptext30 4A56                        __ptext22 59E2  
                      __ptext14 5600                        __ptext31 4186                        __ptext23 4648  
                      __ptext15 3C6C                        __ptext40 57B2                        __ptext32 5456  
                      __ptext24 44C0                        __ptext16 30DE                        __ptext41 5C42  
                      __ptext33 52CE                        __ptext25 5B6C                        __ptext17 5208  
                      __ptext50 1A18                        __ptext42 5C62                        __ptext34 3A98  
                      __ptext26 5D3E                        __ptext18 5ACE                        __ptext51 5A96  
                      __ptext43 5C82                        __ptext35 5C1C                        __ptext27 58DC  
                      __ptext19 5898                        __ptext60 5CC2                        __ptext52 1ED8  
                      __ptext44 5CA2                        __ptext36 5392                        __ptext28 47AC  
                      __ptext61 5B04                        __ptext53 4DB4                        __ptext45 4B84  
                      __ptext37 388E                        __ptext29 4EB8                        __ptext70 5BF4  
                      __ptext62 5D02                        __ptext54 4CAC                        __ptext46 33C2  
                      __ptext38 5712                        __ptext71 5BCA                        __ptext63 4FA6  
                      __ptext55 5802                        __ptext47 5A5C                        __ptext39 5762  
                      __ptext72 5D20                        __ptext64 5960                        __ptext56 5D6E  
                      __ptext48 2302                        __ptext73 5D62                        __ptext65 5B38  
                      __ptext57 591E                        __ptext49 5852                        __ptext66 5CE2  
                      __ptext58 3E22                        __ptext67 5D56                        __ptext59 2A54  
                      __ptext68 5D78                        __ptext69 5D82       __end_of_amb_light_measure 4CAC  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
        test_function@test_code 00F5             __end_of_test_action 4B84              __end_of_read_color 56C0  
                      _pin_init 5B04                  _turning_action 2DEE             __end_of_short_burst 591E  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00FE                        goback@mL 002C                        goback@mR 002E  
                      _vfprintf 5600                ___aomod@dividend 0001         __end_of_calibrate_white 3A98  
                    _INTCONbits 000FF2                     _setMotorPWM 3A98                   ?_detect_color 0071  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C          __end_of_turning_action 30DE                ??_fullSpeedAhead 001E  
                 _test_function 3FD6                  setup@amb_light 0082                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                        setup@amb 007A                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                        turn45@mL 0020  
                      turn45@mR 0022                _color_click_init 5B38                    ?_detect_wall 006A  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$2944 008E  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                  ??_detect_color 0075  
                   _test_action 4A56                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 5D3E                     _short_burst 58DC  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                  ?_test_function 00E6  
               ?_turning_action 0034                    _toggle_light 33C2                    ___aomod@sign 0012  
                  _verify_color 5514                     _roundf$2946 004F                     _roundf$2947 0049  
                 _color_display 5590                 main@stop_signal 0170  
