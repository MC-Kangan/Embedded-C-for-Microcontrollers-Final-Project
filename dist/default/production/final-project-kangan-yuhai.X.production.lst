

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Mar 11 17:26:16 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99  0000                     
   100                           ; Version 2.35
   101                           ; Generated 05/05/2021 GMT
   102                           ; 
   103                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK0
   137  0058DE                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _SENSITIVITY
   141  0058DE  0A                 	db	10
   142                           
   143                           ;initializer for _CALIBRATION_180
   144  0058DF  14                 	db	20
   145                           
   146                           ;initializer for _CALIBRATION_135
   147  0058E0  0A                 	db	10
   148                           
   149                           	psect	smallconst
   150  000E00                     __psmallconst:
   151                           	callstack 0
   152  000E00  00                 	db	0
   153  000E01  0000               	dw	0
   154  000E03  4B00               	dw	19200
   155  000E05                     __end_of_toint:
   156                           	callstack 0
   157  0000                     _TX4REG	set	3812
   158  0000                     _RC4STAbits	set	3815
   159  0000                     _SP4BRGH	set	3814
   160  0000                     _LATEbits	set	3965
   161  0000                     _TRISGbits	set	3975
   162  0000                     _TRISEbits	set	3973
   163  0000                     _LATGbits	set	3967
   164  0000                     _LATFbits	set	3966
   165  0000                     _TRISFbits	set	3974
   166  0000                     _SSP2CON2bits	set	3802
   167  0000                     _LATG	set	3967
   168  0000                     _LATE	set	3965
   169  0000                     _RX4PPS	set	3605
   170  0000                     _SSP2CLKPPS	set	3612
   171  0000                     _SSP2DATPPS	set	3613
   172  0000                     _ANSELDbits	set	3751
   173  0000                     _SSP2ADD	set	3798
   174  0000                     _SSP2CON1bits	set	3801
   175  0000                     _LATAbits	set	3961
   176  0000                     _LATDbits	set	3964
   177  0000                     _LATHbits	set	3968
   178  0000                     _TRISDbits	set	3972
   179  0000                     _TRISHbits	set	3976
   180  0000                     _PORTFbits	set	3982
   181  0000                     _T2PR	set	4028
   182  0000                     _T2CONbits	set	4029
   183  0000                     _PWM7DCH	set	4000
   184  0000                     _PWM6DCH	set	4003
   185  0000                     _TRISAbits	set	3969
   186  0000                     _TRISCbits	set	3971
   187  0000                     _LATCbits	set	3963
   188  0000                     _RC4REG	set	3811
   189  0000                     _SP4BRGL	set	3813
   190  0000                     _TX4STAbits	set	3816
   191  0000                     _BAUD4CONbits	set	3817
   192  0000                     _SSP2CON2	set	3802
   193  0000                     _SSP2STAT	set	3800
   194  0000                     _ANSELFbits	set	3764
   195  0000                     _SSP2BUF	set	3797
   196  0000                     _PIE0bits	set	3625
   197  0000                     _PIE4bits	set	3629
   198  0000                     _PIR4bits	set	3639
   199  0000                     _RC0PPS	set	3682
   200  0000                     _RC7PPS	set	3689
   201  0000                     _RD5PPS	set	3695
   202  0000                     _RE2PPS	set	3700
   203  0000                     _RD6PPS	set	3696
   204  0000                     _TMR0L	set	4051
   205  0000                     _TMR0H	set	4052
   206  0000                     _T0CON0bits	set	4053
   207  0000                     _T2CLKCONbits	set	4031
   208  0000                     _T2HLTbits	set	4030
   209  0000                     _PWM6CONbits	set	4004
   210  0000                     _PWM7CONbits	set	4001
   211  0000                     _PIR0bits	set	3635
   212  0000                     _INTCONbits	set	4082
   213  0000                     _T0CON1bits	set	4054
   214  000E05                     STR_1:
   215  000E05  25                 	db	37
   216  000E06  64                 	db	100	;'d'
   217  000E07  09                 	db	9
   218  000E08  25                 	db	37
   219  000E09  64                 	db	100	;'d'
   220  000E0A  09                 	db	9
   221  000E0B  25                 	db	37
   222  000E0C  64                 	db	100	;'d'
   223  000E0D  09                 	db	9
   224  000E0E  25                 	db	37
   225  000E0F  64                 	db	100	;'d'
   226  000E10  0D                 	db	13
   227  000E11  0A                 	db	10
   228  000E12  00                 	db	0
   229  000E13  00                 	db	0	; dummy byte at the end
   230  0000                     
   231                           ; #config settings
   232                           
   233                           	psect	cinit
   234  00530E                     __pcinit:
   235                           	callstack 0
   236  00530E                     start_initialization:
   237                           	callstack 0
   238  00530E                     __initialization:
   239                           	callstack 0
   240                           
   241                           ; Initialize objects allocated to BANK0 (3 bytes)
   242                           ; load TBLPTR registers with __pidataBANK0
   243  00530E  0EDE               	movlw	low __pidataBANK0
   244  005310  6EF6               	movwf	tblptrl,c
   245  005312  0E58               	movlw	high __pidataBANK0
   246  005314  6EF7               	movwf	tblptrh,c
   247  005316  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   248  005318  6EF8               	movwf	tblptru,c
   249  00531A  0009               	tblrd		*+	;fetch initializer
   250  00531C  CFF5 F0FC          	movff	tablat,__pdataBANK0
   251  005320  0009               	tblrd		*+	;fetch initializer
   252  005322  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   253  005326  0009               	tblrd		*+	;fetch initializer
   254  005328  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   255                           
   256                           ; Clear objects allocated to BANK1 (177 bytes)
   257  00532C  EE01  F000         	lfsr	0,__pbssBANK1
   258  005330  0EB1               	movlw	177
   259  005332                     clear_0:
   260  005332  6AEE               	clrf	postinc0,c
   261  005334  06E8               	decf	wreg,f,c
   262  005336  E1FD               	bnz	clear_0
   263                           
   264                           ; Clear objects allocated to BANK0 (17 bytes)
   265  005338  EE00  F0EB         	lfsr	0,__pbssBANK0
   266  00533C  0E11               	movlw	17
   267  00533E                     clear_1:
   268  00533E  6AEE               	clrf	postinc0,c
   269  005340  06E8               	decf	wreg,f,c
   270  005342  E1FD               	bnz	clear_1
   271                           
   272                           ; Clear objects allocated to COMRAM (2 bytes)
   273  005344  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   274  005346  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   275  005348                     end_of_initialization:
   276                           	callstack 0
   277  005348                     __end_of__initialization:
   278                           	callstack 0
   279  005348  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   280  00534A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   281  00534C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   282  00534E  6EF8               	movwf	tblptru,c
   283  005350  0E0E               	movlw	high __Lsmallconst
   284  005352  6EF7               	movwf	tblptrh,c
   285  005354  0100               	movlb	0
   286  005356  EFFE  F021         	goto	_main	;jump to C main() function
   287                           
   288                           	psect	bssCOMRAM
   289  00005A                     __pbssCOMRAM:
   290                           	callstack 0
   291  00005A                     _array_index:
   292                           	callstack 0
   293  00005A                     	ds	1
   294  00005B                     _TxBufWriteCnt:
   295                           	callstack 0
   296  00005B                     	ds	1
   297                           
   298                           	psect	bssBANK0
   299  0000EB                     __pbssBANK0:
   300                           	callstack 0
   301  0000EB                     _nout:
   302                           	callstack 0
   303  0000EB                     	ds	2
   304  0000ED                     _width:
   305                           	callstack 0
   306  0000ED                     	ds	2
   307  0000EF                     _prec:
   308                           	callstack 0
   309  0000EF                     	ds	2
   310  0000F1                     _flags:
   311                           	callstack 0
   312  0000F1                     	ds	2
   313  0000F3                     _stop_move:
   314                           	callstack 0
   315  0000F3                     	ds	2
   316  0000F5                     _start_move:
   317                           	callstack 0
   318  0000F5                     	ds	2
   319  0000F7                     _second:
   320                           	callstack 0
   321  0000F7                     	ds	2
   322  0000F9                     _TxBufReadCnt:
   323                           	callstack 0
   324  0000F9                     	ds	1
   325  0000FA                     _RxBufReadCnt:
   326                           	callstack 0
   327  0000FA                     	ds	1
   328  0000FB                     _RxBufWriteCnt:
   329                           	callstack 0
   330  0000FB                     	ds	1
   331                           
   332                           	psect	dataBANK0
   333  0000FC                     __pdataBANK0:
   334                           	callstack 0
   335  0000FC                     _SENSITIVITY:
   336                           	callstack 0
   337  0000FC                     	ds	1
   338  0000FD                     _CALIBRATION_180:
   339                           	callstack 0
   340  0000FD                     	ds	1
   341  0000FE                     _CALIBRATION_135:
   342                           	callstack 0
   343  0000FE                     	ds	1
   344                           
   345                           	psect	bssBANK1
   346  000100                     __pbssBANK1:
   347                           	callstack 0
   348  000100                     _EUSART4TXbuf:
   349                           	callstack 0
   350  000100                     	ds	60
   351  00013C                     _memory:
   352                           	callstack 0
   353  00013C                     	ds	40
   354  000164                     _EUSART4RXbuf:
   355                           	callstack 0
   356  000164                     	ds	20
   357  000178                     _motorR:
   358                           	callstack 0
   359  000178                     	ds	10
   360  000182                     _motorL:
   361                           	callstack 0
   362  000182                     	ds	10
   363  00018C                     roundf@F527:
   364                           	callstack 0
   365  00018C                     	ds	4
   366  000190                     _color:
   367                           	callstack 0
   368  000190                     	ds	1
   369  000191                     _dbuf:
   370                           	callstack 0
   371  000191                     	ds	32
   372                           
   373                           	psect	cstackBANK1
   374  0001B1                     __pcstackBANK1:
   375                           	callstack 0
   376  0001B1                     ??_main:
   377                           
   378                           ; 1 bytes @ 0x0
   379  0001B1                     	ds	2
   380  0001B3                     main@stop_signal:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x2
   384  0001B3                     	ds	1
   385  0001B4                     main@white:
   386                           	callstack 0
   387                           
   388                           ; 26 bytes @ 0x3
   389  0001B4                     	ds	26
   390  0001CE                     main@rgb:
   391                           	callstack 0
   392                           
   393                           ; 8 bytes @ 0x1D
   394  0001CE                     	ds	8
   395  0001D6                     main@motorL:
   396                           	callstack 0
   397                           
   398                           ; 10 bytes @ 0x25
   399  0001D6                     	ds	10
   400  0001E0                     main@motorR:
   401                           	callstack 0
   402                           
   403                           ; 10 bytes @ 0x2F
   404  0001E0                     	ds	10
   405                           
   406                           	psect	cstackBANK0
   407  000060                     __pcstackBANK0:
   408                           	callstack 0
   409  000060                     ?_sprintf:
   410                           	callstack 0
   411  000060                     sprintf@s:
   412                           	callstack 0
   413  000060                     _roundf$3201:
   414                           	callstack 0
   415                           
   416                           ; 4 bytes @ 0x0
   417  000060                     	ds	2
   418  000062                     sprintf@fmt:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2
   422  000062                     	ds	2
   423  000064                     roundf@e:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x4
   427  000064                     	ds	2
   428  000066                     _roundf$3200:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0x6
   432  000066                     	ds	4
   433  00006A                     roundf@u:
   434                           	callstack 0
   435                           
   436                           ; 4 bytes @ 0xA
   437  00006A                     	ds	2
   438  00006C                     sprintf@ap:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xC
   442  00006C                     	ds	2
   443  00006E                     roundf@y:
   444                           	callstack 0
   445  00006E                     sprintf@f:
   446                           	callstack 0
   447                           
   448                           ; 11 bytes @ 0xE
   449  00006E                     	ds	4
   450  000072                     ?___fltol:
   451                           	callstack 0
   452  000072                     ___fltol@f1:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x12
   456  000072                     	ds	4
   457  000076                     ?_lroundf:
   458                           	callstack 0
   459  000076                     lroundf@x:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x16
   463  000076                     	ds	3
   464  000079                     color_display@m:
   465                           	callstack 0
   466  000079                     color_predict@buf:
   467                           	callstack 0
   468                           
   469                           ; 100 bytes @ 0x19
   470  000079                     	ds	1
   471  00007A                     compare@lower:
   472                           	callstack 0
   473  00007A                     distance_measure@mL:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x1A
   477  00007A                     	ds	1
   478  00007B                     color_display@buf:
   479                           	callstack 0
   480                           
   481                           ; 100 bytes @ 0x1B
   482  00007B                     	ds	1
   483  00007C                     compare@value2compare:
   484                           	callstack 0
   485  00007C                     distance_measure@mR:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x1C
   489  00007C                     	ds	2
   490  00007E                     compare@upper:
   491                           	callstack 0
   492  00007E                     distance_measure@w:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x1E
   496  00007E                     	ds	2
   497  000080                     detect_color@m:
   498                           	callstack 0
   499  000080                     distance_measure@CG_amb:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x20
   503  000080                     	ds	2
   504  000082                     detect_color@w:
   505                           	callstack 0
   506  000082                     distance_measure@threshold:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x22
   510  000082                     	ds	2
   511  000084                     detect_color@RB:
   512                           	callstack 0
   513  000084                     _distance_measure$3199:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x24
   517  000084                     	ds	2
   518  000086                     detect_color@GB:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x26
   522  000086                     	ds	2
   523  000088                     detect_color@GC:
   524                           	callstack 0
   525  000088                     distance_measure@CC_amb:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x28
   529  000088                     	ds	2
   530  00008A                     distance_measure@stop:
   531                           	callstack 0
   532  00008A                     detect_color@RG:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x2A
   536  00008A                     	ds	2
   537  00008C                     detect_color@GR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x2C
   541  00008C                     	ds	2
   542  00008E                     detect_color@GG:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x2E
   546  00008E                     	ds	2
   547  000090                     detect_color@RR:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x30
   551  000090                     	ds	2
   552  000092                     detect_color@BR:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x32
   556  000092                     	ds	2
   557  000094                     detect_color@BB:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x34
   561  000094                     	ds	2
   562  000096                     detect_color@color:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x36
   566  000096                     	ds	1
   567  000097                     detect_color@BG:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x37
   571  000097                     	ds	2
   572  000099                     _detect_color$3198:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x39
   576  000099                     	ds	4
   577  00009D                     verify_color@m:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x3D
   581  00009D                     	ds	2
   582  00009F                     verify_color@w:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x3F
   586  00009F                     	ds	2
   587  0000A1                     verify_color@color3:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x41
   591  0000A1                     	ds	2
   592  0000A3                     verify_color@color:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x43
   596  0000A3                     	ds	1
   597  0000A4                     verify_color@color2:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x44
   601  0000A4                     	ds	57
   602  0000DD                     color_predict@color:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x7D
   606  0000DD                     	ds	2
   607  0000DF                     color_data_collection@m:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x7F
   611  0000DF                     	ds	2
   612  0000E1                     ??_color_data_collection:
   613                           
   614                           ; 1 bytes @ 0x81
   615  0000E1                     	ds	2
   616  0000E3                     color_data_collection@i:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x83
   620  0000E3                     	ds	2
   621  0000E5                     color_data_collection@j:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x85
   625  0000E5                     	ds	2
   626  0000E7                     color_data_collection@k:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x87
   630  0000E7                     	ds	2
   631  0000E9                     color_data_collection@x:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x89
   635  0000E9                     	ds	2
   636                           
   637                           	psect	cstackCOMRAM
   638  000001                     __pcstackCOMRAM:
   639                           	callstack 0
   640  000001                     ??_LowISR:
   641  000001                     
   642                           ; 1 bytes @ 0x0
   643  000001                     	ds	2
   644  000003                     ??_LED_OFF:
   645  000003                     ??_LED_R:
   646  000003                     ??_LED_C:
   647  000003                     ??_LED_B:
   648  000003                     ??_LED_G:
   649  000003                     ??_I2C_2_Master_Idle:
   650  000003                     ?_strlen:
   651                           	callstack 0
   652  000003                     ?___wmul:
   653                           	callstack 0
   654  000003                     ?___fladd:
   655                           	callstack 0
   656  000003                     ?___flneg:
   657                           	callstack 0
   658  000003                     ?___xxtofl:
   659                           	callstack 0
   660  000003                     ?___aodiv:
   661                           	callstack 0
   662  000003                     ?___aomod:
   663                           	callstack 0
   664  000003                     toggle_light@toggletime:
   665                           	callstack 0
   666  000003                     sendCharSerial4@charToSend:
   667                           	callstack 0
   668  000003                     initDCmotorsPWM@PWMperiod:
   669                           	callstack 0
   670  000003                     initDCmotors_parameter@motorL:
   671                           	callstack 0
   672  000003                     ___wmul@multiplier:
   673                           	callstack 0
   674  000003                     fputc@c:
   675                           	callstack 0
   676  000003                     strlen@s:
   677                           	callstack 0
   678  000003                     ___flge@ff1:
   679                           	callstack 0
   680  000003                     ___flneg@f1:
   681                           	callstack 0
   682  000003                     ___fladd@b:
   683                           	callstack 0
   684  000003                     ___xxtofl@val:
   685                           	callstack 0
   686  000003                     ___aodiv@dividend:
   687                           	callstack 0
   688  000003                     ___aomod@dividend:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x2
   692  000003                     	ds	1
   693  000004                     ??_I2C_2_Master_Read:
   694  000004                     ??_toggle_light:
   695  000004                     I2C_2_Master_Write@data_byte:
   696                           	callstack 0
   697  000004                     sendStringSerial4@string:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x3
   701  000004                     	ds	1
   702  000005                     color_writetoaddr@value:
   703                           	callstack 0
   704  000005                     I2C_2_Master_Read@ack:
   705                           	callstack 0
   706  000005                     initDCmotors_parameter@motorR:
   707                           	callstack 0
   708  000005                     ___wmul@multiplicand:
   709                           	callstack 0
   710  000005                     fputc@fp:
   711                           	callstack 0
   712  000005                     strlen@a:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x4
   716  000005                     	ds	1
   717  000006                     toggle_light@i:
   718                           	callstack 0
   719  000006                     color_writetoaddr@address:
   720                           	callstack 0
   721  000006                     I2C_2_Master_Read@tmp:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x5
   725  000006                     	ds	1
   726  000007                     ??_fputc:
   727  000007                     ??_color_click_init:
   728  000007                     ??___xxtofl:
   729  000007                     ?_color_read_Red:
   730                           	callstack 0
   731  000007                     ?_color_read_Blue:
   732                           	callstack 0
   733  000007                     ?_color_read_Green:
   734                           	callstack 0
   735  000007                     ?_color_read_Clear:
   736                           	callstack 0
   737  000007                     toggle_light@lightnumber:
   738                           	callstack 0
   739  000007                     ___wmul@product:
   740                           	callstack 0
   741  000007                     ___flge@ff2:
   742                           	callstack 0
   743  000007                     ___fladd@a:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x6
   747  000007                     	ds	2
   748  000009                     ??_color_read_Red:
   749  000009                     ??_color_read_Blue:
   750  000009                     ??_color_read_Green:
   751  000009                     ??_color_read_Clear:
   752  000009                     ?___awdiv:
   753                           	callstack 0
   754  000009                     ___awdiv@dividend:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x8
   758  000009                     	ds	2
   759  00000B                     ??___fladd:
   760  00000B                     ??___flge:
   761  00000B                     ___xxtofl@sign:
   762                           	callstack 0
   763  00000B                     ___awdiv@divisor:
   764                           	callstack 0
   765  00000B                     ___aodiv@divisor:
   766                           	callstack 0
   767  00000B                     ___aomod@divisor:
   768                           	callstack 0
   769                           
   770                           ; 8 bytes @ 0xA
   771  00000B                     	ds	1
   772  00000C                     ___xxtofl@exp:
   773                           	callstack 0
   774  00000C                     color_read_Red@tmp:
   775                           	callstack 0
   776  00000C                     color_read_Blue@tmp:
   777                           	callstack 0
   778  00000C                     color_read_Green@tmp:
   779                           	callstack 0
   780  00000C                     color_read_Clear@tmp:
   781                           	callstack 0
   782  00000C                     fputs@s:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0xB
   786  00000C                     	ds	1
   787  00000D                     ___awdiv@counter:
   788                           	callstack 0
   789  00000D                     ___xxtofl@arg:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0xC
   793  00000D                     	ds	1
   794  00000E                     ___awdiv@sign:
   795                           	callstack 0
   796  00000E                     read_color@m:
   797                           	callstack 0
   798  00000E                     calibrate_white@w:
   799                           	callstack 0
   800  00000E                     fputs@fp:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0xD
   804  00000E                     	ds	1
   805  00000F                     ___fladd@signs:
   806                           	callstack 0
   807  00000F                     ___awdiv@quotient:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0xE
   811  00000F                     	ds	1
   812  000010                     ??_calibrate_white:
   813  000010                     ___fladd@aexp:
   814                           	callstack 0
   815  000010                     fputs@c:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0xF
   819  000010                     	ds	1
   820  000011                     ?___fldiv:
   821                           	callstack 0
   822  000011                     ___fladd@bexp:
   823                           	callstack 0
   824  000011                     setMotorPWM@m:
   825                           	callstack 0
   826  000011                     fputs@i:
   827                           	callstack 0
   828  000011                     ___fldiv@b:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x10
   832  000011                     	ds	1
   833  000012                     ___fladd@grs:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x11
   837  000012                     	ds	1
   838  000013                     ??_setMotorPWM:
   839  000013                     ?_pad:
   840                           	callstack 0
   841  000013                     ?___flsub:
   842                           	callstack 0
   843  000013                     ___aodiv@counter:
   844                           	callstack 0
   845  000013                     ___aomod@counter:
   846                           	callstack 0
   847  000013                     pad@fp:
   848                           	callstack 0
   849  000013                     ___flsub@b:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x12
   853  000013                     	ds	1
   854  000014                     ___aodiv@sign:
   855                           	callstack 0
   856  000014                     ___aomod@sign:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x13
   860  000014                     	ds	1
   861  000015                     ?_abs:
   862                           	callstack 0
   863  000015                     pad@buf:
   864                           	callstack 0
   865  000015                     abs@a:
   866                           	callstack 0
   867  000015                     ___fldiv@a:
   868                           	callstack 0
   869  000015                     ___aodiv@quotient:
   870                           	callstack 0
   871                           
   872                           ; 8 bytes @ 0x14
   873  000015                     	ds	2
   874  000017                     ??_abs:
   875  000017                     pad@p:
   876                           	callstack 0
   877  000017                     ___flsub@a:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x16
   881  000017                     	ds	2
   882  000019                     ??___fldiv:
   883  000019                     ??_pad:
   884                           
   885                           ; 1 bytes @ 0x18
   886  000019                     	ds	1
   887  00001A                     setMotorPWM@PWMduty:
   888                           	callstack 0
   889  00001A                     pad@i:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x19
   893  00001A                     	ds	1
   894  00001B                     
   895                           ; 1 bytes @ 0x1A
   896  00001B                     	ds	1
   897  00001C                     stop@mL:
   898                           	callstack 0
   899  00001C                     fullSpeedAhead@mL:
   900                           	callstack 0
   901  00001C                     pad@w:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x1B
   905  00001C                     	ds	1
   906  00001D                     ___fldiv@rem:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x1C
   910  00001D                     	ds	1
   911  00001E                     ?_dtoa:
   912                           	callstack 0
   913  00001E                     stop@mR:
   914                           	callstack 0
   915  00001E                     fullSpeedAhead@mR:
   916                           	callstack 0
   917  00001E                     dtoa@fp:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x1D
   921  00001E                     	ds	2
   922  000020                     ??_stop:
   923  000020                     ??_fullSpeedAhead:
   924  000020                     dtoa@d:
   925                           	callstack 0
   926                           
   927                           ; 8 bytes @ 0x1F
   928  000020                     	ds	1
   929  000021                     ___fldiv@sign:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x20
   933  000021                     	ds	1
   934  000022                     turnLeft@mL:
   935                           	callstack 0
   936  000022                     turnRight@mL:
   937                           	callstack 0
   938  000022                     fullSpeedAhead_test@mL:
   939                           	callstack 0
   940  000022                     fullSpeedBack@mL:
   941                           	callstack 0
   942  000022                     short_burst@mL:
   943                           	callstack 0
   944  000022                     ___fldiv@new_exp:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x21
   948  000022                     	ds	2
   949  000024                     turnLeft@mR:
   950                           	callstack 0
   951  000024                     turnRight@mR:
   952                           	callstack 0
   953  000024                     fullSpeedAhead_test@mR:
   954                           	callstack 0
   955  000024                     fullSpeedBack@mR:
   956                           	callstack 0
   957  000024                     short_burst@mR:
   958                           	callstack 0
   959  000024                     ___fldiv@grs:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x23
   963  000024                     	ds	2
   964  000026                     ??_short_burst:
   965  000026                     ??_fullSpeedAhead_test:
   966  000026                     ??_fullSpeedBack:
   967  000026                     turnLeft@angle_left:
   968                           	callstack 0
   969  000026                     turnRight@angle_right:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x25
   973  000026                     	ds	1
   974  000027                     ??_turnRight:
   975  000027                     ??_turnLeft:
   976                           
   977                           ; 1 bytes @ 0x26
   978  000027                     	ds	1
   979  000028                     ??_dtoa:
   980  000028                     ___fldiv@bexp:
   981                           	callstack 0
   982  000028                     turnLeft@delay_135:
   983                           	callstack 0
   984  000028                     turnRight@delay_135:
   985                           	callstack 0
   986  000028                     short_reverse@mL:
   987                           	callstack 0
   988  000028                     reverse_square@mL:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x27
   992  000028                     	ds	1
   993  000029                     ___fldiv@aexp:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x28
   997  000029                     	ds	1
   998  00002A                     ?___flmul:
   999                           	callstack 0
  1000  00002A                     turnLeft@delay_180:
  1001                           	callstack 0
  1002  00002A                     turnRight@delay_180:
  1003                           	callstack 0
  1004  00002A                     short_reverse@mR:
  1005                           	callstack 0
  1006  00002A                     reverse_square@mR:
  1007                           	callstack 0
  1008  00002A                     ___flmul@b:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x29
  1012  00002A                     	ds	2
  1013  00002C                     ??_short_reverse:
  1014  00002C                     ??_reverse_square:
  1015  00002C                     turnLeft@i:
  1016                           	callstack 0
  1017  00002C                     turnRight@i:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x2B
  1021  00002C                     	ds	2
  1022  00002E                     turnLeft@i_1436:
  1023                           	callstack 0
  1024  00002E                     turnRight@i_1461:
  1025                           	callstack 0
  1026  00002E                     ___flmul@a:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x2D
  1030  00002E                     	ds	2
  1031  000030                     turnLeft@i_1437:
  1032                           	callstack 0
  1033  000030                     turnRight@i_1462:
  1034                           	callstack 0
  1035  000030                     _dtoa$2837:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x2F
  1039  000030                     	ds	2
  1040  000032                     ??___flmul:
  1041  000032                     turnLeft@delay:
  1042                           	callstack 0
  1043  000032                     turnRight@delay:
  1044                           	callstack 0
  1045  000032                     dtoa@p:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x31
  1049  000032                     	ds	2
  1050  000034                     test_action@mL:
  1051                           	callstack 0
  1052  000034                     goback@mL:
  1053                           	callstack 0
  1054  000034                     dtoa@w:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x33
  1058  000034                     	ds	2
  1059  000036                     ___flmul@sign:
  1060                           	callstack 0
  1061  000036                     test_action@mR:
  1062                           	callstack 0
  1063  000036                     goback@mR:
  1064                           	callstack 0
  1065  000036                     dtoa@s:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x35
  1069  000036                     	ds	1
  1070  000037                     ___flmul@aexp:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x36
  1074  000037                     	ds	1
  1075  000038                     ??_goback:
  1076  000038                     calibration@mL:
  1077                           	callstack 0
  1078  000038                     ___flmul@grs:
  1079                           	callstack 0
  1080  000038                     dtoa@n:
  1081                           	callstack 0
  1082                           
  1083                           ; 8 bytes @ 0x37
  1084  000038                     	ds	2
  1085  00003A                     calibration@mR:
  1086                           	callstack 0
  1087  00003A                     goback@i:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x39
  1091  00003A                     	ds	2
  1092  00003C                     ??_calibration:
  1093  00003C                     ___flmul@bexp:
  1094                           	callstack 0
  1095  00003C                     action@mL:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x3B
  1099  00003C                     	ds	1
  1100  00003D                     ___flmul@prod:
  1101                           	callstack 0
  1102                           
  1103                           ; 4 bytes @ 0x3C
  1104  00003D                     	ds	1
  1105  00003E                     action@mR:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x3D
  1109  00003E                     	ds	2
  1110  000040                     ??_action:
  1111  000040                     dtoa@i:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0x3F
  1115  000040                     	ds	1
  1116  000041                     ___flmul@temp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x40
  1120  000041                     	ds	1
  1121  000042                     ?_vfpfcnvrt:
  1122                           	callstack 0
  1123  000042                     action@color:
  1124                           	callstack 0
  1125  000042                     vfpfcnvrt@fp:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x41
  1129  000042                     	ds	1
  1130  000043                     ?_roundf:
  1131                           	callstack 0
  1132  000043                     roundf@x:
  1133                           	callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x42
  1136  000043                     	ds	1
  1137  000044                     vfpfcnvrt@fmt:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x43
  1141  000044                     	ds	2
  1142  000046                     vfpfcnvrt@ap:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x45
  1146  000046                     	ds	1
  1147  000047                     ??_roundf:
  1148                           
  1149                           ; 1 bytes @ 0x46
  1150  000047                     	ds	1
  1151  000048                     ??_vfpfcnvrt:
  1152                           
  1153                           ; 1 bytes @ 0x47
  1154  000048                     	ds	2
  1155  00004A                     vfpfcnvrt@ll:
  1156                           	callstack 0
  1157                           
  1158                           ; 8 bytes @ 0x49
  1159  00004A                     	ds	1
  1160  00004B                     ??___fltol:
  1161                           
  1162                           ; 1 bytes @ 0x4A
  1163  00004B                     	ds	4
  1164  00004F                     ___fltol@sign1:
  1165                           	callstack 0
  1166                           
  1167                           ; 1 bytes @ 0x4E
  1168  00004F                     	ds	1
  1169  000050                     ___fltol@exp1:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x4F
  1173  000050                     	ds	1
  1174  000051                     ??_distance_measure:
  1175  000051                     compare@result:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x50
  1179  000051                     	ds	1
  1180  000052                     ??_detect_color:
  1181  000052                     ?_vfprintf:
  1182                           	callstack 0
  1183  000052                     vfprintf@fp:
  1184                           	callstack 0
  1185                           
  1186                           ; 2 bytes @ 0x51
  1187  000052                     	ds	2
  1188  000054                     vfprintf@fmt:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x53
  1192  000054                     	ds	2
  1193  000056                     ??_verify_color:
  1194  000056                     vfprintf@ap:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x55
  1198  000056                     	ds	2
  1199  000058                     vfprintf@cfmt:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x57
  1203  000058                     	ds	2
  1204  00005A                     
  1205                           ; 1 bytes @ 0x59
  1206 ;;
  1207 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1208 ;;
  1209 ;; *************** function _main *****************
  1210 ;; Defined at:
  1211 ;;		line 26 in file "main.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;		None
  1214 ;; Auto vars:     Size  Location     Type
  1215 ;;  white          26    3[BANK1 ] struct white_card
  1216 ;;  motorR         10   47[BANK1 ] struct DC_motor
  1217 ;;  motorL         10   37[BANK1 ] struct DC_motor
  1218 ;;  rgb             8   29[BANK1 ] struct color_rgb
  1219 ;;  stop_signal     1    2[BANK1 ] unsigned char 
  1220 ;;  complete        1    0        unsigned char 
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Locals:         0       0      55       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Totals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;Total ram usage:       57 bytes
  1235 ;; Hardware stack levels required when called: 12
  1236 ;; This function calls:
  1237 ;;		_I2C_2_Master_Init
  1238 ;;		_Interrupts_init
  1239 ;;		_LED_C
  1240 ;;		_LED_OFF
  1241 ;;		_Timer0_init
  1242 ;;		_action
  1243 ;;		_buggylight_init
  1244 ;;		_calibrate_white
  1245 ;;		_calibration
  1246 ;;		_color_click_init
  1247 ;;		_color_data_collection
  1248 ;;		_color_display
  1249 ;;		_detect_color
  1250 ;;		_distance_measure
  1251 ;;		_fullSpeedAhead
  1252 ;;		_initDCmotorsPWM
  1253 ;;		_initDCmotors_parameter
  1254 ;;		_initUSART4
  1255 ;;		_pin_init
  1256 ;;		_read_color
  1257 ;;		_short_burst
  1258 ;;		_stop
  1259 ;;		_toggle_light
  1260 ;;		_verify_color
  1261 ;; This function is called by:
  1262 ;;		Startup code after reset
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text0
  1267  0043FC                     __ptext0:
  1268                           	callstack 0
  1269  0043FC                     _main:
  1270                           	callstack 19
  1271  0043FC                     
  1272                           ;main.c: 27:     Interrupts_init();
  1273  0043FC  EC58  F02C         	call	_Interrupts_init	;wreg free
  1274  004400                     
  1275                           ;main.c: 28:     Timer0_init();
  1276  004400  EC2C  F02C         	call	_Timer0_init	;wreg free
  1277  004404                     
  1278                           ;main.c: 29:     I2C_2_Master_Init();
  1279  004404  EC71  F02B         	call	_I2C_2_Master_Init	;wreg free
  1280  004408                     
  1281                           ;main.c: 30:     color_click_init();
  1282  004408  EC28  F02B         	call	_color_click_init	;wreg free
  1283  00440C                     
  1284                           ;main.c: 31:     initDCmotorsPWM(199);
  1285  00440C  0E00               	movlw	0
  1286  00440E  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1287  004410  0EC7               	movlw	199
  1288  004412  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1289  004414  ECF2  F029         	call	_initDCmotorsPWM	;wreg free
  1290  004418                     
  1291                           ;main.c: 32:     buggylight_init();
  1292  004418  EC47  F02C         	call	_buggylight_init	;wreg free
  1293  00441C                     
  1294                           ;main.c: 33:     initUSART4();
  1295  00441C  EC1D  F02C         	call	_initUSART4	;wreg free
  1296  004420                     
  1297                           ;main.c: 35:     struct color_rgb rgb;;main.c: 36:     struct white_card white;;main.c: 
      +                          40:     struct DC_motor motorL, motorR;;main.c: 42:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1298  004420  0ED6               	movlw	low main@motorL
  1299  004422  6E03               	movwf	initDCmotors_parameter@motorL^0,c
  1300  004424  0E01               	movlw	high main@motorL
  1301  004426  6E04               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1302  004428  0EE0               	movlw	low main@motorR
  1303  00442A  6E05               	movwf	initDCmotors_parameter@motorR^0,c
  1304  00442C  0E01               	movlw	high main@motorR
  1305  00442E  6E06               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1306  004430  EC09  F025         	call	_initDCmotors_parameter	;wreg free
  1307  004434                     
  1308                           ;main.c: 46:     if (4 == 1 || 4 == 3 || 4 == 4){
  1309  004434  ECAD  F02B         	call	_pin_init	;wreg free
  1310  004438                     
  1311                           ;main.c: 47:         LED_OFF();
  1312  004438  EC0D  F02C         	call	_LED_OFF	;wreg free
  1313  00443C                     
  1314                           ;main.c: 48:         toggle_light(1,2);
  1315  00443C  0E02               	movlw	2
  1316  00443E  6E03               	movwf	toggle_light@toggletime^0,c
  1317  004440  0E01               	movlw	1
  1318  004442  EC19  F018         	call	_toggle_light
  1319  004446                     
  1320                           ;main.c: 49:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1321  004446  0E52               	movlw	82
  1322  004448  0101               	movlb	1	; () banked
  1323  00444A  6FB2               	movwf	(??_main+1)& (0+255),b
  1324  00444C  0E2B               	movlw	43
  1325  00444E  6FB1               	movwf	??_main& (0+255),b
  1326  004450  0E00               	movlw	0
  1327  004452                     u6607:
  1328  004452  2EE8               	decfsz	wreg,f,c
  1329  004454  D7FE               	bra	u6607
  1330  004456  2FB1               	decfsz	??_main& (0+255),f,b
  1331  004458  D7FC               	bra	u6607
  1332  00445A  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1333  00445C  D7FA               	bra	u6607
  1334  00445E  F000               	nop	
  1335                           
  1336                           ;main.c: 50:         calibrate_white(&white);
  1337  004460  0EB4               	movlw	low main@white
  1338  004462  6E0E               	movwf	calibrate_white@w^0,c
  1339  004464  0E01               	movlw	high main@white
  1340  004466  6E0F               	movwf	(calibrate_white@w+1)^0,c
  1341  004468  EC35  F01E         	call	_calibrate_white	;wreg free
  1342  00446C                     
  1343                           ;main.c: 51:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1344  00446C  0E52               	movlw	82
  1345  00446E  0101               	movlb	1	; () banked
  1346  004470  6FB2               	movwf	(??_main+1)& (0+255),b
  1347  004472  0E2B               	movlw	43
  1348  004474  6FB1               	movwf	??_main& (0+255),b
  1349  004476  0E00               	movlw	0
  1350  004478                     u6617:
  1351  004478  2EE8               	decfsz	wreg,f,c
  1352  00447A  D7FE               	bra	u6617
  1353  00447C  2FB1               	decfsz	??_main& (0+255),f,b
  1354  00447E  D7FC               	bra	u6617
  1355  004480  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1356  004482  D7FA               	bra	u6617
  1357  004484  F000               	nop	
  1358  004486                     
  1359                           ;main.c: 52:         LED_OFF();
  1360  004486  EC0D  F02C         	call	_LED_OFF	;wreg free
  1361  00448A                     
  1362                           ;main.c: 53:         toggle_light(1,2);
  1363  00448A  0E02               	movlw	2
  1364  00448C  6E03               	movwf	toggle_light@toggletime^0,c
  1365  00448E  0E01               	movlw	1
  1366  004490  EC19  F018         	call	_toggle_light
  1367  004494                     
  1368                           ;main.c: 57:     unsigned char stop_signal = 0;
  1369  004494  0E00               	movlw	0
  1370  004496  0101               	movlb	1	; () banked
  1371  004498  6FB3               	movwf	main@stop_signal& (0+255),b
  1372  00449A                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 58:     calibration(&motorL, &motorR);
  1375  00449A  0ED6               	movlw	low main@motorL
  1376  00449C  6E38               	movwf	calibration@mL^0,c
  1377  00449E  0E01               	movlw	high main@motorL
  1378  0044A0  6E39               	movwf	(calibration@mL+1)^0,c
  1379  0044A2  0EE0               	movlw	low main@motorR
  1380  0044A4  6E3A               	movwf	calibration@mR^0,c
  1381  0044A6  0E01               	movlw	high main@motorR
  1382  0044A8  6E3B               	movwf	(calibration@mR+1)^0,c
  1383  0044AA  EC27  F024         	call	_calibration	;wreg free
  1384  0044AE                     l6181:
  1385                           
  1386                           ;main.c: 91:             read_color(&rgb);
  1387  0044AE  0ECE               	movlw	low main@rgb
  1388  0044B0  6E0E               	movwf	read_color@m^0,c
  1389  0044B2  0E01               	movlw	high main@rgb
  1390  0044B4  6E0F               	movwf	(read_color@m+1)^0,c
  1391  0044B6  EC63  F028         	call	_read_color	;wreg free
  1392  0044BA                     
  1393                           ;main.c: 92:             color_display(&rgb);
  1394  0044BA  0ECE               	movlw	low main@rgb
  1395  0044BC  0100               	movlb	0	; () banked
  1396  0044BE  6F79               	movwf	color_display@m& (0+255),b
  1397  0044C0  0E01               	movlw	high main@rgb
  1398  0044C2  6F7A               	movwf	(color_display@m+1)& (0+255),b
  1399  0044C4  ECFA  F027         	call	_color_display	;wreg free
  1400                           
  1401                           ;main.c: 93:             while (stop_signal == 0){
  1402  0044C8  EF81  F022         	goto	l6189
  1403  0044CC                     l6185:
  1404                           
  1405                           ; BSR set to: 1
  1406                           ;main.c: 94:                 fullSpeedAhead(&motorL, &motorR);
  1407  0044CC  0ED6               	movlw	low main@motorL
  1408  0044CE  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1409  0044D0  0E01               	movlw	high main@motorL
  1410  0044D2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1411  0044D4  0EE0               	movlw	low main@motorR
  1412  0044D6  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1413  0044D8  0E01               	movlw	high main@motorR
  1414  0044DA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1415  0044DC  ECB0  F027         	call	_fullSpeedAhead	;wreg free
  1416  0044E0                     
  1417                           ;main.c: 95:                 stop_signal = distance_measure(&motorL, &motorR, &white);
  1418  0044E0  0ED6               	movlw	low main@motorL
  1419  0044E2  0100               	movlb	0	; () banked
  1420  0044E4  6F7A               	movwf	distance_measure@mL& (0+255),b
  1421  0044E6  0E01               	movlw	high main@motorL
  1422  0044E8  6F7B               	movwf	(distance_measure@mL+1)& (0+255),b
  1423  0044EA  0EE0               	movlw	low main@motorR
  1424  0044EC  6F7C               	movwf	distance_measure@mR& (0+255),b
  1425  0044EE  0E01               	movlw	high main@motorR
  1426  0044F0  6F7D               	movwf	(distance_measure@mR+1)& (0+255),b
  1427  0044F2  0EB4               	movlw	low main@white
  1428  0044F4  6F7E               	movwf	distance_measure@w& (0+255),b
  1429  0044F6  0E01               	movlw	high main@white
  1430  0044F8  6F7F               	movwf	(distance_measure@w+1)& (0+255),b
  1431  0044FA  EC9A  F024         	call	_distance_measure	;wreg free
  1432  0044FE  0101               	movlb	1	; () banked
  1433  004500  6FB3               	movwf	main@stop_signal& (0+255),b
  1434  004502                     l6189:
  1435                           
  1436                           ;main.c: 93:             while (stop_signal == 0){
  1437  004502  0101               	movlb	1	; () banked
  1438  004504  51B3               	movf	main@stop_signal& (0+255),w,b
  1439  004506  B4D8               	btfsc	status,2,c
  1440  004508  EF88  F022         	goto	u6591
  1441  00450C  EF8A  F022         	goto	u6590
  1442  004510                     u6591:
  1443  004510  EF66  F022         	goto	l6185
  1444  004514                     u6590:
  1445  004514                     
  1446                           ; BSR set to: 1
  1447                           ;main.c: 98:             stop(&motorL, &motorR);
  1448  004514  0ED6               	movlw	low main@motorL
  1449  004516  6E1C               	movwf	stop@mL^0,c
  1450  004518  0E01               	movlw	high main@motorL
  1451  00451A  6E1D               	movwf	(stop@mL+1)^0,c
  1452  00451C  0EE0               	movlw	low main@motorR
  1453  00451E  6E1E               	movwf	stop@mR^0,c
  1454  004520  0E01               	movlw	high main@motorR
  1455  004522  6E1F               	movwf	(stop@mR+1)^0,c
  1456  004524  ECFC  F026         	call	_stop	;wreg free
  1457  004528                     
  1458                           ;main.c: 99:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1459  004528  0E52               	movlw	82
  1460  00452A  0101               	movlb	1	; () banked
  1461  00452C  6FB2               	movwf	(??_main+1)& (0+255),b
  1462  00452E  0E2B               	movlw	43
  1463  004530  6FB1               	movwf	??_main& (0+255),b
  1464  004532  0E00               	movlw	0
  1465  004534                     u6627:
  1466  004534  2EE8               	decfsz	wreg,f,c
  1467  004536  D7FE               	bra	u6627
  1468  004538  2FB1               	decfsz	??_main& (0+255),f,b
  1469  00453A  D7FC               	bra	u6627
  1470  00453C  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1471  00453E  D7FA               	bra	u6627
  1472  004540  F000               	nop	
  1473  004542                     
  1474                           ;main.c: 104:             stop_signal = 0;
  1475  004542  0E00               	movlw	0
  1476  004544  0101               	movlb	1	; () banked
  1477  004546  6FB3               	movwf	main@stop_signal& (0+255),b
  1478  004548  EF57  F022         	goto	l6181
  1479  00454C  EF24  F000         	goto	start
  1480  004550                     __end_of_main:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _verify_color *****************
  1484 ;; Defined at:
  1485 ;;		line 366 in file "color.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  color           1    wreg     unsigned char 
  1488 ;;  m               2   61[BANK0 ] PTR struct color_rgb
  1489 ;;		 -> main@rgb(8), 
  1490 ;;  w               2   63[BANK0 ] PTR struct white_card
  1491 ;;		 -> main@white(26), 
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;  color           1   67[BANK0 ] unsigned char 
  1494 ;;  color2          2   68[BANK0 ] unsigned int 
  1495 ;;  color3          2   65[BANK0 ] unsigned int 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1505 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;Total ram usage:       11 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 7
  1512 ;; This function calls:
  1513 ;;		_detect_color
  1514 ;; This function is called by:
  1515 ;;		_main
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text1
  1520  004EB4                     __ptext1:
  1521                           	callstack 0
  1522  004EB4                     _verify_color:
  1523                           	callstack 23
  1524                           
  1525                           ; BSR set to: 1
  1526                           ;incstack = 0
  1527                           ;verify_color@color stored from wreg
  1528  004EB4  0100               	movlb	0	; () banked
  1529  004EB6  6FA3               	movwf	verify_color@color& (0+255),b
  1530  004EB8                     
  1531                           ;color.c: 366: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 367: {;color.c: 368:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1532  004EB8  0E05               	movlw	5
  1533  004EBA  6E57               	movwf	(??_verify_color+1)^0,c
  1534  004EBC  0E0F               	movlw	15
  1535  004EBE  6E56               	movwf	??_verify_color^0,c
  1536  004EC0  0EF1               	movlw	241
  1537  004EC2                     u6637:
  1538  004EC2  2EE8               	decfsz	wreg,f,c
  1539  004EC4  D7FE               	bra	u6637
  1540  004EC6  2E56               	decfsz	??_verify_color^0,f,c
  1541  004EC8  D7FC               	bra	u6637
  1542  004ECA  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1543  004ECC  D7FA               	bra	u6637
  1544  004ECE  F000               	nop	
  1545  004ED0                     
  1546                           ;color.c: 369:     unsigned int color2, color3;;color.c: 370:     color2 = detect_color(
      +                          m,w);
  1547  004ED0  C09D  F080         	movff	verify_color@m,detect_color@m
  1548  004ED4  C09E  F081         	movff	verify_color@m+1,detect_color@m+1
  1549  004ED8  C09F  F082         	movff	verify_color@w,detect_color@w
  1550  004EDC  C0A0  F083         	movff	verify_color@w+1,detect_color@w+1
  1551  004EE0  EC0A  F007         	call	_detect_color	;wreg free
  1552  004EE4  6E56               	movwf	??_verify_color^0,c
  1553  004EE6  5056               	movf	??_verify_color^0,w,c
  1554  004EE8  0100               	movlb	0	; () banked
  1555  004EEA  6FA4               	movwf	verify_color@color2& (0+255),b
  1556  004EEC  6BA5               	clrf	(verify_color@color2+1)& (0+255),b
  1557  004EEE                     
  1558                           ; BSR set to: 0
  1559                           ;color.c: 371:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1560  004EEE  0E05               	movlw	5
  1561  004EF0  6E57               	movwf	(??_verify_color+1)^0,c
  1562  004EF2  0E0F               	movlw	15
  1563  004EF4  6E56               	movwf	??_verify_color^0,c
  1564  004EF6  0EF1               	movlw	241
  1565  004EF8                     u6647:
  1566  004EF8  2EE8               	decfsz	wreg,f,c
  1567  004EFA  D7FE               	bra	u6647
  1568  004EFC  2E56               	decfsz	??_verify_color^0,f,c
  1569  004EFE  D7FC               	bra	u6647
  1570  004F00  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1571  004F02  D7FA               	bra	u6647
  1572  004F04  F000               	nop	
  1573  004F06                     
  1574                           ;color.c: 372:     color3 = detect_color(m,w);
  1575  004F06  C09D  F080         	movff	verify_color@m,detect_color@m
  1576  004F0A  C09E  F081         	movff	verify_color@m+1,detect_color@m+1
  1577  004F0E  C09F  F082         	movff	verify_color@w,detect_color@w
  1578  004F12  C0A0  F083         	movff	verify_color@w+1,detect_color@w+1
  1579  004F16  EC0A  F007         	call	_detect_color	;wreg free
  1580  004F1A  6E56               	movwf	??_verify_color^0,c
  1581  004F1C  5056               	movf	??_verify_color^0,w,c
  1582  004F1E  0100               	movlb	0	; () banked
  1583  004F20  6FA1               	movwf	verify_color@color3& (0+255),b
  1584  004F22  6BA2               	clrf	(verify_color@color3+1)& (0+255),b
  1585  004F24                     
  1586                           ; BSR set to: 0
  1587                           ;color.c: 373:     if (color == color2 && color2 == color3){return color;}
  1588  004F24  51A3               	movf	verify_color@color& (0+255),w,b
  1589  004F26  6E56               	movwf	??_verify_color^0,c
  1590  004F28  6A57               	clrf	(??_verify_color+1)^0,c
  1591  004F2A  51A4               	movf	verify_color@color2& (0+255),w,b
  1592  004F2C  1856               	xorwf	??_verify_color^0,w,c
  1593  004F2E  E107               	bnz	u6561
  1594  004F30  51A5               	movf	(verify_color@color2+1)& (0+255),w,b
  1595  004F32  1857               	xorwf	(??_verify_color+1)^0,w,c
  1596  004F34  A4D8               	btfss	status,2,c
  1597  004F36  EF9F  F027         	goto	u6561
  1598  004F3A  EFA1  F027         	goto	u6560
  1599  004F3E                     u6561:
  1600  004F3E  EFAF  F027         	goto	l6087
  1601  004F42                     u6560:
  1602  004F42                     
  1603                           ; BSR set to: 0
  1604  004F42  51A1               	movf	verify_color@color3& (0+255),w,b
  1605  004F44  19A4               	xorwf	verify_color@color2& (0+255),w,b
  1606  004F46  E107               	bnz	u6571
  1607  004F48  51A2               	movf	(verify_color@color3+1)& (0+255),w,b
  1608  004F4A  19A5               	xorwf	(verify_color@color2+1)& (0+255),w,b
  1609  004F4C  A4D8               	btfss	status,2,c
  1610  004F4E  EFAB  F027         	goto	u6571
  1611  004F52  EFAD  F027         	goto	u6570
  1612  004F56                     u6571:
  1613  004F56  EFAF  F027         	goto	l6087
  1614  004F5A                     u6570:
  1615  004F5A  EFAF  F027         	goto	l178
  1616  004F5E                     l6087:
  1617  004F5E                     l178:
  1618                           
  1619                           ; BSR set to: 0
  1620  004F5E  0012               	return		;funcret
  1621  004F60                     __end_of_verify_color:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _detect_color *****************
  1625 ;; Defined at:
  1626 ;;		line 280 in file "color.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  m               2   32[BANK0 ] PTR struct color_rgb
  1629 ;;		 -> main@rgb(8), 
  1630 ;;  w               2   34[BANK0 ] PTR struct white_card
  1631 ;;		 -> main@white(26), 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  BG              2   55[BANK0 ] unsigned int 
  1634 ;;  BB              2   52[BANK0 ] unsigned int 
  1635 ;;  BR              2   50[BANK0 ] unsigned int 
  1636 ;;  RR              2   48[BANK0 ] unsigned int 
  1637 ;;  GG              2   46[BANK0 ] unsigned int 
  1638 ;;  GR              2   44[BANK0 ] unsigned int 
  1639 ;;  RG              2   42[BANK0 ] unsigned int 
  1640 ;;  GC              2   40[BANK0 ] unsigned int 
  1641 ;;  GB              2   38[BANK0 ] unsigned int 
  1642 ;;  RB              2   36[BANK0 ] unsigned int 
  1643 ;;  color           1   54[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      unsigned char 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1656 ;;      Totals:         4      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1657 ;;Total ram usage:       33 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 6
  1660 ;; This function calls:
  1661 ;;		_LED_B
  1662 ;;		_LED_G
  1663 ;;		_LED_R
  1664 ;;		___fldiv
  1665 ;;		___flmul
  1666 ;;		___xxtofl
  1667 ;;		_compare
  1668 ;;		_lroundf
  1669 ;;		_read_color
  1670 ;; This function is called by:
  1671 ;;		_verify_color
  1672 ;;		_main
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text2
  1677  000E14                     __ptext2:
  1678                           	callstack 0
  1679  000E14                     _detect_color:
  1680                           	callstack 23
  1681  000E14  0E00               	movlw	0
  1682  000E16  0100               	movlb	0	; () banked
  1683  000E18  6F8B               	movwf	(detect_color@RG+1)& (0+255),b
  1684  000E1A  0E00               	movlw	0
  1685  000E1C  6F8A               	movwf	detect_color@RG& (0+255),b
  1686  000E1E  0E00               	movlw	0
  1687  000E20  6F85               	movwf	(detect_color@RB+1)& (0+255),b
  1688  000E22  0E00               	movlw	0
  1689  000E24  6F84               	movwf	detect_color@RB& (0+255),b
  1690  000E26  0E00               	movlw	0
  1691  000E28  6F8D               	movwf	(detect_color@GR+1)& (0+255),b
  1692  000E2A  0E00               	movlw	0
  1693  000E2C  6F8C               	movwf	detect_color@GR& (0+255),b
  1694  000E2E  0E00               	movlw	0
  1695  000E30  6F8F               	movwf	(detect_color@GG+1)& (0+255),b
  1696  000E32  0E00               	movlw	0
  1697  000E34  6F8E               	movwf	detect_color@GG& (0+255),b
  1698  000E36  0E00               	movlw	0
  1699  000E38  6F87               	movwf	(detect_color@GB+1)& (0+255),b
  1700  000E3A  0E00               	movlw	0
  1701  000E3C  6F86               	movwf	detect_color@GB& (0+255),b
  1702  000E3E  0E00               	movlw	0
  1703  000E40  6F93               	movwf	(detect_color@BR+1)& (0+255),b
  1704  000E42  0E00               	movlw	0
  1705  000E44  6F92               	movwf	detect_color@BR& (0+255),b
  1706  000E46  0E00               	movlw	0
  1707  000E48  6F98               	movwf	(detect_color@BG+1)& (0+255),b
  1708  000E4A  0E00               	movlw	0
  1709  000E4C  6F97               	movwf	detect_color@BG& (0+255),b
  1710  000E4E  0E00               	movlw	0
  1711  000E50  6F95               	movwf	(detect_color@BB+1)& (0+255),b
  1712  000E52  0E00               	movlw	0
  1713  000E54  6F94               	movwf	detect_color@BB& (0+255),b
  1714                           
  1715                           ;color.c: 285:     unsigned int GC = 0;
  1716  000E56  0E00               	movlw	0
  1717  000E58  6F89               	movwf	(detect_color@GC+1)& (0+255),b
  1718  000E5A  0E00               	movlw	0
  1719  000E5C  6F88               	movwf	detect_color@GC& (0+255),b
  1720                           
  1721                           ;color.c: 286:     unsigned char color = 0;
  1722  000E5E  0E00               	movlw	0
  1723  000E60  6F96               	movwf	detect_color@color& (0+255),b
  1724  000E62                     
  1725                           ; BSR set to: 0
  1726                           ;color.c: 288:     LED_R();
  1727  000E62  ECCD  F02B         	call	_LED_R	;wreg free
  1728  000E66                     
  1729                           ;color.c: 289:     read_color(m);
  1730  000E66  C080  F00E         	movff	detect_color@m,read_color@m
  1731  000E6A  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  1732  000E6E  EC63  F028         	call	_read_color	;wreg free
  1733  000E72                     
  1734                           ;color.c: 291:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1735  000E72  C082  FFD9         	movff	detect_color@w,fsr2l
  1736  000E76  C083  FFDA         	movff	detect_color@w+1,fsr2h
  1737  000E7A  CFDE F052          	movff	postinc2,??_detect_color
  1738  000E7E  CFDD F053          	movff	postdec2,??_detect_color+1
  1739  000E82  C052  F003         	movff	??_detect_color,___xxtofl@val
  1740  000E86  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1741  000E8A  6A05               	clrf	(___xxtofl@val+2)^0,c
  1742  000E8C  6A06               	clrf	(___xxtofl@val+3)^0,c
  1743  000E8E  0E00               	movlw	0
  1744  000E90  EC81  F01C         	call	___xxtofl
  1745  000E94  C003  F015         	movff	?___xxtofl,___fldiv@a
  1746  000E98  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1747  000E9C  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1748  000EA0  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1749  000EA4  C080  FFD9         	movff	detect_color@m,fsr2l
  1750  000EA8  C081  FFDA         	movff	detect_color@m+1,fsr2h
  1751  000EAC  CFDE F054          	movff	postinc2,??_detect_color+2
  1752  000EB0  CFDD F055          	movff	postdec2,??_detect_color+3
  1753  000EB4  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1754  000EB8  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1755  000EBC  6A05               	clrf	(___xxtofl@val+2)^0,c
  1756  000EBE  6A06               	clrf	(___xxtofl@val+3)^0,c
  1757  000EC0  0E00               	movlw	0
  1758  000EC2  EC81  F01C         	call	___xxtofl
  1759  000EC6  C003  F011         	movff	?___xxtofl,___fldiv@b
  1760  000ECA  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1761  000ECE  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1762  000ED2  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1763  000ED6  EC58  F013         	call	___fldiv	;wreg free
  1764  000EDA  C011  F02A         	movff	?___fldiv,___flmul@b
  1765  000EDE  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1766  000EE2  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1767  000EE6  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1768  000EEA  0E00               	movlw	0
  1769  000EEC  6E2E               	movwf	___flmul@a^0,c
  1770  000EEE  0E00               	movlw	0
  1771  000EF0  6E2F               	movwf	(___flmul@a+1)^0,c
  1772  000EF2  0EC8               	movlw	200
  1773  000EF4  6E30               	movwf	(___flmul@a+2)^0,c
  1774  000EF6  0E42               	movlw	66
  1775  000EF8  6E31               	movwf	(___flmul@a+3)^0,c
  1776  000EFA  EC6A  F00F         	call	___flmul	;wreg free
  1777  000EFE  C02A  F099         	movff	?___flmul,_detect_color$3198
  1778  000F02  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  1779  000F06  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  1780  000F0A  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  1781  000F0E                     
  1782                           ;color.c: 291:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1783  000F0E  C099  F076         	movff	_detect_color$3198,lroundf@x
  1784  000F12  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  1785  000F16  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  1786  000F1A  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  1787  000F1E  ECD4  F02A         	call	_lroundf	;wreg free
  1788  000F22  C076  F090         	movff	?_lroundf,detect_color@RR
  1789  000F26  C077  F091         	movff	?_lroundf+1,detect_color@RR+1
  1790  000F2A  0100               	movlb	0	; () banked
  1791  000F2C  EE20 F002          	lfsr	2,2
  1792  000F30  5182               	movf	detect_color@w& (0+255),w,b
  1793  000F32  26D9               	addwf	fsr2l,f,c
  1794  000F34  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1795  000F36  22DA               	addwfc	fsr2h,f,c
  1796  000F38  CFDE F052          	movff	postinc2,??_detect_color
  1797  000F3C  CFDD F053          	movff	postdec2,??_detect_color+1
  1798  000F40  C052  F003         	movff	??_detect_color,___xxtofl@val
  1799  000F44  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1800  000F48  6A05               	clrf	(___xxtofl@val+2)^0,c
  1801  000F4A  6A06               	clrf	(___xxtofl@val+3)^0,c
  1802  000F4C  0E00               	movlw	0
  1803  000F4E  EC81  F01C         	call	___xxtofl
  1804  000F52  C003  F015         	movff	?___xxtofl,___fldiv@a
  1805  000F56  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1806  000F5A  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1807  000F5E  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1808  000F62  0100               	movlb	0	; () banked
  1809  000F64  EE20 F002          	lfsr	2,2
  1810  000F68  5180               	movf	detect_color@m& (0+255),w,b
  1811  000F6A  26D9               	addwf	fsr2l,f,c
  1812  000F6C  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1813  000F6E  22DA               	addwfc	fsr2h,f,c
  1814  000F70  CFDE F054          	movff	postinc2,??_detect_color+2
  1815  000F74  CFDD F055          	movff	postdec2,??_detect_color+3
  1816  000F78  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1817  000F7C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1818  000F80  6A05               	clrf	(___xxtofl@val+2)^0,c
  1819  000F82  6A06               	clrf	(___xxtofl@val+3)^0,c
  1820  000F84  0E00               	movlw	0
  1821  000F86  EC81  F01C         	call	___xxtofl
  1822  000F8A  C003  F011         	movff	?___xxtofl,___fldiv@b
  1823  000F8E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1824  000F92  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1825  000F96  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1826  000F9A  EC58  F013         	call	___fldiv	;wreg free
  1827  000F9E  C011  F02A         	movff	?___fldiv,___flmul@b
  1828  000FA2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1829  000FA6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1830  000FAA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1831  000FAE  0E00               	movlw	0
  1832  000FB0  6E2E               	movwf	___flmul@a^0,c
  1833  000FB2  0E00               	movlw	0
  1834  000FB4  6E2F               	movwf	(___flmul@a+1)^0,c
  1835  000FB6  0EC8               	movlw	200
  1836  000FB8  6E30               	movwf	(___flmul@a+2)^0,c
  1837  000FBA  0E42               	movlw	66
  1838  000FBC  6E31               	movwf	(___flmul@a+3)^0,c
  1839  000FBE  EC6A  F00F         	call	___flmul	;wreg free
  1840  000FC2  C02A  F099         	movff	?___flmul,_detect_color$3198
  1841  000FC6  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  1842  000FCA  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  1843  000FCE  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  1844  000FD2  C099  F076         	movff	_detect_color$3198,lroundf@x
  1845  000FD6  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  1846  000FDA  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  1847  000FDE  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  1848  000FE2  ECD4  F02A         	call	_lroundf	;wreg free
  1849  000FE6  C076  F08A         	movff	?_lroundf,detect_color@RG
  1850  000FEA  C077  F08B         	movff	?_lroundf+1,detect_color@RG+1
  1851  000FEE  0100               	movlb	0	; () banked
  1852  000FF0  EE20 F004          	lfsr	2,4
  1853  000FF4  5182               	movf	detect_color@w& (0+255),w,b
  1854  000FF6  26D9               	addwf	fsr2l,f,c
  1855  000FF8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1856  000FFA  22DA               	addwfc	fsr2h,f,c
  1857  000FFC  CFDE F052          	movff	postinc2,??_detect_color
  1858  001000  CFDD F053          	movff	postdec2,??_detect_color+1
  1859  001004  C052  F003         	movff	??_detect_color,___xxtofl@val
  1860  001008  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1861  00100C  6A05               	clrf	(___xxtofl@val+2)^0,c
  1862  00100E  6A06               	clrf	(___xxtofl@val+3)^0,c
  1863  001010  0E00               	movlw	0
  1864  001012  EC81  F01C         	call	___xxtofl
  1865  001016  C003  F015         	movff	?___xxtofl,___fldiv@a
  1866  00101A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1867  00101E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1868  001022  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1869  001026  0100               	movlb	0	; () banked
  1870  001028  EE20 F004          	lfsr	2,4
  1871  00102C  5180               	movf	detect_color@m& (0+255),w,b
  1872  00102E  26D9               	addwf	fsr2l,f,c
  1873  001030  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1874  001032  22DA               	addwfc	fsr2h,f,c
  1875  001034  CFDE F054          	movff	postinc2,??_detect_color+2
  1876  001038  CFDD F055          	movff	postdec2,??_detect_color+3
  1877  00103C  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1878  001040  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1879  001044  6A05               	clrf	(___xxtofl@val+2)^0,c
  1880  001046  6A06               	clrf	(___xxtofl@val+3)^0,c
  1881  001048  0E00               	movlw	0
  1882  00104A  EC81  F01C         	call	___xxtofl
  1883  00104E  C003  F011         	movff	?___xxtofl,___fldiv@b
  1884  001052  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1885  001056  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1886  00105A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1887  00105E  EC58  F013         	call	___fldiv	;wreg free
  1888  001062  C011  F02A         	movff	?___fldiv,___flmul@b
  1889  001066  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1890  00106A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1891  00106E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1892  001072  0E00               	movlw	0
  1893  001074  6E2E               	movwf	___flmul@a^0,c
  1894  001076  0E00               	movlw	0
  1895  001078  6E2F               	movwf	(___flmul@a+1)^0,c
  1896  00107A  0EC8               	movlw	200
  1897  00107C  6E30               	movwf	(___flmul@a+2)^0,c
  1898  00107E  0E42               	movlw	66
  1899  001080  6E31               	movwf	(___flmul@a+3)^0,c
  1900  001082  EC6A  F00F         	call	___flmul	;wreg free
  1901  001086  C02A  F099         	movff	?___flmul,_detect_color$3198
  1902  00108A  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  1903  00108E  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  1904  001092  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  1905  001096  C099  F076         	movff	_detect_color$3198,lroundf@x
  1906  00109A  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  1907  00109E  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  1908  0010A2  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  1909  0010A6  ECD4  F02A         	call	_lroundf	;wreg free
  1910  0010AA                     
  1911                           ;color.c: 292:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1912  0010AA  0E05               	movlw	5
  1913  0010AC  6E53               	movwf	(??_detect_color+1)^0,c
  1914  0010AE  0E0F               	movlw	15
  1915  0010B0  6E52               	movwf	??_detect_color^0,c
  1916  0010B2  0EF1               	movlw	241
  1917  0010B4                     u6657:
  1918  0010B4  2EE8               	decfsz	wreg,f,c
  1919  0010B6  D7FE               	bra	u6657
  1920  0010B8  2E52               	decfsz	??_detect_color^0,f,c
  1921  0010BA  D7FC               	bra	u6657
  1922  0010BC  2E53               	decfsz	(??_detect_color+1)^0,f,c
  1923  0010BE  D7FA               	bra	u6657
  1924  0010C0  F000               	nop	
  1925  0010C2                     
  1926                           ;color.c: 294:     LED_G();
  1927  0010C2  ECDD  F02B         	call	_LED_G	;wreg free
  1928  0010C6                     
  1929                           ;color.c: 295:     read_color(m);
  1930  0010C6  C080  F00E         	movff	detect_color@m,read_color@m
  1931  0010CA  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  1932  0010CE  EC63  F028         	call	_read_color	;wreg free
  1933  0010D2                     
  1934                           ;color.c: 298:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1935  0010D2  0100               	movlb	0	; () banked
  1936  0010D4  EE20 F006          	lfsr	2,6
  1937  0010D8  5182               	movf	detect_color@w& (0+255),w,b
  1938  0010DA  26D9               	addwf	fsr2l,f,c
  1939  0010DC  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1940  0010DE  22DA               	addwfc	fsr2h,f,c
  1941  0010E0  CFDE F052          	movff	postinc2,??_detect_color
  1942  0010E4  CFDD F053          	movff	postdec2,??_detect_color+1
  1943  0010E8  C052  F003         	movff	??_detect_color,___xxtofl@val
  1944  0010EC  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1945  0010F0  6A05               	clrf	(___xxtofl@val+2)^0,c
  1946  0010F2  6A06               	clrf	(___xxtofl@val+3)^0,c
  1947  0010F4  0E00               	movlw	0
  1948  0010F6  EC81  F01C         	call	___xxtofl
  1949  0010FA  C003  F015         	movff	?___xxtofl,___fldiv@a
  1950  0010FE  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1951  001102  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1952  001106  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1953  00110A  C080  FFD9         	movff	detect_color@m,fsr2l
  1954  00110E  C081  FFDA         	movff	detect_color@m+1,fsr2h
  1955  001112  CFDE F054          	movff	postinc2,??_detect_color+2
  1956  001116  CFDD F055          	movff	postdec2,??_detect_color+3
  1957  00111A  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1958  00111E  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1959  001122  6A05               	clrf	(___xxtofl@val+2)^0,c
  1960  001124  6A06               	clrf	(___xxtofl@val+3)^0,c
  1961  001126  0E00               	movlw	0
  1962  001128  EC81  F01C         	call	___xxtofl
  1963  00112C  C003  F011         	movff	?___xxtofl,___fldiv@b
  1964  001130  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1965  001134  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1966  001138  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1967  00113C  EC58  F013         	call	___fldiv	;wreg free
  1968  001140  C011  F02A         	movff	?___fldiv,___flmul@b
  1969  001144  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1970  001148  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1971  00114C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1972  001150  0E00               	movlw	0
  1973  001152  6E2E               	movwf	___flmul@a^0,c
  1974  001154  0E00               	movlw	0
  1975  001156  6E2F               	movwf	(___flmul@a+1)^0,c
  1976  001158  0EC8               	movlw	200
  1977  00115A  6E30               	movwf	(___flmul@a+2)^0,c
  1978  00115C  0E42               	movlw	66
  1979  00115E  6E31               	movwf	(___flmul@a+3)^0,c
  1980  001160  EC6A  F00F         	call	___flmul	;wreg free
  1981  001164  C02A  F099         	movff	?___flmul,_detect_color$3198
  1982  001168  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  1983  00116C  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  1984  001170  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  1985  001174                     
  1986                           ;color.c: 298:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1987  001174  C099  F076         	movff	_detect_color$3198,lroundf@x
  1988  001178  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  1989  00117C  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  1990  001180  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  1991  001184  ECD4  F02A         	call	_lroundf	;wreg free
  1992  001188  C076  F08C         	movff	?_lroundf,detect_color@GR
  1993  00118C  C077  F08D         	movff	?_lroundf+1,detect_color@GR+1
  1994  001190  0100               	movlb	0	; () banked
  1995  001192  EE20 F008          	lfsr	2,8
  1996  001196  5182               	movf	detect_color@w& (0+255),w,b
  1997  001198  26D9               	addwf	fsr2l,f,c
  1998  00119A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1999  00119C  22DA               	addwfc	fsr2h,f,c
  2000  00119E  CFDE F052          	movff	postinc2,??_detect_color
  2001  0011A2  CFDD F053          	movff	postdec2,??_detect_color+1
  2002  0011A6  C052  F003         	movff	??_detect_color,___xxtofl@val
  2003  0011AA  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2004  0011AE  6A05               	clrf	(___xxtofl@val+2)^0,c
  2005  0011B0  6A06               	clrf	(___xxtofl@val+3)^0,c
  2006  0011B2  0E00               	movlw	0
  2007  0011B4  EC81  F01C         	call	___xxtofl
  2008  0011B8  C003  F015         	movff	?___xxtofl,___fldiv@a
  2009  0011BC  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2010  0011C0  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2011  0011C4  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2012  0011C8  0100               	movlb	0	; () banked
  2013  0011CA  EE20 F002          	lfsr	2,2
  2014  0011CE  5180               	movf	detect_color@m& (0+255),w,b
  2015  0011D0  26D9               	addwf	fsr2l,f,c
  2016  0011D2  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2017  0011D4  22DA               	addwfc	fsr2h,f,c
  2018  0011D6  CFDE F054          	movff	postinc2,??_detect_color+2
  2019  0011DA  CFDD F055          	movff	postdec2,??_detect_color+3
  2020  0011DE  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2021  0011E2  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2022  0011E6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2023  0011E8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2024  0011EA  0E00               	movlw	0
  2025  0011EC  EC81  F01C         	call	___xxtofl
  2026  0011F0  C003  F011         	movff	?___xxtofl,___fldiv@b
  2027  0011F4  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2028  0011F8  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2029  0011FC  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2030  001200  EC58  F013         	call	___fldiv	;wreg free
  2031  001204  C011  F02A         	movff	?___fldiv,___flmul@b
  2032  001208  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2033  00120C  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2034  001210  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2035  001214  0E00               	movlw	0
  2036  001216  6E2E               	movwf	___flmul@a^0,c
  2037  001218  0E00               	movlw	0
  2038  00121A  6E2F               	movwf	(___flmul@a+1)^0,c
  2039  00121C  0EC8               	movlw	200
  2040  00121E  6E30               	movwf	(___flmul@a+2)^0,c
  2041  001220  0E42               	movlw	66
  2042  001222  6E31               	movwf	(___flmul@a+3)^0,c
  2043  001224  EC6A  F00F         	call	___flmul	;wreg free
  2044  001228  C02A  F099         	movff	?___flmul,_detect_color$3198
  2045  00122C  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2046  001230  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2047  001234  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2048  001238  C099  F076         	movff	_detect_color$3198,lroundf@x
  2049  00123C  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2050  001240  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2051  001244  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2052  001248  ECD4  F02A         	call	_lroundf	;wreg free
  2053  00124C  C076  F08E         	movff	?_lroundf,detect_color@GG
  2054  001250  C077  F08F         	movff	?_lroundf+1,detect_color@GG+1
  2055  001254  0100               	movlb	0	; () banked
  2056  001256  EE20 F00A          	lfsr	2,10
  2057  00125A  5182               	movf	detect_color@w& (0+255),w,b
  2058  00125C  26D9               	addwf	fsr2l,f,c
  2059  00125E  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2060  001260  22DA               	addwfc	fsr2h,f,c
  2061  001262  CFDE F052          	movff	postinc2,??_detect_color
  2062  001266  CFDD F053          	movff	postdec2,??_detect_color+1
  2063  00126A  C052  F003         	movff	??_detect_color,___xxtofl@val
  2064  00126E  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2065  001272  6A05               	clrf	(___xxtofl@val+2)^0,c
  2066  001274  6A06               	clrf	(___xxtofl@val+3)^0,c
  2067  001276  0E00               	movlw	0
  2068  001278  EC81  F01C         	call	___xxtofl
  2069  00127C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2070  001280  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2071  001284  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2072  001288  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2073  00128C  0100               	movlb	0	; () banked
  2074  00128E  EE20 F004          	lfsr	2,4
  2075  001292  5180               	movf	detect_color@m& (0+255),w,b
  2076  001294  26D9               	addwf	fsr2l,f,c
  2077  001296  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2078  001298  22DA               	addwfc	fsr2h,f,c
  2079  00129A  CFDE F054          	movff	postinc2,??_detect_color+2
  2080  00129E  CFDD F055          	movff	postdec2,??_detect_color+3
  2081  0012A2  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2082  0012A6  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2083  0012AA  6A05               	clrf	(___xxtofl@val+2)^0,c
  2084  0012AC  6A06               	clrf	(___xxtofl@val+3)^0,c
  2085  0012AE  0E00               	movlw	0
  2086  0012B0  EC81  F01C         	call	___xxtofl
  2087  0012B4  C003  F011         	movff	?___xxtofl,___fldiv@b
  2088  0012B8  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2089  0012BC  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2090  0012C0  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2091  0012C4  EC58  F013         	call	___fldiv	;wreg free
  2092  0012C8  C011  F02A         	movff	?___fldiv,___flmul@b
  2093  0012CC  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2094  0012D0  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2095  0012D4  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2096  0012D8  0E00               	movlw	0
  2097  0012DA  6E2E               	movwf	___flmul@a^0,c
  2098  0012DC  0E00               	movlw	0
  2099  0012DE  6E2F               	movwf	(___flmul@a+1)^0,c
  2100  0012E0  0EC8               	movlw	200
  2101  0012E2  6E30               	movwf	(___flmul@a+2)^0,c
  2102  0012E4  0E42               	movlw	66
  2103  0012E6  6E31               	movwf	(___flmul@a+3)^0,c
  2104  0012E8  EC6A  F00F         	call	___flmul	;wreg free
  2105  0012EC  C02A  F099         	movff	?___flmul,_detect_color$3198
  2106  0012F0  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2107  0012F4  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2108  0012F8  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2109  0012FC  C099  F076         	movff	_detect_color$3198,lroundf@x
  2110  001300  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2111  001304  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2112  001308  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2113  00130C  ECD4  F02A         	call	_lroundf	;wreg free
  2114  001310                     
  2115                           ;color.c: 299:     GC = lroundf((float)(m->R)/(w->GR)*100);
  2116  001310  0100               	movlb	0	; () banked
  2117  001312  EE20 F006          	lfsr	2,6
  2118  001316  5182               	movf	detect_color@w& (0+255),w,b
  2119  001318  26D9               	addwf	fsr2l,f,c
  2120  00131A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2121  00131C  22DA               	addwfc	fsr2h,f,c
  2122  00131E  CFDE F052          	movff	postinc2,??_detect_color
  2123  001322  CFDD F053          	movff	postdec2,??_detect_color+1
  2124  001326  C052  F003         	movff	??_detect_color,___xxtofl@val
  2125  00132A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2126  00132E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2127  001330  6A06               	clrf	(___xxtofl@val+3)^0,c
  2128  001332  0E00               	movlw	0
  2129  001334  EC81  F01C         	call	___xxtofl
  2130  001338  C003  F015         	movff	?___xxtofl,___fldiv@a
  2131  00133C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2132  001340  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2133  001344  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2134  001348  C080  FFD9         	movff	detect_color@m,fsr2l
  2135  00134C  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2136  001350  CFDE F054          	movff	postinc2,??_detect_color+2
  2137  001354  CFDD F055          	movff	postdec2,??_detect_color+3
  2138  001358  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2139  00135C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2140  001360  6A05               	clrf	(___xxtofl@val+2)^0,c
  2141  001362  6A06               	clrf	(___xxtofl@val+3)^0,c
  2142  001364  0E00               	movlw	0
  2143  001366  EC81  F01C         	call	___xxtofl
  2144  00136A  C003  F011         	movff	?___xxtofl,___fldiv@b
  2145  00136E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2146  001372  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2147  001376  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2148  00137A  EC58  F013         	call	___fldiv	;wreg free
  2149  00137E  C011  F02A         	movff	?___fldiv,___flmul@b
  2150  001382  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2151  001386  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2152  00138A  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2153  00138E  0E00               	movlw	0
  2154  001390  6E2E               	movwf	___flmul@a^0,c
  2155  001392  0E00               	movlw	0
  2156  001394  6E2F               	movwf	(___flmul@a+1)^0,c
  2157  001396  0EC8               	movlw	200
  2158  001398  6E30               	movwf	(___flmul@a+2)^0,c
  2159  00139A  0E42               	movlw	66
  2160  00139C  6E31               	movwf	(___flmul@a+3)^0,c
  2161  00139E  EC6A  F00F         	call	___flmul	;wreg free
  2162  0013A2  C02A  F099         	movff	?___flmul,_detect_color$3198
  2163  0013A6  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2164  0013AA  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2165  0013AE  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2166  0013B2  C099  F076         	movff	_detect_color$3198,lroundf@x
  2167  0013B6  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2168  0013BA  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2169  0013BE  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2170  0013C2  ECD4  F02A         	call	_lroundf	;wreg free
  2171  0013C6                     
  2172                           ;color.c: 301:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2173  0013C6  0E05               	movlw	5
  2174  0013C8  6E53               	movwf	(??_detect_color+1)^0,c
  2175  0013CA  0E0F               	movlw	15
  2176  0013CC  6E52               	movwf	??_detect_color^0,c
  2177  0013CE  0EF1               	movlw	241
  2178  0013D0                     u6667:
  2179  0013D0  2EE8               	decfsz	wreg,f,c
  2180  0013D2  D7FE               	bra	u6667
  2181  0013D4  2E52               	decfsz	??_detect_color^0,f,c
  2182  0013D6  D7FC               	bra	u6667
  2183  0013D8  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2184  0013DA  D7FA               	bra	u6667
  2185  0013DC  F000               	nop	
  2186  0013DE                     
  2187                           ;color.c: 303:     LED_B();
  2188  0013DE  ECFD  F02B         	call	_LED_B	;wreg free
  2189  0013E2                     
  2190                           ;color.c: 304:     read_color(m);
  2191  0013E2  C080  F00E         	movff	detect_color@m,read_color@m
  2192  0013E6  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2193  0013EA  EC63  F028         	call	_read_color	;wreg free
  2194  0013EE                     
  2195                           ;color.c: 305:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2196  0013EE  0100               	movlb	0	; () banked
  2197  0013F0  EE20 F00C          	lfsr	2,12
  2198  0013F4  5182               	movf	detect_color@w& (0+255),w,b
  2199  0013F6  26D9               	addwf	fsr2l,f,c
  2200  0013F8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2201  0013FA  22DA               	addwfc	fsr2h,f,c
  2202  0013FC  CFDE F052          	movff	postinc2,??_detect_color
  2203  001400  CFDD F053          	movff	postdec2,??_detect_color+1
  2204  001404  C052  F003         	movff	??_detect_color,___xxtofl@val
  2205  001408  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2206  00140C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2207  00140E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2208  001410  0E00               	movlw	0
  2209  001412  EC81  F01C         	call	___xxtofl
  2210  001416  C003  F015         	movff	?___xxtofl,___fldiv@a
  2211  00141A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2212  00141E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2213  001422  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2214  001426  C080  FFD9         	movff	detect_color@m,fsr2l
  2215  00142A  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2216  00142E  CFDE F054          	movff	postinc2,??_detect_color+2
  2217  001432  CFDD F055          	movff	postdec2,??_detect_color+3
  2218  001436  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2219  00143A  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2220  00143E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2221  001440  6A06               	clrf	(___xxtofl@val+3)^0,c
  2222  001442  0E00               	movlw	0
  2223  001444  EC81  F01C         	call	___xxtofl
  2224  001448  C003  F011         	movff	?___xxtofl,___fldiv@b
  2225  00144C  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2226  001450  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2227  001454  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2228  001458  EC58  F013         	call	___fldiv	;wreg free
  2229  00145C  C011  F02A         	movff	?___fldiv,___flmul@b
  2230  001460  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2231  001464  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2232  001468  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2233  00146C  0E00               	movlw	0
  2234  00146E  6E2E               	movwf	___flmul@a^0,c
  2235  001470  0E00               	movlw	0
  2236  001472  6E2F               	movwf	(___flmul@a+1)^0,c
  2237  001474  0EC8               	movlw	200
  2238  001476  6E30               	movwf	(___flmul@a+2)^0,c
  2239  001478  0E42               	movlw	66
  2240  00147A  6E31               	movwf	(___flmul@a+3)^0,c
  2241  00147C  EC6A  F00F         	call	___flmul	;wreg free
  2242  001480  C02A  F099         	movff	?___flmul,_detect_color$3198
  2243  001484  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2244  001488  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2245  00148C  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2246  001490                     
  2247                           ;color.c: 305:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2248  001490  C099  F076         	movff	_detect_color$3198,lroundf@x
  2249  001494  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2250  001498  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2251  00149C  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2252  0014A0  ECD4  F02A         	call	_lroundf	;wreg free
  2253  0014A4  C076  F092         	movff	?_lroundf,detect_color@BR
  2254  0014A8  C077  F093         	movff	?_lroundf+1,detect_color@BR+1
  2255  0014AC  0100               	movlb	0	; () banked
  2256  0014AE  EE20 F00E          	lfsr	2,14
  2257  0014B2  5182               	movf	detect_color@w& (0+255),w,b
  2258  0014B4  26D9               	addwf	fsr2l,f,c
  2259  0014B6  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2260  0014B8  22DA               	addwfc	fsr2h,f,c
  2261  0014BA  CFDE F052          	movff	postinc2,??_detect_color
  2262  0014BE  CFDD F053          	movff	postdec2,??_detect_color+1
  2263  0014C2  C052  F003         	movff	??_detect_color,___xxtofl@val
  2264  0014C6  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2265  0014CA  6A05               	clrf	(___xxtofl@val+2)^0,c
  2266  0014CC  6A06               	clrf	(___xxtofl@val+3)^0,c
  2267  0014CE  0E00               	movlw	0
  2268  0014D0  EC81  F01C         	call	___xxtofl
  2269  0014D4  C003  F015         	movff	?___xxtofl,___fldiv@a
  2270  0014D8  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2271  0014DC  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2272  0014E0  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2273  0014E4  0100               	movlb	0	; () banked
  2274  0014E6  EE20 F002          	lfsr	2,2
  2275  0014EA  5180               	movf	detect_color@m& (0+255),w,b
  2276  0014EC  26D9               	addwf	fsr2l,f,c
  2277  0014EE  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2278  0014F0  22DA               	addwfc	fsr2h,f,c
  2279  0014F2  CFDE F054          	movff	postinc2,??_detect_color+2
  2280  0014F6  CFDD F055          	movff	postdec2,??_detect_color+3
  2281  0014FA  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2282  0014FE  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2283  001502  6A05               	clrf	(___xxtofl@val+2)^0,c
  2284  001504  6A06               	clrf	(___xxtofl@val+3)^0,c
  2285  001506  0E00               	movlw	0
  2286  001508  EC81  F01C         	call	___xxtofl
  2287  00150C  C003  F011         	movff	?___xxtofl,___fldiv@b
  2288  001510  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2289  001514  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2290  001518  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2291  00151C  EC58  F013         	call	___fldiv	;wreg free
  2292  001520  C011  F02A         	movff	?___fldiv,___flmul@b
  2293  001524  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2294  001528  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2295  00152C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2296  001530  0E00               	movlw	0
  2297  001532  6E2E               	movwf	___flmul@a^0,c
  2298  001534  0E00               	movlw	0
  2299  001536  6E2F               	movwf	(___flmul@a+1)^0,c
  2300  001538  0EC8               	movlw	200
  2301  00153A  6E30               	movwf	(___flmul@a+2)^0,c
  2302  00153C  0E42               	movlw	66
  2303  00153E  6E31               	movwf	(___flmul@a+3)^0,c
  2304  001540  EC6A  F00F         	call	___flmul	;wreg free
  2305  001544  C02A  F099         	movff	?___flmul,_detect_color$3198
  2306  001548  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2307  00154C  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2308  001550  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2309  001554  C099  F076         	movff	_detect_color$3198,lroundf@x
  2310  001558  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2311  00155C  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2312  001560  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2313  001564  ECD4  F02A         	call	_lroundf	;wreg free
  2314  001568  C076  F097         	movff	?_lroundf,detect_color@BG
  2315  00156C  C077  F098         	movff	?_lroundf+1,detect_color@BG+1
  2316  001570  0100               	movlb	0	; () banked
  2317  001572  EE20 F010          	lfsr	2,16
  2318  001576  5182               	movf	detect_color@w& (0+255),w,b
  2319  001578  26D9               	addwf	fsr2l,f,c
  2320  00157A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2321  00157C  22DA               	addwfc	fsr2h,f,c
  2322  00157E  CFDE F052          	movff	postinc2,??_detect_color
  2323  001582  CFDD F053          	movff	postdec2,??_detect_color+1
  2324  001586  C052  F003         	movff	??_detect_color,___xxtofl@val
  2325  00158A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2326  00158E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2327  001590  6A06               	clrf	(___xxtofl@val+3)^0,c
  2328  001592  0E00               	movlw	0
  2329  001594  EC81  F01C         	call	___xxtofl
  2330  001598  C003  F015         	movff	?___xxtofl,___fldiv@a
  2331  00159C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2332  0015A0  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2333  0015A4  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2334  0015A8  0100               	movlb	0	; () banked
  2335  0015AA  EE20 F004          	lfsr	2,4
  2336  0015AE  5180               	movf	detect_color@m& (0+255),w,b
  2337  0015B0  26D9               	addwf	fsr2l,f,c
  2338  0015B2  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2339  0015B4  22DA               	addwfc	fsr2h,f,c
  2340  0015B6  CFDE F054          	movff	postinc2,??_detect_color+2
  2341  0015BA  CFDD F055          	movff	postdec2,??_detect_color+3
  2342  0015BE  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2343  0015C2  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2344  0015C6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2345  0015C8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2346  0015CA  0E00               	movlw	0
  2347  0015CC  EC81  F01C         	call	___xxtofl
  2348  0015D0  C003  F011         	movff	?___xxtofl,___fldiv@b
  2349  0015D4  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2350  0015D8  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2351  0015DC  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2352  0015E0  EC58  F013         	call	___fldiv	;wreg free
  2353  0015E4  C011  F02A         	movff	?___fldiv,___flmul@b
  2354  0015E8  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2355  0015EC  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2356  0015F0  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2357  0015F4  0E00               	movlw	0
  2358  0015F6  6E2E               	movwf	___flmul@a^0,c
  2359  0015F8  0E00               	movlw	0
  2360  0015FA  6E2F               	movwf	(___flmul@a+1)^0,c
  2361  0015FC  0EC8               	movlw	200
  2362  0015FE  6E30               	movwf	(___flmul@a+2)^0,c
  2363  001600  0E42               	movlw	66
  2364  001602  6E31               	movwf	(___flmul@a+3)^0,c
  2365  001604  EC6A  F00F         	call	___flmul	;wreg free
  2366  001608  C02A  F099         	movff	?___flmul,_detect_color$3198
  2367  00160C  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2368  001610  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2369  001614  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2370  001618  C099  F076         	movff	_detect_color$3198,lroundf@x
  2371  00161C  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2372  001620  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2373  001624  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2374  001628  ECD4  F02A         	call	_lroundf	;wreg free
  2375  00162C  C076  F094         	movff	?_lroundf,detect_color@BB
  2376  001630  C077  F095         	movff	?_lroundf+1,detect_color@BB+1
  2377  001634                     
  2378                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2379  001634  0E05               	movlw	5
  2380  001636  6E53               	movwf	(??_detect_color+1)^0,c
  2381  001638  0E0F               	movlw	15
  2382  00163A  6E52               	movwf	??_detect_color^0,c
  2383  00163C  0EF1               	movlw	241
  2384  00163E                     u6677:
  2385  00163E  2EE8               	decfsz	wreg,f,c
  2386  001640  D7FE               	bra	u6677
  2387  001642  2E52               	decfsz	??_detect_color^0,f,c
  2388  001644  D7FC               	bra	u6677
  2389  001646  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2390  001648  D7FA               	bra	u6677
  2391  00164A  F000               	nop	
  2392  00164C                     
  2393                           ;color.c: 309:     if (compare(0, BR, 70)){
  2394  00164C  0E00               	movlw	0
  2395  00164E  0100               	movlb	0	; () banked
  2396  001650  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2397  001652  0E00               	movlw	0
  2398  001654  6F7A               	movwf	compare@lower& (0+255),b
  2399  001656  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2400  00165A  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2401  00165E  0E00               	movlw	0
  2402  001660  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2403  001662  0E46               	movlw	70
  2404  001664  6F7E               	movwf	compare@upper& (0+255),b
  2405  001666  ECB7  F02A         	call	_compare	;wreg free
  2406  00166A  0900               	iorlw	0
  2407  00166C  B4D8               	btfsc	status,2,c
  2408  00166E  EF3B  F00B         	goto	u6381
  2409  001672  EF3D  F00B         	goto	u6380
  2410  001676                     u6381:
  2411  001676  EFAE  F00B         	goto	l5943
  2412  00167A                     u6380:
  2413  00167A                     
  2414                           ;color.c: 311:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2415  00167A  C094  F003         	movff	detect_color@BB,___xxtofl@val
  2416  00167E  C095  F004         	movff	detect_color@BB+1,___xxtofl@val+1
  2417  001682  6A05               	clrf	(___xxtofl@val+2)^0,c
  2418  001684  6A06               	clrf	(___xxtofl@val+3)^0,c
  2419  001686  0E00               	movlw	0
  2420  001688  EC81  F01C         	call	___xxtofl
  2421  00168C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2422  001690  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2423  001694  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2424  001698  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2425  00169C  0100               	movlb	0	; () banked
  2426  00169E  5197               	movf	detect_color@BG& (0+255),w,b
  2427  0016A0  258E               	addwf	detect_color@GG& (0+255),w,b
  2428  0016A2  6E52               	movwf	??_detect_color^0,c
  2429  0016A4  5198               	movf	(detect_color@BG+1)& (0+255),w,b
  2430  0016A6  218F               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2431  0016A8  6E53               	movwf	(??_detect_color+1)^0,c
  2432  0016AA  C052  F003         	movff	??_detect_color,___xxtofl@val
  2433  0016AE  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2434  0016B2  6A05               	clrf	(___xxtofl@val+2)^0,c
  2435  0016B4  6A06               	clrf	(___xxtofl@val+3)^0,c
  2436  0016B6  0E00               	movlw	0
  2437  0016B8  EC81  F01C         	call	___xxtofl
  2438  0016BC  C003  F011         	movff	?___xxtofl,___fldiv@b
  2439  0016C0  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2440  0016C4  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2441  0016C8  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2442  0016CC  EC58  F013         	call	___fldiv	;wreg free
  2443  0016D0  C011  F02A         	movff	?___fldiv,___flmul@b
  2444  0016D4  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2445  0016D8  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2446  0016DC  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2447  0016E0  0E00               	movlw	0
  2448  0016E2  6E2E               	movwf	___flmul@a^0,c
  2449  0016E4  0E00               	movlw	0
  2450  0016E6  6E2F               	movwf	(___flmul@a+1)^0,c
  2451  0016E8  0E48               	movlw	72
  2452  0016EA  6E30               	movwf	(___flmul@a+2)^0,c
  2453  0016EC  0E43               	movlw	67
  2454  0016EE  6E31               	movwf	(___flmul@a+3)^0,c
  2455  0016F0  EC6A  F00F         	call	___flmul	;wreg free
  2456  0016F4  C02A  F099         	movff	?___flmul,_detect_color$3198
  2457  0016F8  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2458  0016FC  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2459  001700  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2460                           
  2461                           ;color.c: 311:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2462  001704  0E00               	movlw	0
  2463  001706  0100               	movlb	0	; () banked
  2464  001708  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2465  00170A  0E00               	movlw	0
  2466  00170C  6F7A               	movwf	compare@lower& (0+255),b
  2467  00170E  C099  F076         	movff	_detect_color$3198,lroundf@x
  2468  001712  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2469  001716  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2470  00171A  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2471  00171E  ECD4  F02A         	call	_lroundf	;wreg free
  2472  001722  C076  F07C         	movff	?_lroundf,compare@value2compare
  2473  001726  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2474  00172A  0E01               	movlw	1
  2475  00172C  0100               	movlb	0	; () banked
  2476  00172E  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2477  001730  0E9E               	movlw	158
  2478  001732  6F7E               	movwf	compare@upper& (0+255),b
  2479  001734  ECB7  F02A         	call	_compare	;wreg free
  2480  001738  0900               	iorlw	0
  2481  00173A  B4D8               	btfsc	status,2,c
  2482  00173C  EFA2  F00B         	goto	u6391
  2483  001740  EFA4  F00B         	goto	u6390
  2484  001744                     u6391:
  2485  001744  EFA9  F00B         	goto	l5941
  2486  001748                     u6390:
  2487  001748  0E03               	movlw	3
  2488  00174A  0100               	movlb	0	; () banked
  2489  00174C  6F96               	movwf	detect_color@color& (0+255),b
  2490  00174E  EF8F  F00C         	goto	l5973
  2491  001752                     l5941:
  2492  001752  0E02               	movlw	2
  2493  001754  0100               	movlb	0	; () banked
  2494  001756  6F96               	movwf	detect_color@color& (0+255),b
  2495  001758  EF8F  F00C         	goto	l5973
  2496  00175C                     l5943:
  2497                           
  2498                           ;color.c: 315:         if (compare(0, BG, 75)){
  2499  00175C  0E00               	movlw	0
  2500  00175E  0100               	movlb	0	; () banked
  2501  001760  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2502  001762  0E00               	movlw	0
  2503  001764  6F7A               	movwf	compare@lower& (0+255),b
  2504  001766  C097  F07C         	movff	detect_color@BG,compare@value2compare
  2505  00176A  C098  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2506  00176E  0E00               	movlw	0
  2507  001770  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2508  001772  0E4B               	movlw	75
  2509  001774  6F7E               	movwf	compare@upper& (0+255),b
  2510  001776  ECB7  F02A         	call	_compare	;wreg free
  2511  00177A  0900               	iorlw	0
  2512  00177C  B4D8               	btfsc	status,2,c
  2513  00177E  EFC3  F00B         	goto	u6401
  2514  001782  EFC5  F00B         	goto	u6400
  2515  001786                     u6401:
  2516  001786  EF3F  F00C         	goto	l5955
  2517  00178A                     u6400:
  2518  00178A                     
  2519                           ;color.c: 317:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2520  00178A  C08A  F003         	movff	detect_color@RG,___xxtofl@val
  2521  00178E  C08B  F004         	movff	detect_color@RG+1,___xxtofl@val+1
  2522  001792  6A05               	clrf	(___xxtofl@val+2)^0,c
  2523  001794  6A06               	clrf	(___xxtofl@val+3)^0,c
  2524  001796  0E00               	movlw	0
  2525  001798  EC81  F01C         	call	___xxtofl
  2526  00179C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2527  0017A0  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2528  0017A4  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2529  0017A8  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2530  0017AC  C090  F003         	movff	detect_color@RR,___xxtofl@val
  2531  0017B0  C091  F004         	movff	detect_color@RR+1,___xxtofl@val+1
  2532  0017B4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2533  0017B6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2534  0017B8  0E00               	movlw	0
  2535  0017BA  EC81  F01C         	call	___xxtofl
  2536  0017BE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2537  0017C2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2538  0017C6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2539  0017CA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2540  0017CE  EC58  F013         	call	___fldiv	;wreg free
  2541  0017D2  C011  F02A         	movff	?___fldiv,___flmul@b
  2542  0017D6  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2543  0017DA  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2544  0017DE  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2545  0017E2  0E00               	movlw	0
  2546  0017E4  6E2E               	movwf	___flmul@a^0,c
  2547  0017E6  0E00               	movlw	0
  2548  0017E8  6E2F               	movwf	(___flmul@a+1)^0,c
  2549  0017EA  0EFA               	movlw	250
  2550  0017EC  6E30               	movwf	(___flmul@a+2)^0,c
  2551  0017EE  0E43               	movlw	67
  2552  0017F0  6E31               	movwf	(___flmul@a+3)^0,c
  2553  0017F2  EC6A  F00F         	call	___flmul	;wreg free
  2554  0017F6  C02A  F099         	movff	?___flmul,_detect_color$3198
  2555  0017FA  C02B  F09A         	movff	?___flmul+1,_detect_color$3198+1
  2556  0017FE  C02C  F09B         	movff	?___flmul+2,_detect_color$3198+2
  2557  001802  C02D  F09C         	movff	?___flmul+3,_detect_color$3198+3
  2558                           
  2559                           ;color.c: 317:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2560  001806  0E00               	movlw	0
  2561  001808  0100               	movlb	0	; () banked
  2562  00180A  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2563  00180C  0E00               	movlw	0
  2564  00180E  6F7A               	movwf	compare@lower& (0+255),b
  2565  001810  C099  F076         	movff	_detect_color$3198,lroundf@x
  2566  001814  C09A  F077         	movff	_detect_color$3198+1,lroundf@x+1
  2567  001818  C09B  F078         	movff	_detect_color$3198+2,lroundf@x+2
  2568  00181C  C09C  F079         	movff	_detect_color$3198+3,lroundf@x+3
  2569  001820  ECD4  F02A         	call	_lroundf	;wreg free
  2570  001824  C076  F07C         	movff	?_lroundf,compare@value2compare
  2571  001828  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2572  00182C  0E02               	movlw	2
  2573  00182E  0100               	movlb	0	; () banked
  2574  001830  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2575  001832  0E9E               	movlw	158
  2576  001834  6F7E               	movwf	compare@upper& (0+255),b
  2577  001836  ECB7  F02A         	call	_compare	;wreg free
  2578  00183A  0900               	iorlw	0
  2579  00183C  B4D8               	btfsc	status,2,c
  2580  00183E  EF23  F00C         	goto	u6411
  2581  001842  EF25  F00C         	goto	u6410
  2582  001846                     u6411:
  2583  001846  EF3A  F00C         	goto	l5953
  2584  00184A                     u6410:
  2585  00184A                     
  2586                           ;color.c: 318:                 if (GR > 90){color = 6;}
  2587  00184A  0100               	movlb	0	; () banked
  2588  00184C  518D               	movf	(detect_color@GR+1)& (0+255),w,b
  2589  00184E  E109               	bnz	u6420
  2590  001850  0E5B               	movlw	91
  2591  001852  5D8C               	subwf	detect_color@GR& (0+255),w,b
  2592  001854  A0D8               	btfss	status,0,c
  2593  001856  EF2F  F00C         	goto	u6421
  2594  00185A  EF31  F00C         	goto	u6420
  2595  00185E                     u6421:
  2596  00185E  EF35  F00C         	goto	l5951
  2597  001862                     u6420:
  2598  001862                     
  2599                           ; BSR set to: 0
  2600  001862  0E06               	movlw	6
  2601  001864  6F96               	movwf	detect_color@color& (0+255),b
  2602  001866  EF8F  F00C         	goto	l5973
  2603  00186A                     l5951:
  2604  00186A  0E00               	movlw	0
  2605  00186C  0100               	movlb	0	; () banked
  2606  00186E  6F96               	movwf	detect_color@color& (0+255),b
  2607  001870  EF8F  F00C         	goto	l5973
  2608  001874                     l5953:
  2609  001874  0E01               	movlw	1
  2610  001876  0100               	movlb	0	; () banked
  2611  001878  6F96               	movwf	detect_color@color& (0+255),b
  2612  00187A  EF8F  F00C         	goto	l5973
  2613  00187E                     l5955:
  2614                           
  2615                           ;color.c: 324:             if (compare(0, BR, 90)){
  2616  00187E  0E00               	movlw	0
  2617  001880  0100               	movlb	0	; () banked
  2618  001882  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2619  001884  0E00               	movlw	0
  2620  001886  6F7A               	movwf	compare@lower& (0+255),b
  2621  001888  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2622  00188C  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2623  001890  0E00               	movlw	0
  2624  001892  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2625  001894  0E5A               	movlw	90
  2626  001896  6F7E               	movwf	compare@upper& (0+255),b
  2627  001898  ECB7  F02A         	call	_compare	;wreg free
  2628  00189C  0900               	iorlw	0
  2629  00189E  B4D8               	btfsc	status,2,c
  2630  0018A0  EF54  F00C         	goto	u6431
  2631  0018A4  EF56  F00C         	goto	u6430
  2632  0018A8                     u6431:
  2633  0018A8  EF66  F00C         	goto	l5963
  2634  0018AC                     u6430:
  2635  0018AC                     
  2636                           ;color.c: 325:                 if (BG > 90){color = 7;}
  2637  0018AC  0100               	movlb	0	; () banked
  2638  0018AE  5198               	movf	(detect_color@BG+1)& (0+255),w,b
  2639  0018B0  E109               	bnz	u6440
  2640  0018B2  0E5B               	movlw	91
  2641  0018B4  5D97               	subwf	detect_color@BG& (0+255),w,b
  2642  0018B6  A0D8               	btfss	status,0,c
  2643  0018B8  EF60  F00C         	goto	u6441
  2644  0018BC  EF62  F00C         	goto	u6440
  2645  0018C0                     u6441:
  2646  0018C0  EF35  F00C         	goto	l5951
  2647  0018C4                     u6440:
  2648  0018C4                     
  2649                           ; BSR set to: 0
  2650  0018C4  0E07               	movlw	7
  2651  0018C6  6F96               	movwf	detect_color@color& (0+255),b
  2652  0018C8  EF8F  F00C         	goto	l5973
  2653  0018CC                     l5963:
  2654                           
  2655                           ;color.c: 329:                 if (BG < BB){color = 5;}
  2656  0018CC  0100               	movlb	0	; () banked
  2657  0018CE  5194               	movf	detect_color@BB& (0+255),w,b
  2658  0018D0  5D97               	subwf	detect_color@BG& (0+255),w,b
  2659  0018D2  5195               	movf	(detect_color@BB+1)& (0+255),w,b
  2660  0018D4  5998               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2661  0018D6  B0D8               	btfsc	status,0,c
  2662  0018D8  EF70  F00C         	goto	u6451
  2663  0018DC  EF72  F00C         	goto	u6450
  2664  0018E0                     u6451:
  2665  0018E0  EF76  F00C         	goto	l5967
  2666  0018E4                     u6450:
  2667  0018E4                     
  2668                           ; BSR set to: 0
  2669  0018E4  0E05               	movlw	5
  2670  0018E6  6F96               	movwf	detect_color@color& (0+255),b
  2671  0018E8  EF8F  F00C         	goto	l5973
  2672  0018EC                     l5967:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;color.c: 331:                     if (compare(0, BB, 90)){color = 4;}
  2676  0018EC  0E00               	movlw	0
  2677  0018EE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2678  0018F0  0E00               	movlw	0
  2679  0018F2  6F7A               	movwf	compare@lower& (0+255),b
  2680  0018F4  C094  F07C         	movff	detect_color@BB,compare@value2compare
  2681  0018F8  C095  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2682  0018FC  0E00               	movlw	0
  2683  0018FE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2684  001900  0E5A               	movlw	90
  2685  001902  6F7E               	movwf	compare@upper& (0+255),b
  2686  001904  ECB7  F02A         	call	_compare	;wreg free
  2687  001908  0900               	iorlw	0
  2688  00190A  B4D8               	btfsc	status,2,c
  2689  00190C  EF8A  F00C         	goto	u6461
  2690  001910  EF8C  F00C         	goto	u6460
  2691  001914                     u6461:
  2692  001914  EF35  F00C         	goto	l5951
  2693  001918                     u6460:
  2694  001918  0E04               	movlw	4
  2695  00191A  0100               	movlb	0	; () banked
  2696  00191C  6F96               	movwf	detect_color@color& (0+255),b
  2697  00191E                     l5973:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;color.c: 338:     if (compare(95, BR, 105) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  2701  00191E  0E00               	movlw	0
  2702  001920  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2703  001922  0E5F               	movlw	95
  2704  001924  6F7A               	movwf	compare@lower& (0+255),b
  2705  001926  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2706  00192A  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2707  00192E  0E00               	movlw	0
  2708  001930  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2709  001932  0E69               	movlw	105
  2710  001934  6F7E               	movwf	compare@upper& (0+255),b
  2711  001936  ECB7  F02A         	call	_compare	;wreg free
  2712  00193A  0900               	iorlw	0
  2713  00193C  B4D8               	btfsc	status,2,c
  2714  00193E  EFA3  F00C         	goto	u6471
  2715  001942  EFA5  F00C         	goto	u6470
  2716  001946                     u6471:
  2717  001946  EFD6  F00C         	goto	l5981
  2718  00194A                     u6470:
  2719  00194A  0E00               	movlw	0
  2720  00194C  0100               	movlb	0	; () banked
  2721  00194E  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2722  001950  0E5F               	movlw	95
  2723  001952  6F7A               	movwf	compare@lower& (0+255),b
  2724  001954  C097  F07C         	movff	detect_color@BG,compare@value2compare
  2725  001958  C098  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2726  00195C  0E00               	movlw	0
  2727  00195E  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2728  001960  0E69               	movlw	105
  2729  001962  6F7E               	movwf	compare@upper& (0+255),b
  2730  001964  ECB7  F02A         	call	_compare	;wreg free
  2731  001968  0900               	iorlw	0
  2732  00196A  B4D8               	btfsc	status,2,c
  2733  00196C  EFBA  F00C         	goto	u6481
  2734  001970  EFBC  F00C         	goto	u6480
  2735  001974                     u6481:
  2736  001974  EFD6  F00C         	goto	l5981
  2737  001978                     u6480:
  2738  001978  0E00               	movlw	0
  2739  00197A  0100               	movlb	0	; () banked
  2740  00197C  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2741  00197E  0E5F               	movlw	95
  2742  001980  6F7A               	movwf	compare@lower& (0+255),b
  2743  001982  C094  F07C         	movff	detect_color@BB,compare@value2compare
  2744  001986  C095  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2745  00198A  0E00               	movlw	0
  2746  00198C  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2747  00198E  0E69               	movlw	105
  2748  001990  6F7E               	movwf	compare@upper& (0+255),b
  2749  001992  ECB7  F02A         	call	_compare	;wreg free
  2750  001996  0900               	iorlw	0
  2751  001998  B4D8               	btfsc	status,2,c
  2752  00199A  EFD1  F00C         	goto	u6491
  2753  00199E  EFD3  F00C         	goto	u6490
  2754  0019A2                     u6491:
  2755  0019A2  EFD6  F00C         	goto	l5981
  2756  0019A6                     u6490:
  2757  0019A6  0E08               	movlw	8
  2758  0019A8  0100               	movlb	0	; () banked
  2759  0019AA  6F96               	movwf	detect_color@color& (0+255),b
  2760  0019AC                     l5981:
  2761                           
  2762                           ;color.c: 339:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2763  0019AC  0E00               	movlw	0
  2764  0019AE  0100               	movlb	0	; () banked
  2765  0019B0  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2766  0019B2  0E00               	movlw	0
  2767  0019B4  6F7A               	movwf	compare@lower& (0+255),b
  2768  0019B6  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2769  0019BA  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2770  0019BE  0E00               	movlw	0
  2771  0019C0  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2772  0019C2  0E19               	movlw	25
  2773  0019C4  6F7E               	movwf	compare@upper& (0+255),b
  2774  0019C6  ECB7  F02A         	call	_compare	;wreg free
  2775  0019CA  0900               	iorlw	0
  2776  0019CC  B4D8               	btfsc	status,2,c
  2777  0019CE  EFEB  F00C         	goto	u6501
  2778  0019D2  EFED  F00C         	goto	u6500
  2779  0019D6                     u6501:
  2780  0019D6  EF07  F00D         	goto	l169
  2781  0019DA                     u6500:
  2782  0019DA  0E00               	movlw	0
  2783  0019DC  0100               	movlb	0	; () banked
  2784  0019DE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2785  0019E0  0E00               	movlw	0
  2786  0019E2  6F7A               	movwf	compare@lower& (0+255),b
  2787  0019E4  C090  F07C         	movff	detect_color@RR,compare@value2compare
  2788  0019E8  C091  F07D         	movff	detect_color@RR+1,compare@value2compare+1
  2789  0019EC  0E00               	movlw	0
  2790  0019EE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2791  0019F0  0E5A               	movlw	90
  2792  0019F2  6F7E               	movwf	compare@upper& (0+255),b
  2793  0019F4  ECB7  F02A         	call	_compare	;wreg free
  2794  0019F8  0900               	iorlw	0
  2795  0019FA  B4D8               	btfsc	status,2,c
  2796  0019FC  EF02  F00D         	goto	u6511
  2797  001A00  EF04  F00D         	goto	u6510
  2798  001A04                     u6511:
  2799  001A04  EF07  F00D         	goto	l169
  2800  001A08                     u6510:
  2801  001A08  0E00               	movlw	0
  2802  001A0A  0100               	movlb	0	; () banked
  2803  001A0C  6F96               	movwf	detect_color@color& (0+255),b
  2804  001A0E                     l169:
  2805                           
  2806                           ;color.c: 355:     return color;
  2807  001A0E  0100               	movlb	0	; () banked
  2808  001A10  5196               	movf	detect_color@color& (0+255),w,b
  2809  001A12                     
  2810                           ; BSR set to: 0
  2811  001A12  0012               	return		;funcret
  2812  001A14                     __end_of_detect_color:
  2813                           	callstack 0
  2814                           
  2815 ;; *************** function _compare *****************
  2816 ;; Defined at:
  2817 ;;		line 358 in file "color.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  lower           2   26[BANK0 ] unsigned int 
  2820 ;;  value2compar    2   28[BANK0 ] unsigned int 
  2821 ;;  upper           2   30[BANK0 ] unsigned int 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  result          1   80[COMRAM] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      unsigned char 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2833 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;Total ram usage:        7 bytes
  2838 ;; Hardware stack levels used: 1
  2839 ;; Hardware stack levels required when called: 2
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_detect_color
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text3
  2848  00556E                     __ptext3:
  2849                           	callstack 0
  2850  00556E                     _compare:
  2851                           	callstack 26
  2852  00556E                     
  2853                           ;color.c: 358: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 359: {;color.c: 360:     unsigned char result = 0;
  2854  00556E  0E00               	movlw	0
  2855  005570  6E51               	movwf	compare@result^0,c
  2856  005572                     
  2857                           ;color.c: 361:     if (lower < value2compare && value2compare <= upper){result = 1;}
  2858  005572  0100               	movlb	0	; () banked
  2859  005574  517C               	movf	compare@value2compare& (0+255),w,b
  2860  005576  5D7A               	subwf	compare@lower& (0+255),w,b
  2861  005578  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  2862  00557A  597B               	subwfb	(compare@lower+1)& (0+255),w,b
  2863  00557C  B0D8               	btfsc	status,0,c
  2864  00557E  EFC3  F02A         	goto	u6361
  2865  005582  EFC5  F02A         	goto	u6360
  2866  005586                     u6361:
  2867  005586  EFD2  F02A         	goto	l173
  2868  00558A                     u6360:
  2869  00558A                     
  2870                           ; BSR set to: 0
  2871  00558A  517C               	movf	compare@value2compare& (0+255),w,b
  2872  00558C  5D7E               	subwf	compare@upper& (0+255),w,b
  2873  00558E  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  2874  005590  597F               	subwfb	(compare@upper+1)& (0+255),w,b
  2875  005592  A0D8               	btfss	status,0,c
  2876  005594  EFCE  F02A         	goto	u6371
  2877  005598  EFD0  F02A         	goto	u6370
  2878  00559C                     u6371:
  2879  00559C  EFD2  F02A         	goto	l173
  2880  0055A0                     u6370:
  2881  0055A0                     
  2882                           ; BSR set to: 0
  2883  0055A0  0E01               	movlw	1
  2884  0055A2  6E51               	movwf	compare@result^0,c
  2885  0055A4                     l173:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;color.c: 362:     return result;
  2889  0055A4  5051               	movf	compare@result^0,w,c
  2890  0055A6                     
  2891                           ; BSR set to: 0
  2892  0055A6  0012               	return		;funcret
  2893  0055A8                     __end_of_compare:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _toggle_light *****************
  2897 ;; Defined at:
  2898 ;;		line 27 in file "color.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  lightnumber     1    wreg     unsigned char 
  2901 ;;  toggletime      1    2[COMRAM] unsigned char 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  lightnumber     1    6[COMRAM] unsigned char 
  2904 ;;  i               1    5[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2914 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2917 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2918 ;;Total ram usage:        5 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 2
  2921 ;; This function calls:
  2922 ;;		Nothing
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text4
  2929  003032                     __ptext4:
  2930                           	callstack 0
  2931  003032                     _toggle_light:
  2932                           	callstack 28
  2933                           
  2934                           ; BSR set to: 0
  2935                           ;incstack = 0
  2936                           ;toggle_light@lightnumber stored from wreg
  2937  003032  6E07               	movwf	toggle_light@lightnumber^0,c
  2938  003034                     
  2939                           ;color.c: 27: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 28: {;color.c: 29:     unsigned char i = 0;
  2940  003034  0E00               	movlw	0
  2941  003036  6E06               	movwf	toggle_light@i^0,c
  2942                           
  2943                           ;color.c: 31:     for (i = 0; i < toggletime; i++){
  2944  003038  0E00               	movlw	0
  2945  00303A  6E06               	movwf	toggle_light@i^0,c
  2946  00303C  EF65  F019         	goto	l80
  2947  003040                     l4907:
  2948                           
  2949                           ;color.c: 32:         if (lightnumber == 1){
  2950  003040  0407               	decf	toggle_light@lightnumber^0,w,c
  2951  003042  A4D8               	btfss	status,2,c
  2952  003044  EF26  F018         	goto	u4981
  2953  003048  EF28  F018         	goto	u4980
  2954  00304C                     u4981:
  2955  00304C  EF60  F018         	goto	l4915
  2956  003050                     u4980:
  2957  003050                     
  2958                           ;color.c: 33:             LATHbits.LATH1 = !LATHbits.LATH1;
  2959  003050  A280               	btfss	128,1,c	;volatile
  2960  003052  EF2D  F018         	goto	u4991
  2961  003056  EF31  F018         	goto	u4990
  2962  00305A                     u4991:
  2963  00305A  6A04               	clrf	??_toggle_light^0,c
  2964  00305C  2A04               	incf	??_toggle_light^0,f,c
  2965  00305E  EF32  F018         	goto	u5008
  2966  003062                     u4990:
  2967  003062  6A04               	clrf	??_toggle_light^0,c
  2968  003064                     u5008:
  2969  003064  4604               	rlncf	??_toggle_light^0,f,c
  2970  003066  5080               	movf	128,w,c	;volatile
  2971  003068  1804               	xorwf	??_toggle_light^0,w,c
  2972  00306A  0BFD               	andlw	-3
  2973  00306C  1804               	xorwf	??_toggle_light^0,w,c
  2974  00306E  6E80               	movwf	128,c	;volatile
  2975  003070                     
  2976                           ;color.c: 34:             _delay((unsigned long)((500)*(64000000/4000.0)));
  2977  003070  0E29               	movlw	41
  2978  003072  6E05               	movwf	(??_toggle_light+1)^0,c
  2979  003074  0E96               	movlw	150
  2980  003076  6E04               	movwf	??_toggle_light^0,c
  2981  003078  0E7F               	movlw	127
  2982  00307A                     u6687:
  2983  00307A  2EE8               	decfsz	wreg,f,c
  2984  00307C  D7FE               	bra	u6687
  2985  00307E  2E04               	decfsz	??_toggle_light^0,f,c
  2986  003080  D7FC               	bra	u6687
  2987  003082  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  2988  003084  D7FA               	bra	u6687
  2989  003086  F000               	nop	
  2990  003088                     
  2991                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  2992  003088  A280               	btfss	128,1,c	;volatile
  2993  00308A  EF49  F018         	goto	u5011
  2994  00308E  EF4D  F018         	goto	u5010
  2995  003092                     u5011:
  2996  003092  6A04               	clrf	??_toggle_light^0,c
  2997  003094  2A04               	incf	??_toggle_light^0,f,c
  2998  003096  EF4E  F018         	goto	u5028
  2999  00309A                     u5010:
  3000  00309A  6A04               	clrf	??_toggle_light^0,c
  3001  00309C                     u5028:
  3002  00309C  4604               	rlncf	??_toggle_light^0,f,c
  3003  00309E  5080               	movf	128,w,c	;volatile
  3004  0030A0  1804               	xorwf	??_toggle_light^0,w,c
  3005  0030A2  0BFD               	andlw	-3
  3006  0030A4  1804               	xorwf	??_toggle_light^0,w,c
  3007  0030A6  6E80               	movwf	128,c	;volatile
  3008                           
  3009                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3010  0030A8  0E29               	movlw	41
  3011  0030AA  6E05               	movwf	(??_toggle_light+1)^0,c
  3012  0030AC  0E96               	movlw	150
  3013  0030AE  6E04               	movwf	??_toggle_light^0,c
  3014  0030B0  0E7F               	movlw	127
  3015  0030B2                     u6697:
  3016  0030B2  2EE8               	decfsz	wreg,f,c
  3017  0030B4  D7FE               	bra	u6697
  3018  0030B6  2E04               	decfsz	??_toggle_light^0,f,c
  3019  0030B8  D7FC               	bra	u6697
  3020  0030BA  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3021  0030BC  D7FA               	bra	u6697
  3022  0030BE  F000               	nop	
  3023  0030C0                     l4915:
  3024                           
  3025                           ;color.c: 38:         if (lightnumber == 2){
  3026  0030C0  0E02               	movlw	2
  3027  0030C2  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3028  0030C4  A4D8               	btfss	status,2,c
  3029  0030C6  EF67  F018         	goto	u5031
  3030  0030CA  EF69  F018         	goto	u5030
  3031  0030CE                     u5031:
  3032  0030CE  EFA1  F018         	goto	l4923
  3033  0030D2                     u5030:
  3034  0030D2                     
  3035                           ;color.c: 39:             LATDbits.LATD4 = !LATDbits.LATD4;
  3036  0030D2  A87C               	btfss	124,4,c	;volatile
  3037  0030D4  EF6E  F018         	goto	u5041
  3038  0030D8  EF72  F018         	goto	u5040
  3039  0030DC                     u5041:
  3040  0030DC  6A04               	clrf	??_toggle_light^0,c
  3041  0030DE  2A04               	incf	??_toggle_light^0,f,c
  3042  0030E0  EF73  F018         	goto	u5058
  3043  0030E4                     u5040:
  3044  0030E4  6A04               	clrf	??_toggle_light^0,c
  3045  0030E6                     u5058:
  3046  0030E6  3A04               	swapf	??_toggle_light^0,f,c
  3047  0030E8  507C               	movf	124,w,c	;volatile
  3048  0030EA  1804               	xorwf	??_toggle_light^0,w,c
  3049  0030EC  0BEF               	andlw	-17
  3050  0030EE  1804               	xorwf	??_toggle_light^0,w,c
  3051  0030F0  6E7C               	movwf	124,c	;volatile
  3052  0030F2                     
  3053                           ;color.c: 40:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3054  0030F2  0E29               	movlw	41
  3055  0030F4  6E05               	movwf	(??_toggle_light+1)^0,c
  3056  0030F6  0E96               	movlw	150
  3057  0030F8  6E04               	movwf	??_toggle_light^0,c
  3058  0030FA  0E7F               	movlw	127
  3059  0030FC                     u6707:
  3060  0030FC  2EE8               	decfsz	wreg,f,c
  3061  0030FE  D7FE               	bra	u6707
  3062  003100  2E04               	decfsz	??_toggle_light^0,f,c
  3063  003102  D7FC               	bra	u6707
  3064  003104  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3065  003106  D7FA               	bra	u6707
  3066  003108  F000               	nop	
  3067  00310A                     
  3068                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  3069  00310A  A87C               	btfss	124,4,c	;volatile
  3070  00310C  EF8A  F018         	goto	u5061
  3071  003110  EF8E  F018         	goto	u5060
  3072  003114                     u5061:
  3073  003114  6A04               	clrf	??_toggle_light^0,c
  3074  003116  2A04               	incf	??_toggle_light^0,f,c
  3075  003118  EF8F  F018         	goto	u5078
  3076  00311C                     u5060:
  3077  00311C  6A04               	clrf	??_toggle_light^0,c
  3078  00311E                     u5078:
  3079  00311E  3A04               	swapf	??_toggle_light^0,f,c
  3080  003120  507C               	movf	124,w,c	;volatile
  3081  003122  1804               	xorwf	??_toggle_light^0,w,c
  3082  003124  0BEF               	andlw	-17
  3083  003126  1804               	xorwf	??_toggle_light^0,w,c
  3084  003128  6E7C               	movwf	124,c	;volatile
  3085                           
  3086                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3087  00312A  0E29               	movlw	41
  3088  00312C  6E05               	movwf	(??_toggle_light+1)^0,c
  3089  00312E  0E96               	movlw	150
  3090  003130  6E04               	movwf	??_toggle_light^0,c
  3091  003132  0E7F               	movlw	127
  3092  003134                     u6717:
  3093  003134  2EE8               	decfsz	wreg,f,c
  3094  003136  D7FE               	bra	u6717
  3095  003138  2E04               	decfsz	??_toggle_light^0,f,c
  3096  00313A  D7FC               	bra	u6717
  3097  00313C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3098  00313E  D7FA               	bra	u6717
  3099  003140  F000               	nop	
  3100  003142                     l4923:
  3101                           
  3102                           ;color.c: 44:         if (lightnumber == 3){
  3103  003142  0E03               	movlw	3
  3104  003144  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3105  003146  A4D8               	btfss	status,2,c
  3106  003148  EFA8  F018         	goto	u5081
  3107  00314C  EFAA  F018         	goto	u5080
  3108  003150                     u5081:
  3109  003150  EFE6  F018         	goto	l4931
  3110  003154                     u5080:
  3111  003154                     
  3112                           ;color.c: 45:             LATDbits.LATD3 = !LATDbits.LATD3;
  3113  003154  A67C               	btfss	124,3,c	;volatile
  3114  003156  EFAF  F018         	goto	u5091
  3115  00315A  EFB3  F018         	goto	u5090
  3116  00315E                     u5091:
  3117  00315E  6A04               	clrf	??_toggle_light^0,c
  3118  003160  2A04               	incf	??_toggle_light^0,f,c
  3119  003162  EFB4  F018         	goto	u5108
  3120  003166                     u5090:
  3121  003166  6A04               	clrf	??_toggle_light^0,c
  3122  003168                     u5108:
  3123  003168  4604               	rlncf	??_toggle_light^0,f,c
  3124  00316A  4604               	rlncf	??_toggle_light^0,f,c
  3125  00316C  4604               	rlncf	??_toggle_light^0,f,c
  3126  00316E  507C               	movf	124,w,c	;volatile
  3127  003170  1804               	xorwf	??_toggle_light^0,w,c
  3128  003172  0BF7               	andlw	-9
  3129  003174  1804               	xorwf	??_toggle_light^0,w,c
  3130  003176  6E7C               	movwf	124,c	;volatile
  3131  003178                     
  3132                           ;color.c: 46:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3133  003178  0E29               	movlw	41
  3134  00317A  6E05               	movwf	(??_toggle_light+1)^0,c
  3135  00317C  0E96               	movlw	150
  3136  00317E  6E04               	movwf	??_toggle_light^0,c
  3137  003180  0E7F               	movlw	127
  3138  003182                     u6727:
  3139  003182  2EE8               	decfsz	wreg,f,c
  3140  003184  D7FE               	bra	u6727
  3141  003186  2E04               	decfsz	??_toggle_light^0,f,c
  3142  003188  D7FC               	bra	u6727
  3143  00318A  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3144  00318C  D7FA               	bra	u6727
  3145  00318E  F000               	nop	
  3146  003190                     
  3147                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  3148  003190  A67C               	btfss	124,3,c	;volatile
  3149  003192  EFCD  F018         	goto	u5111
  3150  003196  EFD1  F018         	goto	u5110
  3151  00319A                     u5111:
  3152  00319A  6A04               	clrf	??_toggle_light^0,c
  3153  00319C  2A04               	incf	??_toggle_light^0,f,c
  3154  00319E  EFD2  F018         	goto	u5128
  3155  0031A2                     u5110:
  3156  0031A2  6A04               	clrf	??_toggle_light^0,c
  3157  0031A4                     u5128:
  3158  0031A4  4604               	rlncf	??_toggle_light^0,f,c
  3159  0031A6  4604               	rlncf	??_toggle_light^0,f,c
  3160  0031A8  4604               	rlncf	??_toggle_light^0,f,c
  3161  0031AA  507C               	movf	124,w,c	;volatile
  3162  0031AC  1804               	xorwf	??_toggle_light^0,w,c
  3163  0031AE  0BF7               	andlw	-9
  3164  0031B0  1804               	xorwf	??_toggle_light^0,w,c
  3165  0031B2  6E7C               	movwf	124,c	;volatile
  3166                           
  3167                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3168  0031B4  0E29               	movlw	41
  3169  0031B6  6E05               	movwf	(??_toggle_light+1)^0,c
  3170  0031B8  0E96               	movlw	150
  3171  0031BA  6E04               	movwf	??_toggle_light^0,c
  3172  0031BC  0E7F               	movlw	127
  3173  0031BE                     u6737:
  3174  0031BE  2EE8               	decfsz	wreg,f,c
  3175  0031C0  D7FE               	bra	u6737
  3176  0031C2  2E04               	decfsz	??_toggle_light^0,f,c
  3177  0031C4  D7FC               	bra	u6737
  3178  0031C6  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3179  0031C8  D7FA               	bra	u6737
  3180  0031CA  F000               	nop	
  3181  0031CC                     l4931:
  3182                           
  3183                           ;color.c: 50:         if (lightnumber == 4){
  3184  0031CC  0E04               	movlw	4
  3185  0031CE  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3186  0031D0  A4D8               	btfss	status,2,c
  3187  0031D2  EFED  F018         	goto	u5131
  3188  0031D6  EFEF  F018         	goto	u5130
  3189  0031DA                     u5131:
  3190  0031DA  EF25  F019         	goto	l4939
  3191  0031DE                     u5130:
  3192  0031DE                     
  3193                           ;color.c: 51:             LATFbits.LATF0 = !LATFbits.LATF0;
  3194  0031DE  A07E               	btfss	126,0,c	;volatile
  3195  0031E0  EFF4  F018         	goto	u5141
  3196  0031E4  EFF8  F018         	goto	u5140
  3197  0031E8                     u5141:
  3198  0031E8  6A04               	clrf	??_toggle_light^0,c
  3199  0031EA  2A04               	incf	??_toggle_light^0,f,c
  3200  0031EC  EFF9  F018         	goto	u5158
  3201  0031F0                     u5140:
  3202  0031F0  6A04               	clrf	??_toggle_light^0,c
  3203  0031F2                     u5158:
  3204  0031F2  507E               	movf	126,w,c	;volatile
  3205  0031F4  1804               	xorwf	??_toggle_light^0,w,c
  3206  0031F6  0BFE               	andlw	-2
  3207  0031F8  1804               	xorwf	??_toggle_light^0,w,c
  3208  0031FA  6E7E               	movwf	126,c	;volatile
  3209  0031FC                     
  3210                           ;color.c: 52:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3211  0031FC  0E29               	movlw	41
  3212  0031FE  6E05               	movwf	(??_toggle_light+1)^0,c
  3213  003200  0E96               	movlw	150
  3214  003202  6E04               	movwf	??_toggle_light^0,c
  3215  003204  0E7F               	movlw	127
  3216  003206                     u6747:
  3217  003206  2EE8               	decfsz	wreg,f,c
  3218  003208  D7FE               	bra	u6747
  3219  00320A  2E04               	decfsz	??_toggle_light^0,f,c
  3220  00320C  D7FC               	bra	u6747
  3221  00320E  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3222  003210  D7FA               	bra	u6747
  3223  003212  F000               	nop	
  3224  003214                     
  3225                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  3226  003214  A07E               	btfss	126,0,c	;volatile
  3227  003216  EF0F  F019         	goto	u5161
  3228  00321A  EF13  F019         	goto	u5160
  3229  00321E                     u5161:
  3230  00321E  6A04               	clrf	??_toggle_light^0,c
  3231  003220  2A04               	incf	??_toggle_light^0,f,c
  3232  003222  EF14  F019         	goto	u5178
  3233  003226                     u5160:
  3234  003226  6A04               	clrf	??_toggle_light^0,c
  3235  003228                     u5178:
  3236  003228  507E               	movf	126,w,c	;volatile
  3237  00322A  1804               	xorwf	??_toggle_light^0,w,c
  3238  00322C  0BFE               	andlw	-2
  3239  00322E  1804               	xorwf	??_toggle_light^0,w,c
  3240  003230  6E7E               	movwf	126,c	;volatile
  3241                           
  3242                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3243  003232  0E29               	movlw	41
  3244  003234  6E05               	movwf	(??_toggle_light+1)^0,c
  3245  003236  0E96               	movlw	150
  3246  003238  6E04               	movwf	??_toggle_light^0,c
  3247  00323A  0E7F               	movlw	127
  3248  00323C                     u6757:
  3249  00323C  2EE8               	decfsz	wreg,f,c
  3250  00323E  D7FE               	bra	u6757
  3251  003240  2E04               	decfsz	??_toggle_light^0,f,c
  3252  003242  D7FC               	bra	u6757
  3253  003244  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3254  003246  D7FA               	bra	u6757
  3255  003248  F000               	nop	
  3256  00324A                     l4939:
  3257                           
  3258                           ;color.c: 56:         if (lightnumber == 3){
  3259  00324A  0E03               	movlw	3
  3260  00324C  1807               	xorwf	toggle_light@lightnumber^0,w,c
  3261  00324E  A4D8               	btfss	status,2,c
  3262  003250  EF2C  F019         	goto	u5181
  3263  003254  EF2E  F019         	goto	u5180
  3264  003258                     u5181:
  3265  003258  EF64  F019         	goto	l4947
  3266  00325C                     u5180:
  3267  00325C                     
  3268                           ;color.c: 57:             LATHbits.LATH0 = !LATHbits.LATH0;
  3269  00325C  A080               	btfss	128,0,c	;volatile
  3270  00325E  EF33  F019         	goto	u5191
  3271  003262  EF37  F019         	goto	u5190
  3272  003266                     u5191:
  3273  003266  6A04               	clrf	??_toggle_light^0,c
  3274  003268  2A04               	incf	??_toggle_light^0,f,c
  3275  00326A  EF38  F019         	goto	u5208
  3276  00326E                     u5190:
  3277  00326E  6A04               	clrf	??_toggle_light^0,c
  3278  003270                     u5208:
  3279  003270  5080               	movf	128,w,c	;volatile
  3280  003272  1804               	xorwf	??_toggle_light^0,w,c
  3281  003274  0BFE               	andlw	-2
  3282  003276  1804               	xorwf	??_toggle_light^0,w,c
  3283  003278  6E80               	movwf	128,c	;volatile
  3284  00327A                     
  3285                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3286  00327A  0E29               	movlw	41
  3287  00327C  6E05               	movwf	(??_toggle_light+1)^0,c
  3288  00327E  0E96               	movlw	150
  3289  003280  6E04               	movwf	??_toggle_light^0,c
  3290  003282  0E7F               	movlw	127
  3291  003284                     u6767:
  3292  003284  2EE8               	decfsz	wreg,f,c
  3293  003286  D7FE               	bra	u6767
  3294  003288  2E04               	decfsz	??_toggle_light^0,f,c
  3295  00328A  D7FC               	bra	u6767
  3296  00328C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3297  00328E  D7FA               	bra	u6767
  3298  003290  F000               	nop	
  3299  003292                     
  3300                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  3301  003292  A080               	btfss	128,0,c	;volatile
  3302  003294  EF4E  F019         	goto	u5211
  3303  003298  EF52  F019         	goto	u5210
  3304  00329C                     u5211:
  3305  00329C  6A04               	clrf	??_toggle_light^0,c
  3306  00329E  2A04               	incf	??_toggle_light^0,f,c
  3307  0032A0  EF53  F019         	goto	u5228
  3308  0032A4                     u5210:
  3309  0032A4  6A04               	clrf	??_toggle_light^0,c
  3310  0032A6                     u5228:
  3311  0032A6  5080               	movf	128,w,c	;volatile
  3312  0032A8  1804               	xorwf	??_toggle_light^0,w,c
  3313  0032AA  0BFE               	andlw	-2
  3314  0032AC  1804               	xorwf	??_toggle_light^0,w,c
  3315  0032AE  6E80               	movwf	128,c	;volatile
  3316                           
  3317                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  3318  0032B0  0E29               	movlw	41
  3319  0032B2  6E05               	movwf	(??_toggle_light+1)^0,c
  3320  0032B4  0E96               	movlw	150
  3321  0032B6  6E04               	movwf	??_toggle_light^0,c
  3322  0032B8  0E7F               	movlw	127
  3323  0032BA                     u6777:
  3324  0032BA  2EE8               	decfsz	wreg,f,c
  3325  0032BC  D7FE               	bra	u6777
  3326  0032BE  2E04               	decfsz	??_toggle_light^0,f,c
  3327  0032C0  D7FC               	bra	u6777
  3328  0032C2  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  3329  0032C4  D7FA               	bra	u6777
  3330  0032C6  F000               	nop	
  3331  0032C8                     l4947:
  3332                           
  3333                           ;color.c: 62:     }
  3334  0032C8  2A06               	incf	toggle_light@i^0,f,c
  3335  0032CA                     l80:
  3336  0032CA  5003               	movf	toggle_light@toggletime^0,w,c
  3337  0032CC  5C06               	subwf	toggle_light@i^0,w,c
  3338  0032CE  A0D8               	btfss	status,0,c
  3339  0032D0  EF6C  F019         	goto	u5231
  3340  0032D4  EF6E  F019         	goto	u5230
  3341  0032D8                     u5231:
  3342  0032D8  EF20  F018         	goto	l4907
  3343  0032DC                     u5230:
  3344  0032DC  0012               	return		;funcret
  3345  0032DE                     __end_of_toggle_light:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _short_burst *****************
  3349 ;; Defined at:
  3350 ;;		line 11 in file "movement.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  3353 ;;		 -> main@motorL(10), 
  3354 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  3355 ;;		 -> main@motorR(10), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;Total ram usage:        6 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 5
  3374 ;; This function calls:
  3375 ;;		_fullSpeedAhead
  3376 ;;		_stop
  3377 ;; This function is called by:
  3378 ;;		_main
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text5
  3383  005124                     __ptext5:
  3384                           	callstack 0
  3385  005124                     _short_burst:
  3386                           	callstack 25
  3387  005124                     
  3388                           ;movement.c: 11: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          12: {;movement.c: 13:     fullSpeedAhead(mL,mR);
  3389  005124  C022  F01C         	movff	short_burst@mL,fullSpeedAhead@mL
  3390  005128  C023  F01D         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  3391  00512C  C024  F01E         	movff	short_burst@mR,fullSpeedAhead@mR
  3392  005130  C025  F01F         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  3393  005134  ECB0  F027         	call	_fullSpeedAhead	;wreg free
  3394  005138                     
  3395                           ;movement.c: 14:     _delay((unsigned long)((300)*(64000000/4000.0)));
  3396  005138  0E19               	movlw	25
  3397  00513A  6E27               	movwf	(??_short_burst+1)^0,c
  3398  00513C  0E5A               	movlw	90
  3399  00513E  6E26               	movwf	??_short_burst^0,c
  3400  005140  0EB2               	movlw	178
  3401  005142                     u6787:
  3402  005142  2EE8               	decfsz	wreg,f,c
  3403  005144  D7FE               	bra	u6787
  3404  005146  2E26               	decfsz	??_short_burst^0,f,c
  3405  005148  D7FC               	bra	u6787
  3406  00514A  2E27               	decfsz	(??_short_burst+1)^0,f,c
  3407  00514C  D7FA               	bra	u6787
  3408  00514E                     
  3409                           ;movement.c: 15:     stop(mL,mR);
  3410  00514E  C022  F01C         	movff	short_burst@mL,stop@mL
  3411  005152  C023  F01D         	movff	short_burst@mL+1,stop@mL+1
  3412  005156  C024  F01E         	movff	short_burst@mR,stop@mR
  3413  00515A  C025  F01F         	movff	short_burst@mR+1,stop@mR+1
  3414  00515E  ECFC  F026         	call	_stop	;wreg free
  3415                           
  3416                           ;movement.c: 16:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3417  005162  0E29               	movlw	41
  3418  005164  6E27               	movwf	(??_short_burst+1)^0,c
  3419  005166  0E96               	movlw	150
  3420  005168  6E26               	movwf	??_short_burst^0,c
  3421  00516A  0E7F               	movlw	127
  3422  00516C                     u6797:
  3423  00516C  2EE8               	decfsz	wreg,f,c
  3424  00516E  D7FE               	bra	u6797
  3425  005170  2E26               	decfsz	??_short_burst^0,f,c
  3426  005172  D7FC               	bra	u6797
  3427  005174  2E27               	decfsz	(??_short_burst+1)^0,f,c
  3428  005176  D7FA               	bra	u6797
  3429  005178  F000               	nop	
  3430  00517A  0012               	return		;funcret
  3431  00517C                     __end_of_short_burst:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function _pin_init *****************
  3435 ;; Defined at:
  3436 ;;		line 91 in file "movement.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		None
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;Total ram usage:        0 bytes
  3455 ;; Hardware stack levels used: 1
  3456 ;; Hardware stack levels required when called: 2
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text6
  3465  00575A                     __ptext6:
  3466                           	callstack 0
  3467  00575A                     _pin_init:
  3468                           	callstack 28
  3469  00575A  8486               	bsf	134,2,c	;volatile
  3470                           
  3471                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
  3472  00575C  010E               	movlb	14	; () banked
  3473  00575E  95B4               	bcf	180,2,b	;volatile
  3474                           
  3475                           ;movement.c: 94:     TRISFbits.TRISF3=1;
  3476  005760  8686               	bsf	134,3,c	;volatile
  3477                           
  3478                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
  3479  005762  97B4               	bcf	180,3,b	;volatile
  3480                           
  3481                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
  3482  005764  9287               	bcf	135,1,c	;volatile
  3483                           
  3484                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
  3485  005766  9E86               	bcf	134,7,c	;volatile
  3486                           
  3487                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
  3488  005768  9881               	bcf	129,4,c	;volatile
  3489                           
  3490                           ;movement.c: 103:     LATGbits.LATG1 = 1;
  3491  00576A  827F               	bsf	127,1,c	;volatile
  3492                           
  3493                           ;movement.c: 104:     LATFbits.LATF7 = 1;
  3494  00576C  8E7E               	bsf	126,7,c	;volatile
  3495                           
  3496                           ;movement.c: 105:     LATAbits.LATA4 = 1;
  3497  00576E  8879               	bsf	121,4,c	;volatile
  3498                           
  3499                           ;movement.c: 108:     TRISDbits.TRISD7 = 0;
  3500  005770  9E84               	bcf	132,7,c	;volatile
  3501                           
  3502                           ;movement.c: 109:     LATDbits.LATD7 = 0;
  3503  005772  9E7C               	bcf	124,7,c	;volatile
  3504                           
  3505                           ;movement.c: 110:     TRISHbits.TRISH3 = 0;
  3506  005774  9688               	bcf	136,3,c	;volatile
  3507                           
  3508                           ;movement.c: 111:     LATHbits.LATH3 = 0;
  3509  005776  9680               	bcf	128,3,c	;volatile
  3510  005778                     
  3511                           ; BSR set to: 14
  3512  005778  0012               	return		;funcret
  3513  00577A                     __end_of_pin_init:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _initUSART4 *****************
  3517 ;; Defined at:
  3518 ;;		line 4 in file "serial.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg, status,2
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 2
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text7
  3547  00583A                     __ptext7:
  3548                           	callstack 0
  3549  00583A                     _initUSART4:
  3550                           	callstack 28
  3551  00583A                     
  3552                           ;serial.c: 8:     RC0PPS = 0x12;
  3553  00583A  0E12               	movlw	18
  3554  00583C  010E               	movlb	14	; () banked
  3555  00583E  6F62               	movwf	98,b	;volatile
  3556                           
  3557                           ;serial.c: 9:     RX4PPS = 0x11;
  3558  005840  0E11               	movlw	17
  3559  005842  6F15               	movwf	21,b	;volatile
  3560  005844                     
  3561                           ; BSR set to: 14
  3562                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3563  005844  97E9               	bcf	233,3,b	;volatile
  3564  005846                     
  3565                           ; BSR set to: 14
  3566                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3567  005846  95E8               	bcf	232,2,b	;volatile
  3568                           
  3569                           ;serial.c: 13:     SP4BRGL = 51;
  3570  005848  0E33               	movlw	51
  3571  00584A  6FE5               	movwf	229,b	;volatile
  3572                           
  3573                           ;serial.c: 15:     SP4BRGH = 0;
  3574  00584C  0E00               	movlw	0
  3575  00584E  6FE6               	movwf	230,b	;volatile
  3576  005850                     
  3577                           ; BSR set to: 14
  3578                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3579  005850  89E7               	bsf	231,4,b	;volatile
  3580  005852                     
  3581                           ; BSR set to: 14
  3582                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3583  005852  8BE8               	bsf	232,5,b	;volatile
  3584  005854                     
  3585                           ; BSR set to: 14
  3586                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3587  005854  8FE7               	bsf	231,7,b	;volatile
  3588  005856                     
  3589                           ; BSR set to: 14
  3590  005856  0012               	return		;funcret
  3591  005858                     __end_of_initUSART4:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _initDCmotors_parameter *****************
  3595 ;; Defined at:
  3596 ;;		line 39 in file "dc_motor.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;  motorL          2    2[COMRAM] PTR struct DC_motor
  3599 ;;		 -> main@motorL(10), 
  3600 ;;  motorR          2    4[COMRAM] PTR struct DC_motor
  3601 ;;		 -> main@motorR(10), 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;Total ram usage:        4 bytes
  3618 ;; Hardware stack levels used: 1
  3619 ;; Hardware stack levels required when called: 2
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_main
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text8
  3628  004A12                     __ptext8:
  3629                           	callstack 0
  3630  004A12                     _initDCmotors_parameter:
  3631                           	callstack 28
  3632  004A12                     
  3633                           ;dc_motor.c: 41:     motorL->power = 0;
  3634  004A12  C003  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  3635  004A16  C004  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  3636  004A1A  0E00               	movlw	0
  3637  004A1C  6EDF               	movwf	indf2,c
  3638  004A1E                     
  3639                           ;dc_motor.c: 42:     motorL->direction = 1;
  3640  004A1E  EE20 F001          	lfsr	2,1
  3641  004A22  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3642  004A24  26D9               	addwf	fsr2l,f,c
  3643  004A26  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3644  004A28  22DA               	addwfc	fsr2h,f,c
  3645  004A2A  0E01               	movlw	1
  3646  004A2C  6EDF               	movwf	indf2,c
  3647  004A2E                     
  3648                           ;dc_motor.c: 43:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  3649  004A2E  EE20 F002          	lfsr	2,2
  3650  004A32  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3651  004A34  26D9               	addwf	fsr2l,f,c
  3652  004A36  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3653  004A38  22DA               	addwfc	fsr2h,f,c
  3654  004A3A  0EA3               	movlw	163
  3655  004A3C  6EDE               	movwf	postinc2,c
  3656  004A3E  0E0F               	movlw	15
  3657  004A40  6EDD               	movwf	postdec2,c
  3658  004A42                     
  3659                           ;dc_motor.c: 44:     motorL->dir_LAT = (unsigned char *)(&LATE);
  3660  004A42  EE20 F004          	lfsr	2,4
  3661  004A46  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3662  004A48  26D9               	addwf	fsr2l,f,c
  3663  004A4A  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3664  004A4C  22DA               	addwfc	fsr2h,f,c
  3665  004A4E  0E7D               	movlw	125
  3666  004A50  6EDE               	movwf	postinc2,c
  3667  004A52  0E0F               	movlw	15
  3668  004A54  6EDD               	movwf	postdec2,c
  3669  004A56                     
  3670                           ;dc_motor.c: 45:     motorL->dir_pin = 4;
  3671  004A56  EE20 F006          	lfsr	2,6
  3672  004A5A  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3673  004A5C  26D9               	addwf	fsr2l,f,c
  3674  004A5E  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3675  004A60  22DA               	addwfc	fsr2h,f,c
  3676  004A62  0E04               	movlw	4
  3677  004A64  6EDF               	movwf	indf2,c
  3678  004A66                     
  3679                           ;dc_motor.c: 46:     motorL->PWMperiod = 199;
  3680  004A66  EE20 F007          	lfsr	2,7
  3681  004A6A  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3682  004A6C  26D9               	addwf	fsr2l,f,c
  3683  004A6E  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3684  004A70  22DA               	addwfc	fsr2h,f,c
  3685  004A72  0EC7               	movlw	199
  3686  004A74  6EDE               	movwf	postinc2,c
  3687  004A76  0E00               	movlw	0
  3688  004A78  6EDD               	movwf	postdec2,c
  3689  004A7A                     
  3690                           ;dc_motor.c: 49:     motorR->power = 0;
  3691  004A7A  C005  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  3692  004A7E  C006  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  3693  004A82  0E00               	movlw	0
  3694  004A84  6EDF               	movwf	indf2,c
  3695                           
  3696                           ;dc_motor.c: 50:     motorR->direction = 1;
  3697  004A86  EE20 F001          	lfsr	2,1
  3698  004A8A  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3699  004A8C  26D9               	addwf	fsr2l,f,c
  3700  004A8E  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3701  004A90  22DA               	addwfc	fsr2h,f,c
  3702  004A92  0E01               	movlw	1
  3703  004A94  6EDF               	movwf	indf2,c
  3704                           
  3705                           ;dc_motor.c: 51:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  3706  004A96  EE20 F002          	lfsr	2,2
  3707  004A9A  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3708  004A9C  26D9               	addwf	fsr2l,f,c
  3709  004A9E  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3710  004AA0  22DA               	addwfc	fsr2h,f,c
  3711  004AA2  0EA0               	movlw	160
  3712  004AA4  6EDE               	movwf	postinc2,c
  3713  004AA6  0E0F               	movlw	15
  3714  004AA8  6EDD               	movwf	postdec2,c
  3715                           
  3716                           ;dc_motor.c: 52:     motorR->dir_LAT = (unsigned char *)(&LATG);
  3717  004AAA  EE20 F004          	lfsr	2,4
  3718  004AAE  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3719  004AB0  26D9               	addwf	fsr2l,f,c
  3720  004AB2  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3721  004AB4  22DA               	addwfc	fsr2h,f,c
  3722  004AB6  0E7F               	movlw	127
  3723  004AB8  6EDE               	movwf	postinc2,c
  3724  004ABA  0E0F               	movlw	15
  3725  004ABC  6EDD               	movwf	postdec2,c
  3726                           
  3727                           ;dc_motor.c: 53:     motorR->dir_pin = 6;
  3728  004ABE  EE20 F006          	lfsr	2,6
  3729  004AC2  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3730  004AC4  26D9               	addwf	fsr2l,f,c
  3731  004AC6  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3732  004AC8  22DA               	addwfc	fsr2h,f,c
  3733  004ACA  0E06               	movlw	6
  3734  004ACC  6EDF               	movwf	indf2,c
  3735                           
  3736                           ;dc_motor.c: 54:     motorR->PWMperiod = 199;
  3737  004ACE  EE20 F007          	lfsr	2,7
  3738  004AD2  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3739  004AD4  26D9               	addwf	fsr2l,f,c
  3740  004AD6  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3741  004AD8  22DA               	addwfc	fsr2h,f,c
  3742  004ADA  0EC7               	movlw	199
  3743  004ADC  6EDE               	movwf	postinc2,c
  3744  004ADE  0E00               	movlw	0
  3745  004AE0  6EDD               	movwf	postdec2,c
  3746  004AE2  0012               	return		;funcret
  3747  004AE4                     __end_of_initDCmotors_parameter:
  3748                           	callstack 0
  3749                           
  3750 ;; *************** function _initDCmotorsPWM *****************
  3751 ;; Defined at:
  3752 ;;		line 9 in file "dc_motor.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  PWMperiod       2    2[COMRAM] int 
  3755 ;; Auto vars:     Size  Location     Type
  3756 ;;		None
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  1    wreg      void 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;Total ram usage:        2 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; Hardware stack levels required when called: 2
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_main
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           	psect	text9
  3781  0053E4                     __ptext9:
  3782                           	callstack 0
  3783  0053E4                     _initDCmotorsPWM:
  3784                           	callstack 28
  3785  0053E4                     
  3786                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  3787  0053E4  9485               	bcf	133,2,c	;volatile
  3788                           
  3789                           ;dc_motor.c: 13:     TRISCbits.TRISC7=0;
  3790  0053E6  9E83               	bcf	131,7,c	;volatile
  3791                           
  3792                           ;dc_motor.c: 14:     TRISGbits.TRISG6=0;
  3793  0053E8  9C87               	bcf	135,6,c	;volatile
  3794                           
  3795                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  3796  0053EA  9885               	bcf	133,4,c	;volatile
  3797                           
  3798                           ;dc_motor.c: 16:     LATEbits.LATE2=0;
  3799  0053EC  947D               	bcf	125,2,c	;volatile
  3800                           
  3801                           ;dc_motor.c: 17:     LATCbits.LATC7=0;
  3802  0053EE  9E7B               	bcf	123,7,c	;volatile
  3803                           
  3804                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
  3805  0053F0  9C7F               	bcf	127,6,c	;volatile
  3806                           
  3807                           ;dc_motor.c: 19:     LATEbits.LATE4=0;
  3808  0053F2  987D               	bcf	125,4,c	;volatile
  3809  0053F4                     
  3810                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  3811  0053F4  50BD               	movf	189,w,c	;volatile
  3812  0053F6  0B8F               	andlw	-113
  3813  0053F8  0930               	iorlw	48
  3814  0053FA  6EBD               	movwf	189,c	;volatile
  3815                           
  3816                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  3817  0053FC  0EE0               	movlw	-32
  3818  0053FE  16BE               	andwf	190,f,c	;volatile
  3819                           
  3820                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  3821  005400  50BF               	movf	191,w,c	;volatile
  3822  005402  0BF0               	andlw	-16
  3823  005404  0901               	iorlw	1
  3824  005406  6EBF               	movwf	191,c	;volatile
  3825                           
  3826                           ;dc_motor.c: 27:     T2PR=200-1;
  3827  005408  0EC7               	movlw	199
  3828  00540A  6EBC               	movwf	188,c	;volatile
  3829  00540C                     
  3830                           ;dc_motor.c: 28:     T2CONbits.ON=1;
  3831  00540C  8EBD               	bsf	189,7,c	;volatile
  3832                           
  3833                           ;dc_motor.c: 30:     RE2PPS=0x0A;
  3834  00540E  0E0A               	movlw	10
  3835  005410  010E               	movlb	14	; () banked
  3836  005412  6F74               	movwf	116,b	;volatile
  3837                           
  3838                           ;dc_motor.c: 31:     RC7PPS=0x0B;
  3839  005414  0E0B               	movlw	11
  3840  005416  6F69               	movwf	105,b	;volatile
  3841                           
  3842                           ;dc_motor.c: 33:     PWM6DCH=0;
  3843  005418  0E00               	movlw	0
  3844  00541A  6EA3               	movwf	163,c	;volatile
  3845                           
  3846                           ;dc_motor.c: 34:     PWM7DCH=0;
  3847  00541C  0E00               	movlw	0
  3848  00541E  6EA0               	movwf	160,c	;volatile
  3849  005420                     
  3850                           ; BSR set to: 14
  3851                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
  3852  005420  8EA4               	bsf	164,7,c	;volatile
  3853  005422                     
  3854                           ; BSR set to: 14
  3855                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
  3856  005422  8EA1               	bsf	161,7,c	;volatile
  3857  005424                     
  3858                           ; BSR set to: 14
  3859  005424  0012               	return		;funcret
  3860  005426                     __end_of_initDCmotorsPWM:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _distance_measure *****************
  3864 ;; Defined at:
  3865 ;;		line 384 in file "color.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
  3868 ;;		 -> main@motorL(10), 
  3869 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
  3870 ;;		 -> main@motorR(10), 
  3871 ;;  w               2   30[BANK0 ] PTR struct white_card
  3872 ;;		 -> main@white(26), 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  CC_amb          2   40[BANK0 ] unsigned int 
  3875 ;;  threshold       2   34[BANK0 ] unsigned int 
  3876 ;;  CG_amb          2   32[BANK0 ] unsigned int 
  3877 ;;  stop            1   42[BANK0 ] unsigned char 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  1    wreg      unsigned char 
  3880 ;; Registers used:
  3881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3887 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;Total ram usage:       19 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 6
  3894 ;; This function calls:
  3895 ;;		_LED_C
  3896 ;;		___fldiv
  3897 ;;		___flmul
  3898 ;;		___xxtofl
  3899 ;;		_color_read_Clear
  3900 ;;		_color_read_Green
  3901 ;;		_lroundf
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text10
  3908  004934                     __ptext10:
  3909                           	callstack 0
  3910  004934                     _distance_measure:
  3911                           	callstack 24
  3912  004934  0E00               	movlw	0
  3913  004936  0100               	movlb	0	; () banked
  3914  004938  6F81               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  3915  00493A  0E00               	movlw	0
  3916  00493C  6F80               	movwf	distance_measure@CG_amb& (0+255),b
  3917                           
  3918                           ;color.c: 387:     unsigned char stop = 0;
  3919  00493E  0E00               	movlw	0
  3920  004940  6F8A               	movwf	distance_measure@stop& (0+255),b
  3921                           
  3922                           ;color.c: 388:     unsigned int threshold = 0;
  3923  004942  0E00               	movlw	0
  3924  004944  6F83               	movwf	(distance_measure@threshold+1)& (0+255),b
  3925  004946  0E00               	movlw	0
  3926  004948  6F82               	movwf	distance_measure@threshold& (0+255),b
  3927  00494A                     
  3928                           ; BSR set to: 0
  3929                           ;color.c: 389:     LED_C();
  3930  00494A  ECED  F02B         	call	_LED_C	;wreg free
  3931  00494E                     
  3932                           ;color.c: 390:     CC_amb = color_read_Clear();
  3933  00494E  EC37  F029         	call	_color_read_Clear	;wreg free
  3934  004952  C007  F088         	movff	?_color_read_Clear,distance_measure@CC_amb
  3935  004956  C008  F089         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  3936  00495A  EC0F  F029         	call	_color_read_Green	;wreg free
  3937  00495E                     
  3938                           ;color.c: 392:     threshold = lroundf((float)(w->CC)/ 105 * 100);
  3939  00495E  0E00               	movlw	0
  3940  004960  6E15               	movwf	___fldiv@a^0,c
  3941  004962  0E00               	movlw	0
  3942  004964  6E16               	movwf	(___fldiv@a+1)^0,c
  3943  004966  0ED2               	movlw	210
  3944  004968  6E17               	movwf	(___fldiv@a+2)^0,c
  3945  00496A  0E42               	movlw	66
  3946  00496C  6E18               	movwf	(___fldiv@a+3)^0,c
  3947  00496E  0100               	movlb	0	; () banked
  3948  004970  EE20 F018          	lfsr	2,24
  3949  004974  517E               	movf	distance_measure@w& (0+255),w,b
  3950  004976  26D9               	addwf	fsr2l,f,c
  3951  004978  517F               	movf	(distance_measure@w+1)& (0+255),w,b
  3952  00497A  22DA               	addwfc	fsr2h,f,c
  3953  00497C  CFDE F051          	movff	postinc2,??_distance_measure
  3954  004980  CFDD F052          	movff	postdec2,??_distance_measure+1
  3955  004984  C051  F003         	movff	??_distance_measure,___xxtofl@val
  3956  004988  C052  F004         	movff	??_distance_measure+1,___xxtofl@val+1
  3957  00498C  6A05               	clrf	(___xxtofl@val+2)^0,c
  3958  00498E  6A06               	clrf	(___xxtofl@val+3)^0,c
  3959  004990  0E00               	movlw	0
  3960  004992  EC81  F01C         	call	___xxtofl
  3961  004996  C003  F011         	movff	?___xxtofl,___fldiv@b
  3962  00499A  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  3963  00499E  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  3964  0049A2  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  3965  0049A6  EC58  F013         	call	___fldiv	;wreg free
  3966  0049AA  C011  F02A         	movff	?___fldiv,___flmul@b
  3967  0049AE  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  3968  0049B2  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  3969  0049B6  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  3970  0049BA  0E00               	movlw	0
  3971  0049BC  6E2E               	movwf	___flmul@a^0,c
  3972  0049BE  0E00               	movlw	0
  3973  0049C0  6E2F               	movwf	(___flmul@a+1)^0,c
  3974  0049C2  0EC8               	movlw	200
  3975  0049C4  6E30               	movwf	(___flmul@a+2)^0,c
  3976  0049C6  0E42               	movlw	66
  3977  0049C8  6E31               	movwf	(___flmul@a+3)^0,c
  3978  0049CA  EC6A  F00F         	call	___flmul	;wreg free
  3979  0049CE  C02A  F084         	movff	?___flmul,_distance_measure$3199
  3980  0049D2  C02B  F085         	movff	?___flmul+1,_distance_measure$3199+1
  3981  0049D6  C02C  F086         	movff	?___flmul+2,_distance_measure$3199+2
  3982  0049DA  C02D  F087         	movff	?___flmul+3,_distance_measure$3199+3
  3983  0049DE  C084  F076         	movff	_distance_measure$3199,lroundf@x
  3984  0049E2  C085  F077         	movff	_distance_measure$3199+1,lroundf@x+1
  3985  0049E6  C086  F078         	movff	_distance_measure$3199+2,lroundf@x+2
  3986  0049EA  C087  F079         	movff	_distance_measure$3199+3,lroundf@x+3
  3987  0049EE  ECD4  F02A         	call	_lroundf	;wreg free
  3988  0049F2                     
  3989                           ;color.c: 393:     if (CC_amb >= 2500 ){stop = 1;}
  3990  0049F2  0EC4               	movlw	196
  3991  0049F4  0100               	movlb	0	; () banked
  3992  0049F6  5D88               	subwf	distance_measure@CC_amb& (0+255),w,b
  3993  0049F8  0E09               	movlw	9
  3994  0049FA  5989               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  3995  0049FC  A0D8               	btfss	status,0,c
  3996  0049FE  EF03  F025         	goto	u6581
  3997  004A02  EF05  F025         	goto	u6580
  3998  004A06                     u6581:
  3999  004A06  EF07  F025         	goto	l186
  4000  004A0A                     u6580:
  4001  004A0A                     
  4002                           ; BSR set to: 0
  4003  004A0A  0E01               	movlw	1
  4004  004A0C  6F8A               	movwf	distance_measure@stop& (0+255),b
  4005  004A0E                     l186:
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;color.c: 394:     return stop;
  4009  004A0E  518A               	movf	distance_measure@stop& (0+255),w,b
  4010  004A10                     
  4011                           ; BSR set to: 0
  4012  004A10  0012               	return		;funcret
  4013  004A12                     __end_of_distance_measure:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _lroundf *****************
  4017 ;; Defined at:
  4018 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  x               4   22[BANK0 ] float 
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;		None
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  4   22[BANK0 ] long 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        4 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 5
  4039 ;; This function calls:
  4040 ;;		___fltol
  4041 ;;		_roundf
  4042 ;; This function is called by:
  4043 ;;		_detect_color
  4044 ;;		_distance_measure
  4045 ;;		_check_color_reading
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text11
  4050  0055A8                     __ptext11:
  4051                           	callstack 0
  4052  0055A8                     _lroundf:
  4053                           	callstack 23
  4054  0055A8  C076  F043         	movff	lroundf@x,roundf@x
  4055  0055AC  C077  F044         	movff	lroundf@x+1,roundf@x+1
  4056  0055B0  C078  F045         	movff	lroundf@x+2,roundf@x+2
  4057  0055B4  C079  F046         	movff	lroundf@x+3,roundf@x+3
  4058  0055B8  EC7F  F011         	call	_roundf	;wreg free
  4059  0055BC  C043  F072         	movff	?_roundf,___fltol@f1
  4060  0055C0  C044  F073         	movff	?_roundf+1,___fltol@f1+1
  4061  0055C4  C045  F074         	movff	?_roundf+2,___fltol@f1+2
  4062  0055C8  C046  F075         	movff	?_roundf+3,___fltol@f1+3
  4063  0055CC  ECA8  F022         	call	___fltol	;wreg free
  4064  0055D0  C072  F076         	movff	?___fltol,?_lroundf
  4065  0055D4  C073  F077         	movff	?___fltol+1,?_lroundf+1
  4066  0055D8  C074  F078         	movff	?___fltol+2,?_lroundf+2
  4067  0055DC  C075  F079         	movff	?___fltol+3,?_lroundf+3
  4068  0055E0  0012               	return		;funcret
  4069  0055E2                     __end_of_lroundf:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _roundf *****************
  4073 ;; Defined at:
  4074 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  x               4   66[COMRAM] float 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  y               4   14[BANK0 ] float 
  4079 ;;  u               4   10[BANK0 ] struct .
  4080 ;;  e               2    4[BANK0 ] int 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  4   66[COMRAM] float 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Totals:         8      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;Total ram usage:       26 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 4
  4097 ;; This function calls:
  4098 ;;		___fladd
  4099 ;;		___flge
  4100 ;;		___flmul
  4101 ;;		___flneg
  4102 ;;		___flsub
  4103 ;; This function is called by:
  4104 ;;		_lroundf
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108                           	psect	text12
  4109  0022FE                     __ptext12:
  4110                           	callstack 0
  4111  0022FE                     _roundf:
  4112                           	callstack 23
  4113  0022FE  C18C  F06A         	movff	roundf@F527,roundf@u
  4114  002302  C18D  F06B         	movff	roundf@F527+1,roundf@u+1
  4115  002306  C18E  F06C         	movff	roundf@F527+2,roundf@u+2
  4116  00230A  C18F  F06D         	movff	roundf@F527+3,roundf@u+3
  4117  00230E  C043  F06A         	movff	roundf@x,roundf@u
  4118  002312  C044  F06B         	movff	roundf@x+1,roundf@u+1
  4119  002316  C045  F06C         	movff	roundf@x+2,roundf@u+2
  4120  00231A  C046  F06D         	movff	roundf@x+3,roundf@u+3
  4121  00231E  C06A  F047         	movff	roundf@u,??_roundf
  4122  002322  C06B  F048         	movff	roundf@u+1,??_roundf+1
  4123  002326  C06C  F049         	movff	roundf@u+2,??_roundf+2
  4124  00232A  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  4125  00232E  0E18               	movlw	24
  4126  002330  EF9F  F011         	goto	u6270
  4127  002334                     u6275:
  4128  002334  90D8               	bcf	status,0,c
  4129  002336  324A               	rrcf	(??_roundf+3)^0,f,c
  4130  002338  3249               	rrcf	(??_roundf+2)^0,f,c
  4131  00233A  3248               	rrcf	(??_roundf+1)^0,f,c
  4132  00233C  3247               	rrcf	??_roundf^0,f,c
  4133  00233E                     u6270:
  4134  00233E  2EE8               	decfsz	wreg,f,c
  4135  002340  EF9A  F011         	goto	u6275
  4136  002344  5047               	movf	??_roundf^0,w,c
  4137  002346  0100               	movlb	0	; () banked
  4138  002348  6F64               	movwf	roundf@e& (0+255),b
  4139  00234A  6B65               	clrf	(roundf@e+1)& (0+255),b
  4140  00234C  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4141  00234E  EFB2  F011         	goto	u6281
  4142  002352  5165               	movf	(roundf@e+1)& (0+255),w,b
  4143  002354  E109               	bnz	u6280
  4144  002356  0E96               	movlw	150
  4145  002358  5D64               	subwf	roundf@e& (0+255),w,b
  4146  00235A  A0D8               	btfss	status,0,c
  4147  00235C  EFB2  F011         	goto	u6281
  4148  002360  EFB4  F011         	goto	u6280
  4149  002364                     u6281:
  4150  002364  EFBE  F011         	goto	l5829
  4151  002368                     u6280:
  4152  002368                     
  4153                           ; BSR set to: 0
  4154  002368  C043  F043         	movff	roundf@x,?_roundf
  4155  00236C  C044  F044         	movff	roundf@x+1,?_roundf+1
  4156  002370  C045  F045         	movff	roundf@x+2,?_roundf+2
  4157  002374  C046  F046         	movff	roundf@x+3,?_roundf+3
  4158  002378  EF57  F013         	goto	l1540
  4159  00237C                     l5829:
  4160                           
  4161                           ; BSR set to: 0
  4162  00237C  C06A  F047         	movff	roundf@u,??_roundf
  4163  002380  C06B  F048         	movff	roundf@u+1,??_roundf+1
  4164  002384  C06C  F049         	movff	roundf@u+2,??_roundf+2
  4165  002388  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  4166  00238C  0E20               	movlw	32
  4167  00238E  EFCE  F011         	goto	u6290
  4168  002392                     u6295:
  4169  002392  90D8               	bcf	status,0,c
  4170  002394  324A               	rrcf	(??_roundf+3)^0,f,c
  4171  002396  3249               	rrcf	(??_roundf+2)^0,f,c
  4172  002398  3248               	rrcf	(??_roundf+1)^0,f,c
  4173  00239A  3247               	rrcf	??_roundf^0,f,c
  4174  00239C                     u6290:
  4175  00239C  2EE8               	decfsz	wreg,f,c
  4176  00239E  EFC9  F011         	goto	u6295
  4177  0023A2  5047               	movf	??_roundf^0,w,c
  4178  0023A4  1048               	iorwf	(??_roundf+1)^0,w,c
  4179  0023A6  1049               	iorwf	(??_roundf+2)^0,w,c
  4180  0023A8  104A               	iorwf	(??_roundf+3)^0,w,c
  4181  0023AA  B4D8               	btfsc	status,2,c
  4182  0023AC  EFDA  F011         	goto	u6301
  4183  0023B0  EFDC  F011         	goto	u6300
  4184  0023B4                     u6301:
  4185  0023B4  EFEE  F011         	goto	l5833
  4186  0023B8                     u6300:
  4187  0023B8                     
  4188                           ; BSR set to: 0
  4189  0023B8  C043  F003         	movff	roundf@x,___flneg@f1
  4190  0023BC  C044  F004         	movff	roundf@x+1,___flneg@f1+1
  4191  0023C0  C045  F005         	movff	roundf@x+2,___flneg@f1+2
  4192  0023C4  C046  F006         	movff	roundf@x+3,___flneg@f1+3
  4193  0023C8  ECF1  F02A         	call	___flneg	;wreg free
  4194  0023CC  C003  F043         	movff	?___flneg,roundf@x
  4195  0023D0  C004  F044         	movff	?___flneg+1,roundf@x+1
  4196  0023D4  C005  F045         	movff	?___flneg+2,roundf@x+2
  4197  0023D8  C006  F046         	movff	?___flneg+3,roundf@x+3
  4198  0023DC                     l5833:
  4199  0023DC  0100               	movlb	0	; () banked
  4200  0023DE  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  4201  0023E0  EFFD  F011         	goto	u6310
  4202  0023E4  5165               	movf	(roundf@e+1)& (0+255),w,b
  4203  0023E6  E107               	bnz	u6311
  4204  0023E8  0E7E               	movlw	126
  4205  0023EA  5D64               	subwf	roundf@e& (0+255),w,b
  4206  0023EC  B0D8               	btfsc	status,0,c
  4207  0023EE  EFFB  F011         	goto	u6311
  4208  0023F2  EFFD  F011         	goto	u6310
  4209  0023F6                     u6311:
  4210  0023F6  EF19  F012         	goto	l5839
  4211  0023FA                     u6310:
  4212  0023FA                     
  4213                           ; BSR set to: 0
  4214  0023FA  C06A  F02A         	movff	roundf@u,___flmul@b
  4215  0023FE  C06B  F02B         	movff	roundf@u+1,___flmul@b+1
  4216  002402  C06C  F02C         	movff	roundf@u+2,___flmul@b+2
  4217  002406  C06D  F02D         	movff	roundf@u+3,___flmul@b+3
  4218  00240A  0E00               	movlw	0
  4219  00240C  6E2E               	movwf	___flmul@a^0,c
  4220  00240E  0E00               	movlw	0
  4221  002410  6E2F               	movwf	(___flmul@a+1)^0,c
  4222  002412  0E00               	movlw	0
  4223  002414  6E30               	movwf	(___flmul@a+2)^0,c
  4224  002416  0E00               	movlw	0
  4225  002418  6E31               	movwf	(___flmul@a+3)^0,c
  4226  00241A  EC6A  F00F         	call	___flmul	;wreg free
  4227  00241E  C02A  F043         	movff	?___flmul,?_roundf
  4228  002422  C02B  F044         	movff	?___flmul+1,?_roundf+1
  4229  002426  C02C  F045         	movff	?___flmul+2,?_roundf+2
  4230  00242A  C02D  F046         	movff	?___flmul+3,?_roundf+3
  4231  00242E  EF57  F013         	goto	l1540
  4232  002432                     l5839:
  4233                           
  4234                           ; BSR set to: 0
  4235  002432  0E00               	movlw	0
  4236  002434  6E07               	movwf	___fladd@a^0,c
  4237  002436  0E00               	movlw	0
  4238  002438  6E08               	movwf	(___fladd@a+1)^0,c
  4239  00243A  0E00               	movlw	0
  4240  00243C  6E09               	movwf	(___fladd@a+2)^0,c
  4241  00243E  0E4B               	movlw	75
  4242  002440  6E0A               	movwf	(___fladd@a+3)^0,c
  4243  002442  C043  F003         	movff	roundf@x,___fladd@b
  4244  002446  C044  F004         	movff	roundf@x+1,___fladd@b+1
  4245  00244A  C045  F005         	movff	roundf@x+2,___fladd@b+2
  4246  00244E  C046  F006         	movff	roundf@x+3,___fladd@b+3
  4247  002452  EC0A  F00D         	call	___fladd	;wreg free
  4248  002456  C003  F066         	movff	?___fladd,_roundf$3200
  4249  00245A  C004  F067         	movff	?___fladd+1,_roundf$3200+1
  4250  00245E  C005  F068         	movff	?___fladd+2,_roundf$3200+2
  4251  002462  C006  F069         	movff	?___fladd+3,_roundf$3200+3
  4252  002466  0E00               	movlw	0
  4253  002468  6E07               	movwf	___fladd@a^0,c
  4254  00246A  0E00               	movlw	0
  4255  00246C  6E08               	movwf	(___fladd@a+1)^0,c
  4256  00246E  0E00               	movlw	0
  4257  002470  6E09               	movwf	(___fladd@a+2)^0,c
  4258  002472  0ECB               	movlw	203
  4259  002474  6E0A               	movwf	(___fladd@a+3)^0,c
  4260  002476  C066  F003         	movff	_roundf$3200,___fladd@b
  4261  00247A  C067  F004         	movff	_roundf$3200+1,___fladd@b+1
  4262  00247E  C068  F005         	movff	_roundf$3200+2,___fladd@b+2
  4263  002482  C069  F006         	movff	_roundf$3200+3,___fladd@b+3
  4264  002486  EC0A  F00D         	call	___fladd	;wreg free
  4265  00248A  C003  F060         	movff	?___fladd,_roundf$3201
  4266  00248E  C004  F061         	movff	?___fladd+1,_roundf$3201+1
  4267  002492  C005  F062         	movff	?___fladd+2,_roundf$3201+2
  4268  002496  C006  F063         	movff	?___fladd+3,_roundf$3201+3
  4269  00249A  C060  F013         	movff	_roundf$3201,___flsub@b
  4270  00249E  C061  F014         	movff	_roundf$3201+1,___flsub@b+1
  4271  0024A2  C062  F015         	movff	_roundf$3201+2,___flsub@b+2
  4272  0024A6  C063  F016         	movff	_roundf$3201+3,___flsub@b+3
  4273  0024AA  C043  F017         	movff	roundf@x,___flsub@a
  4274  0024AE  C044  F018         	movff	roundf@x+1,___flsub@a+1
  4275  0024B2  C045  F019         	movff	roundf@x+2,___flsub@a+2
  4276  0024B6  C046  F01A         	movff	roundf@x+3,___flsub@a+3
  4277  0024BA  ECAD  F029         	call	___flsub	;wreg free
  4278  0024BE  C013  F06E         	movff	?___flsub,roundf@y
  4279  0024C2  C014  F06F         	movff	?___flsub+1,roundf@y+1
  4280  0024C6  C015  F070         	movff	?___flsub+2,roundf@y+2
  4281  0024CA  C016  F071         	movff	?___flsub+3,roundf@y+3
  4282  0024CE  0E00               	movlw	0
  4283  0024D0  6E03               	movwf	___flge@ff1^0,c
  4284  0024D2  0E00               	movlw	0
  4285  0024D4  6E04               	movwf	(___flge@ff1+1)^0,c
  4286  0024D6  0E00               	movlw	0
  4287  0024D8  6E05               	movwf	(___flge@ff1+2)^0,c
  4288  0024DA  0E3F               	movlw	63
  4289  0024DC  6E06               	movwf	(___flge@ff1+3)^0,c
  4290  0024DE  C06E  F007         	movff	roundf@y,___flge@ff2
  4291  0024E2  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  4292  0024E6  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  4293  0024EA  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  4294  0024EE  EC2C  F023         	call	___flge	;wreg free
  4295  0024F2  B0D8               	btfsc	status,0,c
  4296  0024F4  EF7E  F012         	goto	u6321
  4297  0024F8  EF80  F012         	goto	u6320
  4298  0024FC                     u6321:
  4299  0024FC  EFB6  F012         	goto	l5843
  4300  002500                     u6320:
  4301  002500  C043  F007         	movff	roundf@x,___fladd@a
  4302  002504  C044  F008         	movff	roundf@x+1,___fladd@a+1
  4303  002508  C045  F009         	movff	roundf@x+2,___fladd@a+2
  4304  00250C  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  4305  002510  C06E  F003         	movff	roundf@y,___fladd@b
  4306  002514  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  4307  002518  C070  F005         	movff	roundf@y+2,___fladd@b+2
  4308  00251C  C071  F006         	movff	roundf@y+3,___fladd@b+3
  4309  002520  EC0A  F00D         	call	___fladd	;wreg free
  4310  002524  C003  F066         	movff	?___fladd,_roundf$3200
  4311  002528  C004  F067         	movff	?___fladd+1,_roundf$3200+1
  4312  00252C  C005  F068         	movff	?___fladd+2,_roundf$3200+2
  4313  002530  C006  F069         	movff	?___fladd+3,_roundf$3200+3
  4314  002534  C066  F003         	movff	_roundf$3200,___fladd@b
  4315  002538  C067  F004         	movff	_roundf$3200+1,___fladd@b+1
  4316  00253C  C068  F005         	movff	_roundf$3200+2,___fladd@b+2
  4317  002540  C069  F006         	movff	_roundf$3200+3,___fladd@b+3
  4318  002544  0E00               	movlw	0
  4319  002546  6E07               	movwf	___fladd@a^0,c
  4320  002548  0E00               	movlw	0
  4321  00254A  6E08               	movwf	(___fladd@a+1)^0,c
  4322  00254C  0E80               	movlw	128
  4323  00254E  6E09               	movwf	(___fladd@a+2)^0,c
  4324  002550  0EBF               	movlw	191
  4325  002552  6E0A               	movwf	(___fladd@a+3)^0,c
  4326  002554  EC0A  F00D         	call	___fladd	;wreg free
  4327  002558  C003  F06E         	movff	?___fladd,roundf@y
  4328  00255C  C004  F06F         	movff	?___fladd+1,roundf@y+1
  4329  002560  C005  F070         	movff	?___fladd+2,roundf@y+2
  4330  002564  C006  F071         	movff	?___fladd+3,roundf@y+3
  4331  002568  EF1F  F013         	goto	l5849
  4332  00256C                     l5843:
  4333  00256C  0E00               	movlw	0
  4334  00256E  6E03               	movwf	___flge@ff1^0,c
  4335  002570  0E00               	movlw	0
  4336  002572  6E04               	movwf	(___flge@ff1+1)^0,c
  4337  002574  0E00               	movlw	0
  4338  002576  6E05               	movwf	(___flge@ff1+2)^0,c
  4339  002578  0EBF               	movlw	191
  4340  00257A  6E06               	movwf	(___flge@ff1+3)^0,c
  4341  00257C  C06E  F007         	movff	roundf@y,___flge@ff2
  4342  002580  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  4343  002584  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  4344  002588  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  4345  00258C  EC2C  F023         	call	___flge	;wreg free
  4346  002590  A0D8               	btfss	status,0,c
  4347  002592  EFCD  F012         	goto	u6331
  4348  002596  EFCF  F012         	goto	u6330
  4349  00259A                     u6331:
  4350  00259A  EF05  F013         	goto	l5847
  4351  00259E                     u6330:
  4352  00259E  C043  F007         	movff	roundf@x,___fladd@a
  4353  0025A2  C044  F008         	movff	roundf@x+1,___fladd@a+1
  4354  0025A6  C045  F009         	movff	roundf@x+2,___fladd@a+2
  4355  0025AA  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  4356  0025AE  C06E  F003         	movff	roundf@y,___fladd@b
  4357  0025B2  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  4358  0025B6  C070  F005         	movff	roundf@y+2,___fladd@b+2
  4359  0025BA  C071  F006         	movff	roundf@y+3,___fladd@b+3
  4360  0025BE  EC0A  F00D         	call	___fladd	;wreg free
  4361  0025C2  C003  F066         	movff	?___fladd,_roundf$3200
  4362  0025C6  C004  F067         	movff	?___fladd+1,_roundf$3200+1
  4363  0025CA  C005  F068         	movff	?___fladd+2,_roundf$3200+2
  4364  0025CE  C006  F069         	movff	?___fladd+3,_roundf$3200+3
  4365  0025D2  C066  F003         	movff	_roundf$3200,___fladd@b
  4366  0025D6  C067  F004         	movff	_roundf$3200+1,___fladd@b+1
  4367  0025DA  C068  F005         	movff	_roundf$3200+2,___fladd@b+2
  4368  0025DE  C069  F006         	movff	_roundf$3200+3,___fladd@b+3
  4369  0025E2  0E00               	movlw	0
  4370  0025E4  6E07               	movwf	___fladd@a^0,c
  4371  0025E6  0E00               	movlw	0
  4372  0025E8  6E08               	movwf	(___fladd@a+1)^0,c
  4373  0025EA  0E80               	movlw	128
  4374  0025EC  6E09               	movwf	(___fladd@a+2)^0,c
  4375  0025EE  0E3F               	movlw	63
  4376  0025F0  6E0A               	movwf	(___fladd@a+3)^0,c
  4377  0025F2  EC0A  F00D         	call	___fladd	;wreg free
  4378  0025F6  C003  F06E         	movff	?___fladd,roundf@y
  4379  0025FA  C004  F06F         	movff	?___fladd+1,roundf@y+1
  4380  0025FE  C005  F070         	movff	?___fladd+2,roundf@y+2
  4381  002602  C006  F071         	movff	?___fladd+3,roundf@y+3
  4382  002606  EF1F  F013         	goto	l5849
  4383  00260A                     l5847:
  4384  00260A  C06E  F003         	movff	roundf@y,___fladd@b
  4385  00260E  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  4386  002612  C070  F005         	movff	roundf@y+2,___fladd@b+2
  4387  002616  C071  F006         	movff	roundf@y+3,___fladd@b+3
  4388  00261A  C043  F007         	movff	roundf@x,___fladd@a
  4389  00261E  C044  F008         	movff	roundf@x+1,___fladd@a+1
  4390  002622  C045  F009         	movff	roundf@x+2,___fladd@a+2
  4391  002626  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  4392  00262A  EC0A  F00D         	call	___fladd	;wreg free
  4393  00262E  C003  F06E         	movff	?___fladd,roundf@y
  4394  002632  C004  F06F         	movff	?___fladd+1,roundf@y+1
  4395  002636  C005  F070         	movff	?___fladd+2,roundf@y+2
  4396  00263A  C006  F071         	movff	?___fladd+3,roundf@y+3
  4397  00263E                     l5849:
  4398  00263E  C06A  F047         	movff	roundf@u,??_roundf
  4399  002642  C06B  F048         	movff	roundf@u+1,??_roundf+1
  4400  002646  C06C  F049         	movff	roundf@u+2,??_roundf+2
  4401  00264A  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  4402  00264E  0E20               	movlw	32
  4403  002650  EF2F  F013         	goto	u6340
  4404  002654                     u6345:
  4405  002654  90D8               	bcf	status,0,c
  4406  002656  324A               	rrcf	(??_roundf+3)^0,f,c
  4407  002658  3249               	rrcf	(??_roundf+2)^0,f,c
  4408  00265A  3248               	rrcf	(??_roundf+1)^0,f,c
  4409  00265C  3247               	rrcf	??_roundf^0,f,c
  4410  00265E                     u6340:
  4411  00265E  2EE8               	decfsz	wreg,f,c
  4412  002660  EF2A  F013         	goto	u6345
  4413  002664  5047               	movf	??_roundf^0,w,c
  4414  002666  1048               	iorwf	(??_roundf+1)^0,w,c
  4415  002668  1049               	iorwf	(??_roundf+2)^0,w,c
  4416  00266A  104A               	iorwf	(??_roundf+3)^0,w,c
  4417  00266C  B4D8               	btfsc	status,2,c
  4418  00266E  EF3B  F013         	goto	u6351
  4419  002672  EF3D  F013         	goto	u6350
  4420  002676                     u6351:
  4421  002676  EF4F  F013         	goto	l5853
  4422  00267A                     u6350:
  4423  00267A  C06E  F003         	movff	roundf@y,___flneg@f1
  4424  00267E  C06F  F004         	movff	roundf@y+1,___flneg@f1+1
  4425  002682  C070  F005         	movff	roundf@y+2,___flneg@f1+2
  4426  002686  C071  F006         	movff	roundf@y+3,___flneg@f1+3
  4427  00268A  ECF1  F02A         	call	___flneg	;wreg free
  4428  00268E  C003  F06E         	movff	?___flneg,roundf@y
  4429  002692  C004  F06F         	movff	?___flneg+1,roundf@y+1
  4430  002696  C005  F070         	movff	?___flneg+2,roundf@y+2
  4431  00269A  C006  F071         	movff	?___flneg+3,roundf@y+3
  4432  00269E                     l5853:
  4433  00269E  C06E  F043         	movff	roundf@y,?_roundf
  4434  0026A2  C06F  F044         	movff	roundf@y+1,?_roundf+1
  4435  0026A6  C070  F045         	movff	roundf@y+2,?_roundf+2
  4436  0026AA  C071  F046         	movff	roundf@y+3,?_roundf+3
  4437  0026AE                     l1540:
  4438  0026AE  0012               	return		;funcret
  4439  0026B0                     __end_of_roundf:
  4440                           	callstack 0
  4441                           
  4442 ;; *************** function ___flsub *****************
  4443 ;; Defined at:
  4444 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  b               4   18[COMRAM] float 
  4447 ;;  a               4   22[COMRAM] float 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;		None
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  4   18[COMRAM] float 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0, cstack
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4459 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;Total ram usage:        8 bytes
  4464 ;; Hardware stack levels used: 1
  4465 ;; Hardware stack levels required when called: 3
  4466 ;; This function calls:
  4467 ;;		___fladd
  4468 ;; This function is called by:
  4469 ;;		_roundf
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text13
  4474  00535A                     __ptext13:
  4475                           	callstack 0
  4476  00535A                     ___flsub:
  4477                           	callstack 23
  4478  00535A  0E00               	movlw	0
  4479  00535C  1A17               	xorwf	___flsub@a^0,f,c
  4480  00535E  0E00               	movlw	0
  4481  005360  1A18               	xorwf	(___flsub@a+1)^0,f,c
  4482  005362  0E00               	movlw	0
  4483  005364  1A19               	xorwf	(___flsub@a+2)^0,f,c
  4484  005366  0E80               	movlw	128
  4485  005368  1A1A               	xorwf	(___flsub@a+3)^0,f,c
  4486  00536A  C013  F003         	movff	___flsub@b,___fladd@b
  4487  00536E  C014  F004         	movff	___flsub@b+1,___fladd@b+1
  4488  005372  C015  F005         	movff	___flsub@b+2,___fladd@b+2
  4489  005376  C016  F006         	movff	___flsub@b+3,___fladd@b+3
  4490  00537A  C017  F007         	movff	___flsub@a,___fladd@a
  4491  00537E  C018  F008         	movff	___flsub@a+1,___fladd@a+1
  4492  005382  C019  F009         	movff	___flsub@a+2,___fladd@a+2
  4493  005386  C01A  F00A         	movff	___flsub@a+3,___fladd@a+3
  4494  00538A  EC0A  F00D         	call	___fladd	;wreg free
  4495  00538E  C003  F013         	movff	?___fladd,?___flsub
  4496  005392  C004  F014         	movff	?___fladd+1,?___flsub+1
  4497  005396  C005  F015         	movff	?___fladd+2,?___flsub+2
  4498  00539A  C006  F016         	movff	?___fladd+3,?___flsub+3
  4499  00539E  0012               	return		;funcret
  4500  0053A0                     __end_of___flsub:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function ___fladd *****************
  4504 ;; Defined at:
  4505 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  b               4    2[COMRAM] float 
  4508 ;;  a               4    6[COMRAM] float 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  grs             1   17[COMRAM] unsigned char 
  4511 ;;  bexp            1   16[COMRAM] unsigned char 
  4512 ;;  aexp            1   15[COMRAM] unsigned char 
  4513 ;;  signs           1   14[COMRAM] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  4    2[COMRAM] unsigned char 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4523 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;Total ram usage:       16 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 2
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		___flsub
  4534 ;;		_roundf
  4535 ;; This function uses a non-reentrant model
  4536 ;;
  4537                           
  4538                           	psect	text14
  4539  001A14                     __ptext14:
  4540                           	callstack 0
  4541  001A14                     ___fladd:
  4542                           	callstack 23
  4543  001A14  5006               	movf	(___fladd@b+3)^0,w,c
  4544  001A16  0B80               	andlw	128
  4545  001A18  6E0F               	movwf	___fladd@signs^0,c
  4546  001A1A  5006               	movf	(___fladd@b+3)^0,w,c
  4547  001A1C  2406               	addwf	(___fladd@b+3)^0,w,c
  4548  001A1E  6E11               	movwf	___fladd@bexp^0,c
  4549  001A20  AE05               	btfss	(___fladd@b+2)^0,7,c
  4550  001A22  EF15  F00D         	goto	u5561
  4551  001A26  EF17  F00D         	goto	u5560
  4552  001A2A                     u5561:
  4553  001A2A  EF18  F00D         	goto	l5417
  4554  001A2E                     u5560:
  4555  001A2E  8011               	bsf	___fladd@bexp^0,0,c
  4556  001A30                     l5417:
  4557  001A30  5011               	movf	___fladd@bexp^0,w,c
  4558  001A32  B4D8               	btfsc	status,2,c
  4559  001A34  EF1E  F00D         	goto	u5571
  4560  001A38  EF20  F00D         	goto	u5570
  4561  001A3C                     u5571:
  4562  001A3C  EF35  F00D         	goto	l5427
  4563  001A40                     u5570:
  4564  001A40  2811               	incf	___fladd@bexp^0,w,c
  4565  001A42  A4D8               	btfss	status,2,c
  4566  001A44  EF26  F00D         	goto	u5581
  4567  001A48  EF28  F00D         	goto	u5580
  4568  001A4C                     u5581:
  4569  001A4C  EF30  F00D         	goto	l5423
  4570  001A50                     u5580:
  4571  001A50  0E00               	movlw	0
  4572  001A52  6E03               	movwf	___fladd@b^0,c
  4573  001A54  0E00               	movlw	0
  4574  001A56  6E04               	movwf	(___fladd@b+1)^0,c
  4575  001A58  0E00               	movlw	0
  4576  001A5A  6E05               	movwf	(___fladd@b+2)^0,c
  4577  001A5C  0E00               	movlw	0
  4578  001A5E  6E06               	movwf	(___fladd@b+3)^0,c
  4579  001A60                     l5423:
  4580  001A60  8E05               	bsf	(___fladd@b+2)^0,7,c
  4581  001A62  0E00               	movlw	0
  4582  001A64  6E06               	movwf	(___fladd@b+3)^0,c
  4583  001A66  EF3D  F00D         	goto	l5429
  4584  001A6A                     l5427:
  4585  001A6A  0E00               	movlw	0
  4586  001A6C  6E03               	movwf	___fladd@b^0,c
  4587  001A6E  0E00               	movlw	0
  4588  001A70  6E04               	movwf	(___fladd@b+1)^0,c
  4589  001A72  0E00               	movlw	0
  4590  001A74  6E05               	movwf	(___fladd@b+2)^0,c
  4591  001A76  0E00               	movlw	0
  4592  001A78  6E06               	movwf	(___fladd@b+3)^0,c
  4593  001A7A                     l5429:
  4594  001A7A  500A               	movf	(___fladd@a+3)^0,w,c
  4595  001A7C  0B80               	andlw	128
  4596  001A7E  6E10               	movwf	___fladd@aexp^0,c
  4597  001A80  500F               	movf	___fladd@signs^0,w,c
  4598  001A82  1810               	xorwf	___fladd@aexp^0,w,c
  4599  001A84  B4D8               	btfsc	status,2,c
  4600  001A86  EF47  F00D         	goto	u5591
  4601  001A8A  EF49  F00D         	goto	u5590
  4602  001A8E                     u5591:
  4603  001A8E  EF4A  F00D         	goto	l5435
  4604  001A92                     u5590:
  4605  001A92  8C0F               	bsf	___fladd@signs^0,6,c
  4606  001A94                     l5435:
  4607  001A94  500A               	movf	(___fladd@a+3)^0,w,c
  4608  001A96  240A               	addwf	(___fladd@a+3)^0,w,c
  4609  001A98  6E10               	movwf	___fladd@aexp^0,c
  4610  001A9A  AE09               	btfss	(___fladd@a+2)^0,7,c
  4611  001A9C  EF52  F00D         	goto	u5601
  4612  001AA0  EF54  F00D         	goto	u5600
  4613  001AA4                     u5601:
  4614  001AA4  EF55  F00D         	goto	l5441
  4615  001AA8                     u5600:
  4616  001AA8  8010               	bsf	___fladd@aexp^0,0,c
  4617  001AAA                     l5441:
  4618  001AAA  5010               	movf	___fladd@aexp^0,w,c
  4619  001AAC  B4D8               	btfsc	status,2,c
  4620  001AAE  EF5B  F00D         	goto	u5611
  4621  001AB2  EF5D  F00D         	goto	u5610
  4622  001AB6                     u5611:
  4623  001AB6  EF72  F00D         	goto	l5451
  4624  001ABA                     u5610:
  4625  001ABA  2810               	incf	___fladd@aexp^0,w,c
  4626  001ABC  A4D8               	btfss	status,2,c
  4627  001ABE  EF63  F00D         	goto	u5621
  4628  001AC2  EF65  F00D         	goto	u5620
  4629  001AC6                     u5621:
  4630  001AC6  EF6D  F00D         	goto	l5447
  4631  001ACA                     u5620:
  4632  001ACA  0E00               	movlw	0
  4633  001ACC  6E07               	movwf	___fladd@a^0,c
  4634  001ACE  0E00               	movlw	0
  4635  001AD0  6E08               	movwf	(___fladd@a+1)^0,c
  4636  001AD2  0E00               	movlw	0
  4637  001AD4  6E09               	movwf	(___fladd@a+2)^0,c
  4638  001AD6  0E00               	movlw	0
  4639  001AD8  6E0A               	movwf	(___fladd@a+3)^0,c
  4640  001ADA                     l5447:
  4641  001ADA  8E09               	bsf	(___fladd@a+2)^0,7,c
  4642  001ADC  0E00               	movlw	0
  4643  001ADE  6E0A               	movwf	(___fladd@a+3)^0,c
  4644  001AE0  EF7A  F00D         	goto	l5453
  4645  001AE4                     l5451:
  4646  001AE4  0E00               	movlw	0
  4647  001AE6  6E07               	movwf	___fladd@a^0,c
  4648  001AE8  0E00               	movlw	0
  4649  001AEA  6E08               	movwf	(___fladd@a+1)^0,c
  4650  001AEC  0E00               	movlw	0
  4651  001AEE  6E09               	movwf	(___fladd@a+2)^0,c
  4652  001AF0  0E00               	movlw	0
  4653  001AF2  6E0A               	movwf	(___fladd@a+3)^0,c
  4654  001AF4                     l5453:
  4655  001AF4  5011               	movf	___fladd@bexp^0,w,c
  4656  001AF6  5C10               	subwf	___fladd@aexp^0,w,c
  4657  001AF8  B0D8               	btfsc	status,0,c
  4658  001AFA  EF81  F00D         	goto	u5631
  4659  001AFE  EF83  F00D         	goto	u5630
  4660  001B02                     u5631:
  4661  001B02  EFAA  F00D         	goto	l5489
  4662  001B06                     u5630:
  4663  001B06  AC0F               	btfss	___fladd@signs^0,6,c
  4664  001B08  EF88  F00D         	goto	u5641
  4665  001B0C  EF8A  F00D         	goto	u5640
  4666  001B10                     u5641:
  4667  001B10  EF8C  F00D         	goto	l5459
  4668  001B14                     u5640:
  4669  001B14  0E80               	movlw	128
  4670  001B16  1A0F               	xorwf	___fladd@signs^0,f,c
  4671  001B18                     l5459:
  4672  001B18  C011  F012         	movff	___fladd@bexp,___fladd@grs
  4673  001B1C  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4674  001B20  C012  F010         	movff	___fladd@grs,___fladd@aexp
  4675  001B24  C003  F012         	movff	___fladd@b,___fladd@grs
  4676  001B28  C007  F003         	movff	___fladd@a,___fladd@b
  4677  001B2C  C012  F007         	movff	___fladd@grs,___fladd@a
  4678  001B30  C004  F012         	movff	___fladd@b+1,___fladd@grs
  4679  001B34  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  4680  001B38  C012  F008         	movff	___fladd@grs,___fladd@a+1
  4681  001B3C  C005  F012         	movff	___fladd@b+2,___fladd@grs
  4682  001B40  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  4683  001B44  C012  F009         	movff	___fladd@grs,___fladd@a+2
  4684  001B48  C006  F012         	movff	___fladd@b+3,___fladd@grs
  4685  001B4C  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  4686  001B50  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  4687  001B54                     l5489:
  4688  001B54  0E00               	movlw	0
  4689  001B56  6E12               	movwf	___fladd@grs^0,c
  4690  001B58  5011               	movf	___fladd@bexp^0,w,c
  4691  001B5A  C010  F00B         	movff	___fladd@aexp,??___fladd
  4692  001B5E  6A0C               	clrf	(??___fladd+1)^0,c
  4693  001B60  5E0B               	subwf	??___fladd^0,f,c
  4694  001B62  0E00               	movlw	0
  4695  001B64  5A0C               	subwfb	(??___fladd+1)^0,f,c
  4696  001B66  BE0C               	btfsc	(??___fladd+1)^0,7,c
  4697  001B68  EFBF  F00D         	goto	u5651
  4698  001B6C  500C               	movf	(??___fladd+1)^0,w,c
  4699  001B6E  E109               	bnz	u5650
  4700  001B70  0E1A               	movlw	26
  4701  001B72  5C0B               	subwf	??___fladd^0,w,c
  4702  001B74  A0D8               	btfss	status,0,c
  4703  001B76  EFBF  F00D         	goto	u5651
  4704  001B7A  EFC1  F00D         	goto	u5650
  4705  001B7E                     u5651:
  4706  001B7E  EFF8  F00D         	goto	l1276
  4707  001B82                     u5650:
  4708  001B82  5003               	movf	___fladd@b^0,w,c
  4709  001B84  1004               	iorwf	(___fladd@b+1)^0,w,c
  4710  001B86  1005               	iorwf	(___fladd@b+2)^0,w,c
  4711  001B88  1006               	iorwf	(___fladd@b+3)^0,w,c
  4712  001B8A  A4D8               	btfss	status,2,c
  4713  001B8C  EFCA  F00D         	goto	u5661
  4714  001B90  EFCD  F00D         	goto	u5660
  4715  001B94                     u5661:
  4716  001B94  0E01               	movlw	1
  4717  001B96  EFCE  F00D         	goto	u5670
  4718  001B9A                     u5660:
  4719  001B9A  0E00               	movlw	0
  4720  001B9C                     u5670:
  4721  001B9C  6E12               	movwf	___fladd@grs^0,c
  4722  001B9E  0E00               	movlw	0
  4723  001BA0  6E03               	movwf	___fladd@b^0,c
  4724  001BA2  0E00               	movlw	0
  4725  001BA4  6E04               	movwf	(___fladd@b+1)^0,c
  4726  001BA6  0E00               	movlw	0
  4727  001BA8  6E05               	movwf	(___fladd@b+2)^0,c
  4728  001BAA  0E00               	movlw	0
  4729  001BAC  6E06               	movwf	(___fladd@b+3)^0,c
  4730  001BAE  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4731  001BB2  EF01  F00E         	goto	l1275
  4732  001BB6                     l1277:
  4733  001BB6  A012               	btfss	___fladd@grs^0,0,c
  4734  001BB8  EFE0  F00D         	goto	u5681
  4735  001BBC  EFE2  F00D         	goto	u5680
  4736  001BC0                     u5681:
  4737  001BC0  EFE8  F00D         	goto	l5501
  4738  001BC4                     u5680:
  4739  001BC4  90D8               	bcf	status,0,c
  4740  001BC6  3012               	rrcf	___fladd@grs^0,w,c
  4741  001BC8  0901               	iorlw	1
  4742  001BCA  6E12               	movwf	___fladd@grs^0,c
  4743  001BCC  EFEA  F00D         	goto	l5503
  4744  001BD0                     l5501:
  4745  001BD0  90D8               	bcf	status,0,c
  4746  001BD2  3212               	rrcf	___fladd@grs^0,f,c
  4747  001BD4                     l5503:
  4748  001BD4  A003               	btfss	___fladd@b^0,0,c
  4749  001BD6  EFEF  F00D         	goto	u5691
  4750  001BDA  EFF1  F00D         	goto	u5690
  4751  001BDE                     u5691:
  4752  001BDE  EFF2  F00D         	goto	l5507
  4753  001BE2                     u5690:
  4754  001BE2  8E12               	bsf	___fladd@grs^0,7,c
  4755  001BE4                     l5507:
  4756  001BE4  3406               	rlcf	(___fladd@b+3)^0,w,c
  4757  001BE6  3206               	rrcf	(___fladd@b+3)^0,f,c
  4758  001BE8  3205               	rrcf	(___fladd@b+2)^0,f,c
  4759  001BEA  3204               	rrcf	(___fladd@b+1)^0,f,c
  4760  001BEC  3203               	rrcf	___fladd@b^0,f,c
  4761  001BEE  2A11               	incf	___fladd@bexp^0,f,c
  4762  001BF0                     l1276:
  4763  001BF0  5010               	movf	___fladd@aexp^0,w,c
  4764  001BF2  5C11               	subwf	___fladd@bexp^0,w,c
  4765  001BF4  A0D8               	btfss	status,0,c
  4766  001BF6  EFFF  F00D         	goto	u5701
  4767  001BFA  EF01  F00E         	goto	u5700
  4768  001BFE                     u5701:
  4769  001BFE  EFDB  F00D         	goto	l1277
  4770  001C02                     u5700:
  4771  001C02                     l1275:
  4772  001C02  BC0F               	btfsc	___fladd@signs^0,6,c
  4773  001C04  EF06  F00E         	goto	u5711
  4774  001C08  EF08  F00E         	goto	u5710
  4775  001C0C                     u5711:
  4776  001C0C  EF48  F00E         	goto	l5535
  4777  001C10                     u5710:
  4778  001C10  5011               	movf	___fladd@bexp^0,w,c
  4779  001C12  A4D8               	btfss	status,2,c
  4780  001C14  EF0E  F00E         	goto	u5721
  4781  001C18  EF10  F00E         	goto	u5720
  4782  001C1C                     u5721:
  4783  001C1C  EF1A  F00E         	goto	l5517
  4784  001C20                     u5720:
  4785  001C20  0E00               	movlw	0
  4786  001C22  6E03               	movwf	?___fladd^0,c
  4787  001C24  0E00               	movlw	0
  4788  001C26  6E04               	movwf	(?___fladd+1)^0,c
  4789  001C28  0E00               	movlw	0
  4790  001C2A  6E05               	movwf	(?___fladd+2)^0,c
  4791  001C2C  0E00               	movlw	0
  4792  001C2E  6E06               	movwf	(?___fladd+3)^0,c
  4793  001C30  EF69  F00F         	goto	l1284
  4794  001C34                     l5517:
  4795  001C34  5007               	movf	___fladd@a^0,w,c
  4796  001C36  2603               	addwf	___fladd@b^0,f,c
  4797  001C38  5008               	movf	(___fladd@a+1)^0,w,c
  4798  001C3A  2204               	addwfc	(___fladd@b+1)^0,f,c
  4799  001C3C  5009               	movf	(___fladd@a+2)^0,w,c
  4800  001C3E  2205               	addwfc	(___fladd@b+2)^0,f,c
  4801  001C40  500A               	movf	(___fladd@a+3)^0,w,c
  4802  001C42  2206               	addwfc	(___fladd@b+3)^0,f,c
  4803  001C44  A006               	btfss	(___fladd@b+3)^0,0,c
  4804  001C46  EF27  F00E         	goto	u5731
  4805  001C4A  EF29  F00E         	goto	u5730
  4806  001C4E                     u5731:
  4807  001C4E  EFD5  F00E         	goto	l5571
  4808  001C52                     u5730:
  4809  001C52  A012               	btfss	___fladd@grs^0,0,c
  4810  001C54  EF2E  F00E         	goto	u5741
  4811  001C58  EF30  F00E         	goto	u5740
  4812  001C5C                     u5741:
  4813  001C5C  EF36  F00E         	goto	l5525
  4814  001C60                     u5740:
  4815  001C60  90D8               	bcf	status,0,c
  4816  001C62  3012               	rrcf	___fladd@grs^0,w,c
  4817  001C64  0901               	iorlw	1
  4818  001C66  6E12               	movwf	___fladd@grs^0,c
  4819  001C68  EF38  F00E         	goto	l5527
  4820  001C6C                     l5525:
  4821  001C6C  90D8               	bcf	status,0,c
  4822  001C6E  3212               	rrcf	___fladd@grs^0,f,c
  4823  001C70                     l5527:
  4824  001C70  A003               	btfss	___fladd@b^0,0,c
  4825  001C72  EF3D  F00E         	goto	u5751
  4826  001C76  EF3F  F00E         	goto	u5750
  4827  001C7A                     u5751:
  4828  001C7A  EF40  F00E         	goto	l5531
  4829  001C7E                     u5750:
  4830  001C7E  8E12               	bsf	___fladd@grs^0,7,c
  4831  001C80                     l5531:
  4832  001C80  3406               	rlcf	(___fladd@b+3)^0,w,c
  4833  001C82  3206               	rrcf	(___fladd@b+3)^0,f,c
  4834  001C84  3205               	rrcf	(___fladd@b+2)^0,f,c
  4835  001C86  3204               	rrcf	(___fladd@b+1)^0,f,c
  4836  001C88  3203               	rrcf	___fladd@b^0,f,c
  4837  001C8A  2A11               	incf	___fladd@bexp^0,f,c
  4838  001C8C  EFD5  F00E         	goto	l5571
  4839  001C90                     l5535:
  4840  001C90  5007               	movf	___fladd@a^0,w,c
  4841  001C92  5C03               	subwf	___fladd@b^0,w,c
  4842  001C94  5008               	movf	(___fladd@a+1)^0,w,c
  4843  001C96  5804               	subwfb	(___fladd@b+1)^0,w,c
  4844  001C98  5009               	movf	(___fladd@a+2)^0,w,c
  4845  001C9A  5805               	subwfb	(___fladd@b+2)^0,w,c
  4846  001C9C  5006               	movf	(___fladd@b+3)^0,w,c
  4847  001C9E  0A80               	xorlw	128
  4848  001CA0  6E0B               	movwf	??___fladd^0,c
  4849  001CA2  500A               	movf	(___fladd@a+3)^0,w,c
  4850  001CA4  0A80               	xorlw	128
  4851  001CA6  580B               	subwfb	??___fladd^0,w,c
  4852  001CA8  B0D8               	btfsc	status,0,c
  4853  001CAA  EF59  F00E         	goto	u5761
  4854  001CAE  EF5B  F00E         	goto	u5760
  4855  001CB2                     u5761:
  4856  001CB2  EF86  F00E         	goto	l5545
  4857  001CB6                     u5760:
  4858  001CB6  5003               	movf	___fladd@b^0,w,c
  4859  001CB8  5C07               	subwf	___fladd@a^0,w,c
  4860  001CBA  6E0B               	movwf	??___fladd^0,c
  4861  001CBC  5004               	movf	(___fladd@b+1)^0,w,c
  4862  001CBE  5808               	subwfb	(___fladd@a+1)^0,w,c
  4863  001CC0  6E0C               	movwf	(??___fladd+1)^0,c
  4864  001CC2  5005               	movf	(___fladd@b+2)^0,w,c
  4865  001CC4  5809               	subwfb	(___fladd@a+2)^0,w,c
  4866  001CC6  6E0D               	movwf	(??___fladd+2)^0,c
  4867  001CC8  5006               	movf	(___fladd@b+3)^0,w,c
  4868  001CCA  580A               	subwfb	(___fladd@a+3)^0,w,c
  4869  001CCC  6E0E               	movwf	(??___fladd+3)^0,c
  4870  001CCE  0EFF               	movlw	255
  4871  001CD0  240B               	addwf	??___fladd^0,w,c
  4872  001CD2  6E03               	movwf	___fladd@b^0,c
  4873  001CD4  0EFF               	movlw	255
  4874  001CD6  200C               	addwfc	(??___fladd+1)^0,w,c
  4875  001CD8  6E04               	movwf	(___fladd@b+1)^0,c
  4876  001CDA  0EFF               	movlw	255
  4877  001CDC  200D               	addwfc	(??___fladd+2)^0,w,c
  4878  001CDE  6E05               	movwf	(___fladd@b+2)^0,c
  4879  001CE0  0EFF               	movlw	255
  4880  001CE2  200E               	addwfc	(??___fladd+3)^0,w,c
  4881  001CE4  6E06               	movwf	(___fladd@b+3)^0,c
  4882  001CE6  0E80               	movlw	128
  4883  001CE8  1A0F               	xorwf	___fladd@signs^0,f,c
  4884  001CEA  6C12               	negf	___fladd@grs^0,c
  4885  001CEC  5012               	movf	___fladd@grs^0,w,c
  4886  001CEE  A4D8               	btfss	status,2,c
  4887  001CF0  EF7C  F00E         	goto	u5771
  4888  001CF4  EF7E  F00E         	goto	u5770
  4889  001CF8                     u5771:
  4890  001CF8  EF8E  F00E         	goto	l1292
  4891  001CFC                     u5770:
  4892  001CFC  0E01               	movlw	1
  4893  001CFE  2603               	addwf	___fladd@b^0,f,c
  4894  001D00  0E00               	movlw	0
  4895  001D02  2204               	addwfc	(___fladd@b+1)^0,f,c
  4896  001D04  2205               	addwfc	(___fladd@b+2)^0,f,c
  4897  001D06  2206               	addwfc	(___fladd@b+3)^0,f,c
  4898  001D08  EF8E  F00E         	goto	l1292
  4899  001D0C                     l5545:
  4900  001D0C  5007               	movf	___fladd@a^0,w,c
  4901  001D0E  5E03               	subwf	___fladd@b^0,f,c
  4902  001D10  5008               	movf	(___fladd@a+1)^0,w,c
  4903  001D12  5A04               	subwfb	(___fladd@b+1)^0,f,c
  4904  001D14  5009               	movf	(___fladd@a+2)^0,w,c
  4905  001D16  5A05               	subwfb	(___fladd@b+2)^0,f,c
  4906  001D18  500A               	movf	(___fladd@a+3)^0,w,c
  4907  001D1A  5A06               	subwfb	(___fladd@b+3)^0,f,c
  4908  001D1C                     l1292:
  4909  001D1C  5003               	movf	___fladd@b^0,w,c
  4910  001D1E  1004               	iorwf	(___fladd@b+1)^0,w,c
  4911  001D20  1005               	iorwf	(___fladd@b+2)^0,w,c
  4912  001D22  1006               	iorwf	(___fladd@b+3)^0,w,c
  4913  001D24  A4D8               	btfss	status,2,c
  4914  001D26  EF97  F00E         	goto	u5781
  4915  001D2A  EF99  F00E         	goto	u5780
  4916  001D2E                     u5781:
  4917  001D2E  EFCE  F00E         	goto	l5569
  4918  001D32                     u5780:
  4919  001D32  5012               	movf	___fladd@grs^0,w,c
  4920  001D34  A4D8               	btfss	status,2,c
  4921  001D36  EF9F  F00E         	goto	u5791
  4922  001D3A  EFA1  F00E         	goto	u5790
  4923  001D3E                     u5791:
  4924  001D3E  EFCE  F00E         	goto	l5569
  4925  001D42                     u5790:
  4926  001D42  0E00               	movlw	0
  4927  001D44  6E03               	movwf	?___fladd^0,c
  4928  001D46  0E00               	movlw	0
  4929  001D48  6E04               	movwf	(?___fladd+1)^0,c
  4930  001D4A  0E00               	movlw	0
  4931  001D4C  6E05               	movwf	(?___fladd+2)^0,c
  4932  001D4E  0E00               	movlw	0
  4933  001D50  6E06               	movwf	(?___fladd+3)^0,c
  4934  001D52  EF69  F00F         	goto	l1284
  4935  001D56                     l5553:
  4936  001D56  90D8               	bcf	status,0,c
  4937  001D58  3603               	rlcf	___fladd@b^0,f,c
  4938  001D5A  3604               	rlcf	(___fladd@b+1)^0,f,c
  4939  001D5C  3605               	rlcf	(___fladd@b+2)^0,f,c
  4940  001D5E  3606               	rlcf	(___fladd@b+3)^0,f,c
  4941  001D60  AE12               	btfss	___fladd@grs^0,7,c
  4942  001D62  EFB5  F00E         	goto	u5801
  4943  001D66  EFB7  F00E         	goto	u5800
  4944  001D6A                     u5801:
  4945  001D6A  EFB8  F00E         	goto	l5559
  4946  001D6E                     u5800:
  4947  001D6E  8003               	bsf	___fladd@b^0,0,c
  4948  001D70                     l5559:
  4949  001D70  A012               	btfss	___fladd@grs^0,0,c
  4950  001D72  EFBD  F00E         	goto	u5811
  4951  001D76  EFBF  F00E         	goto	u5810
  4952  001D7A                     u5811:
  4953  001D7A  EFC3  F00E         	goto	l5563
  4954  001D7E                     u5810:
  4955  001D7E  80D8               	bsf	status,0,c
  4956  001D80  3612               	rlcf	___fladd@grs^0,f,c
  4957  001D82  EFC5  F00E         	goto	l5565
  4958  001D86                     l5563:
  4959  001D86  90D8               	bcf	status,0,c
  4960  001D88  3612               	rlcf	___fladd@grs^0,f,c
  4961  001D8A                     l5565:
  4962  001D8A  5011               	movf	___fladd@bexp^0,w,c
  4963  001D8C  B4D8               	btfsc	status,2,c
  4964  001D8E  EFCB  F00E         	goto	u5821
  4965  001D92  EFCD  F00E         	goto	u5820
  4966  001D96                     u5821:
  4967  001D96  EFCE  F00E         	goto	l5569
  4968  001D9A                     u5820:
  4969  001D9A  0611               	decf	___fladd@bexp^0,f,c
  4970  001D9C                     l5569:
  4971  001D9C  AE05               	btfss	(___fladd@b+2)^0,7,c
  4972  001D9E  EFD3  F00E         	goto	u5831
  4973  001DA2  EFD5  F00E         	goto	u5830
  4974  001DA6                     u5831:
  4975  001DA6  EFAB  F00E         	goto	l5553
  4976  001DAA                     u5830:
  4977  001DAA                     l5571:
  4978  001DAA  0E00               	movlw	0
  4979  001DAC  6E10               	movwf	___fladd@aexp^0,c
  4980  001DAE  AE12               	btfss	___fladd@grs^0,7,c
  4981  001DB0  EFDC  F00E         	goto	u5841
  4982  001DB4  EFDE  F00E         	goto	u5840
  4983  001DB8                     u5841:
  4984  001DB8  EFF6  F00E         	goto	l1301
  4985  001DBC                     u5840:
  4986  001DBC  C012  F00B         	movff	___fladd@grs,??___fladd
  4987  001DC0  0E7F               	movlw	127
  4988  001DC2  160B               	andwf	??___fladd^0,f,c
  4989  001DC4  B4D8               	btfsc	status,2,c
  4990  001DC6  EFE7  F00E         	goto	u5851
  4991  001DCA  EFE9  F00E         	goto	u5850
  4992  001DCE                     u5851:
  4993  001DCE  EFED  F00E         	goto	l1302
  4994  001DD2                     u5850:
  4995  001DD2                     l5577:
  4996  001DD2  0E01               	movlw	1
  4997  001DD4  6E10               	movwf	___fladd@aexp^0,c
  4998  001DD6  EFF6  F00E         	goto	l1301
  4999  001DDA                     l1302:
  5000  001DDA  A003               	btfss	___fladd@b^0,0,c
  5001  001DDC  EFF2  F00E         	goto	u5861
  5002  001DE0  EFF4  F00E         	goto	u5860
  5003  001DE4                     u5861:
  5004  001DE4  EFF6  F00E         	goto	l1301
  5005  001DE8                     u5860:
  5006  001DE8  EFE9  F00E         	goto	l5577
  5007  001DEC                     l1301:
  5008  001DEC  5010               	movf	___fladd@aexp^0,w,c
  5009  001DEE  B4D8               	btfsc	status,2,c
  5010  001DF0  EFFC  F00E         	goto	u5871
  5011  001DF4  EFFE  F00E         	goto	u5870
  5012  001DF8                     u5871:
  5013  001DF8  EF29  F00F         	goto	l5589
  5014  001DFC                     u5870:
  5015  001DFC  0E01               	movlw	1
  5016  001DFE  2603               	addwf	___fladd@b^0,f,c
  5017  001E00  0E00               	movlw	0
  5018  001E02  2204               	addwfc	(___fladd@b+1)^0,f,c
  5019  001E04  2205               	addwfc	(___fladd@b+2)^0,f,c
  5020  001E06  2206               	addwfc	(___fladd@b+3)^0,f,c
  5021  001E08  A006               	btfss	(___fladd@b+3)^0,0,c
  5022  001E0A  EF09  F00F         	goto	u5881
  5023  001E0E  EF0B  F00F         	goto	u5880
  5024  001E12                     u5881:
  5025  001E12  EF29  F00F         	goto	l5589
  5026  001E16                     u5880:
  5027  001E16  C003  F00B         	movff	___fladd@b,??___fladd
  5028  001E1A  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  5029  001E1E  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  5030  001E22  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  5031  001E26  340E               	rlcf	(??___fladd+3)^0,w,c
  5032  001E28  320E               	rrcf	(??___fladd+3)^0,f,c
  5033  001E2A  320D               	rrcf	(??___fladd+2)^0,f,c
  5034  001E2C  320C               	rrcf	(??___fladd+1)^0,f,c
  5035  001E2E  320B               	rrcf	??___fladd^0,f,c
  5036  001E30  C00B  F003         	movff	??___fladd,___fladd@b
  5037  001E34  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  5038  001E38  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  5039  001E3C  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  5040  001E40  2811               	incf	___fladd@bexp^0,w,c
  5041  001E42  B4D8               	btfsc	status,2,c
  5042  001E44  EF26  F00F         	goto	u5891
  5043  001E48  EF28  F00F         	goto	u5890
  5044  001E4C                     u5891:
  5045  001E4C  EF29  F00F         	goto	l5589
  5046  001E50                     u5890:
  5047  001E50  2A11               	incf	___fladd@bexp^0,f,c
  5048  001E52                     l5589:
  5049  001E52  2811               	incf	___fladd@bexp^0,w,c
  5050  001E54  B4D8               	btfsc	status,2,c
  5051  001E56  EF2F  F00F         	goto	u5901
  5052  001E5A  EF31  F00F         	goto	u5900
  5053  001E5E                     u5901:
  5054  001E5E  EF39  F00F         	goto	l5593
  5055  001E62                     u5900:
  5056  001E62  5011               	movf	___fladd@bexp^0,w,c
  5057  001E64  A4D8               	btfss	status,2,c
  5058  001E66  EF37  F00F         	goto	u5911
  5059  001E6A  EF39  F00F         	goto	u5910
  5060  001E6E                     u5911:
  5061  001E6E  EF4B  F00F         	goto	l5597
  5062  001E72                     u5910:
  5063  001E72                     l5593:
  5064  001E72  0E00               	movlw	0
  5065  001E74  6E03               	movwf	___fladd@b^0,c
  5066  001E76  0E00               	movlw	0
  5067  001E78  6E04               	movwf	(___fladd@b+1)^0,c
  5068  001E7A  0E00               	movlw	0
  5069  001E7C  6E05               	movwf	(___fladd@b+2)^0,c
  5070  001E7E  0E00               	movlw	0
  5071  001E80  6E06               	movwf	(___fladd@b+3)^0,c
  5072  001E82  5011               	movf	___fladd@bexp^0,w,c
  5073  001E84  A4D8               	btfss	status,2,c
  5074  001E86  EF47  F00F         	goto	u5921
  5075  001E8A  EF49  F00F         	goto	u5920
  5076  001E8E                     u5921:
  5077  001E8E  EF4B  F00F         	goto	l5597
  5078  001E92                     u5920:
  5079  001E92  0E00               	movlw	0
  5080  001E94  6E0F               	movwf	___fladd@signs^0,c
  5081  001E96                     l5597:
  5082  001E96  A011               	btfss	___fladd@bexp^0,0,c
  5083  001E98  EF50  F00F         	goto	u5931
  5084  001E9C  EF52  F00F         	goto	u5930
  5085  001EA0                     u5931:
  5086  001EA0  EF55  F00F         	goto	l5601
  5087  001EA4                     u5930:
  5088  001EA4  8E05               	bsf	(___fladd@b+2)^0,7,c
  5089  001EA6  EF56  F00F         	goto	l5603
  5090  001EAA                     l5601:
  5091  001EAA  9E05               	bcf	(___fladd@b+2)^0,7,c
  5092  001EAC                     l5603:
  5093  001EAC  90D8               	bcf	status,0,c
  5094  001EAE  3011               	rrcf	___fladd@bexp^0,w,c
  5095  001EB0  6E06               	movwf	(___fladd@b+3)^0,c
  5096  001EB2  AE0F               	btfss	___fladd@signs^0,7,c
  5097  001EB4  EF5E  F00F         	goto	u5941
  5098  001EB8  EF60  F00F         	goto	u5940
  5099  001EBC                     u5941:
  5100  001EBC  EF61  F00F         	goto	l5609
  5101  001EC0                     u5940:
  5102  001EC0  8E06               	bsf	(___fladd@b+3)^0,7,c
  5103  001EC2                     l5609:
  5104  001EC2  C003  F003         	movff	___fladd@b,?___fladd
  5105  001EC6  C004  F004         	movff	___fladd@b+1,?___fladd+1
  5106  001ECA  C005  F005         	movff	___fladd@b+2,?___fladd+2
  5107  001ECE  C006  F006         	movff	___fladd@b+3,?___fladd+3
  5108  001ED2                     l1284:
  5109  001ED2  0012               	return		;funcret
  5110  001ED4                     __end_of___fladd:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function ___flneg *****************
  5114 ;; Defined at:
  5115 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  f1              4    2[COMRAM] unsigned char 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  4    2[COMRAM] unsigned char 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; Hardware stack levels required when called: 2
  5136 ;; This function calls:
  5137 ;;		Nothing
  5138 ;; This function is called by:
  5139 ;;		_roundf
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text15
  5144  0055E2                     __ptext15:
  5145                           	callstack 0
  5146  0055E2                     ___flneg:
  5147                           	callstack 24
  5148  0055E2  5003               	movf	___flneg@f1^0,w,c
  5149  0055E4  1004               	iorwf	(___flneg@f1+1)^0,w,c
  5150  0055E6  1005               	iorwf	(___flneg@f1+2)^0,w,c
  5151  0055E8  1006               	iorwf	(___flneg@f1+3)^0,w,c
  5152  0055EA  B4D8               	btfsc	status,2,c
  5153  0055EC  EFFA  F02A         	goto	u6191
  5154  0055F0  EFFC  F02A         	goto	u6190
  5155  0055F4                     u6191:
  5156  0055F4  EF04  F02B         	goto	l5775
  5157  0055F8                     u6190:
  5158  0055F8  0E00               	movlw	0
  5159  0055FA  1A03               	xorwf	___flneg@f1^0,f,c
  5160  0055FC  0E00               	movlw	0
  5161  0055FE  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  5162  005600  0E00               	movlw	0
  5163  005602  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  5164  005604  0E80               	movlw	128
  5165  005606  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  5166  005608                     l5775:
  5167  005608  C003  F003         	movff	___flneg@f1,?___flneg
  5168  00560C  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  5169  005610  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  5170  005614  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  5171  005618  0012               	return		;funcret
  5172  00561A                     __end_of___flneg:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function ___flmul *****************
  5176 ;; Defined at:
  5177 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  b               4   41[COMRAM] unsigned char 
  5180 ;;  a               4   45[COMRAM] unsigned char 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  prod            4   60[COMRAM] struct .
  5183 ;;  grs             4   55[COMRAM] unsigned long 
  5184 ;;  temp            2   64[COMRAM] struct .
  5185 ;;  bexp            1   59[COMRAM] unsigned char 
  5186 ;;  aexp            1   54[COMRAM] unsigned char 
  5187 ;;  sign            1   53[COMRAM] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  4   41[COMRAM] unsigned char 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0, prodl, prodh
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5197 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;Total ram usage:       25 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 2
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_detect_color
  5208 ;;		_distance_measure
  5209 ;;		_roundf
  5210 ;;		_check_color_reading
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text16
  5215  001ED4                     __ptext16:
  5216                           	callstack 0
  5217  001ED4                     ___flmul:
  5218                           	callstack 24
  5219  001ED4  502D               	movf	(___flmul@b+3)^0,w,c
  5220  001ED6  0B80               	andlw	128
  5221  001ED8  6E36               	movwf	___flmul@sign^0,c
  5222  001EDA  502D               	movf	(___flmul@b+3)^0,w,c
  5223  001EDC  242D               	addwf	(___flmul@b+3)^0,w,c
  5224  001EDE  6E3C               	movwf	___flmul@bexp^0,c
  5225  001EE0  AE2C               	btfss	(___flmul@b+2)^0,7,c
  5226  001EE2  EF75  F00F         	goto	u5951
  5227  001EE6  EF77  F00F         	goto	u5950
  5228  001EEA                     u5951:
  5229  001EEA  EF78  F00F         	goto	l5619
  5230  001EEE                     u5950:
  5231  001EEE  803C               	bsf	___flmul@bexp^0,0,c
  5232  001EF0                     l5619:
  5233  001EF0  503C               	movf	___flmul@bexp^0,w,c
  5234  001EF2  B4D8               	btfsc	status,2,c
  5235  001EF4  EF7E  F00F         	goto	u5961
  5236  001EF8  EF80  F00F         	goto	u5960
  5237  001EFC                     u5961:
  5238  001EFC  EF93  F00F         	goto	l5627
  5239  001F00                     u5960:
  5240  001F00  283C               	incf	___flmul@bexp^0,w,c
  5241  001F02  A4D8               	btfss	status,2,c
  5242  001F04  EF86  F00F         	goto	u5971
  5243  001F08  EF88  F00F         	goto	u5970
  5244  001F0C                     u5971:
  5245  001F0C  EF90  F00F         	goto	l5625
  5246  001F10                     u5970:
  5247  001F10  0E00               	movlw	0
  5248  001F12  6E2A               	movwf	___flmul@b^0,c
  5249  001F14  0E00               	movlw	0
  5250  001F16  6E2B               	movwf	(___flmul@b+1)^0,c
  5251  001F18  0E00               	movlw	0
  5252  001F1A  6E2C               	movwf	(___flmul@b+2)^0,c
  5253  001F1C  0E00               	movlw	0
  5254  001F1E  6E2D               	movwf	(___flmul@b+3)^0,c
  5255  001F20                     l5625:
  5256  001F20  8E2C               	bsf	(___flmul@b+2)^0,7,c
  5257  001F22  EF9B  F00F         	goto	l5629
  5258  001F26                     l5627:
  5259  001F26  0E00               	movlw	0
  5260  001F28  6E2A               	movwf	___flmul@b^0,c
  5261  001F2A  0E00               	movlw	0
  5262  001F2C  6E2B               	movwf	(___flmul@b+1)^0,c
  5263  001F2E  0E00               	movlw	0
  5264  001F30  6E2C               	movwf	(___flmul@b+2)^0,c
  5265  001F32  0E00               	movlw	0
  5266  001F34  6E2D               	movwf	(___flmul@b+3)^0,c
  5267  001F36                     l5629:
  5268  001F36  5031               	movf	(___flmul@a+3)^0,w,c
  5269  001F38  0B80               	andlw	128
  5270  001F3A  1A36               	xorwf	___flmul@sign^0,f,c
  5271  001F3C  5031               	movf	(___flmul@a+3)^0,w,c
  5272  001F3E  2431               	addwf	(___flmul@a+3)^0,w,c
  5273  001F40  6E37               	movwf	___flmul@aexp^0,c
  5274  001F42  AE30               	btfss	(___flmul@a+2)^0,7,c
  5275  001F44  EFA6  F00F         	goto	u5981
  5276  001F48  EFA8  F00F         	goto	u5980
  5277  001F4C                     u5981:
  5278  001F4C  EFA9  F00F         	goto	l5637
  5279  001F50                     u5980:
  5280  001F50  8037               	bsf	___flmul@aexp^0,0,c
  5281  001F52                     l5637:
  5282  001F52  5037               	movf	___flmul@aexp^0,w,c
  5283  001F54  B4D8               	btfsc	status,2,c
  5284  001F56  EFAF  F00F         	goto	u5991
  5285  001F5A  EFB1  F00F         	goto	u5990
  5286  001F5E                     u5991:
  5287  001F5E  EFC4  F00F         	goto	l5645
  5288  001F62                     u5990:
  5289  001F62  2837               	incf	___flmul@aexp^0,w,c
  5290  001F64  A4D8               	btfss	status,2,c
  5291  001F66  EFB7  F00F         	goto	u6001
  5292  001F6A  EFB9  F00F         	goto	u6000
  5293  001F6E                     u6001:
  5294  001F6E  EFC1  F00F         	goto	l5643
  5295  001F72                     u6000:
  5296  001F72  0E00               	movlw	0
  5297  001F74  6E2E               	movwf	___flmul@a^0,c
  5298  001F76  0E00               	movlw	0
  5299  001F78  6E2F               	movwf	(___flmul@a+1)^0,c
  5300  001F7A  0E00               	movlw	0
  5301  001F7C  6E30               	movwf	(___flmul@a+2)^0,c
  5302  001F7E  0E00               	movlw	0
  5303  001F80  6E31               	movwf	(___flmul@a+3)^0,c
  5304  001F82                     l5643:
  5305  001F82  8E30               	bsf	(___flmul@a+2)^0,7,c
  5306  001F84  EFCC  F00F         	goto	l1361
  5307  001F88                     l5645:
  5308  001F88  0E00               	movlw	0
  5309  001F8A  6E2E               	movwf	___flmul@a^0,c
  5310  001F8C  0E00               	movlw	0
  5311  001F8E  6E2F               	movwf	(___flmul@a+1)^0,c
  5312  001F90  0E00               	movlw	0
  5313  001F92  6E30               	movwf	(___flmul@a+2)^0,c
  5314  001F94  0E00               	movlw	0
  5315  001F96  6E31               	movwf	(___flmul@a+3)^0,c
  5316  001F98                     l1361:
  5317  001F98  5037               	movf	___flmul@aexp^0,w,c
  5318  001F9A  B4D8               	btfsc	status,2,c
  5319  001F9C  EFD2  F00F         	goto	u6011
  5320  001FA0  EFD4  F00F         	goto	u6010
  5321  001FA4                     u6011:
  5322  001FA4  EFDC  F00F         	goto	l5649
  5323  001FA8                     u6010:
  5324  001FA8  503C               	movf	___flmul@bexp^0,w,c
  5325  001FAA  A4D8               	btfss	status,2,c
  5326  001FAC  EFDA  F00F         	goto	u6021
  5327  001FB0  EFDC  F00F         	goto	u6020
  5328  001FB4                     u6021:
  5329  001FB4  EFE6  F00F         	goto	l5653
  5330  001FB8                     u6020:
  5331  001FB8                     l5649:
  5332  001FB8  0E00               	movlw	0
  5333  001FBA  6E2A               	movwf	?___flmul^0,c
  5334  001FBC  0E00               	movlw	0
  5335  001FBE  6E2B               	movwf	(?___flmul+1)^0,c
  5336  001FC0  0E00               	movlw	0
  5337  001FC2  6E2C               	movwf	(?___flmul+2)^0,c
  5338  001FC4  0E00               	movlw	0
  5339  001FC6  6E2D               	movwf	(?___flmul+3)^0,c
  5340  001FC8  EF7E  F011         	goto	l1365
  5341  001FCC                     l5653:
  5342  001FCC  5030               	movf	(___flmul@a+2)^0,w,c
  5343  001FCE  022A               	mulwf	___flmul@b^0,c
  5344  001FD0  CFF3 F041          	movff	prodl,___flmul@temp
  5345  001FD4  CFF4 F042          	movff	prodh,___flmul@temp+1
  5346  001FD8  5041               	movf	___flmul@temp^0,w,c
  5347  001FDA  6E38               	movwf	___flmul@grs^0,c
  5348  001FDC  6A39               	clrf	(___flmul@grs+1)^0,c
  5349  001FDE  6A3A               	clrf	(___flmul@grs+2)^0,c
  5350  001FE0  6A3B               	clrf	(___flmul@grs+3)^0,c
  5351  001FE2  5042               	movf	(___flmul@temp+1)^0,w,c
  5352  001FE4  6E3D               	movwf	___flmul@prod^0,c
  5353  001FE6  6A3E               	clrf	(___flmul@prod+1)^0,c
  5354  001FE8  6A3F               	clrf	(___flmul@prod+2)^0,c
  5355  001FEA  6A40               	clrf	(___flmul@prod+3)^0,c
  5356  001FEC  502F               	movf	(___flmul@a+1)^0,w,c
  5357  001FEE  022B               	mulwf	(___flmul@b+1)^0,c
  5358  001FF0  CFF3 F041          	movff	prodl,___flmul@temp
  5359  001FF4  CFF4 F042          	movff	prodh,___flmul@temp+1
  5360  001FF8  5041               	movf	___flmul@temp^0,w,c
  5361  001FFA  2638               	addwf	___flmul@grs^0,f,c
  5362  001FFC  0E00               	movlw	0
  5363  001FFE  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5364  002000  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5365  002002  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5366  002004  5042               	movf	(___flmul@temp+1)^0,w,c
  5367  002006  263D               	addwf	___flmul@prod^0,f,c
  5368  002008  0E00               	movlw	0
  5369  00200A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5370  00200C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5371  00200E  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5372  002010  502E               	movf	___flmul@a^0,w,c
  5373  002012  022C               	mulwf	(___flmul@b+2)^0,c
  5374  002014  CFF3 F041          	movff	prodl,___flmul@temp
  5375  002018  CFF4 F042          	movff	prodh,___flmul@temp+1
  5376  00201C  5041               	movf	___flmul@temp^0,w,c
  5377  00201E  2638               	addwf	___flmul@grs^0,f,c
  5378  002020  0E00               	movlw	0
  5379  002022  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5380  002024  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5381  002026  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5382  002028  5042               	movf	(___flmul@temp+1)^0,w,c
  5383  00202A  263D               	addwf	___flmul@prod^0,f,c
  5384  00202C  0E00               	movlw	0
  5385  00202E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5386  002030  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5387  002032  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5388  002034  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  5389  002038  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  5390  00203C  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  5391  002040  6A38               	clrf	___flmul@grs^0,c
  5392  002042  502E               	movf	___flmul@a^0,w,c
  5393  002044  022B               	mulwf	(___flmul@b+1)^0,c
  5394  002046  CFF3 F041          	movff	prodl,___flmul@temp
  5395  00204A  CFF4 F042          	movff	prodh,___flmul@temp+1
  5396  00204E  5041               	movf	___flmul@temp^0,w,c
  5397  002050  2638               	addwf	___flmul@grs^0,f,c
  5398  002052  5042               	movf	(___flmul@temp+1)^0,w,c
  5399  002054  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5400  002056  0E00               	movlw	0
  5401  002058  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5402  00205A  0E00               	movlw	0
  5403  00205C  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5404  00205E  502F               	movf	(___flmul@a+1)^0,w,c
  5405  002060  022A               	mulwf	___flmul@b^0,c
  5406  002062  CFF3 F041          	movff	prodl,___flmul@temp
  5407  002066  CFF4 F042          	movff	prodh,___flmul@temp+1
  5408  00206A  5041               	movf	___flmul@temp^0,w,c
  5409  00206C  2638               	addwf	___flmul@grs^0,f,c
  5410  00206E  5042               	movf	(___flmul@temp+1)^0,w,c
  5411  002070  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5412  002072  0E00               	movlw	0
  5413  002074  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5414  002076  0E00               	movlw	0
  5415  002078  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5416  00207A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  5417  00207E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  5418  002082  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  5419  002086  6A38               	clrf	___flmul@grs^0,c
  5420  002088  502E               	movf	___flmul@a^0,w,c
  5421  00208A  022A               	mulwf	___flmul@b^0,c
  5422  00208C  CFF3 F041          	movff	prodl,___flmul@temp
  5423  002090  CFF4 F042          	movff	prodh,___flmul@temp+1
  5424  002094  5041               	movf	___flmul@temp^0,w,c
  5425  002096  2638               	addwf	___flmul@grs^0,f,c
  5426  002098  5042               	movf	(___flmul@temp+1)^0,w,c
  5427  00209A  2239               	addwfc	(___flmul@grs+1)^0,f,c
  5428  00209C  0E00               	movlw	0
  5429  00209E  223A               	addwfc	(___flmul@grs+2)^0,f,c
  5430  0020A0  0E00               	movlw	0
  5431  0020A2  223B               	addwfc	(___flmul@grs+3)^0,f,c
  5432  0020A4  5030               	movf	(___flmul@a+2)^0,w,c
  5433  0020A6  022B               	mulwf	(___flmul@b+1)^0,c
  5434  0020A8  CFF3 F041          	movff	prodl,___flmul@temp
  5435  0020AC  CFF4 F042          	movff	prodh,___flmul@temp+1
  5436  0020B0  5041               	movf	___flmul@temp^0,w,c
  5437  0020B2  263D               	addwf	___flmul@prod^0,f,c
  5438  0020B4  5042               	movf	(___flmul@temp+1)^0,w,c
  5439  0020B6  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5440  0020B8  0E00               	movlw	0
  5441  0020BA  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5442  0020BC  0E00               	movlw	0
  5443  0020BE  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5444  0020C0  502F               	movf	(___flmul@a+1)^0,w,c
  5445  0020C2  022C               	mulwf	(___flmul@b+2)^0,c
  5446  0020C4  CFF3 F041          	movff	prodl,___flmul@temp
  5447  0020C8  CFF4 F042          	movff	prodh,___flmul@temp+1
  5448  0020CC  5041               	movf	___flmul@temp^0,w,c
  5449  0020CE  263D               	addwf	___flmul@prod^0,f,c
  5450  0020D0  5042               	movf	(___flmul@temp+1)^0,w,c
  5451  0020D2  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5452  0020D4  0E00               	movlw	0
  5453  0020D6  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5454  0020D8  0E00               	movlw	0
  5455  0020DA  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5456  0020DC  5030               	movf	(___flmul@a+2)^0,w,c
  5457  0020DE  022C               	mulwf	(___flmul@b+2)^0,c
  5458  0020E0  CFF3 F041          	movff	prodl,___flmul@temp
  5459  0020E4  CFF4 F042          	movff	prodh,___flmul@temp+1
  5460  0020E8  5041               	movf	___flmul@temp^0,w,c
  5461  0020EA  6E32               	movwf	??___flmul^0,c
  5462  0020EC  5042               	movf	(___flmul@temp+1)^0,w,c
  5463  0020EE  6E33               	movwf	(??___flmul+1)^0,c
  5464  0020F0  6A34               	clrf	(??___flmul+2)^0,c
  5465  0020F2  6A35               	clrf	(??___flmul+3)^0,c
  5466  0020F4  C034  F035         	movff	??___flmul+2,??___flmul+3
  5467  0020F8  C033  F034         	movff	??___flmul+1,??___flmul+2
  5468  0020FC  C032  F033         	movff	??___flmul,??___flmul+1
  5469  002100  6A32               	clrf	??___flmul^0,c
  5470  002102  5032               	movf	??___flmul^0,w,c
  5471  002104  263D               	addwf	___flmul@prod^0,f,c
  5472  002106  5033               	movf	(??___flmul+1)^0,w,c
  5473  002108  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5474  00210A  5034               	movf	(??___flmul+2)^0,w,c
  5475  00210C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5476  00210E  5035               	movf	(??___flmul+3)^0,w,c
  5477  002110  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5478  002112  C038  F032         	movff	___flmul@grs,??___flmul
  5479  002116  C039  F033         	movff	___flmul@grs+1,??___flmul+1
  5480  00211A  C03A  F034         	movff	___flmul@grs+2,??___flmul+2
  5481  00211E  C03B  F035         	movff	___flmul@grs+3,??___flmul+3
  5482  002122  0E19               	movlw	25
  5483  002124  EF99  F010         	goto	u6030
  5484  002128                     u6035:
  5485  002128  90D8               	bcf	status,0,c
  5486  00212A  3235               	rrcf	(??___flmul+3)^0,f,c
  5487  00212C  3234               	rrcf	(??___flmul+2)^0,f,c
  5488  00212E  3233               	rrcf	(??___flmul+1)^0,f,c
  5489  002130  3232               	rrcf	??___flmul^0,f,c
  5490  002132                     u6030:
  5491  002132  2EE8               	decfsz	wreg,f,c
  5492  002134  EF94  F010         	goto	u6035
  5493  002138  5032               	movf	??___flmul^0,w,c
  5494  00213A  263D               	addwf	___flmul@prod^0,f,c
  5495  00213C  5033               	movf	(??___flmul+1)^0,w,c
  5496  00213E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5497  002140  5034               	movf	(??___flmul+2)^0,w,c
  5498  002142  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5499  002144  5035               	movf	(??___flmul+3)^0,w,c
  5500  002146  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5501  002148  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  5502  00214C  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  5503  002150  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  5504  002154  6A38               	clrf	___flmul@grs^0,c
  5505  002156  5037               	movf	___flmul@aexp^0,w,c
  5506  002158  C03C  F032         	movff	___flmul@bexp,??___flmul
  5507  00215C  6A33               	clrf	(??___flmul+1)^0,c
  5508  00215E  2632               	addwf	??___flmul^0,f,c
  5509  002160  0E00               	movlw	0
  5510  002162  2233               	addwfc	(??___flmul+1)^0,f,c
  5511  002164  0E82               	movlw	130
  5512  002166  2432               	addwf	??___flmul^0,w,c
  5513  002168  6E41               	movwf	___flmul@temp^0,c
  5514  00216A  0EFF               	movlw	255
  5515  00216C  2033               	addwfc	(??___flmul+1)^0,w,c
  5516  00216E  6E42               	movwf	(___flmul@temp+1)^0,c
  5517  002170  EFCF  F010         	goto	l5701
  5518  002174                     l5695:
  5519  002174  90D8               	bcf	status,0,c
  5520  002176  363D               	rlcf	___flmul@prod^0,f,c
  5521  002178  363E               	rlcf	(___flmul@prod+1)^0,f,c
  5522  00217A  363F               	rlcf	(___flmul@prod+2)^0,f,c
  5523  00217C  3640               	rlcf	(___flmul@prod+3)^0,f,c
  5524  00217E  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  5525  002180  EFC4  F010         	goto	u6041
  5526  002184  EFC6  F010         	goto	u6040
  5527  002188                     u6041:
  5528  002188  EFC7  F010         	goto	l1368
  5529  00218C                     u6040:
  5530  00218C  803D               	bsf	___flmul@prod^0,0,c
  5531  00218E                     l1368:
  5532  00218E  90D8               	bcf	status,0,c
  5533  002190  3638               	rlcf	___flmul@grs^0,f,c
  5534  002192  3639               	rlcf	(___flmul@grs+1)^0,f,c
  5535  002194  363A               	rlcf	(___flmul@grs+2)^0,f,c
  5536  002196  363B               	rlcf	(___flmul@grs+3)^0,f,c
  5537  002198  0641               	decf	___flmul@temp^0,f,c
  5538  00219A  A0D8               	btfss	status,0,c
  5539  00219C  0642               	decf	(___flmul@temp+1)^0,f,c
  5540  00219E                     l5701:
  5541  00219E  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  5542  0021A0  EFD4  F010         	goto	u6051
  5543  0021A4  EFD6  F010         	goto	u6050
  5544  0021A8                     u6051:
  5545  0021A8  EFBA  F010         	goto	l5695
  5546  0021AC                     u6050:
  5547  0021AC  0E00               	movlw	0
  5548  0021AE  6E37               	movwf	___flmul@aexp^0,c
  5549  0021B0  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  5550  0021B2  EFDD  F010         	goto	u6061
  5551  0021B6  EFDF  F010         	goto	u6060
  5552  0021BA                     u6061:
  5553  0021BA  EF03  F011         	goto	l1370
  5554  0021BE                     u6060:
  5555  0021BE  0EFF               	movlw	255
  5556  0021C0  1438               	andwf	___flmul@grs^0,w,c
  5557  0021C2  6E32               	movwf	??___flmul^0,c
  5558  0021C4  0EFF               	movlw	255
  5559  0021C6  1439               	andwf	(___flmul@grs+1)^0,w,c
  5560  0021C8  6E33               	movwf	(??___flmul+1)^0,c
  5561  0021CA  0EFF               	movlw	255
  5562  0021CC  143A               	andwf	(___flmul@grs+2)^0,w,c
  5563  0021CE  6E34               	movwf	(??___flmul+2)^0,c
  5564  0021D0  0E7F               	movlw	127
  5565  0021D2  143B               	andwf	(___flmul@grs+3)^0,w,c
  5566  0021D4  6E35               	movwf	(??___flmul+3)^0,c
  5567  0021D6  5032               	movf	??___flmul^0,w,c
  5568  0021D8  1033               	iorwf	(??___flmul+1)^0,w,c
  5569  0021DA  1034               	iorwf	(??___flmul+2)^0,w,c
  5570  0021DC  1035               	iorwf	(??___flmul+3)^0,w,c
  5571  0021DE  B4D8               	btfsc	status,2,c
  5572  0021E0  EFF4  F010         	goto	u6071
  5573  0021E4  EFF6  F010         	goto	u6070
  5574  0021E8                     u6071:
  5575  0021E8  EFFA  F010         	goto	l1371
  5576  0021EC                     u6070:
  5577  0021EC                     l5709:
  5578  0021EC  0E01               	movlw	1
  5579  0021EE  6E37               	movwf	___flmul@aexp^0,c
  5580  0021F0  EF03  F011         	goto	l1370
  5581  0021F4                     l1371:
  5582  0021F4  A03D               	btfss	___flmul@prod^0,0,c
  5583  0021F6  EFFF  F010         	goto	u6081
  5584  0021FA  EF01  F011         	goto	u6080
  5585  0021FE                     u6081:
  5586  0021FE  EF03  F011         	goto	l1370
  5587  002202                     u6080:
  5588  002202  EFF6  F010         	goto	l5709
  5589  002206                     l1370:
  5590  002206  5037               	movf	___flmul@aexp^0,w,c
  5591  002208  B4D8               	btfsc	status,2,c
  5592  00220A  EF09  F011         	goto	u6091
  5593  00220E  EF0B  F011         	goto	u6090
  5594  002212                     u6091:
  5595  002212  EF2F  F011         	goto	l5721
  5596  002216                     u6090:
  5597  002216  0E01               	movlw	1
  5598  002218  263D               	addwf	___flmul@prod^0,f,c
  5599  00221A  0E00               	movlw	0
  5600  00221C  223E               	addwfc	(___flmul@prod+1)^0,f,c
  5601  00221E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  5602  002220  2240               	addwfc	(___flmul@prod+3)^0,f,c
  5603  002222  A040               	btfss	(___flmul@prod+3)^0,0,c
  5604  002224  EF16  F011         	goto	u6101
  5605  002228  EF18  F011         	goto	u6100
  5606  00222C                     u6101:
  5607  00222C  EF2F  F011         	goto	l5721
  5608  002230                     u6100:
  5609  002230  C03D  F032         	movff	___flmul@prod,??___flmul
  5610  002234  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  5611  002238  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  5612  00223C  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  5613  002240  3435               	rlcf	(??___flmul+3)^0,w,c
  5614  002242  3235               	rrcf	(??___flmul+3)^0,f,c
  5615  002244  3234               	rrcf	(??___flmul+2)^0,f,c
  5616  002246  3233               	rrcf	(??___flmul+1)^0,f,c
  5617  002248  3232               	rrcf	??___flmul^0,f,c
  5618  00224A  C032  F03D         	movff	??___flmul,___flmul@prod
  5619  00224E  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  5620  002252  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  5621  002256  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  5622  00225A  4A41               	infsnz	___flmul@temp^0,f,c
  5623  00225C  2A42               	incf	(___flmul@temp+1)^0,f,c
  5624  00225E                     l5721:
  5625  00225E  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  5626  002260  EF3A  F011         	goto	u6111
  5627  002264  5042               	movf	(___flmul@temp+1)^0,w,c
  5628  002266  E108               	bnz	u6110
  5629  002268  2841               	incf	___flmul@temp^0,w,c
  5630  00226A  A0D8               	btfss	status,0,c
  5631  00226C  EF3A  F011         	goto	u6111
  5632  002270  EF3C  F011         	goto	u6110
  5633  002274                     u6111:
  5634  002274  EF46  F011         	goto	l5725
  5635  002278                     u6110:
  5636  002278  0E00               	movlw	0
  5637  00227A  6E3D               	movwf	___flmul@prod^0,c
  5638  00227C  0E00               	movlw	0
  5639  00227E  6E3E               	movwf	(___flmul@prod+1)^0,c
  5640  002280  0E80               	movlw	128
  5641  002282  6E3F               	movwf	(___flmul@prod+2)^0,c
  5642  002284  0E7F               	movlw	127
  5643  002286  6E40               	movwf	(___flmul@prod+3)^0,c
  5644  002288  EF74  F011         	goto	l5737
  5645  00228C                     l5725:
  5646  00228C  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  5647  00228E  EF53  F011         	goto	u6120
  5648  002292  5042               	movf	(___flmul@temp+1)^0,w,c
  5649  002294  E106               	bnz	u6121
  5650  002296  0441               	decf	___flmul@temp^0,w,c
  5651  002298  B0D8               	btfsc	status,0,c
  5652  00229A  EF51  F011         	goto	u6121
  5653  00229E  EF53  F011         	goto	u6120
  5654  0022A2                     u6121:
  5655  0022A2  EF5F  F011         	goto	l1378
  5656  0022A6                     u6120:
  5657  0022A6  0E00               	movlw	0
  5658  0022A8  6E3D               	movwf	___flmul@prod^0,c
  5659  0022AA  0E00               	movlw	0
  5660  0022AC  6E3E               	movwf	(___flmul@prod+1)^0,c
  5661  0022AE  0E00               	movlw	0
  5662  0022B0  6E3F               	movwf	(___flmul@prod+2)^0,c
  5663  0022B2  0E00               	movlw	0
  5664  0022B4  6E40               	movwf	(___flmul@prod+3)^0,c
  5665  0022B6  0E00               	movlw	0
  5666  0022B8  6E36               	movwf	___flmul@sign^0,c
  5667  0022BA  EF74  F011         	goto	l5737
  5668  0022BE                     l1378:
  5669  0022BE  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  5670  0022C2  0EFF               	movlw	255
  5671  0022C4  163D               	andwf	___flmul@prod^0,f,c
  5672  0022C6  0EFF               	movlw	255
  5673  0022C8  163E               	andwf	(___flmul@prod+1)^0,f,c
  5674  0022CA  0E7F               	movlw	127
  5675  0022CC  163F               	andwf	(___flmul@prod+2)^0,f,c
  5676  0022CE  0E00               	movlw	0
  5677  0022D0  1640               	andwf	(___flmul@prod+3)^0,f,c
  5678  0022D2  A03C               	btfss	___flmul@bexp^0,0,c
  5679  0022D4  EF6E  F011         	goto	u6131
  5680  0022D8  EF70  F011         	goto	u6130
  5681  0022DC                     u6131:
  5682  0022DC  EF71  F011         	goto	l5735
  5683  0022E0                     u6130:
  5684  0022E0  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  5685  0022E2                     l5735:
  5686  0022E2  90D8               	bcf	status,0,c
  5687  0022E4  303C               	rrcf	___flmul@bexp^0,w,c
  5688  0022E6  6E40               	movwf	(___flmul@prod+3)^0,c
  5689  0022E8                     l5737:
  5690  0022E8  5036               	movf	___flmul@sign^0,w,c
  5691  0022EA  1240               	iorwf	(___flmul@prod+3)^0,f,c
  5692  0022EC  C03D  F02A         	movff	___flmul@prod,?___flmul
  5693  0022F0  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  5694  0022F4  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  5695  0022F8  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  5696  0022FC                     l1365:
  5697  0022FC  0012               	return		;funcret
  5698  0022FE                     __end_of___flmul:
  5699                           	callstack 0
  5700                           
  5701 ;; *************** function ___flge *****************
  5702 ;; Defined at:
  5703 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  5704 ;; Parameters:    Size  Location     Type
  5705 ;;  ff1             4    2[COMRAM] unsigned char 
  5706 ;;  ff2             4    6[COMRAM] unsigned char 
  5707 ;; Auto vars:     Size  Location     Type
  5708 ;;		None
  5709 ;; Return value:  Size  Location     Type
  5710 ;;		None               void
  5711 ;; Registers used:
  5712 ;;		wreg, status,2, status,0
  5713 ;; Tracked objects:
  5714 ;;		On entry : 0/0
  5715 ;;		On exit  : 0/0
  5716 ;;		Unchanged: 0/0
  5717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5718 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5720 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5721 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5722 ;;Total ram usage:       12 bytes
  5723 ;; Hardware stack levels used: 1
  5724 ;; Hardware stack levels required when called: 2
  5725 ;; This function calls:
  5726 ;;		Nothing
  5727 ;; This function is called by:
  5728 ;;		_roundf
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text17
  5733  004658                     __ptext17:
  5734                           	callstack 0
  5735  004658                     ___flge:
  5736                           	callstack 24
  5737  004658  0E00               	movlw	0
  5738  00465A  1403               	andwf	___flge@ff1^0,w,c
  5739  00465C  6E0B               	movwf	??___flge^0,c
  5740  00465E  0E00               	movlw	0
  5741  004660  1404               	andwf	(___flge@ff1+1)^0,w,c
  5742  004662  6E0C               	movwf	(??___flge+1)^0,c
  5743  004664  0E80               	movlw	128
  5744  004666  1405               	andwf	(___flge@ff1+2)^0,w,c
  5745  004668  6E0D               	movwf	(??___flge+2)^0,c
  5746  00466A  0E7F               	movlw	127
  5747  00466C  1406               	andwf	(___flge@ff1+3)^0,w,c
  5748  00466E  6E0E               	movwf	(??___flge+3)^0,c
  5749  004670  500B               	movf	??___flge^0,w,c
  5750  004672  100C               	iorwf	(??___flge+1)^0,w,c
  5751  004674  100D               	iorwf	(??___flge+2)^0,w,c
  5752  004676  100E               	iorwf	(??___flge+3)^0,w,c
  5753  004678  A4D8               	btfss	status,2,c
  5754  00467A  EF41  F023         	goto	u6141
  5755  00467E  EF43  F023         	goto	u6140
  5756  004682                     u6141:
  5757  004682  EF4B  F023         	goto	l5753
  5758  004686                     u6140:
  5759  004686  0E00               	movlw	0
  5760  004688  6E03               	movwf	___flge@ff1^0,c
  5761  00468A  0E00               	movlw	0
  5762  00468C  6E04               	movwf	(___flge@ff1+1)^0,c
  5763  00468E  0E00               	movlw	0
  5764  004690  6E05               	movwf	(___flge@ff1+2)^0,c
  5765  004692  0E00               	movlw	0
  5766  004694  6E06               	movwf	(___flge@ff1+3)^0,c
  5767  004696                     l5753:
  5768  004696  0E00               	movlw	0
  5769  004698  1407               	andwf	___flge@ff2^0,w,c
  5770  00469A  6E0B               	movwf	??___flge^0,c
  5771  00469C  0E00               	movlw	0
  5772  00469E  1408               	andwf	(___flge@ff2+1)^0,w,c
  5773  0046A0  6E0C               	movwf	(??___flge+1)^0,c
  5774  0046A2  0E80               	movlw	128
  5775  0046A4  1409               	andwf	(___flge@ff2+2)^0,w,c
  5776  0046A6  6E0D               	movwf	(??___flge+2)^0,c
  5777  0046A8  0E7F               	movlw	127
  5778  0046AA  140A               	andwf	(___flge@ff2+3)^0,w,c
  5779  0046AC  6E0E               	movwf	(??___flge+3)^0,c
  5780  0046AE  500B               	movf	??___flge^0,w,c
  5781  0046B0  100C               	iorwf	(??___flge+1)^0,w,c
  5782  0046B2  100D               	iorwf	(??___flge+2)^0,w,c
  5783  0046B4  100E               	iorwf	(??___flge+3)^0,w,c
  5784  0046B6  A4D8               	btfss	status,2,c
  5785  0046B8  EF60  F023         	goto	u6151
  5786  0046BC  EF62  F023         	goto	u6150
  5787  0046C0                     u6151:
  5788  0046C0  EF6A  F023         	goto	l5757
  5789  0046C4                     u6150:
  5790  0046C4  0E00               	movlw	0
  5791  0046C6  6E07               	movwf	___flge@ff2^0,c
  5792  0046C8  0E00               	movlw	0
  5793  0046CA  6E08               	movwf	(___flge@ff2+1)^0,c
  5794  0046CC  0E00               	movlw	0
  5795  0046CE  6E09               	movwf	(___flge@ff2+2)^0,c
  5796  0046D0  0E00               	movlw	0
  5797  0046D2  6E0A               	movwf	(___flge@ff2+3)^0,c
  5798  0046D4                     l5757:
  5799  0046D4  AE06               	btfss	(___flge@ff1+3)^0,7,c
  5800  0046D6  EF6F  F023         	goto	u6161
  5801  0046DA  EF71  F023         	goto	u6160
  5802  0046DE                     u6161:
  5803  0046DE  EF7A  F023         	goto	l5761
  5804  0046E2                     u6160:
  5805  0046E2  6C03               	negf	___flge@ff1^0,c
  5806  0046E4  1E04               	comf	(___flge@ff1+1)^0,f,c
  5807  0046E6  B0D8               	btfsc	status,0,c
  5808  0046E8  2A04               	incf	(___flge@ff1+1)^0,f,c
  5809  0046EA  1E05               	comf	(___flge@ff1+2)^0,f,c
  5810  0046EC  B0D8               	btfsc	status,0,c
  5811  0046EE  2A05               	incf	(___flge@ff1+2)^0,f,c
  5812  0046F0  0E80               	movlw	128
  5813  0046F2  5606               	subfwb	(___flge@ff1+3)^0,f,c
  5814  0046F4                     l5761:
  5815  0046F4  AE0A               	btfss	(___flge@ff2+3)^0,7,c
  5816  0046F6  EF7F  F023         	goto	u6171
  5817  0046FA  EF81  F023         	goto	u6170
  5818  0046FE                     u6171:
  5819  0046FE  EF8A  F023         	goto	l1012
  5820  004702                     u6170:
  5821  004702  6C07               	negf	___flge@ff2^0,c
  5822  004704  1E08               	comf	(___flge@ff2+1)^0,f,c
  5823  004706  B0D8               	btfsc	status,0,c
  5824  004708  2A08               	incf	(___flge@ff2+1)^0,f,c
  5825  00470A  1E09               	comf	(___flge@ff2+2)^0,f,c
  5826  00470C  B0D8               	btfsc	status,0,c
  5827  00470E  2A09               	incf	(___flge@ff2+2)^0,f,c
  5828  004710  0E80               	movlw	128
  5829  004712  560A               	subfwb	(___flge@ff2+3)^0,f,c
  5830  004714                     l1012:
  5831  004714  0E00               	movlw	0
  5832  004716  1A03               	xorwf	___flge@ff1^0,f,c
  5833  004718  0E00               	movlw	0
  5834  00471A  1A04               	xorwf	(___flge@ff1+1)^0,f,c
  5835  00471C  0E00               	movlw	0
  5836  00471E  1A05               	xorwf	(___flge@ff1+2)^0,f,c
  5837  004720  0E80               	movlw	128
  5838  004722  1A06               	xorwf	(___flge@ff1+3)^0,f,c
  5839  004724  0E00               	movlw	0
  5840  004726  1A07               	xorwf	___flge@ff2^0,f,c
  5841  004728  0E00               	movlw	0
  5842  00472A  1A08               	xorwf	(___flge@ff2+1)^0,f,c
  5843  00472C  0E00               	movlw	0
  5844  00472E  1A09               	xorwf	(___flge@ff2+2)^0,f,c
  5845  004730  0E80               	movlw	128
  5846  004732  1A0A               	xorwf	(___flge@ff2+3)^0,f,c
  5847  004734  5007               	movf	___flge@ff2^0,w,c
  5848  004736  5C03               	subwf	___flge@ff1^0,w,c
  5849  004738  5008               	movf	(___flge@ff2+1)^0,w,c
  5850  00473A  5804               	subwfb	(___flge@ff1+1)^0,w,c
  5851  00473C  5009               	movf	(___flge@ff2+2)^0,w,c
  5852  00473E  5805               	subwfb	(___flge@ff1+2)^0,w,c
  5853  004740  500A               	movf	(___flge@ff2+3)^0,w,c
  5854  004742  5806               	subwfb	(___flge@ff1+3)^0,w,c
  5855  004744  B0D8               	btfsc	status,0,c
  5856  004746  EFA7  F023         	goto	u6181
  5857  00474A  EFA9  F023         	goto	u6180
  5858  00474E                     u6181:
  5859  00474E  EFAC  F023         	goto	l5767
  5860  004752                     u6180:
  5861  004752  90D8               	bcf	status,0,c
  5862  004754  EFAD  F023         	goto	l1017
  5863  004758                     l5767:
  5864  004758  80D8               	bsf	status,0,c
  5865  00475A                     l1017:
  5866  00475A  0012               	return		;funcret
  5867  00475C                     __end_of___flge:
  5868                           	callstack 0
  5869                           
  5870 ;; *************** function ___fltol *****************
  5871 ;; Defined at:
  5872 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  f1              4   18[BANK0 ] unsigned char 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;  exp1            1   79[COMRAM] unsigned char 
  5877 ;;  sign1           1   78[COMRAM] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  4   18[BANK0 ] long 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;Total ram usage:       10 bytes
  5892 ;; Hardware stack levels used: 1
  5893 ;; Hardware stack levels required when called: 2
  5894 ;; This function calls:
  5895 ;;		Nothing
  5896 ;; This function is called by:
  5897 ;;		_lroundf
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text18
  5902  004550                     __ptext18:
  5903                           	callstack 0
  5904  004550                     ___fltol:
  5905                           	callstack 25
  5906  004550  0100               	movlb	0	; () banked
  5907  004552  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5908  004554  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5909  004556  6E50               	movwf	___fltol@exp1^0,c
  5910  004558  5050               	movf	___fltol@exp1^0,w,c
  5911  00455A  A4D8               	btfss	status,2,c
  5912  00455C  EFB2  F022         	goto	u6201
  5913  004560  EFB4  F022         	goto	u6200
  5914  004564                     u6201:
  5915  004564  EFBE  F022         	goto	l5785
  5916  004568                     u6200:
  5917  004568                     l5781:
  5918                           
  5919                           ; BSR set to: 0
  5920  004568  0E00               	movlw	0
  5921  00456A  6F72               	movwf	?___fltol& (0+255),b
  5922  00456C  0E00               	movlw	0
  5923  00456E  6F73               	movwf	(?___fltol+1)& (0+255),b
  5924  004570  0E00               	movlw	0
  5925  004572  6F74               	movwf	(?___fltol+2)& (0+255),b
  5926  004574  0E00               	movlw	0
  5927  004576  6F75               	movwf	(?___fltol+3)& (0+255),b
  5928  004578  EF2B  F023         	goto	l1044
  5929  00457C                     l5785:
  5930                           
  5931                           ; BSR set to: 0
  5932  00457C  C072  F04B         	movff	___fltol@f1,??___fltol
  5933  004580  C073  F04C         	movff	___fltol@f1+1,??___fltol+1
  5934  004584  C074  F04D         	movff	___fltol@f1+2,??___fltol+2
  5935  004588  C075  F04E         	movff	___fltol@f1+3,??___fltol+3
  5936  00458C  0E20               	movlw	32
  5937  00458E  EFCE  F022         	goto	u6210
  5938  004592                     u6215:
  5939  004592  90D8               	bcf	status,0,c
  5940  004594  324E               	rrcf	(??___fltol+3)^0,f,c
  5941  004596  324D               	rrcf	(??___fltol+2)^0,f,c
  5942  004598  324C               	rrcf	(??___fltol+1)^0,f,c
  5943  00459A  324B               	rrcf	??___fltol^0,f,c
  5944  00459C                     u6210:
  5945  00459C  2EE8               	decfsz	wreg,f,c
  5946  00459E  EFC9  F022         	goto	u6215
  5947  0045A2  504B               	movf	??___fltol^0,w,c
  5948  0045A4  6E4F               	movwf	___fltol@sign1^0,c
  5949  0045A6                     
  5950                           ; BSR set to: 0
  5951  0045A6  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
  5952  0045A8                     
  5953                           ; BSR set to: 0
  5954  0045A8  0EFF               	movlw	255
  5955  0045AA  1772               	andwf	___fltol@f1& (0+255),f,b
  5956  0045AC  0EFF               	movlw	255
  5957  0045AE  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
  5958  0045B0  0EFF               	movlw	255
  5959  0045B2  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
  5960  0045B4  0E00               	movlw	0
  5961  0045B6  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
  5962  0045B8                     
  5963                           ; BSR set to: 0
  5964  0045B8  0E96               	movlw	150
  5965  0045BA  5E50               	subwf	___fltol@exp1^0,f,c
  5966  0045BC                     
  5967                           ; BSR set to: 0
  5968  0045BC  BE50               	btfsc	___fltol@exp1^0,7,c
  5969  0045BE  EFE5  F022         	goto	u6220
  5970  0045C2  EFE3  F022         	goto	u6221
  5971  0045C6                     u6221:
  5972  0045C6  EFFB  F022         	goto	l5805
  5973  0045CA                     u6220:
  5974  0045CA                     
  5975                           ; BSR set to: 0
  5976  0045CA  5050               	movf	___fltol@exp1^0,w,c
  5977  0045CC  0A80               	xorlw	128
  5978  0045CE  0F97               	addlw	151
  5979  0045D0  B0D8               	btfsc	status,0,c
  5980  0045D2  EFED  F022         	goto	u6231
  5981  0045D6  EFEF  F022         	goto	u6230
  5982  0045DA                     u6231:
  5983  0045DA  EFF1  F022         	goto	l5801
  5984  0045DE                     u6230:
  5985  0045DE  EFB4  F022         	goto	l5781
  5986  0045E2                     l5801:
  5987                           
  5988                           ; BSR set to: 0
  5989  0045E2  90D8               	bcf	status,0,c
  5990  0045E4  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5991  0045E6  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5992  0045E8  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5993  0045EA  3372               	rrcf	___fltol@f1& (0+255),f,b
  5994  0045EC                     
  5995                           ; BSR set to: 0
  5996  0045EC  3E50               	incfsz	___fltol@exp1^0,f,c
  5997  0045EE  EFF1  F022         	goto	l5801
  5998  0045F2  EF13  F023         	goto	l5815
  5999  0045F6                     l5805:
  6000                           
  6001                           ; BSR set to: 0
  6002  0045F6  0E1F               	movlw	31
  6003  0045F8  6450               	cpfsgt	___fltol@exp1^0,c
  6004  0045FA  EF01  F023         	goto	u6241
  6005  0045FE  EF03  F023         	goto	u6240
  6006  004602                     u6241:
  6007  004602  EF0B  F023         	goto	l5813
  6008  004606                     u6240:
  6009  004606  EFB4  F022         	goto	l5781
  6010  00460A                     l5811:
  6011                           
  6012                           ; BSR set to: 0
  6013  00460A  90D8               	bcf	status,0,c
  6014  00460C  3772               	rlcf	___fltol@f1& (0+255),f,b
  6015  00460E  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6016  004610  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6017  004612  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6018  004614  0650               	decf	___fltol@exp1^0,f,c
  6019  004616                     l5813:
  6020                           
  6021                           ; BSR set to: 0
  6022  004616  5050               	movf	___fltol@exp1^0,w,c
  6023  004618  A4D8               	btfss	status,2,c
  6024  00461A  EF11  F023         	goto	u6251
  6025  00461E  EF13  F023         	goto	u6250
  6026  004622                     u6251:
  6027  004622  EF05  F023         	goto	l5811
  6028  004626                     u6250:
  6029  004626                     l5815:
  6030                           
  6031                           ; BSR set to: 0
  6032  004626  504F               	movf	___fltol@sign1^0,w,c
  6033  004628  B4D8               	btfsc	status,2,c
  6034  00462A  EF19  F023         	goto	u6261
  6035  00462E  EF1B  F023         	goto	u6260
  6036  004632                     u6261:
  6037  004632  EF23  F023         	goto	l5819
  6038  004636                     u6260:
  6039  004636                     
  6040                           ; BSR set to: 0
  6041  004636  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
  6042  004638  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
  6043  00463A  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
  6044  00463C  6D72               	negf	___fltol@f1& (0+255),b
  6045  00463E  0E00               	movlw	0
  6046  004640  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6047  004642  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6048  004644  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6049  004646                     l5819:
  6050                           
  6051                           ; BSR set to: 0
  6052  004646  C072  F072         	movff	___fltol@f1,?___fltol
  6053  00464A  C073  F073         	movff	___fltol@f1+1,?___fltol+1
  6054  00464E  C074  F074         	movff	___fltol@f1+2,?___fltol+2
  6055  004652  C075  F075         	movff	___fltol@f1+3,?___fltol+3
  6056  004656                     l1044:
  6057                           
  6058                           ; BSR set to: 0
  6059  004656  0012               	return		;funcret
  6060  004658                     __end_of___fltol:
  6061                           	callstack 0
  6062                           
  6063 ;; *************** function ___xxtofl *****************
  6064 ;; Defined at:
  6065 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;  sign            1    wreg     unsigned char 
  6068 ;;  val             4    2[COMRAM] long 
  6069 ;; Auto vars:     Size  Location     Type
  6070 ;;  sign            1   10[COMRAM] unsigned char 
  6071 ;;  arg             4   12[COMRAM] unsigned long 
  6072 ;;  exp             1   11[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  4    2[COMRAM] unsigned char 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;Total ram usage:       14 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 2
  6089 ;; This function calls:
  6090 ;;		Nothing
  6091 ;; This function is called by:
  6092 ;;		_detect_color
  6093 ;;		_distance_measure
  6094 ;;		_check_color_reading
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text19
  6099  003902                     __ptext19:
  6100                           	callstack 0
  6101  003902                     ___xxtofl:
  6102                           	callstack 26
  6103                           
  6104                           ; BSR set to: 0
  6105                           ;incstack = 0
  6106                           ;___xxtofl@sign stored from wreg
  6107  003902  6E0B               	movwf	___xxtofl@sign^0,c
  6108  003904  500B               	movf	___xxtofl@sign^0,w,c
  6109  003906  B4D8               	btfsc	status,2,c
  6110  003908  EF88  F01C         	goto	u4641
  6111  00390C  EF8A  F01C         	goto	u4640
  6112  003910                     u4641:
  6113  003910  EFAC  F01C         	goto	l1402
  6114  003914                     u4640:
  6115  003914  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  6116  003916  EF91  F01C         	goto	u4650
  6117  00391A  EF8F  F01C         	goto	u4651
  6118  00391E                     u4651:
  6119  00391E  EFAC  F01C         	goto	l1402
  6120  003922                     u4650:
  6121  003922  C003  F007         	movff	___xxtofl@val,??___xxtofl
  6122  003926  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  6123  00392A  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  6124  00392E  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  6125  003932  1E07               	comf	??___xxtofl^0,f,c
  6126  003934  1E08               	comf	(??___xxtofl+1)^0,f,c
  6127  003936  1E09               	comf	(??___xxtofl+2)^0,f,c
  6128  003938  1E0A               	comf	(??___xxtofl+3)^0,f,c
  6129  00393A  2A07               	incf	??___xxtofl^0,f,c
  6130  00393C  0E00               	movlw	0
  6131  00393E  2208               	addwfc	(??___xxtofl+1)^0,f,c
  6132  003940  2209               	addwfc	(??___xxtofl+2)^0,f,c
  6133  003942  220A               	addwfc	(??___xxtofl+3)^0,f,c
  6134  003944  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  6135  003948  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6136  00394C  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6137  003950  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  6138  003954  EFB4  F01C         	goto	l4651
  6139  003958                     l1402:
  6140  003958  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  6141  00395C  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6142  003960  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6143  003964  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6144  003968                     l4651:
  6145  003968  5003               	movf	___xxtofl@val^0,w,c
  6146  00396A  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  6147  00396C  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  6148  00396E  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  6149  003970  A4D8               	btfss	status,2,c
  6150  003972  EFBD  F01C         	goto	u4661
  6151  003976  EFBF  F01C         	goto	u4660
  6152  00397A                     u4661:
  6153  00397A  EFC9  F01C         	goto	l4657
  6154  00397E                     u4660:
  6155  00397E  0E00               	movlw	0
  6156  003980  6E03               	movwf	?___xxtofl^0,c
  6157  003982  0E00               	movlw	0
  6158  003984  6E04               	movwf	(?___xxtofl+1)^0,c
  6159  003986  0E00               	movlw	0
  6160  003988  6E05               	movwf	(?___xxtofl+2)^0,c
  6161  00398A  0E00               	movlw	0
  6162  00398C  6E06               	movwf	(?___xxtofl+3)^0,c
  6163  00398E  EF5A  F01D         	goto	l1405
  6164  003992                     l4657:
  6165  003992  0E96               	movlw	150
  6166  003994  6E0C               	movwf	___xxtofl@exp^0,c
  6167  003996  EFD3  F01C         	goto	l4661
  6168  00399A                     l4659:
  6169  00399A  2A0C               	incf	___xxtofl@exp^0,f,c
  6170  00399C  90D8               	bcf	status,0,c
  6171  00399E  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6172  0039A0  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6173  0039A2  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6174  0039A4  320D               	rrcf	___xxtofl@arg^0,f,c
  6175  0039A6                     l4661:
  6176  0039A6  0E00               	movlw	0
  6177  0039A8  140D               	andwf	___xxtofl@arg^0,w,c
  6178  0039AA  6E07               	movwf	??___xxtofl^0,c
  6179  0039AC  0E00               	movlw	0
  6180  0039AE  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6181  0039B0  6E08               	movwf	(??___xxtofl+1)^0,c
  6182  0039B2  0E00               	movlw	0
  6183  0039B4  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6184  0039B6  6E09               	movwf	(??___xxtofl+2)^0,c
  6185  0039B8  0EFE               	movlw	254
  6186  0039BA  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6187  0039BC  6E0A               	movwf	(??___xxtofl+3)^0,c
  6188  0039BE  5007               	movf	??___xxtofl^0,w,c
  6189  0039C0  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6190  0039C2  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6191  0039C4  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6192  0039C6  A4D8               	btfss	status,2,c
  6193  0039C8  EFE8  F01C         	goto	u4671
  6194  0039CC  EFEA  F01C         	goto	u4670
  6195  0039D0                     u4671:
  6196  0039D0  EFCD  F01C         	goto	l4659
  6197  0039D4                     u4670:
  6198  0039D4  EFF8  F01C         	goto	l1409
  6199  0039D8                     l4663:
  6200  0039D8  2A0C               	incf	___xxtofl@exp^0,f,c
  6201  0039DA  0E01               	movlw	1
  6202  0039DC  260D               	addwf	___xxtofl@arg^0,f,c
  6203  0039DE  0E00               	movlw	0
  6204  0039E0  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  6205  0039E2  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  6206  0039E4  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  6207  0039E6  90D8               	bcf	status,0,c
  6208  0039E8  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  6209  0039EA  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  6210  0039EC  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  6211  0039EE  320D               	rrcf	___xxtofl@arg^0,f,c
  6212  0039F0                     l1409:
  6213  0039F0  0E00               	movlw	0
  6214  0039F2  140D               	andwf	___xxtofl@arg^0,w,c
  6215  0039F4  6E07               	movwf	??___xxtofl^0,c
  6216  0039F6  0E00               	movlw	0
  6217  0039F8  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  6218  0039FA  6E08               	movwf	(??___xxtofl+1)^0,c
  6219  0039FC  0E00               	movlw	0
  6220  0039FE  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  6221  003A00  6E09               	movwf	(??___xxtofl+2)^0,c
  6222  003A02  0EFF               	movlw	255
  6223  003A04  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  6224  003A06  6E0A               	movwf	(??___xxtofl+3)^0,c
  6225  003A08  5007               	movf	??___xxtofl^0,w,c
  6226  003A0A  1008               	iorwf	(??___xxtofl+1)^0,w,c
  6227  003A0C  1009               	iorwf	(??___xxtofl+2)^0,w,c
  6228  003A0E  100A               	iorwf	(??___xxtofl+3)^0,w,c
  6229  003A10  A4D8               	btfss	status,2,c
  6230  003A12  EF0D  F01D         	goto	u4681
  6231  003A16  EF0F  F01D         	goto	u4680
  6232  003A1A                     u4681:
  6233  003A1A  EFEC  F01C         	goto	l4663
  6234  003A1E                     u4680:
  6235  003A1E  EF17  F01D         	goto	l4671
  6236  003A22                     l4669:
  6237  003A22  060C               	decf	___xxtofl@exp^0,f,c
  6238  003A24  90D8               	bcf	status,0,c
  6239  003A26  360D               	rlcf	___xxtofl@arg^0,f,c
  6240  003A28  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  6241  003A2A  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  6242  003A2C  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  6243  003A2E                     l4671:
  6244  003A2E  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  6245  003A30  EF1C  F01D         	goto	u4691
  6246  003A34  EF1E  F01D         	goto	u4690
  6247  003A38                     u4691:
  6248  003A38  EF26  F01D         	goto	l1416
  6249  003A3C                     u4690:
  6250  003A3C  0E02               	movlw	2
  6251  003A3E  600C               	cpfslt	___xxtofl@exp^0,c
  6252  003A40  EF24  F01D         	goto	u4701
  6253  003A44  EF26  F01D         	goto	u4700
  6254  003A48                     u4701:
  6255  003A48  EF11  F01D         	goto	l4669
  6256  003A4C                     u4700:
  6257  003A4C                     l1416:
  6258  003A4C  B00C               	btfsc	___xxtofl@exp^0,0,c
  6259  003A4E  EF2B  F01D         	goto	u4711
  6260  003A52  EF2D  F01D         	goto	u4710
  6261  003A56                     u4711:
  6262  003A56  EF2E  F01D         	goto	l4677
  6263  003A5A                     u4710:
  6264  003A5A  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  6265  003A5C                     l4677:
  6266  003A5C  90D8               	bcf	status,0,c
  6267  003A5E  320C               	rrcf	___xxtofl@exp^0,f,c
  6268  003A60  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  6269  003A64  6A08               	clrf	(??___xxtofl+1)^0,c
  6270  003A66  6A09               	clrf	(??___xxtofl+2)^0,c
  6271  003A68  6A0A               	clrf	(??___xxtofl+3)^0,c
  6272  003A6A  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  6273  003A6E  6A09               	clrf	(??___xxtofl+2)^0,c
  6274  003A70  6A08               	clrf	(??___xxtofl+1)^0,c
  6275  003A72  6A07               	clrf	??___xxtofl^0,c
  6276  003A74  5007               	movf	??___xxtofl^0,w,c
  6277  003A76  120D               	iorwf	___xxtofl@arg^0,f,c
  6278  003A78  5008               	movf	(??___xxtofl+1)^0,w,c
  6279  003A7A  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  6280  003A7C  5009               	movf	(??___xxtofl+2)^0,w,c
  6281  003A7E  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  6282  003A80  500A               	movf	(??___xxtofl+3)^0,w,c
  6283  003A82  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  6284  003A84  500B               	movf	___xxtofl@sign^0,w,c
  6285  003A86  B4D8               	btfsc	status,2,c
  6286  003A88  EF48  F01D         	goto	u4721
  6287  003A8C  EF4A  F01D         	goto	u4720
  6288  003A90                     u4721:
  6289  003A90  EF52  F01D         	goto	l4687
  6290  003A94                     u4720:
  6291  003A94  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  6292  003A96  EF51  F01D         	goto	u4730
  6293  003A9A  EF4F  F01D         	goto	u4731
  6294  003A9E                     u4731:
  6295  003A9E  EF52  F01D         	goto	l4687
  6296  003AA2                     u4730:
  6297  003AA2  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  6298  003AA4                     l4687:
  6299  003AA4  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  6300  003AA8  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  6301  003AAC  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  6302  003AB0  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  6303  003AB4                     l1405:
  6304  003AB4  0012               	return		;funcret
  6305  003AB6                     __end_of___xxtofl:
  6306                           	callstack 0
  6307                           
  6308 ;; *************** function ___fldiv *****************
  6309 ;; Defined at:
  6310 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  b               4   16[COMRAM] unsigned char 
  6313 ;;  a               4   20[COMRAM] unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  grs             4   35[COMRAM] unsigned long 
  6316 ;;  rem             4   28[COMRAM] unsigned long 
  6317 ;;  new_exp         2   33[COMRAM] short 
  6318 ;;  aexp            1   40[COMRAM] unsigned char 
  6319 ;;  bexp            1   39[COMRAM] unsigned char 
  6320 ;;  sign            1   32[COMRAM] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  4   16[COMRAM] unsigned char 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6333 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6334 ;;Total ram usage:       25 bytes
  6335 ;; Hardware stack levels used: 1
  6336 ;; Hardware stack levels required when called: 2
  6337 ;; This function calls:
  6338 ;;		Nothing
  6339 ;; This function is called by:
  6340 ;;		_detect_color
  6341 ;;		_distance_measure
  6342 ;;		_check_color_reading
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text20
  6347  0026B0                     __ptext20:
  6348                           	callstack 0
  6349  0026B0                     ___fldiv:
  6350                           	callstack 26
  6351  0026B0  5014               	movf	(___fldiv@b+3)^0,w,c
  6352  0026B2  0B80               	andlw	128
  6353  0026B4  6E21               	movwf	___fldiv@sign^0,c
  6354  0026B6  5014               	movf	(___fldiv@b+3)^0,w,c
  6355  0026B8  2414               	addwf	(___fldiv@b+3)^0,w,c
  6356  0026BA  6E28               	movwf	___fldiv@bexp^0,c
  6357  0026BC  AE13               	btfss	(___fldiv@b+2)^0,7,c
  6358  0026BE  EF63  F013         	goto	u4411
  6359  0026C2  EF65  F013         	goto	u4410
  6360  0026C6                     u4411:
  6361  0026C6  EF66  F013         	goto	l4513
  6362  0026CA                     u4410:
  6363  0026CA  8028               	bsf	___fldiv@bexp^0,0,c
  6364  0026CC                     l4513:
  6365  0026CC  5028               	movf	___fldiv@bexp^0,w,c
  6366  0026CE  B4D8               	btfsc	status,2,c
  6367  0026D0  EF6C  F013         	goto	u4421
  6368  0026D4  EF6E  F013         	goto	u4420
  6369  0026D8                     u4421:
  6370  0026D8  EF83  F013         	goto	l4523
  6371  0026DC                     u4420:
  6372  0026DC  2828               	incf	___fldiv@bexp^0,w,c
  6373  0026DE  A4D8               	btfss	status,2,c
  6374  0026E0  EF74  F013         	goto	u4431
  6375  0026E4  EF76  F013         	goto	u4430
  6376  0026E8                     u4431:
  6377  0026E8  EF7E  F013         	goto	l4519
  6378  0026EC                     u4430:
  6379  0026EC  0E00               	movlw	0
  6380  0026EE  6E11               	movwf	___fldiv@b^0,c
  6381  0026F0  0E00               	movlw	0
  6382  0026F2  6E12               	movwf	(___fldiv@b+1)^0,c
  6383  0026F4  0E00               	movlw	0
  6384  0026F6  6E13               	movwf	(___fldiv@b+2)^0,c
  6385  0026F8  0E00               	movlw	0
  6386  0026FA  6E14               	movwf	(___fldiv@b+3)^0,c
  6387  0026FC                     l4519:
  6388  0026FC  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6389  0026FE  0E00               	movlw	0
  6390  002700  6E14               	movwf	(___fldiv@b+3)^0,c
  6391  002702  EF8B  F013         	goto	l4525
  6392  002706                     l4523:
  6393  002706  0E00               	movlw	0
  6394  002708  6E11               	movwf	___fldiv@b^0,c
  6395  00270A  0E00               	movlw	0
  6396  00270C  6E12               	movwf	(___fldiv@b+1)^0,c
  6397  00270E  0E00               	movlw	0
  6398  002710  6E13               	movwf	(___fldiv@b+2)^0,c
  6399  002712  0E00               	movlw	0
  6400  002714  6E14               	movwf	(___fldiv@b+3)^0,c
  6401  002716                     l4525:
  6402  002716  5018               	movf	(___fldiv@a+3)^0,w,c
  6403  002718  0B80               	andlw	128
  6404  00271A  1A21               	xorwf	___fldiv@sign^0,f,c
  6405  00271C  5018               	movf	(___fldiv@a+3)^0,w,c
  6406  00271E  2418               	addwf	(___fldiv@a+3)^0,w,c
  6407  002720  6E29               	movwf	___fldiv@aexp^0,c
  6408  002722  AE17               	btfss	(___fldiv@a+2)^0,7,c
  6409  002724  EF96  F013         	goto	u4441
  6410  002728  EF98  F013         	goto	u4440
  6411  00272C                     u4441:
  6412  00272C  EF99  F013         	goto	l4533
  6413  002730                     u4440:
  6414  002730  8029               	bsf	___fldiv@aexp^0,0,c
  6415  002732                     l4533:
  6416  002732  5029               	movf	___fldiv@aexp^0,w,c
  6417  002734  B4D8               	btfsc	status,2,c
  6418  002736  EF9F  F013         	goto	u4451
  6419  00273A  EFA1  F013         	goto	u4450
  6420  00273E                     u4451:
  6421  00273E  EFB6  F013         	goto	l4543
  6422  002742                     u4450:
  6423  002742  2829               	incf	___fldiv@aexp^0,w,c
  6424  002744  A4D8               	btfss	status,2,c
  6425  002746  EFA7  F013         	goto	u4461
  6426  00274A  EFA9  F013         	goto	u4460
  6427  00274E                     u4461:
  6428  00274E  EFB1  F013         	goto	l4539
  6429  002752                     u4460:
  6430  002752  0E00               	movlw	0
  6431  002754  6E15               	movwf	___fldiv@a^0,c
  6432  002756  0E00               	movlw	0
  6433  002758  6E16               	movwf	(___fldiv@a+1)^0,c
  6434  00275A  0E00               	movlw	0
  6435  00275C  6E17               	movwf	(___fldiv@a+2)^0,c
  6436  00275E  0E00               	movlw	0
  6437  002760  6E18               	movwf	(___fldiv@a+3)^0,c
  6438  002762                     l4539:
  6439  002762  8E17               	bsf	(___fldiv@a+2)^0,7,c
  6440  002764  0E00               	movlw	0
  6441  002766  6E18               	movwf	(___fldiv@a+3)^0,c
  6442  002768  EFBE  F013         	goto	l4545
  6443  00276C                     l4543:
  6444  00276C  0E00               	movlw	0
  6445  00276E  6E15               	movwf	___fldiv@a^0,c
  6446  002770  0E00               	movlw	0
  6447  002772  6E16               	movwf	(___fldiv@a+1)^0,c
  6448  002774  0E00               	movlw	0
  6449  002776  6E17               	movwf	(___fldiv@a+2)^0,c
  6450  002778  0E00               	movlw	0
  6451  00277A  6E18               	movwf	(___fldiv@a+3)^0,c
  6452  00277C                     l4545:
  6453  00277C  5015               	movf	___fldiv@a^0,w,c
  6454  00277E  1016               	iorwf	(___fldiv@a+1)^0,w,c
  6455  002780  1017               	iorwf	(___fldiv@a+2)^0,w,c
  6456  002782  1018               	iorwf	(___fldiv@a+3)^0,w,c
  6457  002784  A4D8               	btfss	status,2,c
  6458  002786  EFC7  F013         	goto	u4471
  6459  00278A  EFC9  F013         	goto	u4470
  6460  00278E                     u4471:
  6461  00278E  EFE1  F013         	goto	l4557
  6462  002792                     u4470:
  6463  002792  0E00               	movlw	0
  6464  002794  6E11               	movwf	___fldiv@b^0,c
  6465  002796  0E00               	movlw	0
  6466  002798  6E12               	movwf	(___fldiv@b+1)^0,c
  6467  00279A  0E00               	movlw	0
  6468  00279C  6E13               	movwf	(___fldiv@b+2)^0,c
  6469  00279E  0E00               	movlw	0
  6470  0027A0  6E14               	movwf	(___fldiv@b+3)^0,c
  6471  0027A2  0E80               	movlw	128
  6472  0027A4  1213               	iorwf	(___fldiv@b+2)^0,f,c
  6473  0027A6  0E7F               	movlw	127
  6474  0027A8  1214               	iorwf	(___fldiv@b+3)^0,f,c
  6475  0027AA                     l4551:
  6476  0027AA  5021               	movf	___fldiv@sign^0,w,c
  6477  0027AC  1214               	iorwf	(___fldiv@b+3)^0,f,c
  6478  0027AE  C011  F011         	movff	___fldiv@b,?___fldiv
  6479  0027B2  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
  6480  0027B6  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
  6481  0027BA  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
  6482  0027BE  EF24  F015         	goto	l1329
  6483  0027C2                     l4557:
  6484  0027C2  5028               	movf	___fldiv@bexp^0,w,c
  6485  0027C4  A4D8               	btfss	status,2,c
  6486  0027C6  EFE7  F013         	goto	u4481
  6487  0027CA  EFE9  F013         	goto	u4480
  6488  0027CE                     u4481:
  6489  0027CE  EFF3  F013         	goto	l4565
  6490  0027D2                     u4480:
  6491  0027D2  0E00               	movlw	0
  6492  0027D4  6E11               	movwf	?___fldiv^0,c
  6493  0027D6  0E00               	movlw	0
  6494  0027D8  6E12               	movwf	(?___fldiv+1)^0,c
  6495  0027DA  0E00               	movlw	0
  6496  0027DC  6E13               	movwf	(?___fldiv+2)^0,c
  6497  0027DE  0E00               	movlw	0
  6498  0027E0  6E14               	movwf	(?___fldiv+3)^0,c
  6499  0027E2  EF24  F015         	goto	l1329
  6500  0027E6                     l4565:
  6501  0027E6  5029               	movf	___fldiv@aexp^0,w,c
  6502  0027E8  C028  F019         	movff	___fldiv@bexp,??___fldiv
  6503  0027EC  6A1A               	clrf	(??___fldiv+1)^0,c
  6504  0027EE  5E19               	subwf	??___fldiv^0,f,c
  6505  0027F0  0E00               	movlw	0
  6506  0027F2  5A1A               	subwfb	(??___fldiv+1)^0,f,c
  6507  0027F4  0E7F               	movlw	127
  6508  0027F6  2419               	addwf	??___fldiv^0,w,c
  6509  0027F8  6E22               	movwf	___fldiv@new_exp^0,c
  6510  0027FA  0E00               	movlw	0
  6511  0027FC  201A               	addwfc	(??___fldiv+1)^0,w,c
  6512  0027FE  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6513  002800  C011  F01D         	movff	___fldiv@b,___fldiv@rem
  6514  002804  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
  6515  002808  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
  6516  00280C  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
  6517  002810  0E00               	movlw	0
  6518  002812  6E11               	movwf	___fldiv@b^0,c
  6519  002814  0E00               	movlw	0
  6520  002816  6E12               	movwf	(___fldiv@b+1)^0,c
  6521  002818  0E00               	movlw	0
  6522  00281A  6E13               	movwf	(___fldiv@b+2)^0,c
  6523  00281C  0E00               	movlw	0
  6524  00281E  6E14               	movwf	(___fldiv@b+3)^0,c
  6525  002820  0E00               	movlw	0
  6526  002822  6E24               	movwf	___fldiv@grs^0,c
  6527  002824  0E00               	movlw	0
  6528  002826  6E25               	movwf	(___fldiv@grs+1)^0,c
  6529  002828  0E00               	movlw	0
  6530  00282A  6E26               	movwf	(___fldiv@grs+2)^0,c
  6531  00282C  0E00               	movlw	0
  6532  00282E  6E27               	movwf	(___fldiv@grs+3)^0,c
  6533  002830  0E00               	movlw	0
  6534  002832  6E29               	movwf	___fldiv@aexp^0,c
  6535  002834  EF54  F014         	goto	l1331
  6536  002838                     l4575:
  6537  002838  5029               	movf	___fldiv@aexp^0,w,c
  6538  00283A  B4D8               	btfsc	status,2,c
  6539  00283C  EF22  F014         	goto	u4491
  6540  002840  EF24  F014         	goto	u4490
  6541  002844                     u4491:
  6542  002844  EF3B  F014         	goto	l4583
  6543  002848                     u4490:
  6544  002848  90D8               	bcf	status,0,c
  6545  00284A  361D               	rlcf	___fldiv@rem^0,f,c
  6546  00284C  361E               	rlcf	(___fldiv@rem+1)^0,f,c
  6547  00284E  361F               	rlcf	(___fldiv@rem+2)^0,f,c
  6548  002850  3620               	rlcf	(___fldiv@rem+3)^0,f,c
  6549  002852  90D8               	bcf	status,0,c
  6550  002854  3611               	rlcf	___fldiv@b^0,f,c
  6551  002856  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6552  002858  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6553  00285A  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6554  00285C  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6555  00285E  EF33  F014         	goto	u4501
  6556  002862  EF35  F014         	goto	u4500
  6557  002866                     u4501:
  6558  002866  EF36  F014         	goto	l1334
  6559  00286A                     u4500:
  6560  00286A  8011               	bsf	___fldiv@b^0,0,c
  6561  00286C                     l1334:
  6562  00286C  90D8               	bcf	status,0,c
  6563  00286E  3624               	rlcf	___fldiv@grs^0,f,c
  6564  002870  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6565  002872  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6566  002874  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6567  002876                     l4583:
  6568  002876  5015               	movf	___fldiv@a^0,w,c
  6569  002878  5C1D               	subwf	___fldiv@rem^0,w,c
  6570  00287A  5016               	movf	(___fldiv@a+1)^0,w,c
  6571  00287C  581E               	subwfb	(___fldiv@rem+1)^0,w,c
  6572  00287E  5017               	movf	(___fldiv@a+2)^0,w,c
  6573  002880  581F               	subwfb	(___fldiv@rem+2)^0,w,c
  6574  002882  5018               	movf	(___fldiv@a+3)^0,w,c
  6575  002884  5820               	subwfb	(___fldiv@rem+3)^0,w,c
  6576  002886  A0D8               	btfss	status,0,c
  6577  002888  EF48  F014         	goto	u4511
  6578  00288C  EF4A  F014         	goto	u4510
  6579  002890                     u4511:
  6580  002890  EF53  F014         	goto	l4589
  6581  002894                     u4510:
  6582  002894  8C27               	bsf	(___fldiv@grs+3)^0,6,c
  6583  002896  5015               	movf	___fldiv@a^0,w,c
  6584  002898  5E1D               	subwf	___fldiv@rem^0,f,c
  6585  00289A  5016               	movf	(___fldiv@a+1)^0,w,c
  6586  00289C  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
  6587  00289E  5017               	movf	(___fldiv@a+2)^0,w,c
  6588  0028A0  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
  6589  0028A2  5018               	movf	(___fldiv@a+3)^0,w,c
  6590  0028A4  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
  6591  0028A6                     l4589:
  6592  0028A6  2A29               	incf	___fldiv@aexp^0,f,c
  6593  0028A8                     l1331:
  6594  0028A8  0E19               	movlw	25
  6595  0028AA  6429               	cpfsgt	___fldiv@aexp^0,c
  6596  0028AC  EF5A  F014         	goto	u4521
  6597  0028B0  EF5C  F014         	goto	u4520
  6598  0028B4                     u4521:
  6599  0028B4  EF1C  F014         	goto	l4575
  6600  0028B8                     u4520:
  6601  0028B8  501D               	movf	___fldiv@rem^0,w,c
  6602  0028BA  101E               	iorwf	(___fldiv@rem+1)^0,w,c
  6603  0028BC  101F               	iorwf	(___fldiv@rem+2)^0,w,c
  6604  0028BE  1020               	iorwf	(___fldiv@rem+3)^0,w,c
  6605  0028C0  B4D8               	btfsc	status,2,c
  6606  0028C2  EF65  F014         	goto	u4531
  6607  0028C6  EF67  F014         	goto	u4530
  6608  0028CA                     u4531:
  6609  0028CA  EF7F  F014         	goto	l4601
  6610  0028CE                     u4530:
  6611  0028CE  8024               	bsf	___fldiv@grs^0,0,c
  6612  0028D0  EF7F  F014         	goto	l4601
  6613  0028D4                     l4595:
  6614  0028D4  90D8               	bcf	status,0,c
  6615  0028D6  3611               	rlcf	___fldiv@b^0,f,c
  6616  0028D8  3612               	rlcf	(___fldiv@b+1)^0,f,c
  6617  0028DA  3613               	rlcf	(___fldiv@b+2)^0,f,c
  6618  0028DC  3614               	rlcf	(___fldiv@b+3)^0,f,c
  6619  0028DE  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6620  0028E0  EF74  F014         	goto	u4541
  6621  0028E4  EF76  F014         	goto	u4540
  6622  0028E8                     u4541:
  6623  0028E8  EF77  F014         	goto	l1340
  6624  0028EC                     u4540:
  6625  0028EC  8011               	bsf	___fldiv@b^0,0,c
  6626  0028EE                     l1340:
  6627  0028EE  90D8               	bcf	status,0,c
  6628  0028F0  3624               	rlcf	___fldiv@grs^0,f,c
  6629  0028F2  3625               	rlcf	(___fldiv@grs+1)^0,f,c
  6630  0028F4  3626               	rlcf	(___fldiv@grs+2)^0,f,c
  6631  0028F6  3627               	rlcf	(___fldiv@grs+3)^0,f,c
  6632  0028F8  0622               	decf	___fldiv@new_exp^0,f,c
  6633  0028FA  A0D8               	btfss	status,0,c
  6634  0028FC  0623               	decf	(___fldiv@new_exp+1)^0,f,c
  6635  0028FE                     l4601:
  6636  0028FE  AE13               	btfss	(___fldiv@b+2)^0,7,c
  6637  002900  EF84  F014         	goto	u4551
  6638  002904  EF86  F014         	goto	u4550
  6639  002908                     u4551:
  6640  002908  EF6A  F014         	goto	l4595
  6641  00290C                     u4550:
  6642  00290C  0E00               	movlw	0
  6643  00290E  6E29               	movwf	___fldiv@aexp^0,c
  6644  002910  AE27               	btfss	(___fldiv@grs+3)^0,7,c
  6645  002912  EF8D  F014         	goto	u4561
  6646  002916  EF8F  F014         	goto	u4560
  6647  00291A                     u4561:
  6648  00291A  EFB3  F014         	goto	l1342
  6649  00291E                     u4560:
  6650  00291E  0EFF               	movlw	255
  6651  002920  1424               	andwf	___fldiv@grs^0,w,c
  6652  002922  6E19               	movwf	??___fldiv^0,c
  6653  002924  0EFF               	movlw	255
  6654  002926  1425               	andwf	(___fldiv@grs+1)^0,w,c
  6655  002928  6E1A               	movwf	(??___fldiv+1)^0,c
  6656  00292A  0EFF               	movlw	255
  6657  00292C  1426               	andwf	(___fldiv@grs+2)^0,w,c
  6658  00292E  6E1B               	movwf	(??___fldiv+2)^0,c
  6659  002930  0E7F               	movlw	127
  6660  002932  1427               	andwf	(___fldiv@grs+3)^0,w,c
  6661  002934  6E1C               	movwf	(??___fldiv+3)^0,c
  6662  002936  5019               	movf	??___fldiv^0,w,c
  6663  002938  101A               	iorwf	(??___fldiv+1)^0,w,c
  6664  00293A  101B               	iorwf	(??___fldiv+2)^0,w,c
  6665  00293C  101C               	iorwf	(??___fldiv+3)^0,w,c
  6666  00293E  B4D8               	btfsc	status,2,c
  6667  002940  EFA4  F014         	goto	u4571
  6668  002944  EFA6  F014         	goto	u4570
  6669  002948                     u4571:
  6670  002948  EFAA  F014         	goto	l1343
  6671  00294C                     u4570:
  6672  00294C                     l4609:
  6673  00294C  0E01               	movlw	1
  6674  00294E  6E29               	movwf	___fldiv@aexp^0,c
  6675  002950  EFB3  F014         	goto	l1342
  6676  002954                     l1343:
  6677  002954  A011               	btfss	___fldiv@b^0,0,c
  6678  002956  EFAF  F014         	goto	u4581
  6679  00295A  EFB1  F014         	goto	u4580
  6680  00295E                     u4581:
  6681  00295E  EFB3  F014         	goto	l1342
  6682  002962                     u4580:
  6683  002962  EFA6  F014         	goto	l4609
  6684  002966                     l1342:
  6685  002966  5029               	movf	___fldiv@aexp^0,w,c
  6686  002968  B4D8               	btfsc	status,2,c
  6687  00296A  EFB9  F014         	goto	u4591
  6688  00296E  EFBB  F014         	goto	u4590
  6689  002972                     u4591:
  6690  002972  EFDF  F014         	goto	l4621
  6691  002976                     u4590:
  6692  002976  0E01               	movlw	1
  6693  002978  2611               	addwf	___fldiv@b^0,f,c
  6694  00297A  0E00               	movlw	0
  6695  00297C  2212               	addwfc	(___fldiv@b+1)^0,f,c
  6696  00297E  2213               	addwfc	(___fldiv@b+2)^0,f,c
  6697  002980  2214               	addwfc	(___fldiv@b+3)^0,f,c
  6698  002982  A014               	btfss	(___fldiv@b+3)^0,0,c
  6699  002984  EFC6  F014         	goto	u4601
  6700  002988  EFC8  F014         	goto	u4600
  6701  00298C                     u4601:
  6702  00298C  EFDF  F014         	goto	l4621
  6703  002990                     u4600:
  6704  002990  C011  F019         	movff	___fldiv@b,??___fldiv
  6705  002994  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
  6706  002998  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
  6707  00299C  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
  6708  0029A0  341C               	rlcf	(??___fldiv+3)^0,w,c
  6709  0029A2  321C               	rrcf	(??___fldiv+3)^0,f,c
  6710  0029A4  321B               	rrcf	(??___fldiv+2)^0,f,c
  6711  0029A6  321A               	rrcf	(??___fldiv+1)^0,f,c
  6712  0029A8  3219               	rrcf	??___fldiv^0,f,c
  6713  0029AA  C019  F011         	movff	??___fldiv,___fldiv@b
  6714  0029AE  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
  6715  0029B2  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
  6716  0029B6  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
  6717  0029BA  4A22               	infsnz	___fldiv@new_exp^0,f,c
  6718  0029BC  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
  6719  0029BE                     l4621:
  6720  0029BE  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6721  0029C0  EFEA  F014         	goto	u4611
  6722  0029C4  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6723  0029C6  E108               	bnz	u4610
  6724  0029C8  2822               	incf	___fldiv@new_exp^0,w,c
  6725  0029CA  A0D8               	btfss	status,0,c
  6726  0029CC  EFEA  F014         	goto	u4611
  6727  0029D0  EFEC  F014         	goto	u4610
  6728  0029D4                     u4611:
  6729  0029D4  EFF7  F014         	goto	l4625
  6730  0029D8                     u4610:
  6731  0029D8  0E00               	movlw	0
  6732  0029DA  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6733  0029DC  6822               	setf	___fldiv@new_exp^0,c
  6734  0029DE  0E00               	movlw	0
  6735  0029E0  6E11               	movwf	___fldiv@b^0,c
  6736  0029E2  0E00               	movlw	0
  6737  0029E4  6E12               	movwf	(___fldiv@b+1)^0,c
  6738  0029E6  0E00               	movlw	0
  6739  0029E8  6E13               	movwf	(___fldiv@b+2)^0,c
  6740  0029EA  0E00               	movlw	0
  6741  0029EC  6E14               	movwf	(___fldiv@b+3)^0,c
  6742  0029EE                     l4625:
  6743  0029EE  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6744  0029F0  EF04  F015         	goto	u4620
  6745  0029F4  5023               	movf	(___fldiv@new_exp+1)^0,w,c
  6746  0029F6  E106               	bnz	u4621
  6747  0029F8  0422               	decf	___fldiv@new_exp^0,w,c
  6748  0029FA  B0D8               	btfsc	status,0,c
  6749  0029FC  EF02  F015         	goto	u4621
  6750  002A00  EF04  F015         	goto	u4620
  6751  002A04                     u4621:
  6752  002A04  EF12  F015         	goto	l4629
  6753  002A08                     u4620:
  6754  002A08  0E00               	movlw	0
  6755  002A0A  6E23               	movwf	(___fldiv@new_exp+1)^0,c
  6756  002A0C  0E00               	movlw	0
  6757  002A0E  6E22               	movwf	___fldiv@new_exp^0,c
  6758  002A10  0E00               	movlw	0
  6759  002A12  6E11               	movwf	___fldiv@b^0,c
  6760  002A14  0E00               	movlw	0
  6761  002A16  6E12               	movwf	(___fldiv@b+1)^0,c
  6762  002A18  0E00               	movlw	0
  6763  002A1A  6E13               	movwf	(___fldiv@b+2)^0,c
  6764  002A1C  0E00               	movlw	0
  6765  002A1E  6E14               	movwf	(___fldiv@b+3)^0,c
  6766  002A20  0E00               	movlw	0
  6767  002A22  6E21               	movwf	___fldiv@sign^0,c
  6768  002A24                     l4629:
  6769  002A24  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
  6770  002A28  A028               	btfss	___fldiv@bexp^0,0,c
  6771  002A2A  EF19  F015         	goto	u4631
  6772  002A2E  EF1B  F015         	goto	u4630
  6773  002A32                     u4631:
  6774  002A32  EF1E  F015         	goto	l4635
  6775  002A36                     u4630:
  6776  002A36  8E13               	bsf	(___fldiv@b+2)^0,7,c
  6777  002A38  EF1F  F015         	goto	l4637
  6778  002A3C                     l4635:
  6779  002A3C  9E13               	bcf	(___fldiv@b+2)^0,7,c
  6780  002A3E                     l4637:
  6781  002A3E  90D8               	bcf	status,0,c
  6782  002A40  3028               	rrcf	___fldiv@bexp^0,w,c
  6783  002A42  6E14               	movwf	(___fldiv@b+3)^0,c
  6784  002A44  EFD5  F013         	goto	l4551
  6785  002A48                     l1329:
  6786  002A48  0012               	return		;funcret
  6787  002A4A                     __end_of___fldiv:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function _color_data_collection *****************
  6791 ;; Defined at:
  6792 ;;		line 198 in file "color.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  m               2  127[BANK0 ] PTR struct color_rgb
  6795 ;;		 -> main@rgb(8), 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  x               2  137[BANK0 ] int 
  6798 ;;  k               2  135[BANK0 ] int 
  6799 ;;  j               2  133[BANK0 ] int 
  6800 ;;  i               2  131[BANK0 ] int 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;Total ram usage:       12 bytes
  6815 ;; Hardware stack levels used: 1
  6816 ;; Hardware stack levels required when called: 11
  6817 ;; This function calls:
  6818 ;;		_LED_B
  6819 ;;		_LED_C
  6820 ;;		_LED_G
  6821 ;;		_LED_R
  6822 ;;		_color_display
  6823 ;;		_color_predict
  6824 ;;		_read_color
  6825 ;; This function is called by:
  6826 ;;		_main
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text21
  6831  003744                     __ptext21:
  6832                           	callstack 0
  6833  003744                     _color_data_collection:
  6834                           	callstack 19
  6835  003744                     
  6836                           ;color.c: 200:     int i = 0; int j = 0; int k = 0; int x = 0;
  6837  003744  0E00               	movlw	0
  6838  003746  0100               	movlb	0	; () banked
  6839  003748  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  6840  00374A  0E00               	movlw	0
  6841  00374C  6FE3               	movwf	color_data_collection@i& (0+255),b
  6842  00374E  0E00               	movlw	0
  6843  003750  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  6844  003752  0E00               	movlw	0
  6845  003754  6FE7               	movwf	color_data_collection@k& (0+255),b
  6846  003756  0E00               	movlw	0
  6847  003758  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  6848  00375A  0E00               	movlw	0
  6849  00375C  6FE9               	movwf	color_data_collection@x& (0+255),b
  6850                           
  6851                           ;color.c: 201:     for (i = 0; i <5; ++i){
  6852  00375E  0E00               	movlw	0
  6853  003760  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  6854  003762  0E00               	movlw	0
  6855  003764  6FE3               	movwf	color_data_collection@i& (0+255),b
  6856  003766                     l5995:
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;color.c: 202:         LED_C();
  6860  003766  ECED  F02B         	call	_LED_C	;wreg free
  6861  00376A                     
  6862                           ;color.c: 203:         read_color(m);
  6863  00376A  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6864  00376E  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6865  003772  EC63  F028         	call	_read_color	;wreg free
  6866  003776                     
  6867                           ;color.c: 204:         color_display(m);
  6868  003776  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6869  00377A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6870  00377E  ECFA  F027         	call	_color_display	;wreg free
  6871  003782                     
  6872                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6873  003782  0E09               	movlw	9
  6874  003784  0100               	movlb	0	; () banked
  6875  003786  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  6876  003788  0E1E               	movlw	30
  6877  00378A  6FE1               	movwf	??_color_data_collection& (0+255),b
  6878  00378C  0EE4               	movlw	228
  6879  00378E                     u6807:
  6880  00378E  2EE8               	decfsz	wreg,f,c
  6881  003790  D7FE               	bra	u6807
  6882  003792  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  6883  003794  D7FC               	bra	u6807
  6884  003796  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  6885  003798  D7FA               	bra	u6807
  6886  00379A  F000               	nop	
  6887  00379C                     
  6888                           ;color.c: 206:     }
  6889  00379C  0100               	movlb	0	; () banked
  6890  00379E  4BE3               	infsnz	color_data_collection@i& (0+255),f,b
  6891  0037A0  2BE4               	incf	(color_data_collection@i+1)& (0+255),f,b
  6892  0037A2                     
  6893                           ; BSR set to: 0
  6894  0037A2  BFE4               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  6895  0037A4  EFDD  F01B         	goto	u6521
  6896  0037A8  51E4               	movf	(color_data_collection@i+1)& (0+255),w,b
  6897  0037AA  E109               	bnz	u6520
  6898  0037AC  0E05               	movlw	5
  6899  0037AE  5DE3               	subwf	color_data_collection@i& (0+255),w,b
  6900  0037B0  A0D8               	btfss	status,0,c
  6901  0037B2  EFDD  F01B         	goto	u6521
  6902  0037B6  EFDF  F01B         	goto	u6520
  6903  0037BA                     u6521:
  6904  0037BA  EFB3  F01B         	goto	l5995
  6905  0037BE                     u6520:
  6906  0037BE                     
  6907                           ; BSR set to: 0
  6908                           ;color.c: 207:     color_predict(00000);
  6909  0037BE  0E00               	movlw	0
  6910  0037C0  EC5A  F02B         	call	_color_predict
  6911  0037C4                     
  6912                           ;color.c: 208:     for (j = 0; j < 5; ++j){
  6913  0037C4  0E00               	movlw	0
  6914  0037C6  0100               	movlb	0	; () banked
  6915  0037C8  6FE6               	movwf	(color_data_collection@j+1)& (0+255),b
  6916  0037CA  0E00               	movlw	0
  6917  0037CC  6FE5               	movwf	color_data_collection@j& (0+255),b
  6918  0037CE                     l6015:
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;color.c: 209:         LED_R();
  6922  0037CE  ECCD  F02B         	call	_LED_R	;wreg free
  6923  0037D2                     
  6924                           ;color.c: 210:         read_color(m);
  6925  0037D2  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6926  0037D6  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6927  0037DA  EC63  F028         	call	_read_color	;wreg free
  6928  0037DE                     
  6929                           ;color.c: 211:         color_display(m);
  6930  0037DE  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6931  0037E2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6932  0037E6  ECFA  F027         	call	_color_display	;wreg free
  6933  0037EA                     
  6934                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6935  0037EA  0E09               	movlw	9
  6936  0037EC  0100               	movlb	0	; () banked
  6937  0037EE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  6938  0037F0  0E1E               	movlw	30
  6939  0037F2  6FE1               	movwf	??_color_data_collection& (0+255),b
  6940  0037F4  0EE4               	movlw	228
  6941  0037F6                     u6817:
  6942  0037F6  2EE8               	decfsz	wreg,f,c
  6943  0037F8  D7FE               	bra	u6817
  6944  0037FA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  6945  0037FC  D7FC               	bra	u6817
  6946  0037FE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  6947  003800  D7FA               	bra	u6817
  6948  003802  F000               	nop	
  6949  003804                     
  6950                           ;color.c: 213:     }
  6951  003804  0100               	movlb	0	; () banked
  6952  003806  4BE5               	infsnz	color_data_collection@j& (0+255),f,b
  6953  003808  2BE6               	incf	(color_data_collection@j+1)& (0+255),f,b
  6954  00380A                     
  6955                           ; BSR set to: 0
  6956  00380A  BFE6               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  6957  00380C  EF11  F01C         	goto	u6531
  6958  003810  51E6               	movf	(color_data_collection@j+1)& (0+255),w,b
  6959  003812  E109               	bnz	u6530
  6960  003814  0E05               	movlw	5
  6961  003816  5DE5               	subwf	color_data_collection@j& (0+255),w,b
  6962  003818  A0D8               	btfss	status,0,c
  6963  00381A  EF11  F01C         	goto	u6531
  6964  00381E  EF13  F01C         	goto	u6530
  6965  003822                     u6531:
  6966  003822  EFE7  F01B         	goto	l6015
  6967  003826                     u6530:
  6968  003826                     
  6969                           ; BSR set to: 0
  6970                           ;color.c: 214:     color_predict(00000);
  6971  003826  0E00               	movlw	0
  6972  003828  EC5A  F02B         	call	_color_predict
  6973  00382C                     
  6974                           ;color.c: 215:     for (k = 0; k < 5; ++k){
  6975  00382C  0E00               	movlw	0
  6976  00382E  0100               	movlb	0	; () banked
  6977  003830  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  6978  003832  0E00               	movlw	0
  6979  003834  6FE7               	movwf	color_data_collection@k& (0+255),b
  6980  003836                     l6035:
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;color.c: 216:         LED_G();
  6984  003836  ECDD  F02B         	call	_LED_G	;wreg free
  6985  00383A                     
  6986                           ;color.c: 217:         read_color(m);
  6987  00383A  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  6988  00383E  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  6989  003842  EC63  F028         	call	_read_color	;wreg free
  6990  003846                     
  6991                           ;color.c: 218:         color_display(m);
  6992  003846  C0DF  F079         	movff	color_data_collection@m,color_display@m
  6993  00384A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  6994  00384E  ECFA  F027         	call	_color_display	;wreg free
  6995  003852                     
  6996                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6997  003852  0E09               	movlw	9
  6998  003854  0100               	movlb	0	; () banked
  6999  003856  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  7000  003858  0E1E               	movlw	30
  7001  00385A  6FE1               	movwf	??_color_data_collection& (0+255),b
  7002  00385C  0EE4               	movlw	228
  7003  00385E                     u6827:
  7004  00385E  2EE8               	decfsz	wreg,f,c
  7005  003860  D7FE               	bra	u6827
  7006  003862  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  7007  003864  D7FC               	bra	u6827
  7008  003866  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  7009  003868  D7FA               	bra	u6827
  7010  00386A  F000               	nop	
  7011  00386C                     
  7012                           ;color.c: 220:     }
  7013  00386C  0100               	movlb	0	; () banked
  7014  00386E  4BE7               	infsnz	color_data_collection@k& (0+255),f,b
  7015  003870  2BE8               	incf	(color_data_collection@k+1)& (0+255),f,b
  7016  003872                     
  7017                           ; BSR set to: 0
  7018  003872  BFE8               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  7019  003874  EF45  F01C         	goto	u6541
  7020  003878  51E8               	movf	(color_data_collection@k+1)& (0+255),w,b
  7021  00387A  E109               	bnz	u6540
  7022  00387C  0E05               	movlw	5
  7023  00387E  5DE7               	subwf	color_data_collection@k& (0+255),w,b
  7024  003880  A0D8               	btfss	status,0,c
  7025  003882  EF45  F01C         	goto	u6541
  7026  003886  EF47  F01C         	goto	u6540
  7027  00388A                     u6541:
  7028  00388A  EF1B  F01C         	goto	l6035
  7029  00388E                     u6540:
  7030  00388E                     
  7031                           ; BSR set to: 0
  7032                           ;color.c: 221:     color_predict(00000);
  7033  00388E  0E00               	movlw	0
  7034  003890  EC5A  F02B         	call	_color_predict
  7035  003894                     
  7036                           ;color.c: 222:     for (x = 0; x < 5; ++x){
  7037  003894  0E00               	movlw	0
  7038  003896  0100               	movlb	0	; () banked
  7039  003898  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  7040  00389A  0E00               	movlw	0
  7041  00389C  6FE9               	movwf	color_data_collection@x& (0+255),b
  7042  00389E                     l6055:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;color.c: 223:         LED_B();
  7046  00389E  ECFD  F02B         	call	_LED_B	;wreg free
  7047  0038A2                     
  7048                           ;color.c: 224:         read_color(m);
  7049  0038A2  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  7050  0038A6  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  7051  0038AA  EC63  F028         	call	_read_color	;wreg free
  7052  0038AE                     
  7053                           ;color.c: 225:         color_display(m);
  7054  0038AE  C0DF  F079         	movff	color_data_collection@m,color_display@m
  7055  0038B2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  7056  0038B6  ECFA  F027         	call	_color_display	;wreg free
  7057  0038BA                     
  7058                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  7059  0038BA  0E09               	movlw	9
  7060  0038BC  0100               	movlb	0	; () banked
  7061  0038BE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  7062  0038C0  0E1E               	movlw	30
  7063  0038C2  6FE1               	movwf	??_color_data_collection& (0+255),b
  7064  0038C4  0EE4               	movlw	228
  7065  0038C6                     u6837:
  7066  0038C6  2EE8               	decfsz	wreg,f,c
  7067  0038C8  D7FE               	bra	u6837
  7068  0038CA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  7069  0038CC  D7FC               	bra	u6837
  7070  0038CE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  7071  0038D0  D7FA               	bra	u6837
  7072  0038D2  F000               	nop	
  7073  0038D4                     
  7074                           ;color.c: 227:     }
  7075  0038D4  0100               	movlb	0	; () banked
  7076  0038D6  4BE9               	infsnz	color_data_collection@x& (0+255),f,b
  7077  0038D8  2BEA               	incf	(color_data_collection@x+1)& (0+255),f,b
  7078  0038DA                     
  7079                           ; BSR set to: 0
  7080  0038DA  BFEA               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  7081  0038DC  EF79  F01C         	goto	u6551
  7082  0038E0  51EA               	movf	(color_data_collection@x+1)& (0+255),w,b
  7083  0038E2  E109               	bnz	u6550
  7084  0038E4  0E05               	movlw	5
  7085  0038E6  5DE9               	subwf	color_data_collection@x& (0+255),w,b
  7086  0038E8  A0D8               	btfss	status,0,c
  7087  0038EA  EF79  F01C         	goto	u6551
  7088  0038EE  EF7B  F01C         	goto	u6550
  7089  0038F2                     u6551:
  7090  0038F2  EF4F  F01C         	goto	l6055
  7091  0038F6                     u6550:
  7092  0038F6                     
  7093                           ; BSR set to: 0
  7094                           ;color.c: 228:     color_predict(1);
  7095  0038F6  0E01               	movlw	1
  7096  0038F8  EC5A  F02B         	call	_color_predict
  7097  0038FC                     
  7098                           ;color.c: 229:     LED_C();
  7099  0038FC  ECED  F02B         	call	_LED_C	;wreg free
  7100  003900  0012               	return		;funcret
  7101  003902                     __end_of_color_data_collection:
  7102                           	callstack 0
  7103                           
  7104 ;; *************** function _read_color *****************
  7105 ;; Defined at:
  7106 ;;		line 145 in file "color.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;  m               2   13[COMRAM] PTR struct color_rgb
  7109 ;;		 -> main@rgb(8), 
  7110 ;; Auto vars:     Size  Location     Type
  7111 ;;		None
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  1    wreg      void 
  7114 ;; Registers used:
  7115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7121 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;Total ram usage:        2 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 5
  7128 ;; This function calls:
  7129 ;;		_color_read_Blue
  7130 ;;		_color_read_Clear
  7131 ;;		_color_read_Green
  7132 ;;		_color_read_Red
  7133 ;; This function is called by:
  7134 ;;		_color_data_collection
  7135 ;;		_detect_color
  7136 ;;		_main
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text22
  7141  0050C6                     __ptext22:
  7142                           	callstack 0
  7143  0050C6                     _read_color:
  7144                           	callstack 23
  7145  0050C6                     
  7146                           ;color.c: 145: void read_color (struct color_rgb *m);color.c: 146: {;color.c: 147:     m
      +                          ->R = color_read_Red();
  7147  0050C6  ECE7  F028         	call	_color_read_Red	;wreg free
  7148  0050CA  C00E  FFD9         	movff	read_color@m,fsr2l
  7149  0050CE  C00F  FFDA         	movff	read_color@m+1,fsr2h
  7150  0050D2  C007  FFDE         	movff	?_color_read_Red,postinc2
  7151  0050D6  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  7152                           
  7153                           ;color.c: 148:     m->B = color_read_Blue();
  7154  0050DA  EC5F  F029         	call	_color_read_Blue	;wreg free
  7155  0050DE  EE20 F004          	lfsr	2,4
  7156  0050E2  500E               	movf	read_color@m^0,w,c
  7157  0050E4  26D9               	addwf	fsr2l,f,c
  7158  0050E6  500F               	movf	(read_color@m+1)^0,w,c
  7159  0050E8  22DA               	addwfc	fsr2h,f,c
  7160  0050EA  C007  FFDE         	movff	?_color_read_Blue,postinc2
  7161  0050EE  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  7162                           
  7163                           ;color.c: 149:     m->G = color_read_Green();
  7164  0050F2  EC0F  F029         	call	_color_read_Green	;wreg free
  7165  0050F6  EE20 F002          	lfsr	2,2
  7166  0050FA  500E               	movf	read_color@m^0,w,c
  7167  0050FC  26D9               	addwf	fsr2l,f,c
  7168  0050FE  500F               	movf	(read_color@m+1)^0,w,c
  7169  005100  22DA               	addwfc	fsr2h,f,c
  7170  005102  C007  FFDE         	movff	?_color_read_Green,postinc2
  7171  005106  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  7172                           
  7173                           ;color.c: 150:     m->C = color_read_Clear();
  7174  00510A  EC37  F029         	call	_color_read_Clear	;wreg free
  7175  00510E  EE20 F006          	lfsr	2,6
  7176  005112  500E               	movf	read_color@m^0,w,c
  7177  005114  26D9               	addwf	fsr2l,f,c
  7178  005116  500F               	movf	(read_color@m+1)^0,w,c
  7179  005118  22DA               	addwfc	fsr2h,f,c
  7180  00511A  C007  FFDE         	movff	?_color_read_Clear,postinc2
  7181  00511E  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  7182  005122  0012               	return		;funcret
  7183  005124                     __end_of_read_color:
  7184                           	callstack 0
  7185                           
  7186 ;; *************** function _color_predict *****************
  7187 ;; Defined at:
  7188 ;;		line 248 in file "color.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  color           1    wreg     unsigned char 
  7191 ;; Auto vars:     Size  Location     Type
  7192 ;;  color           1  125[BANK0 ] unsigned char 
  7193 ;;  buf           100   25[BANK0 ] unsigned char [100]
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7206 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;Total ram usage:      101 bytes
  7208 ;; Hardware stack levels used: 1
  7209 ;; Hardware stack levels required when called: 10
  7210 ;; This function calls:
  7211 ;;		_sendStringSerial4
  7212 ;;		_sprintf
  7213 ;; This function is called by:
  7214 ;;		_color_data_collection
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text23
  7219  0056B4                     __ptext23:
  7220                           	callstack 0
  7221  0056B4                     _color_predict:
  7222                           	callstack 19
  7223                           
  7224                           ;incstack = 0
  7225                           ;color_predict@color stored from wreg
  7226  0056B4  0100               	movlb	0	; () banked
  7227  0056B6  6FDD               	movwf	color_predict@color& (0+255),b
  7228  0056B8                     
  7229                           ;color.c: 248: void color_predict(unsigned char color);color.c: 249: {;color.c: 250:    
      +                           char buf[100];;color.c: 251:     sprintf(buf,"\t%d\r\n", color);
  7230  0056B8  0E79               	movlw	low color_predict@buf
  7231  0056BA  0100               	movlb	0	; () banked
  7232  0056BC  6F60               	movwf	sprintf@s& (0+255),b
  7233  0056BE  0E00               	movlw	high color_predict@buf
  7234  0056C0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7235  0056C2  0E0D               	movlw	low (STR_1+8)
  7236  0056C4  6F62               	movwf	sprintf@fmt& (0+255),b
  7237  0056C6  0E0E               	movlw	high (STR_1+8)
  7238  0056C8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7239  0056CA  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  7240  0056CE  6B65               	clrf	(?_sprintf+5)& (0+255),b
  7241  0056D0  ECBE  F028         	call	_sprintf	;wreg free
  7242  0056D4                     
  7243                           ;color.c: 252:     sendStringSerial4(buf);
  7244  0056D4  0E79               	movlw	low color_predict@buf
  7245  0056D6  6E04               	movwf	sendStringSerial4@string^0,c
  7246  0056D8  0E00               	movlw	high color_predict@buf
  7247  0056DA  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  7248  0056DC  EC42  F02B         	call	_sendStringSerial4	;wreg free
  7249  0056E0  0012               	return		;funcret
  7250  0056E2                     __end_of_color_predict:
  7251                           	callstack 0
  7252                           
  7253 ;; *************** function _color_display *****************
  7254 ;; Defined at:
  7255 ;;		line 232 in file "color.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  7258 ;;		 -> main@rgb(8), 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  buf           100   27[BANK0 ] unsigned char [100]
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7273 ;;      Totals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;Total ram usage:      102 bytes
  7275 ;; Hardware stack levels used: 1
  7276 ;; Hardware stack levels required when called: 10
  7277 ;; This function calls:
  7278 ;;		_sendStringSerial4
  7279 ;;		_sprintf
  7280 ;; This function is called by:
  7281 ;;		_color_data_collection
  7282 ;;		_main
  7283 ;; This function uses a non-reentrant model
  7284 ;;
  7285                           
  7286                           	psect	text24
  7287  004FF4                     __ptext24:
  7288                           	callstack 0
  7289  004FF4                     _color_display:
  7290                           	callstack 20
  7291  004FF4                     
  7292                           ;color.c: 232: void color_display(struct color_rgb *m);color.c: 233: {;color.c: 234:    
      +                           char buf[100];;color.c: 235:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  7293  004FF4  0E7B               	movlw	low color_display@buf
  7294  004FF6  0100               	movlb	0	; () banked
  7295  004FF8  6F60               	movwf	sprintf@s& (0+255),b
  7296  004FFA  0E00               	movlw	high color_display@buf
  7297  004FFC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  7298  004FFE  0E05               	movlw	low STR_1
  7299  005000  6F62               	movwf	sprintf@fmt& (0+255),b
  7300  005002  0E0E               	movlw	high STR_1
  7301  005004  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  7302  005006  C079  FFD9         	movff	color_display@m,fsr2l
  7303  00500A  C07A  FFDA         	movff	color_display@m+1,fsr2h
  7304  00500E  CFDE F064          	movff	postinc2,?_sprintf+4
  7305  005012  CFDD F065          	movff	postdec2,?_sprintf+5
  7306  005016  EE20 F002          	lfsr	2,2
  7307  00501A  5179               	movf	color_display@m& (0+255),w,b
  7308  00501C  26D9               	addwf	fsr2l,f,c
  7309  00501E  517A               	movf	(color_display@m+1)& (0+255),w,b
  7310  005020  22DA               	addwfc	fsr2h,f,c
  7311  005022  CFDE F066          	movff	postinc2,?_sprintf+6
  7312  005026  CFDD F067          	movff	postdec2,?_sprintf+7
  7313  00502A  EE20 F004          	lfsr	2,4
  7314  00502E  5179               	movf	color_display@m& (0+255),w,b
  7315  005030  26D9               	addwf	fsr2l,f,c
  7316  005032  517A               	movf	(color_display@m+1)& (0+255),w,b
  7317  005034  22DA               	addwfc	fsr2h,f,c
  7318  005036  CFDE F068          	movff	postinc2,?_sprintf+8
  7319  00503A  CFDD F069          	movff	postdec2,?_sprintf+9
  7320  00503E  EE20 F006          	lfsr	2,6
  7321  005042  5179               	movf	color_display@m& (0+255),w,b
  7322  005044  26D9               	addwf	fsr2l,f,c
  7323  005046  517A               	movf	(color_display@m+1)& (0+255),w,b
  7324  005048  22DA               	addwfc	fsr2h,f,c
  7325  00504A  CFDE F06A          	movff	postinc2,?_sprintf+10
  7326  00504E  CFDD F06B          	movff	postdec2,?_sprintf+11
  7327  005052  ECBE  F028         	call	_sprintf	;wreg free
  7328  005056                     
  7329                           ;color.c: 236:     sendStringSerial4(buf);
  7330  005056  0E7B               	movlw	low color_display@buf
  7331  005058  6E04               	movwf	sendStringSerial4@string^0,c
  7332  00505A  0E00               	movlw	high color_display@buf
  7333  00505C  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  7334  00505E  EC42  F02B         	call	_sendStringSerial4	;wreg free
  7335  005062  0012               	return		;funcret
  7336  005064                     __end_of_color_display:
  7337                           	callstack 0
  7338                           
  7339 ;; *************** function _sprintf *****************
  7340 ;; Defined at:
  7341 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7344 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  7345 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7346 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  f              11   14[BANK0 ] struct _IO_FILE
  7349 ;;  ap              2   12[BANK0 ] PTR void [1]
  7350 ;;		 -> ?_sprintf(2), 
  7351 ;;  ret             2    0        int 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  2    0[BANK0 ] int 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7361 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7362 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;Total ram usage:       25 bytes
  7366 ;; Hardware stack levels used: 1
  7367 ;; Hardware stack levels required when called: 9
  7368 ;; This function calls:
  7369 ;;		_vfprintf
  7370 ;; This function is called by:
  7371 ;;		_color_display
  7372 ;;		_color_predict
  7373 ;;		_check_color_reading
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text25
  7378  00517C                     __ptext25:
  7379                           	callstack 0
  7380  00517C                     _sprintf:
  7381                           	callstack 20
  7382  00517C  0E64               	movlw	low (?_sprintf+4)
  7383  00517E  0100               	movlb	0	; () banked
  7384  005180  6F6C               	movwf	sprintf@ap& (0+255),b
  7385  005182  0E00               	movlw	high (?_sprintf+4)
  7386  005184  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  7387  005186  C060  F06E         	movff	sprintf@s,sprintf@f
  7388  00518A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  7389  00518E                     
  7390                           ; BSR set to: 0
  7391  00518E  0E00               	movlw	0
  7392  005190  6F72               	movwf	(sprintf@f+4)& (0+255),b
  7393  005192  0E00               	movlw	0
  7394  005194  6F71               	movwf	(sprintf@f+3)& (0+255),b
  7395  005196                     
  7396                           ; BSR set to: 0
  7397  005196  0E00               	movlw	0
  7398  005198  6F78               	movwf	(sprintf@f+10)& (0+255),b
  7399  00519A  0E00               	movlw	0
  7400  00519C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  7401  00519E                     
  7402                           ; BSR set to: 0
  7403  00519E  0E6E               	movlw	low sprintf@f
  7404  0051A0  6E52               	movwf	vfprintf@fp^0,c
  7405  0051A2  0E00               	movlw	high sprintf@f
  7406  0051A4  6E53               	movwf	(vfprintf@fp+1)^0,c
  7407  0051A6  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  7408  0051AA  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7409  0051AE  0E6C               	movlw	low sprintf@ap
  7410  0051B0  6E56               	movwf	vfprintf@ap^0,c
  7411  0051B2  0E00               	movlw	high sprintf@ap
  7412  0051B4  6E57               	movwf	(vfprintf@ap+1)^0,c
  7413  0051B6  EC32  F028         	call	_vfprintf	;wreg free
  7414  0051BA  0100               	movlb	0	; () banked
  7415  0051BC  5171               	movf	(sprintf@f+3)& (0+255),w,b
  7416  0051BE  2560               	addwf	sprintf@s& (0+255),w,b
  7417  0051C0  6ED9               	movwf	fsr2l,c
  7418  0051C2  5172               	movf	(sprintf@f+4)& (0+255),w,b
  7419  0051C4  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7420  0051C6  6EDA               	movwf	fsr2h,c
  7421  0051C8  0E00               	movlw	0
  7422  0051CA  6EDF               	movwf	indf2,c
  7423  0051CC                     
  7424                           ; BSR set to: 0
  7425  0051CC  0012               	return		;funcret
  7426  0051CE                     __end_of_sprintf:
  7427                           	callstack 0
  7428                           
  7429 ;; *************** function _vfprintf *****************
  7430 ;; Defined at:
  7431 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  7434 ;;		 -> sprintf@f(11), 
  7435 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  7436 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  7437 ;;  ap              2   85[COMRAM] PTR PTR void 
  7438 ;;		 -> sprintf@ap(2), 
  7439 ;; Auto vars:     Size  Location     Type
  7440 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  7441 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  2   81[COMRAM] int 
  7444 ;; Registers used:
  7445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7451 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;Total ram usage:        8 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; Hardware stack levels required when called: 8
  7458 ;; This function calls:
  7459 ;;		_vfpfcnvrt
  7460 ;; This function is called by:
  7461 ;;		_sprintf
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text26
  7466  005064                     __ptext26:
  7467                           	callstack 0
  7468  005064                     _vfprintf:
  7469                           	callstack 20
  7470  005064                     
  7471                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7472  005064  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  7473  005068  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7474  00506C                     
  7475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7476  00506C  0E00               	movlw	0
  7477  00506E  0100               	movlb	0	; () banked
  7478  005070  6FEC               	movwf	(_nout+1)& (0+255),b
  7479  005072  0E00               	movlw	0
  7480  005074  6FEB               	movwf	_nout& (0+255),b
  7481                           
  7482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7483  005076  EF50  F028         	goto	l4361
  7484  00507A                     l4359:
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7488  00507A  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  7489  00507E  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7490  005082  0E58               	movlw	low vfprintf@cfmt
  7491  005084  6E44               	movwf	vfpfcnvrt@fmt^0,c
  7492  005086  0E00               	movlw	high vfprintf@cfmt
  7493  005088  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7494  00508A  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  7495  00508E  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7496  005092  EC5B  F01D         	call	_vfpfcnvrt	;wreg free
  7497  005096  5042               	movf	?_vfpfcnvrt^0,w,c
  7498  005098  0100               	movlb	0	; () banked
  7499  00509A  27EB               	addwf	_nout& (0+255),f,b
  7500  00509C  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  7501  00509E  23EC               	addwfc	(_nout+1)& (0+255),f,b
  7502  0050A0                     l4361:
  7503                           
  7504                           ; BSR set to: 0
  7505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7506  0050A0  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  7507  0050A4  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7508  0050A8                     	if	0	;tblptru may be non-zero
  7509  0050A8                     	endif
  7510  0050A8                     	if	0	;tblptru may be non-zero
  7511  0050A8                     	endif
  7512  0050A8  0008               	tblrd		*
  7513  0050AA  50F5               	movf	tablat,w,c
  7514  0050AC  0900               	iorlw	0
  7515  0050AE  A4D8               	btfss	status,2,c
  7516  0050B0  EF5C  F028         	goto	u4251
  7517  0050B4  EF5E  F028         	goto	u4250
  7518  0050B8                     u4251:
  7519  0050B8  EF3D  F028         	goto	l4359
  7520  0050BC                     u4250:
  7521  0050BC                     
  7522                           ; BSR set to: 0
  7523                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7524  0050BC  C0EB  F052         	movff	_nout,?_vfprintf
  7525  0050C0  C0EC  F053         	movff	_nout+1,?_vfprintf+1
  7526  0050C4                     
  7527                           ; BSR set to: 0
  7528  0050C4  0012               	return		;funcret
  7529  0050C6                     __end_of_vfprintf:
  7530                           	callstack 0
  7531                           
  7532 ;; *************** function _vfpfcnvrt *****************
  7533 ;; Defined at:
  7534 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7535 ;; Parameters:    Size  Location     Type
  7536 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  7537 ;;		 -> sprintf@f(11), 
  7538 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  7539 ;;		 -> vfprintf@cfmt(2), 
  7540 ;;  ap              2   69[COMRAM] PTR PTR void 
  7541 ;;		 -> sprintf@ap(2), 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  ll              8   73[COMRAM] long long 
  7544 ;;  llu             8    0        unsigned long long 
  7545 ;;  f               4    0        unsigned long long 
  7546 ;;  vp              3    0        PTR void 
  7547 ;;  ct              3    0        unsigned char [3]
  7548 ;;  cp              3    0        PTR unsigned char 
  7549 ;;  i               2    0        int 
  7550 ;;  done            2    0        int 
  7551 ;;  c               1    0        unsigned char 
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  2   65[COMRAM] int 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7561 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;Total ram usage:       16 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 7
  7568 ;; This function calls:
  7569 ;;		_dtoa
  7570 ;;		_fputc
  7571 ;; This function is called by:
  7572 ;;		_vfprintf
  7573 ;; This function uses a non-reentrant model
  7574 ;;
  7575                           
  7576                           	psect	text27
  7577  003AB6                     __ptext27:
  7578                           	callstack 0
  7579  003AB6                     _vfpfcnvrt:
  7580                           	callstack 20
  7581  003AB6                     
  7582                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7583  003AB6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7584  003ABA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7585  003ABE  CFDE FFF6          	movff	postinc2,tblptrl
  7586  003AC2  CFDD FFF7          	movff	postdec2,tblptrh
  7587  003AC6                     	if	0	;tblptru may be non-zero
  7588  003AC6                     	endif
  7589  003AC6                     	if	0	;tblptru may be non-zero
  7590  003AC6                     	endif
  7591  003AC6  0008               	tblrd		*
  7592  003AC8  50F5               	movf	tablat,w,c
  7593  003ACA  0A25               	xorlw	37
  7594  003ACC  A4D8               	btfss	status,2,c
  7595  003ACE  EF6B  F01D         	goto	u4001
  7596  003AD2  EF6D  F01D         	goto	u4000
  7597  003AD6                     u4001:
  7598  003AD6  EF19  F01E         	goto	l4209
  7599  003ADA                     u4000:
  7600  003ADA                     
  7601                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7602  003ADA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7603  003ADE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7604  003AE2  2ADE               	incf	postinc2,f,c
  7605  003AE4  0E00               	movlw	0
  7606  003AE6  22DD               	addwfc	postdec2,f,c
  7607  003AE8                     
  7608                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7609  003AE8  0E00               	movlw	0
  7610  003AEA  0100               	movlb	0	; () banked
  7611  003AEC  6FEE               	movwf	(_width+1)& (0+255),b
  7612  003AEE  0E00               	movlw	0
  7613  003AF0  6FED               	movwf	_width& (0+255),b
  7614  003AF2  C0ED  F0F1         	movff	_width,_flags
  7615  003AF6  C0EE  F0F2         	movff	_width+1,_flags+1
  7616  003AFA                     
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7619  003AFA  69EF               	setf	_prec& (0+255),b
  7620  003AFC  69F0               	setf	(_prec+1)& (0+255),b
  7621  003AFE                     
  7622                           ; BSR set to: 0
  7623                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7624  003AFE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7625  003B02  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7626  003B06  CFDE FFF6          	movff	postinc2,tblptrl
  7627  003B0A  CFDD FFF7          	movff	postdec2,tblptrh
  7628  003B0E                     	if	0	;tblptru may be non-zero
  7629  003B0E                     	endif
  7630  003B0E                     	if	0	;tblptru may be non-zero
  7631  003B0E                     	endif
  7632  003B0E  0008               	tblrd		*
  7633  003B10  50F5               	movf	tablat,w,c
  7634  003B12  0A64               	xorlw	100
  7635  003B14  B4D8               	btfsc	status,2,c
  7636  003B16  EF8F  F01D         	goto	u4011
  7637  003B1A  EF91  F01D         	goto	u4010
  7638  003B1E                     u4011:
  7639  003B1E  EFA3  F01D         	goto	l4187
  7640  003B22                     u4010:
  7641  003B22                     
  7642                           ; BSR set to: 0
  7643  003B22  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7644  003B26  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7645  003B2A  CFDE FFF6          	movff	postinc2,tblptrl
  7646  003B2E  CFDD FFF7          	movff	postdec2,tblptrh
  7647  003B32                     	if	0	;tblptru may be non-zero
  7648  003B32                     	endif
  7649  003B32                     	if	0	;tblptru may be non-zero
  7650  003B32                     	endif
  7651  003B32  0008               	tblrd		*
  7652  003B34  50F5               	movf	tablat,w,c
  7653  003B36  0A69               	xorlw	105
  7654  003B38  A4D8               	btfss	status,2,c
  7655  003B3A  EFA1  F01D         	goto	u4021
  7656  003B3E  EFA3  F01D         	goto	u4020
  7657  003B42                     u4021:
  7658  003B42  EFE3  F01D         	goto	l4193
  7659  003B46                     u4020:
  7660  003B46                     l4187:
  7661                           
  7662                           ; BSR set to: 0
  7663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7664  003B46  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7665  003B4A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7666  003B4E  2ADE               	incf	postinc2,f,c
  7667  003B50  0E00               	movlw	0
  7668  003B52  22DD               	addwfc	postdec2,f,c
  7669                           
  7670                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7671  003B54  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7672  003B58  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7673  003B5C  CFDF F048          	movff	indf2,??_vfpfcnvrt
  7674  003B60  0E02               	movlw	2
  7675  003B62  26DE               	addwf	postinc2,f,c
  7676  003B64  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  7677  003B68  0E00               	movlw	0
  7678  003B6A  22DD               	addwfc	postdec2,f,c
  7679  003B6C  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7680  003B70  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7681  003B74  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  7682  003B78  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  7683  003B7C  0E00               	movlw	0
  7684  003B7E  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7685  003B80  0EFF               	movlw	-1
  7686  003B82  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  7687  003B84  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  7688  003B86  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  7689  003B88  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  7690  003B8A  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  7691  003B8C  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  7692  003B8E                     
  7693                           ; BSR set to: 0
  7694                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7695  003B8E  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  7696  003B92  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7697  003B96  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  7698  003B9A  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7699  003B9E  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7700  003BA2  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7701  003BA6  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7702  003BAA  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7703  003BAE  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7704  003BB2  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7705  003BB6  ECA7  F016         	call	_dtoa	;wreg free
  7706  003BBA  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  7707  003BBE  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7708  003BC2  EF34  F01E         	goto	l1495
  7709  003BC6                     l4193:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7713  003BC6  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7714  003BCA  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7715  003BCE  CFDE FFF6          	movff	postinc2,tblptrl
  7716  003BD2  CFDD FFF7          	movff	postdec2,tblptrh
  7717  003BD6                     	if	0	;tblptru may be non-zero
  7718  003BD6                     	endif
  7719  003BD6                     	if	0	;tblptru may be non-zero
  7720  003BD6                     	endif
  7721  003BD6  0008               	tblrd		*
  7722  003BD8  50F5               	movf	tablat,w,c
  7723  003BDA  0A25               	xorlw	37
  7724  003BDC  A4D8               	btfss	status,2,c
  7725  003BDE  EFF3  F01D         	goto	u4031
  7726  003BE2  EFF5  F01D         	goto	u4030
  7727  003BE6                     u4031:
  7728  003BE6  EF0C  F01E         	goto	l4203
  7729  003BEA                     u4030:
  7730  003BEA                     
  7731                           ; BSR set to: 0
  7732                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7733  003BEA  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7734  003BEE  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7735  003BF2  2ADE               	incf	postinc2,f,c
  7736  003BF4  0E00               	movlw	0
  7737  003BF6  22DD               	addwfc	postdec2,f,c
  7738  003BF8                     
  7739                           ; BSR set to: 0
  7740                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7741  003BF8  0E00               	movlw	0
  7742  003BFA  6E04               	movwf	(fputc@c+1)^0,c
  7743  003BFC  0E25               	movlw	37
  7744  003BFE  6E03               	movwf	fputc@c^0,c
  7745  003C00  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7746  003C04  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7747  003C08  EC72  F025         	call	_fputc	;wreg free
  7748  003C0C                     l4199:
  7749                           
  7750                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7751  003C0C  0E00               	movlw	0
  7752  003C0E  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  7753  003C10  0E01               	movlw	1
  7754  003C12  6E42               	movwf	?_vfpfcnvrt^0,c
  7755  003C14  EF34  F01E         	goto	l1495
  7756  003C18                     l4203:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7760  003C18  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7761  003C1C  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7762  003C20  2ADE               	incf	postinc2,f,c
  7763  003C22  0E00               	movlw	0
  7764  003C24  22DD               	addwfc	postdec2,f,c
  7765  003C26                     
  7766                           ; BSR set to: 0
  7767                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7768  003C26  0E00               	movlw	0
  7769  003C28  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  7770  003C2A  0E00               	movlw	0
  7771  003C2C  6E42               	movwf	?_vfpfcnvrt^0,c
  7772  003C2E  EF34  F01E         	goto	l1495
  7773  003C32                     l4209:
  7774                           
  7775                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7776  003C32  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7777  003C36  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7778  003C3A  CFDE FFF6          	movff	postinc2,tblptrl
  7779  003C3E  CFDD FFF7          	movff	postdec2,tblptrh
  7780  003C42                     	if	0	;tblptru may be non-zero
  7781  003C42                     	endif
  7782  003C42                     	if	0	;tblptru may be non-zero
  7783  003C42                     	endif
  7784  003C42  0008               	tblrd		*
  7785  003C44  50F5               	movf	tablat,w,c
  7786  003C46  6E03               	movwf	fputc@c^0,c
  7787  003C48  6A04               	clrf	(fputc@c+1)^0,c
  7788  003C4A  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  7789  003C4E  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7790  003C52  EC72  F025         	call	_fputc	;wreg free
  7791  003C56                     
  7792                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7793  003C56  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7794  003C5A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7795  003C5E  2ADE               	incf	postinc2,f,c
  7796  003C60  0E00               	movlw	0
  7797  003C62  22DD               	addwfc	postdec2,f,c
  7798  003C64  EF06  F01E         	goto	l4199
  7799  003C68                     l1495:
  7800  003C68  0012               	return		;funcret
  7801  003C6A                     __end_of_vfpfcnvrt:
  7802                           	callstack 0
  7803                           
  7804 ;; *************** function _dtoa *****************
  7805 ;; Defined at:
  7806 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  7809 ;;		 -> sprintf@f(11), 
  7810 ;;  d               8   31[COMRAM] long long 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  n               8   55[COMRAM] long long 
  7813 ;;  i               2   63[COMRAM] int 
  7814 ;;  s               2   53[COMRAM] int 
  7815 ;;  w               2   51[COMRAM] int 
  7816 ;;  p               2   49[COMRAM] int 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  2   29[COMRAM] int 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7826 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7827 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;Total ram usage:       36 bytes
  7831 ;; Hardware stack levels used: 1
  7832 ;; Hardware stack levels required when called: 6
  7833 ;; This function calls:
  7834 ;;		___aodiv
  7835 ;;		___aomod
  7836 ;;		_abs
  7837 ;;		_pad
  7838 ;; This function is called by:
  7839 ;;		_vfpfcnvrt
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843                           	psect	text28
  7844  002D4E                     __ptext28:
  7845                           	callstack 0
  7846  002D4E                     _dtoa:
  7847                           	callstack 20
  7848  002D4E                     
  7849                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7850  002D4E  C020  F038         	movff	dtoa@d,dtoa@n
  7851  002D52  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  7852  002D56  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  7853  002D5A  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  7854  002D5E  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  7855  002D62  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  7856  002D66  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  7857  002D6A  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  7858  002D6E                     
  7859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7860  002D6E  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  7861  002D70  EFBC  F016         	goto	u3541
  7862  002D74  EFBF  F016         	goto	u3540
  7863  002D78                     u3541:
  7864  002D78  0E01               	movlw	1
  7865  002D7A  EFC0  F016         	goto	u3550
  7866  002D7E                     u3540:
  7867  002D7E  0E00               	movlw	0
  7868  002D80                     u3550:
  7869  002D80  6E36               	movwf	dtoa@s^0,c
  7870  002D82  6A37               	clrf	(dtoa@s+1)^0,c
  7871                           
  7872                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7873  002D84  5036               	movf	dtoa@s^0,w,c
  7874  002D86  1037               	iorwf	(dtoa@s+1)^0,w,c
  7875  002D88  B4D8               	btfsc	status,2,c
  7876  002D8A  EFC9  F016         	goto	u3561
  7877  002D8E  EFCB  F016         	goto	u3560
  7878  002D92                     u3561:
  7879  002D92  EFDB  F016         	goto	l3901
  7880  002D96                     u3560:
  7881  002D96                     
  7882                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7883  002D96  1E3F               	comf	(dtoa@n+7)^0,f,c
  7884  002D98  1E3E               	comf	(dtoa@n+6)^0,f,c
  7885  002D9A  1E3D               	comf	(dtoa@n+5)^0,f,c
  7886  002D9C  1E3C               	comf	(dtoa@n+4)^0,f,c
  7887  002D9E  1E3B               	comf	(dtoa@n+3)^0,f,c
  7888  002DA0  1E3A               	comf	(dtoa@n+2)^0,f,c
  7889  002DA2  1E39               	comf	(dtoa@n+1)^0,f,c
  7890  002DA4  6C38               	negf	dtoa@n^0,c
  7891  002DA6  0E00               	movlw	0
  7892  002DA8  2239               	addwfc	(dtoa@n+1)^0,f,c
  7893  002DAA  223A               	addwfc	(dtoa@n+2)^0,f,c
  7894  002DAC  223B               	addwfc	(dtoa@n+3)^0,f,c
  7895  002DAE  223C               	addwfc	(dtoa@n+4)^0,f,c
  7896  002DB0  223D               	addwfc	(dtoa@n+5)^0,f,c
  7897  002DB2  223E               	addwfc	(dtoa@n+6)^0,f,c
  7898  002DB4  223F               	addwfc	(dtoa@n+7)^0,f,c
  7899  002DB6                     l3901:
  7900                           
  7901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7902  002DB6  0100               	movlb	0	; () banked
  7903  002DB8  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7904  002DBA  EFE1  F016         	goto	u3571
  7905  002DBE  EFE3  F016         	goto	u3570
  7906  002DC2                     u3571:
  7907  002DC2  EFE4  F016         	goto	l3905
  7908  002DC6                     u3570:
  7909  002DC6                     
  7910                           ; BSR set to: 0
  7911                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7912  002DC6  93F1               	bcf	_flags& (0+255),1,b
  7913  002DC8                     l3905:
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7917  002DC8  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  7918  002DCA  EFF1  F016         	goto	u3580
  7919  002DCE  51F0               	movf	(_prec+1)& (0+255),w,b
  7920  002DD0  E106               	bnz	u3581
  7921  002DD2  05EF               	decf	_prec& (0+255),w,b
  7922  002DD4  B0D8               	btfsc	status,0,c
  7923  002DD6  EFEF  F016         	goto	u3581
  7924  002DDA  EFF1  F016         	goto	u3580
  7925  002DDE                     u3581:
  7926  002DDE  EFF7  F016         	goto	l1468
  7927  002DE2                     u3580:
  7928  002DE2                     
  7929                           ; BSR set to: 0
  7930  002DE2  0E00               	movlw	0
  7931  002DE4  6E33               	movwf	(dtoa@p+1)^0,c
  7932  002DE6  0E01               	movlw	1
  7933  002DE8  6E32               	movwf	dtoa@p^0,c
  7934  002DEA  EFFB  F016         	goto	l1470
  7935  002DEE                     l1468:
  7936                           
  7937                           ; BSR set to: 0
  7938  002DEE  C0EF  F032         	movff	_prec,dtoa@p
  7939  002DF2  C0F0  F033         	movff	_prec+1,dtoa@p+1
  7940  002DF6                     l1470:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7944  002DF6  C0ED  F034         	movff	_width,dtoa@w
  7945  002DFA  C0EE  F035         	movff	_width+1,dtoa@w+1
  7946  002DFE                     
  7947                           ; BSR set to: 0
  7948                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7949  002DFE  5036               	movf	dtoa@s^0,w,c
  7950  002E00  1037               	iorwf	(dtoa@s+1)^0,w,c
  7951  002E02  A4D8               	btfss	status,2,c
  7952  002E04  EF06  F017         	goto	u3591
  7953  002E08  EF08  F017         	goto	u3590
  7954  002E0C                     u3591:
  7955  002E0C  EF0F  F017         	goto	l3913
  7956  002E10                     u3590:
  7957  002E10                     
  7958                           ; BSR set to: 0
  7959  002E10  A5F1               	btfss	_flags& (0+255),2,b
  7960  002E12  EF0D  F017         	goto	u3601
  7961  002E16  EF0F  F017         	goto	u3600
  7962  002E1A                     u3601:
  7963  002E1A  EF12  F017         	goto	l3915
  7964  002E1E                     u3600:
  7965  002E1E                     l3913:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7969  002E1E  0634               	decf	dtoa@w^0,f,c
  7970  002E20  A0D8               	btfss	status,0,c
  7971  002E22  0635               	decf	(dtoa@w+1)^0,f,c
  7972  002E24                     l3915:
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7976  002E24  0E00               	movlw	0
  7977  002E26  6E41               	movwf	(dtoa@i+1)^0,c
  7978  002E28  0E1F               	movlw	31
  7979  002E2A  6E40               	movwf	dtoa@i^0,c
  7980  002E2C                     
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7983  002E2C  0E00               	movlw	0
  7984  002E2E  0101               	movlb	1	; () banked
  7985  002E30  6FB0               	movwf	(_dbuf+31)& (0+255),b
  7986                           
  7987                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7988  002E32  EF97  F017         	goto	l3929
  7989  002E36                     l3919:
  7990                           
  7991                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7992  002E36  0640               	decf	dtoa@i^0,f,c
  7993  002E38  A0D8               	btfss	status,0,c
  7994  002E3A  0641               	decf	(dtoa@i+1)^0,f,c
  7995  002E3C                     
  7996                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7997  002E3C  0E91               	movlw	low _dbuf
  7998  002E3E  2440               	addwf	dtoa@i^0,w,c
  7999  002E40  6ED9               	movwf	fsr2l,c
  8000  002E42  0E01               	movlw	high _dbuf
  8001  002E44  2041               	addwfc	(dtoa@i+1)^0,w,c
  8002  002E46  6EDA               	movwf	fsr2h,c
  8003  002E48  C038  F003         	movff	dtoa@n,___aomod@dividend
  8004  002E4C  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  8005  002E50  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  8006  002E54  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  8007  002E58  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  8008  002E5C  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  8009  002E60  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  8010  002E64  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  8011  002E68  0E0A               	movlw	10
  8012  002E6A  6E0B               	movwf	___aomod@divisor^0,c
  8013  002E6C  0E00               	movlw	0
  8014  002E6E  6E0C               	movwf	(___aomod@divisor+1)^0,c
  8015  002E70  0E00               	movlw	0
  8016  002E72  6E0D               	movwf	(___aomod@divisor+2)^0,c
  8017  002E74  0E00               	movlw	0
  8018  002E76  6E0E               	movwf	(___aomod@divisor+3)^0,c
  8019  002E78  0E00               	movlw	0
  8020  002E7A  6E0F               	movwf	(___aomod@divisor+4)^0,c
  8021  002E7C  0E00               	movlw	0
  8022  002E7E  6E10               	movwf	(___aomod@divisor+5)^0,c
  8023  002E80  0E00               	movlw	0
  8024  002E82  6E11               	movwf	(___aomod@divisor+6)^0,c
  8025  002E84  0E00               	movlw	0
  8026  002E86  6E12               	movwf	(___aomod@divisor+7)^0,c
  8027  002E88  EC4C  F021         	call	___aomod	;wreg free
  8028  002E8C  C003  F028         	movff	?___aomod,??_dtoa
  8029  002E90  C004  F029         	movff	?___aomod+1,??_dtoa+1
  8030  002E94  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  8031  002E98  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  8032  002E9C  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  8033  002EA0  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  8034  002EA4  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  8035  002EA8  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  8036  002EAC  C028  F015         	movff	??_dtoa,abs@a
  8037  002EB0  C02A  F016         	movff	??_dtoa+2,abs@a+1
  8038  002EB4  EC97  F02A         	call	_abs	;wreg free
  8039  002EB8  5015               	movf	?_abs^0,w,c
  8040  002EBA  0F30               	addlw	48
  8041  002EBC  6EDF               	movwf	indf2,c
  8042  002EBE                     
  8043                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  8044  002EBE  0632               	decf	dtoa@p^0,f,c
  8045  002EC0  A0D8               	btfss	status,0,c
  8046  002EC2  0633               	decf	(dtoa@p+1)^0,f,c
  8047  002EC4                     
  8048                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  8049  002EC4  0634               	decf	dtoa@w^0,f,c
  8050  002EC6  A0D8               	btfss	status,0,c
  8051  002EC8  0635               	decf	(dtoa@w+1)^0,f,c
  8052  002ECA                     
  8053                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8054  002ECA  C038  F003         	movff	dtoa@n,___aodiv@dividend
  8055  002ECE  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  8056  002ED2  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  8057  002ED6  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  8058  002EDA  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  8059  002EDE  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  8060  002EE2  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  8061  002EE6  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  8062  002EEA  0E0A               	movlw	10
  8063  002EEC  6E0B               	movwf	___aodiv@divisor^0,c
  8064  002EEE  0E00               	movlw	0
  8065  002EF0  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  8066  002EF2  0E00               	movlw	0
  8067  002EF4  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  8068  002EF6  0E00               	movlw	0
  8069  002EF8  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  8070  002EFA  0E00               	movlw	0
  8071  002EFC  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  8072  002EFE  0E00               	movlw	0
  8073  002F00  6E10               	movwf	(___aodiv@divisor+5)^0,c
  8074  002F02  0E00               	movlw	0
  8075  002F04  6E11               	movwf	(___aodiv@divisor+6)^0,c
  8076  002F06  0E00               	movlw	0
  8077  002F08  6E12               	movwf	(___aodiv@divisor+7)^0,c
  8078  002F0A  EC08  F01F         	call	___aodiv	;wreg free
  8079  002F0E  C003  F038         	movff	?___aodiv,dtoa@n
  8080  002F12  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  8081  002F16  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  8082  002F1A  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  8083  002F1E  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  8084  002F22  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  8085  002F26  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  8086  002F2A  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  8087  002F2E                     l3929:
  8088                           
  8089                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8090  002F2E  BE41               	btfsc	(dtoa@i+1)^0,7,c
  8091  002F30  EFA2  F017         	goto	u3611
  8092  002F34  5041               	movf	(dtoa@i+1)^0,w,c
  8093  002F36  E108               	bnz	u3610
  8094  002F38  0440               	decf	dtoa@i^0,w,c
  8095  002F3A  A0D8               	btfss	status,0,c
  8096  002F3C  EFA2  F017         	goto	u3611
  8097  002F40  EFA4  F017         	goto	u3610
  8098  002F44                     u3611:
  8099  002F44  EFD5  F017         	goto	l3939
  8100  002F48                     u3610:
  8101  002F48  5038               	movf	dtoa@n^0,w,c
  8102  002F4A  1039               	iorwf	(dtoa@n+1)^0,w,c
  8103  002F4C  103A               	iorwf	(dtoa@n+2)^0,w,c
  8104  002F4E  103B               	iorwf	(dtoa@n+3)^0,w,c
  8105  002F50  103C               	iorwf	(dtoa@n+4)^0,w,c
  8106  002F52  103D               	iorwf	(dtoa@n+5)^0,w,c
  8107  002F54  103E               	iorwf	(dtoa@n+6)^0,w,c
  8108  002F56  103F               	iorwf	(dtoa@n+7)^0,w,c
  8109  002F58  A4D8               	btfss	status,2,c
  8110  002F5A  EFB1  F017         	goto	u3621
  8111  002F5E  EFB3  F017         	goto	u3620
  8112  002F62                     u3621:
  8113  002F62  EF1B  F017         	goto	l3919
  8114  002F66                     u3620:
  8115  002F66  BE33               	btfsc	(dtoa@p+1)^0,7,c
  8116  002F68  EFC0  F017         	goto	u3630
  8117  002F6C  5033               	movf	(dtoa@p+1)^0,w,c
  8118  002F6E  E106               	bnz	u3631
  8119  002F70  0432               	decf	dtoa@p^0,w,c
  8120  002F72  B0D8               	btfsc	status,0,c
  8121  002F74  EFBE  F017         	goto	u3631
  8122  002F78  EFC0  F017         	goto	u3630
  8123  002F7C                     u3631:
  8124  002F7C  EF1B  F017         	goto	l3919
  8125  002F80                     u3630:
  8126  002F80  BE35               	btfsc	(dtoa@w+1)^0,7,c
  8127  002F82  EFCB  F017         	goto	u3641
  8128  002F86  5035               	movf	(dtoa@w+1)^0,w,c
  8129  002F88  E108               	bnz	u3640
  8130  002F8A  0434               	decf	dtoa@w^0,w,c
  8131  002F8C  A0D8               	btfss	status,0,c
  8132  002F8E  EFCB  F017         	goto	u3641
  8133  002F92  EFCD  F017         	goto	u3640
  8134  002F96                     u3641:
  8135  002F96  EFD5  F017         	goto	l3939
  8136  002F9A                     u3640:
  8137  002F9A  0100               	movlb	0	; () banked
  8138  002F9C  B3F1               	btfsc	_flags& (0+255),1,b
  8139  002F9E  EFD3  F017         	goto	u3651
  8140  002FA2  EFD5  F017         	goto	u3650
  8141  002FA6                     u3651:
  8142  002FA6  EF1B  F017         	goto	l3919
  8143  002FAA                     u3650:
  8144  002FAA                     l3939:
  8145                           
  8146                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8147  002FAA  5036               	movf	dtoa@s^0,w,c
  8148  002FAC  1037               	iorwf	(dtoa@s+1)^0,w,c
  8149  002FAE  A4D8               	btfss	status,2,c
  8150  002FB0  EFDC  F017         	goto	u3661
  8151  002FB4  EFDE  F017         	goto	u3660
  8152  002FB8                     u3661:
  8153  002FB8  EFE6  F017         	goto	l3943
  8154  002FBC                     u3660:
  8155  002FBC  0100               	movlb	0	; () banked
  8156  002FBE  A5F1               	btfss	_flags& (0+255),2,b
  8157  002FC0  EFE4  F017         	goto	u3671
  8158  002FC4  EFE6  F017         	goto	u3670
  8159  002FC8                     u3671:
  8160  002FC8  EF04  F018         	goto	l3953
  8161  002FCC                     u3670:
  8162  002FCC                     l3943:
  8163                           
  8164                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  8165  002FCC  0640               	decf	dtoa@i^0,f,c
  8166  002FCE  A0D8               	btfss	status,0,c
  8167  002FD0  0641               	decf	(dtoa@i+1)^0,f,c
  8168  002FD2                     
  8169                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8170  002FD2  5036               	movf	dtoa@s^0,w,c
  8171  002FD4  1037               	iorwf	(dtoa@s+1)^0,w,c
  8172  002FD6  A4D8               	btfss	status,2,c
  8173  002FD8  EFF0  F017         	goto	u3681
  8174  002FDC  EFF2  F017         	goto	u3680
  8175  002FE0                     u3681:
  8176  002FE0  EFF8  F017         	goto	l3949
  8177  002FE4                     u3680:
  8178  002FE4  0E00               	movlw	0
  8179  002FE6  6E31               	movwf	(_dtoa$2837+1)^0,c
  8180  002FE8  0E2B               	movlw	43
  8181  002FEA  6E30               	movwf	_dtoa$2837^0,c
  8182  002FEC  EFFC  F017         	goto	l3951
  8183  002FF0                     l3949:
  8184  002FF0  0E00               	movlw	0
  8185  002FF2  6E31               	movwf	(_dtoa$2837+1)^0,c
  8186  002FF4  0E2D               	movlw	45
  8187  002FF6  6E30               	movwf	_dtoa$2837^0,c
  8188  002FF8                     l3951:
  8189  002FF8  0E91               	movlw	low _dbuf
  8190  002FFA  2440               	addwf	dtoa@i^0,w,c
  8191  002FFC  6ED9               	movwf	fsr2l,c
  8192  002FFE  0E01               	movlw	high _dbuf
  8193  003000  2041               	addwfc	(dtoa@i+1)^0,w,c
  8194  003002  6EDA               	movwf	fsr2h,c
  8195  003004  C030  FFDF         	movff	_dtoa$2837,indf2
  8196  003008                     l3953:
  8197                           
  8198                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8199  003008  C01E  F013         	movff	dtoa@fp,pad@fp
  8200  00300C  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  8201  003010  0E91               	movlw	low _dbuf
  8202  003012  2440               	addwf	dtoa@i^0,w,c
  8203  003014  6E15               	movwf	pad@buf^0,c
  8204  003016  0E01               	movlw	high _dbuf
  8205  003018  2041               	addwfc	(dtoa@i+1)^0,w,c
  8206  00301A  6E16               	movwf	(pad@buf+1)^0,c
  8207  00301C  C034  F017         	movff	dtoa@w,pad@p
  8208  003020  C035  F018         	movff	dtoa@w+1,pad@p+1
  8209  003024  ECD7  F025         	call	_pad	;wreg free
  8210  003028  C013  F01E         	movff	?_pad,?_dtoa
  8211  00302C  C014  F01F         	movff	?_pad+1,?_dtoa+1
  8212  003030  0012               	return		;funcret
  8213  003032                     __end_of_dtoa:
  8214                           	callstack 0
  8215                           
  8216 ;; *************** function _pad *****************
  8217 ;; Defined at:
  8218 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  8221 ;;		 -> sprintf@f(11), 
  8222 ;;  buf             2   20[COMRAM] PTR unsigned char 
  8223 ;;		 -> dbuf(32), 
  8224 ;;  p               2   22[COMRAM] int 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  w               2   27[COMRAM] int 
  8227 ;;  i               2   25[COMRAM] int 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2   18[COMRAM] int 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8237 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8238 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8240 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8241 ;;Total ram usage:       11 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; Hardware stack levels required when called: 5
  8244 ;; This function calls:
  8245 ;;		_fputc
  8246 ;;		_fputs
  8247 ;;		_strlen
  8248 ;; This function is called by:
  8249 ;;		_dtoa
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text29
  8254  004BAE                     __ptext29:
  8255                           	callstack 0
  8256  004BAE                     _pad:
  8257                           	callstack 20
  8258  004BAE                     
  8259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8260  004BAE  0100               	movlb	0	; () banked
  8261  004BB0  A1F1               	btfss	_flags& (0+255),0,b
  8262  004BB2  EFDD  F025         	goto	u3041
  8263  004BB6  EFDF  F025         	goto	u3040
  8264  004BBA                     u3041:
  8265  004BBA  EFE9  F025         	goto	l3653
  8266  004BBE                     u3040:
  8267  004BBE                     
  8268                           ; BSR set to: 0
  8269                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8270  004BBE  C015  F00C         	movff	pad@buf,fputs@s
  8271  004BC2  C016  F00D         	movff	pad@buf+1,fputs@s+1
  8272  004BC6  C013  F00E         	movff	pad@fp,fputs@fp
  8273  004BCA  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  8274  004BCE  ECD0  F029         	call	_fputs	;wreg free
  8275  004BD2                     l3653:
  8276                           
  8277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8278  004BD2  BE18               	btfsc	(pad@p+1)^0,7,c
  8279  004BD4  EFEE  F025         	goto	u3051
  8280  004BD8  EFF0  F025         	goto	u3050
  8281  004BDC                     u3051:
  8282  004BDC  EFF6  F025         	goto	l3657
  8283  004BE0                     u3050:
  8284  004BE0  C017  F01C         	movff	pad@p,pad@w
  8285  004BE4  C018  F01D         	movff	pad@p+1,pad@w+1
  8286  004BE8  EFFA  F025         	goto	l1457
  8287  004BEC                     l3657:
  8288  004BEC  0E00               	movlw	0
  8289  004BEE  6E1D               	movwf	(pad@w+1)^0,c
  8290  004BF0  0E00               	movlw	0
  8291  004BF2  6E1C               	movwf	pad@w^0,c
  8292  004BF4                     l1457:
  8293                           
  8294                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8295  004BF4  0E00               	movlw	0
  8296  004BF6  6E1B               	movwf	(pad@i+1)^0,c
  8297  004BF8  0E00               	movlw	0
  8298  004BFA  6E1A               	movwf	pad@i^0,c
  8299                           
  8300                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8301  004BFC  EF0C  F026         	goto	l3663
  8302  004C00                     l3659:
  8303                           
  8304                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8305  004C00  0E00               	movlw	0
  8306  004C02  6E04               	movwf	(fputc@c+1)^0,c
  8307  004C04  0E20               	movlw	32
  8308  004C06  6E03               	movwf	fputc@c^0,c
  8309  004C08  C013  F005         	movff	pad@fp,fputc@fp
  8310  004C0C  C014  F006         	movff	pad@fp+1,fputc@fp+1
  8311  004C10  EC72  F025         	call	_fputc	;wreg free
  8312  004C14                     
  8313                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8314  004C14  4A1A               	infsnz	pad@i^0,f,c
  8315  004C16  2A1B               	incf	(pad@i+1)^0,f,c
  8316  004C18                     l3663:
  8317                           
  8318                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8319  004C18  501C               	movf	pad@w^0,w,c
  8320  004C1A  5C1A               	subwf	pad@i^0,w,c
  8321  004C1C  501B               	movf	(pad@i+1)^0,w,c
  8322  004C1E  0A80               	xorlw	128
  8323  004C20  6E19               	movwf	??_pad^0,c
  8324  004C22  501D               	movf	(pad@w+1)^0,w,c
  8325  004C24  0A80               	xorlw	128
  8326  004C26  5819               	subwfb	??_pad^0,w,c
  8327  004C28  A0D8               	btfss	status,0,c
  8328  004C2A  EF19  F026         	goto	u3061
  8329  004C2E  EF1B  F026         	goto	u3060
  8330  004C32                     u3061:
  8331  004C32  EF00  F026         	goto	l3659
  8332  004C36                     u3060:
  8333  004C36                     
  8334                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8335  004C36  0100               	movlb	0	; () banked
  8336  004C38  B1F1               	btfsc	_flags& (0+255),0,b
  8337  004C3A  EF21  F026         	goto	u3071
  8338  004C3E  EF23  F026         	goto	u3070
  8339  004C42                     u3071:
  8340  004C42  EF2D  F026         	goto	l3667
  8341  004C46                     u3070:
  8342  004C46                     
  8343                           ; BSR set to: 0
  8344                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8345  004C46  C015  F00C         	movff	pad@buf,fputs@s
  8346  004C4A  C016  F00D         	movff	pad@buf+1,fputs@s+1
  8347  004C4E  C013  F00E         	movff	pad@fp,fputs@fp
  8348  004C52  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  8349  004C56  ECD0  F029         	call	_fputs	;wreg free
  8350  004C5A                     l3667:
  8351                           
  8352                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8353  004C5A  C015  F003         	movff	pad@buf,strlen@s
  8354  004C5E  C016  F004         	movff	pad@buf+1,strlen@s+1
  8355  004C62  EC0D  F02B         	call	_strlen	;wreg free
  8356  004C66  501C               	movf	pad@w^0,w,c
  8357  004C68  2403               	addwf	?_strlen^0,w,c
  8358  004C6A  6E13               	movwf	?_pad^0,c
  8359  004C6C  501D               	movf	(pad@w+1)^0,w,c
  8360  004C6E  2004               	addwfc	(?_strlen+1)^0,w,c
  8361  004C70  6E14               	movwf	(?_pad+1)^0,c
  8362  004C72  0012               	return		;funcret
  8363  004C74                     __end_of_pad:
  8364                           	callstack 0
  8365                           
  8366 ;; *************** function _strlen *****************
  8367 ;; Defined at:
  8368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  8369 ;; Parameters:    Size  Location     Type
  8370 ;;  s               2    2[COMRAM] PTR const unsigned char 
  8371 ;;		 -> dbuf(32), 
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;  a               2    4[COMRAM] PTR const unsigned char 
  8374 ;;		 -> dbuf(32), 
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2    2[COMRAM] unsigned int 
  8377 ;; Registers used:
  8378 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;Total ram usage:        4 bytes
  8389 ;; Hardware stack levels used: 1
  8390 ;; Hardware stack levels required when called: 2
  8391 ;; This function calls:
  8392 ;;		Nothing
  8393 ;; This function is called by:
  8394 ;;		_pad
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text30
  8399  00561A                     __ptext30:
  8400                           	callstack 0
  8401  00561A                     _strlen:
  8402                           	callstack 22
  8403  00561A  C003  F005         	movff	strlen@s,strlen@a
  8404  00561E  C004  F006         	movff	strlen@s+1,strlen@a+1
  8405  005622  EF15  F02B         	goto	l3513
  8406  005626                     l3511:
  8407  005626  4A03               	infsnz	strlen@s^0,f,c
  8408  005628  2A04               	incf	(strlen@s+1)^0,f,c
  8409  00562A                     l3513:
  8410  00562A  C003  FFD9         	movff	strlen@s,fsr2l
  8411  00562E  C004  FFDA         	movff	strlen@s+1,fsr2h
  8412  005632  50DF               	movf	indf2,w,c
  8413  005634  A4D8               	btfss	status,2,c
  8414  005636  EF1F  F02B         	goto	u2841
  8415  00563A  EF21  F02B         	goto	u2840
  8416  00563E                     u2841:
  8417  00563E  EF13  F02B         	goto	l3511
  8418  005642                     u2840:
  8419  005642  5005               	movf	strlen@a^0,w,c
  8420  005644  5C03               	subwf	strlen@s^0,w,c
  8421  005646  6E03               	movwf	?_strlen^0,c
  8422  005648  5006               	movf	(strlen@a+1)^0,w,c
  8423  00564A  5804               	subwfb	(strlen@s+1)^0,w,c
  8424  00564C  6E04               	movwf	(?_strlen+1)^0,c
  8425  00564E  0012               	return		;funcret
  8426  005650                     __end_of_strlen:
  8427                           	callstack 0
  8428                           
  8429 ;; *************** function _fputs *****************
  8430 ;; Defined at:
  8431 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  8432 ;; Parameters:    Size  Location     Type
  8433 ;;  s               2   11[COMRAM] PTR const unsigned char 
  8434 ;;		 -> dbuf(32), 
  8435 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  8436 ;;		 -> sprintf@f(11), 
  8437 ;; Auto vars:     Size  Location     Type
  8438 ;;  i               2   16[COMRAM] int 
  8439 ;;  c               1   15[COMRAM] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  2   11[COMRAM] int 
  8442 ;; Registers used:
  8443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;Total ram usage:        7 bytes
  8454 ;; Hardware stack levels used: 1
  8455 ;; Hardware stack levels required when called: 4
  8456 ;; This function calls:
  8457 ;;		_fputc
  8458 ;; This function is called by:
  8459 ;;		_pad
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text31
  8464  0053A0                     __ptext31:
  8465                           	callstack 0
  8466  0053A0                     _fputs:
  8467                           	callstack 20
  8468  0053A0  0E00               	movlw	0
  8469  0053A2  6E12               	movwf	(fputs@i+1)^0,c
  8470  0053A4  0E00               	movlw	0
  8471  0053A6  6E11               	movwf	fputs@i^0,c
  8472  0053A8  EFE1  F029         	goto	l3507
  8473  0053AC                     l3503:
  8474  0053AC  C010  F003         	movff	fputs@c,fputc@c
  8475  0053B0  6A04               	clrf	(fputc@c+1)^0,c
  8476  0053B2  C00E  F005         	movff	fputs@fp,fputc@fp
  8477  0053B6  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  8478  0053BA  EC72  F025         	call	_fputc	;wreg free
  8479  0053BE  4A11               	infsnz	fputs@i^0,f,c
  8480  0053C0  2A12               	incf	(fputs@i+1)^0,f,c
  8481  0053C2                     l3507:
  8482  0053C2  5011               	movf	fputs@i^0,w,c
  8483  0053C4  240C               	addwf	fputs@s^0,w,c
  8484  0053C6  6ED9               	movwf	fsr2l,c
  8485  0053C8  5012               	movf	(fputs@i+1)^0,w,c
  8486  0053CA  200D               	addwfc	(fputs@s+1)^0,w,c
  8487  0053CC  6EDA               	movwf	fsr2h,c
  8488  0053CE  50DF               	movf	indf2,w,c
  8489  0053D0  6E10               	movwf	fputs@c^0,c
  8490  0053D2  5010               	movf	fputs@c^0,w,c
  8491  0053D4  A4D8               	btfss	status,2,c
  8492  0053D6  EFEF  F029         	goto	u2831
  8493  0053DA  EFF1  F029         	goto	u2830
  8494  0053DE                     u2831:
  8495  0053DE  EFD6  F029         	goto	l3503
  8496  0053E2                     u2830:
  8497  0053E2  0012               	return		;funcret
  8498  0053E4                     __end_of_fputs:
  8499                           	callstack 0
  8500                           
  8501 ;; *************** function _fputc *****************
  8502 ;; Defined at:
  8503 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  8504 ;; Parameters:    Size  Location     Type
  8505 ;;  c               2    2[COMRAM] int 
  8506 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  8507 ;;		 -> sprintf@f(11), 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  2    2[COMRAM] int 
  8512 ;; Registers used:
  8513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;Total ram usage:        9 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 3
  8526 ;; This function calls:
  8527 ;;		_putch
  8528 ;; This function is called by:
  8529 ;;		_pad
  8530 ;;		_vfpfcnvrt
  8531 ;;		_fputs
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text32
  8536  004AE4                     __ptext32:
  8537                           	callstack 0
  8538  004AE4                     _fputc:
  8539                           	callstack 23
  8540  004AE4  5005               	movf	fputc@fp^0,w,c
  8541  004AE6  1006               	iorwf	(fputc@fp+1)^0,w,c
  8542  004AE8  B4D8               	btfsc	status,2,c
  8543  004AEA  EF79  F025         	goto	u2791
  8544  004AEE  EF7B  F025         	goto	u2790
  8545  004AF2                     u2791:
  8546  004AF2  EF84  F025         	goto	l3491
  8547  004AF6                     u2790:
  8548  004AF6  5005               	movf	fputc@fp^0,w,c
  8549  004AF8  1006               	iorwf	(fputc@fp+1)^0,w,c
  8550  004AFA  A4D8               	btfss	status,2,c
  8551  004AFC  EF82  F025         	goto	u2801
  8552  004B00  EF84  F025         	goto	u2800
  8553  004B04                     u2801:
  8554  004B04  EF89  F025         	goto	l3493
  8555  004B08                     u2800:
  8556  004B08                     l3491:
  8557  004B08  5003               	movf	fputc@c^0,w,c
  8558  004B0A  EC71  F02C         	call	_putch
  8559  004B0E  EFD6  F025         	goto	l1521
  8560  004B12                     l3493:
  8561  004B12  EE20 F009          	lfsr	2,9
  8562  004B16  5005               	movf	fputc@fp^0,w,c
  8563  004B18  26D9               	addwf	fsr2l,f,c
  8564  004B1A  5006               	movf	(fputc@fp+1)^0,w,c
  8565  004B1C  22DA               	addwfc	fsr2h,f,c
  8566  004B1E  50DE               	movf	postinc2,w,c
  8567  004B20  10DE               	iorwf	postinc2,w,c
  8568  004B22  B4D8               	btfsc	status,2,c
  8569  004B24  EF96  F025         	goto	u2811
  8570  004B28  EF98  F025         	goto	u2810
  8571  004B2C                     u2811:
  8572  004B2C  EFB3  F025         	goto	l3497
  8573  004B30                     u2810:
  8574  004B30  EE20 F009          	lfsr	2,9
  8575  004B34  5005               	movf	fputc@fp^0,w,c
  8576  004B36  26D9               	addwf	fsr2l,f,c
  8577  004B38  5006               	movf	(fputc@fp+1)^0,w,c
  8578  004B3A  22DA               	addwfc	fsr2h,f,c
  8579  004B3C  EE10 F003          	lfsr	1,3
  8580  004B40  5005               	movf	fputc@fp^0,w,c
  8581  004B42  26E1               	addwf	fsr1l,f,c
  8582  004B44  5006               	movf	(fputc@fp+1)^0,w,c
  8583  004B46  22E2               	addwfc	fsr1h,f,c
  8584  004B48  50DE               	movf	postinc2,w,c
  8585  004B4A  5CE6               	subwf	postinc1,w,c
  8586  004B4C  50E6               	movf	postinc1,w,c
  8587  004B4E  0A80               	xorlw	128
  8588  004B50  6E0B               	movwf	(??_fputc+4)^0,c
  8589  004B52  50DE               	movf	postinc2,w,c
  8590  004B54  0A80               	xorlw	128
  8591  004B56  580B               	subwfb	(??_fputc+4)^0,w,c
  8592  004B58  B0D8               	btfsc	status,0,c
  8593  004B5A  EFB1  F025         	goto	u2821
  8594  004B5E  EFB3  F025         	goto	u2820
  8595  004B62                     u2821:
  8596  004B62  EFD6  F025         	goto	l1521
  8597  004B66                     u2820:
  8598  004B66                     l3497:
  8599  004B66  EE20 F003          	lfsr	2,3
  8600  004B6A  5005               	movf	fputc@fp^0,w,c
  8601  004B6C  26D9               	addwf	fsr2l,f,c
  8602  004B6E  5006               	movf	(fputc@fp+1)^0,w,c
  8603  004B70  22DA               	addwfc	fsr2h,f,c
  8604  004B72  CFDE F007          	movff	postinc2,??_fputc
  8605  004B76  CFDD F008          	movff	postdec2,??_fputc+1
  8606  004B7A  C005  FFD9         	movff	fputc@fp,fsr2l
  8607  004B7E  C006  FFDA         	movff	fputc@fp+1,fsr2h
  8608  004B82  CFDE F009          	movff	postinc2,??_fputc+2
  8609  004B86  CFDD F00A          	movff	postdec2,??_fputc+3
  8610  004B8A  5007               	movf	??_fputc^0,w,c
  8611  004B8C  2409               	addwf	(??_fputc+2)^0,w,c
  8612  004B8E  6ED9               	movwf	fsr2l,c
  8613  004B90  5008               	movf	(??_fputc+1)^0,w,c
  8614  004B92  200A               	addwfc	(??_fputc+3)^0,w,c
  8615  004B94  6EDA               	movwf	fsr2h,c
  8616  004B96  C003  FFDF         	movff	fputc@c,indf2
  8617  004B9A  EE20 F003          	lfsr	2,3
  8618  004B9E  5005               	movf	fputc@fp^0,w,c
  8619  004BA0  26D9               	addwf	fsr2l,f,c
  8620  004BA2  5006               	movf	(fputc@fp+1)^0,w,c
  8621  004BA4  22DA               	addwfc	fsr2h,f,c
  8622  004BA6  2ADE               	incf	postinc2,f,c
  8623  004BA8  0E00               	movlw	0
  8624  004BAA  22DD               	addwfc	postdec2,f,c
  8625  004BAC                     l1521:
  8626  004BAC  0012               	return		;funcret
  8627  004BAE                     __end_of_fputc:
  8628                           	callstack 0
  8629                           
  8630 ;; *************** function _putch *****************
  8631 ;; Defined at:
  8632 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  c               1    wreg     unsigned char 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  c               1    0[COMRAM] unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;Total ram usage:        0 bytes
  8651 ;; Hardware stack levels used: 1
  8652 ;; Hardware stack levels required when called: 2
  8653 ;; This function calls:
  8654 ;;		Nothing
  8655 ;; This function is called by:
  8656 ;;		_fputc
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text33
  8661  0058E2                     __ptext33:
  8662                           	callstack 0
  8663  0058E2                     _putch:
  8664                           	callstack 23
  8665  0058E2  0012               	return		;funcret
  8666  0058E4                     __end_of_putch:
  8667                           	callstack 0
  8668                           
  8669 ;; *************** function _abs *****************
  8670 ;; Defined at:
  8671 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;  a               2   20[COMRAM] int 
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  2   20[COMRAM] int 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;Total ram usage:        4 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 2
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_dtoa
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text34
  8700  00552E                     __ptext34:
  8701                           	callstack 0
  8702  00552E                     _abs:
  8703                           	callstack 23
  8704  00552E  BE16               	btfsc	(abs@a+1)^0,7,c
  8705  005530  EFA4  F02A         	goto	u3080
  8706  005534  5016               	movf	(abs@a+1)^0,w,c
  8707  005536  E106               	bnz	u3081
  8708  005538  0415               	decf	abs@a^0,w,c
  8709  00553A  B0D8               	btfsc	status,0,c
  8710  00553C  EFA2  F02A         	goto	u3081
  8711  005540  EFA4  F02A         	goto	u3080
  8712  005544                     u3081:
  8713  005544  EFB2  F02A         	goto	l1506
  8714  005548                     u3080:
  8715  005548  C015  F017         	movff	abs@a,??_abs
  8716  00554C  C016  F018         	movff	abs@a+1,??_abs+1
  8717  005550  1E17               	comf	??_abs^0,f,c
  8718  005552  1E18               	comf	(??_abs+1)^0,f,c
  8719  005554  4A17               	infsnz	??_abs^0,f,c
  8720  005556  2A18               	incf	(??_abs+1)^0,f,c
  8721  005558  C017  F015         	movff	??_abs,?_abs
  8722  00555C  C018  F016         	movff	??_abs+1,?_abs+1
  8723  005560  EFB6  F02A         	goto	l1509
  8724  005564                     l1506:
  8725  005564  C015  F015         	movff	abs@a,?_abs
  8726  005568  C016  F016         	movff	abs@a+1,?_abs+1
  8727  00556C                     l1509:
  8728  00556C  0012               	return		;funcret
  8729  00556E                     __end_of_abs:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function ___aomod *****************
  8733 ;; Defined at:
  8734 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  dividend        8    2[COMRAM] long long 
  8737 ;;  divisor         8   10[COMRAM] long long 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  sign            1   19[COMRAM] unsigned char 
  8740 ;;  counter         1   18[COMRAM] unsigned char 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  8    2[COMRAM] long long 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8750 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;Total ram usage:       18 bytes
  8755 ;; Hardware stack levels used: 1
  8756 ;; Hardware stack levels required when called: 2
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_dtoa
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text35
  8765  004298                     __ptext35:
  8766                           	callstack 0
  8767  004298                     ___aomod:
  8768                           	callstack 23
  8769  004298  0E00               	movlw	0
  8770  00429A  6E14               	movwf	___aomod@sign^0,c
  8771  00429C  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  8772  00429E  EF55  F021         	goto	u2920
  8773  0042A2  EF53  F021         	goto	u2921
  8774  0042A6                     u2921:
  8775  0042A6  EF67  F021         	goto	l3577
  8776  0042AA                     u2920:
  8777  0042AA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  8778  0042AC  1E09               	comf	(___aomod@dividend+6)^0,f,c
  8779  0042AE  1E08               	comf	(___aomod@dividend+5)^0,f,c
  8780  0042B0  1E07               	comf	(___aomod@dividend+4)^0,f,c
  8781  0042B2  1E06               	comf	(___aomod@dividend+3)^0,f,c
  8782  0042B4  1E05               	comf	(___aomod@dividend+2)^0,f,c
  8783  0042B6  1E04               	comf	(___aomod@dividend+1)^0,f,c
  8784  0042B8  6C03               	negf	___aomod@dividend^0,c
  8785  0042BA  0E00               	movlw	0
  8786  0042BC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  8787  0042BE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  8788  0042C0  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  8789  0042C2  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  8790  0042C4  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  8791  0042C6  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  8792  0042C8  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  8793  0042CA  0E01               	movlw	1
  8794  0042CC  6E14               	movwf	___aomod@sign^0,c
  8795  0042CE                     l3577:
  8796  0042CE  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  8797  0042D0  EF6E  F021         	goto	u2930
  8798  0042D4  EF6C  F021         	goto	u2931
  8799  0042D8                     u2931:
  8800  0042D8  EF7E  F021         	goto	l3581
  8801  0042DC                     u2930:
  8802  0042DC  1E12               	comf	(___aomod@divisor+7)^0,f,c
  8803  0042DE  1E11               	comf	(___aomod@divisor+6)^0,f,c
  8804  0042E0  1E10               	comf	(___aomod@divisor+5)^0,f,c
  8805  0042E2  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  8806  0042E4  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  8807  0042E6  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  8808  0042E8  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  8809  0042EA  6C0B               	negf	___aomod@divisor^0,c
  8810  0042EC  0E00               	movlw	0
  8811  0042EE  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  8812  0042F0  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  8813  0042F2  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  8814  0042F4  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  8815  0042F6  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  8816  0042F8  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  8817  0042FA  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  8818  0042FC                     l3581:
  8819  0042FC  500B               	movf	___aomod@divisor^0,w,c
  8820  0042FE  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  8821  004300  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  8822  004302  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  8823  004304  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  8824  004306  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  8825  004308  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  8826  00430A  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  8827  00430C  B4D8               	btfsc	status,2,c
  8828  00430E  EF8B  F021         	goto	u2941
  8829  004312  EF8D  F021         	goto	u2940
  8830  004316                     u2941:
  8831  004316  EFD5  F021         	goto	l3597
  8832  00431A                     u2940:
  8833  00431A  0E01               	movlw	1
  8834  00431C  6E13               	movwf	___aomod@counter^0,c
  8835  00431E  EF9B  F021         	goto	l3587
  8836  004322                     l3585:
  8837  004322  90D8               	bcf	status,0,c
  8838  004324  360B               	rlcf	___aomod@divisor^0,f,c
  8839  004326  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  8840  004328  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  8841  00432A  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  8842  00432C  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  8843  00432E  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  8844  004330  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  8845  004332  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  8846  004334  2A13               	incf	___aomod@counter^0,f,c
  8847  004336                     l3587:
  8848  004336  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  8849  004338  EFA0  F021         	goto	u2951
  8850  00433C  EFA2  F021         	goto	u2950
  8851  004340                     u2951:
  8852  004340  EF91  F021         	goto	l3585
  8853  004344                     u2950:
  8854  004344                     l3589:
  8855  004344  500B               	movf	___aomod@divisor^0,w,c
  8856  004346  5C03               	subwf	___aomod@dividend^0,w,c
  8857  004348  500C               	movf	(___aomod@divisor+1)^0,w,c
  8858  00434A  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  8859  00434C  500D               	movf	(___aomod@divisor+2)^0,w,c
  8860  00434E  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  8861  004350  500E               	movf	(___aomod@divisor+3)^0,w,c
  8862  004352  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  8863  004354  500F               	movf	(___aomod@divisor+4)^0,w,c
  8864  004356  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  8865  004358  5010               	movf	(___aomod@divisor+5)^0,w,c
  8866  00435A  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  8867  00435C  5011               	movf	(___aomod@divisor+6)^0,w,c
  8868  00435E  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  8869  004360  5012               	movf	(___aomod@divisor+7)^0,w,c
  8870  004362  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  8871  004364  A0D8               	btfss	status,0,c
  8872  004366  EFB7  F021         	goto	u2961
  8873  00436A  EFB9  F021         	goto	u2960
  8874  00436E                     u2961:
  8875  00436E  EFC9  F021         	goto	l3593
  8876  004372                     u2960:
  8877  004372  500B               	movf	___aomod@divisor^0,w,c
  8878  004374  5E03               	subwf	___aomod@dividend^0,f,c
  8879  004376  500C               	movf	(___aomod@divisor+1)^0,w,c
  8880  004378  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  8881  00437A  500D               	movf	(___aomod@divisor+2)^0,w,c
  8882  00437C  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  8883  00437E  500E               	movf	(___aomod@divisor+3)^0,w,c
  8884  004380  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  8885  004382  500F               	movf	(___aomod@divisor+4)^0,w,c
  8886  004384  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  8887  004386  5010               	movf	(___aomod@divisor+5)^0,w,c
  8888  004388  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  8889  00438A  5011               	movf	(___aomod@divisor+6)^0,w,c
  8890  00438C  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  8891  00438E  5012               	movf	(___aomod@divisor+7)^0,w,c
  8892  004390  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  8893  004392                     l3593:
  8894  004392  90D8               	bcf	status,0,c
  8895  004394  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  8896  004396  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  8897  004398  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  8898  00439A  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  8899  00439C  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  8900  00439E  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  8901  0043A0  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  8902  0043A2  320B               	rrcf	___aomod@divisor^0,f,c
  8903  0043A4  2E13               	decfsz	___aomod@counter^0,f,c
  8904  0043A6  EFA2  F021         	goto	l3589
  8905  0043AA                     l3597:
  8906  0043AA  5014               	movf	___aomod@sign^0,w,c
  8907  0043AC  B4D8               	btfsc	status,2,c
  8908  0043AE  EFDB  F021         	goto	u2971
  8909  0043B2  EFDD  F021         	goto	u2970
  8910  0043B6                     u2971:
  8911  0043B6  EFED  F021         	goto	l3601
  8912  0043BA                     u2970:
  8913  0043BA  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  8914  0043BC  1E09               	comf	(___aomod@dividend+6)^0,f,c
  8915  0043BE  1E08               	comf	(___aomod@dividend+5)^0,f,c
  8916  0043C0  1E07               	comf	(___aomod@dividend+4)^0,f,c
  8917  0043C2  1E06               	comf	(___aomod@dividend+3)^0,f,c
  8918  0043C4  1E05               	comf	(___aomod@dividend+2)^0,f,c
  8919  0043C6  1E04               	comf	(___aomod@dividend+1)^0,f,c
  8920  0043C8  6C03               	negf	___aomod@dividend^0,c
  8921  0043CA  0E00               	movlw	0
  8922  0043CC  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  8923  0043CE  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  8924  0043D0  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  8925  0043D2  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  8926  0043D4  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  8927  0043D6  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  8928  0043D8  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  8929  0043DA                     l3601:
  8930  0043DA  C003  F003         	movff	___aomod@dividend,?___aomod
  8931  0043DE  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  8932  0043E2  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  8933  0043E6  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  8934  0043EA  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  8935  0043EE  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  8936  0043F2  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  8937  0043F6  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  8938  0043FA  0012               	return		;funcret
  8939  0043FC                     __end_of___aomod:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function ___aodiv *****************
  8943 ;; Defined at:
  8944 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  dividend        8    2[COMRAM] long long 
  8947 ;;  divisor         8   10[COMRAM] long long 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;  quotient        8   20[COMRAM] long long 
  8950 ;;  sign            1   19[COMRAM] unsigned char 
  8951 ;;  counter         1   18[COMRAM] unsigned char 
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  8    2[COMRAM] long long 
  8954 ;; Registers used:
  8955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8961 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8962 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8964 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8965 ;;Total ram usage:       26 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; Hardware stack levels required when called: 2
  8968 ;; This function calls:
  8969 ;;		Nothing
  8970 ;; This function is called by:
  8971 ;;		_dtoa
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           	psect	text36
  8976  003E10                     __ptext36:
  8977                           	callstack 0
  8978  003E10                     ___aodiv:
  8979                           	callstack 23
  8980  003E10  0E00               	movlw	0
  8981  003E12  6E14               	movwf	___aodiv@sign^0,c
  8982  003E14  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  8983  003E16  EF11  F01F         	goto	u2850
  8984  003E1A  EF0F  F01F         	goto	u2851
  8985  003E1E                     u2851:
  8986  003E1E  EF23  F01F         	goto	l3533
  8987  003E22                     u2850:
  8988  003E22  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  8989  003E24  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  8990  003E26  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  8991  003E28  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  8992  003E2A  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  8993  003E2C  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  8994  003E2E  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  8995  003E30  6C0B               	negf	___aodiv@divisor^0,c
  8996  003E32  0E00               	movlw	0
  8997  003E34  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  8998  003E36  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  8999  003E38  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  9000  003E3A  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  9001  003E3C  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  9002  003E3E  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  9003  003E40  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  9004  003E42  0E01               	movlw	1
  9005  003E44  6E14               	movwf	___aodiv@sign^0,c
  9006  003E46                     l3533:
  9007  003E46  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  9008  003E48  EF2A  F01F         	goto	u2860
  9009  003E4C  EF28  F01F         	goto	u2861
  9010  003E50                     u2861:
  9011  003E50  EF3C  F01F         	goto	l3539
  9012  003E54                     u2860:
  9013  003E54  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  9014  003E56  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  9015  003E58  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  9016  003E5A  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  9017  003E5C  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  9018  003E5E  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  9019  003E60  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  9020  003E62  6C03               	negf	___aodiv@dividend^0,c
  9021  003E64  0E00               	movlw	0
  9022  003E66  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  9023  003E68  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  9024  003E6A  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  9025  003E6C  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  9026  003E6E  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  9027  003E70  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  9028  003E72  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  9029  003E74  0E01               	movlw	1
  9030  003E76  1A14               	xorwf	___aodiv@sign^0,f,c
  9031  003E78                     l3539:
  9032  003E78  EE20  F015         	lfsr	2,___aodiv@quotient
  9033  003E7C  0E07               	movlw	7
  9034  003E7E                     u2871:
  9035  003E7E  6ADE               	clrf	postinc2,c
  9036  003E80  06E8               	decf	wreg,f,c
  9037  003E82  E2FD               	bc	u2871
  9038  003E84  500B               	movf	___aodiv@divisor^0,w,c
  9039  003E86  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  9040  003E88  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  9041  003E8A  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  9042  003E8C  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  9043  003E8E  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  9044  003E90  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  9045  003E92  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  9046  003E94  B4D8               	btfsc	status,2,c
  9047  003E96  EF4F  F01F         	goto	u2881
  9048  003E9A  EF51  F01F         	goto	u2880
  9049  003E9E                     u2881:
  9050  003E9E  EFA3  F01F         	goto	l3561
  9051  003EA2                     u2880:
  9052  003EA2  0E01               	movlw	1
  9053  003EA4  6E13               	movwf	___aodiv@counter^0,c
  9054  003EA6  EF5F  F01F         	goto	l3547
  9055  003EAA                     l3545:
  9056  003EAA  90D8               	bcf	status,0,c
  9057  003EAC  360B               	rlcf	___aodiv@divisor^0,f,c
  9058  003EAE  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  9059  003EB0  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  9060  003EB2  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  9061  003EB4  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  9062  003EB6  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  9063  003EB8  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  9064  003EBA  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  9065  003EBC  2A13               	incf	___aodiv@counter^0,f,c
  9066  003EBE                     l3547:
  9067  003EBE  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  9068  003EC0  EF64  F01F         	goto	u2891
  9069  003EC4  EF66  F01F         	goto	u2890
  9070  003EC8                     u2891:
  9071  003EC8  EF55  F01F         	goto	l3545
  9072  003ECC                     u2890:
  9073  003ECC                     l3549:
  9074  003ECC  90D8               	bcf	status,0,c
  9075  003ECE  3615               	rlcf	___aodiv@quotient^0,f,c
  9076  003ED0  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  9077  003ED2  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  9078  003ED4  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  9079  003ED6  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  9080  003ED8  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  9081  003EDA  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  9082  003EDC  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  9083  003EDE  500B               	movf	___aodiv@divisor^0,w,c
  9084  003EE0  5C03               	subwf	___aodiv@dividend^0,w,c
  9085  003EE2  500C               	movf	(___aodiv@divisor+1)^0,w,c
  9086  003EE4  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  9087  003EE6  500D               	movf	(___aodiv@divisor+2)^0,w,c
  9088  003EE8  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  9089  003EEA  500E               	movf	(___aodiv@divisor+3)^0,w,c
  9090  003EEC  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  9091  003EEE  500F               	movf	(___aodiv@divisor+4)^0,w,c
  9092  003EF0  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  9093  003EF2  5010               	movf	(___aodiv@divisor+5)^0,w,c
  9094  003EF4  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  9095  003EF6  5011               	movf	(___aodiv@divisor+6)^0,w,c
  9096  003EF8  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  9097  003EFA  5012               	movf	(___aodiv@divisor+7)^0,w,c
  9098  003EFC  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  9099  003EFE  A0D8               	btfss	status,0,c
  9100  003F00  EF84  F01F         	goto	u2901
  9101  003F04  EF86  F01F         	goto	u2900
  9102  003F08                     u2901:
  9103  003F08  EF97  F01F         	goto	l3557
  9104  003F0C                     u2900:
  9105  003F0C  500B               	movf	___aodiv@divisor^0,w,c
  9106  003F0E  5E03               	subwf	___aodiv@dividend^0,f,c
  9107  003F10  500C               	movf	(___aodiv@divisor+1)^0,w,c
  9108  003F12  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  9109  003F14  500D               	movf	(___aodiv@divisor+2)^0,w,c
  9110  003F16  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  9111  003F18  500E               	movf	(___aodiv@divisor+3)^0,w,c
  9112  003F1A  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  9113  003F1C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  9114  003F1E  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  9115  003F20  5010               	movf	(___aodiv@divisor+5)^0,w,c
  9116  003F22  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  9117  003F24  5011               	movf	(___aodiv@divisor+6)^0,w,c
  9118  003F26  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  9119  003F28  5012               	movf	(___aodiv@divisor+7)^0,w,c
  9120  003F2A  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  9121  003F2C  8015               	bsf	___aodiv@quotient^0,0,c
  9122  003F2E                     l3557:
  9123  003F2E  90D8               	bcf	status,0,c
  9124  003F30  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  9125  003F32  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  9126  003F34  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  9127  003F36  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  9128  003F38  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  9129  003F3A  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  9130  003F3C  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  9131  003F3E  320B               	rrcf	___aodiv@divisor^0,f,c
  9132  003F40  2E13               	decfsz	___aodiv@counter^0,f,c
  9133  003F42  EF66  F01F         	goto	l3549
  9134  003F46                     l3561:
  9135  003F46  5014               	movf	___aodiv@sign^0,w,c
  9136  003F48  B4D8               	btfsc	status,2,c
  9137  003F4A  EFA9  F01F         	goto	u2911
  9138  003F4E  EFAB  F01F         	goto	u2910
  9139  003F52                     u2911:
  9140  003F52  EFBB  F01F         	goto	l3565
  9141  003F56                     u2910:
  9142  003F56  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  9143  003F58  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  9144  003F5A  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  9145  003F5C  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  9146  003F5E  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  9147  003F60  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  9148  003F62  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  9149  003F64  6C15               	negf	___aodiv@quotient^0,c
  9150  003F66  0E00               	movlw	0
  9151  003F68  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  9152  003F6A  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  9153  003F6C  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  9154  003F6E  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  9155  003F70  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  9156  003F72  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  9157  003F74  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  9158  003F76                     l3565:
  9159  003F76  C015  F003         	movff	___aodiv@quotient,?___aodiv
  9160  003F7A  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  9161  003F7E  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  9162  003F82  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  9163  003F86  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  9164  003F8A  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  9165  003F8E  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  9166  003F92  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  9167  003F96  0012               	return		;funcret
  9168  003F98                     __end_of___aodiv:
  9169                           	callstack 0
  9170                           
  9171 ;; *************** function _sendStringSerial4 *****************
  9172 ;; Defined at:
  9173 ;;		line 36 in file "serial.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  string          2    3[COMRAM] PTR unsigned char 
  9176 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 3
  9195 ;; This function calls:
  9196 ;;		_sendCharSerial4
  9197 ;; This function is called by:
  9198 ;;		_color_display
  9199 ;;		_color_predict
  9200 ;;		_check_color_reading
  9201 ;; This function uses a non-reentrant model
  9202 ;;
  9203                           
  9204                           	psect	text37
  9205  005684                     __ptext37:
  9206                           	callstack 0
  9207  005684                     _sendStringSerial4:
  9208                           	callstack 26
  9209  005684                     
  9210                           ;serial.c: 38:     while(*string != 0){
  9211  005684  EF4D  F02B         	goto	l4395
  9212  005688                     l4391:
  9213                           
  9214                           ;serial.c: 39:   sendCharSerial4(*string++);}
  9215  005688  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  9216  00568C  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9217  005690  50DF               	movf	indf2,w,c
  9218  005692  EC3B  F02C         	call	_sendCharSerial4
  9219  005696  4A04               	infsnz	sendStringSerial4@string^0,f,c
  9220  005698  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  9221  00569A                     l4395:
  9222                           
  9223                           ;serial.c: 38:     while(*string != 0){
  9224  00569A  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  9225  00569E  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  9226  0056A2  50DF               	movf	indf2,w,c
  9227  0056A4  A4D8               	btfss	status,2,c
  9228  0056A6  EF57  F02B         	goto	u4261
  9229  0056AA  EF59  F02B         	goto	u4260
  9230  0056AE                     u4261:
  9231  0056AE  EF44  F02B         	goto	l4391
  9232  0056B2                     u4260:
  9233  0056B2  0012               	return		;funcret
  9234  0056B4                     __end_of_sendStringSerial4:
  9235                           	callstack 0
  9236                           
  9237 ;; *************** function _sendCharSerial4 *****************
  9238 ;; Defined at:
  9239 ;;		line 29 in file "serial.c"
  9240 ;; Parameters:    Size  Location     Type
  9241 ;;  charToSend      1    wreg     unsigned char 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;  charToSend      1    2[COMRAM] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        1 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 2
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_sendStringSerial4
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text38
  9268  005876                     __ptext38:
  9269                           	callstack 0
  9270  005876                     _sendCharSerial4:
  9271                           	callstack 26
  9272                           
  9273                           ;incstack = 0
  9274                           ;sendCharSerial4@charToSend stored from wreg
  9275  005876  6E03               	movwf	sendCharSerial4@charToSend^0,c
  9276  005878                     l453:
  9277  005878  010E               	movlb	14	; () banked
  9278  00587A  A537               	btfss	55,2,b	;volatile
  9279  00587C  EF42  F02C         	goto	u4081
  9280  005880  EF44  F02C         	goto	u4080
  9281  005884                     u4081:
  9282  005884  EF3C  F02C         	goto	l453
  9283  005888                     u4080:
  9284  005888                     
  9285                           ; BSR set to: 14
  9286                           ;serial.c: 31:     TX4REG = charToSend;
  9287  005888  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  9288  00588C                     
  9289                           ; BSR set to: 14
  9290  00588C  0012               	return		;funcret
  9291  00588E                     __end_of_sendCharSerial4:
  9292                           	callstack 0
  9293                           
  9294 ;; *************** function _color_click_init *****************
  9295 ;; Defined at:
  9296 ;;		line 65 in file "color.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      void 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9312 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9314 ;;Total ram usage:        1 bytes
  9315 ;; Hardware stack levels used: 1
  9316 ;; Hardware stack levels required when called: 5
  9317 ;; This function calls:
  9318 ;;		_I2C_2_Master_Init
  9319 ;;		_color_writetoaddr
  9320 ;; This function is called by:
  9321 ;;		_main
  9322 ;; This function uses a non-reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text39
  9326  005650                     __ptext39:
  9327                           	callstack 0
  9328  005650                     _color_click_init:
  9329                           	callstack 25
  9330  005650                     
  9331                           ;color.c: 68:     I2C_2_Master_Init();
  9332  005650  EC71  F02B         	call	_I2C_2_Master_Init	;wreg free
  9333  005654                     
  9334                           ;color.c: 71:  color_writetoaddr(0x00, 0x01);
  9335  005654  0E01               	movlw	1
  9336  005656  6E05               	movwf	color_writetoaddr@value^0,c
  9337  005658  0E00               	movlw	0
  9338  00565A  ECBD  F02B         	call	_color_writetoaddr
  9339  00565E                     
  9340                           ;color.c: 72:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9341  00565E  0E3F               	movlw	63
  9342  005660  6E07               	movwf	??_color_click_init^0,c
  9343  005662  0E55               	movlw	85
  9344  005664                     u6847:
  9345  005664  2EE8               	decfsz	wreg,f,c
  9346  005666  D7FE               	bra	u6847
  9347  005668  2E07               	decfsz	??_color_click_init^0,f,c
  9348  00566A  D7FC               	bra	u6847
  9349  00566C  F000               	nop	
  9350  00566E                     
  9351                           ;color.c: 75:  color_writetoaddr(0x00, 0x03);
  9352  00566E  0E03               	movlw	3
  9353  005670  6E05               	movwf	color_writetoaddr@value^0,c
  9354  005672  0E00               	movlw	0
  9355  005674  ECBD  F02B         	call	_color_writetoaddr
  9356  005678                     
  9357                           ;color.c: 78:  color_writetoaddr(0x01, 0xD5);
  9358  005678  0ED5               	movlw	213
  9359  00567A  6E05               	movwf	color_writetoaddr@value^0,c
  9360  00567C  0E01               	movlw	1
  9361  00567E  ECBD  F02B         	call	_color_writetoaddr
  9362  005682  0012               	return		;funcret
  9363  005684                     __end_of_color_click_init:
  9364                           	callstack 0
  9365                           
  9366 ;; *************** function _color_writetoaddr *****************
  9367 ;; Defined at:
  9368 ;;		line 81 in file "color.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;  address         1    wreg     unsigned char 
  9371 ;;  value           1    4[COMRAM] unsigned char 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  address         1    5[COMRAM] unsigned char 
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, status,2, status,0, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9383 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9384 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9387 ;;Total ram usage:        2 bytes
  9388 ;; Hardware stack levels used: 1
  9389 ;; Hardware stack levels required when called: 4
  9390 ;; This function calls:
  9391 ;;		_I2C_2_Master_Start
  9392 ;;		_I2C_2_Master_Stop
  9393 ;;		_I2C_2_Master_Write
  9394 ;; This function is called by:
  9395 ;;		_color_click_init
  9396 ;; This function uses a non-reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text40
  9400  00577A                     __ptext40:
  9401                           	callstack 0
  9402  00577A                     _color_writetoaddr:
  9403                           	callstack 25
  9404                           
  9405                           ;incstack = 0
  9406                           ;color_writetoaddr@address stored from wreg
  9407  00577A  6E06               	movwf	color_writetoaddr@address^0,c
  9408  00577C                     
  9409                           ;color.c: 82:     I2C_2_Master_Start();
  9410  00577C  EC63  F02C         	call	_I2C_2_Master_Start	;wreg free
  9411                           
  9412                           ;color.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  9413  005780  0E52               	movlw	82
  9414  005782  EC52  F02C         	call	_I2C_2_Master_Write
  9415                           
  9416                           ;color.c: 84:     I2C_2_Master_Write(0x80 | address);
  9417  005786  5006               	movf	color_writetoaddr@address^0,w,c
  9418  005788  0980               	iorlw	128
  9419  00578A  EC52  F02C         	call	_I2C_2_Master_Write
  9420                           
  9421                           ;color.c: 85:     I2C_2_Master_Write(value);
  9422  00578E  5005               	movf	color_writetoaddr@value^0,w,c
  9423  005790  EC52  F02C         	call	_I2C_2_Master_Write
  9424                           
  9425                           ;color.c: 86:     I2C_2_Master_Stop();
  9426  005794  EC5E  F02C         	call	_I2C_2_Master_Stop	;wreg free
  9427  005798  0012               	return		;funcret
  9428  00579A                     __end_of_color_writetoaddr:
  9429                           	callstack 0
  9430                           
  9431 ;; *************** function _I2C_2_Master_Init *****************
  9432 ;; Defined at:
  9433 ;;		line 4 in file "i2c.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;		None
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      void 
  9440 ;; Registers used:
  9441 ;;		wreg, status,2
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9451 ;;Total ram usage:        0 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; Hardware stack levels required when called: 2
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		_color_click_init
  9458 ;;		_main
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text41
  9463  0056E2                     __ptext41:
  9464                           	callstack 0
  9465  0056E2                     _I2C_2_Master_Init:
  9466                           	callstack 27
  9467  0056E2                     
  9468                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9469  0056E2  010E               	movlb	14	; () banked
  9470  0056E4  51D9               	movf	217,w,b	;volatile
  9471  0056E6  0BF0               	andlw	-16
  9472  0056E8  0908               	iorlw	8
  9473  0056EA  6FD9               	movwf	217,b	;volatile
  9474  0056EC                     
  9475                           ; BSR set to: 14
  9476                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9477  0056EC  8BD9               	bsf	217,5,b	;volatile
  9478                           
  9479                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9480  0056EE  0E9F               	movlw	159
  9481  0056F0  6FD6               	movwf	214,b	;volatile
  9482  0056F2                     
  9483                           ; BSR set to: 14
  9484                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9485  0056F2  8A84               	bsf	132,5,c	;volatile
  9486  0056F4                     
  9487                           ; BSR set to: 14
  9488                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9489  0056F4  8C84               	bsf	132,6,c	;volatile
  9490  0056F6                     
  9491                           ; BSR set to: 14
  9492                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9493  0056F6  9BA7               	bcf	167,5,b	;volatile
  9494  0056F8                     
  9495                           ; BSR set to: 14
  9496                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9497  0056F8  9DA7               	bcf	167,6,b	;volatile
  9498                           
  9499                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9500  0056FA  0E1D               	movlw	29
  9501  0056FC  6F1D               	movwf	29,b	;volatile
  9502                           
  9503                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9504  0056FE  0E1E               	movlw	30
  9505  005700  6F1C               	movwf	28,b	;volatile
  9506                           
  9507                           ;i2c.c: 18:   RD5PPS=0x1C;
  9508  005702  0E1C               	movlw	28
  9509  005704  6F6F               	movwf	111,b	;volatile
  9510                           
  9511                           ;i2c.c: 19:   RD6PPS=0x1B;
  9512  005706  0E1B               	movlw	27
  9513  005708  6F70               	movwf	112,b	;volatile
  9514  00570A                     
  9515                           ; BSR set to: 14
  9516  00570A  0012               	return		;funcret
  9517  00570C                     __end_of_I2C_2_Master_Init:
  9518                           	callstack 0
  9519                           
  9520 ;; *************** function _calibration *****************
  9521 ;; Defined at:
  9522 ;;		line 194 in file "dc_motor.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  mL              2   55[COMRAM] PTR struct DC_motor
  9525 ;;		 -> main@motorL(10), 
  9526 ;;  mR              2   57[COMRAM] PTR struct DC_motor
  9527 ;;		 -> main@motorR(10), 
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      void 
  9532 ;; Registers used:
  9533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;Total ram usage:        6 bytes
  9544 ;; Hardware stack levels used: 1
  9545 ;; Hardware stack levels required when called: 7
  9546 ;; This function calls:
  9547 ;;		_test_action
  9548 ;; This function is called by:
  9549 ;;		_main
  9550 ;; This function uses a non-reentrant model
  9551 ;;
  9552                           
  9553                           	psect	text42
  9554  00484E                     __ptext42:
  9555                           	callstack 0
  9556  00484E                     _calibration:
  9557                           	callstack 23
  9558  00484E                     l398:
  9559                           
  9560                           ;dc_motor.c: 197:         LATDbits.LATD7 = 1;
  9561  00484E  8E7C               	bsf	124,7,c	;volatile
  9562                           
  9563                           ;dc_motor.c: 198:         LATHbits.LATH3 = 1;
  9564  004850  8680               	bsf	128,3,c	;volatile
  9565                           
  9566                           ;dc_motor.c: 200:         if (!PORTFbits.RF2) {
  9567  004852  B48E               	btfsc	142,2,c	;volatile
  9568  004854  EF2E  F024         	goto	u5311
  9569  004858  EF30  F024         	goto	u5310
  9570  00485C                     u5311:
  9571  00485C  EF5A  F024         	goto	l399
  9572  004860                     u5310:
  9573  004860                     
  9574                           ;dc_motor.c: 201:             _delay((unsigned long)((300)*(64000000/4000.0)));
  9575  004860  0E19               	movlw	25
  9576  004862  6E3D               	movwf	(??_calibration+1)^0,c
  9577  004864  0E5A               	movlw	90
  9578  004866  6E3C               	movwf	??_calibration^0,c
  9579  004868  0EB2               	movlw	178
  9580  00486A                     u6857:
  9581  00486A  2EE8               	decfsz	wreg,f,c
  9582  00486C  D7FE               	bra	u6857
  9583  00486E  2E3C               	decfsz	??_calibration^0,f,c
  9584  004870  D7FC               	bra	u6857
  9585  004872  2E3D               	decfsz	(??_calibration+1)^0,f,c
  9586  004874  D7FA               	bra	u6857
  9587  004876                     
  9588                           ;dc_motor.c: 202:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay((unsigned l
      +                          ong)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  9589  004876  B48E               	btfsc	142,2,c	;volatile
  9590  004878  EF40  F024         	goto	u5321
  9591  00487C  EF42  F024         	goto	u5320
  9592  004880                     u5321:
  9593  004880  EF51  F024         	goto	l5149
  9594  004884                     u5320:
  9595  004884  9E7C               	bcf	124,7,c	;volatile
  9596  004886  0E19               	movlw	25
  9597  004888  6E3D               	movwf	(??_calibration+1)^0,c
  9598  00488A  0E5A               	movlw	90
  9599  00488C  6E3C               	movwf	??_calibration^0,c
  9600  00488E  0EB2               	movlw	178
  9601  004890                     u6867:
  9602  004890  2EE8               	decfsz	wreg,f,c
  9603  004892  D7FE               	bra	u6867
  9604  004894  2E3C               	decfsz	??_calibration^0,f,c
  9605  004896  D7FC               	bra	u6867
  9606  004898  2E3D               	decfsz	(??_calibration+1)^0,f,c
  9607  00489A  D7FA               	bra	u6867
  9608  00489C  0E05               	movlw	5
  9609  00489E  0100               	movlb	0	; () banked
  9610  0048A0  27FC               	addwf	_SENSITIVITY& (0+255),f,b
  9611  0048A2                     l5149:
  9612                           
  9613                           ;dc_motor.c: 203:             if (!PORTFbits.RF3){break;}
  9614  0048A2  B68E               	btfsc	142,3,c	;volatile
  9615  0048A4  EF56  F024         	goto	u5331
  9616  0048A8  EF58  F024         	goto	u5330
  9617  0048AC                     u5331:
  9618  0048AC  EF5A  F024         	goto	l399
  9619  0048B0                     u5330:
  9620  0048B0  EF8D  F024         	goto	l402
  9621  0048B4                     l399:
  9622                           
  9623                           ;dc_motor.c: 205:         if (!PORTFbits.RF3) {
  9624  0048B4  B68E               	btfsc	142,3,c	;volatile
  9625  0048B6  EF5F  F024         	goto	u5341
  9626  0048BA  EF61  F024         	goto	u5340
  9627  0048BE                     u5341:
  9628  0048BE  EF27  F024         	goto	l398
  9629  0048C2                     u5340:
  9630  0048C2                     
  9631                           ;dc_motor.c: 206:             _delay((unsigned long)((300)*(64000000/4000.0)));
  9632  0048C2  0E19               	movlw	25
  9633  0048C4  6E3D               	movwf	(??_calibration+1)^0,c
  9634  0048C6  0E5A               	movlw	90
  9635  0048C8  6E3C               	movwf	??_calibration^0,c
  9636  0048CA  0EB2               	movlw	178
  9637  0048CC                     u6877:
  9638  0048CC  2EE8               	decfsz	wreg,f,c
  9639  0048CE  D7FE               	bra	u6877
  9640  0048D0  2E3C               	decfsz	??_calibration^0,f,c
  9641  0048D2  D7FC               	bra	u6877
  9642  0048D4  2E3D               	decfsz	(??_calibration+1)^0,f,c
  9643  0048D6  D7FA               	bra	u6877
  9644  0048D8                     
  9645                           ;dc_motor.c: 207:             if (!PORTFbits.RF2){break;}
  9646  0048D8  B48E               	btfsc	142,2,c	;volatile
  9647  0048DA  EF71  F024         	goto	u5351
  9648  0048DE  EF73  F024         	goto	u5350
  9649  0048E2                     u5351:
  9650  0048E2  EF75  F024         	goto	l404
  9651  0048E6                     u5350:
  9652  0048E6  EF8D  F024         	goto	l402
  9653  0048EA                     l404:
  9654                           
  9655                           ;dc_motor.c: 208:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay((unsigned l
      +                          ong)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  9656  0048EA  B68E               	btfsc	142,3,c	;volatile
  9657  0048EC  EF7A  F024         	goto	u5361
  9658  0048F0  EF7C  F024         	goto	u5360
  9659  0048F4                     u5361:
  9660  0048F4  EF27  F024         	goto	l398
  9661  0048F8                     u5360:
  9662  0048F8  9680               	bcf	128,3,c	;volatile
  9663  0048FA  0E19               	movlw	25
  9664  0048FC  6E3D               	movwf	(??_calibration+1)^0,c
  9665  0048FE  0E5A               	movlw	90
  9666  004900  6E3C               	movwf	??_calibration^0,c
  9667  004902  0EB2               	movlw	178
  9668  004904                     u6887:
  9669  004904  2EE8               	decfsz	wreg,f,c
  9670  004906  D7FE               	bra	u6887
  9671  004908  2E3C               	decfsz	??_calibration^0,f,c
  9672  00490A  D7FC               	bra	u6887
  9673  00490C  2E3D               	decfsz	(??_calibration+1)^0,f,c
  9674  00490E  D7FA               	bra	u6887
  9675  004910  0E05               	movlw	5
  9676  004912  0100               	movlb	0	; () banked
  9677  004914  5FFC               	subwf	_SENSITIVITY& (0+255),f,b
  9678  004916  EF27  F024         	goto	l398
  9679  00491A                     l402:
  9680                           
  9681                           ;dc_motor.c: 211:     LATDbits.LATD7 = 0;
  9682  00491A  9E7C               	bcf	124,7,c	;volatile
  9683                           
  9684                           ;dc_motor.c: 212:     LATHbits.LATH3 = 0;
  9685  00491C  9680               	bcf	128,3,c	;volatile
  9686  00491E                     
  9687                           ;dc_motor.c: 213:     test_action(mL, mR);
  9688  00491E  C038  F034         	movff	calibration@mL,test_action@mL
  9689  004922  C039  F035         	movff	calibration@mL+1,test_action@mL+1
  9690  004926  C03A  F036         	movff	calibration@mR,test_action@mR
  9691  00492A  C03B  F037         	movff	calibration@mR+1,test_action@mR+1
  9692  00492E  ECAE  F023         	call	_test_action	;wreg free
  9693  004932  0012               	return		;funcret
  9694  004934                     __end_of_calibration:
  9695                           	callstack 0
  9696                           
  9697 ;; *************** function _test_action *****************
  9698 ;; Defined at:
  9699 ;;		line 78 in file "movement.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  mL              2   51[COMRAM] PTR struct DC_motor
  9702 ;;		 -> main@motorL(10), 
  9703 ;;  mR              2   53[COMRAM] PTR struct DC_motor
  9704 ;;		 -> main@motorR(10), 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9719 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9720 ;;Total ram usage:        4 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 6
  9723 ;; This function calls:
  9724 ;;		_fullSpeedAhead_test
  9725 ;;		_turnLeft
  9726 ;;		_turnRight
  9727 ;; This function is called by:
  9728 ;;		_calibration
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text43
  9733  00475C                     __ptext43:
  9734                           	callstack 0
  9735  00475C                     _test_action:
  9736                           	callstack 23
  9737  00475C                     
  9738                           ;movement.c: 78: void test_action (struct DC_motor *mL, struct DC_motor *mR);movement.c:
      +                           79: { fullSpeedAhead_test(mL,mR);
  9739  00475C  C034  F022         	movff	test_action@mL,fullSpeedAhead_test@mL
  9740  004760  C035  F023         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  9741  004764  C036  F024         	movff	test_action@mR,fullSpeedAhead_test@mR
  9742  004768  C037  F025         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  9743  00476C  EC13  F02A         	call	_fullSpeedAhead_test	;wreg free
  9744                           
  9745                           ;movement.c: 80:     turnLeft(mL,mR,90);
  9746  004770  C034  F022         	movff	test_action@mL,turnLeft@mL
  9747  004774  C035  F023         	movff	test_action@mL+1,turnLeft@mL+1
  9748  004778  C036  F024         	movff	test_action@mR,turnLeft@mR
  9749  00477C  C037  F025         	movff	test_action@mR+1,turnLeft@mR+1
  9750  004780  0E5A               	movlw	90
  9751  004782  6E26               	movwf	turnLeft@angle_left^0,c
  9752  004784  EC8C  F020         	call	_turnLeft	;wreg free
  9753                           
  9754                           ;movement.c: 81:     fullSpeedAhead_test(mL,mR);
  9755  004788  C034  F022         	movff	test_action@mL,fullSpeedAhead_test@mL
  9756  00478C  C035  F023         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  9757  004790  C036  F024         	movff	test_action@mR,fullSpeedAhead_test@mR
  9758  004794  C037  F025         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  9759  004798  EC13  F02A         	call	_fullSpeedAhead_test	;wreg free
  9760                           
  9761                           ;movement.c: 82:     turnLeft(mL,mR,90);
  9762  00479C  C034  F022         	movff	test_action@mL,turnLeft@mL
  9763  0047A0  C035  F023         	movff	test_action@mL+1,turnLeft@mL+1
  9764  0047A4  C036  F024         	movff	test_action@mR,turnLeft@mR
  9765  0047A8  C037  F025         	movff	test_action@mR+1,turnLeft@mR+1
  9766  0047AC  0E5A               	movlw	90
  9767  0047AE  6E26               	movwf	turnLeft@angle_left^0,c
  9768  0047B0  EC8C  F020         	call	_turnLeft	;wreg free
  9769                           
  9770                           ;movement.c: 83:     fullSpeedAhead_test(mL,mR);
  9771  0047B4  C034  F022         	movff	test_action@mL,fullSpeedAhead_test@mL
  9772  0047B8  C035  F023         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  9773  0047BC  C036  F024         	movff	test_action@mR,fullSpeedAhead_test@mR
  9774  0047C0  C037  F025         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  9775  0047C4  EC13  F02A         	call	_fullSpeedAhead_test	;wreg free
  9776                           
  9777                           ;movement.c: 84:     turnLeft(mL,mR,180);
  9778  0047C8  C034  F022         	movff	test_action@mL,turnLeft@mL
  9779  0047CC  C035  F023         	movff	test_action@mL+1,turnLeft@mL+1
  9780  0047D0  C036  F024         	movff	test_action@mR,turnLeft@mR
  9781  0047D4  C037  F025         	movff	test_action@mR+1,turnLeft@mR+1
  9782  0047D8  0EB4               	movlw	180
  9783  0047DA  6E26               	movwf	turnLeft@angle_left^0,c
  9784  0047DC  EC8C  F020         	call	_turnLeft	;wreg free
  9785                           
  9786                           ;movement.c: 85:     fullSpeedAhead_test(mL,mR);
  9787  0047E0  C034  F022         	movff	test_action@mL,fullSpeedAhead_test@mL
  9788  0047E4  C035  F023         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  9789  0047E8  C036  F024         	movff	test_action@mR,fullSpeedAhead_test@mR
  9790  0047EC  C037  F025         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  9791  0047F0  EC13  F02A         	call	_fullSpeedAhead_test	;wreg free
  9792                           
  9793                           ;movement.c: 86:     turnRight(mL,mR,90);
  9794  0047F4  C034  F022         	movff	test_action@mL,turnRight@mL
  9795  0047F8  C035  F023         	movff	test_action@mL+1,turnRight@mL+1
  9796  0047FC  C036  F024         	movff	test_action@mR,turnRight@mR
  9797  004800  C037  F025         	movff	test_action@mR+1,turnRight@mR+1
  9798  004804  0E5A               	movlw	90
  9799  004806  6E26               	movwf	turnRight@angle_right^0,c
  9800  004808  ECCC  F01F         	call	_turnRight	;wreg free
  9801                           
  9802                           ;movement.c: 87:     fullSpeedAhead_test(mL,mR);
  9803  00480C  C034  F022         	movff	test_action@mL,fullSpeedAhead_test@mL
  9804  004810  C035  F023         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  9805  004814  C036  F024         	movff	test_action@mR,fullSpeedAhead_test@mR
  9806  004818  C037  F025         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  9807  00481C  EC13  F02A         	call	_fullSpeedAhead_test	;wreg free
  9808                           
  9809                           ;movement.c: 88:     turnRight(mL,mR,90);
  9810  004820  C034  F022         	movff	test_action@mL,turnRight@mL
  9811  004824  C035  F023         	movff	test_action@mL+1,turnRight@mL+1
  9812  004828  C036  F024         	movff	test_action@mR,turnRight@mR
  9813  00482C  C037  F025         	movff	test_action@mR+1,turnRight@mR+1
  9814  004830  0E5A               	movlw	90
  9815  004832  6E26               	movwf	turnRight@angle_right^0,c
  9816  004834  ECCC  F01F         	call	_turnRight	;wreg free
  9817                           
  9818                           ;movement.c: 89:     fullSpeedAhead_test(mL,mR);
  9819  004838  C034  F022         	movff	test_action@mL,fullSpeedAhead_test@mL
  9820  00483C  C035  F023         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
  9821  004840  C036  F024         	movff	test_action@mR,fullSpeedAhead_test@mR
  9822  004844  C037  F025         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
  9823  004848  EC13  F02A         	call	_fullSpeedAhead_test	;wreg free
  9824  00484C  0012               	return		;funcret
  9825  00484E                     __end_of_test_action:
  9826                           	callstack 0
  9827                           
  9828 ;; *************** function _fullSpeedAhead_test *****************
  9829 ;; Defined at:
  9830 ;;		line 161 in file "dc_motor.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  9833 ;;		 -> main@motorL(10), 
  9834 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  9835 ;;		 -> main@motorR(10), 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;		None
  9838 ;; Return value:  Size  Location     Type
  9839 ;;                  1    wreg      void 
  9840 ;; Registers used:
  9841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9842 ;; Tracked objects:
  9843 ;;		On entry : 0/0
  9844 ;;		On exit  : 0/0
  9845 ;;		Unchanged: 0/0
  9846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9849 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9850 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9851 ;;Total ram usage:        6 bytes
  9852 ;; Hardware stack levels used: 1
  9853 ;; Hardware stack levels required when called: 5
  9854 ;; This function calls:
  9855 ;;		_fullSpeedAhead
  9856 ;;		_stop
  9857 ;; This function is called by:
  9858 ;;		_test_action
  9859 ;; This function uses a non-reentrant model
  9860 ;;
  9861                           
  9862                           	psect	text44
  9863  005426                     __ptext44:
  9864                           	callstack 0
  9865  005426                     _fullSpeedAhead_test:
  9866                           	callstack 23
  9867  005426                     
  9868                           ;dc_motor.c: 161: void fullSpeedAhead_test(struct DC_motor *mL, struct DC_motor *mR);dc_
      +                          motor.c: 162: { fullSpeedAhead(mL, mR);
  9869  005426  C022  F01C         	movff	fullSpeedAhead_test@mL,fullSpeedAhead@mL
  9870  00542A  C023  F01D         	movff	fullSpeedAhead_test@mL+1,fullSpeedAhead@mL+1
  9871  00542E  C024  F01E         	movff	fullSpeedAhead_test@mR,fullSpeedAhead@mR
  9872  005432  C025  F01F         	movff	fullSpeedAhead_test@mR+1,fullSpeedAhead@mR+1
  9873  005436  ECB0  F027         	call	_fullSpeedAhead	;wreg free
  9874  00543A                     
  9875                           ;dc_motor.c: 163:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9876  00543A  0E29               	movlw	41
  9877  00543C  6E27               	movwf	(??_fullSpeedAhead_test+1)^0,c
  9878  00543E  0E96               	movlw	150
  9879  005440  6E26               	movwf	??_fullSpeedAhead_test^0,c
  9880  005442  0E7F               	movlw	127
  9881  005444                     u6897:
  9882  005444  2EE8               	decfsz	wreg,f,c
  9883  005446  D7FE               	bra	u6897
  9884  005448  2E26               	decfsz	??_fullSpeedAhead_test^0,f,c
  9885  00544A  D7FC               	bra	u6897
  9886  00544C  2E27               	decfsz	(??_fullSpeedAhead_test+1)^0,f,c
  9887  00544E  D7FA               	bra	u6897
  9888  005450  F000               	nop	
  9889  005452                     
  9890                           ;dc_motor.c: 164:     stop(mL,mR);
  9891  005452  C022  F01C         	movff	fullSpeedAhead_test@mL,stop@mL
  9892  005456  C023  F01D         	movff	fullSpeedAhead_test@mL+1,stop@mL+1
  9893  00545A  C024  F01E         	movff	fullSpeedAhead_test@mR,stop@mR
  9894  00545E  C025  F01F         	movff	fullSpeedAhead_test@mR+1,stop@mR+1
  9895  005462  ECFC  F026         	call	_stop	;wreg free
  9896  005466  0012               	return		;funcret
  9897  005468                     __end_of_fullSpeedAhead_test:
  9898                           	callstack 0
  9899                           
  9900 ;; *************** function _calibrate_white *****************
  9901 ;; Defined at:
  9902 ;;		line 256 in file "color.c"
  9903 ;; Parameters:    Size  Location     Type
  9904 ;;  w               2   13[COMRAM] PTR struct white_card
  9905 ;;		 -> main@white(26), 
  9906 ;; Auto vars:     Size  Location     Type
  9907 ;;		None
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  1    wreg      void 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9921 ;;Total ram usage:        4 bytes
  9922 ;; Hardware stack levels used: 1
  9923 ;; Hardware stack levels required when called: 5
  9924 ;; This function calls:
  9925 ;;		_LED_B
  9926 ;;		_LED_C
  9927 ;;		_LED_G
  9928 ;;		_LED_R
  9929 ;;		_color_read_Blue
  9930 ;;		_color_read_Clear
  9931 ;;		_color_read_Green
  9932 ;;		_color_read_Red
  9933 ;; This function is called by:
  9934 ;;		_main
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text45
  9939  003C6A                     __ptext45:
  9940                           	callstack 0
  9941  003C6A                     _calibrate_white:
  9942                           	callstack 25
  9943  003C6A                     
  9944                           ;color.c: 256: void calibrate_white(struct white_card *w);color.c: 257: {;color.c: 258: 
      +                              LED_R();
  9945  003C6A  ECCD  F02B         	call	_LED_R	;wreg free
  9946  003C6E                     
  9947                           ;color.c: 260:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  9948  003C6E  ECE7  F028         	call	_color_read_Red	;wreg free
  9949  003C72  C00E  FFD9         	movff	calibrate_white@w,fsr2l
  9950  003C76  C00F  FFDA         	movff	calibrate_white@w+1,fsr2h
  9951  003C7A  C007  FFDE         	movff	?_color_read_Red,postinc2
  9952  003C7E  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  9953  003C82  EC0F  F029         	call	_color_read_Green	;wreg free
  9954  003C86  EE20 F002          	lfsr	2,2
  9955  003C8A  500E               	movf	calibrate_white@w^0,w,c
  9956  003C8C  26D9               	addwf	fsr2l,f,c
  9957  003C8E  500F               	movf	(calibrate_white@w+1)^0,w,c
  9958  003C90  22DA               	addwfc	fsr2h,f,c
  9959  003C92  C007  FFDE         	movff	?_color_read_Green,postinc2
  9960  003C96  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  9961  003C9A  EC5F  F029         	call	_color_read_Blue	;wreg free
  9962  003C9E  EE20 F004          	lfsr	2,4
  9963  003CA2  500E               	movf	calibrate_white@w^0,w,c
  9964  003CA4  26D9               	addwf	fsr2l,f,c
  9965  003CA6  500F               	movf	(calibrate_white@w+1)^0,w,c
  9966  003CA8  22DA               	addwfc	fsr2h,f,c
  9967  003CAA  C007  FFDE         	movff	?_color_read_Blue,postinc2
  9968  003CAE  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  9969  003CB2                     
  9970                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9971  003CB2  0E09               	movlw	9
  9972  003CB4  6E11               	movwf	(??_calibrate_white+1)^0,c
  9973  003CB6  0E1E               	movlw	30
  9974  003CB8  6E10               	movwf	??_calibrate_white^0,c
  9975  003CBA  0EE4               	movlw	228
  9976  003CBC                     u6907:
  9977  003CBC  2EE8               	decfsz	wreg,f,c
  9978  003CBE  D7FE               	bra	u6907
  9979  003CC0  2E10               	decfsz	??_calibrate_white^0,f,c
  9980  003CC2  D7FC               	bra	u6907
  9981  003CC4  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  9982  003CC6  D7FA               	bra	u6907
  9983  003CC8  D000               	nop2	
  9984  003CCA                     
  9985                           ;color.c: 263:     LED_G();
  9986  003CCA  ECDD  F02B         	call	_LED_G	;wreg free
  9987  003CCE                     
  9988                           ;color.c: 265:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9989  003CCE  ECE7  F028         	call	_color_read_Red	;wreg free
  9990  003CD2  EE20 F006          	lfsr	2,6
  9991  003CD6  500E               	movf	calibrate_white@w^0,w,c
  9992  003CD8  26D9               	addwf	fsr2l,f,c
  9993  003CDA  500F               	movf	(calibrate_white@w+1)^0,w,c
  9994  003CDC  22DA               	addwfc	fsr2h,f,c
  9995  003CDE  C007  FFDE         	movff	?_color_read_Red,postinc2
  9996  003CE2  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  9997  003CE6  EC0F  F029         	call	_color_read_Green	;wreg free
  9998  003CEA  EE20 F008          	lfsr	2,8
  9999  003CEE  500E               	movf	calibrate_white@w^0,w,c
 10000  003CF0  26D9               	addwf	fsr2l,f,c
 10001  003CF2  500F               	movf	(calibrate_white@w+1)^0,w,c
 10002  003CF4  22DA               	addwfc	fsr2h,f,c
 10003  003CF6  C007  FFDE         	movff	?_color_read_Green,postinc2
 10004  003CFA  C008  FFDD         	movff	?_color_read_Green+1,postdec2
 10005  003CFE  EC5F  F029         	call	_color_read_Blue	;wreg free
 10006  003D02  EE20 F00A          	lfsr	2,10
 10007  003D06  500E               	movf	calibrate_white@w^0,w,c
 10008  003D08  26D9               	addwf	fsr2l,f,c
 10009  003D0A  500F               	movf	(calibrate_white@w+1)^0,w,c
 10010  003D0C  22DA               	addwfc	fsr2h,f,c
 10011  003D0E  C007  FFDE         	movff	?_color_read_Blue,postinc2
 10012  003D12  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
 10013                           
 10014                           ;color.c: 267:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10015  003D16  0E09               	movlw	9
 10016  003D18  6E11               	movwf	(??_calibrate_white+1)^0,c
 10017  003D1A  0E1E               	movlw	30
 10018  003D1C  6E10               	movwf	??_calibrate_white^0,c
 10019  003D1E  0EE4               	movlw	228
 10020  003D20                     u6917:
 10021  003D20  2EE8               	decfsz	wreg,f,c
 10022  003D22  D7FE               	bra	u6917
 10023  003D24  2E10               	decfsz	??_calibrate_white^0,f,c
 10024  003D26  D7FC               	bra	u6917
 10025  003D28  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
 10026  003D2A  D7FA               	bra	u6917
 10027  003D2C  D000               	nop2	
 10028  003D2E                     
 10029                           ;color.c: 269:     LED_B();
 10030  003D2E  ECFD  F02B         	call	_LED_B	;wreg free
 10031  003D32                     
 10032                           ;color.c: 271:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
 10033  003D32  ECE7  F028         	call	_color_read_Red	;wreg free
 10034  003D36  EE20 F00C          	lfsr	2,12
 10035  003D3A  500E               	movf	calibrate_white@w^0,w,c
 10036  003D3C  26D9               	addwf	fsr2l,f,c
 10037  003D3E  500F               	movf	(calibrate_white@w+1)^0,w,c
 10038  003D40  22DA               	addwfc	fsr2h,f,c
 10039  003D42  C007  FFDE         	movff	?_color_read_Red,postinc2
 10040  003D46  C008  FFDD         	movff	?_color_read_Red+1,postdec2
 10041  003D4A  EC0F  F029         	call	_color_read_Green	;wreg free
 10042  003D4E  EE20 F00E          	lfsr	2,14
 10043  003D52  500E               	movf	calibrate_white@w^0,w,c
 10044  003D54  26D9               	addwf	fsr2l,f,c
 10045  003D56  500F               	movf	(calibrate_white@w+1)^0,w,c
 10046  003D58  22DA               	addwfc	fsr2h,f,c
 10047  003D5A  C007  FFDE         	movff	?_color_read_Green,postinc2
 10048  003D5E  C008  FFDD         	movff	?_color_read_Green+1,postdec2
 10049  003D62  EC5F  F029         	call	_color_read_Blue	;wreg free
 10050  003D66  EE20 F010          	lfsr	2,16
 10051  003D6A  500E               	movf	calibrate_white@w^0,w,c
 10052  003D6C  26D9               	addwf	fsr2l,f,c
 10053  003D6E  500F               	movf	(calibrate_white@w+1)^0,w,c
 10054  003D70  22DA               	addwfc	fsr2h,f,c
 10055  003D72  C007  FFDE         	movff	?_color_read_Blue,postinc2
 10056  003D76  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
 10057  003D7A                     
 10058                           ;color.c: 272:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10059  003D7A  0E09               	movlw	9
 10060  003D7C  6E11               	movwf	(??_calibrate_white+1)^0,c
 10061  003D7E  0E1E               	movlw	30
 10062  003D80  6E10               	movwf	??_calibrate_white^0,c
 10063  003D82  0EE4               	movlw	228
 10064  003D84                     u6927:
 10065  003D84  2EE8               	decfsz	wreg,f,c
 10066  003D86  D7FE               	bra	u6927
 10067  003D88  2E10               	decfsz	??_calibrate_white^0,f,c
 10068  003D8A  D7FC               	bra	u6927
 10069  003D8C  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
 10070  003D8E  D7FA               	bra	u6927
 10071  003D90  D000               	nop2	
 10072  003D92                     
 10073                           ;color.c: 274:     LED_C();
 10074  003D92  ECED  F02B         	call	_LED_C	;wreg free
 10075                           
 10076                           ;color.c: 275:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
 10077  003D96  ECE7  F028         	call	_color_read_Red	;wreg free
 10078  003D9A  EE20 F012          	lfsr	2,18
 10079  003D9E  500E               	movf	calibrate_white@w^0,w,c
 10080  003DA0  26D9               	addwf	fsr2l,f,c
 10081  003DA2  500F               	movf	(calibrate_white@w+1)^0,w,c
 10082  003DA4  22DA               	addwfc	fsr2h,f,c
 10083  003DA6  C007  FFDE         	movff	?_color_read_Red,postinc2
 10084  003DAA  C008  FFDD         	movff	?_color_read_Red+1,postdec2
 10085  003DAE  EC0F  F029         	call	_color_read_Green	;wreg free
 10086  003DB2  EE20 F014          	lfsr	2,20
 10087  003DB6  500E               	movf	calibrate_white@w^0,w,c
 10088  003DB8  26D9               	addwf	fsr2l,f,c
 10089  003DBA  500F               	movf	(calibrate_white@w+1)^0,w,c
 10090  003DBC  22DA               	addwfc	fsr2h,f,c
 10091  003DBE  C007  FFDE         	movff	?_color_read_Green,postinc2
 10092  003DC2  C008  FFDD         	movff	?_color_read_Green+1,postdec2
 10093  003DC6  EC5F  F029         	call	_color_read_Blue	;wreg free
 10094  003DCA  EE20 F016          	lfsr	2,22
 10095  003DCE  500E               	movf	calibrate_white@w^0,w,c
 10096  003DD0  26D9               	addwf	fsr2l,f,c
 10097  003DD2  500F               	movf	(calibrate_white@w+1)^0,w,c
 10098  003DD4  22DA               	addwfc	fsr2h,f,c
 10099  003DD6  C007  FFDE         	movff	?_color_read_Blue,postinc2
 10100  003DDA  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
 10101  003DDE  EC37  F029         	call	_color_read_Clear	;wreg free
 10102  003DE2  EE20 F018          	lfsr	2,24
 10103  003DE6  500E               	movf	calibrate_white@w^0,w,c
 10104  003DE8  26D9               	addwf	fsr2l,f,c
 10105  003DEA  500F               	movf	(calibrate_white@w+1)^0,w,c
 10106  003DEC  22DA               	addwfc	fsr2h,f,c
 10107  003DEE  C007  FFDE         	movff	?_color_read_Clear,postinc2
 10108  003DF2  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
 10109  003DF6                     
 10110                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
 10111  003DF6  0E09               	movlw	9
 10112  003DF8  6E11               	movwf	(??_calibrate_white+1)^0,c
 10113  003DFA  0E1E               	movlw	30
 10114  003DFC  6E10               	movwf	??_calibrate_white^0,c
 10115  003DFE  0EE4               	movlw	228
 10116  003E00                     u6937:
 10117  003E00  2EE8               	decfsz	wreg,f,c
 10118  003E02  D7FE               	bra	u6937
 10119  003E04  2E10               	decfsz	??_calibrate_white^0,f,c
 10120  003E06  D7FC               	bra	u6937
 10121  003E08  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
 10122  003E0A  D7FA               	bra	u6937
 10123  003E0C  D000               	nop2	
 10124  003E0E  0012               	return		;funcret
 10125  003E10                     __end_of_calibrate_white:
 10126                           	callstack 0
 10127                           
 10128 ;; *************** function _color_read_Red *****************
 10129 ;; Defined at:
 10130 ;;		line 89 in file "color.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  tmp             2   11[COMRAM] unsigned int 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  2    6[COMRAM] unsigned int 
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0, cstack
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10146 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10148 ;;Total ram usage:        7 bytes
 10149 ;; Hardware stack levels used: 1
 10150 ;; Hardware stack levels required when called: 4
 10151 ;; This function calls:
 10152 ;;		_I2C_2_Master_Read
 10153 ;;		_I2C_2_Master_RepStart
 10154 ;;		_I2C_2_Master_Start
 10155 ;;		_I2C_2_Master_Stop
 10156 ;;		_I2C_2_Master_Write
 10157 ;; This function is called by:
 10158 ;;		_read_color
 10159 ;;		_calibrate_white
 10160 ;; This function uses a non-reentrant model
 10161 ;;
 10162                           
 10163                           	psect	text46
 10164  0051CE                     __ptext46:
 10165                           	callstack 0
 10166  0051CE                     _color_read_Red:
 10167                           	callstack 23
 10168  0051CE                     
 10169                           ;color.c: 91:  unsigned int tmp;;color.c: 92:  I2C_2_Master_Start();
 10170  0051CE  EC63  F02C         	call	_I2C_2_Master_Start	;wreg free
 10171                           
 10172                           ;color.c: 93:  I2C_2_Master_Write(0x52 | 0x00);
 10173  0051D2  0E52               	movlw	82
 10174  0051D4  EC52  F02C         	call	_I2C_2_Master_Write
 10175                           
 10176                           ;color.c: 94:  I2C_2_Master_Write(0xA0 | 0x16);
 10177  0051D8  0EB6               	movlw	182
 10178  0051DA  EC52  F02C         	call	_I2C_2_Master_Write
 10179                           
 10180                           ;color.c: 95:  I2C_2_Master_RepStart();
 10181  0051DE  EC68  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 10182                           
 10183                           ;color.c: 96:  I2C_2_Master_Write(0x52 | 0x01);
 10184  0051E2  0E53               	movlw	83
 10185  0051E4  EC52  F02C         	call	_I2C_2_Master_Write
 10186                           
 10187                           ;color.c: 97:  tmp=I2C_2_Master_Read(1);
 10188  0051E8  0E01               	movlw	1
 10189  0051EA  EC34  F02A         	call	_I2C_2_Master_Read
 10190  0051EE  6E09               	movwf	??_color_read_Red^0,c
 10191  0051F0  5009               	movf	??_color_read_Red^0,w,c
 10192  0051F2  6E0C               	movwf	color_read_Red@tmp^0,c
 10193  0051F4  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
 10194                           
 10195                           ;color.c: 98:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10196  0051F6  0E00               	movlw	0
 10197  0051F8  EC34  F02A         	call	_I2C_2_Master_Read
 10198  0051FC  6E09               	movwf	??_color_read_Red^0,c
 10199  0051FE  5009               	movf	??_color_read_Red^0,w,c
 10200  005200  6E0B               	movwf	(??_color_read_Red+2)^0,c
 10201  005202  6A0A               	clrf	(??_color_read_Red+1)^0,c
 10202  005204  500C               	movf	color_read_Red@tmp^0,w,c
 10203  005206  100A               	iorwf	(??_color_read_Red+1)^0,w,c
 10204  005208  6E0C               	movwf	color_read_Red@tmp^0,c
 10205  00520A  500D               	movf	(color_read_Red@tmp+1)^0,w,c
 10206  00520C  100B               	iorwf	(??_color_read_Red+2)^0,w,c
 10207  00520E  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
 10208                           
 10209                           ;color.c: 99:  I2C_2_Master_Stop();
 10210  005210  EC5E  F02C         	call	_I2C_2_Master_Stop	;wreg free
 10211  005214                     
 10212                           ;color.c: 100:  return tmp;
 10213  005214  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
 10214  005218  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
 10215  00521C  0012               	return		;funcret
 10216  00521E                     __end_of_color_read_Red:
 10217                           	callstack 0
 10218                           
 10219 ;; *************** function _color_read_Green *****************
 10220 ;; Defined at:
 10221 ;;		line 117 in file "color.c"
 10222 ;; Parameters:    Size  Location     Type
 10223 ;;		None
 10224 ;; Auto vars:     Size  Location     Type
 10225 ;;  tmp             2   11[COMRAM] unsigned int 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  2    6[COMRAM] unsigned int 
 10228 ;; Registers used:
 10229 ;;		wreg, status,2, status,0, cstack
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10235 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10237 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10238 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10239 ;;Total ram usage:        7 bytes
 10240 ;; Hardware stack levels used: 1
 10241 ;; Hardware stack levels required when called: 4
 10242 ;; This function calls:
 10243 ;;		_I2C_2_Master_Read
 10244 ;;		_I2C_2_Master_RepStart
 10245 ;;		_I2C_2_Master_Start
 10246 ;;		_I2C_2_Master_Stop
 10247 ;;		_I2C_2_Master_Write
 10248 ;; This function is called by:
 10249 ;;		_read_color
 10250 ;;		_calibrate_white
 10251 ;;		_distance_measure
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           	psect	text47
 10256  00521E                     __ptext47:
 10257                           	callstack 0
 10258  00521E                     _color_read_Green:
 10259                           	callstack 23
 10260  00521E                     
 10261                           ;color.c: 119:  unsigned int tmp;;color.c: 120:  I2C_2_Master_Start();
 10262  00521E  EC63  F02C         	call	_I2C_2_Master_Start	;wreg free
 10263                           
 10264                           ;color.c: 121:  I2C_2_Master_Write(0x52 | 0x00);
 10265  005222  0E52               	movlw	82
 10266  005224  EC52  F02C         	call	_I2C_2_Master_Write
 10267                           
 10268                           ;color.c: 122:  I2C_2_Master_Write(0xA0 | 0x18);
 10269  005228  0EB8               	movlw	184
 10270  00522A  EC52  F02C         	call	_I2C_2_Master_Write
 10271                           
 10272                           ;color.c: 123:  I2C_2_Master_RepStart();
 10273  00522E  EC68  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 10274                           
 10275                           ;color.c: 124:  I2C_2_Master_Write(0x52 | 0x01);
 10276  005232  0E53               	movlw	83
 10277  005234  EC52  F02C         	call	_I2C_2_Master_Write
 10278                           
 10279                           ;color.c: 125:  tmp=I2C_2_Master_Read(1);
 10280  005238  0E01               	movlw	1
 10281  00523A  EC34  F02A         	call	_I2C_2_Master_Read
 10282  00523E  6E09               	movwf	??_color_read_Green^0,c
 10283  005240  5009               	movf	??_color_read_Green^0,w,c
 10284  005242  6E0C               	movwf	color_read_Green@tmp^0,c
 10285  005244  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
 10286                           
 10287                           ;color.c: 126:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10288  005246  0E00               	movlw	0
 10289  005248  EC34  F02A         	call	_I2C_2_Master_Read
 10290  00524C  6E09               	movwf	??_color_read_Green^0,c
 10291  00524E  5009               	movf	??_color_read_Green^0,w,c
 10292  005250  6E0B               	movwf	(??_color_read_Green+2)^0,c
 10293  005252  6A0A               	clrf	(??_color_read_Green+1)^0,c
 10294  005254  500C               	movf	color_read_Green@tmp^0,w,c
 10295  005256  100A               	iorwf	(??_color_read_Green+1)^0,w,c
 10296  005258  6E0C               	movwf	color_read_Green@tmp^0,c
 10297  00525A  500D               	movf	(color_read_Green@tmp+1)^0,w,c
 10298  00525C  100B               	iorwf	(??_color_read_Green+2)^0,w,c
 10299  00525E  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
 10300                           
 10301                           ;color.c: 127:  I2C_2_Master_Stop();
 10302  005260  EC5E  F02C         	call	_I2C_2_Master_Stop	;wreg free
 10303  005264                     
 10304                           ;color.c: 128:  return tmp;
 10305  005264  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
 10306  005268  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
 10307  00526C  0012               	return		;funcret
 10308  00526E                     __end_of_color_read_Green:
 10309                           	callstack 0
 10310                           
 10311 ;; *************** function _color_read_Clear *****************
 10312 ;; Defined at:
 10313 ;;		line 131 in file "color.c"
 10314 ;; Parameters:    Size  Location     Type
 10315 ;;		None
 10316 ;; Auto vars:     Size  Location     Type
 10317 ;;  tmp             2   11[COMRAM] unsigned int 
 10318 ;; Return value:  Size  Location     Type
 10319 ;;                  2    6[COMRAM] unsigned int 
 10320 ;; Registers used:
 10321 ;;		wreg, status,2, status,0, cstack
 10322 ;; Tracked objects:
 10323 ;;		On entry : 0/0
 10324 ;;		On exit  : 0/0
 10325 ;;		Unchanged: 0/0
 10326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10327 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10329 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10330 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10331 ;;Total ram usage:        7 bytes
 10332 ;; Hardware stack levels used: 1
 10333 ;; Hardware stack levels required when called: 4
 10334 ;; This function calls:
 10335 ;;		_I2C_2_Master_Read
 10336 ;;		_I2C_2_Master_RepStart
 10337 ;;		_I2C_2_Master_Start
 10338 ;;		_I2C_2_Master_Stop
 10339 ;;		_I2C_2_Master_Write
 10340 ;; This function is called by:
 10341 ;;		_read_color
 10342 ;;		_calibrate_white
 10343 ;;		_distance_measure
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text48
 10348  00526E                     __ptext48:
 10349                           	callstack 0
 10350  00526E                     _color_read_Clear:
 10351                           	callstack 23
 10352  00526E                     
 10353                           ;color.c: 133:  unsigned int tmp;;color.c: 134:  I2C_2_Master_Start();
 10354  00526E  EC63  F02C         	call	_I2C_2_Master_Start	;wreg free
 10355                           
 10356                           ;color.c: 135:  I2C_2_Master_Write(0x52 | 0x00);
 10357  005272  0E52               	movlw	82
 10358  005274  EC52  F02C         	call	_I2C_2_Master_Write
 10359                           
 10360                           ;color.c: 136:  I2C_2_Master_Write(0xA0 | 0x14);
 10361  005278  0EB4               	movlw	180
 10362  00527A  EC52  F02C         	call	_I2C_2_Master_Write
 10363                           
 10364                           ;color.c: 137:  I2C_2_Master_RepStart();
 10365  00527E  EC68  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 10366                           
 10367                           ;color.c: 138:  I2C_2_Master_Write(0x52 | 0x01);
 10368  005282  0E53               	movlw	83
 10369  005284  EC52  F02C         	call	_I2C_2_Master_Write
 10370                           
 10371                           ;color.c: 139:  tmp=I2C_2_Master_Read(1);
 10372  005288  0E01               	movlw	1
 10373  00528A  EC34  F02A         	call	_I2C_2_Master_Read
 10374  00528E  6E09               	movwf	??_color_read_Clear^0,c
 10375  005290  5009               	movf	??_color_read_Clear^0,w,c
 10376  005292  6E0C               	movwf	color_read_Clear@tmp^0,c
 10377  005294  6A0D               	clrf	(color_read_Clear@tmp+1)^0,c
 10378                           
 10379                           ;color.c: 140:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10380  005296  0E00               	movlw	0
 10381  005298  EC34  F02A         	call	_I2C_2_Master_Read
 10382  00529C  6E09               	movwf	??_color_read_Clear^0,c
 10383  00529E  5009               	movf	??_color_read_Clear^0,w,c
 10384  0052A0  6E0B               	movwf	(??_color_read_Clear+2)^0,c
 10385  0052A2  6A0A               	clrf	(??_color_read_Clear+1)^0,c
 10386  0052A4  500C               	movf	color_read_Clear@tmp^0,w,c
 10387  0052A6  100A               	iorwf	(??_color_read_Clear+1)^0,w,c
 10388  0052A8  6E0C               	movwf	color_read_Clear@tmp^0,c
 10389  0052AA  500D               	movf	(color_read_Clear@tmp+1)^0,w,c
 10390  0052AC  100B               	iorwf	(??_color_read_Clear+2)^0,w,c
 10391  0052AE  6E0D               	movwf	(color_read_Clear@tmp+1)^0,c
 10392                           
 10393                           ;color.c: 141:  I2C_2_Master_Stop();
 10394  0052B0  EC5E  F02C         	call	_I2C_2_Master_Stop	;wreg free
 10395  0052B4                     
 10396                           ;color.c: 142:  return tmp;
 10397  0052B4  C00C  F007         	movff	color_read_Clear@tmp,?_color_read_Clear
 10398  0052B8  C00D  F008         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 10399  0052BC  0012               	return		;funcret
 10400  0052BE                     __end_of_color_read_Clear:
 10401                           	callstack 0
 10402                           
 10403 ;; *************** function _color_read_Blue *****************
 10404 ;; Defined at:
 10405 ;;		line 103 in file "color.c"
 10406 ;; Parameters:    Size  Location     Type
 10407 ;;		None
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;  tmp             2   11[COMRAM] unsigned int 
 10410 ;; Return value:  Size  Location     Type
 10411 ;;                  2    6[COMRAM] unsigned int 
 10412 ;; Registers used:
 10413 ;;		wreg, status,2, status,0, cstack
 10414 ;; Tracked objects:
 10415 ;;		On entry : 0/0
 10416 ;;		On exit  : 0/0
 10417 ;;		Unchanged: 0/0
 10418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10419 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10423 ;;Total ram usage:        7 bytes
 10424 ;; Hardware stack levels used: 1
 10425 ;; Hardware stack levels required when called: 4
 10426 ;; This function calls:
 10427 ;;		_I2C_2_Master_Read
 10428 ;;		_I2C_2_Master_RepStart
 10429 ;;		_I2C_2_Master_Start
 10430 ;;		_I2C_2_Master_Stop
 10431 ;;		_I2C_2_Master_Write
 10432 ;; This function is called by:
 10433 ;;		_read_color
 10434 ;;		_calibrate_white
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           	psect	text49
 10439  0052BE                     __ptext49:
 10440                           	callstack 0
 10441  0052BE                     _color_read_Blue:
 10442                           	callstack 23
 10443  0052BE                     
 10444                           ;color.c: 105:  unsigned int tmp;;color.c: 106:  I2C_2_Master_Start();
 10445  0052BE  EC63  F02C         	call	_I2C_2_Master_Start	;wreg free
 10446                           
 10447                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
 10448  0052C2  0E52               	movlw	82
 10449  0052C4  EC52  F02C         	call	_I2C_2_Master_Write
 10450                           
 10451                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x1A);
 10452  0052C8  0EBA               	movlw	186
 10453  0052CA  EC52  F02C         	call	_I2C_2_Master_Write
 10454                           
 10455                           ;color.c: 109:  I2C_2_Master_RepStart();
 10456  0052CE  EC68  F02C         	call	_I2C_2_Master_RepStart	;wreg free
 10457                           
 10458                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
 10459  0052D2  0E53               	movlw	83
 10460  0052D4  EC52  F02C         	call	_I2C_2_Master_Write
 10461                           
 10462                           ;color.c: 111:  tmp=I2C_2_Master_Read(1);
 10463  0052D8  0E01               	movlw	1
 10464  0052DA  EC34  F02A         	call	_I2C_2_Master_Read
 10465  0052DE  6E09               	movwf	??_color_read_Blue^0,c
 10466  0052E0  5009               	movf	??_color_read_Blue^0,w,c
 10467  0052E2  6E0C               	movwf	color_read_Blue@tmp^0,c
 10468  0052E4  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
 10469                           
 10470                           ;color.c: 112:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 10471  0052E6  0E00               	movlw	0
 10472  0052E8  EC34  F02A         	call	_I2C_2_Master_Read
 10473  0052EC  6E09               	movwf	??_color_read_Blue^0,c
 10474  0052EE  5009               	movf	??_color_read_Blue^0,w,c
 10475  0052F0  6E0B               	movwf	(??_color_read_Blue+2)^0,c
 10476  0052F2  6A0A               	clrf	(??_color_read_Blue+1)^0,c
 10477  0052F4  500C               	movf	color_read_Blue@tmp^0,w,c
 10478  0052F6  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
 10479  0052F8  6E0C               	movwf	color_read_Blue@tmp^0,c
 10480  0052FA  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
 10481  0052FC  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
 10482  0052FE  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
 10483                           
 10484                           ;color.c: 113:  I2C_2_Master_Stop();
 10485  005300  EC5E  F02C         	call	_I2C_2_Master_Stop	;wreg free
 10486  005304                     
 10487                           ;color.c: 114:  return tmp;
 10488  005304  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
 10489  005308  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
 10490  00530C  0012               	return		;funcret
 10491  00530E                     __end_of_color_read_Blue:
 10492                           	callstack 0
 10493                           
 10494 ;; *************** function _I2C_2_Master_Write *****************
 10495 ;; Defined at:
 10496 ;;		line 45 in file "i2c.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  data_byte       1    wreg     unsigned char 
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;  data_byte       1    3[COMRAM] unsigned char 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  1    wreg      void 
 10503 ;; Registers used:
 10504 ;;		wreg, status,2, status,0, cstack
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10514 ;;Total ram usage:        1 bytes
 10515 ;; Hardware stack levels used: 1
 10516 ;; Hardware stack levels required when called: 3
 10517 ;; This function calls:
 10518 ;;		_I2C_2_Master_Idle
 10519 ;; This function is called by:
 10520 ;;		_color_writetoaddr
 10521 ;;		_color_read_Red
 10522 ;;		_color_read_Blue
 10523 ;;		_color_read_Green
 10524 ;;		_color_read_Clear
 10525 ;; This function uses a non-reentrant model
 10526 ;;
 10527                           
 10528                           	psect	text50
 10529  0058A4                     __ptext50:
 10530                           	callstack 0
 10531  0058A4                     _I2C_2_Master_Write:
 10532                           	callstack 23
 10533                           
 10534                           ;incstack = 0
 10535                           ;I2C_2_Master_Write@data_byte stored from wreg
 10536  0058A4  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
 10537  0058A6                     
 10538                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10539  0058A6  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10540  0058AA                     
 10541                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10542  0058AA  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10543  0058AE  0012               	return		;funcret
 10544  0058B0                     __end_of_I2C_2_Master_Write:
 10545                           	callstack 0
 10546                           
 10547 ;; *************** function _I2C_2_Master_Stop *****************
 10548 ;; Defined at:
 10549 ;;		line 39 in file "i2c.c"
 10550 ;; Parameters:    Size  Location     Type
 10551 ;;		None
 10552 ;; Auto vars:     Size  Location     Type
 10553 ;;		None
 10554 ;; Return value:  Size  Location     Type
 10555 ;;                  1    wreg      void 
 10556 ;; Registers used:
 10557 ;;		wreg, status,2, status,0, cstack
 10558 ;; Tracked objects:
 10559 ;;		On entry : 0/0
 10560 ;;		On exit  : 0/0
 10561 ;;		Unchanged: 0/0
 10562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10567 ;;Total ram usage:        0 bytes
 10568 ;; Hardware stack levels used: 1
 10569 ;; Hardware stack levels required when called: 3
 10570 ;; This function calls:
 10571 ;;		_I2C_2_Master_Idle
 10572 ;; This function is called by:
 10573 ;;		_color_writetoaddr
 10574 ;;		_color_read_Red
 10575 ;;		_color_read_Blue
 10576 ;;		_color_read_Green
 10577 ;;		_color_read_Clear
 10578 ;; This function uses a non-reentrant model
 10579 ;;
 10580                           
 10581                           	psect	text51
 10582  0058BC                     __ptext51:
 10583                           	callstack 0
 10584  0058BC                     _I2C_2_Master_Stop:
 10585                           	callstack 23
 10586  0058BC                     
 10587                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10588  0058BC  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10589  0058C0                     
 10590                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10591  0058C0  010E               	movlb	14	; () banked
 10592  0058C2  85DA               	bsf	218,2,b	;volatile
 10593  0058C4                     
 10594                           ; BSR set to: 14
 10595  0058C4  0012               	return		;funcret
 10596  0058C6                     __end_of_I2C_2_Master_Stop:
 10597                           	callstack 0
 10598                           
 10599 ;; *************** function _I2C_2_Master_Start *****************
 10600 ;; Defined at:
 10601 ;;		line 27 in file "i2c.c"
 10602 ;; Parameters:    Size  Location     Type
 10603 ;;		None
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;		None
 10606 ;; Return value:  Size  Location     Type
 10607 ;;                  1    wreg      void 
 10608 ;; Registers used:
 10609 ;;		wreg, status,2, status,0, cstack
 10610 ;; Tracked objects:
 10611 ;;		On entry : 0/0
 10612 ;;		On exit  : 0/0
 10613 ;;		Unchanged: 0/0
 10614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10619 ;;Total ram usage:        0 bytes
 10620 ;; Hardware stack levels used: 1
 10621 ;; Hardware stack levels required when called: 3
 10622 ;; This function calls:
 10623 ;;		_I2C_2_Master_Idle
 10624 ;; This function is called by:
 10625 ;;		_color_writetoaddr
 10626 ;;		_color_read_Red
 10627 ;;		_color_read_Blue
 10628 ;;		_color_read_Green
 10629 ;;		_color_read_Clear
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text52
 10634  0058C6                     __ptext52:
 10635                           	callstack 0
 10636  0058C6                     _I2C_2_Master_Start:
 10637                           	callstack 23
 10638  0058C6                     
 10639                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10640  0058C6  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10641  0058CA                     
 10642                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10643  0058CA  010E               	movlb	14	; () banked
 10644  0058CC  81DA               	bsf	218,0,b	;volatile
 10645  0058CE                     
 10646                           ; BSR set to: 14
 10647  0058CE  0012               	return		;funcret
 10648  0058D0                     __end_of_I2C_2_Master_Start:
 10649                           	callstack 0
 10650                           
 10651 ;; *************** function _I2C_2_Master_RepStart *****************
 10652 ;; Defined at:
 10653 ;;		line 33 in file "i2c.c"
 10654 ;; Parameters:    Size  Location     Type
 10655 ;;		None
 10656 ;; Auto vars:     Size  Location     Type
 10657 ;;		None
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  1    wreg      void 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, status,0, cstack
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10671 ;;Total ram usage:        0 bytes
 10672 ;; Hardware stack levels used: 1
 10673 ;; Hardware stack levels required when called: 3
 10674 ;; This function calls:
 10675 ;;		_I2C_2_Master_Idle
 10676 ;; This function is called by:
 10677 ;;		_color_read_Red
 10678 ;;		_color_read_Blue
 10679 ;;		_color_read_Green
 10680 ;;		_color_read_Clear
 10681 ;; This function uses a non-reentrant model
 10682 ;;
 10683                           
 10684                           	psect	text53
 10685  0058D0                     __ptext53:
 10686                           	callstack 0
 10687  0058D0                     _I2C_2_Master_RepStart:
 10688                           	callstack 23
 10689  0058D0                     
 10690                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10691  0058D0  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10692  0058D4                     
 10693                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10694  0058D4  010E               	movlb	14	; () banked
 10695  0058D6  83DA               	bsf	218,1,b	;volatile
 10696  0058D8                     
 10697                           ; BSR set to: 14
 10698  0058D8  0012               	return		;funcret
 10699  0058DA                     __end_of_I2C_2_Master_RepStart:
 10700                           	callstack 0
 10701                           
 10702 ;; *************** function _I2C_2_Master_Read *****************
 10703 ;; Defined at:
 10704 ;;		line 51 in file "i2c.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  ack             1    wreg     unsigned char 
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;  ack             1    4[COMRAM] unsigned char 
 10709 ;;  tmp             1    5[COMRAM] unsigned char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  1    wreg      unsigned char 
 10712 ;; Registers used:
 10713 ;;		wreg, status,2, status,0, cstack
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10722 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10723 ;;Total ram usage:        3 bytes
 10724 ;; Hardware stack levels used: 1
 10725 ;; Hardware stack levels required when called: 3
 10726 ;; This function calls:
 10727 ;;		_I2C_2_Master_Idle
 10728 ;; This function is called by:
 10729 ;;		_color_read_Red
 10730 ;;		_color_read_Blue
 10731 ;;		_color_read_Green
 10732 ;;		_color_read_Clear
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text54
 10737  005468                     __ptext54:
 10738                           	callstack 0
 10739  005468                     _I2C_2_Master_Read:
 10740                           	callstack 23
 10741                           
 10742                           ; BSR set to: 14
 10743                           ;incstack = 0
 10744                           ;I2C_2_Master_Read@ack stored from wreg
 10745  005468  6E05               	movwf	I2C_2_Master_Read@ack^0,c
 10746  00546A                     
 10747                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10748  00546A  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10749  00546E                     
 10750                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10751  00546E  010E               	movlb	14	; () banked
 10752  005470  87DA               	bsf	218,3,b	;volatile
 10753                           
 10754                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10755  005472  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10756  005476                     
 10757                           ;i2c.c: 57:   tmp = SSP2BUF;
 10758  005476  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10759                           
 10760                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10761  00547A  EC86  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10762  00547E                     
 10763                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10764  00547E  5005               	movf	I2C_2_Master_Read@ack^0,w,c
 10765  005480  B4D8               	btfsc	status,2,c
 10766  005482  EF45  F02A         	goto	u3691
 10767  005486  EF49  F02A         	goto	u3690
 10768  00548A                     u3691:
 10769  00548A  6A04               	clrf	??_I2C_2_Master_Read^0,c
 10770  00548C  2A04               	incf	??_I2C_2_Master_Read^0,f,c
 10771  00548E  EF4A  F02A         	goto	u3708
 10772  005492                     u3690:
 10773  005492  6A04               	clrf	??_I2C_2_Master_Read^0,c
 10774  005494                     u3708:
 10775  005494  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
 10776  005496  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
 10777  005498  010E               	movlb	14	; () banked
 10778  00549A  51DA               	movf	218,w,b	;volatile
 10779  00549C  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
 10780  00549E  0BDF               	andlw	-33
 10781  0054A0  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
 10782  0054A2  6FDA               	movwf	218,b	;volatile
 10783  0054A4                     
 10784                           ; BSR set to: 14
 10785                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10786  0054A4  89DA               	bsf	218,4,b	;volatile
 10787  0054A6                     
 10788                           ; BSR set to: 14
 10789                           ;i2c.c: 61:   return tmp;
 10790  0054A6  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
 10791  0054A8                     
 10792                           ; BSR set to: 14
 10793  0054A8  0012               	return		;funcret
 10794  0054AA                     __end_of_I2C_2_Master_Read:
 10795                           	callstack 0
 10796                           
 10797 ;; *************** function _I2C_2_Master_Idle *****************
 10798 ;; Defined at:
 10799 ;;		line 22 in file "i2c.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;		None
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2, status,0
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10817 ;;Total ram usage:        1 bytes
 10818 ;; Hardware stack levels used: 1
 10819 ;; Hardware stack levels required when called: 2
 10820 ;; This function calls:
 10821 ;;		Nothing
 10822 ;; This function is called by:
 10823 ;;		_I2C_2_Master_Start
 10824 ;;		_I2C_2_Master_RepStart
 10825 ;;		_I2C_2_Master_Stop
 10826 ;;		_I2C_2_Master_Write
 10827 ;;		_I2C_2_Master_Read
 10828 ;; This function uses a non-reentrant model
 10829 ;;
 10830                           
 10831                           	psect	text55
 10832  00570C                     __ptext55:
 10833                           	callstack 0
 10834  00570C                     _I2C_2_Master_Idle:
 10835                           	callstack 23
 10836  00570C                     l217:
 10837  00570C  010E               	movlb	14	; () banked
 10838  00570E  B5D8               	btfsc	216,2,b	;volatile
 10839  005710  EF8C  F02B         	goto	u3091
 10840  005714  EF8E  F02B         	goto	u3090
 10841  005718                     u3091:
 10842  005718  EF86  F02B         	goto	l217
 10843  00571C                     u3090:
 10844  00571C                     
 10845                           ; BSR set to: 14
 10846  00571C  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10847  005720  0E1F               	movlw	31
 10848  005722  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
 10849  005724  A4D8               	btfss	status,2,c
 10850  005726  EF97  F02B         	goto	u3101
 10851  00572A  EF99  F02B         	goto	u3100
 10852  00572E                     u3101:
 10853  00572E  EF86  F02B         	goto	l217
 10854  005732                     u3100:
 10855  005732                     
 10856                           ; BSR set to: 14
 10857  005732  0012               	return		;funcret
 10858  005734                     __end_of_I2C_2_Master_Idle:
 10859                           	callstack 0
 10860                           
 10861 ;; *************** function _LED_R *****************
 10862 ;; Defined at:
 10863 ;;		line 162 in file "color.c"
 10864 ;; Parameters:    Size  Location     Type
 10865 ;;		None
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;		None
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  1    wreg      void 
 10870 ;; Registers used:
 10871 ;;		wreg
 10872 ;; Tracked objects:
 10873 ;;		On entry : 0/0
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10881 ;;Total ram usage:        2 bytes
 10882 ;; Hardware stack levels used: 1
 10883 ;; Hardware stack levels required when called: 2
 10884 ;; This function calls:
 10885 ;;		Nothing
 10886 ;; This function is called by:
 10887 ;;		_color_data_collection
 10888 ;;		_calibrate_white
 10889 ;;		_detect_color
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text56
 10894  00579A                     __ptext56:
 10895                           	callstack 0
 10896  00579A                     _LED_R:
 10897                           	callstack 26
 10898  00579A                     
 10899                           ;color.c: 164:     LATGbits.LATG1 = 1;
 10900  00579A  827F               	bsf	127,1,c	;volatile
 10901                           
 10902                           ;color.c: 165:     LATFbits.LATF7 = 0;
 10903  00579C  9E7E               	bcf	126,7,c	;volatile
 10904                           
 10905                           ;color.c: 166:     LATAbits.LATA4 = 0;
 10906  00579E  9879               	bcf	121,4,c	;volatile
 10907  0057A0                     
 10908                           ;color.c: 167:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10909  0057A0  0E11               	movlw	17
 10910  0057A2  6E04               	movwf	(??_LED_R+1)^0,c
 10911  0057A4  0E3C               	movlw	60
 10912  0057A6  6E03               	movwf	??_LED_R^0,c
 10913  0057A8  0ECB               	movlw	203
 10914  0057AA                     u6947:
 10915  0057AA  2EE8               	decfsz	wreg,f,c
 10916  0057AC  D7FE               	bra	u6947
 10917  0057AE  2E03               	decfsz	??_LED_R^0,f,c
 10918  0057B0  D7FC               	bra	u6947
 10919  0057B2  2E04               	decfsz	(??_LED_R+1)^0,f,c
 10920  0057B4  D7FA               	bra	u6947
 10921  0057B6  F000               	nop	
 10922  0057B8  0012               	return		;funcret
 10923  0057BA                     __end_of_LED_R:
 10924                           	callstack 0
 10925                           
 10926 ;; *************** function _LED_G *****************
 10927 ;; Defined at:
 10928 ;;		line 189 in file "color.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;		None
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;		None
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		wreg
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10946 ;;Total ram usage:        2 bytes
 10947 ;; Hardware stack levels used: 1
 10948 ;; Hardware stack levels required when called: 2
 10949 ;; This function calls:
 10950 ;;		Nothing
 10951 ;; This function is called by:
 10952 ;;		_color_data_collection
 10953 ;;		_calibrate_white
 10954 ;;		_detect_color
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text57
 10959  0057BA                     __ptext57:
 10960                           	callstack 0
 10961  0057BA                     _LED_G:
 10962                           	callstack 26
 10963  0057BA                     
 10964                           ;color.c: 191:     LATGbits.LATG1 = 0;
 10965  0057BA  927F               	bcf	127,1,c	;volatile
 10966                           
 10967                           ;color.c: 192:     LATFbits.LATF7 = 0;
 10968  0057BC  9E7E               	bcf	126,7,c	;volatile
 10969                           
 10970                           ;color.c: 193:     LATAbits.LATA4 = 1;
 10971  0057BE  8879               	bsf	121,4,c	;volatile
 10972  0057C0                     
 10973                           ;color.c: 194:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10974  0057C0  0E11               	movlw	17
 10975  0057C2  6E04               	movwf	(??_LED_G+1)^0,c
 10976  0057C4  0E3C               	movlw	60
 10977  0057C6  6E03               	movwf	??_LED_G^0,c
 10978  0057C8  0ECB               	movlw	203
 10979  0057CA                     u6957:
 10980  0057CA  2EE8               	decfsz	wreg,f,c
 10981  0057CC  D7FE               	bra	u6957
 10982  0057CE  2E03               	decfsz	??_LED_G^0,f,c
 10983  0057D0  D7FC               	bra	u6957
 10984  0057D2  2E04               	decfsz	(??_LED_G+1)^0,f,c
 10985  0057D4  D7FA               	bra	u6957
 10986  0057D6  F000               	nop	
 10987  0057D8  0012               	return		;funcret
 10988  0057DA                     __end_of_LED_G:
 10989                           	callstack 0
 10990                           
 10991 ;; *************** function _LED_C *****************
 10992 ;; Defined at:
 10993 ;;		line 171 in file "color.c"
 10994 ;; Parameters:    Size  Location     Type
 10995 ;;		None
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;		None
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      void 
 11000 ;; Registers used:
 11001 ;;		wreg
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11011 ;;Total ram usage:        2 bytes
 11012 ;; Hardware stack levels used: 1
 11013 ;; Hardware stack levels required when called: 2
 11014 ;; This function calls:
 11015 ;;		Nothing
 11016 ;; This function is called by:
 11017 ;;		_color_data_collection
 11018 ;;		_calibrate_white
 11019 ;;		_distance_measure
 11020 ;;		_main
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text58
 11025  0057DA                     __ptext58:
 11026                           	callstack 0
 11027  0057DA                     _LED_C:
 11028                           	callstack 27
 11029  0057DA                     
 11030                           ;color.c: 173:     LATGbits.LATG1 = 1;
 11031  0057DA  827F               	bsf	127,1,c	;volatile
 11032                           
 11033                           ;color.c: 174:     LATFbits.LATF7 = 1;
 11034  0057DC  8E7E               	bsf	126,7,c	;volatile
 11035                           
 11036                           ;color.c: 175:     LATAbits.LATA4 = 1;
 11037  0057DE  8879               	bsf	121,4,c	;volatile
 11038  0057E0                     
 11039                           ;color.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11040  0057E0  0E05               	movlw	5
 11041  0057E2  6E04               	movwf	(??_LED_C+1)^0,c
 11042  0057E4  0E0F               	movlw	15
 11043  0057E6  6E03               	movwf	??_LED_C^0,c
 11044  0057E8  0EF1               	movlw	241
 11045  0057EA                     u6967:
 11046  0057EA  2EE8               	decfsz	wreg,f,c
 11047  0057EC  D7FE               	bra	u6967
 11048  0057EE  2E03               	decfsz	??_LED_C^0,f,c
 11049  0057F0  D7FC               	bra	u6967
 11050  0057F2  2E04               	decfsz	(??_LED_C+1)^0,f,c
 11051  0057F4  D7FA               	bra	u6967
 11052  0057F6  F000               	nop	
 11053  0057F8  0012               	return		;funcret
 11054  0057FA                     __end_of_LED_C:
 11055                           	callstack 0
 11056                           
 11057 ;; *************** function _LED_B *****************
 11058 ;; Defined at:
 11059 ;;		line 180 in file "color.c"
 11060 ;; Parameters:    Size  Location     Type
 11061 ;;		None
 11062 ;; Auto vars:     Size  Location     Type
 11063 ;;		None
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  1    wreg      void 
 11066 ;; Registers used:
 11067 ;;		wreg
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;Total ram usage:        2 bytes
 11078 ;; Hardware stack levels used: 1
 11079 ;; Hardware stack levels required when called: 2
 11080 ;; This function calls:
 11081 ;;		Nothing
 11082 ;; This function is called by:
 11083 ;;		_color_data_collection
 11084 ;;		_calibrate_white
 11085 ;;		_detect_color
 11086 ;; This function uses a non-reentrant model
 11087 ;;
 11088                           
 11089                           	psect	text59
 11090  0057FA                     __ptext59:
 11091                           	callstack 0
 11092  0057FA                     _LED_B:
 11093                           	callstack 26
 11094  0057FA                     
 11095                           ;color.c: 182:     LATGbits.LATG1 = 0;
 11096  0057FA  927F               	bcf	127,1,c	;volatile
 11097                           
 11098                           ;color.c: 183:     LATFbits.LATF7 = 1;
 11099  0057FC  8E7E               	bsf	126,7,c	;volatile
 11100                           
 11101                           ;color.c: 184:     LATAbits.LATA4 = 0;
 11102  0057FE  9879               	bcf	121,4,c	;volatile
 11103  005800                     
 11104                           ;color.c: 185:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11105  005800  0E11               	movlw	17
 11106  005802  6E04               	movwf	(??_LED_B+1)^0,c
 11107  005804  0E3C               	movlw	60
 11108  005806  6E03               	movwf	??_LED_B^0,c
 11109  005808  0ECB               	movlw	203
 11110  00580A                     u6977:
 11111  00580A  2EE8               	decfsz	wreg,f,c
 11112  00580C  D7FE               	bra	u6977
 11113  00580E  2E03               	decfsz	??_LED_B^0,f,c
 11114  005810  D7FC               	bra	u6977
 11115  005812  2E04               	decfsz	(??_LED_B+1)^0,f,c
 11116  005814  D7FA               	bra	u6977
 11117  005816  F000               	nop	
 11118  005818  0012               	return		;funcret
 11119  00581A                     __end_of_LED_B:
 11120                           	callstack 0
 11121                           
 11122 ;; *************** function _buggylight_init *****************
 11123 ;; Defined at:
 11124 ;;		line 12 in file "color.c"
 11125 ;; Parameters:    Size  Location     Type
 11126 ;;		None
 11127 ;; Auto vars:     Size  Location     Type
 11128 ;;		None
 11129 ;; Return value:  Size  Location     Type
 11130 ;;                  1    wreg      void 
 11131 ;; Registers used:
 11132 ;;		None
 11133 ;; Tracked objects:
 11134 ;;		On entry : 0/0
 11135 ;;		On exit  : 0/0
 11136 ;;		Unchanged: 0/0
 11137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11142 ;;Total ram usage:        0 bytes
 11143 ;; Hardware stack levels used: 1
 11144 ;; Hardware stack levels required when called: 2
 11145 ;; This function calls:
 11146 ;;		Nothing
 11147 ;; This function is called by:
 11148 ;;		_main
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text60
 11153  00588E                     __ptext60:
 11154                           	callstack 0
 11155  00588E                     _buggylight_init:
 11156                           	callstack 28
 11157  00588E                     
 11158                           ;color.c: 14:     TRISHbits.TRISH1=0;
 11159  00588E  9288               	bcf	136,1,c	;volatile
 11160                           
 11161                           ;color.c: 15:     TRISDbits.TRISD4=0;
 11162  005890  9884               	bcf	132,4,c	;volatile
 11163                           
 11164                           ;color.c: 16:     TRISDbits.TRISD3=0;
 11165  005892  9684               	bcf	132,3,c	;volatile
 11166                           
 11167                           ;color.c: 17:     TRISFbits.TRISF0=0;
 11168  005894  9086               	bcf	134,0,c	;volatile
 11169                           
 11170                           ;color.c: 18:     TRISHbits.TRISH0=0;
 11171  005896  9088               	bcf	136,0,c	;volatile
 11172                           
 11173                           ;color.c: 20:     LATHbits.LATH1 = 0;
 11174  005898  9280               	bcf	128,1,c	;volatile
 11175                           
 11176                           ;color.c: 21:     LATDbits.LATD4 = 0;
 11177  00589A  987C               	bcf	124,4,c	;volatile
 11178                           
 11179                           ;color.c: 22:     LATDbits.LATD3 = 0;
 11180  00589C  967C               	bcf	124,3,c	;volatile
 11181                           
 11182                           ;color.c: 23:     LATFbits.LATF0 = 0;
 11183  00589E  907E               	bcf	126,0,c	;volatile
 11184                           
 11185                           ;color.c: 24:     LATHbits.LATH0 = 0;
 11186  0058A0  9080               	bcf	128,0,c	;volatile
 11187  0058A2  0012               	return		;funcret
 11188  0058A4                     __end_of_buggylight_init:
 11189                           	callstack 0
 11190                           
 11191 ;; *************** function _action *****************
 11192 ;; Defined at:
 11193 ;;		line 19 in file "movement.c"
 11194 ;; Parameters:    Size  Location     Type
 11195 ;;  color           1    wreg     unsigned char 
 11196 ;;  mL              2   59[COMRAM] PTR struct DC_motor
 11197 ;;		 -> main@motorL(10), 
 11198 ;;  mR              2   61[COMRAM] PTR struct DC_motor
 11199 ;;		 -> main@motorR(10), 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  color           1   65[COMRAM] unsigned char 
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11214 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11215 ;;Total ram usage:        7 bytes
 11216 ;; Hardware stack levels used: 1
 11217 ;; Hardware stack levels required when called: 8
 11218 ;; This function calls:
 11219 ;;		_goback
 11220 ;;		_reverse_square
 11221 ;;		_short_reverse
 11222 ;;		_stop
 11223 ;;		_turnLeft
 11224 ;;		_turnRight
 11225 ;; This function is called by:
 11226 ;;		_main
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text61
 11231  002A4A                     __ptext61:
 11232                           	callstack 0
 11233  002A4A                     _action:
 11234                           	callstack 22
 11235                           
 11236                           ;incstack = 0
 11237                           ;action@color stored from wreg
 11238  002A4A  6E42               	movwf	action@color^0,c
 11239  002A4C                     
 11240                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: { T0CON0bits.T0EN=1;
 11241  002A4C  8ED5               	bsf	213,7,c	;volatile
 11242                           
 11243                           ;movement.c: 21:     start_move = second;
 11244  002A4E  C0F7  F0F5         	movff	_second,_start_move
 11245  002A52  C0F8  F0F6         	movff	_second+1,_start_move+1
 11246  002A56                     
 11247                           ;movement.c: 23:     if (color != 0){
 11248  002A56  5042               	movf	action@color^0,w,c
 11249  002A58  B4D8               	btfsc	status,2,c
 11250  002A5A  EF31  F015         	goto	u5391
 11251  002A5E  EF33  F015         	goto	u5390
 11252  002A62                     u5391:
 11253  002A62  EFA6  F016         	goto	l680
 11254  002A66                     u5390:
 11255  002A66                     
 11256                           ;movement.c: 24:         T0CON0bits.T0EN=0;
 11257  002A66  9ED5               	bcf	213,7,c	;volatile
 11258                           
 11259                           ;movement.c: 25:         stop_move = second;
 11260  002A68  C0F7  F0F3         	movff	_second,_stop_move
 11261  002A6C  C0F8  F0F4         	movff	_second+1,_stop_move+1
 11262  002A70                     
 11263                           ;movement.c: 26:         memory[array_index] = (start_move-stop_move);
 11264  002A70  0100               	movlb	0	; () banked
 11265  002A72  51F3               	movf	_stop_move& (0+255),w,b
 11266  002A74  5DF5               	subwf	_start_move& (0+255),w,b
 11267  002A76  6E40               	movwf	??_action^0,c
 11268  002A78  51F4               	movf	(_stop_move+1)& (0+255),w,b
 11269  002A7A  59F6               	subwfb	(_start_move+1)& (0+255),w,b
 11270  002A7C  6E41               	movwf	(??_action+1)^0,c
 11271  002A7E  505A               	movf	_array_index^0,w,c
 11272  002A80  0D02               	mullw	2
 11273  002A82  0E3C               	movlw	low _memory
 11274  002A84  24F3               	addwf	243,w,c
 11275  002A86  6ED9               	movwf	fsr2l,c
 11276  002A88  0E01               	movlw	high _memory
 11277  002A8A  20F4               	addwfc	prodh,w,c
 11278  002A8C  6EDA               	movwf	fsr2h,c
 11279  002A8E  C040  FFDE         	movff	??_action,postinc2
 11280  002A92  C041  FFDD         	movff	??_action+1,postdec2
 11281  002A96                     
 11282                           ; BSR set to: 0
 11283                           ;movement.c: 27:         array_index++;
 11284  002A96  2A5A               	incf	_array_index^0,f,c
 11285  002A98                     
 11286                           ; BSR set to: 0
 11287                           ;movement.c: 28:         stop(mL,mR);
 11288  002A98  C03C  F01C         	movff	action@mL,stop@mL
 11289  002A9C  C03D  F01D         	movff	action@mL+1,stop@mL+1
 11290  002AA0  C03E  F01E         	movff	action@mR,stop@mR
 11291  002AA4  C03F  F01F         	movff	action@mR+1,stop@mR+1
 11292  002AA8  ECFC  F026         	call	_stop	;wreg free
 11293  002AAC                     
 11294                           ;movement.c: 29:         if (color == 1){
 11295  002AAC  0442               	decf	action@color^0,w,c
 11296  002AAE  A4D8               	btfss	status,2,c
 11297  002AB0  EF5C  F015         	goto	u5401
 11298  002AB4  EF5E  F015         	goto	u5400
 11299  002AB8                     u5401:
 11300  002AB8  EF81  F015         	goto	l5219
 11301  002ABC                     u5400:
 11302  002ABC                     
 11303                           ;movement.c: 30:             short_reverse(mL,mR);
 11304  002ABC  C03C  F028         	movff	action@mL,short_reverse@mL
 11305  002AC0  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11306  002AC4  C03E  F02A         	movff	action@mR,short_reverse@mR
 11307  002AC8  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11308  002ACC  EC55  F02A         	call	_short_reverse	;wreg free
 11309                           
 11310                           ;movement.c: 31:             turnRight(mL,mR,90);
 11311  002AD0  C03C  F022         	movff	action@mL,turnRight@mL
 11312  002AD4  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11313  002AD8  C03E  F024         	movff	action@mR,turnRight@mR
 11314  002ADC  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11315  002AE0  0E5A               	movlw	90
 11316  002AE2  6E26               	movwf	turnRight@angle_right^0,c
 11317  002AE4  ECCC  F01F         	call	_turnRight	;wreg free
 11318  002AE8                     
 11319                           ;movement.c: 32:             memory[array_index] = 1;
 11320  002AE8  505A               	movf	_array_index^0,w,c
 11321  002AEA  0D02               	mullw	2
 11322  002AEC  0E3C               	movlw	low _memory
 11323  002AEE  24F3               	addwf	243,w,c
 11324  002AF0  6ED9               	movwf	fsr2l,c
 11325  002AF2  0E01               	movlw	high _memory
 11326  002AF4  20F4               	addwfc	prodh,w,c
 11327  002AF6  6EDA               	movwf	fsr2h,c
 11328  002AF8  0E01               	movlw	1
 11329  002AFA  6EDE               	movwf	postinc2,c
 11330  002AFC  0E00               	movlw	0
 11331  002AFE  6EDD               	movwf	postdec2,c
 11332  002B00                     
 11333                           ;movement.c: 33:             array_index++;
 11334  002B00  2A5A               	incf	_array_index^0,f,c
 11335  002B02                     l5219:
 11336                           
 11337                           ;movement.c: 35:         if (color == 2){
 11338  002B02  0E02               	movlw	2
 11339  002B04  1842               	xorwf	action@color^0,w,c
 11340  002B06  A4D8               	btfss	status,2,c
 11341  002B08  EF88  F015         	goto	u5411
 11342  002B0C  EF8A  F015         	goto	u5410
 11343  002B10                     u5411:
 11344  002B10  EFAD  F015         	goto	l5227
 11345  002B14                     u5410:
 11346  002B14                     
 11347                           ;movement.c: 36:             short_reverse(mL,mR);
 11348  002B14  C03C  F028         	movff	action@mL,short_reverse@mL
 11349  002B18  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11350  002B1C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11351  002B20  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11352  002B24  EC55  F02A         	call	_short_reverse	;wreg free
 11353                           
 11354                           ;movement.c: 37:             turnLeft(mL,mR,90);
 11355  002B28  C03C  F022         	movff	action@mL,turnLeft@mL
 11356  002B2C  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11357  002B30  C03E  F024         	movff	action@mR,turnLeft@mR
 11358  002B34  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11359  002B38  0E5A               	movlw	90
 11360  002B3A  6E26               	movwf	turnLeft@angle_left^0,c
 11361  002B3C  EC8C  F020         	call	_turnLeft	;wreg free
 11362  002B40                     
 11363                           ;movement.c: 38:             memory[array_index] = 2;
 11364  002B40  505A               	movf	_array_index^0,w,c
 11365  002B42  0D02               	mullw	2
 11366  002B44  0E3C               	movlw	low _memory
 11367  002B46  24F3               	addwf	243,w,c
 11368  002B48  6ED9               	movwf	fsr2l,c
 11369  002B4A  0E01               	movlw	high _memory
 11370  002B4C  20F4               	addwfc	prodh,w,c
 11371  002B4E  6EDA               	movwf	fsr2h,c
 11372  002B50  0E02               	movlw	2
 11373  002B52  6EDE               	movwf	postinc2,c
 11374  002B54  0E00               	movlw	0
 11375  002B56  6EDD               	movwf	postdec2,c
 11376  002B58                     
 11377                           ;movement.c: 39:             array_index++;
 11378  002B58  2A5A               	incf	_array_index^0,f,c
 11379  002B5A                     l5227:
 11380                           
 11381                           ;movement.c: 41:         if (color == 3){
 11382  002B5A  0E03               	movlw	3
 11383  002B5C  1842               	xorwf	action@color^0,w,c
 11384  002B5E  A4D8               	btfss	status,2,c
 11385  002B60  EFB4  F015         	goto	u5421
 11386  002B64  EFB6  F015         	goto	u5420
 11387  002B68                     u5421:
 11388  002B68  EFD9  F015         	goto	l5235
 11389  002B6C                     u5420:
 11390  002B6C                     
 11391                           ;movement.c: 42:             short_reverse(mL,mR);
 11392  002B6C  C03C  F028         	movff	action@mL,short_reverse@mL
 11393  002B70  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11394  002B74  C03E  F02A         	movff	action@mR,short_reverse@mR
 11395  002B78  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11396  002B7C  EC55  F02A         	call	_short_reverse	;wreg free
 11397                           
 11398                           ;movement.c: 43:             turnLeft(mL,mR,180);
 11399  002B80  C03C  F022         	movff	action@mL,turnLeft@mL
 11400  002B84  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11401  002B88  C03E  F024         	movff	action@mR,turnLeft@mR
 11402  002B8C  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11403  002B90  0EB4               	movlw	180
 11404  002B92  6E26               	movwf	turnLeft@angle_left^0,c
 11405  002B94  EC8C  F020         	call	_turnLeft	;wreg free
 11406  002B98                     
 11407                           ;movement.c: 44:             memory[array_index] = 3;
 11408  002B98  505A               	movf	_array_index^0,w,c
 11409  002B9A  0D02               	mullw	2
 11410  002B9C  0E3C               	movlw	low _memory
 11411  002B9E  24F3               	addwf	243,w,c
 11412  002BA0  6ED9               	movwf	fsr2l,c
 11413  002BA2  0E01               	movlw	high _memory
 11414  002BA4  20F4               	addwfc	prodh,w,c
 11415  002BA6  6EDA               	movwf	fsr2h,c
 11416  002BA8  0E03               	movlw	3
 11417  002BAA  6EDE               	movwf	postinc2,c
 11418  002BAC  0E00               	movlw	0
 11419  002BAE  6EDD               	movwf	postdec2,c
 11420  002BB0                     
 11421                           ;movement.c: 45:             array_index++;
 11422  002BB0  2A5A               	incf	_array_index^0,f,c
 11423  002BB2                     l5235:
 11424                           
 11425                           ;movement.c: 47:         if (color == 4){
 11426  002BB2  0E04               	movlw	4
 11427  002BB4  1842               	xorwf	action@color^0,w,c
 11428  002BB6  A4D8               	btfss	status,2,c
 11429  002BB8  EFE0  F015         	goto	u5431
 11430  002BBC  EFE2  F015         	goto	u5430
 11431  002BC0                     u5431:
 11432  002BC0  EF05  F016         	goto	l5243
 11433  002BC4                     u5430:
 11434  002BC4                     
 11435                           ;movement.c: 48:             reverse_square(mL,mR);
 11436  002BC4  C03C  F028         	movff	action@mL,reverse_square@mL
 11437  002BC8  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11438  002BCC  C03E  F02A         	movff	action@mR,reverse_square@mR
 11439  002BD0  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11440  002BD4  EC76  F02A         	call	_reverse_square	;wreg free
 11441                           
 11442                           ;movement.c: 49:             turnRight(mL,mR,90);
 11443  002BD8  C03C  F022         	movff	action@mL,turnRight@mL
 11444  002BDC  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11445  002BE0  C03E  F024         	movff	action@mR,turnRight@mR
 11446  002BE4  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11447  002BE8  0E5A               	movlw	90
 11448  002BEA  6E26               	movwf	turnRight@angle_right^0,c
 11449  002BEC  ECCC  F01F         	call	_turnRight	;wreg free
 11450  002BF0                     
 11451                           ;movement.c: 50:             memory[array_index] = 4;
 11452  002BF0  505A               	movf	_array_index^0,w,c
 11453  002BF2  0D02               	mullw	2
 11454  002BF4  0E3C               	movlw	low _memory
 11455  002BF6  24F3               	addwf	243,w,c
 11456  002BF8  6ED9               	movwf	fsr2l,c
 11457  002BFA  0E01               	movlw	high _memory
 11458  002BFC  20F4               	addwfc	prodh,w,c
 11459  002BFE  6EDA               	movwf	fsr2h,c
 11460  002C00  0E04               	movlw	4
 11461  002C02  6EDE               	movwf	postinc2,c
 11462  002C04  0E00               	movlw	0
 11463  002C06  6EDD               	movwf	postdec2,c
 11464  002C08                     
 11465                           ;movement.c: 51:             array_index++;
 11466  002C08  2A5A               	incf	_array_index^0,f,c
 11467  002C0A                     l5243:
 11468                           
 11469                           ;movement.c: 53:         if (color == 5){
 11470  002C0A  0E05               	movlw	5
 11471  002C0C  1842               	xorwf	action@color^0,w,c
 11472  002C0E  A4D8               	btfss	status,2,c
 11473  002C10  EF0C  F016         	goto	u5441
 11474  002C14  EF0E  F016         	goto	u5440
 11475  002C18                     u5441:
 11476  002C18  EF31  F016         	goto	l5251
 11477  002C1C                     u5440:
 11478  002C1C                     
 11479                           ;movement.c: 54:             reverse_square(mL,mR);
 11480  002C1C  C03C  F028         	movff	action@mL,reverse_square@mL
 11481  002C20  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11482  002C24  C03E  F02A         	movff	action@mR,reverse_square@mR
 11483  002C28  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11484  002C2C  EC76  F02A         	call	_reverse_square	;wreg free
 11485                           
 11486                           ;movement.c: 55:             turnLeft(mL,mR,90);
 11487  002C30  C03C  F022         	movff	action@mL,turnLeft@mL
 11488  002C34  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11489  002C38  C03E  F024         	movff	action@mR,turnLeft@mR
 11490  002C3C  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11491  002C40  0E5A               	movlw	90
 11492  002C42  6E26               	movwf	turnLeft@angle_left^0,c
 11493  002C44  EC8C  F020         	call	_turnLeft	;wreg free
 11494  002C48                     
 11495                           ;movement.c: 56:             memory[array_index] = 5;
 11496  002C48  505A               	movf	_array_index^0,w,c
 11497  002C4A  0D02               	mullw	2
 11498  002C4C  0E3C               	movlw	low _memory
 11499  002C4E  24F3               	addwf	243,w,c
 11500  002C50  6ED9               	movwf	fsr2l,c
 11501  002C52  0E01               	movlw	high _memory
 11502  002C54  20F4               	addwfc	prodh,w,c
 11503  002C56  6EDA               	movwf	fsr2h,c
 11504  002C58  0E05               	movlw	5
 11505  002C5A  6EDE               	movwf	postinc2,c
 11506  002C5C  0E00               	movlw	0
 11507  002C5E  6EDD               	movwf	postdec2,c
 11508  002C60                     
 11509                           ;movement.c: 57:             array_index++;
 11510  002C60  2A5A               	incf	_array_index^0,f,c
 11511  002C62                     l5251:
 11512                           
 11513                           ;movement.c: 59:         if (color == 6){
 11514  002C62  0E06               	movlw	6
 11515  002C64  1842               	xorwf	action@color^0,w,c
 11516  002C66  A4D8               	btfss	status,2,c
 11517  002C68  EF38  F016         	goto	u5451
 11518  002C6C  EF3A  F016         	goto	u5450
 11519  002C70                     u5451:
 11520  002C70  EF5D  F016         	goto	l5259
 11521  002C74                     u5450:
 11522  002C74                     
 11523                           ;movement.c: 60:             short_reverse(mL,mR);
 11524  002C74  C03C  F028         	movff	action@mL,short_reverse@mL
 11525  002C78  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11526  002C7C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11527  002C80  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11528  002C84  EC55  F02A         	call	_short_reverse	;wreg free
 11529                           
 11530                           ;movement.c: 61:             turnRight(mL,mR,135);
 11531  002C88  C03C  F022         	movff	action@mL,turnRight@mL
 11532  002C8C  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11533  002C90  C03E  F024         	movff	action@mR,turnRight@mR
 11534  002C94  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11535  002C98  0E87               	movlw	135
 11536  002C9A  6E26               	movwf	turnRight@angle_right^0,c
 11537  002C9C  ECCC  F01F         	call	_turnRight	;wreg free
 11538  002CA0                     
 11539                           ;movement.c: 62:             memory[array_index] = 6;
 11540  002CA0  505A               	movf	_array_index^0,w,c
 11541  002CA2  0D02               	mullw	2
 11542  002CA4  0E3C               	movlw	low _memory
 11543  002CA6  24F3               	addwf	243,w,c
 11544  002CA8  6ED9               	movwf	fsr2l,c
 11545  002CAA  0E01               	movlw	high _memory
 11546  002CAC  20F4               	addwfc	prodh,w,c
 11547  002CAE  6EDA               	movwf	fsr2h,c
 11548  002CB0  0E06               	movlw	6
 11549  002CB2  6EDE               	movwf	postinc2,c
 11550  002CB4  0E00               	movlw	0
 11551  002CB6  6EDD               	movwf	postdec2,c
 11552  002CB8                     
 11553                           ;movement.c: 63:             array_index++;
 11554  002CB8  2A5A               	incf	_array_index^0,f,c
 11555  002CBA                     l5259:
 11556                           
 11557                           ;movement.c: 65:         if (color == 7){
 11558  002CBA  0E07               	movlw	7
 11559  002CBC  1842               	xorwf	action@color^0,w,c
 11560  002CBE  A4D8               	btfss	status,2,c
 11561  002CC0  EF64  F016         	goto	u5461
 11562  002CC4  EF66  F016         	goto	u5460
 11563  002CC8                     u5461:
 11564  002CC8  EF89  F016         	goto	l5267
 11565  002CCC                     u5460:
 11566  002CCC                     
 11567                           ;movement.c: 66:             short_reverse(mL,mR);
 11568  002CCC  C03C  F028         	movff	action@mL,short_reverse@mL
 11569  002CD0  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11570  002CD4  C03E  F02A         	movff	action@mR,short_reverse@mR
 11571  002CD8  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11572  002CDC  EC55  F02A         	call	_short_reverse	;wreg free
 11573                           
 11574                           ;movement.c: 67:             turnLeft(mL,mR,135);
 11575  002CE0  C03C  F022         	movff	action@mL,turnLeft@mL
 11576  002CE4  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11577  002CE8  C03E  F024         	movff	action@mR,turnLeft@mR
 11578  002CEC  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11579  002CF0  0E87               	movlw	135
 11580  002CF2  6E26               	movwf	turnLeft@angle_left^0,c
 11581  002CF4  EC8C  F020         	call	_turnLeft	;wreg free
 11582  002CF8                     
 11583                           ;movement.c: 68:             memory[array_index] = 7;
 11584  002CF8  505A               	movf	_array_index^0,w,c
 11585  002CFA  0D02               	mullw	2
 11586  002CFC  0E3C               	movlw	low _memory
 11587  002CFE  24F3               	addwf	243,w,c
 11588  002D00  6ED9               	movwf	fsr2l,c
 11589  002D02  0E01               	movlw	high _memory
 11590  002D04  20F4               	addwfc	prodh,w,c
 11591  002D06  6EDA               	movwf	fsr2h,c
 11592  002D08  0E07               	movlw	7
 11593  002D0A  6EDE               	movwf	postinc2,c
 11594  002D0C  0E00               	movlw	0
 11595  002D0E  6EDD               	movwf	postdec2,c
 11596  002D10                     
 11597                           ;movement.c: 69:             array_index++;
 11598  002D10  2A5A               	incf	_array_index^0,f,c
 11599  002D12                     l5267:
 11600                           
 11601                           ;movement.c: 71:         if (color == 8){
 11602  002D12  0E08               	movlw	8
 11603  002D14  1842               	xorwf	action@color^0,w,c
 11604  002D16  A4D8               	btfss	status,2,c
 11605  002D18  EF90  F016         	goto	u5471
 11606  002D1C  EF92  F016         	goto	u5470
 11607  002D20                     u5471:
 11608  002D20  EFA6  F016         	goto	l680
 11609  002D24                     u5470:
 11610  002D24                     
 11611                           ;movement.c: 72:             short_reverse(mL,mR);
 11612  002D24  C03C  F028         	movff	action@mL,short_reverse@mL
 11613  002D28  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11614  002D2C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11615  002D30  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11616  002D34  EC55  F02A         	call	_short_reverse	;wreg free
 11617                           
 11618                           ;movement.c: 73:             goback(mL,mR);
 11619  002D38  C03C  F034         	movff	action@mL,goback@mL
 11620  002D3C  C03D  F035         	movff	action@mL+1,goback@mL+1
 11621  002D40  C03E  F036         	movff	action@mR,goback@mR
 11622  002D44  C03F  F037         	movff	action@mR+1,goback@mR+1
 11623  002D48  EC6F  F019         	call	_goback	;wreg free
 11624  002D4C                     l680:
 11625  002D4C  0012               	return		;funcret
 11626  002D4E                     __end_of_action:
 11627                           	callstack 0
 11628                           
 11629 ;; *************** function _short_reverse *****************
 11630 ;; Defined at:
 11631 ;;		line 182 in file "dc_motor.c"
 11632 ;; Parameters:    Size  Location     Type
 11633 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 11634 ;;		 -> main@motorL(10), 
 11635 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 11636 ;;		 -> main@motorR(10), 
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;		None
 11639 ;; Return value:  Size  Location     Type
 11640 ;;                  1    wreg      void 
 11641 ;; Registers used:
 11642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11643 ;; Tracked objects:
 11644 ;;		On entry : 0/0
 11645 ;;		On exit  : 0/0
 11646 ;;		Unchanged: 0/0
 11647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11652 ;;Total ram usage:        6 bytes
 11653 ;; Hardware stack levels used: 1
 11654 ;; Hardware stack levels required when called: 6
 11655 ;; This function calls:
 11656 ;;		_fullSpeedBack
 11657 ;;		_stop
 11658 ;; This function is called by:
 11659 ;;		_action
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           	psect	text62
 11664  0054AA                     __ptext62:
 11665                           	callstack 0
 11666  0054AA                     _short_reverse:
 11667                           	callstack 23
 11668  0054AA                     
 11669                           ;dc_motor.c: 182: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 183: { fullSpeedBack(mL, mR);
 11670  0054AA  C028  F022         	movff	short_reverse@mL,fullSpeedBack@mL
 11671  0054AE  C029  F023         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 11672  0054B2  C02A  F024         	movff	short_reverse@mR,fullSpeedBack@mR
 11673  0054B6  C02B  F025         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 11674  0054BA  EC9C  F026         	call	_fullSpeedBack	;wreg free
 11675  0054BE                     
 11676                           ;dc_motor.c: 184:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11677  0054BE  0E29               	movlw	41
 11678  0054C0  6E2D               	movwf	(??_short_reverse+1)^0,c
 11679  0054C2  0E96               	movlw	150
 11680  0054C4  6E2C               	movwf	??_short_reverse^0,c
 11681  0054C6  0E7F               	movlw	127
 11682  0054C8                     u6987:
 11683  0054C8  2EE8               	decfsz	wreg,f,c
 11684  0054CA  D7FE               	bra	u6987
 11685  0054CC  2E2C               	decfsz	??_short_reverse^0,f,c
 11686  0054CE  D7FC               	bra	u6987
 11687  0054D0  2E2D               	decfsz	(??_short_reverse+1)^0,f,c
 11688  0054D2  D7FA               	bra	u6987
 11689  0054D4  F000               	nop	
 11690  0054D6                     
 11691                           ;dc_motor.c: 185:     stop(mL,mR);
 11692  0054D6  C028  F01C         	movff	short_reverse@mL,stop@mL
 11693  0054DA  C029  F01D         	movff	short_reverse@mL+1,stop@mL+1
 11694  0054DE  C02A  F01E         	movff	short_reverse@mR,stop@mR
 11695  0054E2  C02B  F01F         	movff	short_reverse@mR+1,stop@mR+1
 11696  0054E6  ECFC  F026         	call	_stop	;wreg free
 11697  0054EA  0012               	return		;funcret
 11698  0054EC                     __end_of_short_reverse:
 11699                           	callstack 0
 11700                           
 11701 ;; *************** function _goback *****************
 11702 ;; Defined at:
 11703 ;;		line 114 in file "movement.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;  mL              2   51[COMRAM] PTR struct DC_motor
 11706 ;;		 -> main@motorL(10), 
 11707 ;;  mR              2   53[COMRAM] PTR struct DC_motor
 11708 ;;		 -> main@motorR(10), 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  i               2   57[COMRAM] unsigned int 
 11711 ;; Return value:  Size  Location     Type
 11712 ;;                  1    wreg      void 
 11713 ;; Registers used:
 11714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11715 ;; Tracked objects:
 11716 ;;		On entry : 0/0
 11717 ;;		On exit  : 0/0
 11718 ;;		Unchanged: 0/0
 11719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11721 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11723 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11724 ;;Total ram usage:        8 bytes
 11725 ;; Hardware stack levels used: 1
 11726 ;; Hardware stack levels required when called: 7
 11727 ;; This function calls:
 11728 ;;		_fullSpeedAhead
 11729 ;;		_reverse_square
 11730 ;;		_stop
 11731 ;;		_turnLeft
 11732 ;;		_turnRight
 11733 ;; This function is called by:
 11734 ;;		_action
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           	psect	text63
 11739  0032DE                     __ptext63:
 11740                           	callstack 0
 11741  0032DE                     _goback:
 11742                           	callstack 22
 11743  0032DE                     
 11744                           ;movement.c: 114: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 115:
      +                           { turnLeft(mL,mR,180);
 11745  0032DE  C034  F022         	movff	goback@mL,turnLeft@mL
 11746  0032E2  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11747  0032E6  C036  F024         	movff	goback@mR,turnLeft@mR
 11748  0032EA  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11749  0032EE  0EB4               	movlw	180
 11750  0032F0  6E26               	movwf	turnLeft@angle_left^0,c
 11751  0032F2  EC8C  F020         	call	_turnLeft	;wreg free
 11752                           
 11753                           ;movement.c: 116:     while(array_index > 0){
 11754  0032F6  EFAF  F01A         	goto	l4901
 11755  0032FA                     l4841:
 11756                           
 11757                           ;movement.c: 117:         fullSpeedAhead(mL,mR);
 11758  0032FA  C034  F01C         	movff	goback@mL,fullSpeedAhead@mL
 11759  0032FE  C035  F01D         	movff	goback@mL+1,fullSpeedAhead@mL+1
 11760  003302  C036  F01E         	movff	goback@mR,fullSpeedAhead@mR
 11761  003306  C037  F01F         	movff	goback@mR+1,fullSpeedAhead@mR+1
 11762  00330A  ECB0  F027         	call	_fullSpeedAhead	;wreg free
 11763  00330E                     
 11764                           ;movement.c: 118:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 11765  00330E  0E00               	movlw	0
 11766  003310  6E3B               	movwf	(goback@i+1)^0,c
 11767  003312  0E00               	movlw	0
 11768  003314  6E3A               	movwf	goback@i^0,c
 11769  003316  EF9B  F019         	goto	l4849
 11770  00331A                     l4845:
 11771  00331A  0E52               	movlw	82
 11772  00331C  6E39               	movwf	(??_goback+1)^0,c
 11773  00331E  0E2B               	movlw	43
 11774  003320  6E38               	movwf	??_goback^0,c
 11775  003322  0E00               	movlw	0
 11776  003324                     u6997:
 11777  003324  2EE8               	decfsz	wreg,f,c
 11778  003326  D7FE               	bra	u6997
 11779  003328  2E38               	decfsz	??_goback^0,f,c
 11780  00332A  D7FC               	bra	u6997
 11781  00332C  2E39               	decfsz	(??_goback+1)^0,f,c
 11782  00332E  D7FA               	bra	u6997
 11783  003330  D000               	nop2	
 11784  003332  4A3A               	infsnz	goback@i^0,f,c
 11785  003334  2A3B               	incf	(goback@i+1)^0,f,c
 11786  003336                     l4849:
 11787  003336  505A               	movf	_array_index^0,w,c
 11788  003338  0D02               	mullw	2
 11789  00333A  0E3C               	movlw	low _memory
 11790  00333C  24F3               	addwf	243,w,c
 11791  00333E  6ED9               	movwf	fsr2l,c
 11792  003340  0E01               	movlw	high _memory
 11793  003342  20F4               	addwfc	prodh,w,c
 11794  003344  6EDA               	movwf	fsr2h,c
 11795  003346  50DE               	movf	postinc2,w,c
 11796  003348  5C3A               	subwf	goback@i^0,w,c
 11797  00334A  50DE               	movf	postinc2,w,c
 11798  00334C  583B               	subwfb	(goback@i+1)^0,w,c
 11799  00334E  A0D8               	btfss	status,0,c
 11800  003350  EFAC  F019         	goto	u4881
 11801  003354  EFAE  F019         	goto	u4880
 11802  003358                     u4881:
 11803  003358  EF8D  F019         	goto	l4845
 11804  00335C                     u4880:
 11805  00335C                     
 11806                           ;movement.c: 119:         stop(mL,mR);
 11807  00335C  C034  F01C         	movff	goback@mL,stop@mL
 11808  003360  C035  F01D         	movff	goback@mL+1,stop@mL+1
 11809  003364  C036  F01E         	movff	goback@mR,stop@mR
 11810  003368  C037  F01F         	movff	goback@mR+1,stop@mR+1
 11811  00336C  ECFC  F026         	call	_stop	;wreg free
 11812  003370                     
 11813                           ;movement.c: 120:         if (array_index == 0){break;}
 11814  003370  505A               	movf	_array_index^0,w,c
 11815  003372  A4D8               	btfss	status,2,c
 11816  003374  EFBE  F019         	goto	u4891
 11817  003378  EFC0  F019         	goto	u4890
 11818  00337C                     u4891:
 11819  00337C  EFC2  F019         	goto	l4857
 11820  003380                     u4890:
 11821  003380  EFB7  F01A         	goto	l703
 11822  003384                     l4857:
 11823                           
 11824                           ;movement.c: 121:         array_index--;
 11825  003384  065A               	decf	_array_index^0,f,c
 11826  003386                     
 11827                           ;movement.c: 123:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 11828  003386  505A               	movf	_array_index^0,w,c
 11829  003388  0D02               	mullw	2
 11830  00338A  0E3C               	movlw	low _memory
 11831  00338C  24F3               	addwf	243,w,c
 11832  00338E  6ED9               	movwf	fsr2l,c
 11833  003390  0E01               	movlw	high _memory
 11834  003392  20F4               	addwfc	prodh,w,c
 11835  003394  6EDA               	movwf	fsr2h,c
 11836  003396  04DE               	decf	postinc2,w,c
 11837  003398  10DE               	iorwf	postinc2,w,c
 11838  00339A  A4D8               	btfss	status,2,c
 11839  00339C  EFD2  F019         	goto	u4901
 11840  0033A0  EFD4  F019         	goto	u4900
 11841  0033A4                     u4901:
 11842  0033A4  EFE1  F019         	goto	l4865
 11843  0033A8                     u4900:
 11844  0033A8  C034  F022         	movff	goback@mL,turnLeft@mL
 11845  0033AC  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11846  0033B0  C036  F024         	movff	goback@mR,turnLeft@mR
 11847  0033B4  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11848  0033B8  0E5A               	movlw	90
 11849  0033BA  6E26               	movwf	turnLeft@angle_left^0,c
 11850  0033BC  EC8C  F020         	call	_turnLeft	;wreg free
 11851  0033C0  065A               	decf	_array_index^0,f,c
 11852  0033C2                     l4865:
 11853                           
 11854                           ;movement.c: 124:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 11855  0033C2  505A               	movf	_array_index^0,w,c
 11856  0033C4  0D02               	mullw	2
 11857  0033C6  0E3C               	movlw	low _memory
 11858  0033C8  24F3               	addwf	243,w,c
 11859  0033CA  6ED9               	movwf	fsr2l,c
 11860  0033CC  0E01               	movlw	high _memory
 11861  0033CE  20F4               	addwfc	prodh,w,c
 11862  0033D0  6EDA               	movwf	fsr2h,c
 11863  0033D2  0E02               	movlw	2
 11864  0033D4  18DE               	xorwf	postinc2,w,c
 11865  0033D6  10DE               	iorwf	postinc2,w,c
 11866  0033D8  A4D8               	btfss	status,2,c
 11867  0033DA  EFF1  F019         	goto	u4911
 11868  0033DE  EFF3  F019         	goto	u4910
 11869  0033E2                     u4911:
 11870  0033E2  EF00  F01A         	goto	l4871
 11871  0033E6                     u4910:
 11872  0033E6  C034  F022         	movff	goback@mL,turnRight@mL
 11873  0033EA  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11874  0033EE  C036  F024         	movff	goback@mR,turnRight@mR
 11875  0033F2  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11876  0033F6  0E5A               	movlw	90
 11877  0033F8  6E26               	movwf	turnRight@angle_right^0,c
 11878  0033FA  ECCC  F01F         	call	_turnRight	;wreg free
 11879  0033FE  065A               	decf	_array_index^0,f,c
 11880  003400                     l4871:
 11881                           
 11882                           ;movement.c: 125:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 11883  003400  505A               	movf	_array_index^0,w,c
 11884  003402  0D02               	mullw	2
 11885  003404  0E3C               	movlw	low _memory
 11886  003406  24F3               	addwf	243,w,c
 11887  003408  6ED9               	movwf	fsr2l,c
 11888  00340A  0E01               	movlw	high _memory
 11889  00340C  20F4               	addwfc	prodh,w,c
 11890  00340E  6EDA               	movwf	fsr2h,c
 11891  003410  0E03               	movlw	3
 11892  003412  18DE               	xorwf	postinc2,w,c
 11893  003414  10DE               	iorwf	postinc2,w,c
 11894  003416  A4D8               	btfss	status,2,c
 11895  003418  EF10  F01A         	goto	u4921
 11896  00341C  EF12  F01A         	goto	u4920
 11897  003420                     u4921:
 11898  003420  EF1F  F01A         	goto	l4877
 11899  003424                     u4920:
 11900  003424  C034  F022         	movff	goback@mL,turnLeft@mL
 11901  003428  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11902  00342C  C036  F024         	movff	goback@mR,turnLeft@mR
 11903  003430  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11904  003434  0EB4               	movlw	180
 11905  003436  6E26               	movwf	turnLeft@angle_left^0,c
 11906  003438  EC8C  F020         	call	_turnLeft	;wreg free
 11907  00343C  065A               	decf	_array_index^0,f,c
 11908  00343E                     l4877:
 11909                           
 11910                           ;movement.c: 126:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 11911  00343E  505A               	movf	_array_index^0,w,c
 11912  003440  0D02               	mullw	2
 11913  003442  0E3C               	movlw	low _memory
 11914  003444  24F3               	addwf	243,w,c
 11915  003446  6ED9               	movwf	fsr2l,c
 11916  003448  0E01               	movlw	high _memory
 11917  00344A  20F4               	addwfc	prodh,w,c
 11918  00344C  6EDA               	movwf	fsr2h,c
 11919  00344E  0E04               	movlw	4
 11920  003450  18DE               	xorwf	postinc2,w,c
 11921  003452  10DE               	iorwf	postinc2,w,c
 11922  003454  A4D8               	btfss	status,2,c
 11923  003456  EF2F  F01A         	goto	u4931
 11924  00345A  EF31  F01A         	goto	u4930
 11925  00345E                     u4931:
 11926  00345E  EF48  F01A         	goto	l4883
 11927  003462                     u4930:
 11928  003462  C034  F028         	movff	goback@mL,reverse_square@mL
 11929  003466  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 11930  00346A  C036  F02A         	movff	goback@mR,reverse_square@mR
 11931  00346E  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11932  003472  EC76  F02A         	call	_reverse_square	;wreg free
 11933  003476  C034  F022         	movff	goback@mL,turnLeft@mL
 11934  00347A  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11935  00347E  C036  F024         	movff	goback@mR,turnLeft@mR
 11936  003482  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11937  003486  0E5A               	movlw	90
 11938  003488  6E26               	movwf	turnLeft@angle_left^0,c
 11939  00348A  EC8C  F020         	call	_turnLeft	;wreg free
 11940  00348E  065A               	decf	_array_index^0,f,c
 11941  003490                     l4883:
 11942                           
 11943                           ;movement.c: 127:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 11944  003490  505A               	movf	_array_index^0,w,c
 11945  003492  0D02               	mullw	2
 11946  003494  0E3C               	movlw	low _memory
 11947  003496  24F3               	addwf	243,w,c
 11948  003498  6ED9               	movwf	fsr2l,c
 11949  00349A  0E01               	movlw	high _memory
 11950  00349C  20F4               	addwfc	prodh,w,c
 11951  00349E  6EDA               	movwf	fsr2h,c
 11952  0034A0  0E05               	movlw	5
 11953  0034A2  18DE               	xorwf	postinc2,w,c
 11954  0034A4  10DE               	iorwf	postinc2,w,c
 11955  0034A6  A4D8               	btfss	status,2,c
 11956  0034A8  EF58  F01A         	goto	u4941
 11957  0034AC  EF5A  F01A         	goto	u4940
 11958  0034B0                     u4941:
 11959  0034B0  EF71  F01A         	goto	l4889
 11960  0034B4                     u4940:
 11961  0034B4  C034  F028         	movff	goback@mL,reverse_square@mL
 11962  0034B8  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 11963  0034BC  C036  F02A         	movff	goback@mR,reverse_square@mR
 11964  0034C0  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11965  0034C4  EC76  F02A         	call	_reverse_square	;wreg free
 11966  0034C8  C034  F022         	movff	goback@mL,turnRight@mL
 11967  0034CC  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11968  0034D0  C036  F024         	movff	goback@mR,turnRight@mR
 11969  0034D4  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11970  0034D8  0E5A               	movlw	90
 11971  0034DA  6E26               	movwf	turnRight@angle_right^0,c
 11972  0034DC  ECCC  F01F         	call	_turnRight	;wreg free
 11973  0034E0  065A               	decf	_array_index^0,f,c
 11974  0034E2                     l4889:
 11975                           
 11976                           ;movement.c: 128:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 11977  0034E2  505A               	movf	_array_index^0,w,c
 11978  0034E4  0D02               	mullw	2
 11979  0034E6  0E3C               	movlw	low _memory
 11980  0034E8  24F3               	addwf	243,w,c
 11981  0034EA  6ED9               	movwf	fsr2l,c
 11982  0034EC  0E01               	movlw	high _memory
 11983  0034EE  20F4               	addwfc	prodh,w,c
 11984  0034F0  6EDA               	movwf	fsr2h,c
 11985  0034F2  0E06               	movlw	6
 11986  0034F4  18DE               	xorwf	postinc2,w,c
 11987  0034F6  10DE               	iorwf	postinc2,w,c
 11988  0034F8  A4D8               	btfss	status,2,c
 11989  0034FA  EF81  F01A         	goto	u4951
 11990  0034FE  EF83  F01A         	goto	u4950
 11991  003502                     u4951:
 11992  003502  EF90  F01A         	goto	l4895
 11993  003506                     u4950:
 11994  003506  C034  F022         	movff	goback@mL,turnLeft@mL
 11995  00350A  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11996  00350E  C036  F024         	movff	goback@mR,turnLeft@mR
 11997  003512  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11998  003516  0E87               	movlw	135
 11999  003518  6E26               	movwf	turnLeft@angle_left^0,c
 12000  00351A  EC8C  F020         	call	_turnLeft	;wreg free
 12001  00351E  065A               	decf	_array_index^0,f,c
 12002  003520                     l4895:
 12003                           
 12004                           ;movement.c: 129:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 12005  003520  505A               	movf	_array_index^0,w,c
 12006  003522  0D02               	mullw	2
 12007  003524  0E3C               	movlw	low _memory
 12008  003526  24F3               	addwf	243,w,c
 12009  003528  6ED9               	movwf	fsr2l,c
 12010  00352A  0E01               	movlw	high _memory
 12011  00352C  20F4               	addwfc	prodh,w,c
 12012  00352E  6EDA               	movwf	fsr2h,c
 12013  003530  0E07               	movlw	7
 12014  003532  18DE               	xorwf	postinc2,w,c
 12015  003534  10DE               	iorwf	postinc2,w,c
 12016  003536  A4D8               	btfss	status,2,c
 12017  003538  EFA0  F01A         	goto	u4961
 12018  00353C  EFA2  F01A         	goto	u4960
 12019  003540                     u4961:
 12020  003540  EFAF  F01A         	goto	l4901
 12021  003544                     u4960:
 12022  003544  C034  F022         	movff	goback@mL,turnRight@mL
 12023  003548  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 12024  00354C  C036  F024         	movff	goback@mR,turnRight@mR
 12025  003550  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 12026  003554  0E79               	movlw	121
 12027  003556  6E26               	movwf	turnRight@angle_right^0,c
 12028  003558  ECCC  F01F         	call	_turnRight	;wreg free
 12029  00355C  065A               	decf	_array_index^0,f,c
 12030  00355E                     l4901:
 12031                           
 12032                           ;movement.c: 116:     while(array_index > 0){
 12033  00355E  505A               	movf	_array_index^0,w,c
 12034  003560  A4D8               	btfss	status,2,c
 12035  003562  EFB5  F01A         	goto	u4971
 12036  003566  EFB7  F01A         	goto	u4970
 12037  00356A                     u4971:
 12038  00356A  EF7D  F019         	goto	l4841
 12039  00356E                     u4970:
 12040  00356E                     l703:
 12041  00356E  0012               	return		;funcret
 12042  003570                     __end_of_goback:
 12043                           	callstack 0
 12044                           
 12045 ;; *************** function _turnRight *****************
 12046 ;; Defined at:
 12047 ;;		line 121 in file "dc_motor.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12050 ;;		 -> main@motorL(10), 
 12051 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12052 ;;		 -> main@motorR(10), 
 12053 ;;  angle_right     1   37[COMRAM] unsigned char 
 12054 ;; Auto vars:     Size  Location     Type
 12055 ;;  i               2   47[COMRAM] unsigned int 
 12056 ;;  i               2   45[COMRAM] unsigned int 
 12057 ;;  i               2   43[COMRAM] unsigned int 
 12058 ;;  delay           2   49[COMRAM] unsigned int 
 12059 ;;  delay_180       2   41[COMRAM] unsigned int 
 12060 ;;  delay_135       2   39[COMRAM] unsigned int 
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12065 ;; Tracked objects:
 12066 ;;		On entry : 0/0
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12070 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12071 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12072 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12073 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12074 ;;Total ram usage:       18 bytes
 12075 ;; Hardware stack levels used: 1
 12076 ;; Hardware stack levels required when called: 5
 12077 ;; This function calls:
 12078 ;;		_setMotorPWM
 12079 ;;		_stop
 12080 ;; This function is called by:
 12081 ;;		_action
 12082 ;;		_test_action
 12083 ;;		_goback
 12084 ;;		_movement
 12085 ;; This function uses a non-reentrant model
 12086 ;;
 12087                           
 12088                           	psect	text64
 12089  003F98                     __ptext64:
 12090                           	callstack 0
 12091  003F98                     _turnRight:
 12092                           	callstack 23
 12093  003F98                     
 12094                           ;dc_motor.c: 121: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 122: {;dc_motor.c: 123:     mL->direction=1;
 12095  003F98  EE20 F001          	lfsr	2,1
 12096  003F9C  5022               	movf	turnRight@mL^0,w,c
 12097  003F9E  26D9               	addwf	fsr2l,f,c
 12098  003FA0  5023               	movf	(turnRight@mL+1)^0,w,c
 12099  003FA2  22DA               	addwfc	fsr2h,f,c
 12100  003FA4  0E01               	movlw	1
 12101  003FA6  6EDF               	movwf	indf2,c
 12102                           
 12103                           ;dc_motor.c: 124:     mR->direction=1;
 12104  003FA8  EE20 F001          	lfsr	2,1
 12105  003FAC  5024               	movf	turnRight@mR^0,w,c
 12106  003FAE  26D9               	addwf	fsr2l,f,c
 12107  003FB0  5025               	movf	(turnRight@mR+1)^0,w,c
 12108  003FB2  22DA               	addwfc	fsr2h,f,c
 12109  003FB4  0E01               	movlw	1
 12110  003FB6  6EDF               	movwf	indf2,c
 12111                           
 12112                           ;dc_motor.c: 125:     while (mL->power <25){
 12113  003FB8  EFFD  F01F         	goto	l4421
 12114  003FBC                     l4413:
 12115                           
 12116                           ;dc_motor.c: 126:         mL->power += 5;
 12117  003FBC  C022  FFD9         	movff	turnRight@mL,fsr2l
 12118  003FC0  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12119  003FC4  0E05               	movlw	5
 12120  003FC6  26DF               	addwf	indf2,f,c
 12121                           
 12122                           ;dc_motor.c: 127:         mR->power = 0;
 12123  003FC8  C024  FFD9         	movff	turnRight@mR,fsr2l
 12124  003FCC  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 12125  003FD0  0E00               	movlw	0
 12126  003FD2  6EDF               	movwf	indf2,c
 12127  003FD4                     
 12128                           ;dc_motor.c: 128:         setMotorPWM(mL);
 12129  003FD4  C022  F011         	movff	turnRight@mL,setMotorPWM@m
 12130  003FD8  C023  F012         	movff	turnRight@mL+1,setMotorPWM@m+1
 12131  003FDC  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12132  003FE0                     
 12133                           ;dc_motor.c: 129:         setMotorPWM(mR);
 12134  003FE0  C024  F011         	movff	turnRight@mR,setMotorPWM@m
 12135  003FE4  C025  F012         	movff	turnRight@mR+1,setMotorPWM@m+1
 12136  003FE8  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12137  003FEC                     
 12138                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12139  003FEC  0ED0               	movlw	208
 12140  003FEE  6E27               	movwf	??_turnRight^0,c
 12141  003FF0  0ECA               	movlw	202
 12142  003FF2                     u7007:
 12143  003FF2  2EE8               	decfsz	wreg,f,c
 12144  003FF4  D7FE               	bra	u7007
 12145  003FF6  2E27               	decfsz	??_turnRight^0,f,c
 12146  003FF8  D7FC               	bra	u7007
 12147  003FFA                     l4421:
 12148                           
 12149                           ;dc_motor.c: 125:     while (mL->power <25){
 12150  003FFA  C022  FFD9         	movff	turnRight@mL,fsr2l
 12151  003FFE  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12152  004002  0E18               	movlw	24
 12153  004004  64DF               	cpfsgt	indf2,c
 12154  004006  EF07  F020         	goto	u4291
 12155  00400A  EF09  F020         	goto	u4290
 12156  00400E                     u4291:
 12157  00400E  EFDE  F01F         	goto	l4413
 12158  004012                     u4290:
 12159  004012                     
 12160                           ;dc_motor.c: 132:     unsigned int delay = angle_right * SENSITIVITY;
 12161  004012  5026               	movf	turnRight@angle_right^0,w,c
 12162  004014  0100               	movlb	0	; () banked
 12163  004016  03FC               	mulwf	_SENSITIVITY& (0+255),b
 12164  004018  CFF3 F032          	movff	prodl,turnRight@delay
 12165  00401C  CFF4 F033          	movff	prodh,turnRight@delay+1
 12166  004020                     
 12167                           ; BSR set to: 0
 12168  004020  0E0A               	movlw	10
 12169  004022  2432               	addwf	turnRight@delay^0,w,c
 12170  004024  6E28               	movwf	turnRight@delay_135^0,c
 12171  004026  0E00               	movlw	0
 12172  004028  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12173  00402A  6E29               	movwf	(turnRight@delay_135+1)^0,c
 12174  00402C                     
 12175                           ; BSR set to: 0
 12176  00402C  0E14               	movlw	20
 12177  00402E  2432               	addwf	turnRight@delay^0,w,c
 12178  004030  6E2A               	movwf	turnRight@delay_180^0,c
 12179  004032  0E00               	movlw	0
 12180  004034  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12181  004036  6E2B               	movwf	(turnRight@delay_180+1)^0,c
 12182  004038                     
 12183                           ; BSR set to: 0
 12184                           ;dc_motor.c: 135:     if (angle_right == 180){
 12185  004038  0EB4               	movlw	180
 12186  00403A  1826               	xorwf	turnRight@angle_right^0,w,c
 12187  00403C  A4D8               	btfss	status,2,c
 12188  00403E  EF23  F020         	goto	u4301
 12189  004042  EF25  F020         	goto	u4300
 12190  004046                     u4301:
 12191  004046  EF40  F020         	goto	l4437
 12192  00404A                     u4300:
 12193  00404A                     
 12194                           ; BSR set to: 0
 12195                           ;dc_motor.c: 136:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12196  00404A  0E00               	movlw	0
 12197  00404C  6E2D               	movwf	(turnRight@i+1)^0,c
 12198  00404E  0E00               	movlw	0
 12199  004050  6E2C               	movwf	turnRight@i^0,c
 12200  004052  EF35  F020         	goto	l359
 12201  004056                     l4433:
 12202  004056  0E15               	movlw	21
 12203  004058  6E27               	movwf	??_turnRight^0,c
 12204  00405A  0EC6               	movlw	198
 12205  00405C                     u7017:
 12206  00405C  2EE8               	decfsz	wreg,f,c
 12207  00405E  D7FE               	bra	u7017
 12208  004060  2E27               	decfsz	??_turnRight^0,f,c
 12209  004062  D7FC               	bra	u7017
 12210  004064  D000               	nop2	
 12211  004066  4A2C               	infsnz	turnRight@i^0,f,c
 12212  004068  2A2D               	incf	(turnRight@i+1)^0,f,c
 12213  00406A                     l359:
 12214  00406A  502A               	movf	turnRight@delay_180^0,w,c
 12215  00406C  5C2C               	subwf	turnRight@i^0,w,c
 12216  00406E  502B               	movf	(turnRight@delay_180+1)^0,w,c
 12217  004070  582D               	subwfb	(turnRight@i+1)^0,w,c
 12218  004072  A0D8               	btfss	status,0,c
 12219  004074  EF3E  F020         	goto	u4311
 12220  004078  EF40  F020         	goto	u4310
 12221  00407C                     u4311:
 12222  00407C  EF2B  F020         	goto	l4433
 12223  004080                     u4310:
 12224  004080                     l4437:
 12225                           
 12226                           ;dc_motor.c: 138:     if (angle_right == 135){
 12227  004080  0E87               	movlw	135
 12228  004082  1826               	xorwf	turnRight@angle_right^0,w,c
 12229  004084  A4D8               	btfss	status,2,c
 12230  004086  EF47  F020         	goto	u4321
 12231  00408A  EF49  F020         	goto	u4320
 12232  00408E                     u4321:
 12233  00408E  EF66  F020         	goto	l4445
 12234  004092                     u4320:
 12235  004092                     
 12236                           ;dc_motor.c: 139:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12237  004092  0E00               	movlw	0
 12238  004094  6E2F               	movwf	(turnRight@i_1461+1)^0,c
 12239  004096  0E00               	movlw	0
 12240  004098  6E2E               	movwf	turnRight@i_1461^0,c
 12241  00409A  EF59  F020         	goto	l363
 12242  00409E                     l4441:
 12243  00409E  0E15               	movlw	21
 12244  0040A0  6E27               	movwf	??_turnRight^0,c
 12245  0040A2  0EC6               	movlw	198
 12246  0040A4                     u7027:
 12247  0040A4  2EE8               	decfsz	wreg,f,c
 12248  0040A6  D7FE               	bra	u7027
 12249  0040A8  2E27               	decfsz	??_turnRight^0,f,c
 12250  0040AA  D7FC               	bra	u7027
 12251  0040AC  D000               	nop2	
 12252  0040AE  4A2E               	infsnz	turnRight@i_1461^0,f,c
 12253  0040B0  2A2F               	incf	(turnRight@i_1461+1)^0,f,c
 12254  0040B2                     l363:
 12255  0040B2  5028               	movf	turnRight@delay_135^0,w,c
 12256  0040B4  5C2E               	subwf	turnRight@i_1461^0,w,c
 12257  0040B6  5029               	movf	(turnRight@delay_135+1)^0,w,c
 12258  0040B8  582F               	subwfb	(turnRight@i_1461+1)^0,w,c
 12259  0040BA  A0D8               	btfss	status,0,c
 12260  0040BC  EF62  F020         	goto	u4331
 12261  0040C0  EF64  F020         	goto	u4330
 12262  0040C4                     u4331:
 12263  0040C4  EF4F  F020         	goto	l4441
 12264  0040C8                     u4330:
 12265  0040C8  EF81  F020         	goto	l4451
 12266  0040CC                     l4445:
 12267                           
 12268                           ;dc_motor.c: 142:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12269  0040CC  0E00               	movlw	0
 12270  0040CE  6E31               	movwf	(turnRight@i_1462+1)^0,c
 12271  0040D0  0E00               	movlw	0
 12272  0040D2  6E30               	movwf	turnRight@i_1462^0,c
 12273  0040D4  EF76  F020         	goto	l367
 12274  0040D8                     l4447:
 12275  0040D8  0E15               	movlw	21
 12276  0040DA  6E27               	movwf	??_turnRight^0,c
 12277  0040DC  0EC6               	movlw	198
 12278  0040DE                     u7037:
 12279  0040DE  2EE8               	decfsz	wreg,f,c
 12280  0040E0  D7FE               	bra	u7037
 12281  0040E2  2E27               	decfsz	??_turnRight^0,f,c
 12282  0040E4  D7FC               	bra	u7037
 12283  0040E6  D000               	nop2	
 12284  0040E8  4A30               	infsnz	turnRight@i_1462^0,f,c
 12285  0040EA  2A31               	incf	(turnRight@i_1462+1)^0,f,c
 12286  0040EC                     l367:
 12287  0040EC  5032               	movf	turnRight@delay^0,w,c
 12288  0040EE  5C30               	subwf	turnRight@i_1462^0,w,c
 12289  0040F0  5033               	movf	(turnRight@delay+1)^0,w,c
 12290  0040F2  5831               	subwfb	(turnRight@i_1462+1)^0,w,c
 12291  0040F4  A0D8               	btfss	status,0,c
 12292  0040F6  EF7F  F020         	goto	u4341
 12293  0040FA  EF81  F020         	goto	u4340
 12294  0040FE                     u4341:
 12295  0040FE  EF6C  F020         	goto	l4447
 12296  004102                     u4340:
 12297  004102                     l4451:
 12298                           
 12299                           ;dc_motor.c: 144:     stop(mL,mR);
 12300  004102  C022  F01C         	movff	turnRight@mL,stop@mL
 12301  004106  C023  F01D         	movff	turnRight@mL+1,stop@mL+1
 12302  00410A  C024  F01E         	movff	turnRight@mR,stop@mR
 12303  00410E  C025  F01F         	movff	turnRight@mR+1,stop@mR+1
 12304  004112  ECFC  F026         	call	_stop	;wreg free
 12305  004116  0012               	return		;funcret
 12306  004118                     __end_of_turnRight:
 12307                           	callstack 0
 12308                           
 12309 ;; *************** function _turnLeft *****************
 12310 ;; Defined at:
 12311 ;;		line 94 in file "dc_motor.c"
 12312 ;; Parameters:    Size  Location     Type
 12313 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12314 ;;		 -> main@motorL(10), 
 12315 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12316 ;;		 -> main@motorR(10), 
 12317 ;;  angle_left      1   37[COMRAM] unsigned char 
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;  i               2   47[COMRAM] unsigned int 
 12320 ;;  i               2   45[COMRAM] unsigned int 
 12321 ;;  i               2   43[COMRAM] unsigned int 
 12322 ;;  delay           2   49[COMRAM] unsigned int 
 12323 ;;  delay_180       2   41[COMRAM] unsigned int 
 12324 ;;  delay_135       2   39[COMRAM] unsigned int 
 12325 ;; Return value:  Size  Location     Type
 12326 ;;                  1    wreg      void 
 12327 ;; Registers used:
 12328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12329 ;; Tracked objects:
 12330 ;;		On entry : 0/0
 12331 ;;		On exit  : 0/0
 12332 ;;		Unchanged: 0/0
 12333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12334 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12335 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12337 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12338 ;;Total ram usage:       18 bytes
 12339 ;; Hardware stack levels used: 1
 12340 ;; Hardware stack levels required when called: 5
 12341 ;; This function calls:
 12342 ;;		_setMotorPWM
 12343 ;;		_stop
 12344 ;; This function is called by:
 12345 ;;		_action
 12346 ;;		_test_action
 12347 ;;		_goback
 12348 ;; This function uses a non-reentrant model
 12349 ;;
 12350                           
 12351                           	psect	text65
 12352  004118                     __ptext65:
 12353                           	callstack 0
 12354  004118                     _turnLeft:
 12355                           	callstack 23
 12356  004118                     
 12357                           ;dc_motor.c: 94: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 95: {;dc_motor.c: 96:       mL->direction=1;
 12358  004118  EE20 F001          	lfsr	2,1
 12359  00411C  5022               	movf	turnLeft@mL^0,w,c
 12360  00411E  26D9               	addwf	fsr2l,f,c
 12361  004120  5023               	movf	(turnLeft@mL+1)^0,w,c
 12362  004122  22DA               	addwfc	fsr2h,f,c
 12363  004124  0E01               	movlw	1
 12364  004126  6EDF               	movwf	indf2,c
 12365                           
 12366                           ;dc_motor.c: 97:       mR->direction=1;
 12367  004128  EE20 F001          	lfsr	2,1
 12368  00412C  5024               	movf	turnLeft@mR^0,w,c
 12369  00412E  26D9               	addwf	fsr2l,f,c
 12370  004130  5025               	movf	(turnLeft@mR+1)^0,w,c
 12371  004132  22DA               	addwfc	fsr2h,f,c
 12372  004134  0E01               	movlw	1
 12373  004136  6EDF               	movwf	indf2,c
 12374                           
 12375                           ;dc_motor.c: 98:       while (mR->power <25){
 12376  004138  EFBD  F020         	goto	l4463
 12377  00413C                     l4455:
 12378                           
 12379                           ;dc_motor.c: 99:         mR->power += 5;
 12380  00413C  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12381  004140  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12382  004144  0E05               	movlw	5
 12383  004146  26DF               	addwf	indf2,f,c
 12384                           
 12385                           ;dc_motor.c: 100:         mL->power = 0;
 12386  004148  C022  FFD9         	movff	turnLeft@mL,fsr2l
 12387  00414C  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 12388  004150  0E00               	movlw	0
 12389  004152  6EDF               	movwf	indf2,c
 12390  004154                     
 12391                           ;dc_motor.c: 101:         setMotorPWM(mL);
 12392  004154  C022  F011         	movff	turnLeft@mL,setMotorPWM@m
 12393  004158  C023  F012         	movff	turnLeft@mL+1,setMotorPWM@m+1
 12394  00415C  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12395  004160                     
 12396                           ;dc_motor.c: 102:         setMotorPWM(mR);
 12397  004160  C024  F011         	movff	turnLeft@mR,setMotorPWM@m
 12398  004164  C025  F012         	movff	turnLeft@mR+1,setMotorPWM@m+1
 12399  004168  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12400  00416C                     
 12401                           ;dc_motor.c: 103:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12402  00416C  0ED0               	movlw	208
 12403  00416E  6E27               	movwf	??_turnLeft^0,c
 12404  004170  0ECA               	movlw	202
 12405  004172                     u7047:
 12406  004172  2EE8               	decfsz	wreg,f,c
 12407  004174  D7FE               	bra	u7047
 12408  004176  2E27               	decfsz	??_turnLeft^0,f,c
 12409  004178  D7FC               	bra	u7047
 12410  00417A                     l4463:
 12411                           
 12412                           ;dc_motor.c: 98:       while (mR->power <25){
 12413  00417A  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12414  00417E  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12415  004182  0E18               	movlw	24
 12416  004184  64DF               	cpfsgt	indf2,c
 12417  004186  EFC7  F020         	goto	u4351
 12418  00418A  EFC9  F020         	goto	u4350
 12419  00418E                     u4351:
 12420  00418E  EF9E  F020         	goto	l4455
 12421  004192                     u4350:
 12422  004192                     
 12423                           ;dc_motor.c: 105:     unsigned int delay = angle_left * SENSITIVITY;
 12424  004192  5026               	movf	turnLeft@angle_left^0,w,c
 12425  004194  0100               	movlb	0	; () banked
 12426  004196  03FC               	mulwf	_SENSITIVITY& (0+255),b
 12427  004198  CFF3 F032          	movff	prodl,turnLeft@delay
 12428  00419C  CFF4 F033          	movff	prodh,turnLeft@delay+1
 12429  0041A0                     
 12430                           ; BSR set to: 0
 12431  0041A0  0E0A               	movlw	10
 12432  0041A2  2432               	addwf	turnLeft@delay^0,w,c
 12433  0041A4  6E28               	movwf	turnLeft@delay_135^0,c
 12434  0041A6  0E00               	movlw	0
 12435  0041A8  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12436  0041AA  6E29               	movwf	(turnLeft@delay_135+1)^0,c
 12437  0041AC                     
 12438                           ; BSR set to: 0
 12439  0041AC  0E14               	movlw	20
 12440  0041AE  2432               	addwf	turnLeft@delay^0,w,c
 12441  0041B0  6E2A               	movwf	turnLeft@delay_180^0,c
 12442  0041B2  0E00               	movlw	0
 12443  0041B4  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12444  0041B6  6E2B               	movwf	(turnLeft@delay_180+1)^0,c
 12445  0041B8                     
 12446                           ; BSR set to: 0
 12447                           ;dc_motor.c: 108:     if (angle_left == 180){
 12448  0041B8  0EB4               	movlw	180
 12449  0041BA  1826               	xorwf	turnLeft@angle_left^0,w,c
 12450  0041BC  A4D8               	btfss	status,2,c
 12451  0041BE  EFE3  F020         	goto	u4361
 12452  0041C2  EFE5  F020         	goto	u4360
 12453  0041C6                     u4361:
 12454  0041C6  EF00  F021         	goto	l4479
 12455  0041CA                     u4360:
 12456  0041CA                     
 12457                           ; BSR set to: 0
 12458                           ;dc_motor.c: 109:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12459  0041CA  0E00               	movlw	0
 12460  0041CC  6E2D               	movwf	(turnLeft@i+1)^0,c
 12461  0041CE  0E00               	movlw	0
 12462  0041D0  6E2C               	movwf	turnLeft@i^0,c
 12463  0041D2  EFF5  F020         	goto	l341
 12464  0041D6                     l4475:
 12465  0041D6  0E15               	movlw	21
 12466  0041D8  6E27               	movwf	??_turnLeft^0,c
 12467  0041DA  0EC6               	movlw	198
 12468  0041DC                     u7057:
 12469  0041DC  2EE8               	decfsz	wreg,f,c
 12470  0041DE  D7FE               	bra	u7057
 12471  0041E0  2E27               	decfsz	??_turnLeft^0,f,c
 12472  0041E2  D7FC               	bra	u7057
 12473  0041E4  D000               	nop2	
 12474  0041E6  4A2C               	infsnz	turnLeft@i^0,f,c
 12475  0041E8  2A2D               	incf	(turnLeft@i+1)^0,f,c
 12476  0041EA                     l341:
 12477  0041EA  502A               	movf	turnLeft@delay_180^0,w,c
 12478  0041EC  5C2C               	subwf	turnLeft@i^0,w,c
 12479  0041EE  502B               	movf	(turnLeft@delay_180+1)^0,w,c
 12480  0041F0  582D               	subwfb	(turnLeft@i+1)^0,w,c
 12481  0041F2  A0D8               	btfss	status,0,c
 12482  0041F4  EFFE  F020         	goto	u4371
 12483  0041F8  EF00  F021         	goto	u4370
 12484  0041FC                     u4371:
 12485  0041FC  EFEB  F020         	goto	l4475
 12486  004200                     u4370:
 12487  004200                     l4479:
 12488                           
 12489                           ;dc_motor.c: 111:     if (angle_left == 135){
 12490  004200  0E87               	movlw	135
 12491  004202  1826               	xorwf	turnLeft@angle_left^0,w,c
 12492  004204  A4D8               	btfss	status,2,c
 12493  004206  EF07  F021         	goto	u4381
 12494  00420A  EF09  F021         	goto	u4380
 12495  00420E                     u4381:
 12496  00420E  EF26  F021         	goto	l4487
 12497  004212                     u4380:
 12498  004212                     
 12499                           ;dc_motor.c: 112:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12500  004212  0E00               	movlw	0
 12501  004214  6E2F               	movwf	(turnLeft@i_1436+1)^0,c
 12502  004216  0E00               	movlw	0
 12503  004218  6E2E               	movwf	turnLeft@i_1436^0,c
 12504  00421A  EF19  F021         	goto	l345
 12505  00421E                     l4483:
 12506  00421E  0E15               	movlw	21
 12507  004220  6E27               	movwf	??_turnLeft^0,c
 12508  004222  0EC6               	movlw	198
 12509  004224                     u7067:
 12510  004224  2EE8               	decfsz	wreg,f,c
 12511  004226  D7FE               	bra	u7067
 12512  004228  2E27               	decfsz	??_turnLeft^0,f,c
 12513  00422A  D7FC               	bra	u7067
 12514  00422C  D000               	nop2	
 12515  00422E  4A2E               	infsnz	turnLeft@i_1436^0,f,c
 12516  004230  2A2F               	incf	(turnLeft@i_1436+1)^0,f,c
 12517  004232                     l345:
 12518  004232  5028               	movf	turnLeft@delay_135^0,w,c
 12519  004234  5C2E               	subwf	turnLeft@i_1436^0,w,c
 12520  004236  5029               	movf	(turnLeft@delay_135+1)^0,w,c
 12521  004238  582F               	subwfb	(turnLeft@i_1436+1)^0,w,c
 12522  00423A  A0D8               	btfss	status,0,c
 12523  00423C  EF22  F021         	goto	u4391
 12524  004240  EF24  F021         	goto	u4390
 12525  004244                     u4391:
 12526  004244  EF0F  F021         	goto	l4483
 12527  004248                     u4390:
 12528  004248  EF41  F021         	goto	l4493
 12529  00424C                     l4487:
 12530                           
 12531                           ;dc_motor.c: 115:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12532  00424C  0E00               	movlw	0
 12533  00424E  6E31               	movwf	(turnLeft@i_1437+1)^0,c
 12534  004250  0E00               	movlw	0
 12535  004252  6E30               	movwf	turnLeft@i_1437^0,c
 12536  004254  EF36  F021         	goto	l349
 12537  004258                     l4489:
 12538  004258  0E15               	movlw	21
 12539  00425A  6E27               	movwf	??_turnLeft^0,c
 12540  00425C  0EC6               	movlw	198
 12541  00425E                     u7077:
 12542  00425E  2EE8               	decfsz	wreg,f,c
 12543  004260  D7FE               	bra	u7077
 12544  004262  2E27               	decfsz	??_turnLeft^0,f,c
 12545  004264  D7FC               	bra	u7077
 12546  004266  D000               	nop2	
 12547  004268  4A30               	infsnz	turnLeft@i_1437^0,f,c
 12548  00426A  2A31               	incf	(turnLeft@i_1437+1)^0,f,c
 12549  00426C                     l349:
 12550  00426C  5032               	movf	turnLeft@delay^0,w,c
 12551  00426E  5C30               	subwf	turnLeft@i_1437^0,w,c
 12552  004270  5033               	movf	(turnLeft@delay+1)^0,w,c
 12553  004272  5831               	subwfb	(turnLeft@i_1437+1)^0,w,c
 12554  004274  A0D8               	btfss	status,0,c
 12555  004276  EF3F  F021         	goto	u4401
 12556  00427A  EF41  F021         	goto	u4400
 12557  00427E                     u4401:
 12558  00427E  EF2C  F021         	goto	l4489
 12559  004282                     u4400:
 12560  004282                     l4493:
 12561                           
 12562                           ;dc_motor.c: 117:     stop(mL,mR);
 12563  004282  C022  F01C         	movff	turnLeft@mL,stop@mL
 12564  004286  C023  F01D         	movff	turnLeft@mL+1,stop@mL+1
 12565  00428A  C024  F01E         	movff	turnLeft@mR,stop@mR
 12566  00428E  C025  F01F         	movff	turnLeft@mR+1,stop@mR+1
 12567  004292  ECFC  F026         	call	_stop	;wreg free
 12568  004296  0012               	return		;funcret
 12569  004298                     __end_of_turnLeft:
 12570                           	callstack 0
 12571                           
 12572 ;; *************** function _reverse_square *****************
 12573 ;; Defined at:
 12574 ;;		line 188 in file "dc_motor.c"
 12575 ;; Parameters:    Size  Location     Type
 12576 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 12577 ;;		 -> main@motorL(10), 
 12578 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 12579 ;;		 -> main@motorR(10), 
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12595 ;;Total ram usage:        6 bytes
 12596 ;; Hardware stack levels used: 1
 12597 ;; Hardware stack levels required when called: 6
 12598 ;; This function calls:
 12599 ;;		_fullSpeedBack
 12600 ;;		_stop
 12601 ;; This function is called by:
 12602 ;;		_action
 12603 ;;		_goback
 12604 ;; This function uses a non-reentrant model
 12605 ;;
 12606                           
 12607                           	psect	text66
 12608  0054EC                     __ptext66:
 12609                           	callstack 0
 12610  0054EC                     _reverse_square:
 12611                           	callstack 23
 12612  0054EC                     
 12613                           ;dc_motor.c: 188: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 189: { fullSpeedBack(mL, mR);
 12614  0054EC  C028  F022         	movff	reverse_square@mL,fullSpeedBack@mL
 12615  0054F0  C029  F023         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 12616  0054F4  C02A  F024         	movff	reverse_square@mR,fullSpeedBack@mR
 12617  0054F8  C02B  F025         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 12618  0054FC  EC9C  F026         	call	_fullSpeedBack	;wreg free
 12619  005500                     
 12620                           ;dc_motor.c: 190:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12621  005500  0E52               	movlw	82
 12622  005502  6E2D               	movwf	(??_reverse_square+1)^0,c
 12623  005504  0E2B               	movlw	43
 12624  005506  6E2C               	movwf	??_reverse_square^0,c
 12625  005508  0E00               	movlw	0
 12626  00550A                     u7087:
 12627  00550A  2EE8               	decfsz	wreg,f,c
 12628  00550C  D7FE               	bra	u7087
 12629  00550E  2E2C               	decfsz	??_reverse_square^0,f,c
 12630  005510  D7FC               	bra	u7087
 12631  005512  2E2D               	decfsz	(??_reverse_square+1)^0,f,c
 12632  005514  D7FA               	bra	u7087
 12633  005516  D000               	nop2	
 12634  005518                     
 12635                           ;dc_motor.c: 191:     stop(mL,mR);
 12636  005518  C028  F01C         	movff	reverse_square@mL,stop@mL
 12637  00551C  C029  F01D         	movff	reverse_square@mL+1,stop@mL+1
 12638  005520  C02A  F01E         	movff	reverse_square@mR,stop@mR
 12639  005524  C02B  F01F         	movff	reverse_square@mR+1,stop@mR+1
 12640  005528  ECFC  F026         	call	_stop	;wreg free
 12641  00552C  0012               	return		;funcret
 12642  00552E                     __end_of_reverse_square:
 12643                           	callstack 0
 12644                           
 12645 ;; *************** function _fullSpeedBack *****************
 12646 ;; Defined at:
 12647 ;;		line 167 in file "dc_motor.c"
 12648 ;; Parameters:    Size  Location     Type
 12649 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12650 ;;		 -> main@motorL(10), 
 12651 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12652 ;;		 -> main@motorR(10), 
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;		None
 12655 ;; Return value:  Size  Location     Type
 12656 ;;                  1    wreg      void 
 12657 ;; Registers used:
 12658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12659 ;; Tracked objects:
 12660 ;;		On entry : 0/0
 12661 ;;		On exit  : 0/0
 12662 ;;		Unchanged: 0/0
 12663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12668 ;;Total ram usage:        6 bytes
 12669 ;; Hardware stack levels used: 1
 12670 ;; Hardware stack levels required when called: 5
 12671 ;; This function calls:
 12672 ;;		_setMotorPWM
 12673 ;;		_stop
 12674 ;; This function is called by:
 12675 ;;		_short_reverse
 12676 ;;		_reverse_square
 12677 ;; This function uses a non-reentrant model
 12678 ;;
 12679                           
 12680                           	psect	text67
 12681  004D38                     __ptext67:
 12682                           	callstack 0
 12683  004D38                     _fullSpeedBack:
 12684                           	callstack 23
 12685  004D38                     
 12686                           ;dc_motor.c: 167: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 168: {;dc_motor.c: 169:     mL->direction=0;
 12687  004D38  EE20 F001          	lfsr	2,1
 12688  004D3C  5022               	movf	fullSpeedBack@mL^0,w,c
 12689  004D3E  26D9               	addwf	fsr2l,f,c
 12690  004D40  5023               	movf	(fullSpeedBack@mL+1)^0,w,c
 12691  004D42  22DA               	addwfc	fsr2h,f,c
 12692  004D44  0E00               	movlw	0
 12693  004D46  6EDF               	movwf	indf2,c
 12694                           
 12695                           ;dc_motor.c: 170:     mR->direction=0;
 12696  004D48  EE20 F001          	lfsr	2,1
 12697  004D4C  5024               	movf	fullSpeedBack@mR^0,w,c
 12698  004D4E  26D9               	addwf	fsr2l,f,c
 12699  004D50  5025               	movf	(fullSpeedBack@mR+1)^0,w,c
 12700  004D52  22DA               	addwfc	fsr2h,f,c
 12701  004D54  0E00               	movlw	0
 12702  004D56  6EDF               	movwf	indf2,c
 12703                           
 12704                           ;dc_motor.c: 171:     while (mL->power<50 && mR->power<50){
 12705  004D58  EFCD  F026         	goto	l4265
 12706  004D5C                     l4257:
 12707                           
 12708                           ;dc_motor.c: 172:         mL->power += 10;
 12709  004D5C  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12710  004D60  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12711  004D64  0E0A               	movlw	10
 12712  004D66  26DF               	addwf	indf2,f,c
 12713                           
 12714                           ;dc_motor.c: 173:         mR->power += 10;
 12715  004D68  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12716  004D6C  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12717  004D70  0E0A               	movlw	10
 12718  004D72  26DF               	addwf	indf2,f,c
 12719  004D74                     
 12720                           ;dc_motor.c: 174:         setMotorPWM(mL);
 12721  004D74  C022  F011         	movff	fullSpeedBack@mL,setMotorPWM@m
 12722  004D78  C023  F012         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12723  004D7C  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12724  004D80                     
 12725                           ;dc_motor.c: 175:         setMotorPWM(mR);
 12726  004D80  C024  F011         	movff	fullSpeedBack@mR,setMotorPWM@m
 12727  004D84  C025  F012         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12728  004D88  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12729  004D8C                     
 12730                           ;dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12731  004D8C  0ED0               	movlw	208
 12732  004D8E  6E26               	movwf	??_fullSpeedBack^0,c
 12733  004D90  0ECA               	movlw	202
 12734  004D92                     u7097:
 12735  004D92  2EE8               	decfsz	wreg,f,c
 12736  004D94  D7FE               	bra	u7097
 12737  004D96  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12738  004D98  D7FC               	bra	u7097
 12739  004D9A                     l4265:
 12740                           
 12741                           ;dc_motor.c: 171:     while (mL->power<50 && mR->power<50){
 12742  004D9A  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12743  004D9E  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12744  004DA2  0E32               	movlw	50
 12745  004DA4  60DF               	cpfslt	indf2,c
 12746  004DA6  EFD7  F026         	goto	u4061
 12747  004DAA  EFD9  F026         	goto	u4060
 12748  004DAE                     u4061:
 12749  004DAE  EFE5  F026         	goto	l4269
 12750  004DB2                     u4060:
 12751  004DB2  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12752  004DB6  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12753  004DBA  0E31               	movlw	49
 12754  004DBC  64DF               	cpfsgt	indf2,c
 12755  004DBE  EFE3  F026         	goto	u4071
 12756  004DC2  EFE5  F026         	goto	u4070
 12757  004DC6                     u4071:
 12758  004DC6  EFAE  F026         	goto	l4257
 12759  004DCA                     u4070:
 12760  004DCA                     l4269:
 12761                           
 12762                           ;dc_motor.c: 178:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12763  004DCA  0E29               	movlw	41
 12764  004DCC  6E27               	movwf	(??_fullSpeedBack+1)^0,c
 12765  004DCE  0E96               	movlw	150
 12766  004DD0  6E26               	movwf	??_fullSpeedBack^0,c
 12767  004DD2  0E7F               	movlw	127
 12768  004DD4                     u7107:
 12769  004DD4  2EE8               	decfsz	wreg,f,c
 12770  004DD6  D7FE               	bra	u7107
 12771  004DD8  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12772  004DDA  D7FC               	bra	u7107
 12773  004DDC  2E27               	decfsz	(??_fullSpeedBack+1)^0,f,c
 12774  004DDE  D7FA               	bra	u7107
 12775  004DE0  F000               	nop	
 12776  004DE2                     
 12777                           ;dc_motor.c: 179:     stop(mL,mR);
 12778  004DE2  C022  F01C         	movff	fullSpeedBack@mL,stop@mL
 12779  004DE6  C023  F01D         	movff	fullSpeedBack@mL+1,stop@mL+1
 12780  004DEA  C024  F01E         	movff	fullSpeedBack@mR,stop@mR
 12781  004DEE  C025  F01F         	movff	fullSpeedBack@mR+1,stop@mR+1
 12782  004DF2  ECFC  F026         	call	_stop	;wreg free
 12783  004DF6  0012               	return		;funcret
 12784  004DF8                     __end_of_fullSpeedBack:
 12785                           	callstack 0
 12786                           
 12787 ;; *************** function _stop *****************
 12788 ;; Defined at:
 12789 ;;		line 81 in file "dc_motor.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12792 ;;		 -> main@motorL(10), 
 12793 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12794 ;;		 -> main@motorR(10), 
 12795 ;; Auto vars:     Size  Location     Type
 12796 ;;		None
 12797 ;; Return value:  Size  Location     Type
 12798 ;;                  1    wreg      void 
 12799 ;; Registers used:
 12800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12801 ;; Tracked objects:
 12802 ;;		On entry : 0/0
 12803 ;;		On exit  : 0/0
 12804 ;;		Unchanged: 0/0
 12805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12810 ;;Total ram usage:        6 bytes
 12811 ;; Hardware stack levels used: 1
 12812 ;; Hardware stack levels required when called: 4
 12813 ;; This function calls:
 12814 ;;		_setMotorPWM
 12815 ;; This function is called by:
 12816 ;;		_turnLeft
 12817 ;;		_turnRight
 12818 ;;		_fullSpeedAhead_test
 12819 ;;		_fullSpeedBack
 12820 ;;		_short_reverse
 12821 ;;		_reverse_square
 12822 ;;		_main
 12823 ;;		_short_burst
 12824 ;;		_action
 12825 ;;		_goback
 12826 ;; This function uses a non-reentrant model
 12827 ;;
 12828                           
 12829                           	psect	text68
 12830  004DF8                     __ptext68:
 12831                           	callstack 0
 12832  004DF8                     _stop:
 12833                           	callstack 26
 12834  004DF8                     
 12835                           ;dc_motor.c: 81: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 82: {;d
      +                          c_motor.c: 83:     while (mL->power >0 || mR->power >0){
 12836  004DF8  EF35  F027         	goto	l4003
 12837  004DFC                     l3989:
 12838                           
 12839                           ;dc_motor.c: 84:         if (mL->power !=0){mL->power -= 5;}
 12840  004DFC  C01C  FFD9         	movff	stop@mL,fsr2l
 12841  004E00  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12842  004E04  50DF               	movf	indf2,w,c
 12843  004E06  B4D8               	btfsc	status,2,c
 12844  004E08  EF08  F027         	goto	u3711
 12845  004E0C  EF0A  F027         	goto	u3710
 12846  004E10                     u3711:
 12847  004E10  EF10  F027         	goto	l3993
 12848  004E14                     u3710:
 12849  004E14  C01C  FFD9         	movff	stop@mL,fsr2l
 12850  004E18  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12851  004E1C  0E05               	movlw	5
 12852  004E1E  5EDF               	subwf	indf2,f,c
 12853  004E20                     l3993:
 12854                           
 12855                           ;dc_motor.c: 85:         if (mR->power !=0){mR->power -= 5;}
 12856  004E20  C01E  FFD9         	movff	stop@mR,fsr2l
 12857  004E24  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12858  004E28  50DF               	movf	indf2,w,c
 12859  004E2A  B4D8               	btfsc	status,2,c
 12860  004E2C  EF1A  F027         	goto	u3721
 12861  004E30  EF1C  F027         	goto	u3720
 12862  004E34                     u3721:
 12863  004E34  EF22  F027         	goto	l3997
 12864  004E38                     u3720:
 12865  004E38  C01E  FFD9         	movff	stop@mR,fsr2l
 12866  004E3C  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12867  004E40  0E05               	movlw	5
 12868  004E42  5EDF               	subwf	indf2,f,c
 12869  004E44                     l3997:
 12870                           
 12871                           ;dc_motor.c: 86:         setMotorPWM(mL);
 12872  004E44  C01C  F011         	movff	stop@mL,setMotorPWM@m
 12873  004E48  C01D  F012         	movff	stop@mL+1,setMotorPWM@m+1
 12874  004E4C  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12875  004E50                     
 12876                           ;dc_motor.c: 87:         setMotorPWM(mR);
 12877  004E50  C01E  F011         	movff	stop@mR,setMotorPWM@m
 12878  004E54  C01F  F012         	movff	stop@mR+1,setMotorPWM@m+1
 12879  004E58  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12880  004E5C                     
 12881                           ;dc_motor.c: 88:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12882  004E5C  0ED0               	movlw	208
 12883  004E5E  6E20               	movwf	??_stop^0,c
 12884  004E60  0ECA               	movlw	202
 12885  004E62                     u7117:
 12886  004E62  2EE8               	decfsz	wreg,f,c
 12887  004E64  D7FE               	bra	u7117
 12888  004E66  2E20               	decfsz	??_stop^0,f,c
 12889  004E68  D7FC               	bra	u7117
 12890  004E6A                     l4003:
 12891                           
 12892                           ;dc_motor.c: 83:     while (mL->power >0 || mR->power >0){
 12893  004E6A  C01C  FFD9         	movff	stop@mL,fsr2l
 12894  004E6E  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12895  004E72  50DF               	movf	indf2,w,c
 12896  004E74  A4D8               	btfss	status,2,c
 12897  004E76  EF3F  F027         	goto	u3731
 12898  004E7A  EF41  F027         	goto	u3730
 12899  004E7E                     u3731:
 12900  004E7E  EFFE  F026         	goto	l3989
 12901  004E82                     u3730:
 12902  004E82  C01E  FFD9         	movff	stop@mR,fsr2l
 12903  004E86  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12904  004E8A  50DF               	movf	indf2,w,c
 12905  004E8C  A4D8               	btfss	status,2,c
 12906  004E8E  EF4B  F027         	goto	u3741
 12907  004E92  EF4D  F027         	goto	u3740
 12908  004E96                     u3741:
 12909  004E96  EFFE  F026         	goto	l3989
 12910  004E9A                     u3740:
 12911  004E9A                     
 12912                           ;dc_motor.c: 90:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12913  004E9A  0E09               	movlw	9
 12914  004E9C  6E21               	movwf	(??_stop+1)^0,c
 12915  004E9E  0E1E               	movlw	30
 12916  004EA0  6E20               	movwf	??_stop^0,c
 12917  004EA2  0EE4               	movlw	228
 12918  004EA4                     u7127:
 12919  004EA4  2EE8               	decfsz	wreg,f,c
 12920  004EA6  D7FE               	bra	u7127
 12921  004EA8  2E20               	decfsz	??_stop^0,f,c
 12922  004EAA  D7FC               	bra	u7127
 12923  004EAC  2E21               	decfsz	(??_stop+1)^0,f,c
 12924  004EAE  D7FA               	bra	u7127
 12925  004EB0  D000               	nop2	
 12926  004EB2  0012               	return		;funcret
 12927  004EB4                     __end_of_stop:
 12928                           	callstack 0
 12929                           
 12930 ;; *************** function _fullSpeedAhead *****************
 12931 ;; Defined at:
 12932 ;;		line 148 in file "dc_motor.c"
 12933 ;; Parameters:    Size  Location     Type
 12934 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12935 ;;		 -> main@motorL(10), 
 12936 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12937 ;;		 -> main@motorR(10), 
 12938 ;; Auto vars:     Size  Location     Type
 12939 ;;		None
 12940 ;; Return value:  Size  Location     Type
 12941 ;;                  1    wreg      void 
 12942 ;; Registers used:
 12943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12944 ;; Tracked objects:
 12945 ;;		On entry : 0/0
 12946 ;;		On exit  : 0/0
 12947 ;;		Unchanged: 0/0
 12948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12951 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12952 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12953 ;;Total ram usage:        5 bytes
 12954 ;; Hardware stack levels used: 1
 12955 ;; Hardware stack levels required when called: 4
 12956 ;; This function calls:
 12957 ;;		_setMotorPWM
 12958 ;; This function is called by:
 12959 ;;		_fullSpeedAhead_test
 12960 ;;		_main
 12961 ;;		_short_burst
 12962 ;;		_goback
 12963 ;; This function uses a non-reentrant model
 12964 ;;
 12965                           
 12966                           	psect	text69
 12967  004F60                     __ptext69:
 12968                           	callstack 0
 12969  004F60                     _fullSpeedAhead:
 12970                           	callstack 25
 12971  004F60                     
 12972                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 150:     mL->direction=1;
 12973  004F60  EE20 F001          	lfsr	2,1
 12974  004F64  501C               	movf	fullSpeedAhead@mL^0,w,c
 12975  004F66  26D9               	addwf	fsr2l,f,c
 12976  004F68  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
 12977  004F6A  22DA               	addwfc	fsr2h,f,c
 12978  004F6C  0E01               	movlw	1
 12979  004F6E  6EDF               	movwf	indf2,c
 12980                           
 12981                           ;dc_motor.c: 151:     mR->direction=1;
 12982  004F70  EE20 F001          	lfsr	2,1
 12983  004F74  501E               	movf	fullSpeedAhead@mR^0,w,c
 12984  004F76  26D9               	addwf	fsr2l,f,c
 12985  004F78  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
 12986  004F7A  22DA               	addwfc	fsr2h,f,c
 12987  004F7C  0E01               	movlw	1
 12988  004F7E  6EDF               	movwf	indf2,c
 12989                           
 12990                           ;dc_motor.c: 152:     while (mL->power<20 && mR->power<20){
 12991  004F80  EFE1  F027         	goto	l4251
 12992  004F84                     l4243:
 12993                           
 12994                           ;dc_motor.c: 153:         mL->power += 10;
 12995  004F84  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12996  004F88  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12997  004F8C  0E0A               	movlw	10
 12998  004F8E  26DF               	addwf	indf2,f,c
 12999                           
 13000                           ;dc_motor.c: 154:         mR->power += 10;
 13001  004F90  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13002  004F94  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13003  004F98  0E0A               	movlw	10
 13004  004F9A  26DF               	addwf	indf2,f,c
 13005  004F9C                     
 13006                           ;dc_motor.c: 155:         setMotorPWM(mL);
 13007  004F9C  C01C  F011         	movff	fullSpeedAhead@mL,setMotorPWM@m
 13008  004FA0  C01D  F012         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 13009  004FA4  ECB8  F01A         	call	_setMotorPWM	;wreg free
 13010  004FA8                     
 13011                           ;dc_motor.c: 156:         setMotorPWM(mR);
 13012  004FA8  C01E  F011         	movff	fullSpeedAhead@mR,setMotorPWM@m
 13013  004FAC  C01F  F012         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 13014  004FB0  ECB8  F01A         	call	_setMotorPWM	;wreg free
 13015  004FB4                     
 13016                           ;dc_motor.c: 157:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13017  004FB4  0ED0               	movlw	208
 13018  004FB6  6E20               	movwf	??_fullSpeedAhead^0,c
 13019  004FB8  0ECA               	movlw	202
 13020  004FBA                     u7137:
 13021  004FBA  2EE8               	decfsz	wreg,f,c
 13022  004FBC  D7FE               	bra	u7137
 13023  004FBE  2E20               	decfsz	??_fullSpeedAhead^0,f,c
 13024  004FC0  D7FC               	bra	u7137
 13025  004FC2                     l4251:
 13026                           
 13027                           ;dc_motor.c: 152:     while (mL->power<20 && mR->power<20){
 13028  004FC2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13029  004FC6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13030  004FCA  0E14               	movlw	20
 13031  004FCC  60DF               	cpfslt	indf2,c
 13032  004FCE  EFEB  F027         	goto	u4041
 13033  004FD2  EFED  F027         	goto	u4040
 13034  004FD6                     u4041:
 13035  004FD6  EFF9  F027         	goto	l378
 13036  004FDA                     u4040:
 13037  004FDA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13038  004FDE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13039  004FE2  0E13               	movlw	19
 13040  004FE4  64DF               	cpfsgt	indf2,c
 13041  004FE6  EFF7  F027         	goto	u4051
 13042  004FEA  EFF9  F027         	goto	u4050
 13043  004FEE                     u4051:
 13044  004FEE  EFC2  F027         	goto	l4243
 13045  004FF2                     u4050:
 13046  004FF2                     l378:
 13047  004FF2  0012               	return		;funcret
 13048  004FF4                     __end_of_fullSpeedAhead:
 13049                           	callstack 0
 13050                           
 13051 ;; *************** function _setMotorPWM *****************
 13052 ;; Defined at:
 13053 ;;		line 58 in file "dc_motor.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  m               2   16[COMRAM] PTR struct DC_motor
 13056 ;;		 -> main@motorR(10), main@motorL(10), 
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;  PWMduty         2   25[COMRAM] int 
 13059 ;; Return value:  Size  Location     Type
 13060 ;;                  1    wreg      void 
 13061 ;; Registers used:
 13062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13063 ;; Tracked objects:
 13064 ;;		On entry : 0/0
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13070 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13071 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13072 ;;Total ram usage:       11 bytes
 13073 ;; Hardware stack levels used: 1
 13074 ;; Hardware stack levels required when called: 3
 13075 ;; This function calls:
 13076 ;;		___awdiv
 13077 ;;		___wmul
 13078 ;; This function is called by:
 13079 ;;		_stop
 13080 ;;		_turnLeft
 13081 ;;		_turnRight
 13082 ;;		_fullSpeedAhead
 13083 ;;		_fullSpeedBack
 13084 ;; This function uses a non-reentrant model
 13085 ;;
 13086                           
 13087                           	psect	text70
 13088  003570                     __ptext70:
 13089                           	callstack 0
 13090  003570                     _setMotorPWM:
 13091                           	callstack 26
 13092  003570                     
 13093                           ;dc_motor.c: 58: void setMotorPWM(struct DC_motor *m);dc_motor.c: 59: {;dc_motor.c: 60: 
      +                           int PWMduty;;dc_motor.c: 62:  if (m->direction){
 13094  003570  EE20 F001          	lfsr	2,1
 13095  003574  5011               	movf	setMotorPWM@m^0,w,c
 13096  003576  26D9               	addwf	fsr2l,f,c
 13097  003578  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13098  00357A  22DA               	addwfc	fsr2h,f,c
 13099  00357C  50DF               	movf	indf2,w,c
 13100  00357E  B4D8               	btfsc	status,2,c
 13101  003580  EFC4  F01A         	goto	u3111
 13102  003584  EFC6  F01A         	goto	u3110
 13103  003588                     u3111:
 13104  003588  EFF7  F01A         	goto	l3683
 13105  00358C                     u3110:
 13106  00358C                     
 13107                           ;dc_motor.c: 64:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 13108  00358C  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13109  003590  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13110  003594  50DF               	movf	indf2,w,c
 13111  003596  6E13               	movwf	??_setMotorPWM^0,c
 13112  003598  5013               	movf	??_setMotorPWM^0,w,c
 13113  00359A  6E03               	movwf	___wmul@multiplier^0,c
 13114  00359C  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13115  00359E  EE20 F007          	lfsr	2,7
 13116  0035A2  5011               	movf	setMotorPWM@m^0,w,c
 13117  0035A4  26D9               	addwf	fsr2l,f,c
 13118  0035A6  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13119  0035A8  22DA               	addwfc	fsr2h,f,c
 13120  0035AA  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13121  0035AE  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13122  0035B2  EC9A  F02B         	call	___wmul	;wreg free
 13123  0035B6  C003  F009         	movff	?___wmul,___awdiv@dividend
 13124  0035BA  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13125  0035BE  0E00               	movlw	0
 13126  0035C0  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13127  0035C2  0E64               	movlw	100
 13128  0035C4  6E0B               	movwf	___awdiv@divisor^0,c
 13129  0035C6  EC3A  F026         	call	___awdiv	;wreg free
 13130  0035CA  EE20 F007          	lfsr	2,7
 13131  0035CE  5011               	movf	setMotorPWM@m^0,w,c
 13132  0035D0  26D9               	addwf	fsr2l,f,c
 13133  0035D2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13134  0035D4  22DA               	addwfc	fsr2h,f,c
 13135  0035D6  CFDE F014          	movff	postinc2,??_setMotorPWM+1
 13136  0035DA  CFDD F015          	movff	postdec2,??_setMotorPWM+2
 13137  0035DE  5009               	movf	?___awdiv^0,w,c
 13138  0035E0  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
 13139  0035E2  6E1A               	movwf	setMotorPWM@PWMduty^0,c
 13140  0035E4  500A               	movf	(?___awdiv+1)^0,w,c
 13141  0035E6  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
 13142  0035E8  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
 13143                           
 13144                           ;dc_motor.c: 65:  }
 13145  0035EA  EF1A  F01B         	goto	l3685
 13146  0035EE                     l3683:
 13147                           
 13148                           ;dc_motor.c: 68:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13149  0035EE  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13150  0035F2  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13151  0035F6  50DF               	movf	indf2,w,c
 13152  0035F8  6E13               	movwf	??_setMotorPWM^0,c
 13153  0035FA  5013               	movf	??_setMotorPWM^0,w,c
 13154  0035FC  6E03               	movwf	___wmul@multiplier^0,c
 13155  0035FE  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13156  003600  EE20 F007          	lfsr	2,7
 13157  003604  5011               	movf	setMotorPWM@m^0,w,c
 13158  003606  26D9               	addwf	fsr2l,f,c
 13159  003608  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13160  00360A  22DA               	addwfc	fsr2h,f,c
 13161  00360C  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13162  003610  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13163  003614  EC9A  F02B         	call	___wmul	;wreg free
 13164  003618  C003  F009         	movff	?___wmul,___awdiv@dividend
 13165  00361C  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13166  003620  0E00               	movlw	0
 13167  003622  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13168  003624  0E64               	movlw	100
 13169  003626  6E0B               	movwf	___awdiv@divisor^0,c
 13170  003628  EC3A  F026         	call	___awdiv	;wreg free
 13171  00362C  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
 13172  003630  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 13173  003634                     l3685:
 13174                           
 13175                           ;dc_motor.c: 71:  *(m->dutyHighByte) = PWMduty;
 13176  003634  EE20 F002          	lfsr	2,2
 13177  003638  5011               	movf	setMotorPWM@m^0,w,c
 13178  00363A  26D9               	addwf	fsr2l,f,c
 13179  00363C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13180  00363E  22DA               	addwfc	fsr2h,f,c
 13181  003640  CFDE F013          	movff	postinc2,??_setMotorPWM
 13182  003644  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13183  003648  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13184  00364C  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13185  003650  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
 13186  003654                     
 13187                           ;dc_motor.c: 73:  if (m->direction){
 13188  003654  EE20 F001          	lfsr	2,1
 13189  003658  5011               	movf	setMotorPWM@m^0,w,c
 13190  00365A  26D9               	addwf	fsr2l,f,c
 13191  00365C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13192  00365E  22DA               	addwfc	fsr2h,f,c
 13193  003660  50DF               	movf	indf2,w,c
 13194  003662  B4D8               	btfsc	status,2,c
 13195  003664  EF36  F01B         	goto	u3121
 13196  003668  EF38  F01B         	goto	u3120
 13197  00366C                     u3121:
 13198  00366C  EF6D  F01B         	goto	l3691
 13199  003670                     u3120:
 13200  003670                     
 13201                           ;dc_motor.c: 74:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 13202  003670  EE20 F004          	lfsr	2,4
 13203  003674  5011               	movf	setMotorPWM@m^0,w,c
 13204  003676  26D9               	addwf	fsr2l,f,c
 13205  003678  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13206  00367A  22DA               	addwfc	fsr2h,f,c
 13207  00367C  CFDE F013          	movff	postinc2,??_setMotorPWM
 13208  003680  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13209  003684  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13210  003688  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13211  00368C  EE10 F004          	lfsr	1,4
 13212  003690  5011               	movf	setMotorPWM@m^0,w,c
 13213  003692  26E1               	addwf	fsr1l,f,c
 13214  003694  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13215  003696  22E2               	addwfc	fsr1h,f,c
 13216  003698  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13217  00369C  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13218  0036A0  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13219  0036A4  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13220  0036A8  50E7               	movf	indf1,w,c
 13221  0036AA  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13222  0036AC  EE10 F006          	lfsr	1,6
 13223  0036B0  5011               	movf	setMotorPWM@m^0,w,c
 13224  0036B2  26E1               	addwf	fsr1l,f,c
 13225  0036B4  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13226  0036B6  22E2               	addwfc	fsr1h,f,c
 13227  0036B8  50E7               	movf	indf1,w,c
 13228  0036BA  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13229  0036BC  0E01               	movlw	1
 13230  0036BE  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13231  0036C0  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13232  0036C2  EF65  F01B         	goto	u3134
 13233  0036C6                     u3135:
 13234  0036C6  90D8               	bcf	status,0,c
 13235  0036C8  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13236  0036CA                     u3134:
 13237  0036CA  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13238  0036CC  EF63  F01B         	goto	u3135
 13239  0036D0  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13240  0036D2  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
 13241  0036D4  6EDF               	movwf	indf2,c
 13242                           
 13243                           ;dc_motor.c: 75:  } else {
 13244  0036D6  EFA1  F01B         	goto	l326
 13245  0036DA                     l3691:
 13246                           
 13247                           ;dc_motor.c: 76:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 13248  0036DA  EE20 F004          	lfsr	2,4
 13249  0036DE  5011               	movf	setMotorPWM@m^0,w,c
 13250  0036E0  26D9               	addwf	fsr2l,f,c
 13251  0036E2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13252  0036E4  22DA               	addwfc	fsr2h,f,c
 13253  0036E6  CFDE F013          	movff	postinc2,??_setMotorPWM
 13254  0036EA  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13255  0036EE  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13256  0036F2  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13257  0036F6  EE10 F004          	lfsr	1,4
 13258  0036FA  5011               	movf	setMotorPWM@m^0,w,c
 13259  0036FC  26E1               	addwf	fsr1l,f,c
 13260  0036FE  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13261  003700  22E2               	addwfc	fsr1h,f,c
 13262  003702  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13263  003706  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13264  00370A  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13265  00370E  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13266  003712  50E7               	movf	indf1,w,c
 13267  003714  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13268  003716  EE10 F006          	lfsr	1,6
 13269  00371A  5011               	movf	setMotorPWM@m^0,w,c
 13270  00371C  26E1               	addwf	fsr1l,f,c
 13271  00371E  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13272  003720  22E2               	addwfc	fsr1h,f,c
 13273  003722  50E7               	movf	indf1,w,c
 13274  003724  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13275  003726  0E01               	movlw	1
 13276  003728  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13277  00372A  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13278  00372C  EF9A  F01B         	goto	u3144
 13279  003730                     u3145:
 13280  003730  90D8               	bcf	status,0,c
 13281  003732  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13282  003734                     u3144:
 13283  003734  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13284  003736  EF98  F01B         	goto	u3145
 13285  00373A  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13286  00373C  0AFF               	xorlw	255
 13287  00373E  1417               	andwf	(??_setMotorPWM+4)^0,w,c
 13288  003740  6EDF               	movwf	indf2,c
 13289  003742                     l326:
 13290  003742  0012               	return		;funcret
 13291  003744                     __end_of_setMotorPWM:
 13292                           	callstack 0
 13293                           
 13294 ;; *************** function ___wmul *****************
 13295 ;; Defined at:
 13296 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;  multiplier      2    2[COMRAM] unsigned int 
 13299 ;;  multiplicand    2    4[COMRAM] unsigned int 
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;  product         2    6[COMRAM] unsigned int 
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  2    2[COMRAM] unsigned int 
 13304 ;; Registers used:
 13305 ;;		wreg, status,2, status,0, prodl, prodh
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13311 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13312 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13314 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13315 ;;Total ram usage:        6 bytes
 13316 ;; Hardware stack levels used: 1
 13317 ;; Hardware stack levels required when called: 2
 13318 ;; This function calls:
 13319 ;;		Nothing
 13320 ;; This function is called by:
 13321 ;;		_setMotorPWM
 13322 ;; This function uses a non-reentrant model
 13323 ;;
 13324                           
 13325                           	psect	text71
 13326  005734                     __ptext71:
 13327                           	callstack 0
 13328  005734                     ___wmul:
 13329                           	callstack 26
 13330  005734  5003               	movf	___wmul@multiplier^0,w,c
 13331  005736  0205               	mulwf	___wmul@multiplicand^0,c
 13332  005738  CFF3 F007          	movff	prodl,___wmul@product
 13333  00573C  CFF4 F008          	movff	prodh,___wmul@product+1
 13334  005740  5003               	movf	___wmul@multiplier^0,w,c
 13335  005742  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 13336  005744  50F3               	movf	243,w,c
 13337  005746  2608               	addwf	(___wmul@product+1)^0,f,c
 13338  005748  5004               	movf	(___wmul@multiplier+1)^0,w,c
 13339  00574A  0205               	mulwf	___wmul@multiplicand^0,c
 13340  00574C  50F3               	movf	243,w,c
 13341  00574E  2608               	addwf	(___wmul@product+1)^0,f,c
 13342  005750  C007  F003         	movff	___wmul@product,?___wmul
 13343  005754  C008  F004         	movff	___wmul@product+1,?___wmul+1
 13344  005758  0012               	return		;funcret
 13345  00575A                     __end_of___wmul:
 13346                           	callstack 0
 13347                           
 13348 ;; *************** function ___awdiv *****************
 13349 ;; Defined at:
 13350 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;  dividend        2    8[COMRAM] int 
 13353 ;;  divisor         2   10[COMRAM] int 
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;  quotient        2   14[COMRAM] int 
 13356 ;;  sign            1   13[COMRAM] unsigned char 
 13357 ;;  counter         1   12[COMRAM] unsigned char 
 13358 ;; Return value:  Size  Location     Type
 13359 ;;                  2    8[COMRAM] int 
 13360 ;; Registers used:
 13361 ;;		wreg, status,2, status,0
 13362 ;; Tracked objects:
 13363 ;;		On entry : 0/0
 13364 ;;		On exit  : 0/0
 13365 ;;		Unchanged: 0/0
 13366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13368 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13370 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13371 ;;Total ram usage:        8 bytes
 13372 ;; Hardware stack levels used: 1
 13373 ;; Hardware stack levels required when called: 2
 13374 ;; This function calls:
 13375 ;;		Nothing
 13376 ;; This function is called by:
 13377 ;;		_setMotorPWM
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text72
 13382  004C74                     __ptext72:
 13383                           	callstack 0
 13384  004C74                     ___awdiv:
 13385                           	callstack 26
 13386  004C74  0E00               	movlw	0
 13387  004C76  6E0E               	movwf	___awdiv@sign^0,c
 13388  004C78  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
 13389  004C7A  EF43  F026         	goto	u2980
 13390  004C7E  EF41  F026         	goto	u2981
 13391  004C82                     u2981:
 13392  004C82  EF49  F026         	goto	l3613
 13393  004C86                     u2980:
 13394  004C86  6C0B               	negf	___awdiv@divisor^0,c
 13395  004C88  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
 13396  004C8A  B0D8               	btfsc	status,0,c
 13397  004C8C  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
 13398  004C8E  0E01               	movlw	1
 13399  004C90  6E0E               	movwf	___awdiv@sign^0,c
 13400  004C92                     l3613:
 13401  004C92  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
 13402  004C94  EF50  F026         	goto	u2990
 13403  004C98  EF4E  F026         	goto	u2991
 13404  004C9C                     u2991:
 13405  004C9C  EF56  F026         	goto	l3619
 13406  004CA0                     u2990:
 13407  004CA0  6C09               	negf	___awdiv@dividend^0,c
 13408  004CA2  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
 13409  004CA4  B0D8               	btfsc	status,0,c
 13410  004CA6  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
 13411  004CA8  0E01               	movlw	1
 13412  004CAA  1A0E               	xorwf	___awdiv@sign^0,f,c
 13413  004CAC                     l3619:
 13414  004CAC  0E00               	movlw	0
 13415  004CAE  6E10               	movwf	(___awdiv@quotient+1)^0,c
 13416  004CB0  0E00               	movlw	0
 13417  004CB2  6E0F               	movwf	___awdiv@quotient^0,c
 13418  004CB4  500B               	movf	___awdiv@divisor^0,w,c
 13419  004CB6  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
 13420  004CB8  B4D8               	btfsc	status,2,c
 13421  004CBA  EF61  F026         	goto	u3001
 13422  004CBE  EF63  F026         	goto	u3000
 13423  004CC2                     u3001:
 13424  004CC2  EF8B  F026         	goto	l3641
 13425  004CC6                     u3000:
 13426  004CC6  0E01               	movlw	1
 13427  004CC8  6E0D               	movwf	___awdiv@counter^0,c
 13428  004CCA  EF6B  F026         	goto	l3627
 13429  004CCE                     l3625:
 13430  004CCE  90D8               	bcf	status,0,c
 13431  004CD0  360B               	rlcf	___awdiv@divisor^0,f,c
 13432  004CD2  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
 13433  004CD4  2A0D               	incf	___awdiv@counter^0,f,c
 13434  004CD6                     l3627:
 13435  004CD6  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
 13436  004CD8  EF70  F026         	goto	u3011
 13437  004CDC  EF72  F026         	goto	u3010
 13438  004CE0                     u3011:
 13439  004CE0  EF67  F026         	goto	l3625
 13440  004CE4                     u3010:
 13441  004CE4                     l3629:
 13442  004CE4  90D8               	bcf	status,0,c
 13443  004CE6  360F               	rlcf	___awdiv@quotient^0,f,c
 13444  004CE8  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
 13445  004CEA  500B               	movf	___awdiv@divisor^0,w,c
 13446  004CEC  5C09               	subwf	___awdiv@dividend^0,w,c
 13447  004CEE  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13448  004CF0  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
 13449  004CF2  A0D8               	btfss	status,0,c
 13450  004CF4  EF7E  F026         	goto	u3021
 13451  004CF8  EF80  F026         	goto	u3020
 13452  004CFC                     u3021:
 13453  004CFC  EF85  F026         	goto	l3637
 13454  004D00                     u3020:
 13455  004D00  500B               	movf	___awdiv@divisor^0,w,c
 13456  004D02  5E09               	subwf	___awdiv@dividend^0,f,c
 13457  004D04  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13458  004D06  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
 13459  004D08  800F               	bsf	___awdiv@quotient^0,0,c
 13460  004D0A                     l3637:
 13461  004D0A  90D8               	bcf	status,0,c
 13462  004D0C  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
 13463  004D0E  320B               	rrcf	___awdiv@divisor^0,f,c
 13464  004D10  2E0D               	decfsz	___awdiv@counter^0,f,c
 13465  004D12  EF72  F026         	goto	l3629
 13466  004D16                     l3641:
 13467  004D16  500E               	movf	___awdiv@sign^0,w,c
 13468  004D18  B4D8               	btfsc	status,2,c
 13469  004D1A  EF91  F026         	goto	u3031
 13470  004D1E  EF93  F026         	goto	u3030
 13471  004D22                     u3031:
 13472  004D22  EF97  F026         	goto	l3645
 13473  004D26                     u3030:
 13474  004D26  6C0F               	negf	___awdiv@quotient^0,c
 13475  004D28  1E10               	comf	(___awdiv@quotient+1)^0,f,c
 13476  004D2A  B0D8               	btfsc	status,0,c
 13477  004D2C  2A10               	incf	(___awdiv@quotient+1)^0,f,c
 13478  004D2E                     l3645:
 13479  004D2E  C00F  F009         	movff	___awdiv@quotient,?___awdiv
 13480  004D32  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
 13481  004D36  0012               	return		;funcret
 13482  004D38                     __end_of___awdiv:
 13483                           	callstack 0
 13484                           
 13485 ;; *************** function _Timer0_init *****************
 13486 ;; Defined at:
 13487 ;;		line 7 in file "timers.c"
 13488 ;; Parameters:    Size  Location     Type
 13489 ;;		None
 13490 ;; Auto vars:     Size  Location     Type
 13491 ;;		None
 13492 ;; Return value:  Size  Location     Type
 13493 ;;                  1    wreg      void 
 13494 ;; Registers used:
 13495 ;;		wreg, status,2
 13496 ;; Tracked objects:
 13497 ;;		On entry : 0/0
 13498 ;;		On exit  : 0/0
 13499 ;;		Unchanged: 0/0
 13500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13505 ;;Total ram usage:        0 bytes
 13506 ;; Hardware stack levels used: 1
 13507 ;; Hardware stack levels required when called: 2
 13508 ;; This function calls:
 13509 ;;		Nothing
 13510 ;; This function is called by:
 13511 ;;		_main
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           	psect	text73
 13516  005858                     __ptext73:
 13517                           	callstack 0
 13518  005858                     _Timer0_init:
 13519                           	callstack 28
 13520  005858                     
 13521                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13522  005858  50D6               	movf	214,w,c	;volatile
 13523  00585A  0B1F               	andlw	-225
 13524  00585C  0940               	iorlw	64
 13525  00585E  6ED6               	movwf	214,c	;volatile
 13526  005860                     
 13527                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13528  005860  88D6               	bsf	214,4,c	;volatile
 13529                           
 13530                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13531  005862  50D6               	movf	214,w,c	;volatile
 13532  005864  0BF0               	andlw	-16
 13533  005866  0908               	iorlw	8
 13534  005868  6ED6               	movwf	214,c	;volatile
 13535  00586A                     
 13536                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13537  00586A  88D5               	bsf	213,4,c	;volatile
 13538                           
 13539                           ;timers.c: 16:     TMR0H=0b00001011;
 13540  00586C  0E0B               	movlw	11
 13541  00586E  6ED4               	movwf	212,c	;volatile
 13542                           
 13543                           ;timers.c: 17:     TMR0L=0b11011011;
 13544  005870  0EDB               	movlw	219
 13545  005872  6ED3               	movwf	211,c	;volatile
 13546  005874  0012               	return		;funcret
 13547  005876                     __end_of_Timer0_init:
 13548                           	callstack 0
 13549                           
 13550 ;; *************** function _LED_OFF *****************
 13551 ;; Defined at:
 13552 ;;		line 153 in file "color.c"
 13553 ;; Parameters:    Size  Location     Type
 13554 ;;		None
 13555 ;; Auto vars:     Size  Location     Type
 13556 ;;		None
 13557 ;; Return value:  Size  Location     Type
 13558 ;;                  1    wreg      void 
 13559 ;; Registers used:
 13560 ;;		wreg
 13561 ;; Tracked objects:
 13562 ;;		On entry : 0/0
 13563 ;;		On exit  : 0/0
 13564 ;;		Unchanged: 0/0
 13565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13570 ;;Total ram usage:        2 bytes
 13571 ;; Hardware stack levels used: 1
 13572 ;; Hardware stack levels required when called: 2
 13573 ;; This function calls:
 13574 ;;		Nothing
 13575 ;; This function is called by:
 13576 ;;		_main
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           	psect	text74
 13581  00581A                     __ptext74:
 13582                           	callstack 0
 13583  00581A                     _LED_OFF:
 13584                           	callstack 28
 13585  00581A                     
 13586                           ;color.c: 155:     LATGbits.LATG1 = 0;
 13587  00581A  927F               	bcf	127,1,c	;volatile
 13588                           
 13589                           ;color.c: 156:     LATFbits.LATF7 = 0;
 13590  00581C  9E7E               	bcf	126,7,c	;volatile
 13591                           
 13592                           ;color.c: 157:     LATAbits.LATA4 = 0;
 13593  00581E  9879               	bcf	121,4,c	;volatile
 13594  005820                     
 13595                           ;color.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13596  005820  0E11               	movlw	17
 13597  005822  6E04               	movwf	(??_LED_OFF+1)^0,c
 13598  005824  0E3C               	movlw	60
 13599  005826  6E03               	movwf	??_LED_OFF^0,c
 13600  005828  0ECB               	movlw	203
 13601  00582A                     u7147:
 13602  00582A  2EE8               	decfsz	wreg,f,c
 13603  00582C  D7FE               	bra	u7147
 13604  00582E  2E03               	decfsz	??_LED_OFF^0,f,c
 13605  005830  D7FC               	bra	u7147
 13606  005832  2E04               	decfsz	(??_LED_OFF+1)^0,f,c
 13607  005834  D7FA               	bra	u7147
 13608  005836  F000               	nop	
 13609  005838  0012               	return		;funcret
 13610  00583A                     __end_of_LED_OFF:
 13611                           	callstack 0
 13612                           
 13613 ;; *************** function _Interrupts_init *****************
 13614 ;; Defined at:
 13615 ;;		line 9 in file "interrupts.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;		None
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;		None
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      void 
 13622 ;; Registers used:
 13623 ;;		None
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13633 ;;Total ram usage:        0 bytes
 13634 ;; Hardware stack levels used: 1
 13635 ;; Hardware stack levels required when called: 2
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_main
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text75
 13644  0058B0                     __ptext75:
 13645                           	callstack 0
 13646  0058B0                     _Interrupts_init:
 13647                           	callstack 28
 13648  0058B0  8EF2               	bsf	242,7,c	;volatile
 13649                           
 13650                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13651  0058B2  8AF2               	bsf	242,5,c	;volatile
 13652                           
 13653                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13654  0058B4  8CF2               	bsf	242,6,c	;volatile
 13655                           
 13656                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13657  0058B6  010E               	movlb	14	; () banked
 13658  0058B8  8B29               	bsf	41,5,b	;volatile
 13659  0058BA                     
 13660                           ; BSR set to: 14
 13661  0058BA  0012               	return		;funcret
 13662  0058BC                     __end_of_Interrupts_init:
 13663                           	callstack 0
 13664                           
 13665 ;; *************** function _LowISR *****************
 13666 ;; Defined at:
 13667 ;;		line 25 in file "interrupts.c"
 13668 ;; Parameters:    Size  Location     Type
 13669 ;;		None
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  1    wreg      void 
 13674 ;; Registers used:
 13675 ;;		status,2, status,0
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13685 ;;Total ram usage:        2 bytes
 13686 ;; Hardware stack levels used: 1
 13687 ;; Hardware stack levels required when called: 1
 13688 ;; This function calls:
 13689 ;;		Nothing
 13690 ;; This function is called by:
 13691 ;;		Interrupt level 1
 13692 ;; This function uses a non-reentrant model
 13693 ;;
 13694                           
 13695                           	psect	intcodelo
 13696  000018                     __pintcodelo:
 13697                           	callstack 0
 13698  000018                     _LowISR:
 13699                           	callstack 19
 13700                           
 13701                           ; BSR set to: 14
 13702                           ;incstack = 0
 13703  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13704  00001A  CFD8 F001          	movff	status,??_LowISR
 13705  00001E  CFE0 F002          	movff	bsr,??_LowISR+1
 13706  000022                     
 13707                           ;interrupts.c: 27:     if(PIR0bits.TMR0IF){
 13708  000022  010E               	movlb	14	; () banked
 13709  000024  AB33               	btfss	51,5,b	;volatile
 13710  000026  EF17  F000         	goto	i1u555_21
 13711  00002A  EF19  F000         	goto	i1u555_20
 13712  00002E                     i1u555_21:
 13713  00002E  EF1E  F000         	goto	i1l744
 13714  000032                     i1u555_20:
 13715  000032                     
 13716                           ; BSR set to: 14
 13717                           ;interrupts.c: 28:         second ++;
 13718  000032  0100               	movlb	0	; () banked
 13719  000034  4BF7               	infsnz	_second& (0+255),f,b
 13720  000036  2BF8               	incf	(_second+1)& (0+255),f,b
 13721  000038                     
 13722                           ; BSR set to: 0
 13723                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
 13724  000038  010E               	movlb	14	; () banked
 13725  00003A  9B33               	bcf	51,5,b	;volatile
 13726  00003C                     i1l744:
 13727                           
 13728                           ; BSR set to: 14
 13729  00003C  C002  FFE0         	movff	??_LowISR+1,bsr
 13730  000040  C001  FFD8         	movff	??_LowISR,status
 13731  000044  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13732  000046  0010               	retfie	
 13733  000048                     __end_of_LowISR:
 13734                           	callstack 0
 13735                           
 13736 ;; *************** function _HighISR *****************
 13737 ;; Defined at:
 13738 ;;		line 21 in file "interrupts.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;		None
 13741 ;; Auto vars:     Size  Location     Type
 13742 ;;		None
 13743 ;; Return value:  Size  Location     Type
 13744 ;;                  1    wreg      void 
 13745 ;; Registers used:
 13746 ;;		None
 13747 ;; Tracked objects:
 13748 ;;		On entry : 0/0
 13749 ;;		On exit  : 0/0
 13750 ;;		Unchanged: 0/0
 13751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13756 ;;Total ram usage:        0 bytes
 13757 ;; Hardware stack levels used: 1
 13758 ;; This function calls:
 13759 ;;		Nothing
 13760 ;; This function is called by:
 13761 ;;		Interrupt level 2
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	intcode
 13766  000008                     __pintcode:
 13767                           	callstack 0
 13768  000008                     _HighISR:
 13769                           	callstack 19
 13770                           
 13771                           ; BSR set to: 14
 13772                           ;incstack = 0
 13773  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13774  00000A  EF6D  F02C         	goto	int_func
 13775                           
 13776                           	psect	intcode_body
 13777  0058DA                     __pintcode_body:
 13778                           	callstack 19
 13779  0058DA                     int_func:
 13780                           	callstack 19
 13781  0058DA  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13782  0058DC  0011               	retfie		f
 13783  0058DE                     __end_of_HighISR:
 13784                           	callstack 0
 13785                           
 13786                           	psect	rparam
 13787  0000                     
 13788                           	psect	temp
 13789  00005C                     btemp:
 13790                           	callstack 0
 13791  00005C                     	ds	1
 13792  0000                     int$flags	set	btemp
 13793  0000                     wtemp8	set	btemp+1
 13794  0000                     ttemp5	set	btemp+1
 13795  0000                     ttemp6	set	btemp+4
 13796  0000                     ttemp7	set	btemp+8
 13797                           
 13798                           	psect	idloc
 13799                           
 13800                           ;Config register IDLOC0 @ 0x200000
 13801                           ;	unspecified, using default values
 13802  200000                     	org	2097152
 13803  200000  0FFF               	dw	4095
 13804                           
 13805                           ;Config register IDLOC1 @ 0x200002
 13806                           ;	unspecified, using default values
 13807  200002                     	org	2097154
 13808  200002  0FFF               	dw	4095
 13809                           
 13810                           ;Config register IDLOC2 @ 0x200004
 13811                           ;	unspecified, using default values
 13812  200004                     	org	2097156
 13813  200004  0FFF               	dw	4095
 13814                           
 13815                           ;Config register IDLOC3 @ 0x200006
 13816                           ;	unspecified, using default values
 13817  200006                     	org	2097158
 13818  200006  0FFF               	dw	4095
 13819                           
 13820                           ;Config register IDLOC4 @ 0x200008
 13821                           ;	unspecified, using default values
 13822  200008                     	org	2097160
 13823  200008  0FFF               	dw	4095
 13824                           
 13825                           ;Config register IDLOC5 @ 0x20000A
 13826                           ;	unspecified, using default values
 13827  20000A                     	org	2097162
 13828  20000A  0FFF               	dw	4095
 13829                           
 13830                           ;Config register IDLOC6 @ 0x20000C
 13831                           ;	unspecified, using default values
 13832  20000C                     	org	2097164
 13833  20000C  0FFF               	dw	4095
 13834                           
 13835                           ;Config register IDLOC7 @ 0x20000E
 13836                           ;	unspecified, using default values
 13837  20000E                     	org	2097166
 13838  20000E  0FFF               	dw	4095
 13839                           
 13840                           	psect	config
 13841                           
 13842                           ;Config register CONFIG1L @ 0x300000
 13843                           ;	External Oscillator mode Selection bits
 13844                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13845                           ;	Power-up default value for COSC bits
 13846                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13847  300000                     	org	3145728
 13848  300000  AA                 	db	170
 13849                           
 13850                           ;Config register CONFIG1H @ 0x300001
 13851                           ;	unspecified, using default values
 13852                           ;	Clock Out Enable bit
 13853                           ;	CLKOUTEN = 0x1, unprogrammed default
 13854                           ;	Clock Switch Enable bit
 13855                           ;	CSWEN = 0x1, unprogrammed default
 13856                           ;	Fail-Safe Clock Monitor Enable bit
 13857                           ;	FCMEN = 0x1, unprogrammed default
 13858  300001                     	org	3145729
 13859  300001  FF                 	db	255
 13860                           
 13861                           ;Config register CONFIG2L @ 0x300002
 13862                           ;	unspecified, using default values
 13863                           ;	Master Clear Enable bit
 13864                           ;	MCLRE = 0x1, unprogrammed default
 13865                           ;	Power-up Timer Enable bit
 13866                           ;	PWRTE = 0x1, unprogrammed default
 13867                           ;	Low-power BOR enable bit
 13868                           ;	LPBOREN = 0x1, unprogrammed default
 13869                           ;	Brown-out Reset Enable bits
 13870                           ;	BOREN = 0x3, unprogrammed default
 13871  300002                     	org	3145730
 13872  300002  FF                 	db	255
 13873                           
 13874                           ;Config register CONFIG2H @ 0x300003
 13875                           ;	unspecified, using default values
 13876                           ;	Brown Out Reset Voltage selection bits
 13877                           ;	BORV = 0x3, unprogrammed default
 13878                           ;	ZCD Disable bit
 13879                           ;	ZCD = 0x1, unprogrammed default
 13880                           ;	PPSLOCK bit One-Way Set Enable bit
 13881                           ;	PPS1WAY = 0x1, unprogrammed default
 13882                           ;	Stack Full/Underflow Reset Enable bit
 13883                           ;	STVREN = 0x1, unprogrammed default
 13884                           ;	Debugger Enable bit
 13885                           ;	DEBUG = 0x1, unprogrammed default
 13886                           ;	Extended Instruction Set Enable bit
 13887                           ;	XINST = 0x1, unprogrammed default
 13888  300003                     	org	3145731
 13889  300003  FF                 	db	255
 13890                           
 13891                           ;Config register CONFIG3L @ 0x300004
 13892                           ;	WDT Period Select bits
 13893                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13894                           ;	WDT operating mode
 13895                           ;	WDTE = OFF, WDT Disabled
 13896  300004                     	org	3145732
 13897  300004  9F                 	db	159
 13898                           
 13899                           ;Config register CONFIG3H @ 0x300005
 13900                           ;	unspecified, using default values
 13901                           ;	WDT Window Select bits
 13902                           ;	WDTCWS = 0x7, unprogrammed default
 13903                           ;	WDT input clock selector
 13904                           ;	WDTCCS = 0x7, unprogrammed default
 13905  300005                     	org	3145733
 13906  300005  FF                 	db	255
 13907                           
 13908                           ;Config register CONFIG4L @ 0x300006
 13909                           ;	unspecified, using default values
 13910                           ;	Write Protection Block 0
 13911                           ;	WRT0 = 0x1, unprogrammed default
 13912                           ;	Write Protection Block 1
 13913                           ;	WRT1 = 0x1, unprogrammed default
 13914                           ;	Write Protection Block 2
 13915                           ;	WRT2 = 0x1, unprogrammed default
 13916                           ;	Write Protection Block 3
 13917                           ;	WRT3 = 0x1, unprogrammed default
 13918                           ;	Write Protection Block 3
 13919                           ;	WRT4 = 0x1, unprogrammed default
 13920                           ;	Write Protection Block 3
 13921                           ;	WRT5 = 0x1, unprogrammed default
 13922                           ;	Write Protection Block 3
 13923                           ;	WRT6 = 0x1, unprogrammed default
 13924                           ;	Write Protection Block 3
 13925                           ;	WRT7 = 0x1, unprogrammed default
 13926  300006                     	org	3145734
 13927  300006  FF                 	db	255
 13928                           
 13929                           ;Config register CONFIG4H @ 0x300007
 13930                           ;	unspecified, using default values
 13931                           ;	Configuration Register Write Protection bit
 13932                           ;	WRTC = 0x1, unprogrammed default
 13933                           ;	Boot Block Write Protection bit
 13934                           ;	WRTB = 0x1, unprogrammed default
 13935                           ;	Data EEPROM Write Protection bit
 13936                           ;	WRTD = 0x1, unprogrammed default
 13937                           ;	Scanner Enable bit
 13938                           ;	SCANE = 0x1, unprogrammed default
 13939                           ;	Low Voltage Programming Enable bit
 13940                           ;	LVP = 0x1, unprogrammed default
 13941  300007                     	org	3145735
 13942  300007  FF                 	db	255
 13943                           
 13944                           ;Config register CONFIG5L @ 0x300008
 13945                           ;	unspecified, using default values
 13946                           ;	UserNVM Program Memory Code Protection bit
 13947                           ;	CP = 0x1, unprogrammed default
 13948                           ;	DataNVM Memory Code Protection bit
 13949                           ;	CPD = 0x1, unprogrammed default
 13950  300008                     	org	3145736
 13951  300008  FF                 	db	255
 13952                           
 13953                           ;Config register CONFIG5H @ 0x300009
 13954                           ;	unspecified, using default values
 13955  300009                     	org	3145737
 13956  300009  FF                 	db	255
 13957                           
 13958                           ;Config register CONFIG6L @ 0x30000A
 13959                           ;	unspecified, using default values
 13960                           ;	Table Read Protection Block 0
 13961                           ;	EBTR0 = 0x1, unprogrammed default
 13962                           ;	Table Read Protection Block 1
 13963                           ;	EBTR1 = 0x1, unprogrammed default
 13964                           ;	Table Read Protection Block 2
 13965                           ;	EBTR2 = 0x1, unprogrammed default
 13966                           ;	Table Read Protection Block 3
 13967                           ;	EBTR3 = 0x1, unprogrammed default
 13968                           ;	Table Read Protection Block 4
 13969                           ;	EBTR4 = 0x1, unprogrammed default
 13970                           ;	Table Read Protection Block 5
 13971                           ;	EBTR5 = 0x1, unprogrammed default
 13972                           ;	Table Read Protection Block 6
 13973                           ;	EBTR6 = 0x1, unprogrammed default
 13974                           ;	Table Read Protection Block 7
 13975                           ;	EBTR7 = 0x1, unprogrammed default
 13976  30000A                     	org	3145738
 13977  30000A  FF                 	db	255
 13978                           
 13979                           ;Config register CONFIG6H @ 0x30000B
 13980                           ;	unspecified, using default values
 13981                           ;	Boot Block Table Read Protection bit
 13982                           ;	EBTRB = 0x1, unprogrammed default
 13983  30000B                     	org	3145739
 13984  30000B  FF                 	db	255
 13985                           tosu	equ	0xFFF
 13986                           tosh	equ	0xFFE
 13987                           tosl	equ	0xFFD
 13988                           stkptr	equ	0xFFC
 13989                           pclatu	equ	0xFFB
 13990                           pclath	equ	0xFFA
 13991                           pcl	equ	0xFF9
 13992                           tblptru	equ	0xFF8
 13993                           tblptrh	equ	0xFF7
 13994                           tblptrl	equ	0xFF6
 13995                           tablat	equ	0xFF5
 13996                           prodh	equ	0xFF4
 13997                           prodl	equ	0xFF3
 13998                           indf0	equ	0xFEF
 13999                           postinc0	equ	0xFEE
 14000                           postdec0	equ	0xFED
 14001                           preinc0	equ	0xFEC
 14002                           plusw0	equ	0xFEB
 14003                           fsr0h	equ	0xFEA
 14004                           fsr0l	equ	0xFE9
 14005                           wreg	equ	0xFE8
 14006                           indf1	equ	0xFE7
 14007                           postinc1	equ	0xFE6
 14008                           postdec1	equ	0xFE5
 14009                           preinc1	equ	0xFE4
 14010                           plusw1	equ	0xFE3
 14011                           fsr1h	equ	0xFE2
 14012                           fsr1l	equ	0xFE1
 14013                           bsr	equ	0xFE0
 14014                           indf2	equ	0xFDF
 14015                           postinc2	equ	0xFDE
 14016                           postdec2	equ	0xFDD
 14017                           preinc2	equ	0xFDC
 14018                           plusw2	equ	0xFDB
 14019                           fsr2h	equ	0xFDA
 14020                           fsr2l	equ	0xFD9
 14021                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    139     159
    BANK1           256     57     234
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2755$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2755$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    calibration@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    calibration@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead_test@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead_test@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S375DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S375DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    distance_measure@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verify_color->_detect_color
    _detect_color->_compare
    _short_burst->_stop
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibration->_test_action
    _test_action->_turnLeft
    _test_action->_turnRight
    _fullSpeedAhead_test->_stop
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _verify_color->_detect_color
    _detect_color->_compare
    _compare->_lroundf
    _distance_measure->_lroundf
    _lroundf->___fltol
    ___fltol->_roundf
    _color_data_collection->_color_display
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0  240215
                                              0 BANK1     57    57      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                              _LED_C
                            _LED_OFF
                        _Timer0_init
                             _action
                    _buggylight_init
                    _calibrate_white
                        _calibration
                   _color_click_init
              _color_data_collection
                      _color_display
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _read_color
                        _short_burst
                               _stop
                       _toggle_light
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   33411
                                             85 COMRAM     2     2      0
                                             61 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   32960
                                             81 COMRAM     4     4      0
                                             32 BANK0     29    25      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    3131
                                             80 COMRAM     1     1      0
                                             26 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _toggle_light                                         5     4      1     309
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    6790
                                             33 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _distance_measure                                    19    13      6   26903
                                             80 COMRAM     2     2      0
                                             26 BANK0     17    11      6
                              _LED_C
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   17295
                                             22 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   15577
                                             66 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             18 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4522
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4373
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             74 COMRAM     6     6      0
                                             18 BANK0      4     0      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1807
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2781
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16772
                                            127 BANK0     12    10      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1224
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7799
                                             25 BANK0    102   100      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration                                          6     2      4   25600
                                             55 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          4     0      4   25404
                                             51 COMRAM     4     0      4
                _fullSpeedAhead_test
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead_test                                  6     2      4    7550
                                             33 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     814
                                             13 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               7     3      4   78974
                                             59 COMRAM     7     3      4
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11021
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   35189
                                             51 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                           18    13      5    8267
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                            18    13      5    8951
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   10717
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6290
                                             33 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3731
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2819
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2035
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_OFF                                              2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _LowISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_C
   _LED_OFF
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibration
     _test_action
       _fullSpeedAhead_test
         _fullSpeedAhead
         _stop
       _turnLeft
       _turnRight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _color_display
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _distance_measure
     _LED_C
     ___fldiv
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _read_color
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _toggle_light
   _verify_color
     _detect_color

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     39      EA       7       91.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E4      57        0.0%
DATA                 0      0     1E4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Mar 11 17:26:16 2022

                ?_short_reverse 0028                  _color_read_Red 51CE                    ___fldiv@aexp 0029  
                  ___fldiv@bexp 0028                    ___fldiv@sign 0021                 _color_read_Blue 52BE  
                 _color_predict 56B4                              l80 32CA                              l91 5682  
                            l77 58A2                              l94 5798                              l88 32DC  
                            l97 521C                    ___awdiv@sign 000E                              bsr 000FE0  
           ___wmul@multiplicand 0005                _color_read_Clear 526E                _color_read_Green 521E  
             ??_Interrupts_init 0003                             l100 530C                             l103 526C  
                           l112 5838                             l121 5818                             l106 52BC  
                           l115 57B8                             l124 57D8                             l220 5732  
                           l109 5122                             l118 57F8                             l214 570A  
                           l223 58CE                             l135 3900                             l232 58AE  
                           l144 56E0                             l217 570C                             l226 58D8  
                           l402 491A                             l138 5062                             l170 1A12  
                           l235 54A8                             l147 3E0E                             l404 48EA  
                           l316 5424                             l341 41EA                             l229 58C4  
                           l173 55A4                             l326 3742                             l334 4EB2  
                           l174 55A6                             l407 4932                             l319 4AE2  
                           l352 4296                             l345 4232                             l169 1A0E  
                           l370 4116                             l186 4A0E                             l178 4F5E  
                           l363 40B2                             l187 4A10                             l444 5856  
                           l349 426C                             l381 5466                             l453 5878  
                           l462 56B2                             l367 40EC                             l359 406A  
                           l703 356E                             l392 54EA                             l456 588C  
                           l714 5874                             l378 4FF2                             l395 552C  
                           l733 58BA                             l389 4DF6                             l398 484E  
                           l399 48B4                             l680 2D4C                             l747 5758  
                           l683 484C                             l668 517A                             l861 3F96  
                           l686 5778                             l874 43FA                             l978 4D36  
             verify_color@color 00A3                ?_calibrate_white 000E        __end_of_distance_measure 4A12  
                           _abs 552E                             _pad 4BAE                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 0037                    ___flmul@bexp 003C  
                  ___flmul@sign 0036                    ___flmul@temp 0041                    ___flmul@prod 003D  
               __end_of_LED_OFF 583A                    ___fltol@exp1 0050                            l1012 4714  
                          l1021 5618                            l1017 475A                            ?_abs 0015  
                          l1044 4656                            l1301 1DEC                            l1302 1DDA  
                          l1402 3958                            l1331 28A8                            l1340 28EE  
                          l1501 50BC                            l1405 3AB4                            l1317 539E  
                          l1502 50C4                            l1430 51CC                            l1342 2966  
                          l1334 286C                            l1343 2954                            l1423 55E0  
                          l1416 3A4C                            l4001 4E5C                            l1521 4BAC  
                          l1329 2A48                            l1409 39F0                            l1361 1F98  
                          l1506 5564                            l1370 2206                            l4003 4E6A  
                          l1371 21F4                            l1275 1C02                            l1532 58E2  
                          l1460 4C36                            l1292 1D1C                            l1284 1ED2  
                          l1276 1BF0                            l1540 26AE                            l4005 4E82  
                          l1509 556C                            l1365 22FC                            l1277 1BB6  
                          l1462 4C72                            l1470 2DF6                            l4007 4E9A  
                          l1368 218E                            l1529 53E2                            l1553 564E  
                          l1457 4BF4                            l1378 22BE                            l4211 3C56  
                          l4203 3C18                            l1468 2DEE                            l3501 53A0  
                          l4205 3C26                            l4223 52BE                            l4231 5264  
                          l3503 53AC                            l3511 5626                            l1495 3C68  
                          l1488 3030                            l3521 5750                            l4241 4F60  
                          l5201 2A56                            l4225 5304                            l4217 51CE  
                          l3601 43DA                            l3505 53BE                            l3513 562A  
                          l4209 3C32                            l6001 3782                            l5121 5420  
                          l3611 4C8E                            l4243 4F84                            l4251 4FC2  
                          l4411 3F98                            l5211 2AAC                            l5203 2A66  
                          l4235 526E                            l4219 5214                            l5051 3C9A  
                          l3531 3E42                            l3507 53C2                            l3515 5642  
                          l6003 379C                            l5123 5422                            l5115 53E4  
                          l5131 4A42                            l3621 4CB4                            l3613 4C92  
                          l3605 4C74                            l4253 4FDA                            l4245 4F9C  
                          l4261 4D80                            l4501 54EC                            l4413 3FBC  
                          l4421 3FFA                            l5221 2B14                            l5213 2ABC  
                          l5205 2A70                            l4237 52B4                            l4229 521E  
                          l5061 3CFE                            l5053 3CB2                            l5045 3C6A  
                          l5141 4876                            l3541 3E84                            l3533 3E46  
                          l3525 3E10                            l3509 561A                            l4181 3AFA  
                          l6021 37EA                            l6005 37A2                            l6101 49DE  
                          l5117 53F4                            l5133 4A56                            l5125 4A12  
                          l3631 4CEA                            l3623 4CC6                            l3615 4CA0  
                          l3607 4C78                            l3519 5734                            l4247 4FA8  
                          l4271 4DE2                            l4263 4D8C                            l4255 4D38  
                          l4503 5500                            l4431 404A                            l4423 4012  
                          l4415 3FD4                            l5231 2B98                            l5223 2B40  
                          l5215 2AE8                            l5207 2A96                            l5071 3D7A  
                          l5063 3D2E                            l5055 3CCA                            l5047 3C6E  
                          l5143 4884                            l3551 3EDE                            l3543 3EA2  
                          l3535 3E54                            l3527 3E14                            l4183 3AFE  
                          l4175 3AB6                            l6023 3804                            l6015 37CE  
                          l6007 37BE                            l4511 26CA                            l6103 49F2  
                          l5119 540C                            l5135 4A66                            l5127 4A1E  
                          l3633 4D00                            l3625 4CCE                            l3641 4D16  
                          l3617 4CA8                            l3609 4C86                            l4249 4FB4  
                          l4257 4D5C                            l4265 4D9A                            l4505 5518  
                          l4441 409E                            l4433 4056                            l4425 4020  
                          l4417 3FE0                            l5241 2C08                            l5233 2BB0  
                          l5225 2B58                            l5217 2B00                            l5209 2A98  
                          l5073 3D92                            l5065 3D32                            l5057 3CCE  
                          l5049 3C82                            l5161 48FA                            l5153 48C2  
                          l5145 4886                            l4273 5878                            l3553 3F0C  
                          l3545 3EAA                            l3561 3F46                            l3537 3E74  
                          l3529 3E22                            l4193 3BC6                            l4185 3B22  
                          l4177 3ADA                            l4361 50A0                            l6041 3852  
                          l6025 380A                            l6017 37D2                            l6009 37C4  
                          l4601 28FE                            l4521 26FE                            l4513 26CC  
                          l6105 4A0A                            l5137 4A7A                            l5129 4A2E  
                          l6121 4404                            l3643 4D26                            l3635 4D08  
                          l3627 4CD6                            l3619 4CAC                            l4267 4DB2  
                          l4259 4D74                            l4451 4102                            l4443 40AE  
                          l4435 4066                            l4427 402C                            l4419 3FEC  
                          l5251 2C62                            l5243 2C0A                            l5235 2BB2  
                          l5227 2B5A                            l5219 2B02                            l4371 5800  
                          l5075 3DF6                            l5067 3D4A                            l5059 3CE6  
                          l5163 4910                            l5155 48D8                            l5147 489C  
                          l5139 4860                            l4275 5888                            l3563 3F56  
                          l3555 3F2C                            l3547 3EBE                            l3539 3E78  
                          l3571 429C                            l3491 4B08                            l3651 4BBE  
                          l4195 3BEA                            l4187 3B46                            l4179 3AE8  
                          l4355 5064                            l4363 50C6                            l6043 386C  
                          l6035 3836                            l6027 3826                            l6019 37DE  
                          l4603 290C                            l4531 2730                            l4515 26DC  
                          l4523 2706                            l4507 26B0                            l5411 1A14  
                          l5171 5846                            l6131 4420                            l6123 4408  
                          l3645 4D2E                            l3637 4D0A                            l3629 4CE4  
                          l4269 4DCA                            l4461 416C                            l4453 4118  
                          l4445 40CC                            l4437 4080                            l4429 4038  
                          l5261 2CCC                            l5253 2C74                            l5245 2C1C  
                          l5237 2BC4                            l5229 2B6C                            l4373 57BA  
                          l4365 579A                            l5069 3D62                            l5165 491E  
                          l5149 48A2                            l4701 56F8                            l3565 3F76  
                          l3557 3F2E                            l3549 3ECC                            l3581 42FC  
                          l3573 42AA                            l3493 4B12                            l3661 4C14  
                          l3653 4BD2                            l3901 2DB6                            l4197 3BF8  
                          l4189 3B8E                            l4357 506C                            l4381 5196  
                          l6061 38BA                            l6045 3872                            l6037 383A  
                          l6029 382C                            l4613 2976                            l4621 29BE  
                          l4605 2910                            l4541 2764                            l4533 2732  
                          l4525 2716                            l4517 26EC                            l4509 26BC  
                          l5501 1BD0                            l5421 1A50                            l5413 1A20  
                          l5173 5850                            l6141 446C                            l6133 4434  
                          l6125 440C                            l6117 43FC                            ?_pad 0013  
                          l5183 58B0                            l3639 4D10                            l4471 41B8  
                          l4455 413C                            l4463 417A                            l4447 40D8  
                          l4439 4092                            l5263 2CF8                            l5255 2CA0  
                          l5247 2C48                            l5239 2BF0                            l4375 57C0  
                          l4367 57A0                            l5159 48F8                            l4703 577C  
                          l4391 5688                            l3559 3F40                            l3591 4372  
                          l3583 431A                            l3575 42CA                            l3671 552E  
                          l3495 4B30                            l3487 4AE4                            l3663 4C18  
                          l3655 4BE0                            l3911 2E10                            l3903 2DC6  
                          l4199 3C0C                            l4359 507A                            l4383 519E  
                          l6063 38D4                            l6055 389E                            l6047 388E  
                          l6039 3846                            l4631 2A28                            l4623 29D8  
                          l4615 2982                            l4607 291E                            l4551 27AA  
                          l4535 2742                            l4543 276C                            l4527 271C  
                          l4519 26FC                            l5511 1C10                            l5503 1BD4  
                          l5431 1A80                            l5423 1A60                            l5415 1A2E  
                          l5175 5852                            l5167 583A                            l5191 575A  
                          l6071 4EB8                            l6151 449A                            l6143 4486  
                          l6135 4438                            l6127 4418                            l6119 4400  
                          l5185 5858                            l3681 358C                            l4481 4212  
                          l4473 41CA                            l4465 4192                            l4457 4154  
                          l4449 40E8                            l5265 2D10                            l5257 2CB8  
                          l5249 2C60                            l4369 57FA                            l4705 57DA  
                          l4393 5696                            l3593 4392                            l3585 4322  
                          l3577 42CE                            l3569 4298                            l3673 5548  
                          l3497 4B66                            l3489 4AF6                            l3665 4C46  
                          l3657 4BEC                            l3649 4BAE                            l3921 2E3C  
                          l3913 2E1E                            l3905 2DC8                            l4385 51BA  
                          l4377 517C                            l4713 56B8                            l6065 38DA  
                          l6057 38A2                            l6049 3894                            l4633 2A36  
                          l4625 29EE                            l4617 2990                            l4609 294C  
                          l4561 27D2                            l4553 27AE                            l4545 277C  
                          l4537 2752                            l4529 2722                            l5601 1EAA  
                          l5521 1C52                            l5513 1C20                            l5505 1BE2  
                          l5441 1AAA                            l5433 1A92                            l5425 1A62  
                          l5417 1A30                            l5177 5854                            l5169 5844  
                          l5193 5124                            l6081 4F42                            l6073 4ED0  
                          l6145 448A                            l6137 443C                            l6129 441C  
                          l5187 5860                            l3691 36DA                            l3683 35EE  
                          l4491 4268                            l4483 421E                            l4475 41D6  
                          l4467 41A0                            l4459 4160                            l5267 2D12  
                          l5259 2CBA                            l4707 57E0                            l3675 570C  
                          l4395 569A                            l3595 43A4                            l3587 4336  
                          l3579 42DC                            l3667 4C5A                            l3659 4C00  
                          l3931 2F48                            l3923 2EBE                            l3915 2E24  
                          l3907 2DE2                            l4379 518E                            l4715 56D4  
                          l6067 38F6                            l6059 38AE                            l4635 2A3C  
                          l4627 2A08                            l4619 29BA                            l4571 2820  
                          l4547 2792                            l4539 2762                            l4651 3968  
                          l5603 1EAC                            l5531 1C80                            l5523 1C60  
                          l5507 1BE4                            l5443 1ABA                            l5451 1AE4  
                          l5435 1A94                            l5419 1A40                            l5427 1A6A  
                          l6091 4934                            l5195 5138                            l6075 4EEE  
                          l6147 4494                            l6139 4446                            l5189 586A  
                          l3685 3634                            l4493 4282                            l4485 422E  
                          l4477 41E6                            l4469 41AC                            l4901 355E  
                          l5269 2D24                            l3677 571C                            l4389 5684  
                          l3589 4344                            l3597 43AA                            l3941 2FBC  
                          l3933 2F66                            l3925 2EC4                            l3917 2E2C  
                          l3909 2DFE                            l6069 38FC                            l4637 2A3E  
                          l4629 2A24                            l4581 286A                            l4573 2830  
                          l4565 27E6                            l4549 27A2                            l4557 27C2  
                          l4661 39A6                            l4653 397E                            l4645 3904  
                          l5701 219E                            l5621 1F00                            l5613 1ED4  
                          l5605 1EB2                            l5541 1CEC                            l5533 1C8A  
                          l5525 1C6C                            l5517 1C34                            l5509 1BEE  
                          l5461 1B1C                            l5453 1AF4                            l5445 1ACA  
                          l5437 1A9A                            l5429 1A7A                            l6093 494A  
                          l5197 514E                            l6077 4F06                            l6181 44AE  
                          l6149 4494                            l3687 3654                            l3679 3570  
                          l4487 424C                            l4479 4200                            l4831 54AA  
                          l5199 2A4C                            l4903 588E                            l4495 5426  
                          l3599 43BA                            l3951 2FF8                            l3943 2FCC  
                          l3935 2F80                            l3927 2ECA                            l3919 2E36  
                          l4591 28B8                            l4583 2876                            l4575 2838  
                          l4567 2800                            l4559 27D2                            l4671 3A2E  
                          l4663 39D8                            l4647 3914                            l5703 21AC  
                          l5631 1F3C                            l5623 1F10                            l5615 1EE0  
                          l5607 1EC0                            l5543 1CFC                            l5527 1C70  
                          l5519 1C44                            l5535 1C90                            l5471 1B30  
                          l5463 1B20                            l5455 1B06                            l5447 1ADA  
                          l5439 1AA8                            l6095 494E                            l4911 3070  
                          l6087 4F5E                            l6079 4F24                            l6191 4514  
                          l6183 44BA                            l3689 3670                            l4489 4258  
                          l4841 32FA                            l4833 54BE                            l3961 58A6  
                          l4497 543A                            l3945 2FD2                            l3953 3008  
                          l3937 2F9A                            l3929 2F2E                            l4593 28CE  
                          l4585 2894                            l4577 2848                            l4569 2810  
                          l4681 3A84                            l4673 3A3C                            l4665 39DA  
                          l4657 3992                            l4649 3922                            l5801 45E2  
                          l5713 2216                            l5721 225E                            l5705 21B0  
                          l5641 1F72                            l5633 1F42                            l5625 1F20  
                          l5617 1EEE                            l5609 1EC2                            l5561 1D7E  
                          l5553 1D56                            l5537 1CB6                            l5545 1D0C  
                          l5529 1C7E                            l5481 1B44                            l5473 1B34  
                          l5465 1B24                            l5457 1B14                            l5449 1ADC  
                          l6097 495A                            l4921 310A                            l4913 3088  
                          l4905 3034                            l6193 4528                            l6185 44CC  
                          l4851 335C                            l4843 330E                            l4835 54D6  
                          l3971 58D4                            l3963 58AA                            l4499 5452  
                          l4691 56E2                            l3947 2FE4                            l3939 2FAA  
                          l4595 28D4                            l4587 2896                            l4579 285C  
                          l4683 3A94                            l4675 3A5A                            l4667 39E6  
                          l4659 399A                            l5811 460A                            l5803 45EC  
                          l5731 22D2                            l5723 2278                            l5715 2222  
                          l5707 21BE                            l5643 1F82                            l5635 1F50  
                          l5627 1F26                            l5619 1EF0                            l5563 1D86  
                          l5555 1D60                            l5547 1D32                            l5539 1CEA  
                          l5571 1DAA                            l5491 1B58                            l5483 1B48  
                          l5475 1B38                            l5467 1B28                            l5459 1B18  
                          l6099 495E                            l4931 31CC                            l4923 3142  
                          l4915 30C0                            l4907 3040                            l6195 4542  
                          l6187 44E0                            l4861 33A8                            l4853 3370  
                          l4845 331A                            l3981 54A4                            l3973 546A  
                          l3957 58C6                            l3965 58BC                            l4837 475C  
                          l4693 56EC                            l3949 2FF0                            l4597 28DE  
                          l4589 28A6                            l4685 3AA2                            l4677 3A5C  
                          l4669 3A22                            l5813 4616                            l5805 45F6  
                          l5733 22E0                            l5725 228C                            l5717 2230  
                          l5709 21EC                            l5661 2004                            l5653 1FCC  
                          l5645 1F88                            l5637 1F52                            l5629 1F36  
                          l5581 1DFC                            l5573 1DAE                            l5565 1D8A  
                          l5557 1D6E                            l5549 1D42                            l5493 1B82  
                          l5485 1B4C                            l5477 1B3C                            l5469 1B2C  
                          l4941 325C                            l4933 31DE                            l4925 3154  
                          l4917 30D2                            l4909 3050                            l5901 1174  
                          l6189 4502                            l3991 4E14                            l4871 3400  
                          l4863 33C0                            l4847 3332                            l4839 32DE  
                          l3983 54A6                            l3975 546E                            l3959 58CA  
                          l3967 58C0                            l4695 56F2                            l4951 5654  
                          l3895 2D4E                            l4599 28EC                            l4687 3AA4  
                          l4679 3A60                            l5815 4626                            l5751 4686  
                          l5735 22E2                            l5727 22A6                            l5719 225A  
                          l5671 204E                            l5663 201C                            l5655 1FD8  
                          l5647 1FA8                            l5639 1F62                            l5591 1E62  
                          l5583 1E08                            l5575 1DBC                            l5567 1D9A  
                          l5559 1D70                            l5495 1B9E                            l5487 1B50  
                          l5479 1B40                            l5743 535A                            l5831 23B8  
                          l5823 22FE                            l4943 327A                            l4935 31FC  
                          l4927 3178                            l4919 30F2                            l5911 1310  
                          l5903 1190                            l4961 5820                            l3993 4E20  
                          l4881 348E                            l4873 3424                            l4865 33C2  
                          l4857 3384                            l4849 3336                            l3977 5476  
                          l3969 58D0                            l4697 56F4                            l4953 565E  
                          l3897 2D6E                            l5817 4636                            l5761 46F4  
                          l5753 4696                            l5729 22C2                            l5737 22E8  
                          l5681 20A4                            l5673 205E                            l5665 2028  
                          l5657 1FE2                            l5649 1FB8                            l5593 1E72  
                          l5585 1E16                            l5577 1DD2                            l5569 1D9C  
                          l5497 1BAE                            l5489 1B54                            l5745 536A  
                          l5841 2500                            l5833 23DC                            l5825 231E  
                          l4945 3292                            l4937 3214                            l4929 3190  
                          l5921 13EE                            l5913 13B2                            l5905 1238  
                          l3995 4E38                            l3987 4DF8                            l4891 3506  
                          l4883 3490                            l4875 343C                            l4867 33E6  
                          l4859 3386                            l3979 547E                            l4699 56F6  
                          l4955 566E                            l3899 2D96                            l5819 4646  
                          l5763 4702                            l5755 46C4                            l5739 22EC  
                          l5691 2148                            l5683 20C0                            l5675 206A  
                          l5667 2034                            l5659 1FF8                            l5771 55E2  
                          l5595 1E92                            l5587 1E50                            l5499 1BC4  
                          l5851 267A                            l5843 256C                            l5835 23FA  
                          l5827 2368                            l4947 32C8                            l4939 324A  
                          l5931 1618                            l5923 1490                            l5915 13C6  
                          l5907 1254                            l3997 4E44                            l3989 4DFC  
                          l4893 351E                            l4885 34B4                            l4877 343E  
                          l4869 33FE                            l4957 5678                            l4949 5650  
                          l5781 4568                            l5765 4752                            l5757 46D4  
                          l5749 4658                            l5693 2156                            l5685 20CC  
                          l5677 207A                            l5669 2042                            l5773 55F8  
                          l5597 1E96                            l5589 1E52                            l5853 269E  
                          l5845 259E                            l5829 237C                            l5861 556E  
                          l5941 1752                            l5933 1634                            l5925 14AC  
                          l5917 13DE                            l5909 12FC                            l4959 581A  
                          l3999 4E50                            l4895 3520                            l4887 34E0  
                          l4879 3462                            l5871 4FF4                            l5791 45B8  
                          l5767 4758                            l5759 46E2                            l5695 2174  
                          l5687 20E8                            l5679 2094                            l5775 5608  
                          l5599 1EA4                            l5847 260A                            l5839 2432  
                          l5863 5572                            l5951 186A                            l5943 175C  
                          l5935 164C                            l5927 1554                            l5919 13E2  
                          l4897 3544                            l4889 34E2                            l5873 5056  
                          l5793 45BC                            l5785 457C                            l5697 217E  
                          l5689 2112                            l5849 263E                            l5857 55A8  
                          l5865 558A                            l5953 1874                            l5945 178A  
                          l5937 167A                            l5929 1570                            l5881 0E72  
                          l4899 355C                            l5795 45CA                            l5787 45A6  
                          l5779 4550                            l5699 218C                            l5867 55A0  
                          l5963 18CC                            l5947 184A                            l5955 187E  
                          l5939 1748                            l5891 1096                            l5883 0F0E  
                          l5875 0E14                            l5789 45A8                            l5981 19AC  
                          l5965 18E4                            l5957 18AC                            l5949 1862  
                          l5973 191E                            l5893 10AA                            l5885 0F2A  
                          l5877 0E62                            l5983 19DA                            l5975 194A  
                          l5967 18EC                            l5959 18C4                            l5895 10C2  
                          l5887 0FD2                            l5879 0E66                            l5985 1A08  
                          l5977 1978                            l5969 1918                            l5897 10C6  
                          l5889 0FEE                            l5995 3766                            l5979 19A6  
                          l5899 10D2                            l5997 376A                            l5989 3744  
                          l5999 3776                            STR_1 0E05                            STR_3 0E0D  
                          u3000 4CC6                            u3001 4CC2                            u3010 4CE4  
                          u3011 4CE0                            u3020 4D00                            u3100 5732  
                          u3021 4CFC                            u3101 572E                            u3030 4D26  
                          u3110 358C                            u3031 4D22                            u3111 3588  
                          u3120 3670                            u3040 4BBE                            u4000 3ADA  
                  _BAUD4CONbits 000EE9                            u3121 366C                            u3041 4BBA  
                          u4001 3AD6                            _LATE 000F7D                            u3050 4BE0  
                          u4010 3B22                            u3051 4BDC                            u4011 3B1E  
                          _LATG 000F7F                            u3060 4C36                            u4020 3B46  
                          u3061 4C32                            u4021 3B42                            u3134 36CA  
                          u3070 4C46                            u4030 3BEA                            u3135 36C6  
                          u3071 4C42                            u4031 3BE6                            u3144 3734  
                          u4040 4FDA                            u3080 5548                            u3145 3730  
                          u4041 4FD6                            u3081 5544                            u4050 4FF2  
                          u3090 571C                            u5010 309A                            _T2PR 000FBC  
                          u4051 4FEE                            u3091 5718                            u5011 3092  
                          u4060 4DB2                            u4300 404A                            u4061 4DAE  
                          u4301 4046                            u4070 4DCA                            u4310 4080  
                          u5110 31A2                            u5030 30D2                            u4071 4DC6  
                          u4311 407C                            u5111 319A                            u5031 30CE  
                          u4400 4282                            u4320 4092                            u4080 5888  
                          u2800 4B08                            u3600 2E1E                            u6000 1F72  
                          u5040 30E4                            u5008 3064                            u4401 427E  
                          u4321 408E                            u4081 5884                            u2801 4B04  
                          u3601 2E1A                            u6001 1F6E                            u5041 30DC  
                          u4330 40C8                            u2810 4B30                            u3610 2F48  
                          u4250 50BC                            u4410 26CA                            u6010 1FA8  
                          u5210 32A4                            u5130 31DE                            u4331 40C4  
                          u2811 4B2C                            u3611 2F44                            u4251 50B8  
                          u4411 26C6                            u6011 1FA4                            u5211 329C  
                          u5131 31DA                            u4340 4102                            u4260 56B2  
                          u2900 3F0C                            u2820 4B66                            u3620 2F66  
                          u3540 2D7E                            u4500 286A                            u4420 26DC  
                          u6100 2230                            u6020 1FB8                            u5140 31F0  
                          u5108 3168                            u5060 311C                            u5028 309C  
                          u4341 40FE                            u4261 56AE                            u2901 3F08  
                          u2821 4B62                            u3621 2F62                            u3541 2D78  
                          u4501 2866                            u4421 26D8                            u6101 222C  
                          u6021 1FB4                            u5141 31E8                            u5061 3114  
                          u3710 4E14                            u4350 4192                            u5310 4860  
                          u2910 3F56                            u2830 53E2                            u3630 2F80  
                          u3550 2D80                            u4510 2894                            u4430 26EC  
                          u6110 2278                            u6030 2132                            u5230 32DC  
                          u3711 4E10                            u4351 418E                            u5311 485C  
                          u2911 3F52                            u2831 53DE                            u3631 2F7C  
                          u4511 2890                            u4431 26E8                            u6111 2274  
                          u5231 32D8                            u3720 4E38                            u4360 41CA  
                          u5400 2ABC                            u5320 4884                            u2920 42AA  
                          u2840 5642                            u3640 2F9A                            u3560 2D96  
                          u4600 2990                            u4520 28B8                            u4440 2730  
                          u6200 4568                            u6120 22A6                            u6040 218C  
                          u5208 3270                            u5160 3226                            u5128 31A4  
                          u5080 3154                            u3721 4E34                            u4361 41C6  
                          u5401 2AB8                            u5321 4880                            u2921 42A6  
                          u2841 563E                            u3641 2F96                            u3561 2D92  
                          u4601 298C                            u4521 28B4                            u4441 272C  
                          u6201 4564                            u6121 22A2                            u6041 2188  
                          u5161 321E                            u5081 3150                            u3730 4E82  
                          u4370 4200                            u4290 4012                            u5410 2B14  
                          u5330 48B0                            u2850 3E22                            u2930 42DC  
                          u3650 2FAA                            u3570 2DC6                            u4610 29D8  
                          u4530 28CE                            u4450 2742                            u6210 459C  
                          u6130 22E0                            u6050 21AC                            u5090 3166  
                          u5058 30E6              verify_color@color2 00A4                            u3731 4E7E  
                          u4371 41FC                            u4291 400E                            u5411 2B10  
                          u5331 48AC                            u2851 3E1E                            u2931 42D8  
                          u3651 2FA6                            u3571 2DC2                            u4611 29D4  
                          u4531 28CA                            u4451 273E                            u6131 22DC  
                          u6051 21A8                            u6035 2128                            u5091 315E  
            verify_color@color3 00A1                            u3740 4E9A                            u4380 4212  
                          u5420 2B6C                            u3708 5494                            u5340 48C2  
                          u2860 3E54                            u2940 431A                            u3660 2FBC  
                          u3580 2DE2                            u4620 2A08                            u4540 28EC  
                          u4460 2752                            u4700 3A4C                            u6220 45CA  
                          u6140 4686                            u6060 21BE                            u6300 23B8  
                          u5228 32A6                            u5180 325C                            u3741 4E96  
                          u4381 420E                            u5421 2B68                            u5341 48BE  
                          u2861 3E50                            u2941 4316                            u3661 2FB8  
                          u3581 2DDE                            u4621 2A04                            u4541 28E8  
                          u4461 274E                            u4701 3A48                            u6221 45C6  
                          u6141 4682                            u6061 21BA                            u6301 23B4  
                          u5181 3258                            u4390 4248                            u5430 2BC4  
                          u5350 48E6                            u2950 4344                            u2790 4AF6  
                          u3670 2FCC                            u3590 2E10                            u4630 2A36  
                          u4550 290C                            u4470 2792                            u4710 3A5A  
                          u6230 45DE                            u6150 46C4                            u6070 21EC  
                          u6310 23FA                            u5190 326E                            u5158 31F2  
                          u5078 311E                            u4391 4244                            u7007 3FF2  
                          u5431 2BC0                            u5351 48E2                            u2871 3E7E  
                          u2951 4340                            u2791 4AF2                            u3671 2FC8  
                          u3591 2E0C                            u4631 2A32                            u4551 2908  
                          u4471 278E                            u4711 3A56                            u6231 45DA  
                          u6215 4592                            u6151 46C0                            u6071 21E8  
                          u6311 23F6                            u5191 3266                            u5440 2C1C  
                          u5360 48F8                            u2880 3EA2                            u2960 4372  
                          u3680 2FE4                            u4560 291E                            u4480 27D2  
                          u4720 3A94                            u4640 3914                            u6240 4606  
                          u6160 46E2                            u6080 2202                            u5600 1AA8  
                          u6320 2500                            u6400 178A                            u7017 405C  
                          u5441 2C18                            u5361 48F4                            u2881 3E9E  
                          u2961 436E                            u3681 2FE0                            u4561 291A  
                          u4481 27CE                            u4721 3A90                            u4641 3910  
                          u6241 4602                            u6161 46DE                            u6081 21FE  
                          u5601 1AA4                            u6321 24FC                            u6401 1786  
                          u5450 2C74                            u3690 5492                            u2890 3ECC  
                          u2970 43BA                            u4570 294C                            u4490 2848  
                          u4730 3AA2                            u4650 3922                            u6250 4626  
                          u6170 4702                            u6090 2216                            u5610 1ABA  
                          u6330 259E                            u5178 3228                            u6410 184A  
                          u7107 4DD4                            u7027 40A4                            u5451 2C70  
                          u3691 548A                            u2891 3EC8                            u2971 43B6  
                          u4571 2948                            u4491 2844                            u4731 3A9E  
                          u4651 391E                            u6251 4622                            u6171 46FE  
                          u6091 2212                            u5611 1AB6                            u6331 259A  
                          u6411 1846                            u2980 4C86                            u4900 33A8  
                          u5460 2CCC                            u4580 2962                            u4660 397E  
                          u6260 4636                            u6180 4752                            u5700 1C02  
                          u5620 1ACA                            u6340 265E                            u6500 19DA  
                          u6420 1862                            u2981 4C82                            u7117 4E62  
                          u7037 40DE                            u4901 33A4                            u5461 2CC8  
                          u4581 295E                            u4661 397A                            u6261 4632  
                          u6181 474E                            u5701 1BFE                            u5621 1AC6  
                          u6501 19D6                            u6421 185E                            u2990 4CA0  
                          u4910 33E6                            u5470 2D24                            u5390 2A66  
                          u4590 2976                            u4670 39D4                            u6190 55F8  
                          u5710 1C10                            u5630 1B06                            u6350 267A  
                          u6270 233E                            u6510 1A08                            u6430 18AC  
                          u2991 4C9C                            u7127 4EA4                            u7047 4172  
                          u4911 33E2                            u5471 2D20                            u5391 2A62  
                          u4591 2972                            u4671 39D0                            u6191 55F4  
                          u5711 1C0C                            u5631 1B02                            u6351 2676  
                          u6511 1A04                            u6431 18A8                            u4920 3424  
                          u6520 37BE                            u4680 3A1E                            u5800 1D6E  
                          u5720 1C20                            u5640 1B14                            u5560 1A2E  
                          u6280 2368                            u6360 558A                            u6440 18C4  
                          u7137 4FBA                            u7057 41DC                            u4921 3420  
                          u6521 37BA                            u4681 3A1A                            u5801 1D6A  
                          u5721 1C1C                            u5641 1B10                            u5561 1A2A  
                          u6345 2654                            u6281 2364                            u6361 5586  
                          u6441 18C0                            u4930 3462                            u6530 3826  
                          u4690 3A3C                            u5810 1D7E                            u5730 1C52  
                          u5650 1B82                            u5570 1A40                            u6290 239C  
                          u6370 55A0                            u6450 18E4                            u7147 582A  
                          u7067 4224                            u4931 345E                            u6531 3822  
                          u4691 3A38                            u5811 1D7A                            u5731 1C4E  
                          u5651 1B7E                            u5571 1A3C                            u6275 2334  
                          u6371 559C                            u6451 18E0                            u4940 34B4  
                          u6540 388E                            u5900 1E62                            u5820 1D9A  
                          u5740 1C60                            u5660 1B9A                            u5580 1A50  
                          u6460 1918                            u6380 167A                            u7077 425E  
                          u4941 34B0                            u6541 388A                            u5901 1E5E  
                          u5821 1D96                            u5741 1C5C                            u5661 1B94  
                          u5581 1A4C                            u6461 1914                            u6381 1676  
                          u4950 3506                            u6550 38F6                            u5910 1E72  
                          u5830 1DAA                            u5750 1C7E                            u5670 1B9C  
                          u5590 1A92                            u6470 194A                            u6390 1748  
                          u7087 550A                            u4951 3502                            u6551 38F2  
                          u5911 1E6E                            u5831 1DA6                            u5751 1C7A  
                          u5591 1A8E                            u6295 2392                            u6471 1946  
                          u6391 1744                            u6607 4452                            u4960 3544  
                          u4880 335C                            u5920 1E92                            u5840 1DBC  
                          u5760 1CB6                            u5680 1BC4                            u6480 1978  
                          u6560 4F42                            u7097 4D92                            u4961 3540  
                          u4881 3358                            u5921 1E8E                            u5841 1DB8  
                          u5761 1CB2                            u5681 1BC0                            u6481 1974  
                          u6561 4F3E                            u6617 4478                            u4970 356E  
                          u4890 3380                            u5930 1EA4                            u5850 1DD2  
                          u5770 1CFC                            u5690 1BE2                            u6490 19A6  
                          u6570 4F5A                            u4971 356A                            u4891 337C  
                          u5931 1EA0                            u5851 1DCE                            u5771 1CF8  
                          u5691 1BDE                            u6707 30FC                            u6491 19A2  
                          u6571 4F56                            u6627 4534                            u5940 1EC0  
                          u5860 1DE8                            u5780 1D32                            u6580 4A0A  
                          u4980 3050                            u5941 1EBC                            u5861 1DE4  
                          u5781 1D2E                            u6581 4A06                            u6717 3134  
                          u4981 304C                            u6637 4EC2                            u5950 1EEE  
                          u5870 1DFC                            u5790 1D42                            u4990 3062  
                          u6590 4514                            u6807 378E                            u5951 1EEA  
                          u5871 1DF8                            u5791 1D3E                            u6727 3182  
                          u4991 305A                            u6647 4EF8                            u6591 4510  
                          u5960 1F00                            u5880 1E16                            u6817 37F6  
                          u5961 1EFC                            u5881 1E12                            u6737 31BE  
                          u6657 10B4                            u5970 1F10                            u5890 1E50  
                          u6907 3CBC                            u6827 385E                            u5971 1F0C  
                          u5891 1E4C                            u6747 3206                            u6667 13D0  
                          u5980 1F50                            u6917 3D20                            u6837 38C6  
                          u5981 1F4C                            u6757 323C                            u6677 163E  
                          u5990 1F62                            u6927 3D84                            u6847 5664  
                          u5991 1F5E                            u6767 3284                            u6687 307A  
                          u6937 3E00                            u6857 486A                            u6777 32BA  
                          u6697 30B2                            u6947 57AA                            u6867 4890  
                          u6787 5142                            u6957 57CA                            u6877 48CC  
                          u6797 516C                            u6967 57EA                            u6887 4904  
                          u6977 580A                            u6897 5444                            u6987 54C8  
                          u6997 3324                            abs@a 0015                            _dbuf 0191  
                          _main 43FC                            _dtoa 2D4E                            _prec 00EF  
                          _nout 00EB                            pad@i 001A                            pad@p 0017  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001C  
                          fsr2l 000FD9                            btemp 005C                            _stop 4DF8  
                          prodh 000FF4                            prodl 000FF3                            start 0048  
                ?_color_display 0079                   test_action@mL 0034                   test_action@mR 0036  
               ___fldiv@new_exp 0022          __end_of_color_read_Red 521E                 __end_of_HighISR 58DE  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0017  
                         ??_pad 0019                   ___fltol@sign1 004F                 __end_of___aodiv 3F98  
               __end_of___fladd 1ED4                           ?_main 0001                           ?_dtoa 001E  
               __end_of___aomod 43FC                 __end_of___fldiv 2A4A                 __end_of___awdiv 4D38  
               __end_of___flneg 561A                 __end_of___flmul 22FE                 __end_of___flsub 53A0  
               __end_of___fltol 4658                           ?_stop 001C                 ___awdiv@divisor 000B  
                         _LED_B 57FA                           _LED_C 57DA                           _LED_G 57BA  
                         _LED_R 579A                           i1l744 003C                           i2l738 58DA  
               ___awdiv@counter 000D                    vfpfcnvrt@fmt 0044                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 588E      __end_of_I2C_2_Master_Start 58D0  
       ??_color_data_collection 00E1      __end_of_I2C_2_Master_Write 58B0                 __end_of_compare 55A8  
                  compare@lower 007A                           _flags 00F1                           _color 0190  
                  compare@upper 007E                           _fputc 4AE4                           _fputs 53A0  
                         pad@fp 0013                           _width 00ED                           _putch 58E2  
                         _toint 0E01                           dtoa@d 0020                           dtoa@i 0040  
                         dtoa@n 0038                           dtoa@p 0032                           dtoa@s 0036  
                         dtoa@w 0034                           tablat 000FF5                 __end_of_lroundf 55E2  
                         ttemp5 005D                           ttemp6 0060                           ttemp7 0064  
                         status 000FD8                           wtemp8 005D                 __end_of_sprintf 51CE  
              color_display@buf 007B         __end_of_color_read_Blue 530E           _I2C_2_Master_RepStart 58D0  
               ??_short_reverse 002C                 ?_color_read_Red 0007                 __initialization 530E  
                 short_burst@mL 0022                   short_burst@mR 0024                    __end_of_main 4550  
                  __end_of_dtoa 3032            __end_of_detect_color 1A14                    __end_of_stop 4EB4  
        color_data_collection@i 00E3          color_data_collection@j 00E5          color_data_collection@k 00E7  
        color_data_collection@m 00DF          color_data_collection@x 00E9                          ??_main 01B1  
                        ??_dtoa 0028                          ??_stop 0020                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 588E                   calibration@mL 0038  
                 calibration@mR 003A                       ??_LED_OFF 0003          _initDCmotors_parameter 4A12  
                  ?_setMotorPWM 0011                          ?_fputc 0003                          ?_fputs 000C  
              ___awdiv@dividend 0009                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i1l5405 0022  
                        i1l5407 0032                          i1l5409 0038              turnLeft@angle_left 0026  
                     ??_HighISR 0001        __end_of_color_click_init 5684                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A                __end_of___xxtofl 3AB6  
                        _LowISR 0018                   ??_Timer0_init 0003                 ??_color_predict 005A  
                  vfprintf@cfmt 0058                          ___flge 4658                       ??___aodiv 0013  
                     ??___fladd 000B                       ??___aomod 0013                          ___wmul 5734  
                     ??___fldiv 0019                       ??___awdiv 000D                       ??___flneg 0007  
                     ??___flmul 0032                          _action 2A4A                       ??___flsub 001B  
                     ??___fltol 004B                          _goback 32DE                   compare@result 0051  
                        _memory 013C                          clear_0 5332                          clear_1 533E  
              ___awdiv@quotient 000F                          _second 00F7                          _motorL 0182  
                        _motorR 0178                          isa$std 000001                          pad@buf 0015  
                        _roundf 22FE                          dtoa@fp 001E                          _strlen 561A  
                     ??_compare 0051                   toggle_light@i 0006                __end_of_pin_init 577A  
                        fputc@c 0003         toggle_light@lightnumber 0007                          fputs@c 0010  
                        fputs@i 0011                          fputs@s 000C                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 0051                     read_color@m 000E  
                        putch@c 0001                __end_of_vfprintf 50C6                          stop@mL 001C  
                        stop@mR 001E               ??_initDCmotorsPWM 0005                    ?_test_action 0034  
                     ??_sprintf 005A                __end_of_turnLeft 4298                      ___flge@ff1 0003  
                    ___flge@ff2 0007                    ___xxtofl@arg 000D                    ___xxtofl@exp 000C  
                  ___xxtofl@val 0003                    ?_short_burst 0022                calibrate_white@w 000E  
               fullSpeedBack@mL 0022                 fullSpeedBack@mR 0024                      __accesstop 0060  
       __end_of__initialization 5348                   verify_color@m 009D                   verify_color@w 009F  
      __end_of_color_read_Clear 52BE                      ___flneg@f1 0003        __end_of_color_read_Green 526E  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0003  
  initDCmotors_parameter@motorR 0005                   ___rparam_used 000001                      ___fltol@f1 0072  
                 __end_of_LED_B 581A                   __end_of_LED_C 57FA                   __end_of_LED_G 57DA  
                 __end_of_LED_R 57BA                ?_color_read_Blue 0007                 _Interrupts_init 58B0  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4D38                    __pidataBANK0 58DE  
       __end_of_buggylight_init 58A4            turnRight@angle_right 0026           _distance_measure$3199 0084  
                 __end_of_fputc 4BAE               detect_color@color 0096                   __end_of_fputs 53E4  
                 __end_of_putch 58E4                   __end_of_toint 0E05             __end_of_Timer0_init 5876  
                       ??_LED_B 0003                         ??_LED_C 0003                         ??_LED_G 0003  
                       ??_LED_R 0003               ?_distance_measure 007A           fullSpeedAhead_test@mL 0022  
         fullSpeedAhead_test@mR 0024              ??_distance_measure 0051                         ??_fputc 0007  
                       ??_fputs 0010                         ??_putch 0003                      __pbssBANK0 00EB  
                    __pbssBANK1 0100                color_predict@buf 0079                         ?_LowISR 0001  
             _color_writetoaddr 577A                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0022  
                       ?___flge 0003              ?_color_writetoaddr 0005                         ?___wmul 0003  
                       ?_action 003C                         ?_goback 0034                         ?_roundf 0043  
           ??_color_writetoaddr 0006                         ?_strlen 0003                         _LED_OFF 581A  
                     ?___xxtofl 0003                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5                    _detect_color 0E14   __end_of_color_data_collection 3902  
       __end_of_Interrupts_init 58BC          color_writetoaddr@value 0005                ??_color_read_Red 0009  
                       _HighISR 0008       __end_of_color_writetoaddr 579A              _I2C_2_Master_Start 58C6  
                    _initUSART4 583A              _I2C_2_Master_Write 58A4             _fullSpeedAhead_test 5426  
                     ?_pin_init 0001                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000C                     _Timer0_init 5858         sendStringSerial4@string 0004  
                       ___aodiv 3E10                         ___fladd 1A14                         ___aomod 4298  
                       ___fldiv 26B0                         ___awdiv 4C74                         ___flneg 55E2  
                       ___flmul 1ED4                         ___flsub 535A                         ___fltol 4550  
                 ??_calibration 003C             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0052                    __psmallconst 0E00  
     distance_measure@threshold 0082                         __pcinit 530E                         __ramtop 0E00  
                    _read_color 50C6                       ?_turnLeft 0022                         __ptext0 43FC  
                       __ptext1 4EB4                         __ptext2 0E14                         __ptext3 556E  
                       __ptext4 3032                         __ptext5 5124                         __ptext6 575A  
                       __ptext7 583A                         __ptext8 4A12                         __ptext9 53E4  
                       _compare 556E         ?_initDCmotors_parameter 0003                       _T2CONbits 000FBD  
          ?_fullSpeedAhead_test 0022                      ??___xxtofl 0007                       _T2HLTbits 000FBE  
                       _lroundf 55A8                   _RxBufWriteCnt 00FB                         goback@i 003A  
        distance_measure@CC_amb 0088          distance_measure@CG_amb 0080                         _sprintf 517C  
                       main@rgb 01CE            ??_I2C_2_Master_Start 0004            ??_I2C_2_Master_Write 0004  
                __pintcode_body 58DA            end_of_initialization 5348              setMotorPWM@PWMduty 001A  
               _CALIBRATION_135 00FE                 _CALIBRATION_180 00FD                         fputc@fp 0005  
                       int_func 58DA                         fputs@fp 000E               ?_color_click_init 0001  
               ??_fullSpeedBack 0026                      ??_pin_init 0003              ??_color_click_init 0007  
             __end_of_vfpfcnvrt 3C6A           __end_of_short_reverse 54EC                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 0064                         roundf@u 006A  
                       roundf@x 0043                         roundf@y 006E                      ??_vfprintf 0058  
                       strlen@a 0005                         strlen@s 0003                 _initDCmotorsPWM 53E4  
             distance_measure@w 007E                      ??_turnLeft 0027  __end_of_initDCmotors_parameter 4AE4  
                     _PORTFbits 000F8E           ??_fullSpeedAhead_test 0026               __end_of_turnRight 4118  
                   ___fladd@grs 0012             __end_of_calibration 4934                   ___xxtofl@sign 000B  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0024                     ___fldiv@rem 001D  
              fullSpeedAhead@mL 001C                fullSpeedAhead@mR 001E        color_writetoaddr@address 0006  
       ??_I2C_2_Master_RepStart 0004                      _start_move 00F5                ?_Interrupts_init 0001  
                   ___flmul@grs 0038                   ?_toggle_light 0003               ?_color_read_Clear 0007  
                  _EUSART4RXbuf 0164                    _EUSART4TXbuf 0100               ?_color_read_Green 0007  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0003                   ?_verify_color 009D  
         __end_of_color_display 5064                      main@motorL 01D6                      main@motorR 01E0  
             ??_calibrate_white 0010              ??_color_read_Clear 0009                  color_display@m 0079  
            ??_color_read_Green 0009                  detect_color@BB 0094                  detect_color@BG 0097  
                detect_color@GB 0086                  detect_color@GC 0088                  detect_color@GG 008E  
                detect_color@BR 0092                  detect_color@GR 008C                  detect_color@RB 0084  
                detect_color@RG 008A                  detect_color@RR 0090                  __end_of_LowISR 0048  
         __end_of_color_predict 56E2                  __end_of___flge 475C                  _fullSpeedAhead 4F60  
                   vfpfcnvrt@ap 0046                     vfpfcnvrt@fp 0042                     vfpfcnvrt@ll 004A  
                __end_of___wmul 575A                  __end_of_action 2D4E                     ?_read_color 000E  
                __end_of_goback 3570                  __end_of_roundf 26B0              turnRight@delay_135 0028  
            turnRight@delay_180 002A                  __end_of_strlen 5650             color_read_Clear@tmp 000C  
           start_initialization 530E                     __end_of_abs 556E                     __end_of_pad 4C74  
                 _TxBufWriteCnt 005B               turnLeft@delay_135 0028               turnLeft@delay_180 002A  
                ??_toggle_light 0004                  ??_verify_color 0056             color_read_Green@tmp 000C  
                      ??_LowISR 0001                  _reverse_square 54EC         __end_of_initDCmotorsPWM 5426  
                   vfprintf@fmt 0054          __end_of_fullSpeedAhead 4FF4                        ??___flge 000B  
                      ??___wmul 0007                        ??_action 0040                        ??_goback 0038  
               short_reverse@mL 0028                 short_reverse@mR 002A                     __pdataBANK0 00FC  
                   _calibration 484E                        ??_roundf 0047                        ??_strlen 0005  
                     ___fladd@a 0007                       ___fladd@b 0003                        ?_LED_OFF 0001  
                     ___fldiv@a 0015                       ___fldiv@b 0011                       ___flmul@a 002E  
                     ___flmul@b 002A                     __pbssCOMRAM 005A                       ___flsub@a 0017  
                     ___flsub@b 0013                   __pcstackBANK0 0060                   __pcstackBANK1 01B1  
              ___aodiv@dividend 0003                        ?_HighISR 0001          __end_of_reverse_square 552E  
                     _dtoa$2837 0030                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001C  
                     __pintcode 0008                        ?___aodiv 0003                        ?___fladd 0003  
                      ?___aomod 0003                        ?___fldiv 0011                        ?___awdiv 0009  
              ___aodiv@quotient 0015                        ?___flneg 0003                        ?___flmul 002A  
                      ?___flsub 0013                        ?___fltol 0072                     __pintcodelo 0018  
               turnRight@i_1461 002E                 turnRight@i_1462 0030                  turnLeft@i_1436 002E  
                turnLeft@i_1437 0030            I2C_2_Master_Read@ack 0005            I2C_2_Master_Read@tmp 0006  
                      ?_compare 007A                     __smallconst 0E00               _I2C_2_Master_Idle 570C  
             _I2C_2_Master_Init 56E2               _I2C_2_Master_Read 5468               _I2C_2_Master_Stop 58BC  
        toggle_light@toggletime 0003                    _RxBufReadCnt 00FA                        ?_lroundf 0076  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0013              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0003  
                      ?_sprintf 0060               _sendStringSerial4 5684           _color_data_collection 3744  
           ??_I2C_2_Master_Idle 0003             ??_I2C_2_Master_Init 0003             ??_I2C_2_Master_Read 0004  
                ___wmul@product 0007                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0004  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
               ?_reverse_square 0028                        _PIE0bits 000E29              ?_sendStringSerial4 0004  
                      _PIE4bits 000E2D                     turnRight@mL 0022                     turnRight@mR 0024  
                      i1u555_20 0032                        i1u555_21 002E                        _PIR0bits 000E33  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0003               ??_sendCharSerial4 0003  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0006                        _SSP2STAT 000ED8  
                   _array_index 005A                       _vfpfcnvrt 3AB6       __end_of_I2C_2_Master_Idle 5734  
          __end_of_toggle_light 32DE       __end_of_I2C_2_Master_Init 570C       __end_of_I2C_2_Master_Read 54AA  
             ___wmul@multiplier 0003       __end_of_I2C_2_Master_Stop 58C6                    setMotorPWM@m 0011  
   I2C_2_Master_Write@data_byte 0004            __end_of_verify_color 4F60                       main@white 01B4  
             ??_color_read_Blue 0009                       _stop_move 00F3                   detect_color@m 0080  
                 detect_color@w 0082                    _TxBufReadCnt 00F9                       _turnRight 3F98  
                 ??_test_action 0038                 _calibrate_white 3C6A       __end_of_sendStringSerial4 56B4  
                 ??_short_burst 0026   __end_of_I2C_2_Master_RepStart 58DA              color_read_Blue@tmp 000C  
           __end_of_setMotorPWM 3744                      roundf@F527 018C                _distance_measure 4934  
                  ??_initUSART4 0003                        __Hrparam 0000                      vfprintf@ap 0056  
                      __Lrparam 0000                      vfprintf@fp 0052           __end_of_fullSpeedBack 4DF8  
                  __Lsmallconst 0E00            compare@value2compare 007C     __end_of_fullSpeedAhead_test 5468  
                    ?_vfpfcnvrt 0042                    ??_read_color 0010                 ___aodiv@divisor 000B  
               ___aodiv@counter 0013                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 0042                      sprintf@fmt 0062                        ___xxtofl 3902  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 5858  
                    ?_turnRight 0022                        __ptext10 4934                        __ptext11 55A8  
                      __ptext20 26B0                        __ptext12 22FE                        __ptext21 3744  
                      __ptext13 535A                        __ptext30 561A                        __ptext22 50C6  
                      __ptext14 1A14                        __ptext31 53A0                        __ptext23 56B4  
                      __ptext15 55E2                        __ptext40 577A                        __ptext32 4AE4  
                      __ptext24 4FF4                        __ptext16 1ED4                        __ptext41 56E2  
                      __ptext33 58E2                        __ptext25 517C                        __ptext17 4658  
                      __ptext50 58A4                        __ptext42 484E                        __ptext34 552E  
                      __ptext26 5064                        __ptext18 4550                        __ptext51 58BC  
                      __ptext43 475C                        __ptext35 4298                        __ptext27 3AB6  
                      __ptext19 3902                        __ptext60 588E                        __ptext52 58C6  
                      __ptext44 5426                        __ptext36 3E10                        __ptext28 2D4E  
                      __ptext61 2A4A                        __ptext53 58D0                        __ptext45 3C6A  
                      __ptext37 5684                        __ptext29 4BAE                        __ptext70 3570  
                      __ptext62 54AA                        __ptext54 5468                        __ptext46 51CE  
                      __ptext38 5876                        __ptext71 5734                        __ptext63 32DE  
                      __ptext55 570C                        __ptext47 521E                        __ptext39 5650  
                      __ptext72 4C74                        __ptext64 3F98                        __ptext56 579A  
                      __ptext48 526E                        __ptext73 5858                        __ptext65 4118  
                      __ptext57 57BA                        __ptext49 52BE                        __ptext74 581A  
                      __ptext66 54EC                        __ptext58 57DA                        __ptext75 58B0  
                      __ptext67 4D38                        __ptext59 57FA                        __ptext68 4DF8  
                      __ptext69 4F60                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 00DF                  turnRight@delay 0032                   turnLeft@delay 0032  
                      action@mL 003C                        action@mR 003E                      turnLeft@mL 0022  
                    turnLeft@mR 0024             __end_of_test_action 484E              __end_of_read_color 5124  
                      _pin_init 575A                      turnRight@i 002C             __end_of_short_burst 517C  
                      isa$xinst 000000            distance_measure@stop 008A                      _RC4STAbits 000EE7  
                      int$flags 005C                     _SENSITIVITY 00FC                        goback@mL 0034  
                      goback@mR 0036                    ?_calibration 0038                        _vfprintf 5064  
                      _turnLeft 4118                ___aomod@dividend 0003         __end_of_calibrate_white 3E10  
                    _INTCONbits 000FF2                     _setMotorPWM 3570                   ?_detect_color 0080  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel1 0000  
                      intlevel2 0000                       sprintf@ap 006C               ??_buggylight_init 0003  
              ??_fullSpeedAhead 0020                       turnLeft@i 002C                reverse_square@mL 0028  
              reverse_square@mR 002A                        lroundf@x 0076        ??_initDCmotors_parameter 0007  
                 _short_reverse 54AA                 ___aomod@divisor 000B                     ??_vfpfcnvrt 0048  
               ___aomod@counter 0013                _color_click_init 5650                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3198 0099                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 007A              distance_measure@mR 007C  
                ??_detect_color 0052                     ??_turnRight 0027                     _test_action 475C  
                 ___fladd@signs 000F                ??_reverse_square 002C                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0014                 _sendCharSerial4 5876                     _short_burst 5124  
                  ___fladd@aexp 0010                    ___fladd@bexp 0011                    _toggle_light 3032  
                  ___aomod@sign 0014                    _verify_color 4EB4                     _roundf$3200 0066  
                   _roundf$3201 0060                   _color_display 4FF4                 main@stop_signal 01B3  
