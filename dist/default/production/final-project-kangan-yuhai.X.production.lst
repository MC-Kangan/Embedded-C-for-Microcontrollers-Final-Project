

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 10 23:30:31 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90  0000                     
    91                           ; Version 2.35
    92                           ; Generated 05/05/2021 GMT
    93                           ; 
    94                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    95                           ; All rights reserved.
    96                           ; 
    97                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    98                           ; 
    99                           ; Redistribution and use in source and binary forms, with or without modification, are
   100                           ; permitted provided that the following conditions are met:
   101                           ; 
   102                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   103                           ;        conditions and the following disclaimer.
   104                           ; 
   105                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   106                           ;        of conditions and the following disclaimer in the documentation and/or other
   107                           ;        materials provided with the distribution. Publication is not required when
   108                           ;        this file is used in an embedded application.
   109                           ; 
   110                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   111                           ;        software without specific prior written permission.
   112                           ; 
   113                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   114                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   115                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   116                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   117                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   118                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   119                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   120                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   121                           ; 
   122                           ; 
   123                           ; Code-generator required, PIC18F67K40 Definitions
   124                           ; 
   125                           ; SFR Addresses
   126  0000                     
   127                           	psect	idataBANK0
   128  005368                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _CALIBRATION_180
   132  005368  14                 	db	20
   133                           
   134                           ;initializer for _SENSITIVITY
   135  005369  0A                 	db	10
   136                           
   137                           	psect	smallconst
   138  000E00                     __psmallconst:
   139                           	callstack 0
   140  000E00  00                 	db	0
   141  000E01  0000               	dw	0
   142  000E03  4B00               	dw	19200
   143  000E05                     __end_of_toint:
   144                           	callstack 0
   145  0000                     _TRISFbits	set	3974
   146  0000                     _TX4REG	set	3812
   147  0000                     _RC4STAbits	set	3815
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _TRISGbits	set	3975
   150  0000                     _TRISEbits	set	3973
   151  0000                     _SSP2CON2bits	set	3802
   152  0000                     _LATG	set	3967
   153  0000                     _LATE	set	3965
   154  0000                     _RX4PPS	set	3605
   155  0000                     _SSP2CLKPPS	set	3612
   156  0000                     _SSP2DATPPS	set	3613
   157  0000                     _ANSELDbits	set	3751
   158  0000                     _SSP2ADD	set	3798
   159  0000                     _SSP2CON1bits	set	3801
   160  0000                     _LATAbits	set	3961
   161  0000                     _LATFbits	set	3966
   162  0000                     _LATGbits	set	3967
   163  0000                     _TRISAbits	set	3969
   164  0000                     _TRISCbits	set	3971
   165  0000                     _TRISDbits	set	3972
   166  0000                     _LATCbits	set	3963
   167  0000                     _LATEbits	set	3965
   168  0000                     _RC4REG	set	3811
   169  0000                     _SP4BRGL	set	3813
   170  0000                     _TX4STAbits	set	3816
   171  0000                     _BAUD4CONbits	set	3817
   172  0000                     _SSP2CON2	set	3802
   173  0000                     _SSP2STAT	set	3800
   174  0000                     _ANSELFbits	set	3764
   175  0000                     _SSP2BUF	set	3797
   176  0000                     _PIE0bits	set	3625
   177  0000                     _PIE4bits	set	3629
   178  0000                     _PIR4bits	set	3639
   179  0000                     _RC0PPS	set	3682
   180  0000                     _RC7PPS	set	3689
   181  0000                     _RD5PPS	set	3695
   182  0000                     _RE2PPS	set	3700
   183  0000                     _RD6PPS	set	3696
   184  0000                     _PORTFbits	set	3982
   185  0000                     _T2PR	set	4028
   186  0000                     _T2CONbits	set	4029
   187  0000                     _PWM7DCH	set	4000
   188  0000                     _PWM6DCH	set	4003
   189  0000                     _TMR0L	set	4051
   190  0000                     _TMR0H	set	4052
   191  0000                     _T0CON0bits	set	4053
   192  0000                     _T2CLKCONbits	set	4031
   193  0000                     _T2HLTbits	set	4030
   194  0000                     _PWM6CONbits	set	4004
   195  0000                     _PWM7CONbits	set	4001
   196  0000                     _PIR0bits	set	3635
   197  0000                     _INTCONbits	set	4082
   198  0000                     _T0CON1bits	set	4054
   199  000E05                     STR_1:
   200                           
   201                           ; BSR set to: 14
   202  000E05  25                 	db	37
   203  000E06  64                 	db	100	;'d'
   204  000E07  09                 	db	9
   205  000E08  25                 	db	37
   206  000E09  64                 	db	100	;'d'
   207  000E0A  09                 	db	9
   208  000E0B  25                 	db	37
   209  000E0C  64                 	db	100	;'d'
   210  000E0D  09                 	db	9
   211  000E0E  25                 	db	37
   212  000E0F  64                 	db	100	;'d'
   213  000E10  0D                 	db	13
   214  000E11  0A                 	db	10
   215  000E12  00                 	db	0
   216  000E13                     
   217                           ; BSR set to: 14
   218  000E13  4C                 	db	76	;'L'
   219  000E14  69                 	db	105	;'i'
   220  000E15  67                 	db	103	;'g'
   221  000E16  68                 	db	104	;'h'
   222  000E17  74                 	db	116	;'t'
   223  000E18  20                 	db	32
   224  000E19  62                 	db	98	;'b'
   225  000E1A  6C                 	db	108	;'l'
   226  000E1B  75                 	db	117	;'u'
   227  000E1C  65                 	db	101	;'e'
   228  000E1D  00                 	db	0
   229  000E1E                     
   230                           ; BSR set to: 14
   231  000E1E  4F                 	db	79	;'O'
   232  000E1F  72                 	db	114	;'r'
   233  000E20  61                 	db	97	;'a'
   234  000E21  6E                 	db	110	;'n'
   235  000E22  67                 	db	103	;'g'
   236  000E23  65                 	db	101	;'e'
   237  000E24  00                 	db	0
   238  000E25                     
   239                           ; BSR set to: 14
   240  000E25  59                 	db	89	;'Y'
   241  000E26  65                 	db	101	;'e'
   242  000E27  6C                 	db	108	;'l'
   243  000E28  6C                 	db	108	;'l'
   244  000E29  6F                 	db	111	;'o'
   245  000E2A  77                 	db	119	;'w'
   246  000E2B  00                 	db	0
   247  000E2C                     
   248                           ; BSR set to: 14
   249  000E2C  57                 	db	87	;'W'
   250  000E2D  68                 	db	104	;'h'
   251  000E2E  69                 	db	105	;'i'
   252  000E2F  74                 	db	116	;'t'
   253  000E30  65                 	db	101	;'e'
   254  000E31  00                 	db	0
   255  000E32                     
   256                           ; BSR set to: 14
   257  000E32  42                 	db	66	;'B'
   258  000E33  6C                 	db	108	;'l'
   259  000E34  61                 	db	97	;'a'
   260  000E35  63                 	db	99	;'c'
   261  000E36  6B                 	db	107	;'k'
   262  000E37  00                 	db	0
   263  000E38                     
   264                           ; BSR set to: 14
   265  000E38  47                 	db	71	;'G'
   266  000E39  72                 	db	114	;'r'
   267  000E3A  65                 	db	101	;'e'
   268  000E3B  65                 	db	101	;'e'
   269  000E3C  6E                 	db	110	;'n'
   270  000E3D  00                 	db	0
   271  000E3E                     
   272                           ; BSR set to: 14
   273  000E3E  45                 	db	69	;'E'
   274  000E3F  72                 	db	114	;'r'
   275  000E40  72                 	db	114	;'r'
   276  000E41  6F                 	db	111	;'o'
   277  000E42  72                 	db	114	;'r'
   278  000E43  00                 	db	0
   279  000E44                     
   280                           ; BSR set to: 14
   281  000E44  42                 	db	66	;'B'
   282  000E45  6C                 	db	108	;'l'
   283  000E46  75                 	db	117	;'u'
   284  000E47  65                 	db	101	;'e'
   285  000E48  00                 	db	0
   286  000E49                     
   287                           ; BSR set to: 14
   288  000E49  50                 	db	80	;'P'
   289  000E4A  69                 	db	105	;'i'
   290  000E4B  6E                 	db	110	;'n'
   291  000E4C  6B                 	db	107	;'k'
   292  000E4D  00                 	db	0
   293  000E4E                     
   294                           ; BSR set to: 14
   295  000E4E  52                 	db	82	;'R'
   296  000E4F  65                 	db	101	;'e'
   297  000E50  64                 	db	100	;'d'
   298  000E51  00                 	db	0
   299  000E52  00                 	db	0	; dummy byte at the end
   300  0000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304  004EDA                     __pcinit:
   305                           	callstack 0
   306  004EDA                     start_initialization:
   307                           	callstack 0
   308  004EDA                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK0 (2 bytes)
   312                           ; load TBLPTR registers with __pidataBANK0
   313  004EDA  0E68               	movlw	low __pidataBANK0
   314  004EDC  6EF6               	movwf	tblptrl,c
   315  004EDE  0E53               	movlw	high __pidataBANK0
   316  004EE0  6EF7               	movwf	tblptrh,c
   317  004EE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   318  004EE4  6EF8               	movwf	tblptru,c
   319  004EE6  0009               	tblrd		*+	;fetch initializer
   320  004EE8  CFF5 F0FB          	movff	tablat,__pdataBANK0
   321  004EEC  0009               	tblrd		*+	;fetch initializer
   322  004EEE  CFF5 F0FC          	movff	tablat,__pdataBANK0+1
   323                           
   324                           ; Clear objects allocated to BANK1 (177 bytes)
   325  004EF2  EE01  F000         	lfsr	0,__pbssBANK1
   326  004EF6  0EB1               	movlw	177
   327  004EF8                     clear_0:
   328  004EF8  6AEE               	clrf	postinc0,c
   329  004EFA  06E8               	decf	wreg,f,c
   330  004EFC  E1FD               	bnz	clear_0
   331                           
   332                           ; Clear objects allocated to BANK0 (19 bytes)
   333  004EFE  EE00  F0E8         	lfsr	0,__pbssBANK0
   334  004F02  0E13               	movlw	19
   335  004F04                     clear_1:
   336  004F04  6AEE               	clrf	postinc0,c
   337  004F06  06E8               	decf	wreg,f,c
   338  004F08  E1FD               	bnz	clear_1
   339  004F0A                     end_of_initialization:
   340                           	callstack 0
   341  004F0A                     __end_of__initialization:
   342                           	callstack 0
   343  004F0A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   344  004F0C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   345  004F0E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   346  004F10  6EF8               	movwf	tblptru,c
   347  004F12  0E0E               	movlw	high __Lsmallconst
   348  004F14  6EF7               	movwf	tblptrh,c
   349  004F16  0100               	movlb	0
   350  004F18  EFC1  F021         	goto	_main	;jump to C main() function
   351                           
   352                           	psect	bssBANK0
   353  0000E8                     __pbssBANK0:
   354                           	callstack 0
   355  0000E8                     _nout:
   356                           	callstack 0
   357  0000E8                     	ds	2
   358  0000EA                     _width:
   359                           	callstack 0
   360  0000EA                     	ds	2
   361  0000EC                     _prec:
   362                           	callstack 0
   363  0000EC                     	ds	2
   364  0000EE                     _flags:
   365                           	callstack 0
   366  0000EE                     	ds	2
   367  0000F0                     _stop_move:
   368                           	callstack 0
   369  0000F0                     	ds	2
   370  0000F2                     _start_move:
   371                           	callstack 0
   372  0000F2                     	ds	2
   373  0000F4                     _second:
   374                           	callstack 0
   375  0000F4                     	ds	2
   376  0000F6                     _array_index:
   377                           	callstack 0
   378  0000F6                     	ds	1
   379  0000F7                     _TxBufReadCnt:
   380                           	callstack 0
   381  0000F7                     	ds	1
   382  0000F8                     _TxBufWriteCnt:
   383                           	callstack 0
   384  0000F8                     	ds	1
   385  0000F9                     _RxBufReadCnt:
   386                           	callstack 0
   387  0000F9                     	ds	1
   388  0000FA                     _RxBufWriteCnt:
   389                           	callstack 0
   390  0000FA                     	ds	1
   391                           
   392                           	psect	dataBANK0
   393  0000FB                     __pdataBANK0:
   394                           	callstack 0
   395  0000FB                     _CALIBRATION_180:
   396                           	callstack 0
   397  0000FB                     	ds	1
   398  0000FC                     _SENSITIVITY:
   399                           	callstack 0
   400  0000FC                     	ds	1
   401                           
   402                           	psect	bssBANK1
   403  000100                     __pbssBANK1:
   404                           	callstack 0
   405  000100                     _EUSART4TXbuf:
   406                           	callstack 0
   407  000100                     	ds	60
   408  00013C                     _memory:
   409                           	callstack 0
   410  00013C                     	ds	40
   411  000164                     _EUSART4RXbuf:
   412                           	callstack 0
   413  000164                     	ds	20
   414  000178                     _motorR:
   415                           	callstack 0
   416  000178                     	ds	10
   417  000182                     _motorL:
   418                           	callstack 0
   419  000182                     	ds	10
   420  00018C                     roundf@F527:
   421                           	callstack 0
   422  00018C                     	ds	4
   423  000190                     _color:
   424                           	callstack 0
   425  000190                     	ds	1
   426  000191                     _dbuf:
   427                           	callstack 0
   428  000191                     	ds	32
   429                           
   430                           	psect	cstackBANK1
   431  0001B1                     __pcstackBANK1:
   432                           	callstack 0
   433  0001B1                     main@white:
   434                           	callstack 0
   435                           
   436                           ; 20 bytes @ 0x0
   437  0001B1                     	ds	20
   438  0001C5                     main@rgb:
   439                           	callstack 0
   440                           
   441                           ; 8 bytes @ 0x14
   442  0001C5                     	ds	8
   443  0001CD                     main@motorL:
   444                           	callstack 0
   445                           
   446                           ; 10 bytes @ 0x1C
   447  0001CD                     	ds	10
   448  0001D7                     main@motorR:
   449                           	callstack 0
   450                           
   451                           ; 10 bytes @ 0x26
   452  0001D7                     	ds	10
   453                           
   454                           	psect	cstackBANK0
   455  000060                     __pcstackBANK0:
   456                           	callstack 0
   457  000060                     ??___fltol:
   458  000060                     ?_sprintf:
   459                           	callstack 0
   460  000060                     sprintf@s:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x0
   464  000060                     	ds	2
   465  000062                     sprintf@fmt:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x2
   469  000062                     	ds	2
   470  000064                     ___fltol@sign1:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x4
   474  000064                     	ds	1
   475  000065                     ___fltol@exp1:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x5
   479  000065                     	ds	1
   480  000066                     ?_lroundf:
   481                           	callstack 0
   482  000066                     lroundf@x:
   483                           	callstack 0
   484                           
   485                           ; 4 bytes @ 0x6
   486  000066                     	ds	4
   487  00006A                     compare@lower:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0xA
   491  00006A                     	ds	2
   492  00006C                     compare@value2compare:
   493                           	callstack 0
   494  00006C                     sprintf@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xC
   498  00006C                     	ds	2
   499  00006E                     compare@upper:
   500                           	callstack 0
   501  00006E                     sprintf@f:
   502                           	callstack 0
   503                           
   504                           ; 11 bytes @ 0xE
   505  00006E                     	ds	2
   506  000070                     compare@result:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x10
   510  000070                     	ds	1
   511  000071                     detect_color@m:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x11
   515  000071                     	ds	2
   516  000073                     detect_color@w:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x13
   520  000073                     	ds	2
   521  000075                     ??_detect_color:
   522                           
   523                           ; 1 bytes @ 0x15
   524  000075                     	ds	4
   525  000079                     detect_color@RB:
   526                           	callstack 0
   527  000079                     color_display@buf:
   528                           	callstack 0
   529  000079                     color_predict@buf:
   530                           	callstack 0
   531                           
   532                           ; 100 bytes @ 0x19
   533  000079                     	ds	2
   534  00007B                     detect_color@GB:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x1B
   538  00007B                     	ds	2
   539  00007D                     detect_color@GC:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x1D
   543  00007D                     	ds	2
   544  00007F                     detect_color@RG:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x1F
   548  00007F                     	ds	2
   549  000081                     detect_color@GG:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x21
   553  000081                     	ds	2
   554  000083                     detect_color@RR:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x23
   558  000083                     	ds	2
   559  000085                     detect_color@BB:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x25
   563  000085                     	ds	2
   564  000087                     detect_color@BR:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x27
   568  000087                     	ds	2
   569  000089                     detect_color@GR:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x29
   573  000089                     	ds	2
   574  00008B                     detect_color@BG:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x2B
   578  00008B                     	ds	2
   579  00008D                     detect_color@color:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x2D
   583  00008D                     	ds	1
   584  00008E                     _detect_color$2862:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x2E
   588  00008E                     	ds	4
   589  000092                     verify_color@m:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x32
   593  000092                     	ds	2
   594  000094                     verify_color@w:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x34
   598  000094                     	ds	2
   599  000096                     ??_verify_color:
   600                           
   601                           ; 1 bytes @ 0x36
   602  000096                     	ds	2
   603  000098                     verify_color@color2:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x38
   607  000098                     	ds	2
   608  00009A                     verify_color@color:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x3A
   612  00009A                     	ds	67
   613  0000DD                     color_predict@color:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x7D
   617  0000DD                     	ds	1
   618  0000DE                     color_data_collection@i:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x7E
   622  0000DE                     	ds	2
   623  0000E0                     color_data_collection@j:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x80
   627  0000E0                     	ds	2
   628  0000E2                     color_data_collection@k:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x82
   632  0000E2                     	ds	2
   633  0000E4                     color_data_collection@x:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x84
   637  0000E4                     	ds	2
   638  0000E6                     ??_main:
   639                           
   640                           ; 1 bytes @ 0x86
   641  0000E6                     	ds	2
   642                           
   643                           	psect	cstackCOMRAM
   644  000001                     __pcstackCOMRAM:
   645                           	callstack 0
   646  000001                     ??_LED_R:
   647  000001                     ??_LED_C:
   648  000001                     ??_LED_B:
   649  000001                     ??_LED_G:
   650  000001                     ??_I2C_2_Master_Idle:
   651  000001                     ?_strlen:
   652                           	callstack 0
   653  000001                     ?___wmul:
   654                           	callstack 0
   655  000001                     ?___fladd:
   656                           	callstack 0
   657  000001                     ?___flneg:
   658                           	callstack 0
   659  000001                     ?___xxtofl:
   660                           	callstack 0
   661  000001                     ?___aodiv:
   662                           	callstack 0
   663  000001                     ?___aomod:
   664                           	callstack 0
   665  000001                     sendCharSerial4@charToSend:
   666                           	callstack 0
   667  000001                     initDCmotorsPWM@PWMperiod:
   668                           	callstack 0
   669  000001                     initDCmotors_parameter@motorL:
   670                           	callstack 0
   671  000001                     ___wmul@multiplier:
   672                           	callstack 0
   673  000001                     fputc@c:
   674                           	callstack 0
   675  000001                     strlen@s:
   676                           	callstack 0
   677  000001                     ___flge@ff1:
   678                           	callstack 0
   679  000001                     ___flneg@f1:
   680                           	callstack 0
   681  000001                     ___fladd@b:
   682                           	callstack 0
   683  000001                     ___xxtofl@val:
   684                           	callstack 0
   685  000001                     ___aodiv@dividend:
   686                           	callstack 0
   687  000001                     ___aomod@dividend:
   688                           	callstack 0
   689                           
   690                           ; 8 bytes @ 0x0
   691  000001                     	ds	1
   692  000002                     ??_I2C_2_Master_Read:
   693  000002                     I2C_2_Master_Write@data_byte:
   694                           	callstack 0
   695  000002                     sendStringSerial4@string:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x1
   699  000002                     	ds	1
   700  000003                     color_writetoaddr@value:
   701                           	callstack 0
   702  000003                     I2C_2_Master_Read@ack:
   703                           	callstack 0
   704  000003                     initDCmotors_parameter@motorR:
   705                           	callstack 0
   706  000003                     ___wmul@multiplicand:
   707                           	callstack 0
   708  000003                     fputc@fp:
   709                           	callstack 0
   710  000003                     strlen@a:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x2
   714  000003                     	ds	1
   715  000004                     color_writetoaddr@address:
   716                           	callstack 0
   717  000004                     I2C_2_Master_Read@tmp:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x3
   721  000004                     	ds	1
   722  000005                     ??_fputc:
   723  000005                     ??_color_click_init:
   724  000005                     ??___xxtofl:
   725  000005                     ?_color_read_Red:
   726                           	callstack 0
   727  000005                     ?_color_read_Blue:
   728                           	callstack 0
   729  000005                     ?_color_read_Green:
   730                           	callstack 0
   731  000005                     ?_color_read_Clear:
   732                           	callstack 0
   733  000005                     ___wmul@product:
   734                           	callstack 0
   735  000005                     ___flge@ff2:
   736                           	callstack 0
   737  000005                     ___fladd@a:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x4
   741  000005                     	ds	2
   742  000007                     ??_color_read_Red:
   743  000007                     ??_color_read_Blue:
   744  000007                     ??_color_read_Green:
   745  000007                     ??_color_read_Clear:
   746  000007                     ?___awdiv:
   747                           	callstack 0
   748  000007                     ___awdiv@dividend:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x6
   752  000007                     	ds	2
   753  000009                     ??___fladd:
   754  000009                     ??___flge:
   755  000009                     ___xxtofl@sign:
   756                           	callstack 0
   757  000009                     ___awdiv@divisor:
   758                           	callstack 0
   759  000009                     ___aodiv@divisor:
   760                           	callstack 0
   761  000009                     ___aomod@divisor:
   762                           	callstack 0
   763                           
   764                           ; 8 bytes @ 0x8
   765  000009                     	ds	1
   766  00000A                     ___xxtofl@exp:
   767                           	callstack 0
   768  00000A                     color_read_Red@tmp:
   769                           	callstack 0
   770  00000A                     color_read_Blue@tmp:
   771                           	callstack 0
   772  00000A                     color_read_Green@tmp:
   773                           	callstack 0
   774  00000A                     color_read_Clear@tmp:
   775                           	callstack 0
   776  00000A                     fputs@s:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x9
   780  00000A                     	ds	1
   781  00000B                     ___awdiv@counter:
   782                           	callstack 0
   783  00000B                     ___xxtofl@arg:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0xA
   787  00000B                     	ds	1
   788  00000C                     ___awdiv@sign:
   789                           	callstack 0
   790  00000C                     read_color@m:
   791                           	callstack 0
   792  00000C                     calibrate_white@w:
   793                           	callstack 0
   794  00000C                     distance_measure@mL:
   795                           	callstack 0
   796  00000C                     fputs@fp:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0xB
   800  00000C                     	ds	1
   801  00000D                     ___fladd@signs:
   802                           	callstack 0
   803  00000D                     ___awdiv@quotient:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0xC
   807  00000D                     	ds	1
   808  00000E                     ??_calibrate_white:
   809  00000E                     ___fladd@aexp:
   810                           	callstack 0
   811  00000E                     fputs@c:
   812                           	callstack 0
   813  00000E                     distance_measure@mR:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0xD
   817  00000E                     	ds	1
   818  00000F                     ?___fldiv:
   819                           	callstack 0
   820  00000F                     ___fladd@bexp:
   821                           	callstack 0
   822  00000F                     setMotorPWM@m:
   823                           	callstack 0
   824  00000F                     fputs@i:
   825                           	callstack 0
   826  00000F                     ___fldiv@b:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0xE
   830  00000F                     	ds	1
   831  000010                     ___fladd@grs:
   832                           	callstack 0
   833  000010                     distance_measure@CR:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0xF
   837  000010                     	ds	1
   838  000011                     ??_setMotorPWM:
   839  000011                     ?_pad:
   840                           	callstack 0
   841  000011                     ?___flsub:
   842                           	callstack 0
   843  000011                     ___aodiv@counter:
   844                           	callstack 0
   845  000011                     ___aomod@counter:
   846                           	callstack 0
   847  000011                     pad@fp:
   848                           	callstack 0
   849  000011                     ___flsub@b:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x10
   853  000011                     	ds	1
   854  000012                     ___aodiv@sign:
   855                           	callstack 0
   856  000012                     ___aomod@sign:
   857                           	callstack 0
   858  000012                     distance_measure@CG:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x11
   862  000012                     	ds	1
   863  000013                     ?_abs:
   864                           	callstack 0
   865  000013                     pad@buf:
   866                           	callstack 0
   867  000013                     abs@a:
   868                           	callstack 0
   869  000013                     ___fldiv@a:
   870                           	callstack 0
   871  000013                     ___aodiv@quotient:
   872                           	callstack 0
   873                           
   874                           ; 8 bytes @ 0x12
   875  000013                     	ds	1
   876  000014                     distance_measure@CB:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x13
   880  000014                     	ds	1
   881  000015                     ??_abs:
   882  000015                     pad@p:
   883                           	callstack 0
   884  000015                     ___flsub@a:
   885                           	callstack 0
   886                           
   887                           ; 4 bytes @ 0x14
   888  000015                     	ds	1
   889  000016                     distance_measure@CC:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x15
   893  000016                     	ds	1
   894  000017                     ??___fldiv:
   895  000017                     ??_pad:
   896                           
   897                           ; 1 bytes @ 0x16
   898  000017                     	ds	1
   899  000018                     distance_measure@stop:
   900                           	callstack 0
   901  000018                     setMotorPWM@PWMduty:
   902                           	callstack 0
   903  000018                     pad@i:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x17
   907  000018                     	ds	1
   908  000019                     
   909                           ; 1 bytes @ 0x18
   910  000019                     	ds	1
   911  00001A                     stop@mL:
   912                           	callstack 0
   913  00001A                     fullSpeedAhead@mL:
   914                           	callstack 0
   915  00001A                     pad@w:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0x19
   919  00001A                     	ds	1
   920  00001B                     ___fldiv@rem:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x1A
   924  00001B                     	ds	1
   925  00001C                     ?_dtoa:
   926                           	callstack 0
   927  00001C                     stop@mR:
   928                           	callstack 0
   929  00001C                     fullSpeedAhead@mR:
   930                           	callstack 0
   931  00001C                     dtoa@fp:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x1B
   935  00001C                     	ds	2
   936  00001E                     ??_stop:
   937  00001E                     ??_fullSpeedAhead:
   938  00001E                     dtoa@d:
   939                           	callstack 0
   940                           
   941                           ; 8 bytes @ 0x1D
   942  00001E                     	ds	1
   943  00001F                     ___fldiv@sign:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1E
   947  00001F                     	ds	1
   948  000020                     turnLeft@mL:
   949                           	callstack 0
   950  000020                     turnRight@mL:
   951                           	callstack 0
   952  000020                     fullSpeedBack@mL:
   953                           	callstack 0
   954  000020                     short_burst@mL:
   955                           	callstack 0
   956  000020                     ___fldiv@new_exp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x1F
   960  000020                     	ds	2
   961  000022                     turnLeft@mR:
   962                           	callstack 0
   963  000022                     turnRight@mR:
   964                           	callstack 0
   965  000022                     fullSpeedBack@mR:
   966                           	callstack 0
   967  000022                     short_burst@mR:
   968                           	callstack 0
   969  000022                     ___fldiv@grs:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x21
   973  000022                     	ds	2
   974  000024                     ??_short_burst:
   975  000024                     ??_fullSpeedBack:
   976  000024                     turnLeft@angle_left:
   977                           	callstack 0
   978  000024                     turnRight@angle_right:
   979                           	callstack 0
   980                           
   981                           ; 1 bytes @ 0x23
   982  000024                     	ds	1
   983  000025                     ??_turnRight:
   984  000025                     ??_turnLeft:
   985                           
   986                           ; 1 bytes @ 0x24
   987  000025                     	ds	1
   988  000026                     ??_dtoa:
   989  000026                     ___fldiv@bexp:
   990                           	callstack 0
   991  000026                     turnLeft@delay_180:
   992                           	callstack 0
   993  000026                     turnRight@delay_180:
   994                           	callstack 0
   995  000026                     short_reverse@mL:
   996                           	callstack 0
   997  000026                     reverse_square@mL:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x25
  1001  000026                     	ds	1
  1002  000027                     ___fldiv@aexp:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x26
  1006  000027                     	ds	1
  1007  000028                     ?___flmul:
  1008                           	callstack 0
  1009  000028                     turnLeft@i:
  1010                           	callstack 0
  1011  000028                     turnRight@i:
  1012                           	callstack 0
  1013  000028                     short_reverse@mR:
  1014                           	callstack 0
  1015  000028                     reverse_square@mR:
  1016                           	callstack 0
  1017  000028                     ___flmul@b:
  1018                           	callstack 0
  1019                           
  1020                           ; 4 bytes @ 0x27
  1021  000028                     	ds	2
  1022  00002A                     ??_short_reverse:
  1023  00002A                     ??_reverse_square:
  1024  00002A                     turnLeft@i_1191:
  1025                           	callstack 0
  1026  00002A                     turnRight@i_1214:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x29
  1030  00002A                     	ds	2
  1031  00002C                     turnLeft@delay:
  1032                           	callstack 0
  1033  00002C                     turnRight@delay:
  1034                           	callstack 0
  1035  00002C                     ___flmul@a:
  1036                           	callstack 0
  1037                           
  1038                           ; 4 bytes @ 0x2B
  1039  00002C                     	ds	2
  1040  00002E                     goback@mL:
  1041                           	callstack 0
  1042  00002E                     _dtoa$2509:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x2D
  1046  00002E                     	ds	2
  1047  000030                     ??___flmul:
  1048  000030                     goback@mR:
  1049                           	callstack 0
  1050  000030                     dtoa@p:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x2F
  1054  000030                     	ds	2
  1055  000032                     ??_goback:
  1056  000032                     dtoa@w:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x31
  1060  000032                     	ds	2
  1061  000034                     ___flmul@sign:
  1062                           	callstack 0
  1063  000034                     goback@i:
  1064                           	callstack 0
  1065  000034                     dtoa@s:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x33
  1069  000034                     	ds	1
  1070  000035                     ___flmul@grs:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x34
  1074  000035                     	ds	1
  1075  000036                     action@mL:
  1076                           	callstack 0
  1077  000036                     dtoa@n:
  1078                           	callstack 0
  1079                           
  1080                           ; 8 bytes @ 0x35
  1081  000036                     	ds	2
  1082  000038                     action@mR:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x37
  1086  000038                     	ds	1
  1087  000039                     ___flmul@aexp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x38
  1091  000039                     	ds	1
  1092  00003A                     ??_action:
  1093  00003A                     ___flmul@bexp:
  1094                           	callstack 0
  1095                           
  1096                           ; 1 bytes @ 0x39
  1097  00003A                     	ds	1
  1098  00003B                     ___flmul@prod:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x3A
  1102  00003B                     	ds	1
  1103  00003C                     action@color:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x3B
  1107  00003C                     	ds	2
  1108  00003E                     dtoa@i:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0x3D
  1112  00003E                     	ds	1
  1113  00003F                     ___flmul@temp:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x3E
  1117  00003F                     	ds	1
  1118  000040                     ?_vfpfcnvrt:
  1119                           	callstack 0
  1120  000040                     vfpfcnvrt@fp:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x3F
  1124  000040                     	ds	1
  1125  000041                     ?_roundf:
  1126                           	callstack 0
  1127  000041                     roundf@x:
  1128                           	callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x40
  1131  000041                     	ds	1
  1132  000042                     vfpfcnvrt@fmt:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x41
  1136  000042                     	ds	2
  1137  000044                     vfpfcnvrt@ap:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x43
  1141  000044                     	ds	1
  1142  000045                     ??_roundf:
  1143                           
  1144                           ; 1 bytes @ 0x44
  1145  000045                     	ds	1
  1146  000046                     ??_vfpfcnvrt:
  1147                           
  1148                           ; 1 bytes @ 0x45
  1149  000046                     	ds	2
  1150  000048                     vfpfcnvrt@ll:
  1151                           	callstack 0
  1152                           
  1153                           ; 8 bytes @ 0x47
  1154  000048                     	ds	1
  1155  000049                     _roundf$2864:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x48
  1159  000049                     	ds	4
  1160  00004D                     roundf@e:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x4C
  1164  00004D                     	ds	2
  1165  00004F                     _roundf$2863:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x4E
  1169  00004F                     	ds	1
  1170  000050                     ?_vfprintf:
  1171                           	callstack 0
  1172  000050                     vfprintf@fp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x4F
  1176  000050                     	ds	2
  1177  000052                     vfprintf@fmt:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x51
  1181  000052                     	ds	1
  1182  000053                     roundf@u:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x52
  1186  000053                     	ds	1
  1187  000054                     vfprintf@ap:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x53
  1191  000054                     	ds	2
  1192  000056                     vfprintf@cfmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x55
  1196  000056                     	ds	1
  1197  000057                     roundf@y:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x56
  1201  000057                     	ds	1
  1202  000058                     color_display@m:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x57
  1206  000058                     	ds	2
  1207  00005A                     color_data_collection@m:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x59
  1211  00005A                     	ds	1
  1212  00005B                     ?___fltol:
  1213                           	callstack 0
  1214  00005B                     ___fltol@f1:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x5A
  1218  00005B                     	ds	1
  1219  00005C                     ??_color_data_collection:
  1220                           
  1221                           ; 1 bytes @ 0x5B
  1222  00005C                     	ds	3
  1223  00005F                     
  1224                           ; 1 bytes @ 0x5E
  1225 ;;
  1226 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1227 ;;
  1228 ;; *************** function _main *****************
  1229 ;; Defined at:
  1230 ;;		line 26 in file "main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  white          20    0[BANK1 ] struct white_card
  1235 ;;  motorR         10   38[BANK1 ] struct DC_motor
  1236 ;;  motorL         10   28[BANK1 ] struct DC_motor
  1237 ;;  rgb             8   20[BANK1 ] struct color_rgb
  1238 ;;  stop_signal     1    0        unsigned char 
  1239 ;;  complete        1    0        unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Locals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Totals:         0       2      48       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;Total ram usage:       50 bytes
  1254 ;; Hardware stack levels required when called: 11
  1255 ;; This function calls:
  1256 ;;		_I2C_2_Master_Init
  1257 ;;		_Interrupts_init
  1258 ;;		_LED_C
  1259 ;;		_Timer0_init
  1260 ;;		_action
  1261 ;;		_calibrate_white
  1262 ;;		_color_click_init
  1263 ;;		_color_data_collection
  1264 ;;		_color_display
  1265 ;;		_detect_color
  1266 ;;		_distance_measure
  1267 ;;		_fullSpeedAhead
  1268 ;;		_initDCmotorsPWM
  1269 ;;		_initDCmotors_parameter
  1270 ;;		_initUSART4
  1271 ;;		_pin_init
  1272 ;;		_read_color
  1273 ;;		_short_burst
  1274 ;;		_stop
  1275 ;;		_verify_color
  1276 ;; This function is called by:
  1277 ;;		Startup code after reset
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text0
  1282  004382                     __ptext0:
  1283                           	callstack 0
  1284  004382                     _main:
  1285                           	callstack 20
  1286  004382                     
  1287                           ;main.c: 27:     Interrupts_init();
  1288  004382  EC9F  F029         	call	_Interrupts_init	;wreg free
  1289  004386                     
  1290                           ;main.c: 28:     Timer0_init();
  1291  004386  EC70  F029         	call	_Timer0_init	;wreg free
  1292  00438A                     
  1293                           ;main.c: 30:     I2C_2_Master_Init();
  1294  00438A  ECD5  F028         	call	_I2C_2_Master_Init	;wreg free
  1295  00438E                     
  1296                           ;main.c: 31:     color_click_init();
  1297  00438E  ECA3  F028         	call	_color_click_init	;wreg free
  1298  004392                     
  1299                           ;main.c: 32:     initDCmotorsPWM(199);
  1300  004392  0E00               	movlw	0
  1301  004394  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1302  004396  0EC7               	movlw	199
  1303  004398  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1304  00439A  EC8E  F027         	call	_initDCmotorsPWM	;wreg free
  1305  00439E                     
  1306                           ;main.c: 34:     initUSART4();
  1307  00439E  EC61  F029         	call	_initUSART4	;wreg free
  1308  0043A2                     
  1309                           ;main.c: 36:     struct color_rgb rgb;;main.c: 37:     struct white_card white;;main.c: 
      +                          41:     struct DC_motor motorL, motorR;;main.c: 43:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1310  0043A2  0ECD               	movlw	low main@motorL
  1311  0043A4  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1312  0043A6  0E01               	movlw	high main@motorL
  1313  0043A8  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1314  0043AA  0ED7               	movlw	low main@motorR
  1315  0043AC  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1316  0043AE  0E01               	movlw	high main@motorR
  1317  0043B0  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1318  0043B2  ECAC  F022         	call	_initDCmotors_parameter	;wreg free
  1319  0043B6                     
  1320                           ;main.c: 46:     if (3 == 1 || 3 == 3){
  1321  0043B6  EC7F  F029         	call	_pin_init	;wreg free
  1322  0043BA                     
  1323                           ;main.c: 47:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1324  0043BA  0EF4               	movlw	244
  1325  0043BC  0100               	movlb	0	; () banked
  1326  0043BE  6FE7               	movwf	(??_main+1)& (0+255),b
  1327  0043C0  0E82               	movlw	130
  1328  0043C2  6FE6               	movwf	??_main& (0+255),b
  1329  0043C4  0E05               	movlw	5
  1330  0043C6                     u5327:
  1331  0043C6  2EE8               	decfsz	wreg,f,c
  1332  0043C8  D7FE               	bra	u5327
  1333  0043CA  2FE6               	decfsz	??_main& (0+255),f,b
  1334  0043CC  D7FC               	bra	u5327
  1335  0043CE  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1336  0043D0  D7FA               	bra	u5327
  1337  0043D2                     
  1338                           ;main.c: 48:         calibrate_white(&white);
  1339  0043D2  0EB1               	movlw	low main@white
  1340  0043D4  6E0C               	movwf	calibrate_white@w^0,c
  1341  0043D6  0E01               	movlw	high main@white
  1342  0043D8  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1343  0043DA  ECEE  F01E         	call	_calibrate_white	;wreg free
  1344  0043DE                     
  1345                           ;main.c: 49:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  1346  0043DE  0EF4               	movlw	244
  1347  0043E0  0100               	movlb	0	; () banked
  1348  0043E2  6FE7               	movwf	(??_main+1)& (0+255),b
  1349  0043E4  0E82               	movlw	130
  1350  0043E6  6FE6               	movwf	??_main& (0+255),b
  1351  0043E8  0E05               	movlw	5
  1352  0043EA                     u5337:
  1353  0043EA  2EE8               	decfsz	wreg,f,c
  1354  0043EC  D7FE               	bra	u5337
  1355  0043EE  2FE6               	decfsz	??_main& (0+255),f,b
  1356  0043F0  D7FC               	bra	u5337
  1357  0043F2  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1358  0043F4  D7FA               	bra	u5337
  1359  0043F6  EF14  F022         	goto	l5252
  1360  0043FA                     l5248:
  1361                           
  1362                           ; BSR set to: 1
  1363                           ;main.c: 79:                 short_burst(&motorL, &motorR);
  1364  0043FA  0ECD               	movlw	low main@motorL
  1365  0043FC  6E20               	movwf	short_burst@mL^0,c
  1366  0043FE  0E01               	movlw	high main@motorL
  1367  004400  6E21               	movwf	(short_burst@mL+1)^0,c
  1368  004402  0ED7               	movlw	low main@motorR
  1369  004404  6E22               	movwf	short_burst@mR^0,c
  1370  004406  0E01               	movlw	high main@motorR
  1371  004408  6E23               	movwf	(short_burst@mR+1)^0,c
  1372  00440A  EC0E  F026         	call	_short_burst	;wreg free
  1373  00440E                     
  1374                           ;main.c: 80:                 color = detect_color(&rgb, &white);
  1375  00440E  0EC5               	movlw	low main@rgb
  1376  004410  0100               	movlb	0	; () banked
  1377  004412  6F71               	movwf	detect_color@m& (0+255),b
  1378  004414  0E01               	movlw	high main@rgb
  1379  004416  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1380  004418  0EB1               	movlw	low main@white
  1381  00441A  6F73               	movwf	detect_color@w& (0+255),b
  1382  00441C  0E01               	movlw	high main@white
  1383  00441E  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1384  004420  EC2A  F007         	call	_detect_color	;wreg free
  1385  004424  0101               	movlb	1	; () banked
  1386  004426  6F90               	movwf	_color& (0+255),b
  1387  004428                     l5252:
  1388                           
  1389                           ;main.c: 78:             while (color == 0){
  1390  004428  0101               	movlb	1	; () banked
  1391  00442A  5190               	movf	_color& (0+255),w,b
  1392  00442C  B4D8               	btfsc	status,2,c
  1393  00442E  EF1B  F022         	goto	u5301
  1394  004432  EF1D  F022         	goto	u5300
  1395  004436                     u5301:
  1396  004436  EFFD  F021         	goto	l5248
  1397  00443A                     u5300:
  1398  00443A                     
  1399                           ; BSR set to: 1
  1400                           ;main.c: 82:             verify_color(color, &rgb, &white);
  1401  00443A  0EC5               	movlw	low main@rgb
  1402  00443C  0100               	movlb	0	; () banked
  1403  00443E  6F92               	movwf	verify_color@m& (0+255),b
  1404  004440  0E01               	movlw	high main@rgb
  1405  004442  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1406  004444  0EB1               	movlw	low main@white
  1407  004446  6F94               	movwf	verify_color@w& (0+255),b
  1408  004448  0E01               	movlw	high main@white
  1409  00444A  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1410  00444C  0101               	movlb	1	; () banked
  1411  00444E  5190               	movf	_color& (0+255),w,b
  1412  004450  ECB0  F025         	call	_verify_color
  1413  004454                     
  1414                           ;main.c: 83:             action(color, &motorL, &motorR);
  1415  004454  0ECD               	movlw	low main@motorL
  1416  004456  6E36               	movwf	action@mL^0,c
  1417  004458  0E01               	movlw	high main@motorL
  1418  00445A  6E37               	movwf	(action@mL+1)^0,c
  1419  00445C  0ED7               	movlw	low main@motorR
  1420  00445E  6E38               	movwf	action@mR^0,c
  1421  004460  0E01               	movlw	high main@motorR
  1422  004462  6E39               	movwf	(action@mR+1)^0,c
  1423  004464  0101               	movlb	1	; () banked
  1424  004466  5190               	movf	_color& (0+255),w,b
  1425  004468  ECA7  F015         	call	_action
  1426  00446C                     
  1427                           ;main.c: 84:             color = 0;
  1428  00446C  0E00               	movlw	0
  1429  00446E  0101               	movlb	1	; () banked
  1430  004470  6F90               	movwf	_color& (0+255),b
  1431  004472  EF14  F022         	goto	l5252
  1432  004476  EF14  F000         	goto	start
  1433  00447A                     __end_of_main:
  1434                           	callstack 0
  1435                           
  1436 ;; *************** function _verify_color *****************
  1437 ;; Defined at:
  1438 ;;		line 312 in file "color.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;  color           1    wreg     unsigned char 
  1441 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1442 ;;		 -> main@rgb(8), 
  1443 ;;  w               2   52[BANK0 ] PTR struct white_card
  1444 ;;		 -> main@white(20), 
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;  color           1   58[BANK0 ] unsigned char 
  1447 ;;  color2          2   56[BANK0 ] unsigned int 
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      unsigned char 
  1450 ;; Registers used:
  1451 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1460 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1461 ;;Total ram usage:        9 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 6
  1464 ;; This function calls:
  1465 ;;		_detect_color
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text1
  1472  004B60                     __ptext1:
  1473                           	callstack 0
  1474  004B60                     _verify_color:
  1475                           	callstack 24
  1476                           
  1477                           ; BSR set to: 1
  1478                           ;incstack = 0
  1479                           ;verify_color@color stored from wreg
  1480  004B60  0100               	movlb	0	; () banked
  1481  004B62  6F9A               	movwf	verify_color@color& (0+255),b
  1482  004B64                     
  1483                           ;color.c: 312: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 313: {;color.c: 314:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1484  004B64  0E05               	movlw	5
  1485  004B66  0100               	movlb	0	; () banked
  1486  004B68  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1487  004B6A  0E0F               	movlw	15
  1488  004B6C  6F96               	movwf	??_verify_color& (0+255),b
  1489  004B6E  0EF1               	movlw	241
  1490  004B70                     u5347:
  1491  004B70  2EE8               	decfsz	wreg,f,c
  1492  004B72  D7FE               	bra	u5347
  1493  004B74  2F96               	decfsz	??_verify_color& (0+255),f,b
  1494  004B76  D7FC               	bra	u5347
  1495  004B78  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1496  004B7A  D7FA               	bra	u5347
  1497  004B7C                     
  1498                           ;color.c: 315:     unsigned int color2;;color.c: 316:     color2 = detect_color(m,w);
  1499  004B7C  C092  F071         	movff	verify_color@m,detect_color@m
  1500  004B80  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1501  004B84  C094  F073         	movff	verify_color@w,detect_color@w
  1502  004B88  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1503  004B8C  EC2A  F007         	call	_detect_color	;wreg free
  1504  004B90  0100               	movlb	0	; () banked
  1505  004B92  6F96               	movwf	??_verify_color& (0+255),b
  1506  004B94  5196               	movf	??_verify_color& (0+255),w,b
  1507  004B96  6F98               	movwf	verify_color@color2& (0+255),b
  1508  004B98  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1509  004B9A                     
  1510                           ; BSR set to: 0
  1511                           ;color.c: 317:     if (color == color2){return color;}
  1512  004B9A  519A               	movf	verify_color@color& (0+255),w,b
  1513  004B9C  6F96               	movwf	??_verify_color& (0+255),b
  1514  004B9E  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1515  004BA0  5198               	movf	verify_color@color2& (0+255),w,b
  1516  004BA2  1996               	xorwf	??_verify_color& (0+255),w,b
  1517  004BA4  E107               	bnz	u5071
  1518  004BA6  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1519  004BA8  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1520  004BAA  A4D8               	btfss	status,2,c
  1521  004BAC  EFDA  F025         	goto	u5071
  1522  004BB0  EFDC  F025         	goto	u5070
  1523  004BB4                     u5071:
  1524  004BB4  EFDE  F025         	goto	l4980
  1525  004BB8                     u5070:
  1526  004BB8  EFDE  F025         	goto	l161
  1527  004BBC                     l4980:
  1528  004BBC                     l161:
  1529                           
  1530                           ; BSR set to: 0
  1531  004BBC  0012               	return		;funcret
  1532  004BBE                     __end_of_verify_color:
  1533                           	callstack 0
  1534                           
  1535 ;; *************** function _detect_color *****************
  1536 ;; Defined at:
  1537 ;;		line 226 in file "color.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  1540 ;;		 -> main@rgb(8), 
  1541 ;;  w               2   19[BANK0 ] PTR struct white_card
  1542 ;;		 -> main@white(20), 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  BG              2   43[BANK0 ] unsigned int 
  1545 ;;  GR              2   41[BANK0 ] unsigned int 
  1546 ;;  BR              2   39[BANK0 ] unsigned int 
  1547 ;;  BB              2   37[BANK0 ] unsigned int 
  1548 ;;  RR              2   35[BANK0 ] unsigned int 
  1549 ;;  GG              2   33[BANK0 ] unsigned int 
  1550 ;;  RG              2   31[BANK0 ] unsigned int 
  1551 ;;  GC              2   29[BANK0 ] unsigned int 
  1552 ;;  GB              2   27[BANK0 ] unsigned int 
  1553 ;;  RB              2   25[BANK0 ] unsigned int 
  1554 ;;  color           1   45[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      unsigned char 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1564 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;Total ram usage:       33 bytes
  1569 ;; Hardware stack levels used: 1
  1570 ;; Hardware stack levels required when called: 5
  1571 ;; This function calls:
  1572 ;;		_LED_B
  1573 ;;		_LED_G
  1574 ;;		_LED_R
  1575 ;;		___fldiv
  1576 ;;		___flmul
  1577 ;;		___xxtofl
  1578 ;;		_compare
  1579 ;;		_lroundf
  1580 ;;		_read_color
  1581 ;; This function is called by:
  1582 ;;		_verify_color
  1583 ;;		_main
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text2
  1588  000E54                     __ptext2:
  1589                           	callstack 0
  1590  000E54                     _detect_color:
  1591                           	callstack 24
  1592  000E54  0E00               	movlw	0
  1593  000E56  0100               	movlb	0	; () banked
  1594  000E58  6F80               	movwf	(detect_color@RG+1)& (0+255),b
  1595  000E5A  0E00               	movlw	0
  1596  000E5C  6F7F               	movwf	detect_color@RG& (0+255),b
  1597  000E5E  0E00               	movlw	0
  1598  000E60  6F7A               	movwf	(detect_color@RB+1)& (0+255),b
  1599  000E62  0E00               	movlw	0
  1600  000E64  6F79               	movwf	detect_color@RB& (0+255),b
  1601  000E66  0E00               	movlw	0
  1602  000E68  6F8A               	movwf	(detect_color@GR+1)& (0+255),b
  1603  000E6A  0E00               	movlw	0
  1604  000E6C  6F89               	movwf	detect_color@GR& (0+255),b
  1605  000E6E  0E00               	movlw	0
  1606  000E70  6F82               	movwf	(detect_color@GG+1)& (0+255),b
  1607  000E72  0E00               	movlw	0
  1608  000E74  6F81               	movwf	detect_color@GG& (0+255),b
  1609  000E76  0E00               	movlw	0
  1610  000E78  6F7C               	movwf	(detect_color@GB+1)& (0+255),b
  1611  000E7A  0E00               	movlw	0
  1612  000E7C  6F7B               	movwf	detect_color@GB& (0+255),b
  1613  000E7E  0E00               	movlw	0
  1614  000E80  6F88               	movwf	(detect_color@BR+1)& (0+255),b
  1615  000E82  0E00               	movlw	0
  1616  000E84  6F87               	movwf	detect_color@BR& (0+255),b
  1617  000E86  0E00               	movlw	0
  1618  000E88  6F8C               	movwf	(detect_color@BG+1)& (0+255),b
  1619  000E8A  0E00               	movlw	0
  1620  000E8C  6F8B               	movwf	detect_color@BG& (0+255),b
  1621  000E8E  0E00               	movlw	0
  1622  000E90  6F86               	movwf	(detect_color@BB+1)& (0+255),b
  1623  000E92  0E00               	movlw	0
  1624  000E94  6F85               	movwf	detect_color@BB& (0+255),b
  1625                           
  1626                           ;color.c: 231:     unsigned int GC = 0;
  1627  000E96  0E00               	movlw	0
  1628  000E98  6F7E               	movwf	(detect_color@GC+1)& (0+255),b
  1629  000E9A  0E00               	movlw	0
  1630  000E9C  6F7D               	movwf	detect_color@GC& (0+255),b
  1631                           
  1632                           ;color.c: 232:     unsigned char color = 0;
  1633  000E9E  0E00               	movlw	0
  1634  000EA0  6F8D               	movwf	detect_color@color& (0+255),b
  1635  000EA2                     
  1636                           ; BSR set to: 0
  1637                           ;color.c: 234:     LED_R();
  1638  000EA2  EC31  F029         	call	_LED_R	;wreg free
  1639  000EA6                     
  1640                           ;color.c: 235:     read_color(m);
  1641  000EA6  C071  F00C         	movff	detect_color@m,read_color@m
  1642  000EAA  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  1643  000EAE  ECDF  F025         	call	_read_color	;wreg free
  1644  000EB2                     
  1645                           ;color.c: 237:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1646  000EB2  C073  FFD9         	movff	detect_color@w,fsr2l
  1647  000EB6  C074  FFDA         	movff	detect_color@w+1,fsr2h
  1648  000EBA  CFDE F075          	movff	postinc2,??_detect_color
  1649  000EBE  CFDD F076          	movff	postdec2,??_detect_color+1
  1650  000EC2  C075  F001         	movff	??_detect_color,___xxtofl@val
  1651  000EC6  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1652  000ECA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1653  000ECC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1654  000ECE  0E00               	movlw	0
  1655  000ED0  ECC4  F01B         	call	___xxtofl
  1656  000ED4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1657  000ED8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1658  000EDC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1659  000EE0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1660  000EE4  C071  FFD9         	movff	detect_color@m,fsr2l
  1661  000EE8  C072  FFDA         	movff	detect_color@m+1,fsr2h
  1662  000EEC  CFDE F077          	movff	postinc2,??_detect_color+2
  1663  000EF0  CFDD F078          	movff	postdec2,??_detect_color+3
  1664  000EF4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  1665  000EF8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1666  000EFC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1667  000EFE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1668  000F00  0E00               	movlw	0
  1669  000F02  ECC4  F01B         	call	___xxtofl
  1670  000F06  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1671  000F0A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1672  000F0E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1673  000F12  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1674  000F16  ECDA  F013         	call	___fldiv	;wreg free
  1675  000F1A  C00F  F028         	movff	?___fldiv,___flmul@b
  1676  000F1E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1677  000F22  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1678  000F26  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1679  000F2A  0E00               	movlw	0
  1680  000F2C  6E2C               	movwf	___flmul@a^0,c
  1681  000F2E  0E00               	movlw	0
  1682  000F30  6E2D               	movwf	(___flmul@a+1)^0,c
  1683  000F32  0EC8               	movlw	200
  1684  000F34  6E2E               	movwf	(___flmul@a+2)^0,c
  1685  000F36  0E42               	movlw	66
  1686  000F38  6E2F               	movwf	(___flmul@a+3)^0,c
  1687  000F3A  ECEE  F00F         	call	___flmul	;wreg free
  1688  000F3E  C028  F08E         	movff	?___flmul,_detect_color$2862
  1689  000F42  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  1690  000F46  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  1691  000F4A  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  1692  000F4E                     
  1693                           ;color.c: 237:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1694  000F4E  C08E  F066         	movff	_detect_color$2862,lroundf@x
  1695  000F52  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  1696  000F56  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  1697  000F5A  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  1698  000F5E  EC32  F028         	call	_lroundf	;wreg free
  1699  000F62  C066  F083         	movff	?_lroundf,detect_color@RR
  1700  000F66  C067  F084         	movff	?_lroundf+1,detect_color@RR+1
  1701  000F6A  0100               	movlb	0	; () banked
  1702  000F6C  EE20 F002          	lfsr	2,2
  1703  000F70  5173               	movf	detect_color@w& (0+255),w,b
  1704  000F72  26D9               	addwf	fsr2l,f,c
  1705  000F74  5174               	movf	(detect_color@w+1)& (0+255),w,b
  1706  000F76  22DA               	addwfc	fsr2h,f,c
  1707  000F78  CFDE F075          	movff	postinc2,??_detect_color
  1708  000F7C  CFDD F076          	movff	postdec2,??_detect_color+1
  1709  000F80  C075  F001         	movff	??_detect_color,___xxtofl@val
  1710  000F84  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1711  000F88  6A03               	clrf	(___xxtofl@val+2)^0,c
  1712  000F8A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1713  000F8C  0E00               	movlw	0
  1714  000F8E  ECC4  F01B         	call	___xxtofl
  1715  000F92  C001  F013         	movff	?___xxtofl,___fldiv@a
  1716  000F96  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1717  000F9A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1718  000F9E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1719  000FA2  0100               	movlb	0	; () banked
  1720  000FA4  EE20 F002          	lfsr	2,2
  1721  000FA8  5171               	movf	detect_color@m& (0+255),w,b
  1722  000FAA  26D9               	addwf	fsr2l,f,c
  1723  000FAC  5172               	movf	(detect_color@m+1)& (0+255),w,b
  1724  000FAE  22DA               	addwfc	fsr2h,f,c
  1725  000FB0  CFDE F077          	movff	postinc2,??_detect_color+2
  1726  000FB4  CFDD F078          	movff	postdec2,??_detect_color+3
  1727  000FB8  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  1728  000FBC  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1729  000FC0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1730  000FC2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1731  000FC4  0E00               	movlw	0
  1732  000FC6  ECC4  F01B         	call	___xxtofl
  1733  000FCA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1734  000FCE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1735  000FD2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1736  000FD6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1737  000FDA  ECDA  F013         	call	___fldiv	;wreg free
  1738  000FDE  C00F  F028         	movff	?___fldiv,___flmul@b
  1739  000FE2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1740  000FE6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1741  000FEA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1742  000FEE  0E00               	movlw	0
  1743  000FF0  6E2C               	movwf	___flmul@a^0,c
  1744  000FF2  0E00               	movlw	0
  1745  000FF4  6E2D               	movwf	(___flmul@a+1)^0,c
  1746  000FF6  0EC8               	movlw	200
  1747  000FF8  6E2E               	movwf	(___flmul@a+2)^0,c
  1748  000FFA  0E42               	movlw	66
  1749  000FFC  6E2F               	movwf	(___flmul@a+3)^0,c
  1750  000FFE  ECEE  F00F         	call	___flmul	;wreg free
  1751  001002  C028  F08E         	movff	?___flmul,_detect_color$2862
  1752  001006  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  1753  00100A  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  1754  00100E  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  1755  001012  C08E  F066         	movff	_detect_color$2862,lroundf@x
  1756  001016  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  1757  00101A  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  1758  00101E  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  1759  001022  EC32  F028         	call	_lroundf	;wreg free
  1760  001026  C066  F07F         	movff	?_lroundf,detect_color@RG
  1761  00102A  C067  F080         	movff	?_lroundf+1,detect_color@RG+1
  1762  00102E  0100               	movlb	0	; () banked
  1763  001030  EE20 F004          	lfsr	2,4
  1764  001034  5173               	movf	detect_color@w& (0+255),w,b
  1765  001036  26D9               	addwf	fsr2l,f,c
  1766  001038  5174               	movf	(detect_color@w+1)& (0+255),w,b
  1767  00103A  22DA               	addwfc	fsr2h,f,c
  1768  00103C  CFDE F075          	movff	postinc2,??_detect_color
  1769  001040  CFDD F076          	movff	postdec2,??_detect_color+1
  1770  001044  C075  F001         	movff	??_detect_color,___xxtofl@val
  1771  001048  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1772  00104C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1773  00104E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1774  001050  0E00               	movlw	0
  1775  001052  ECC4  F01B         	call	___xxtofl
  1776  001056  C001  F013         	movff	?___xxtofl,___fldiv@a
  1777  00105A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1778  00105E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1779  001062  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1780  001066  0100               	movlb	0	; () banked
  1781  001068  EE20 F004          	lfsr	2,4
  1782  00106C  5171               	movf	detect_color@m& (0+255),w,b
  1783  00106E  26D9               	addwf	fsr2l,f,c
  1784  001070  5172               	movf	(detect_color@m+1)& (0+255),w,b
  1785  001072  22DA               	addwfc	fsr2h,f,c
  1786  001074  CFDE F077          	movff	postinc2,??_detect_color+2
  1787  001078  CFDD F078          	movff	postdec2,??_detect_color+3
  1788  00107C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  1789  001080  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1790  001084  6A03               	clrf	(___xxtofl@val+2)^0,c
  1791  001086  6A04               	clrf	(___xxtofl@val+3)^0,c
  1792  001088  0E00               	movlw	0
  1793  00108A  ECC4  F01B         	call	___xxtofl
  1794  00108E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1795  001092  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1796  001096  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1797  00109A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1798  00109E  ECDA  F013         	call	___fldiv	;wreg free
  1799  0010A2  C00F  F028         	movff	?___fldiv,___flmul@b
  1800  0010A6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1801  0010AA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1802  0010AE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1803  0010B2  0E00               	movlw	0
  1804  0010B4  6E2C               	movwf	___flmul@a^0,c
  1805  0010B6  0E00               	movlw	0
  1806  0010B8  6E2D               	movwf	(___flmul@a+1)^0,c
  1807  0010BA  0EC8               	movlw	200
  1808  0010BC  6E2E               	movwf	(___flmul@a+2)^0,c
  1809  0010BE  0E42               	movlw	66
  1810  0010C0  6E2F               	movwf	(___flmul@a+3)^0,c
  1811  0010C2  ECEE  F00F         	call	___flmul	;wreg free
  1812  0010C6  C028  F08E         	movff	?___flmul,_detect_color$2862
  1813  0010CA  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  1814  0010CE  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  1815  0010D2  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  1816  0010D6  C08E  F066         	movff	_detect_color$2862,lroundf@x
  1817  0010DA  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  1818  0010DE  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  1819  0010E2  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  1820  0010E6  EC32  F028         	call	_lroundf	;wreg free
  1821  0010EA                     
  1822                           ;color.c: 238:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1823  0010EA  0E05               	movlw	5
  1824  0010EC  0100               	movlb	0	; () banked
  1825  0010EE  6F76               	movwf	(??_detect_color+1)& (0+255),b
  1826  0010F0  0E0F               	movlw	15
  1827  0010F2  6F75               	movwf	??_detect_color& (0+255),b
  1828  0010F4  0EF1               	movlw	241
  1829  0010F6                     u5357:
  1830  0010F6  2EE8               	decfsz	wreg,f,c
  1831  0010F8  D7FE               	bra	u5357
  1832  0010FA  2F75               	decfsz	??_detect_color& (0+255),f,b
  1833  0010FC  D7FC               	bra	u5357
  1834  0010FE  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  1835  001100  D7FA               	bra	u5357
  1836  001102                     
  1837                           ;color.c: 240:     LED_G();
  1838  001102  EC41  F029         	call	_LED_G	;wreg free
  1839  001106                     
  1840                           ;color.c: 241:     read_color(m);
  1841  001106  C071  F00C         	movff	detect_color@m,read_color@m
  1842  00110A  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  1843  00110E  ECDF  F025         	call	_read_color	;wreg free
  1844  001112                     
  1845                           ;color.c: 244:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1846  001112  0100               	movlb	0	; () banked
  1847  001114  EE20 F006          	lfsr	2,6
  1848  001118  5173               	movf	detect_color@w& (0+255),w,b
  1849  00111A  26D9               	addwf	fsr2l,f,c
  1850  00111C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  1851  00111E  22DA               	addwfc	fsr2h,f,c
  1852  001120  CFDE F075          	movff	postinc2,??_detect_color
  1853  001124  CFDD F076          	movff	postdec2,??_detect_color+1
  1854  001128  C075  F001         	movff	??_detect_color,___xxtofl@val
  1855  00112C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1856  001130  6A03               	clrf	(___xxtofl@val+2)^0,c
  1857  001132  6A04               	clrf	(___xxtofl@val+3)^0,c
  1858  001134  0E00               	movlw	0
  1859  001136  ECC4  F01B         	call	___xxtofl
  1860  00113A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1861  00113E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1862  001142  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1863  001146  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1864  00114A  C071  FFD9         	movff	detect_color@m,fsr2l
  1865  00114E  C072  FFDA         	movff	detect_color@m+1,fsr2h
  1866  001152  CFDE F077          	movff	postinc2,??_detect_color+2
  1867  001156  CFDD F078          	movff	postdec2,??_detect_color+3
  1868  00115A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  1869  00115E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1870  001162  6A03               	clrf	(___xxtofl@val+2)^0,c
  1871  001164  6A04               	clrf	(___xxtofl@val+3)^0,c
  1872  001166  0E00               	movlw	0
  1873  001168  ECC4  F01B         	call	___xxtofl
  1874  00116C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1875  001170  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1876  001174  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1877  001178  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1878  00117C  ECDA  F013         	call	___fldiv	;wreg free
  1879  001180  C00F  F028         	movff	?___fldiv,___flmul@b
  1880  001184  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1881  001188  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1882  00118C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1883  001190  0E00               	movlw	0
  1884  001192  6E2C               	movwf	___flmul@a^0,c
  1885  001194  0E00               	movlw	0
  1886  001196  6E2D               	movwf	(___flmul@a+1)^0,c
  1887  001198  0EC8               	movlw	200
  1888  00119A  6E2E               	movwf	(___flmul@a+2)^0,c
  1889  00119C  0E42               	movlw	66
  1890  00119E  6E2F               	movwf	(___flmul@a+3)^0,c
  1891  0011A0  ECEE  F00F         	call	___flmul	;wreg free
  1892  0011A4  C028  F08E         	movff	?___flmul,_detect_color$2862
  1893  0011A8  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  1894  0011AC  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  1895  0011B0  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  1896  0011B4                     
  1897                           ;color.c: 244:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1898  0011B4  C08E  F066         	movff	_detect_color$2862,lroundf@x
  1899  0011B8  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  1900  0011BC  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  1901  0011C0  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  1902  0011C4  EC32  F028         	call	_lroundf	;wreg free
  1903  0011C8  C066  F089         	movff	?_lroundf,detect_color@GR
  1904  0011CC  C067  F08A         	movff	?_lroundf+1,detect_color@GR+1
  1905  0011D0  0100               	movlb	0	; () banked
  1906  0011D2  EE20 F008          	lfsr	2,8
  1907  0011D6  5173               	movf	detect_color@w& (0+255),w,b
  1908  0011D8  26D9               	addwf	fsr2l,f,c
  1909  0011DA  5174               	movf	(detect_color@w+1)& (0+255),w,b
  1910  0011DC  22DA               	addwfc	fsr2h,f,c
  1911  0011DE  CFDE F075          	movff	postinc2,??_detect_color
  1912  0011E2  CFDD F076          	movff	postdec2,??_detect_color+1
  1913  0011E6  C075  F001         	movff	??_detect_color,___xxtofl@val
  1914  0011EA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1915  0011EE  6A03               	clrf	(___xxtofl@val+2)^0,c
  1916  0011F0  6A04               	clrf	(___xxtofl@val+3)^0,c
  1917  0011F2  0E00               	movlw	0
  1918  0011F4  ECC4  F01B         	call	___xxtofl
  1919  0011F8  C001  F013         	movff	?___xxtofl,___fldiv@a
  1920  0011FC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1921  001200  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1922  001204  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1923  001208  0100               	movlb	0	; () banked
  1924  00120A  EE20 F002          	lfsr	2,2
  1925  00120E  5171               	movf	detect_color@m& (0+255),w,b
  1926  001210  26D9               	addwf	fsr2l,f,c
  1927  001212  5172               	movf	(detect_color@m+1)& (0+255),w,b
  1928  001214  22DA               	addwfc	fsr2h,f,c
  1929  001216  CFDE F077          	movff	postinc2,??_detect_color+2
  1930  00121A  CFDD F078          	movff	postdec2,??_detect_color+3
  1931  00121E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  1932  001222  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1933  001226  6A03               	clrf	(___xxtofl@val+2)^0,c
  1934  001228  6A04               	clrf	(___xxtofl@val+3)^0,c
  1935  00122A  0E00               	movlw	0
  1936  00122C  ECC4  F01B         	call	___xxtofl
  1937  001230  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1938  001234  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1939  001238  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1940  00123C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1941  001240  ECDA  F013         	call	___fldiv	;wreg free
  1942  001244  C00F  F028         	movff	?___fldiv,___flmul@b
  1943  001248  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1944  00124C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1945  001250  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1946  001254  0E00               	movlw	0
  1947  001256  6E2C               	movwf	___flmul@a^0,c
  1948  001258  0E00               	movlw	0
  1949  00125A  6E2D               	movwf	(___flmul@a+1)^0,c
  1950  00125C  0EC8               	movlw	200
  1951  00125E  6E2E               	movwf	(___flmul@a+2)^0,c
  1952  001260  0E42               	movlw	66
  1953  001262  6E2F               	movwf	(___flmul@a+3)^0,c
  1954  001264  ECEE  F00F         	call	___flmul	;wreg free
  1955  001268  C028  F08E         	movff	?___flmul,_detect_color$2862
  1956  00126C  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  1957  001270  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  1958  001274  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  1959  001278  C08E  F066         	movff	_detect_color$2862,lroundf@x
  1960  00127C  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  1961  001280  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  1962  001284  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  1963  001288  EC32  F028         	call	_lroundf	;wreg free
  1964  00128C  C066  F081         	movff	?_lroundf,detect_color@GG
  1965  001290  C067  F082         	movff	?_lroundf+1,detect_color@GG+1
  1966  001294  0100               	movlb	0	; () banked
  1967  001296  EE20 F00A          	lfsr	2,10
  1968  00129A  5173               	movf	detect_color@w& (0+255),w,b
  1969  00129C  26D9               	addwf	fsr2l,f,c
  1970  00129E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  1971  0012A0  22DA               	addwfc	fsr2h,f,c
  1972  0012A2  CFDE F075          	movff	postinc2,??_detect_color
  1973  0012A6  CFDD F076          	movff	postdec2,??_detect_color+1
  1974  0012AA  C075  F001         	movff	??_detect_color,___xxtofl@val
  1975  0012AE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1976  0012B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1977  0012B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1978  0012B6  0E00               	movlw	0
  1979  0012B8  ECC4  F01B         	call	___xxtofl
  1980  0012BC  C001  F013         	movff	?___xxtofl,___fldiv@a
  1981  0012C0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1982  0012C4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1983  0012C8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1984  0012CC  0100               	movlb	0	; () banked
  1985  0012CE  EE20 F004          	lfsr	2,4
  1986  0012D2  5171               	movf	detect_color@m& (0+255),w,b
  1987  0012D4  26D9               	addwf	fsr2l,f,c
  1988  0012D6  5172               	movf	(detect_color@m+1)& (0+255),w,b
  1989  0012D8  22DA               	addwfc	fsr2h,f,c
  1990  0012DA  CFDE F077          	movff	postinc2,??_detect_color+2
  1991  0012DE  CFDD F078          	movff	postdec2,??_detect_color+3
  1992  0012E2  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  1993  0012E6  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1994  0012EA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1995  0012EC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1996  0012EE  0E00               	movlw	0
  1997  0012F0  ECC4  F01B         	call	___xxtofl
  1998  0012F4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1999  0012F8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2000  0012FC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2001  001300  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2002  001304  ECDA  F013         	call	___fldiv	;wreg free
  2003  001308  C00F  F028         	movff	?___fldiv,___flmul@b
  2004  00130C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2005  001310  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2006  001314  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2007  001318  0E00               	movlw	0
  2008  00131A  6E2C               	movwf	___flmul@a^0,c
  2009  00131C  0E00               	movlw	0
  2010  00131E  6E2D               	movwf	(___flmul@a+1)^0,c
  2011  001320  0EC8               	movlw	200
  2012  001322  6E2E               	movwf	(___flmul@a+2)^0,c
  2013  001324  0E42               	movlw	66
  2014  001326  6E2F               	movwf	(___flmul@a+3)^0,c
  2015  001328  ECEE  F00F         	call	___flmul	;wreg free
  2016  00132C  C028  F08E         	movff	?___flmul,_detect_color$2862
  2017  001330  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2018  001334  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2019  001338  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2020  00133C  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2021  001340  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2022  001344  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2023  001348  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2024  00134C  EC32  F028         	call	_lroundf	;wreg free
  2025  001350                     
  2026                           ;color.c: 245:     GC = lroundf((float)(m->R)/(w->GR)*100);
  2027  001350  0100               	movlb	0	; () banked
  2028  001352  EE20 F006          	lfsr	2,6
  2029  001356  5173               	movf	detect_color@w& (0+255),w,b
  2030  001358  26D9               	addwf	fsr2l,f,c
  2031  00135A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2032  00135C  22DA               	addwfc	fsr2h,f,c
  2033  00135E  CFDE F075          	movff	postinc2,??_detect_color
  2034  001362  CFDD F076          	movff	postdec2,??_detect_color+1
  2035  001366  C075  F001         	movff	??_detect_color,___xxtofl@val
  2036  00136A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2037  00136E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2038  001370  6A04               	clrf	(___xxtofl@val+3)^0,c
  2039  001372  0E00               	movlw	0
  2040  001374  ECC4  F01B         	call	___xxtofl
  2041  001378  C001  F013         	movff	?___xxtofl,___fldiv@a
  2042  00137C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2043  001380  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2044  001384  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2045  001388  C071  FFD9         	movff	detect_color@m,fsr2l
  2046  00138C  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2047  001390  CFDE F077          	movff	postinc2,??_detect_color+2
  2048  001394  CFDD F078          	movff	postdec2,??_detect_color+3
  2049  001398  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2050  00139C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2051  0013A0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2052  0013A2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2053  0013A4  0E00               	movlw	0
  2054  0013A6  ECC4  F01B         	call	___xxtofl
  2055  0013AA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2056  0013AE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2057  0013B2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2058  0013B6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2059  0013BA  ECDA  F013         	call	___fldiv	;wreg free
  2060  0013BE  C00F  F028         	movff	?___fldiv,___flmul@b
  2061  0013C2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2062  0013C6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2063  0013CA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2064  0013CE  0E00               	movlw	0
  2065  0013D0  6E2C               	movwf	___flmul@a^0,c
  2066  0013D2  0E00               	movlw	0
  2067  0013D4  6E2D               	movwf	(___flmul@a+1)^0,c
  2068  0013D6  0EC8               	movlw	200
  2069  0013D8  6E2E               	movwf	(___flmul@a+2)^0,c
  2070  0013DA  0E42               	movlw	66
  2071  0013DC  6E2F               	movwf	(___flmul@a+3)^0,c
  2072  0013DE  ECEE  F00F         	call	___flmul	;wreg free
  2073  0013E2  C028  F08E         	movff	?___flmul,_detect_color$2862
  2074  0013E6  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2075  0013EA  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2076  0013EE  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2077  0013F2  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2078  0013F6  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2079  0013FA  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2080  0013FE  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2081  001402  EC32  F028         	call	_lroundf	;wreg free
  2082  001406                     
  2083                           ;color.c: 247:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2084  001406  0E05               	movlw	5
  2085  001408  0100               	movlb	0	; () banked
  2086  00140A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2087  00140C  0E0F               	movlw	15
  2088  00140E  6F75               	movwf	??_detect_color& (0+255),b
  2089  001410  0EF1               	movlw	241
  2090  001412                     u5367:
  2091  001412  2EE8               	decfsz	wreg,f,c
  2092  001414  D7FE               	bra	u5367
  2093  001416  2F75               	decfsz	??_detect_color& (0+255),f,b
  2094  001418  D7FC               	bra	u5367
  2095  00141A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2096  00141C  D7FA               	bra	u5367
  2097  00141E                     
  2098                           ;color.c: 249:     LED_B();
  2099  00141E  EC51  F029         	call	_LED_B	;wreg free
  2100  001422                     
  2101                           ;color.c: 250:     read_color(m);
  2102  001422  C071  F00C         	movff	detect_color@m,read_color@m
  2103  001426  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2104  00142A  ECDF  F025         	call	_read_color	;wreg free
  2105  00142E                     
  2106                           ;color.c: 251:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2107  00142E  0100               	movlb	0	; () banked
  2108  001430  EE20 F00C          	lfsr	2,12
  2109  001434  5173               	movf	detect_color@w& (0+255),w,b
  2110  001436  26D9               	addwf	fsr2l,f,c
  2111  001438  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2112  00143A  22DA               	addwfc	fsr2h,f,c
  2113  00143C  CFDE F075          	movff	postinc2,??_detect_color
  2114  001440  CFDD F076          	movff	postdec2,??_detect_color+1
  2115  001444  C075  F001         	movff	??_detect_color,___xxtofl@val
  2116  001448  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2117  00144C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2118  00144E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2119  001450  0E00               	movlw	0
  2120  001452  ECC4  F01B         	call	___xxtofl
  2121  001456  C001  F013         	movff	?___xxtofl,___fldiv@a
  2122  00145A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2123  00145E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2124  001462  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2125  001466  C071  FFD9         	movff	detect_color@m,fsr2l
  2126  00146A  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2127  00146E  CFDE F077          	movff	postinc2,??_detect_color+2
  2128  001472  CFDD F078          	movff	postdec2,??_detect_color+3
  2129  001476  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2130  00147A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2131  00147E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2132  001480  6A04               	clrf	(___xxtofl@val+3)^0,c
  2133  001482  0E00               	movlw	0
  2134  001484  ECC4  F01B         	call	___xxtofl
  2135  001488  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2136  00148C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2137  001490  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2138  001494  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2139  001498  ECDA  F013         	call	___fldiv	;wreg free
  2140  00149C  C00F  F028         	movff	?___fldiv,___flmul@b
  2141  0014A0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2142  0014A4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2143  0014A8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2144  0014AC  0E00               	movlw	0
  2145  0014AE  6E2C               	movwf	___flmul@a^0,c
  2146  0014B0  0E00               	movlw	0
  2147  0014B2  6E2D               	movwf	(___flmul@a+1)^0,c
  2148  0014B4  0EC8               	movlw	200
  2149  0014B6  6E2E               	movwf	(___flmul@a+2)^0,c
  2150  0014B8  0E42               	movlw	66
  2151  0014BA  6E2F               	movwf	(___flmul@a+3)^0,c
  2152  0014BC  ECEE  F00F         	call	___flmul	;wreg free
  2153  0014C0  C028  F08E         	movff	?___flmul,_detect_color$2862
  2154  0014C4  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2155  0014C8  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2156  0014CC  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2157  0014D0                     
  2158                           ;color.c: 251:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2159  0014D0  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2160  0014D4  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2161  0014D8  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2162  0014DC  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2163  0014E0  EC32  F028         	call	_lroundf	;wreg free
  2164  0014E4  C066  F087         	movff	?_lroundf,detect_color@BR
  2165  0014E8  C067  F088         	movff	?_lroundf+1,detect_color@BR+1
  2166  0014EC  0100               	movlb	0	; () banked
  2167  0014EE  EE20 F00E          	lfsr	2,14
  2168  0014F2  5173               	movf	detect_color@w& (0+255),w,b
  2169  0014F4  26D9               	addwf	fsr2l,f,c
  2170  0014F6  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2171  0014F8  22DA               	addwfc	fsr2h,f,c
  2172  0014FA  CFDE F075          	movff	postinc2,??_detect_color
  2173  0014FE  CFDD F076          	movff	postdec2,??_detect_color+1
  2174  001502  C075  F001         	movff	??_detect_color,___xxtofl@val
  2175  001506  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2176  00150A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2177  00150C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2178  00150E  0E00               	movlw	0
  2179  001510  ECC4  F01B         	call	___xxtofl
  2180  001514  C001  F013         	movff	?___xxtofl,___fldiv@a
  2181  001518  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2182  00151C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2183  001520  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2184  001524  0100               	movlb	0	; () banked
  2185  001526  EE20 F002          	lfsr	2,2
  2186  00152A  5171               	movf	detect_color@m& (0+255),w,b
  2187  00152C  26D9               	addwf	fsr2l,f,c
  2188  00152E  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2189  001530  22DA               	addwfc	fsr2h,f,c
  2190  001532  CFDE F077          	movff	postinc2,??_detect_color+2
  2191  001536  CFDD F078          	movff	postdec2,??_detect_color+3
  2192  00153A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2193  00153E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2194  001542  6A03               	clrf	(___xxtofl@val+2)^0,c
  2195  001544  6A04               	clrf	(___xxtofl@val+3)^0,c
  2196  001546  0E00               	movlw	0
  2197  001548  ECC4  F01B         	call	___xxtofl
  2198  00154C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2199  001550  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2200  001554  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2201  001558  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2202  00155C  ECDA  F013         	call	___fldiv	;wreg free
  2203  001560  C00F  F028         	movff	?___fldiv,___flmul@b
  2204  001564  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2205  001568  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2206  00156C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2207  001570  0E00               	movlw	0
  2208  001572  6E2C               	movwf	___flmul@a^0,c
  2209  001574  0E00               	movlw	0
  2210  001576  6E2D               	movwf	(___flmul@a+1)^0,c
  2211  001578  0EC8               	movlw	200
  2212  00157A  6E2E               	movwf	(___flmul@a+2)^0,c
  2213  00157C  0E42               	movlw	66
  2214  00157E  6E2F               	movwf	(___flmul@a+3)^0,c
  2215  001580  ECEE  F00F         	call	___flmul	;wreg free
  2216  001584  C028  F08E         	movff	?___flmul,_detect_color$2862
  2217  001588  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2218  00158C  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2219  001590  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2220  001594  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2221  001598  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2222  00159C  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2223  0015A0  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2224  0015A4  EC32  F028         	call	_lroundf	;wreg free
  2225  0015A8  C066  F08B         	movff	?_lroundf,detect_color@BG
  2226  0015AC  C067  F08C         	movff	?_lroundf+1,detect_color@BG+1
  2227  0015B0  0100               	movlb	0	; () banked
  2228  0015B2  EE20 F010          	lfsr	2,16
  2229  0015B6  5173               	movf	detect_color@w& (0+255),w,b
  2230  0015B8  26D9               	addwf	fsr2l,f,c
  2231  0015BA  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2232  0015BC  22DA               	addwfc	fsr2h,f,c
  2233  0015BE  CFDE F075          	movff	postinc2,??_detect_color
  2234  0015C2  CFDD F076          	movff	postdec2,??_detect_color+1
  2235  0015C6  C075  F001         	movff	??_detect_color,___xxtofl@val
  2236  0015CA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2237  0015CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2238  0015D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2239  0015D2  0E00               	movlw	0
  2240  0015D4  ECC4  F01B         	call	___xxtofl
  2241  0015D8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2242  0015DC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2243  0015E0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2244  0015E4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2245  0015E8  0100               	movlb	0	; () banked
  2246  0015EA  EE20 F004          	lfsr	2,4
  2247  0015EE  5171               	movf	detect_color@m& (0+255),w,b
  2248  0015F0  26D9               	addwf	fsr2l,f,c
  2249  0015F2  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2250  0015F4  22DA               	addwfc	fsr2h,f,c
  2251  0015F6  CFDE F077          	movff	postinc2,??_detect_color+2
  2252  0015FA  CFDD F078          	movff	postdec2,??_detect_color+3
  2253  0015FE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2254  001602  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2255  001606  6A03               	clrf	(___xxtofl@val+2)^0,c
  2256  001608  6A04               	clrf	(___xxtofl@val+3)^0,c
  2257  00160A  0E00               	movlw	0
  2258  00160C  ECC4  F01B         	call	___xxtofl
  2259  001610  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2260  001614  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2261  001618  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2262  00161C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2263  001620  ECDA  F013         	call	___fldiv	;wreg free
  2264  001624  C00F  F028         	movff	?___fldiv,___flmul@b
  2265  001628  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2266  00162C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2267  001630  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2268  001634  0E00               	movlw	0
  2269  001636  6E2C               	movwf	___flmul@a^0,c
  2270  001638  0E00               	movlw	0
  2271  00163A  6E2D               	movwf	(___flmul@a+1)^0,c
  2272  00163C  0EC8               	movlw	200
  2273  00163E  6E2E               	movwf	(___flmul@a+2)^0,c
  2274  001640  0E42               	movlw	66
  2275  001642  6E2F               	movwf	(___flmul@a+3)^0,c
  2276  001644  ECEE  F00F         	call	___flmul	;wreg free
  2277  001648  C028  F08E         	movff	?___flmul,_detect_color$2862
  2278  00164C  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2279  001650  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2280  001654  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2281  001658  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2282  00165C  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2283  001660  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2284  001664  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2285  001668  EC32  F028         	call	_lroundf	;wreg free
  2286  00166C  C066  F085         	movff	?_lroundf,detect_color@BB
  2287  001670  C067  F086         	movff	?_lroundf+1,detect_color@BB+1
  2288  001674                     
  2289                           ;color.c: 252:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2290  001674  0E05               	movlw	5
  2291  001676  0100               	movlb	0	; () banked
  2292  001678  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2293  00167A  0E0F               	movlw	15
  2294  00167C  6F75               	movwf	??_detect_color& (0+255),b
  2295  00167E  0EF1               	movlw	241
  2296  001680                     u5377:
  2297  001680  2EE8               	decfsz	wreg,f,c
  2298  001682  D7FE               	bra	u5377
  2299  001684  2F75               	decfsz	??_detect_color& (0+255),f,b
  2300  001686  D7FC               	bra	u5377
  2301  001688  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2302  00168A  D7FA               	bra	u5377
  2303  00168C                     
  2304                           ;color.c: 255:     if (compare(0, BR, 70)){
  2305  00168C  0E00               	movlw	0
  2306  00168E  0100               	movlb	0	; () banked
  2307  001690  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2308  001692  0E00               	movlw	0
  2309  001694  6F6A               	movwf	compare@lower& (0+255),b
  2310  001696  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2311  00169A  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2312  00169E  0E00               	movlw	0
  2313  0016A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2314  0016A2  0E46               	movlw	70
  2315  0016A4  6F6E               	movwf	compare@upper& (0+255),b
  2316  0016A6  EC4F  F028         	call	_compare	;wreg free
  2317  0016AA  0900               	iorlw	0
  2318  0016AC  B4D8               	btfsc	status,2,c
  2319  0016AE  EF5B  F00B         	goto	u4681
  2320  0016B2  EF5D  F00B         	goto	u4680
  2321  0016B6                     u4681:
  2322  0016B6  EFCE  F00B         	goto	l4700
  2323  0016BA                     u4680:
  2324  0016BA                     
  2325                           ;color.c: 257:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2326  0016BA  C085  F001         	movff	detect_color@BB,___xxtofl@val
  2327  0016BE  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2328  0016C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2329  0016C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2330  0016C6  0E00               	movlw	0
  2331  0016C8  ECC4  F01B         	call	___xxtofl
  2332  0016CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2333  0016D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2334  0016D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2335  0016D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2336  0016DC  0100               	movlb	0	; () banked
  2337  0016DE  518B               	movf	detect_color@BG& (0+255),w,b
  2338  0016E0  2581               	addwf	detect_color@GG& (0+255),w,b
  2339  0016E2  6F75               	movwf	??_detect_color& (0+255),b
  2340  0016E4  518C               	movf	(detect_color@BG+1)& (0+255),w,b
  2341  0016E6  2182               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2342  0016E8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2343  0016EA  C075  F001         	movff	??_detect_color,___xxtofl@val
  2344  0016EE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2345  0016F2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2346  0016F4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2347  0016F6  0E00               	movlw	0
  2348  0016F8  ECC4  F01B         	call	___xxtofl
  2349  0016FC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2350  001700  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2351  001704  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2352  001708  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2353  00170C  ECDA  F013         	call	___fldiv	;wreg free
  2354  001710  C00F  F028         	movff	?___fldiv,___flmul@b
  2355  001714  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2356  001718  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2357  00171C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2358  001720  0E00               	movlw	0
  2359  001722  6E2C               	movwf	___flmul@a^0,c
  2360  001724  0E00               	movlw	0
  2361  001726  6E2D               	movwf	(___flmul@a+1)^0,c
  2362  001728  0E48               	movlw	72
  2363  00172A  6E2E               	movwf	(___flmul@a+2)^0,c
  2364  00172C  0E43               	movlw	67
  2365  00172E  6E2F               	movwf	(___flmul@a+3)^0,c
  2366  001730  ECEE  F00F         	call	___flmul	;wreg free
  2367  001734  C028  F08E         	movff	?___flmul,_detect_color$2862
  2368  001738  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2369  00173C  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2370  001740  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2371                           
  2372                           ;color.c: 257:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2373  001744  0E00               	movlw	0
  2374  001746  0100               	movlb	0	; () banked
  2375  001748  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2376  00174A  0E00               	movlw	0
  2377  00174C  6F6A               	movwf	compare@lower& (0+255),b
  2378  00174E  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2379  001752  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2380  001756  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2381  00175A  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2382  00175E  EC32  F028         	call	_lroundf	;wreg free
  2383  001762  C066  F06C         	movff	?_lroundf,compare@value2compare
  2384  001766  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2385  00176A  0E01               	movlw	1
  2386  00176C  0100               	movlb	0	; () banked
  2387  00176E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2388  001770  0E9E               	movlw	158
  2389  001772  6F6E               	movwf	compare@upper& (0+255),b
  2390  001774  EC4F  F028         	call	_compare	;wreg free
  2391  001778  0900               	iorlw	0
  2392  00177A  B4D8               	btfsc	status,2,c
  2393  00177C  EFC2  F00B         	goto	u4691
  2394  001780  EFC4  F00B         	goto	u4690
  2395  001784                     u4691:
  2396  001784  EFC9  F00B         	goto	l4698
  2397  001788                     u4690:
  2398  001788  0E03               	movlw	3
  2399  00178A  0100               	movlb	0	; () banked
  2400  00178C  6F8D               	movwf	detect_color@color& (0+255),b
  2401  00178E  EFAF  F00C         	goto	l4730
  2402  001792                     l4698:
  2403  001792  0E02               	movlw	2
  2404  001794  0100               	movlb	0	; () banked
  2405  001796  6F8D               	movwf	detect_color@color& (0+255),b
  2406  001798  EFAF  F00C         	goto	l4730
  2407  00179C                     l4700:
  2408                           
  2409                           ;color.c: 261:         if (compare(0, BG, 75)){
  2410  00179C  0E00               	movlw	0
  2411  00179E  0100               	movlb	0	; () banked
  2412  0017A0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2413  0017A2  0E00               	movlw	0
  2414  0017A4  6F6A               	movwf	compare@lower& (0+255),b
  2415  0017A6  C08B  F06C         	movff	detect_color@BG,compare@value2compare
  2416  0017AA  C08C  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2417  0017AE  0E00               	movlw	0
  2418  0017B0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2419  0017B2  0E4B               	movlw	75
  2420  0017B4  6F6E               	movwf	compare@upper& (0+255),b
  2421  0017B6  EC4F  F028         	call	_compare	;wreg free
  2422  0017BA  0900               	iorlw	0
  2423  0017BC  B4D8               	btfsc	status,2,c
  2424  0017BE  EFE3  F00B         	goto	u4701
  2425  0017C2  EFE5  F00B         	goto	u4700
  2426  0017C6                     u4701:
  2427  0017C6  EF5F  F00C         	goto	l4712
  2428  0017CA                     u4700:
  2429  0017CA                     
  2430                           ;color.c: 263:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2431  0017CA  C07F  F001         	movff	detect_color@RG,___xxtofl@val
  2432  0017CE  C080  F002         	movff	detect_color@RG+1,___xxtofl@val+1
  2433  0017D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2434  0017D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2435  0017D6  0E00               	movlw	0
  2436  0017D8  ECC4  F01B         	call	___xxtofl
  2437  0017DC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2438  0017E0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2439  0017E4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2440  0017E8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2441  0017EC  C083  F001         	movff	detect_color@RR,___xxtofl@val
  2442  0017F0  C084  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2443  0017F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2444  0017F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2445  0017F8  0E00               	movlw	0
  2446  0017FA  ECC4  F01B         	call	___xxtofl
  2447  0017FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2448  001802  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2449  001806  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2450  00180A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2451  00180E  ECDA  F013         	call	___fldiv	;wreg free
  2452  001812  C00F  F028         	movff	?___fldiv,___flmul@b
  2453  001816  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2454  00181A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2455  00181E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2456  001822  0E00               	movlw	0
  2457  001824  6E2C               	movwf	___flmul@a^0,c
  2458  001826  0E00               	movlw	0
  2459  001828  6E2D               	movwf	(___flmul@a+1)^0,c
  2460  00182A  0EFA               	movlw	250
  2461  00182C  6E2E               	movwf	(___flmul@a+2)^0,c
  2462  00182E  0E43               	movlw	67
  2463  001830  6E2F               	movwf	(___flmul@a+3)^0,c
  2464  001832  ECEE  F00F         	call	___flmul	;wreg free
  2465  001836  C028  F08E         	movff	?___flmul,_detect_color$2862
  2466  00183A  C029  F08F         	movff	?___flmul+1,_detect_color$2862+1
  2467  00183E  C02A  F090         	movff	?___flmul+2,_detect_color$2862+2
  2468  001842  C02B  F091         	movff	?___flmul+3,_detect_color$2862+3
  2469                           
  2470                           ;color.c: 263:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2471  001846  0E00               	movlw	0
  2472  001848  0100               	movlb	0	; () banked
  2473  00184A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2474  00184C  0E00               	movlw	0
  2475  00184E  6F6A               	movwf	compare@lower& (0+255),b
  2476  001850  C08E  F066         	movff	_detect_color$2862,lroundf@x
  2477  001854  C08F  F067         	movff	_detect_color$2862+1,lroundf@x+1
  2478  001858  C090  F068         	movff	_detect_color$2862+2,lroundf@x+2
  2479  00185C  C091  F069         	movff	_detect_color$2862+3,lroundf@x+3
  2480  001860  EC32  F028         	call	_lroundf	;wreg free
  2481  001864  C066  F06C         	movff	?_lroundf,compare@value2compare
  2482  001868  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2483  00186C  0E02               	movlw	2
  2484  00186E  0100               	movlb	0	; () banked
  2485  001870  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2486  001872  0E9E               	movlw	158
  2487  001874  6F6E               	movwf	compare@upper& (0+255),b
  2488  001876  EC4F  F028         	call	_compare	;wreg free
  2489  00187A  0900               	iorlw	0
  2490  00187C  B4D8               	btfsc	status,2,c
  2491  00187E  EF43  F00C         	goto	u4711
  2492  001882  EF45  F00C         	goto	u4710
  2493  001886                     u4711:
  2494  001886  EF5A  F00C         	goto	l4710
  2495  00188A                     u4710:
  2496  00188A                     
  2497                           ;color.c: 264:                 if (GR > 90){color = 6;}
  2498  00188A  0100               	movlb	0	; () banked
  2499  00188C  518A               	movf	(detect_color@GR+1)& (0+255),w,b
  2500  00188E  E109               	bnz	u4720
  2501  001890  0E5B               	movlw	91
  2502  001892  5D89               	subwf	detect_color@GR& (0+255),w,b
  2503  001894  A0D8               	btfss	status,0,c
  2504  001896  EF4F  F00C         	goto	u4721
  2505  00189A  EF51  F00C         	goto	u4720
  2506  00189E                     u4721:
  2507  00189E  EF55  F00C         	goto	l4708
  2508  0018A2                     u4720:
  2509  0018A2                     
  2510                           ; BSR set to: 0
  2511  0018A2  0E06               	movlw	6
  2512  0018A4  6F8D               	movwf	detect_color@color& (0+255),b
  2513  0018A6  EFAF  F00C         	goto	l4730
  2514  0018AA                     l4708:
  2515  0018AA  0E00               	movlw	0
  2516  0018AC  0100               	movlb	0	; () banked
  2517  0018AE  6F8D               	movwf	detect_color@color& (0+255),b
  2518  0018B0  EFAF  F00C         	goto	l4730
  2519  0018B4                     l4710:
  2520  0018B4  0E01               	movlw	1
  2521  0018B6  0100               	movlb	0	; () banked
  2522  0018B8  6F8D               	movwf	detect_color@color& (0+255),b
  2523  0018BA  EFAF  F00C         	goto	l4730
  2524  0018BE                     l4712:
  2525                           
  2526                           ;color.c: 270:             if (compare(0, BR, 90)){
  2527  0018BE  0E00               	movlw	0
  2528  0018C0  0100               	movlb	0	; () banked
  2529  0018C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2530  0018C4  0E00               	movlw	0
  2531  0018C6  6F6A               	movwf	compare@lower& (0+255),b
  2532  0018C8  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2533  0018CC  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2534  0018D0  0E00               	movlw	0
  2535  0018D2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2536  0018D4  0E5A               	movlw	90
  2537  0018D6  6F6E               	movwf	compare@upper& (0+255),b
  2538  0018D8  EC4F  F028         	call	_compare	;wreg free
  2539  0018DC  0900               	iorlw	0
  2540  0018DE  B4D8               	btfsc	status,2,c
  2541  0018E0  EF74  F00C         	goto	u4731
  2542  0018E4  EF76  F00C         	goto	u4730
  2543  0018E8                     u4731:
  2544  0018E8  EF86  F00C         	goto	l4720
  2545  0018EC                     u4730:
  2546  0018EC                     
  2547                           ;color.c: 271:                 if (BG > 90){color = 7;}
  2548  0018EC  0100               	movlb	0	; () banked
  2549  0018EE  518C               	movf	(detect_color@BG+1)& (0+255),w,b
  2550  0018F0  E109               	bnz	u4740
  2551  0018F2  0E5B               	movlw	91
  2552  0018F4  5D8B               	subwf	detect_color@BG& (0+255),w,b
  2553  0018F6  A0D8               	btfss	status,0,c
  2554  0018F8  EF80  F00C         	goto	u4741
  2555  0018FC  EF82  F00C         	goto	u4740
  2556  001900                     u4741:
  2557  001900  EF55  F00C         	goto	l4708
  2558  001904                     u4740:
  2559  001904                     
  2560                           ; BSR set to: 0
  2561  001904  0E07               	movlw	7
  2562  001906  6F8D               	movwf	detect_color@color& (0+255),b
  2563  001908  EFAF  F00C         	goto	l4730
  2564  00190C                     l4720:
  2565                           
  2566                           ;color.c: 275:                 if (BG < BB){color = 5;}
  2567  00190C  0100               	movlb	0	; () banked
  2568  00190E  5185               	movf	detect_color@BB& (0+255),w,b
  2569  001910  5D8B               	subwf	detect_color@BG& (0+255),w,b
  2570  001912  5186               	movf	(detect_color@BB+1)& (0+255),w,b
  2571  001914  598C               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2572  001916  B0D8               	btfsc	status,0,c
  2573  001918  EF90  F00C         	goto	u4751
  2574  00191C  EF92  F00C         	goto	u4750
  2575  001920                     u4751:
  2576  001920  EF96  F00C         	goto	l4724
  2577  001924                     u4750:
  2578  001924                     
  2579                           ; BSR set to: 0
  2580  001924  0E05               	movlw	5
  2581  001926  6F8D               	movwf	detect_color@color& (0+255),b
  2582  001928  EFAF  F00C         	goto	l4730
  2583  00192C                     l4724:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;color.c: 277:                     if (compare(0, BB, 90)){color = 4;}
  2587  00192C  0E00               	movlw	0
  2588  00192E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2589  001930  0E00               	movlw	0
  2590  001932  6F6A               	movwf	compare@lower& (0+255),b
  2591  001934  C085  F06C         	movff	detect_color@BB,compare@value2compare
  2592  001938  C086  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  2593  00193C  0E00               	movlw	0
  2594  00193E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2595  001940  0E5A               	movlw	90
  2596  001942  6F6E               	movwf	compare@upper& (0+255),b
  2597  001944  EC4F  F028         	call	_compare	;wreg free
  2598  001948  0900               	iorlw	0
  2599  00194A  B4D8               	btfsc	status,2,c
  2600  00194C  EFAA  F00C         	goto	u4761
  2601  001950  EFAC  F00C         	goto	u4760
  2602  001954                     u4761:
  2603  001954  EF55  F00C         	goto	l4708
  2604  001958                     u4760:
  2605  001958  0E04               	movlw	4
  2606  00195A  0100               	movlb	0	; () banked
  2607  00195C  6F8D               	movwf	detect_color@color& (0+255),b
  2608  00195E                     l4730:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;color.c: 284:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2612  00195E  0E00               	movlw	0
  2613  001960  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2614  001962  0E5F               	movlw	95
  2615  001964  6F6A               	movwf	compare@lower& (0+255),b
  2616  001966  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2617  00196A  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2618  00196E  0E00               	movlw	0
  2619  001970  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2620  001972  0E69               	movlw	105
  2621  001974  6F6E               	movwf	compare@upper& (0+255),b
  2622  001976  EC4F  F028         	call	_compare	;wreg free
  2623  00197A  0900               	iorlw	0
  2624  00197C  B4D8               	btfsc	status,2,c
  2625  00197E  EFC3  F00C         	goto	u4771
  2626  001982  EFC5  F00C         	goto	u4770
  2627  001986                     u4771:
  2628  001986  EFDF  F00C         	goto	l4736
  2629  00198A                     u4770:
  2630  00198A  0E00               	movlw	0
  2631  00198C  0100               	movlb	0	; () banked
  2632  00198E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2633  001990  0E5F               	movlw	95
  2634  001992  6F6A               	movwf	compare@lower& (0+255),b
  2635  001994  C08B  F06C         	movff	detect_color@BG,compare@value2compare
  2636  001998  C08C  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2637  00199C  0E00               	movlw	0
  2638  00199E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2639  0019A0  0E69               	movlw	105
  2640  0019A2  6F6E               	movwf	compare@upper& (0+255),b
  2641  0019A4  EC4F  F028         	call	_compare	;wreg free
  2642  0019A8  0900               	iorlw	0
  2643  0019AA  B4D8               	btfsc	status,2,c
  2644  0019AC  EFDA  F00C         	goto	u4781
  2645  0019B0  EFDC  F00C         	goto	u4780
  2646  0019B4                     u4781:
  2647  0019B4  EFDF  F00C         	goto	l4736
  2648  0019B8                     u4780:
  2649  0019B8  0E08               	movlw	8
  2650  0019BA  0100               	movlb	0	; () banked
  2651  0019BC  6F8D               	movwf	detect_color@color& (0+255),b
  2652  0019BE                     l4736:
  2653                           
  2654                           ;color.c: 285:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2655  0019BE  0E00               	movlw	0
  2656  0019C0  0100               	movlb	0	; () banked
  2657  0019C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2658  0019C4  0E00               	movlw	0
  2659  0019C6  6F6A               	movwf	compare@lower& (0+255),b
  2660  0019C8  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2661  0019CC  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2662  0019D0  0E00               	movlw	0
  2663  0019D2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2664  0019D4  0E19               	movlw	25
  2665  0019D6  6F6E               	movwf	compare@upper& (0+255),b
  2666  0019D8  EC4F  F028         	call	_compare	;wreg free
  2667  0019DC  0900               	iorlw	0
  2668  0019DE  B4D8               	btfsc	status,2,c
  2669  0019E0  EFF4  F00C         	goto	u4791
  2670  0019E4  EFF6  F00C         	goto	u4790
  2671  0019E8                     u4791:
  2672  0019E8  EF10  F00D         	goto	l4742
  2673  0019EC                     u4790:
  2674  0019EC  0E00               	movlw	0
  2675  0019EE  0100               	movlb	0	; () banked
  2676  0019F0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2677  0019F2  0E00               	movlw	0
  2678  0019F4  6F6A               	movwf	compare@lower& (0+255),b
  2679  0019F6  C083  F06C         	movff	detect_color@RR,compare@value2compare
  2680  0019FA  C084  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2681  0019FE  0E00               	movlw	0
  2682  001A00  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2683  001A02  0E5A               	movlw	90
  2684  001A04  6F6E               	movwf	compare@upper& (0+255),b
  2685  001A06  EC4F  F028         	call	_compare	;wreg free
  2686  001A0A  0900               	iorlw	0
  2687  001A0C  B4D8               	btfsc	status,2,c
  2688  001A0E  EF0B  F00D         	goto	u4801
  2689  001A12  EF0D  F00D         	goto	u4800
  2690  001A16                     u4801:
  2691  001A16  EF10  F00D         	goto	l4742
  2692  001A1A                     u4800:
  2693  001A1A  0E00               	movlw	0
  2694  001A1C  0100               	movlb	0	; () banked
  2695  001A1E  6F8D               	movwf	detect_color@color& (0+255),b
  2696  001A20                     l4742:
  2697                           
  2698                           ;color.c: 288:     if (color == 2 || color == 3){
  2699  001A20  0E02               	movlw	2
  2700  001A22  0100               	movlb	0	; () banked
  2701  001A24  198D               	xorwf	detect_color@color& (0+255),w,b
  2702  001A26  B4D8               	btfsc	status,2,c
  2703  001A28  EF18  F00D         	goto	u4811
  2704  001A2C  EF1A  F00D         	goto	u4810
  2705  001A30                     u4811:
  2706  001A30  EF23  F00D         	goto	l4746
  2707  001A34                     u4810:
  2708  001A34                     
  2709                           ; BSR set to: 0
  2710  001A34  0E03               	movlw	3
  2711  001A36  198D               	xorwf	detect_color@color& (0+255),w,b
  2712  001A38  A4D8               	btfss	status,2,c
  2713  001A3A  EF21  F00D         	goto	u4821
  2714  001A3E  EF23  F00D         	goto	u4820
  2715  001A42                     u4821:
  2716  001A42  EF30  F00D         	goto	l4750
  2717  001A46                     u4820:
  2718  001A46                     l4746:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;color.c: 289:         if (GR < 50){color = 0;}
  2722  001A46  518A               	movf	(detect_color@GR+1)& (0+255),w,b
  2723  001A48  E107               	bnz	u4831
  2724  001A4A  0E32               	movlw	50
  2725  001A4C  5D89               	subwf	detect_color@GR& (0+255),w,b
  2726  001A4E  B0D8               	btfsc	status,0,c
  2727  001A50  EF2C  F00D         	goto	u4831
  2728  001A54  EF2E  F00D         	goto	u4830
  2729  001A58                     u4831:
  2730  001A58  EF30  F00D         	goto	l4750
  2731  001A5C                     u4830:
  2732  001A5C                     
  2733                           ; BSR set to: 0
  2734  001A5C  0E00               	movlw	0
  2735  001A5E  6F8D               	movwf	detect_color@color& (0+255),b
  2736  001A60                     l4750:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;color.c: 291:     if (color == 1 || color == 6){
  2740  001A60  058D               	decf	detect_color@color& (0+255),w,b
  2741  001A62  B4D8               	btfsc	status,2,c
  2742  001A64  EF36  F00D         	goto	u4841
  2743  001A68  EF38  F00D         	goto	u4840
  2744  001A6C                     u4841:
  2745  001A6C  EF41  F00D         	goto	l4754
  2746  001A70                     u4840:
  2747  001A70                     
  2748                           ; BSR set to: 0
  2749  001A70  0E06               	movlw	6
  2750  001A72  198D               	xorwf	detect_color@color& (0+255),w,b
  2751  001A74  A4D8               	btfss	status,2,c
  2752  001A76  EF3F  F00D         	goto	u4851
  2753  001A7A  EF41  F00D         	goto	u4850
  2754  001A7E                     u4851:
  2755  001A7E  EF4E  F00D         	goto	l4758
  2756  001A82                     u4850:
  2757  001A82                     l4754:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;color.c: 292:         if (GR < 90){color = 0;}
  2761  001A82  518A               	movf	(detect_color@GR+1)& (0+255),w,b
  2762  001A84  E107               	bnz	u4861
  2763  001A86  0E5A               	movlw	90
  2764  001A88  5D89               	subwf	detect_color@GR& (0+255),w,b
  2765  001A8A  B0D8               	btfsc	status,0,c
  2766  001A8C  EF4A  F00D         	goto	u4861
  2767  001A90  EF4C  F00D         	goto	u4860
  2768  001A94                     u4861:
  2769  001A94  EF4E  F00D         	goto	l4758
  2770  001A98                     u4860:
  2771  001A98                     
  2772                           ; BSR set to: 0
  2773  001A98  0E00               	movlw	0
  2774  001A9A  6F8D               	movwf	detect_color@color& (0+255),b
  2775  001A9C                     l4758:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;color.c: 294:     if (color == 4 || color == 5){
  2779  001A9C  0E04               	movlw	4
  2780  001A9E  198D               	xorwf	detect_color@color& (0+255),w,b
  2781  001AA0  B4D8               	btfsc	status,2,c
  2782  001AA2  EF55  F00D         	goto	u4871
  2783  001AA6  EF57  F00D         	goto	u4870
  2784  001AAA                     u4871:
  2785  001AAA  EF60  F00D         	goto	l4762
  2786  001AAE                     u4870:
  2787  001AAE                     
  2788                           ; BSR set to: 0
  2789  001AAE  0E05               	movlw	5
  2790  001AB0  198D               	xorwf	detect_color@color& (0+255),w,b
  2791  001AB2  A4D8               	btfss	status,2,c
  2792  001AB4  EF5E  F00D         	goto	u4881
  2793  001AB8  EF60  F00D         	goto	u4880
  2794  001ABC                     u4881:
  2795  001ABC  EF6D  F00D         	goto	l4766
  2796  001AC0                     u4880:
  2797  001AC0                     l4762:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;color.c: 295:         if (GR < 100){color = 0;}
  2801  001AC0  518A               	movf	(detect_color@GR+1)& (0+255),w,b
  2802  001AC2  E107               	bnz	u4891
  2803  001AC4  0E64               	movlw	100
  2804  001AC6  5D89               	subwf	detect_color@GR& (0+255),w,b
  2805  001AC8  B0D8               	btfsc	status,0,c
  2806  001ACA  EF69  F00D         	goto	u4891
  2807  001ACE  EF6B  F00D         	goto	u4890
  2808  001AD2                     u4891:
  2809  001AD2  EF6D  F00D         	goto	l4766
  2810  001AD6                     u4890:
  2811  001AD6                     
  2812                           ; BSR set to: 0
  2813  001AD6  0E00               	movlw	0
  2814  001AD8  6F8D               	movwf	detect_color@color& (0+255),b
  2815  001ADA                     l4766:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;color.c: 297:     if (color == 7 || color == 8){
  2819  001ADA  0E07               	movlw	7
  2820  001ADC  198D               	xorwf	detect_color@color& (0+255),w,b
  2821  001ADE  B4D8               	btfsc	status,2,c
  2822  001AE0  EF74  F00D         	goto	u4901
  2823  001AE4  EF76  F00D         	goto	u4900
  2824  001AE8                     u4901:
  2825  001AE8  EF7F  F00D         	goto	l4770
  2826  001AEC                     u4900:
  2827  001AEC                     
  2828                           ; BSR set to: 0
  2829  001AEC  0E08               	movlw	8
  2830  001AEE  198D               	xorwf	detect_color@color& (0+255),w,b
  2831  001AF0  A4D8               	btfss	status,2,c
  2832  001AF2  EF7D  F00D         	goto	u4911
  2833  001AF6  EF7F  F00D         	goto	u4910
  2834  001AFA                     u4911:
  2835  001AFA  EF8C  F00D         	goto	l149
  2836  001AFE                     u4910:
  2837  001AFE                     l4770:
  2838                           
  2839                           ; BSR set to: 0
  2840                           ;color.c: 298:         if (GR < 80){color = 0;}
  2841  001AFE  518A               	movf	(detect_color@GR+1)& (0+255),w,b
  2842  001B00  E107               	bnz	u4921
  2843  001B02  0E50               	movlw	80
  2844  001B04  5D89               	subwf	detect_color@GR& (0+255),w,b
  2845  001B06  B0D8               	btfsc	status,0,c
  2846  001B08  EF88  F00D         	goto	u4921
  2847  001B0C  EF8A  F00D         	goto	u4920
  2848  001B10                     u4921:
  2849  001B10  EF8C  F00D         	goto	l149
  2850  001B14                     u4920:
  2851  001B14                     
  2852                           ; BSR set to: 0
  2853  001B14  0E00               	movlw	0
  2854  001B16  6F8D               	movwf	detect_color@color& (0+255),b
  2855  001B18                     l149:
  2856                           
  2857                           ; BSR set to: 0
  2858                           ;color.c: 301:     return color;
  2859  001B18  518D               	movf	detect_color@color& (0+255),w,b
  2860  001B1A                     
  2861                           ; BSR set to: 0
  2862  001B1A  0012               	return		;funcret
  2863  001B1C                     __end_of_detect_color:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _lroundf *****************
  2867 ;; Defined at:
  2868 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  x               4    6[BANK0 ] float 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  4    6[BANK0 ] long 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;Total ram usage:        4 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 4
  2889 ;; This function calls:
  2890 ;;		___fltol
  2891 ;;		_roundf
  2892 ;; This function is called by:
  2893 ;;		_detect_color
  2894 ;;		_check_color_reading
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text3
  2899  005064                     __ptext3:
  2900                           	callstack 0
  2901  005064                     _lroundf:
  2902                           	callstack 24
  2903  005064  C066  F041         	movff	lroundf@x,roundf@x
  2904  005068  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2905  00506C  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2906  005070  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2907  005074  EC03  F012         	call	_roundf	;wreg free
  2908  005078  C041  F05B         	movff	?_roundf,___fltol@f1
  2909  00507C  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2910  005080  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2911  005084  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2912  005088  ECBB  F020         	call	___fltol	;wreg free
  2913  00508C  C05B  F066         	movff	?___fltol,?_lroundf
  2914  005090  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2915  005094  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2916  005098  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2917  00509C  0012               	return		;funcret
  2918  00509E                     __end_of_lroundf:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _roundf *****************
  2922 ;; Defined at:
  2923 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  x               4   64[COMRAM] float 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  y               4   86[COMRAM] float 
  2928 ;;  u               4   82[COMRAM] struct .
  2929 ;;  e               2   76[COMRAM] int 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  4   64[COMRAM] float 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2940 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2941 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2942 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2943 ;;Total ram usage:       26 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 3
  2946 ;; This function calls:
  2947 ;;		___fladd
  2948 ;;		___flge
  2949 ;;		___flmul
  2950 ;;		___flneg
  2951 ;;		___flsub
  2952 ;; This function is called by:
  2953 ;;		_lroundf
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text4
  2958  002406                     __ptext4:
  2959                           	callstack 0
  2960  002406                     _roundf:
  2961                           	callstack 24
  2962  002406  C18C  F053         	movff	roundf@F527,roundf@u
  2963  00240A  C18D  F054         	movff	roundf@F527+1,roundf@u+1
  2964  00240E  C18E  F055         	movff	roundf@F527+2,roundf@u+2
  2965  002412  C18F  F056         	movff	roundf@F527+3,roundf@u+3
  2966  002416  C041  F053         	movff	roundf@x,roundf@u
  2967  00241A  C042  F054         	movff	roundf@x+1,roundf@u+1
  2968  00241E  C043  F055         	movff	roundf@x+2,roundf@u+2
  2969  002422  C044  F056         	movff	roundf@x+3,roundf@u+3
  2970  002426  C053  F045         	movff	roundf@u,??_roundf
  2971  00242A  C054  F046         	movff	roundf@u+1,??_roundf+1
  2972  00242E  C055  F047         	movff	roundf@u+2,??_roundf+2
  2973  002432  C056  F048         	movff	roundf@u+3,??_roundf+3
  2974  002436  0E18               	movlw	24
  2975  002438  EF23  F012         	goto	u4020
  2976  00243C                     u4025:
  2977  00243C  90D8               	bcf	status,0,c
  2978  00243E  3248               	rrcf	(??_roundf+3)^0,f,c
  2979  002440  3247               	rrcf	(??_roundf+2)^0,f,c
  2980  002442  3246               	rrcf	(??_roundf+1)^0,f,c
  2981  002444  3245               	rrcf	??_roundf^0,f,c
  2982  002446                     u4020:
  2983  002446  2EE8               	decfsz	wreg,f,c
  2984  002448  EF1E  F012         	goto	u4025
  2985  00244C  5045               	movf	??_roundf^0,w,c
  2986  00244E  6E4D               	movwf	roundf@e^0,c
  2987  002450  6A4E               	clrf	(roundf@e+1)^0,c
  2988  002452  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2989  002454  EF35  F012         	goto	u4031
  2990  002458  504E               	movf	(roundf@e+1)^0,w,c
  2991  00245A  E109               	bnz	u4030
  2992  00245C  0E96               	movlw	150
  2993  00245E  5C4D               	subwf	roundf@e^0,w,c
  2994  002460  A0D8               	btfss	status,0,c
  2995  002462  EF35  F012         	goto	u4031
  2996  002466  EF37  F012         	goto	u4030
  2997  00246A                     u4031:
  2998  00246A  EF41  F012         	goto	l4214
  2999  00246E                     u4030:
  3000  00246E  C041  F041         	movff	roundf@x,?_roundf
  3001  002472  C042  F042         	movff	roundf@x+1,?_roundf+1
  3002  002476  C043  F043         	movff	roundf@x+2,?_roundf+2
  3003  00247A  C044  F044         	movff	roundf@x+3,?_roundf+3
  3004  00247E  EFD9  F013         	goto	l1473
  3005  002482                     l4214:
  3006  002482  C053  F045         	movff	roundf@u,??_roundf
  3007  002486  C054  F046         	movff	roundf@u+1,??_roundf+1
  3008  00248A  C055  F047         	movff	roundf@u+2,??_roundf+2
  3009  00248E  C056  F048         	movff	roundf@u+3,??_roundf+3
  3010  002492  0E20               	movlw	32
  3011  002494  EF51  F012         	goto	u4040
  3012  002498                     u4045:
  3013  002498  90D8               	bcf	status,0,c
  3014  00249A  3248               	rrcf	(??_roundf+3)^0,f,c
  3015  00249C  3247               	rrcf	(??_roundf+2)^0,f,c
  3016  00249E  3246               	rrcf	(??_roundf+1)^0,f,c
  3017  0024A0  3245               	rrcf	??_roundf^0,f,c
  3018  0024A2                     u4040:
  3019  0024A2  2EE8               	decfsz	wreg,f,c
  3020  0024A4  EF4C  F012         	goto	u4045
  3021  0024A8  5045               	movf	??_roundf^0,w,c
  3022  0024AA  1046               	iorwf	(??_roundf+1)^0,w,c
  3023  0024AC  1047               	iorwf	(??_roundf+2)^0,w,c
  3024  0024AE  1048               	iorwf	(??_roundf+3)^0,w,c
  3025  0024B0  B4D8               	btfsc	status,2,c
  3026  0024B2  EF5D  F012         	goto	u4051
  3027  0024B6  EF5F  F012         	goto	u4050
  3028  0024BA                     u4051:
  3029  0024BA  EF71  F012         	goto	l4218
  3030  0024BE                     u4050:
  3031  0024BE  C041  F001         	movff	roundf@x,___flneg@f1
  3032  0024C2  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  3033  0024C6  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  3034  0024CA  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  3035  0024CE  EC6C  F028         	call	___flneg	;wreg free
  3036  0024D2  C001  F041         	movff	?___flneg,roundf@x
  3037  0024D6  C002  F042         	movff	?___flneg+1,roundf@x+1
  3038  0024DA  C003  F043         	movff	?___flneg+2,roundf@x+2
  3039  0024DE  C004  F044         	movff	?___flneg+3,roundf@x+3
  3040  0024E2                     l4218:
  3041  0024E2  BE4E               	btfsc	(roundf@e+1)^0,7,c
  3042  0024E4  EF7F  F012         	goto	u4060
  3043  0024E8  504E               	movf	(roundf@e+1)^0,w,c
  3044  0024EA  E107               	bnz	u4061
  3045  0024EC  0E7E               	movlw	126
  3046  0024EE  5C4D               	subwf	roundf@e^0,w,c
  3047  0024F0  B0D8               	btfsc	status,0,c
  3048  0024F2  EF7D  F012         	goto	u4061
  3049  0024F6  EF7F  F012         	goto	u4060
  3050  0024FA                     u4061:
  3051  0024FA  EF9B  F012         	goto	l4224
  3052  0024FE                     u4060:
  3053  0024FE  C053  F028         	movff	roundf@u,___flmul@b
  3054  002502  C054  F029         	movff	roundf@u+1,___flmul@b+1
  3055  002506  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  3056  00250A  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  3057  00250E  0E00               	movlw	0
  3058  002510  6E2C               	movwf	___flmul@a^0,c
  3059  002512  0E00               	movlw	0
  3060  002514  6E2D               	movwf	(___flmul@a+1)^0,c
  3061  002516  0E00               	movlw	0
  3062  002518  6E2E               	movwf	(___flmul@a+2)^0,c
  3063  00251A  0E00               	movlw	0
  3064  00251C  6E2F               	movwf	(___flmul@a+3)^0,c
  3065  00251E  ECEE  F00F         	call	___flmul	;wreg free
  3066  002522  C028  F041         	movff	?___flmul,?_roundf
  3067  002526  C029  F042         	movff	?___flmul+1,?_roundf+1
  3068  00252A  C02A  F043         	movff	?___flmul+2,?_roundf+2
  3069  00252E  C02B  F044         	movff	?___flmul+3,?_roundf+3
  3070  002532  EFD9  F013         	goto	l1473
  3071  002536                     l4224:
  3072  002536  0E00               	movlw	0
  3073  002538  6E05               	movwf	___fladd@a^0,c
  3074  00253A  0E00               	movlw	0
  3075  00253C  6E06               	movwf	(___fladd@a+1)^0,c
  3076  00253E  0E00               	movlw	0
  3077  002540  6E07               	movwf	(___fladd@a+2)^0,c
  3078  002542  0E4B               	movlw	75
  3079  002544  6E08               	movwf	(___fladd@a+3)^0,c
  3080  002546  C041  F001         	movff	roundf@x,___fladd@b
  3081  00254A  C042  F002         	movff	roundf@x+1,___fladd@b+1
  3082  00254E  C043  F003         	movff	roundf@x+2,___fladd@b+2
  3083  002552  C044  F004         	movff	roundf@x+3,___fladd@b+3
  3084  002556  EC8E  F00D         	call	___fladd	;wreg free
  3085  00255A  C001  F04F         	movff	?___fladd,_roundf$2863
  3086  00255E  C002  F050         	movff	?___fladd+1,_roundf$2863+1
  3087  002562  C003  F051         	movff	?___fladd+2,_roundf$2863+2
  3088  002566  C004  F052         	movff	?___fladd+3,_roundf$2863+3
  3089  00256A  0E00               	movlw	0
  3090  00256C  6E05               	movwf	___fladd@a^0,c
  3091  00256E  0E00               	movlw	0
  3092  002570  6E06               	movwf	(___fladd@a+1)^0,c
  3093  002572  0E00               	movlw	0
  3094  002574  6E07               	movwf	(___fladd@a+2)^0,c
  3095  002576  0ECB               	movlw	203
  3096  002578  6E08               	movwf	(___fladd@a+3)^0,c
  3097  00257A  C04F  F001         	movff	_roundf$2863,___fladd@b
  3098  00257E  C050  F002         	movff	_roundf$2863+1,___fladd@b+1
  3099  002582  C051  F003         	movff	_roundf$2863+2,___fladd@b+2
  3100  002586  C052  F004         	movff	_roundf$2863+3,___fladd@b+3
  3101  00258A  EC8E  F00D         	call	___fladd	;wreg free
  3102  00258E  C001  F049         	movff	?___fladd,_roundf$2864
  3103  002592  C002  F04A         	movff	?___fladd+1,_roundf$2864+1
  3104  002596  C003  F04B         	movff	?___fladd+2,_roundf$2864+2
  3105  00259A  C004  F04C         	movff	?___fladd+3,_roundf$2864+3
  3106  00259E  C049  F011         	movff	_roundf$2864,___flsub@b
  3107  0025A2  C04A  F012         	movff	_roundf$2864+1,___flsub@b+1
  3108  0025A6  C04B  F013         	movff	_roundf$2864+2,___flsub@b+2
  3109  0025AA  C04C  F014         	movff	_roundf$2864+3,___flsub@b+3
  3110  0025AE  C041  F015         	movff	roundf@x,___flsub@a
  3111  0025B2  C042  F016         	movff	roundf@x+1,___flsub@a+1
  3112  0025B6  C043  F017         	movff	roundf@x+2,___flsub@a+2
  3113  0025BA  C044  F018         	movff	roundf@x+3,___flsub@a+3
  3114  0025BE  EC28  F027         	call	___flsub	;wreg free
  3115  0025C2  C011  F057         	movff	?___flsub,roundf@y
  3116  0025C6  C012  F058         	movff	?___flsub+1,roundf@y+1
  3117  0025CA  C013  F059         	movff	?___flsub+2,roundf@y+2
  3118  0025CE  C014  F05A         	movff	?___flsub+3,roundf@y+3
  3119  0025D2  0E00               	movlw	0
  3120  0025D4  6E01               	movwf	___flge@ff1^0,c
  3121  0025D6  0E00               	movlw	0
  3122  0025D8  6E02               	movwf	(___flge@ff1+1)^0,c
  3123  0025DA  0E00               	movlw	0
  3124  0025DC  6E03               	movwf	(___flge@ff1+2)^0,c
  3125  0025DE  0E3F               	movlw	63
  3126  0025E0  6E04               	movwf	(___flge@ff1+3)^0,c
  3127  0025E2  C057  F005         	movff	roundf@y,___flge@ff2
  3128  0025E6  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3129  0025EA  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3130  0025EE  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3131  0025F2  EC3F  F021         	call	___flge	;wreg free
  3132  0025F6  B0D8               	btfsc	status,0,c
  3133  0025F8  EF00  F013         	goto	u4071
  3134  0025FC  EF02  F013         	goto	u4070
  3135  002600                     u4071:
  3136  002600  EF38  F013         	goto	l4228
  3137  002604                     u4070:
  3138  002604  C041  F005         	movff	roundf@x,___fladd@a
  3139  002608  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3140  00260C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3141  002610  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3142  002614  C057  F001         	movff	roundf@y,___fladd@b
  3143  002618  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3144  00261C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3145  002620  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3146  002624  EC8E  F00D         	call	___fladd	;wreg free
  3147  002628  C001  F04F         	movff	?___fladd,_roundf$2863
  3148  00262C  C002  F050         	movff	?___fladd+1,_roundf$2863+1
  3149  002630  C003  F051         	movff	?___fladd+2,_roundf$2863+2
  3150  002634  C004  F052         	movff	?___fladd+3,_roundf$2863+3
  3151  002638  C04F  F001         	movff	_roundf$2863,___fladd@b
  3152  00263C  C050  F002         	movff	_roundf$2863+1,___fladd@b+1
  3153  002640  C051  F003         	movff	_roundf$2863+2,___fladd@b+2
  3154  002644  C052  F004         	movff	_roundf$2863+3,___fladd@b+3
  3155  002648  0E00               	movlw	0
  3156  00264A  6E05               	movwf	___fladd@a^0,c
  3157  00264C  0E00               	movlw	0
  3158  00264E  6E06               	movwf	(___fladd@a+1)^0,c
  3159  002650  0E80               	movlw	128
  3160  002652  6E07               	movwf	(___fladd@a+2)^0,c
  3161  002654  0EBF               	movlw	191
  3162  002656  6E08               	movwf	(___fladd@a+3)^0,c
  3163  002658  EC8E  F00D         	call	___fladd	;wreg free
  3164  00265C  C001  F057         	movff	?___fladd,roundf@y
  3165  002660  C002  F058         	movff	?___fladd+1,roundf@y+1
  3166  002664  C003  F059         	movff	?___fladd+2,roundf@y+2
  3167  002668  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3168  00266C  EFA1  F013         	goto	l4234
  3169  002670                     l4228:
  3170  002670  0E00               	movlw	0
  3171  002672  6E01               	movwf	___flge@ff1^0,c
  3172  002674  0E00               	movlw	0
  3173  002676  6E02               	movwf	(___flge@ff1+1)^0,c
  3174  002678  0E00               	movlw	0
  3175  00267A  6E03               	movwf	(___flge@ff1+2)^0,c
  3176  00267C  0EBF               	movlw	191
  3177  00267E  6E04               	movwf	(___flge@ff1+3)^0,c
  3178  002680  C057  F005         	movff	roundf@y,___flge@ff2
  3179  002684  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3180  002688  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3181  00268C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3182  002690  EC3F  F021         	call	___flge	;wreg free
  3183  002694  A0D8               	btfss	status,0,c
  3184  002696  EF4F  F013         	goto	u4081
  3185  00269A  EF51  F013         	goto	u4080
  3186  00269E                     u4081:
  3187  00269E  EF87  F013         	goto	l4232
  3188  0026A2                     u4080:
  3189  0026A2  C041  F005         	movff	roundf@x,___fladd@a
  3190  0026A6  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3191  0026AA  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3192  0026AE  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3193  0026B2  C057  F001         	movff	roundf@y,___fladd@b
  3194  0026B6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3195  0026BA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3196  0026BE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3197  0026C2  EC8E  F00D         	call	___fladd	;wreg free
  3198  0026C6  C001  F04F         	movff	?___fladd,_roundf$2863
  3199  0026CA  C002  F050         	movff	?___fladd+1,_roundf$2863+1
  3200  0026CE  C003  F051         	movff	?___fladd+2,_roundf$2863+2
  3201  0026D2  C004  F052         	movff	?___fladd+3,_roundf$2863+3
  3202  0026D6  C04F  F001         	movff	_roundf$2863,___fladd@b
  3203  0026DA  C050  F002         	movff	_roundf$2863+1,___fladd@b+1
  3204  0026DE  C051  F003         	movff	_roundf$2863+2,___fladd@b+2
  3205  0026E2  C052  F004         	movff	_roundf$2863+3,___fladd@b+3
  3206  0026E6  0E00               	movlw	0
  3207  0026E8  6E05               	movwf	___fladd@a^0,c
  3208  0026EA  0E00               	movlw	0
  3209  0026EC  6E06               	movwf	(___fladd@a+1)^0,c
  3210  0026EE  0E80               	movlw	128
  3211  0026F0  6E07               	movwf	(___fladd@a+2)^0,c
  3212  0026F2  0E3F               	movlw	63
  3213  0026F4  6E08               	movwf	(___fladd@a+3)^0,c
  3214  0026F6  EC8E  F00D         	call	___fladd	;wreg free
  3215  0026FA  C001  F057         	movff	?___fladd,roundf@y
  3216  0026FE  C002  F058         	movff	?___fladd+1,roundf@y+1
  3217  002702  C003  F059         	movff	?___fladd+2,roundf@y+2
  3218  002706  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3219  00270A  EFA1  F013         	goto	l4234
  3220  00270E                     l4232:
  3221  00270E  C057  F001         	movff	roundf@y,___fladd@b
  3222  002712  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3223  002716  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3224  00271A  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3225  00271E  C041  F005         	movff	roundf@x,___fladd@a
  3226  002722  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3227  002726  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3228  00272A  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3229  00272E  EC8E  F00D         	call	___fladd	;wreg free
  3230  002732  C001  F057         	movff	?___fladd,roundf@y
  3231  002736  C002  F058         	movff	?___fladd+1,roundf@y+1
  3232  00273A  C003  F059         	movff	?___fladd+2,roundf@y+2
  3233  00273E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3234  002742                     l4234:
  3235  002742  C053  F045         	movff	roundf@u,??_roundf
  3236  002746  C054  F046         	movff	roundf@u+1,??_roundf+1
  3237  00274A  C055  F047         	movff	roundf@u+2,??_roundf+2
  3238  00274E  C056  F048         	movff	roundf@u+3,??_roundf+3
  3239  002752  0E20               	movlw	32
  3240  002754  EFB1  F013         	goto	u4090
  3241  002758                     u4095:
  3242  002758  90D8               	bcf	status,0,c
  3243  00275A  3248               	rrcf	(??_roundf+3)^0,f,c
  3244  00275C  3247               	rrcf	(??_roundf+2)^0,f,c
  3245  00275E  3246               	rrcf	(??_roundf+1)^0,f,c
  3246  002760  3245               	rrcf	??_roundf^0,f,c
  3247  002762                     u4090:
  3248  002762  2EE8               	decfsz	wreg,f,c
  3249  002764  EFAC  F013         	goto	u4095
  3250  002768  5045               	movf	??_roundf^0,w,c
  3251  00276A  1046               	iorwf	(??_roundf+1)^0,w,c
  3252  00276C  1047               	iorwf	(??_roundf+2)^0,w,c
  3253  00276E  1048               	iorwf	(??_roundf+3)^0,w,c
  3254  002770  B4D8               	btfsc	status,2,c
  3255  002772  EFBD  F013         	goto	u4101
  3256  002776  EFBF  F013         	goto	u4100
  3257  00277A                     u4101:
  3258  00277A  EFD1  F013         	goto	l4238
  3259  00277E                     u4100:
  3260  00277E  C057  F001         	movff	roundf@y,___flneg@f1
  3261  002782  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3262  002786  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3263  00278A  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3264  00278E  EC6C  F028         	call	___flneg	;wreg free
  3265  002792  C001  F057         	movff	?___flneg,roundf@y
  3266  002796  C002  F058         	movff	?___flneg+1,roundf@y+1
  3267  00279A  C003  F059         	movff	?___flneg+2,roundf@y+2
  3268  00279E  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3269  0027A2                     l4238:
  3270  0027A2  C057  F041         	movff	roundf@y,?_roundf
  3271  0027A6  C058  F042         	movff	roundf@y+1,?_roundf+1
  3272  0027AA  C059  F043         	movff	roundf@y+2,?_roundf+2
  3273  0027AE  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3274  0027B2                     l1473:
  3275  0027B2  0012               	return		;funcret
  3276  0027B4                     __end_of_roundf:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function ___flsub *****************
  3280 ;; Defined at:
  3281 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  b               4   16[COMRAM] float 
  3284 ;;  a               4   20[COMRAM] float 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  4   16[COMRAM] float 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3296 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;Total ram usage:        8 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 2
  3303 ;; This function calls:
  3304 ;;		___fladd
  3305 ;; This function is called by:
  3306 ;;		_roundf
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text5
  3311  004E50                     __ptext5:
  3312                           	callstack 0
  3313  004E50                     ___flsub:
  3314                           	callstack 24
  3315  004E50  0E00               	movlw	0
  3316  004E52  1A15               	xorwf	___flsub@a^0,f,c
  3317  004E54  0E00               	movlw	0
  3318  004E56  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3319  004E58  0E00               	movlw	0
  3320  004E5A  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3321  004E5C  0E80               	movlw	128
  3322  004E5E  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3323  004E60  C011  F001         	movff	___flsub@b,___fladd@b
  3324  004E64  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3325  004E68  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3326  004E6C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3327  004E70  C015  F005         	movff	___flsub@a,___fladd@a
  3328  004E74  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3329  004E78  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3330  004E7C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3331  004E80  EC8E  F00D         	call	___fladd	;wreg free
  3332  004E84  C001  F011         	movff	?___fladd,?___flsub
  3333  004E88  C002  F012         	movff	?___fladd+1,?___flsub+1
  3334  004E8C  C003  F013         	movff	?___fladd+2,?___flsub+2
  3335  004E90  C004  F014         	movff	?___fladd+3,?___flsub+3
  3336  004E94  0012               	return		;funcret
  3337  004E96                     __end_of___flsub:
  3338                           	callstack 0
  3339                           
  3340 ;; *************** function ___fladd *****************
  3341 ;; Defined at:
  3342 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  b               4    0[COMRAM] float 
  3345 ;;  a               4    4[COMRAM] float 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  grs             1   15[COMRAM] unsigned char 
  3348 ;;  bexp            1   14[COMRAM] unsigned char 
  3349 ;;  aexp            1   13[COMRAM] unsigned char 
  3350 ;;  signs           1   12[COMRAM] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  4    0[COMRAM] unsigned char 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3364 ;;Total ram usage:       16 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 1
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		___flsub
  3371 ;;		_roundf
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text6
  3376  001B1C                     __ptext6:
  3377                           	callstack 0
  3378  001B1C                     ___fladd:
  3379                           	callstack 24
  3380  001B1C  5004               	movf	(___fladd@b+3)^0,w,c
  3381  001B1E  0B80               	andlw	128
  3382  001B20  6E0D               	movwf	___fladd@signs^0,c
  3383  001B22  5004               	movf	(___fladd@b+3)^0,w,c
  3384  001B24  2404               	addwf	(___fladd@b+3)^0,w,c
  3385  001B26  6E0F               	movwf	___fladd@bexp^0,c
  3386  001B28  AE03               	btfss	(___fladd@b+2)^0,7,c
  3387  001B2A  EF99  F00D         	goto	u3031
  3388  001B2E  EF9B  F00D         	goto	u3030
  3389  001B32                     u3031:
  3390  001B32  EF9C  F00D         	goto	l3600
  3391  001B36                     u3030:
  3392  001B36  800F               	bsf	___fladd@bexp^0,0,c
  3393  001B38                     l3600:
  3394  001B38  500F               	movf	___fladd@bexp^0,w,c
  3395  001B3A  B4D8               	btfsc	status,2,c
  3396  001B3C  EFA2  F00D         	goto	u3041
  3397  001B40  EFA4  F00D         	goto	u3040
  3398  001B44                     u3041:
  3399  001B44  EFB9  F00D         	goto	l3610
  3400  001B48                     u3040:
  3401  001B48  280F               	incf	___fladd@bexp^0,w,c
  3402  001B4A  A4D8               	btfss	status,2,c
  3403  001B4C  EFAA  F00D         	goto	u3051
  3404  001B50  EFAC  F00D         	goto	u3050
  3405  001B54                     u3051:
  3406  001B54  EFB4  F00D         	goto	l3606
  3407  001B58                     u3050:
  3408  001B58  0E00               	movlw	0
  3409  001B5A  6E01               	movwf	___fladd@b^0,c
  3410  001B5C  0E00               	movlw	0
  3411  001B5E  6E02               	movwf	(___fladd@b+1)^0,c
  3412  001B60  0E00               	movlw	0
  3413  001B62  6E03               	movwf	(___fladd@b+2)^0,c
  3414  001B64  0E00               	movlw	0
  3415  001B66  6E04               	movwf	(___fladd@b+3)^0,c
  3416  001B68                     l3606:
  3417  001B68  8E03               	bsf	(___fladd@b+2)^0,7,c
  3418  001B6A  0E00               	movlw	0
  3419  001B6C  6E04               	movwf	(___fladd@b+3)^0,c
  3420  001B6E  EFC1  F00D         	goto	l3612
  3421  001B72                     l3610:
  3422  001B72  0E00               	movlw	0
  3423  001B74  6E01               	movwf	___fladd@b^0,c
  3424  001B76  0E00               	movlw	0
  3425  001B78  6E02               	movwf	(___fladd@b+1)^0,c
  3426  001B7A  0E00               	movlw	0
  3427  001B7C  6E03               	movwf	(___fladd@b+2)^0,c
  3428  001B7E  0E00               	movlw	0
  3429  001B80  6E04               	movwf	(___fladd@b+3)^0,c
  3430  001B82                     l3612:
  3431  001B82  5008               	movf	(___fladd@a+3)^0,w,c
  3432  001B84  0B80               	andlw	128
  3433  001B86  6E0E               	movwf	___fladd@aexp^0,c
  3434  001B88  500D               	movf	___fladd@signs^0,w,c
  3435  001B8A  180E               	xorwf	___fladd@aexp^0,w,c
  3436  001B8C  B4D8               	btfsc	status,2,c
  3437  001B8E  EFCB  F00D         	goto	u3061
  3438  001B92  EFCD  F00D         	goto	u3060
  3439  001B96                     u3061:
  3440  001B96  EFCE  F00D         	goto	l3618
  3441  001B9A                     u3060:
  3442  001B9A  8C0D               	bsf	___fladd@signs^0,6,c
  3443  001B9C                     l3618:
  3444  001B9C  5008               	movf	(___fladd@a+3)^0,w,c
  3445  001B9E  2408               	addwf	(___fladd@a+3)^0,w,c
  3446  001BA0  6E0E               	movwf	___fladd@aexp^0,c
  3447  001BA2  AE07               	btfss	(___fladd@a+2)^0,7,c
  3448  001BA4  EFD6  F00D         	goto	u3071
  3449  001BA8  EFD8  F00D         	goto	u3070
  3450  001BAC                     u3071:
  3451  001BAC  EFD9  F00D         	goto	l3624
  3452  001BB0                     u3070:
  3453  001BB0  800E               	bsf	___fladd@aexp^0,0,c
  3454  001BB2                     l3624:
  3455  001BB2  500E               	movf	___fladd@aexp^0,w,c
  3456  001BB4  B4D8               	btfsc	status,2,c
  3457  001BB6  EFDF  F00D         	goto	u3081
  3458  001BBA  EFE1  F00D         	goto	u3080
  3459  001BBE                     u3081:
  3460  001BBE  EFF6  F00D         	goto	l3634
  3461  001BC2                     u3080:
  3462  001BC2  280E               	incf	___fladd@aexp^0,w,c
  3463  001BC4  A4D8               	btfss	status,2,c
  3464  001BC6  EFE7  F00D         	goto	u3091
  3465  001BCA  EFE9  F00D         	goto	u3090
  3466  001BCE                     u3091:
  3467  001BCE  EFF1  F00D         	goto	l3630
  3468  001BD2                     u3090:
  3469  001BD2  0E00               	movlw	0
  3470  001BD4  6E05               	movwf	___fladd@a^0,c
  3471  001BD6  0E00               	movlw	0
  3472  001BD8  6E06               	movwf	(___fladd@a+1)^0,c
  3473  001BDA  0E00               	movlw	0
  3474  001BDC  6E07               	movwf	(___fladd@a+2)^0,c
  3475  001BDE  0E00               	movlw	0
  3476  001BE0  6E08               	movwf	(___fladd@a+3)^0,c
  3477  001BE2                     l3630:
  3478  001BE2  8E07               	bsf	(___fladd@a+2)^0,7,c
  3479  001BE4  0E00               	movlw	0
  3480  001BE6  6E08               	movwf	(___fladd@a+3)^0,c
  3481  001BE8  EFFE  F00D         	goto	l3636
  3482  001BEC                     l3634:
  3483  001BEC  0E00               	movlw	0
  3484  001BEE  6E05               	movwf	___fladd@a^0,c
  3485  001BF0  0E00               	movlw	0
  3486  001BF2  6E06               	movwf	(___fladd@a+1)^0,c
  3487  001BF4  0E00               	movlw	0
  3488  001BF6  6E07               	movwf	(___fladd@a+2)^0,c
  3489  001BF8  0E00               	movlw	0
  3490  001BFA  6E08               	movwf	(___fladd@a+3)^0,c
  3491  001BFC                     l3636:
  3492  001BFC  500F               	movf	___fladd@bexp^0,w,c
  3493  001BFE  5C0E               	subwf	___fladd@aexp^0,w,c
  3494  001C00  B0D8               	btfsc	status,0,c
  3495  001C02  EF05  F00E         	goto	u3101
  3496  001C06  EF07  F00E         	goto	u3100
  3497  001C0A                     u3101:
  3498  001C0A  EF2E  F00E         	goto	l3672
  3499  001C0E                     u3100:
  3500  001C0E  AC0D               	btfss	___fladd@signs^0,6,c
  3501  001C10  EF0C  F00E         	goto	u3111
  3502  001C14  EF0E  F00E         	goto	u3110
  3503  001C18                     u3111:
  3504  001C18  EF10  F00E         	goto	l3642
  3505  001C1C                     u3110:
  3506  001C1C  0E80               	movlw	128
  3507  001C1E  1A0D               	xorwf	___fladd@signs^0,f,c
  3508  001C20                     l3642:
  3509  001C20  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3510  001C24  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3511  001C28  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3512  001C2C  C001  F010         	movff	___fladd@b,___fladd@grs
  3513  001C30  C005  F001         	movff	___fladd@a,___fladd@b
  3514  001C34  C010  F005         	movff	___fladd@grs,___fladd@a
  3515  001C38  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3516  001C3C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3517  001C40  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3518  001C44  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3519  001C48  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3520  001C4C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3521  001C50  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3522  001C54  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3523  001C58  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3524  001C5C                     l3672:
  3525  001C5C  0E00               	movlw	0
  3526  001C5E  6E10               	movwf	___fladd@grs^0,c
  3527  001C60  500F               	movf	___fladd@bexp^0,w,c
  3528  001C62  C00E  F009         	movff	___fladd@aexp,??___fladd
  3529  001C66  6A0A               	clrf	(??___fladd+1)^0,c
  3530  001C68  5E09               	subwf	??___fladd^0,f,c
  3531  001C6A  0E00               	movlw	0
  3532  001C6C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3533  001C6E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3534  001C70  EF43  F00E         	goto	u3121
  3535  001C74  500A               	movf	(??___fladd+1)^0,w,c
  3536  001C76  E109               	bnz	u3120
  3537  001C78  0E1A               	movlw	26
  3538  001C7A  5C09               	subwf	??___fladd^0,w,c
  3539  001C7C  A0D8               	btfss	status,0,c
  3540  001C7E  EF43  F00E         	goto	u3121
  3541  001C82  EF45  F00E         	goto	u3120
  3542  001C86                     u3121:
  3543  001C86  EF7C  F00E         	goto	l1209
  3544  001C8A                     u3120:
  3545  001C8A  5001               	movf	___fladd@b^0,w,c
  3546  001C8C  1002               	iorwf	(___fladd@b+1)^0,w,c
  3547  001C8E  1003               	iorwf	(___fladd@b+2)^0,w,c
  3548  001C90  1004               	iorwf	(___fladd@b+3)^0,w,c
  3549  001C92  A4D8               	btfss	status,2,c
  3550  001C94  EF4E  F00E         	goto	u3131
  3551  001C98  EF51  F00E         	goto	u3130
  3552  001C9C                     u3131:
  3553  001C9C  0E01               	movlw	1
  3554  001C9E  EF52  F00E         	goto	u3140
  3555  001CA2                     u3130:
  3556  001CA2  0E00               	movlw	0
  3557  001CA4                     u3140:
  3558  001CA4  6E10               	movwf	___fladd@grs^0,c
  3559  001CA6  0E00               	movlw	0
  3560  001CA8  6E01               	movwf	___fladd@b^0,c
  3561  001CAA  0E00               	movlw	0
  3562  001CAC  6E02               	movwf	(___fladd@b+1)^0,c
  3563  001CAE  0E00               	movlw	0
  3564  001CB0  6E03               	movwf	(___fladd@b+2)^0,c
  3565  001CB2  0E00               	movlw	0
  3566  001CB4  6E04               	movwf	(___fladd@b+3)^0,c
  3567  001CB6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3568  001CBA  EF85  F00E         	goto	l1208
  3569  001CBE                     l1210:
  3570  001CBE  A010               	btfss	___fladd@grs^0,0,c
  3571  001CC0  EF64  F00E         	goto	u3151
  3572  001CC4  EF66  F00E         	goto	u3150
  3573  001CC8                     u3151:
  3574  001CC8  EF6C  F00E         	goto	l3684
  3575  001CCC                     u3150:
  3576  001CCC  90D8               	bcf	status,0,c
  3577  001CCE  3010               	rrcf	___fladd@grs^0,w,c
  3578  001CD0  0901               	iorlw	1
  3579  001CD2  6E10               	movwf	___fladd@grs^0,c
  3580  001CD4  EF6E  F00E         	goto	l3686
  3581  001CD8                     l3684:
  3582  001CD8  90D8               	bcf	status,0,c
  3583  001CDA  3210               	rrcf	___fladd@grs^0,f,c
  3584  001CDC                     l3686:
  3585  001CDC  A001               	btfss	___fladd@b^0,0,c
  3586  001CDE  EF73  F00E         	goto	u3161
  3587  001CE2  EF75  F00E         	goto	u3160
  3588  001CE6                     u3161:
  3589  001CE6  EF76  F00E         	goto	l3690
  3590  001CEA                     u3160:
  3591  001CEA  8E10               	bsf	___fladd@grs^0,7,c
  3592  001CEC                     l3690:
  3593  001CEC  3404               	rlcf	(___fladd@b+3)^0,w,c
  3594  001CEE  3204               	rrcf	(___fladd@b+3)^0,f,c
  3595  001CF0  3203               	rrcf	(___fladd@b+2)^0,f,c
  3596  001CF2  3202               	rrcf	(___fladd@b+1)^0,f,c
  3597  001CF4  3201               	rrcf	___fladd@b^0,f,c
  3598  001CF6  2A0F               	incf	___fladd@bexp^0,f,c
  3599  001CF8                     l1209:
  3600  001CF8  500E               	movf	___fladd@aexp^0,w,c
  3601  001CFA  5C0F               	subwf	___fladd@bexp^0,w,c
  3602  001CFC  A0D8               	btfss	status,0,c
  3603  001CFE  EF83  F00E         	goto	u3171
  3604  001D02  EF85  F00E         	goto	u3170
  3605  001D06                     u3171:
  3606  001D06  EF5F  F00E         	goto	l1210
  3607  001D0A                     u3170:
  3608  001D0A                     l1208:
  3609  001D0A  BC0D               	btfsc	___fladd@signs^0,6,c
  3610  001D0C  EF8A  F00E         	goto	u3181
  3611  001D10  EF8C  F00E         	goto	u3180
  3612  001D14                     u3181:
  3613  001D14  EFCC  F00E         	goto	l3718
  3614  001D18                     u3180:
  3615  001D18  500F               	movf	___fladd@bexp^0,w,c
  3616  001D1A  A4D8               	btfss	status,2,c
  3617  001D1C  EF92  F00E         	goto	u3191
  3618  001D20  EF94  F00E         	goto	u3190
  3619  001D24                     u3191:
  3620  001D24  EF9E  F00E         	goto	l3700
  3621  001D28                     u3190:
  3622  001D28  0E00               	movlw	0
  3623  001D2A  6E01               	movwf	?___fladd^0,c
  3624  001D2C  0E00               	movlw	0
  3625  001D2E  6E02               	movwf	(?___fladd+1)^0,c
  3626  001D30  0E00               	movlw	0
  3627  001D32  6E03               	movwf	(?___fladd+2)^0,c
  3628  001D34  0E00               	movlw	0
  3629  001D36  6E04               	movwf	(?___fladd+3)^0,c
  3630  001D38  EFED  F00F         	goto	l1217
  3631  001D3C                     l3700:
  3632  001D3C  5005               	movf	___fladd@a^0,w,c
  3633  001D3E  2601               	addwf	___fladd@b^0,f,c
  3634  001D40  5006               	movf	(___fladd@a+1)^0,w,c
  3635  001D42  2202               	addwfc	(___fladd@b+1)^0,f,c
  3636  001D44  5007               	movf	(___fladd@a+2)^0,w,c
  3637  001D46  2203               	addwfc	(___fladd@b+2)^0,f,c
  3638  001D48  5008               	movf	(___fladd@a+3)^0,w,c
  3639  001D4A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3640  001D4C  A004               	btfss	(___fladd@b+3)^0,0,c
  3641  001D4E  EFAB  F00E         	goto	u3201
  3642  001D52  EFAD  F00E         	goto	u3200
  3643  001D56                     u3201:
  3644  001D56  EF59  F00F         	goto	l3754
  3645  001D5A                     u3200:
  3646  001D5A  A010               	btfss	___fladd@grs^0,0,c
  3647  001D5C  EFB2  F00E         	goto	u3211
  3648  001D60  EFB4  F00E         	goto	u3210
  3649  001D64                     u3211:
  3650  001D64  EFBA  F00E         	goto	l3708
  3651  001D68                     u3210:
  3652  001D68  90D8               	bcf	status,0,c
  3653  001D6A  3010               	rrcf	___fladd@grs^0,w,c
  3654  001D6C  0901               	iorlw	1
  3655  001D6E  6E10               	movwf	___fladd@grs^0,c
  3656  001D70  EFBC  F00E         	goto	l3710
  3657  001D74                     l3708:
  3658  001D74  90D8               	bcf	status,0,c
  3659  001D76  3210               	rrcf	___fladd@grs^0,f,c
  3660  001D78                     l3710:
  3661  001D78  A001               	btfss	___fladd@b^0,0,c
  3662  001D7A  EFC1  F00E         	goto	u3221
  3663  001D7E  EFC3  F00E         	goto	u3220
  3664  001D82                     u3221:
  3665  001D82  EFC4  F00E         	goto	l3714
  3666  001D86                     u3220:
  3667  001D86  8E10               	bsf	___fladd@grs^0,7,c
  3668  001D88                     l3714:
  3669  001D88  3404               	rlcf	(___fladd@b+3)^0,w,c
  3670  001D8A  3204               	rrcf	(___fladd@b+3)^0,f,c
  3671  001D8C  3203               	rrcf	(___fladd@b+2)^0,f,c
  3672  001D8E  3202               	rrcf	(___fladd@b+1)^0,f,c
  3673  001D90  3201               	rrcf	___fladd@b^0,f,c
  3674  001D92  2A0F               	incf	___fladd@bexp^0,f,c
  3675  001D94  EF59  F00F         	goto	l3754
  3676  001D98                     l3718:
  3677  001D98  5005               	movf	___fladd@a^0,w,c
  3678  001D9A  5C01               	subwf	___fladd@b^0,w,c
  3679  001D9C  5006               	movf	(___fladd@a+1)^0,w,c
  3680  001D9E  5802               	subwfb	(___fladd@b+1)^0,w,c
  3681  001DA0  5007               	movf	(___fladd@a+2)^0,w,c
  3682  001DA2  5803               	subwfb	(___fladd@b+2)^0,w,c
  3683  001DA4  5004               	movf	(___fladd@b+3)^0,w,c
  3684  001DA6  0A80               	xorlw	128
  3685  001DA8  6E09               	movwf	??___fladd^0,c
  3686  001DAA  5008               	movf	(___fladd@a+3)^0,w,c
  3687  001DAC  0A80               	xorlw	128
  3688  001DAE  5809               	subwfb	??___fladd^0,w,c
  3689  001DB0  B0D8               	btfsc	status,0,c
  3690  001DB2  EFDD  F00E         	goto	u3231
  3691  001DB6  EFDF  F00E         	goto	u3230
  3692  001DBA                     u3231:
  3693  001DBA  EF0A  F00F         	goto	l3728
  3694  001DBE                     u3230:
  3695  001DBE  5001               	movf	___fladd@b^0,w,c
  3696  001DC0  5C05               	subwf	___fladd@a^0,w,c
  3697  001DC2  6E09               	movwf	??___fladd^0,c
  3698  001DC4  5002               	movf	(___fladd@b+1)^0,w,c
  3699  001DC6  5806               	subwfb	(___fladd@a+1)^0,w,c
  3700  001DC8  6E0A               	movwf	(??___fladd+1)^0,c
  3701  001DCA  5003               	movf	(___fladd@b+2)^0,w,c
  3702  001DCC  5807               	subwfb	(___fladd@a+2)^0,w,c
  3703  001DCE  6E0B               	movwf	(??___fladd+2)^0,c
  3704  001DD0  5004               	movf	(___fladd@b+3)^0,w,c
  3705  001DD2  5808               	subwfb	(___fladd@a+3)^0,w,c
  3706  001DD4  6E0C               	movwf	(??___fladd+3)^0,c
  3707  001DD6  0EFF               	movlw	255
  3708  001DD8  2409               	addwf	??___fladd^0,w,c
  3709  001DDA  6E01               	movwf	___fladd@b^0,c
  3710  001DDC  0EFF               	movlw	255
  3711  001DDE  200A               	addwfc	(??___fladd+1)^0,w,c
  3712  001DE0  6E02               	movwf	(___fladd@b+1)^0,c
  3713  001DE2  0EFF               	movlw	255
  3714  001DE4  200B               	addwfc	(??___fladd+2)^0,w,c
  3715  001DE6  6E03               	movwf	(___fladd@b+2)^0,c
  3716  001DE8  0EFF               	movlw	255
  3717  001DEA  200C               	addwfc	(??___fladd+3)^0,w,c
  3718  001DEC  6E04               	movwf	(___fladd@b+3)^0,c
  3719  001DEE  0E80               	movlw	128
  3720  001DF0  1A0D               	xorwf	___fladd@signs^0,f,c
  3721  001DF2  6C10               	negf	___fladd@grs^0,c
  3722  001DF4  5010               	movf	___fladd@grs^0,w,c
  3723  001DF6  A4D8               	btfss	status,2,c
  3724  001DF8  EF00  F00F         	goto	u3241
  3725  001DFC  EF02  F00F         	goto	u3240
  3726  001E00                     u3241:
  3727  001E00  EF12  F00F         	goto	l1225
  3728  001E04                     u3240:
  3729  001E04  0E01               	movlw	1
  3730  001E06  2601               	addwf	___fladd@b^0,f,c
  3731  001E08  0E00               	movlw	0
  3732  001E0A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3733  001E0C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3734  001E0E  2204               	addwfc	(___fladd@b+3)^0,f,c
  3735  001E10  EF12  F00F         	goto	l1225
  3736  001E14                     l3728:
  3737  001E14  5005               	movf	___fladd@a^0,w,c
  3738  001E16  5E01               	subwf	___fladd@b^0,f,c
  3739  001E18  5006               	movf	(___fladd@a+1)^0,w,c
  3740  001E1A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3741  001E1C  5007               	movf	(___fladd@a+2)^0,w,c
  3742  001E1E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3743  001E20  5008               	movf	(___fladd@a+3)^0,w,c
  3744  001E22  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3745  001E24                     l1225:
  3746  001E24  5001               	movf	___fladd@b^0,w,c
  3747  001E26  1002               	iorwf	(___fladd@b+1)^0,w,c
  3748  001E28  1003               	iorwf	(___fladd@b+2)^0,w,c
  3749  001E2A  1004               	iorwf	(___fladd@b+3)^0,w,c
  3750  001E2C  A4D8               	btfss	status,2,c
  3751  001E2E  EF1B  F00F         	goto	u3251
  3752  001E32  EF1D  F00F         	goto	u3250
  3753  001E36                     u3251:
  3754  001E36  EF52  F00F         	goto	l3752
  3755  001E3A                     u3250:
  3756  001E3A  5010               	movf	___fladd@grs^0,w,c
  3757  001E3C  A4D8               	btfss	status,2,c
  3758  001E3E  EF23  F00F         	goto	u3261
  3759  001E42  EF25  F00F         	goto	u3260
  3760  001E46                     u3261:
  3761  001E46  EF52  F00F         	goto	l3752
  3762  001E4A                     u3260:
  3763  001E4A  0E00               	movlw	0
  3764  001E4C  6E01               	movwf	?___fladd^0,c
  3765  001E4E  0E00               	movlw	0
  3766  001E50  6E02               	movwf	(?___fladd+1)^0,c
  3767  001E52  0E00               	movlw	0
  3768  001E54  6E03               	movwf	(?___fladd+2)^0,c
  3769  001E56  0E00               	movlw	0
  3770  001E58  6E04               	movwf	(?___fladd+3)^0,c
  3771  001E5A  EFED  F00F         	goto	l1217
  3772  001E5E                     l3736:
  3773  001E5E  90D8               	bcf	status,0,c
  3774  001E60  3601               	rlcf	___fladd@b^0,f,c
  3775  001E62  3602               	rlcf	(___fladd@b+1)^0,f,c
  3776  001E64  3603               	rlcf	(___fladd@b+2)^0,f,c
  3777  001E66  3604               	rlcf	(___fladd@b+3)^0,f,c
  3778  001E68  AE10               	btfss	___fladd@grs^0,7,c
  3779  001E6A  EF39  F00F         	goto	u3271
  3780  001E6E  EF3B  F00F         	goto	u3270
  3781  001E72                     u3271:
  3782  001E72  EF3C  F00F         	goto	l3742
  3783  001E76                     u3270:
  3784  001E76  8001               	bsf	___fladd@b^0,0,c
  3785  001E78                     l3742:
  3786  001E78  A010               	btfss	___fladd@grs^0,0,c
  3787  001E7A  EF41  F00F         	goto	u3281
  3788  001E7E  EF43  F00F         	goto	u3280
  3789  001E82                     u3281:
  3790  001E82  EF47  F00F         	goto	l3746
  3791  001E86                     u3280:
  3792  001E86  80D8               	bsf	status,0,c
  3793  001E88  3610               	rlcf	___fladd@grs^0,f,c
  3794  001E8A  EF49  F00F         	goto	l3748
  3795  001E8E                     l3746:
  3796  001E8E  90D8               	bcf	status,0,c
  3797  001E90  3610               	rlcf	___fladd@grs^0,f,c
  3798  001E92                     l3748:
  3799  001E92  500F               	movf	___fladd@bexp^0,w,c
  3800  001E94  B4D8               	btfsc	status,2,c
  3801  001E96  EF4F  F00F         	goto	u3291
  3802  001E9A  EF51  F00F         	goto	u3290
  3803  001E9E                     u3291:
  3804  001E9E  EF52  F00F         	goto	l3752
  3805  001EA2                     u3290:
  3806  001EA2  060F               	decf	___fladd@bexp^0,f,c
  3807  001EA4                     l3752:
  3808  001EA4  AE03               	btfss	(___fladd@b+2)^0,7,c
  3809  001EA6  EF57  F00F         	goto	u3301
  3810  001EAA  EF59  F00F         	goto	u3300
  3811  001EAE                     u3301:
  3812  001EAE  EF2F  F00F         	goto	l3736
  3813  001EB2                     u3300:
  3814  001EB2                     l3754:
  3815  001EB2  0E00               	movlw	0
  3816  001EB4  6E0E               	movwf	___fladd@aexp^0,c
  3817  001EB6  AE10               	btfss	___fladd@grs^0,7,c
  3818  001EB8  EF60  F00F         	goto	u3311
  3819  001EBC  EF62  F00F         	goto	u3310
  3820  001EC0                     u3311:
  3821  001EC0  EF7A  F00F         	goto	l1234
  3822  001EC4                     u3310:
  3823  001EC4  C010  F009         	movff	___fladd@grs,??___fladd
  3824  001EC8  0E7F               	movlw	127
  3825  001ECA  1609               	andwf	??___fladd^0,f,c
  3826  001ECC  B4D8               	btfsc	status,2,c
  3827  001ECE  EF6B  F00F         	goto	u3321
  3828  001ED2  EF6D  F00F         	goto	u3320
  3829  001ED6                     u3321:
  3830  001ED6  EF71  F00F         	goto	l1235
  3831  001EDA                     u3320:
  3832  001EDA                     l3760:
  3833  001EDA  0E01               	movlw	1
  3834  001EDC  6E0E               	movwf	___fladd@aexp^0,c
  3835  001EDE  EF7A  F00F         	goto	l1234
  3836  001EE2                     l1235:
  3837  001EE2  A001               	btfss	___fladd@b^0,0,c
  3838  001EE4  EF76  F00F         	goto	u3331
  3839  001EE8  EF78  F00F         	goto	u3330
  3840  001EEC                     u3331:
  3841  001EEC  EF7A  F00F         	goto	l1234
  3842  001EF0                     u3330:
  3843  001EF0  EF6D  F00F         	goto	l3760
  3844  001EF4                     l1234:
  3845  001EF4  500E               	movf	___fladd@aexp^0,w,c
  3846  001EF6  B4D8               	btfsc	status,2,c
  3847  001EF8  EF80  F00F         	goto	u3341
  3848  001EFC  EF82  F00F         	goto	u3340
  3849  001F00                     u3341:
  3850  001F00  EFAD  F00F         	goto	l3772
  3851  001F04                     u3340:
  3852  001F04  0E01               	movlw	1
  3853  001F06  2601               	addwf	___fladd@b^0,f,c
  3854  001F08  0E00               	movlw	0
  3855  001F0A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3856  001F0C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3857  001F0E  2204               	addwfc	(___fladd@b+3)^0,f,c
  3858  001F10  A004               	btfss	(___fladd@b+3)^0,0,c
  3859  001F12  EF8D  F00F         	goto	u3351
  3860  001F16  EF8F  F00F         	goto	u3350
  3861  001F1A                     u3351:
  3862  001F1A  EFAD  F00F         	goto	l3772
  3863  001F1E                     u3350:
  3864  001F1E  C001  F009         	movff	___fladd@b,??___fladd
  3865  001F22  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3866  001F26  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3867  001F2A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3868  001F2E  340C               	rlcf	(??___fladd+3)^0,w,c
  3869  001F30  320C               	rrcf	(??___fladd+3)^0,f,c
  3870  001F32  320B               	rrcf	(??___fladd+2)^0,f,c
  3871  001F34  320A               	rrcf	(??___fladd+1)^0,f,c
  3872  001F36  3209               	rrcf	??___fladd^0,f,c
  3873  001F38  C009  F001         	movff	??___fladd,___fladd@b
  3874  001F3C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3875  001F40  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3876  001F44  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3877  001F48  280F               	incf	___fladd@bexp^0,w,c
  3878  001F4A  B4D8               	btfsc	status,2,c
  3879  001F4C  EFAA  F00F         	goto	u3361
  3880  001F50  EFAC  F00F         	goto	u3360
  3881  001F54                     u3361:
  3882  001F54  EFAD  F00F         	goto	l3772
  3883  001F58                     u3360:
  3884  001F58  2A0F               	incf	___fladd@bexp^0,f,c
  3885  001F5A                     l3772:
  3886  001F5A  280F               	incf	___fladd@bexp^0,w,c
  3887  001F5C  B4D8               	btfsc	status,2,c
  3888  001F5E  EFB3  F00F         	goto	u3371
  3889  001F62  EFB5  F00F         	goto	u3370
  3890  001F66                     u3371:
  3891  001F66  EFBD  F00F         	goto	l3776
  3892  001F6A                     u3370:
  3893  001F6A  500F               	movf	___fladd@bexp^0,w,c
  3894  001F6C  A4D8               	btfss	status,2,c
  3895  001F6E  EFBB  F00F         	goto	u3381
  3896  001F72  EFBD  F00F         	goto	u3380
  3897  001F76                     u3381:
  3898  001F76  EFCF  F00F         	goto	l3780
  3899  001F7A                     u3380:
  3900  001F7A                     l3776:
  3901  001F7A  0E00               	movlw	0
  3902  001F7C  6E01               	movwf	___fladd@b^0,c
  3903  001F7E  0E00               	movlw	0
  3904  001F80  6E02               	movwf	(___fladd@b+1)^0,c
  3905  001F82  0E00               	movlw	0
  3906  001F84  6E03               	movwf	(___fladd@b+2)^0,c
  3907  001F86  0E00               	movlw	0
  3908  001F88  6E04               	movwf	(___fladd@b+3)^0,c
  3909  001F8A  500F               	movf	___fladd@bexp^0,w,c
  3910  001F8C  A4D8               	btfss	status,2,c
  3911  001F8E  EFCB  F00F         	goto	u3391
  3912  001F92  EFCD  F00F         	goto	u3390
  3913  001F96                     u3391:
  3914  001F96  EFCF  F00F         	goto	l3780
  3915  001F9A                     u3390:
  3916  001F9A  0E00               	movlw	0
  3917  001F9C  6E0D               	movwf	___fladd@signs^0,c
  3918  001F9E                     l3780:
  3919  001F9E  A00F               	btfss	___fladd@bexp^0,0,c
  3920  001FA0  EFD4  F00F         	goto	u3401
  3921  001FA4  EFD6  F00F         	goto	u3400
  3922  001FA8                     u3401:
  3923  001FA8  EFD9  F00F         	goto	l3784
  3924  001FAC                     u3400:
  3925  001FAC  8E03               	bsf	(___fladd@b+2)^0,7,c
  3926  001FAE  EFDA  F00F         	goto	l3786
  3927  001FB2                     l3784:
  3928  001FB2  9E03               	bcf	(___fladd@b+2)^0,7,c
  3929  001FB4                     l3786:
  3930  001FB4  90D8               	bcf	status,0,c
  3931  001FB6  300F               	rrcf	___fladd@bexp^0,w,c
  3932  001FB8  6E04               	movwf	(___fladd@b+3)^0,c
  3933  001FBA  AE0D               	btfss	___fladd@signs^0,7,c
  3934  001FBC  EFE2  F00F         	goto	u3411
  3935  001FC0  EFE4  F00F         	goto	u3410
  3936  001FC4                     u3411:
  3937  001FC4  EFE5  F00F         	goto	l3792
  3938  001FC8                     u3410:
  3939  001FC8  8E04               	bsf	(___fladd@b+3)^0,7,c
  3940  001FCA                     l3792:
  3941  001FCA  C001  F001         	movff	___fladd@b,?___fladd
  3942  001FCE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3943  001FD2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3944  001FD6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3945  001FDA                     l1217:
  3946  001FDA  0012               	return		;funcret
  3947  001FDC                     __end_of___fladd:
  3948                           	callstack 0
  3949                           
  3950 ;; *************** function ___flneg *****************
  3951 ;; Defined at:
  3952 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;  f1              4    0[COMRAM] unsigned char 
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  4    0[COMRAM] unsigned char 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;Total ram usage:        4 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_roundf
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text7
  3981  0050D8                     __ptext7:
  3982                           	callstack 0
  3983  0050D8                     ___flneg:
  3984                           	callstack 25
  3985  0050D8  5001               	movf	___flneg@f1^0,w,c
  3986  0050DA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3987  0050DC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3988  0050DE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3989  0050E0  B4D8               	btfsc	status,2,c
  3990  0050E2  EF75  F028         	goto	u3871
  3991  0050E6  EF77  F028         	goto	u3870
  3992  0050EA                     u3871:
  3993  0050EA  EF7F  F028         	goto	l4072
  3994  0050EE                     u3870:
  3995  0050EE  0E00               	movlw	0
  3996  0050F0  1A01               	xorwf	___flneg@f1^0,f,c
  3997  0050F2  0E00               	movlw	0
  3998  0050F4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3999  0050F6  0E00               	movlw	0
  4000  0050F8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4001  0050FA  0E80               	movlw	128
  4002  0050FC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4003  0050FE                     l4072:
  4004  0050FE  C001  F001         	movff	___flneg@f1,?___flneg
  4005  005102  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4006  005106  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4007  00510A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4008  00510E  0012               	return		;funcret
  4009  005110                     __end_of___flneg:
  4010                           	callstack 0
  4011                           
  4012 ;; *************** function ___flmul *****************
  4013 ;; Defined at:
  4014 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  4015 ;; Parameters:    Size  Location     Type
  4016 ;;  b               4   39[COMRAM] unsigned char 
  4017 ;;  a               4   43[COMRAM] unsigned char 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  prod            4   58[COMRAM] struct .
  4020 ;;  grs             4   52[COMRAM] unsigned long 
  4021 ;;  temp            2   62[COMRAM] struct .
  4022 ;;  bexp            1   57[COMRAM] unsigned char 
  4023 ;;  aexp            1   56[COMRAM] unsigned char 
  4024 ;;  sign            1   51[COMRAM] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  4   39[COMRAM] unsigned char 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0, prodl, prodh
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4034 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;Total ram usage:       25 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_detect_color
  4045 ;;		_roundf
  4046 ;;		_check_color_reading
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text8
  4051  001FDC                     __ptext8:
  4052                           	callstack 0
  4053  001FDC                     ___flmul:
  4054                           	callstack 25
  4055  001FDC  502B               	movf	(___flmul@b+3)^0,w,c
  4056  001FDE  0B80               	andlw	128
  4057  001FE0  6E34               	movwf	___flmul@sign^0,c
  4058  001FE2  502B               	movf	(___flmul@b+3)^0,w,c
  4059  001FE4  242B               	addwf	(___flmul@b+3)^0,w,c
  4060  001FE6  6E3A               	movwf	___flmul@bexp^0,c
  4061  001FE8  AE2A               	btfss	(___flmul@b+2)^0,7,c
  4062  001FEA  EFF9  F00F         	goto	u3631
  4063  001FEE  EFFB  F00F         	goto	u3630
  4064  001FF2                     u3631:
  4065  001FF2  EFFC  F00F         	goto	l3916
  4066  001FF6                     u3630:
  4067  001FF6  803A               	bsf	___flmul@bexp^0,0,c
  4068  001FF8                     l3916:
  4069  001FF8  503A               	movf	___flmul@bexp^0,w,c
  4070  001FFA  B4D8               	btfsc	status,2,c
  4071  001FFC  EF02  F010         	goto	u3641
  4072  002000  EF04  F010         	goto	u3640
  4073  002004                     u3641:
  4074  002004  EF17  F010         	goto	l3924
  4075  002008                     u3640:
  4076  002008  283A               	incf	___flmul@bexp^0,w,c
  4077  00200A  A4D8               	btfss	status,2,c
  4078  00200C  EF0A  F010         	goto	u3651
  4079  002010  EF0C  F010         	goto	u3650
  4080  002014                     u3651:
  4081  002014  EF14  F010         	goto	l3922
  4082  002018                     u3650:
  4083  002018  0E00               	movlw	0
  4084  00201A  6E28               	movwf	___flmul@b^0,c
  4085  00201C  0E00               	movlw	0
  4086  00201E  6E29               	movwf	(___flmul@b+1)^0,c
  4087  002020  0E00               	movlw	0
  4088  002022  6E2A               	movwf	(___flmul@b+2)^0,c
  4089  002024  0E00               	movlw	0
  4090  002026  6E2B               	movwf	(___flmul@b+3)^0,c
  4091  002028                     l3922:
  4092  002028  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4093  00202A  EF1F  F010         	goto	l3926
  4094  00202E                     l3924:
  4095  00202E  0E00               	movlw	0
  4096  002030  6E28               	movwf	___flmul@b^0,c
  4097  002032  0E00               	movlw	0
  4098  002034  6E29               	movwf	(___flmul@b+1)^0,c
  4099  002036  0E00               	movlw	0
  4100  002038  6E2A               	movwf	(___flmul@b+2)^0,c
  4101  00203A  0E00               	movlw	0
  4102  00203C  6E2B               	movwf	(___flmul@b+3)^0,c
  4103  00203E                     l3926:
  4104  00203E  502F               	movf	(___flmul@a+3)^0,w,c
  4105  002040  0B80               	andlw	128
  4106  002042  1A34               	xorwf	___flmul@sign^0,f,c
  4107  002044  502F               	movf	(___flmul@a+3)^0,w,c
  4108  002046  242F               	addwf	(___flmul@a+3)^0,w,c
  4109  002048  6E39               	movwf	___flmul@aexp^0,c
  4110  00204A  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4111  00204C  EF2A  F010         	goto	u3661
  4112  002050  EF2C  F010         	goto	u3660
  4113  002054                     u3661:
  4114  002054  EF2D  F010         	goto	l3934
  4115  002058                     u3660:
  4116  002058  8039               	bsf	___flmul@aexp^0,0,c
  4117  00205A                     l3934:
  4118  00205A  5039               	movf	___flmul@aexp^0,w,c
  4119  00205C  B4D8               	btfsc	status,2,c
  4120  00205E  EF33  F010         	goto	u3671
  4121  002062  EF35  F010         	goto	u3670
  4122  002066                     u3671:
  4123  002066  EF48  F010         	goto	l3942
  4124  00206A                     u3670:
  4125  00206A  2839               	incf	___flmul@aexp^0,w,c
  4126  00206C  A4D8               	btfss	status,2,c
  4127  00206E  EF3B  F010         	goto	u3681
  4128  002072  EF3D  F010         	goto	u3680
  4129  002076                     u3681:
  4130  002076  EF45  F010         	goto	l3940
  4131  00207A                     u3680:
  4132  00207A  0E00               	movlw	0
  4133  00207C  6E2C               	movwf	___flmul@a^0,c
  4134  00207E  0E00               	movlw	0
  4135  002080  6E2D               	movwf	(___flmul@a+1)^0,c
  4136  002082  0E00               	movlw	0
  4137  002084  6E2E               	movwf	(___flmul@a+2)^0,c
  4138  002086  0E00               	movlw	0
  4139  002088  6E2F               	movwf	(___flmul@a+3)^0,c
  4140  00208A                     l3940:
  4141  00208A  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4142  00208C  EF50  F010         	goto	l1294
  4143  002090                     l3942:
  4144  002090  0E00               	movlw	0
  4145  002092  6E2C               	movwf	___flmul@a^0,c
  4146  002094  0E00               	movlw	0
  4147  002096  6E2D               	movwf	(___flmul@a+1)^0,c
  4148  002098  0E00               	movlw	0
  4149  00209A  6E2E               	movwf	(___flmul@a+2)^0,c
  4150  00209C  0E00               	movlw	0
  4151  00209E  6E2F               	movwf	(___flmul@a+3)^0,c
  4152  0020A0                     l1294:
  4153  0020A0  5039               	movf	___flmul@aexp^0,w,c
  4154  0020A2  B4D8               	btfsc	status,2,c
  4155  0020A4  EF56  F010         	goto	u3691
  4156  0020A8  EF58  F010         	goto	u3690
  4157  0020AC                     u3691:
  4158  0020AC  EF60  F010         	goto	l3946
  4159  0020B0                     u3690:
  4160  0020B0  503A               	movf	___flmul@bexp^0,w,c
  4161  0020B2  A4D8               	btfss	status,2,c
  4162  0020B4  EF5E  F010         	goto	u3701
  4163  0020B8  EF60  F010         	goto	u3700
  4164  0020BC                     u3701:
  4165  0020BC  EF6A  F010         	goto	l3950
  4166  0020C0                     u3700:
  4167  0020C0                     l3946:
  4168  0020C0  0E00               	movlw	0
  4169  0020C2  6E28               	movwf	?___flmul^0,c
  4170  0020C4  0E00               	movlw	0
  4171  0020C6  6E29               	movwf	(?___flmul+1)^0,c
  4172  0020C8  0E00               	movlw	0
  4173  0020CA  6E2A               	movwf	(?___flmul+2)^0,c
  4174  0020CC  0E00               	movlw	0
  4175  0020CE  6E2B               	movwf	(?___flmul+3)^0,c
  4176  0020D0  EF02  F012         	goto	l1298
  4177  0020D4                     l3950:
  4178  0020D4  502E               	movf	(___flmul@a+2)^0,w,c
  4179  0020D6  0228               	mulwf	___flmul@b^0,c
  4180  0020D8  CFF3 F03F          	movff	prodl,___flmul@temp
  4181  0020DC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4182  0020E0  503F               	movf	___flmul@temp^0,w,c
  4183  0020E2  6E35               	movwf	___flmul@grs^0,c
  4184  0020E4  6A36               	clrf	(___flmul@grs+1)^0,c
  4185  0020E6  6A37               	clrf	(___flmul@grs+2)^0,c
  4186  0020E8  6A38               	clrf	(___flmul@grs+3)^0,c
  4187  0020EA  5040               	movf	(___flmul@temp+1)^0,w,c
  4188  0020EC  6E3B               	movwf	___flmul@prod^0,c
  4189  0020EE  6A3C               	clrf	(___flmul@prod+1)^0,c
  4190  0020F0  6A3D               	clrf	(___flmul@prod+2)^0,c
  4191  0020F2  6A3E               	clrf	(___flmul@prod+3)^0,c
  4192  0020F4  502D               	movf	(___flmul@a+1)^0,w,c
  4193  0020F6  0229               	mulwf	(___flmul@b+1)^0,c
  4194  0020F8  CFF3 F03F          	movff	prodl,___flmul@temp
  4195  0020FC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4196  002100  503F               	movf	___flmul@temp^0,w,c
  4197  002102  2635               	addwf	___flmul@grs^0,f,c
  4198  002104  0E00               	movlw	0
  4199  002106  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4200  002108  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4201  00210A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4202  00210C  5040               	movf	(___flmul@temp+1)^0,w,c
  4203  00210E  263B               	addwf	___flmul@prod^0,f,c
  4204  002110  0E00               	movlw	0
  4205  002112  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4206  002114  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4207  002116  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4208  002118  502C               	movf	___flmul@a^0,w,c
  4209  00211A  022A               	mulwf	(___flmul@b+2)^0,c
  4210  00211C  CFF3 F03F          	movff	prodl,___flmul@temp
  4211  002120  CFF4 F040          	movff	prodh,___flmul@temp+1
  4212  002124  503F               	movf	___flmul@temp^0,w,c
  4213  002126  2635               	addwf	___flmul@grs^0,f,c
  4214  002128  0E00               	movlw	0
  4215  00212A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4216  00212C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4217  00212E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4218  002130  5040               	movf	(___flmul@temp+1)^0,w,c
  4219  002132  263B               	addwf	___flmul@prod^0,f,c
  4220  002134  0E00               	movlw	0
  4221  002136  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4222  002138  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4223  00213A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4224  00213C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4225  002140  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4226  002144  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4227  002148  6A35               	clrf	___flmul@grs^0,c
  4228  00214A  502C               	movf	___flmul@a^0,w,c
  4229  00214C  0229               	mulwf	(___flmul@b+1)^0,c
  4230  00214E  CFF3 F03F          	movff	prodl,___flmul@temp
  4231  002152  CFF4 F040          	movff	prodh,___flmul@temp+1
  4232  002156  503F               	movf	___flmul@temp^0,w,c
  4233  002158  2635               	addwf	___flmul@grs^0,f,c
  4234  00215A  5040               	movf	(___flmul@temp+1)^0,w,c
  4235  00215C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4236  00215E  0E00               	movlw	0
  4237  002160  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4238  002162  0E00               	movlw	0
  4239  002164  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4240  002166  502D               	movf	(___flmul@a+1)^0,w,c
  4241  002168  0228               	mulwf	___flmul@b^0,c
  4242  00216A  CFF3 F03F          	movff	prodl,___flmul@temp
  4243  00216E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4244  002172  503F               	movf	___flmul@temp^0,w,c
  4245  002174  2635               	addwf	___flmul@grs^0,f,c
  4246  002176  5040               	movf	(___flmul@temp+1)^0,w,c
  4247  002178  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4248  00217A  0E00               	movlw	0
  4249  00217C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4250  00217E  0E00               	movlw	0
  4251  002180  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4252  002182  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4253  002186  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4254  00218A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4255  00218E  6A35               	clrf	___flmul@grs^0,c
  4256  002190  502C               	movf	___flmul@a^0,w,c
  4257  002192  0228               	mulwf	___flmul@b^0,c
  4258  002194  CFF3 F03F          	movff	prodl,___flmul@temp
  4259  002198  CFF4 F040          	movff	prodh,___flmul@temp+1
  4260  00219C  503F               	movf	___flmul@temp^0,w,c
  4261  00219E  2635               	addwf	___flmul@grs^0,f,c
  4262  0021A0  5040               	movf	(___flmul@temp+1)^0,w,c
  4263  0021A2  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4264  0021A4  0E00               	movlw	0
  4265  0021A6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4266  0021A8  0E00               	movlw	0
  4267  0021AA  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4268  0021AC  502E               	movf	(___flmul@a+2)^0,w,c
  4269  0021AE  0229               	mulwf	(___flmul@b+1)^0,c
  4270  0021B0  CFF3 F03F          	movff	prodl,___flmul@temp
  4271  0021B4  CFF4 F040          	movff	prodh,___flmul@temp+1
  4272  0021B8  503F               	movf	___flmul@temp^0,w,c
  4273  0021BA  263B               	addwf	___flmul@prod^0,f,c
  4274  0021BC  5040               	movf	(___flmul@temp+1)^0,w,c
  4275  0021BE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4276  0021C0  0E00               	movlw	0
  4277  0021C2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4278  0021C4  0E00               	movlw	0
  4279  0021C6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4280  0021C8  502D               	movf	(___flmul@a+1)^0,w,c
  4281  0021CA  022A               	mulwf	(___flmul@b+2)^0,c
  4282  0021CC  CFF3 F03F          	movff	prodl,___flmul@temp
  4283  0021D0  CFF4 F040          	movff	prodh,___flmul@temp+1
  4284  0021D4  503F               	movf	___flmul@temp^0,w,c
  4285  0021D6  263B               	addwf	___flmul@prod^0,f,c
  4286  0021D8  5040               	movf	(___flmul@temp+1)^0,w,c
  4287  0021DA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4288  0021DC  0E00               	movlw	0
  4289  0021DE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4290  0021E0  0E00               	movlw	0
  4291  0021E2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4292  0021E4  502E               	movf	(___flmul@a+2)^0,w,c
  4293  0021E6  022A               	mulwf	(___flmul@b+2)^0,c
  4294  0021E8  CFF3 F03F          	movff	prodl,___flmul@temp
  4295  0021EC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4296  0021F0  503F               	movf	___flmul@temp^0,w,c
  4297  0021F2  6E30               	movwf	??___flmul^0,c
  4298  0021F4  5040               	movf	(___flmul@temp+1)^0,w,c
  4299  0021F6  6E31               	movwf	(??___flmul+1)^0,c
  4300  0021F8  6A32               	clrf	(??___flmul+2)^0,c
  4301  0021FA  6A33               	clrf	(??___flmul+3)^0,c
  4302  0021FC  C032  F033         	movff	??___flmul+2,??___flmul+3
  4303  002200  C031  F032         	movff	??___flmul+1,??___flmul+2
  4304  002204  C030  F031         	movff	??___flmul,??___flmul+1
  4305  002208  6A30               	clrf	??___flmul^0,c
  4306  00220A  5030               	movf	??___flmul^0,w,c
  4307  00220C  263B               	addwf	___flmul@prod^0,f,c
  4308  00220E  5031               	movf	(??___flmul+1)^0,w,c
  4309  002210  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4310  002212  5032               	movf	(??___flmul+2)^0,w,c
  4311  002214  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4312  002216  5033               	movf	(??___flmul+3)^0,w,c
  4313  002218  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4314  00221A  C035  F030         	movff	___flmul@grs,??___flmul
  4315  00221E  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4316  002222  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4317  002226  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4318  00222A  0E19               	movlw	25
  4319  00222C  EF1D  F011         	goto	u3710
  4320  002230                     u3715:
  4321  002230  90D8               	bcf	status,0,c
  4322  002232  3233               	rrcf	(??___flmul+3)^0,f,c
  4323  002234  3232               	rrcf	(??___flmul+2)^0,f,c
  4324  002236  3231               	rrcf	(??___flmul+1)^0,f,c
  4325  002238  3230               	rrcf	??___flmul^0,f,c
  4326  00223A                     u3710:
  4327  00223A  2EE8               	decfsz	wreg,f,c
  4328  00223C  EF18  F011         	goto	u3715
  4329  002240  5030               	movf	??___flmul^0,w,c
  4330  002242  263B               	addwf	___flmul@prod^0,f,c
  4331  002244  5031               	movf	(??___flmul+1)^0,w,c
  4332  002246  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4333  002248  5032               	movf	(??___flmul+2)^0,w,c
  4334  00224A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4335  00224C  5033               	movf	(??___flmul+3)^0,w,c
  4336  00224E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4337  002250  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4338  002254  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4339  002258  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4340  00225C  6A35               	clrf	___flmul@grs^0,c
  4341  00225E  5039               	movf	___flmul@aexp^0,w,c
  4342  002260  C03A  F030         	movff	___flmul@bexp,??___flmul
  4343  002264  6A31               	clrf	(??___flmul+1)^0,c
  4344  002266  2630               	addwf	??___flmul^0,f,c
  4345  002268  0E00               	movlw	0
  4346  00226A  2231               	addwfc	(??___flmul+1)^0,f,c
  4347  00226C  0E82               	movlw	130
  4348  00226E  2430               	addwf	??___flmul^0,w,c
  4349  002270  6E3F               	movwf	___flmul@temp^0,c
  4350  002272  0EFF               	movlw	255
  4351  002274  2031               	addwfc	(??___flmul+1)^0,w,c
  4352  002276  6E40               	movwf	(___flmul@temp+1)^0,c
  4353  002278  EF53  F011         	goto	l3998
  4354  00227C                     l3992:
  4355  00227C  90D8               	bcf	status,0,c
  4356  00227E  363B               	rlcf	___flmul@prod^0,f,c
  4357  002280  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4358  002282  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4359  002284  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4360  002286  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4361  002288  EF48  F011         	goto	u3721
  4362  00228C  EF4A  F011         	goto	u3720
  4363  002290                     u3721:
  4364  002290  EF4B  F011         	goto	l1301
  4365  002294                     u3720:
  4366  002294  803B               	bsf	___flmul@prod^0,0,c
  4367  002296                     l1301:
  4368  002296  90D8               	bcf	status,0,c
  4369  002298  3635               	rlcf	___flmul@grs^0,f,c
  4370  00229A  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4371  00229C  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4372  00229E  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4373  0022A0  063F               	decf	___flmul@temp^0,f,c
  4374  0022A2  A0D8               	btfss	status,0,c
  4375  0022A4  0640               	decf	(___flmul@temp+1)^0,f,c
  4376  0022A6                     l3998:
  4377  0022A6  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4378  0022A8  EF58  F011         	goto	u3731
  4379  0022AC  EF5A  F011         	goto	u3730
  4380  0022B0                     u3731:
  4381  0022B0  EF3E  F011         	goto	l3992
  4382  0022B4                     u3730:
  4383  0022B4  0E00               	movlw	0
  4384  0022B6  6E39               	movwf	___flmul@aexp^0,c
  4385  0022B8  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4386  0022BA  EF61  F011         	goto	u3741
  4387  0022BE  EF63  F011         	goto	u3740
  4388  0022C2                     u3741:
  4389  0022C2  EF87  F011         	goto	l1303
  4390  0022C6                     u3740:
  4391  0022C6  0EFF               	movlw	255
  4392  0022C8  1435               	andwf	___flmul@grs^0,w,c
  4393  0022CA  6E30               	movwf	??___flmul^0,c
  4394  0022CC  0EFF               	movlw	255
  4395  0022CE  1436               	andwf	(___flmul@grs+1)^0,w,c
  4396  0022D0  6E31               	movwf	(??___flmul+1)^0,c
  4397  0022D2  0EFF               	movlw	255
  4398  0022D4  1437               	andwf	(___flmul@grs+2)^0,w,c
  4399  0022D6  6E32               	movwf	(??___flmul+2)^0,c
  4400  0022D8  0E7F               	movlw	127
  4401  0022DA  1438               	andwf	(___flmul@grs+3)^0,w,c
  4402  0022DC  6E33               	movwf	(??___flmul+3)^0,c
  4403  0022DE  5030               	movf	??___flmul^0,w,c
  4404  0022E0  1031               	iorwf	(??___flmul+1)^0,w,c
  4405  0022E2  1032               	iorwf	(??___flmul+2)^0,w,c
  4406  0022E4  1033               	iorwf	(??___flmul+3)^0,w,c
  4407  0022E6  B4D8               	btfsc	status,2,c
  4408  0022E8  EF78  F011         	goto	u3751
  4409  0022EC  EF7A  F011         	goto	u3750
  4410  0022F0                     u3751:
  4411  0022F0  EF7E  F011         	goto	l1304
  4412  0022F4                     u3750:
  4413  0022F4                     l4006:
  4414  0022F4  0E01               	movlw	1
  4415  0022F6  6E39               	movwf	___flmul@aexp^0,c
  4416  0022F8  EF87  F011         	goto	l1303
  4417  0022FC                     l1304:
  4418  0022FC  A03B               	btfss	___flmul@prod^0,0,c
  4419  0022FE  EF83  F011         	goto	u3761
  4420  002302  EF85  F011         	goto	u3760
  4421  002306                     u3761:
  4422  002306  EF87  F011         	goto	l1303
  4423  00230A                     u3760:
  4424  00230A  EF7A  F011         	goto	l4006
  4425  00230E                     l1303:
  4426  00230E  5039               	movf	___flmul@aexp^0,w,c
  4427  002310  B4D8               	btfsc	status,2,c
  4428  002312  EF8D  F011         	goto	u3771
  4429  002316  EF8F  F011         	goto	u3770
  4430  00231A                     u3771:
  4431  00231A  EFB3  F011         	goto	l4018
  4432  00231E                     u3770:
  4433  00231E  0E01               	movlw	1
  4434  002320  263B               	addwf	___flmul@prod^0,f,c
  4435  002322  0E00               	movlw	0
  4436  002324  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4437  002326  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4438  002328  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4439  00232A  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4440  00232C  EF9A  F011         	goto	u3781
  4441  002330  EF9C  F011         	goto	u3780
  4442  002334                     u3781:
  4443  002334  EFB3  F011         	goto	l4018
  4444  002338                     u3780:
  4445  002338  C03B  F030         	movff	___flmul@prod,??___flmul
  4446  00233C  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4447  002340  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4448  002344  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4449  002348  3433               	rlcf	(??___flmul+3)^0,w,c
  4450  00234A  3233               	rrcf	(??___flmul+3)^0,f,c
  4451  00234C  3232               	rrcf	(??___flmul+2)^0,f,c
  4452  00234E  3231               	rrcf	(??___flmul+1)^0,f,c
  4453  002350  3230               	rrcf	??___flmul^0,f,c
  4454  002352  C030  F03B         	movff	??___flmul,___flmul@prod
  4455  002356  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4456  00235A  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4457  00235E  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4458  002362  4A3F               	infsnz	___flmul@temp^0,f,c
  4459  002364  2A40               	incf	(___flmul@temp+1)^0,f,c
  4460  002366                     l4018:
  4461  002366  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4462  002368  EFBE  F011         	goto	u3791
  4463  00236C  5040               	movf	(___flmul@temp+1)^0,w,c
  4464  00236E  E108               	bnz	u3790
  4465  002370  283F               	incf	___flmul@temp^0,w,c
  4466  002372  A0D8               	btfss	status,0,c
  4467  002374  EFBE  F011         	goto	u3791
  4468  002378  EFC0  F011         	goto	u3790
  4469  00237C                     u3791:
  4470  00237C  EFCA  F011         	goto	l4022
  4471  002380                     u3790:
  4472  002380  0E00               	movlw	0
  4473  002382  6E3B               	movwf	___flmul@prod^0,c
  4474  002384  0E00               	movlw	0
  4475  002386  6E3C               	movwf	(___flmul@prod+1)^0,c
  4476  002388  0E80               	movlw	128
  4477  00238A  6E3D               	movwf	(___flmul@prod+2)^0,c
  4478  00238C  0E7F               	movlw	127
  4479  00238E  6E3E               	movwf	(___flmul@prod+3)^0,c
  4480  002390  EFF8  F011         	goto	l4034
  4481  002394                     l4022:
  4482  002394  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4483  002396  EFD7  F011         	goto	u3800
  4484  00239A  5040               	movf	(___flmul@temp+1)^0,w,c
  4485  00239C  E106               	bnz	u3801
  4486  00239E  043F               	decf	___flmul@temp^0,w,c
  4487  0023A0  B0D8               	btfsc	status,0,c
  4488  0023A2  EFD5  F011         	goto	u3801
  4489  0023A6  EFD7  F011         	goto	u3800
  4490  0023AA                     u3801:
  4491  0023AA  EFE3  F011         	goto	l1311
  4492  0023AE                     u3800:
  4493  0023AE  0E00               	movlw	0
  4494  0023B0  6E3B               	movwf	___flmul@prod^0,c
  4495  0023B2  0E00               	movlw	0
  4496  0023B4  6E3C               	movwf	(___flmul@prod+1)^0,c
  4497  0023B6  0E00               	movlw	0
  4498  0023B8  6E3D               	movwf	(___flmul@prod+2)^0,c
  4499  0023BA  0E00               	movlw	0
  4500  0023BC  6E3E               	movwf	(___flmul@prod+3)^0,c
  4501  0023BE  0E00               	movlw	0
  4502  0023C0  6E34               	movwf	___flmul@sign^0,c
  4503  0023C2  EFF8  F011         	goto	l4034
  4504  0023C6                     l1311:
  4505  0023C6  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4506  0023CA  0EFF               	movlw	255
  4507  0023CC  163B               	andwf	___flmul@prod^0,f,c
  4508  0023CE  0EFF               	movlw	255
  4509  0023D0  163C               	andwf	(___flmul@prod+1)^0,f,c
  4510  0023D2  0E7F               	movlw	127
  4511  0023D4  163D               	andwf	(___flmul@prod+2)^0,f,c
  4512  0023D6  0E00               	movlw	0
  4513  0023D8  163E               	andwf	(___flmul@prod+3)^0,f,c
  4514  0023DA  A03A               	btfss	___flmul@bexp^0,0,c
  4515  0023DC  EFF2  F011         	goto	u3811
  4516  0023E0  EFF4  F011         	goto	u3810
  4517  0023E4                     u3811:
  4518  0023E4  EFF5  F011         	goto	l4032
  4519  0023E8                     u3810:
  4520  0023E8  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4521  0023EA                     l4032:
  4522  0023EA  90D8               	bcf	status,0,c
  4523  0023EC  303A               	rrcf	___flmul@bexp^0,w,c
  4524  0023EE  6E3E               	movwf	(___flmul@prod+3)^0,c
  4525  0023F0                     l4034:
  4526  0023F0  5034               	movf	___flmul@sign^0,w,c
  4527  0023F2  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4528  0023F4  C03B  F028         	movff	___flmul@prod,?___flmul
  4529  0023F8  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4530  0023FC  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4531  002400  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4532  002404                     l1298:
  4533  002404  0012               	return		;funcret
  4534  002406                     __end_of___flmul:
  4535                           	callstack 0
  4536                           
  4537 ;; *************** function ___flge *****************
  4538 ;; Defined at:
  4539 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  ff1             4    0[COMRAM] unsigned char 
  4542 ;;  ff2             4    4[COMRAM] unsigned char 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;		None               void
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4554 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;Total ram usage:       12 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; Hardware stack levels required when called: 1
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_roundf
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text9
  4569  00427E                     __ptext9:
  4570                           	callstack 0
  4571  00427E                     ___flge:
  4572                           	callstack 25
  4573  00427E  0E00               	movlw	0
  4574  004280  1401               	andwf	___flge@ff1^0,w,c
  4575  004282  6E09               	movwf	??___flge^0,c
  4576  004284  0E00               	movlw	0
  4577  004286  1402               	andwf	(___flge@ff1+1)^0,w,c
  4578  004288  6E0A               	movwf	(??___flge+1)^0,c
  4579  00428A  0E80               	movlw	128
  4580  00428C  1403               	andwf	(___flge@ff1+2)^0,w,c
  4581  00428E  6E0B               	movwf	(??___flge+2)^0,c
  4582  004290  0E7F               	movlw	127
  4583  004292  1404               	andwf	(___flge@ff1+3)^0,w,c
  4584  004294  6E0C               	movwf	(??___flge+3)^0,c
  4585  004296  5009               	movf	??___flge^0,w,c
  4586  004298  100A               	iorwf	(??___flge+1)^0,w,c
  4587  00429A  100B               	iorwf	(??___flge+2)^0,w,c
  4588  00429C  100C               	iorwf	(??___flge+3)^0,w,c
  4589  00429E  A4D8               	btfss	status,2,c
  4590  0042A0  EF54  F021         	goto	u3821
  4591  0042A4  EF56  F021         	goto	u3820
  4592  0042A8                     u3821:
  4593  0042A8  EF5E  F021         	goto	l4050
  4594  0042AC                     u3820:
  4595  0042AC  0E00               	movlw	0
  4596  0042AE  6E01               	movwf	___flge@ff1^0,c
  4597  0042B0  0E00               	movlw	0
  4598  0042B2  6E02               	movwf	(___flge@ff1+1)^0,c
  4599  0042B4  0E00               	movlw	0
  4600  0042B6  6E03               	movwf	(___flge@ff1+2)^0,c
  4601  0042B8  0E00               	movlw	0
  4602  0042BA  6E04               	movwf	(___flge@ff1+3)^0,c
  4603  0042BC                     l4050:
  4604  0042BC  0E00               	movlw	0
  4605  0042BE  1405               	andwf	___flge@ff2^0,w,c
  4606  0042C0  6E09               	movwf	??___flge^0,c
  4607  0042C2  0E00               	movlw	0
  4608  0042C4  1406               	andwf	(___flge@ff2+1)^0,w,c
  4609  0042C6  6E0A               	movwf	(??___flge+1)^0,c
  4610  0042C8  0E80               	movlw	128
  4611  0042CA  1407               	andwf	(___flge@ff2+2)^0,w,c
  4612  0042CC  6E0B               	movwf	(??___flge+2)^0,c
  4613  0042CE  0E7F               	movlw	127
  4614  0042D0  1408               	andwf	(___flge@ff2+3)^0,w,c
  4615  0042D2  6E0C               	movwf	(??___flge+3)^0,c
  4616  0042D4  5009               	movf	??___flge^0,w,c
  4617  0042D6  100A               	iorwf	(??___flge+1)^0,w,c
  4618  0042D8  100B               	iorwf	(??___flge+2)^0,w,c
  4619  0042DA  100C               	iorwf	(??___flge+3)^0,w,c
  4620  0042DC  A4D8               	btfss	status,2,c
  4621  0042DE  EF73  F021         	goto	u3831
  4622  0042E2  EF75  F021         	goto	u3830
  4623  0042E6                     u3831:
  4624  0042E6  EF7D  F021         	goto	l4054
  4625  0042EA                     u3830:
  4626  0042EA  0E00               	movlw	0
  4627  0042EC  6E05               	movwf	___flge@ff2^0,c
  4628  0042EE  0E00               	movlw	0
  4629  0042F0  6E06               	movwf	(___flge@ff2+1)^0,c
  4630  0042F2  0E00               	movlw	0
  4631  0042F4  6E07               	movwf	(___flge@ff2+2)^0,c
  4632  0042F6  0E00               	movlw	0
  4633  0042F8  6E08               	movwf	(___flge@ff2+3)^0,c
  4634  0042FA                     l4054:
  4635  0042FA  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4636  0042FC  EF82  F021         	goto	u3841
  4637  004300  EF84  F021         	goto	u3840
  4638  004304                     u3841:
  4639  004304  EF8D  F021         	goto	l4058
  4640  004308                     u3840:
  4641  004308  6C01               	negf	___flge@ff1^0,c
  4642  00430A  1E02               	comf	(___flge@ff1+1)^0,f,c
  4643  00430C  B0D8               	btfsc	status,0,c
  4644  00430E  2A02               	incf	(___flge@ff1+1)^0,f,c
  4645  004310  1E03               	comf	(___flge@ff1+2)^0,f,c
  4646  004312  B0D8               	btfsc	status,0,c
  4647  004314  2A03               	incf	(___flge@ff1+2)^0,f,c
  4648  004316  0E80               	movlw	128
  4649  004318  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4650  00431A                     l4058:
  4651  00431A  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4652  00431C  EF92  F021         	goto	u3851
  4653  004320  EF94  F021         	goto	u3850
  4654  004324                     u3851:
  4655  004324  EF9D  F021         	goto	l945
  4656  004328                     u3850:
  4657  004328  6C05               	negf	___flge@ff2^0,c
  4658  00432A  1E06               	comf	(___flge@ff2+1)^0,f,c
  4659  00432C  B0D8               	btfsc	status,0,c
  4660  00432E  2A06               	incf	(___flge@ff2+1)^0,f,c
  4661  004330  1E07               	comf	(___flge@ff2+2)^0,f,c
  4662  004332  B0D8               	btfsc	status,0,c
  4663  004334  2A07               	incf	(___flge@ff2+2)^0,f,c
  4664  004336  0E80               	movlw	128
  4665  004338  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4666  00433A                     l945:
  4667  00433A  0E00               	movlw	0
  4668  00433C  1A01               	xorwf	___flge@ff1^0,f,c
  4669  00433E  0E00               	movlw	0
  4670  004340  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4671  004342  0E00               	movlw	0
  4672  004344  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4673  004346  0E80               	movlw	128
  4674  004348  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4675  00434A  0E00               	movlw	0
  4676  00434C  1A05               	xorwf	___flge@ff2^0,f,c
  4677  00434E  0E00               	movlw	0
  4678  004350  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4679  004352  0E00               	movlw	0
  4680  004354  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4681  004356  0E80               	movlw	128
  4682  004358  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4683  00435A  5005               	movf	___flge@ff2^0,w,c
  4684  00435C  5C01               	subwf	___flge@ff1^0,w,c
  4685  00435E  5006               	movf	(___flge@ff2+1)^0,w,c
  4686  004360  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4687  004362  5007               	movf	(___flge@ff2+2)^0,w,c
  4688  004364  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4689  004366  5008               	movf	(___flge@ff2+3)^0,w,c
  4690  004368  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4691  00436A  B0D8               	btfsc	status,0,c
  4692  00436C  EFBA  F021         	goto	u3861
  4693  004370  EFBC  F021         	goto	u3860
  4694  004374                     u3861:
  4695  004374  EFBF  F021         	goto	l4064
  4696  004378                     u3860:
  4697  004378  90D8               	bcf	status,0,c
  4698  00437A  EFC0  F021         	goto	l950
  4699  00437E                     l4064:
  4700  00437E  80D8               	bsf	status,0,c
  4701  004380                     l950:
  4702  004380  0012               	return		;funcret
  4703  004382                     __end_of___flge:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function ___fltol *****************
  4707 ;; Defined at:
  4708 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  f1              4   90[COMRAM] unsigned char 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  exp1            1    5[BANK0 ] unsigned char 
  4713 ;;  sign1           1    4[BANK0 ] unsigned char 
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  4   90[COMRAM] long 
  4716 ;; Registers used:
  4717 ;;		wreg, status,2, status,0
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;Total ram usage:       10 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 1
  4730 ;; This function calls:
  4731 ;;		Nothing
  4732 ;; This function is called by:
  4733 ;;		_lroundf
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text10
  4738  004176                     __ptext10:
  4739                           	callstack 0
  4740  004176                     ___fltol:
  4741                           	callstack 26
  4742  004176  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4743  004178  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4744  00417A  0100               	movlb	0	; () banked
  4745  00417C  6F65               	movwf	___fltol@exp1& (0+255),b
  4746  00417E  5165               	movf	___fltol@exp1& (0+255),w,b
  4747  004180  A4D8               	btfss	status,2,c
  4748  004182  EFC5  F020         	goto	u3951
  4749  004186  EFC7  F020         	goto	u3950
  4750  00418A                     u3951:
  4751  00418A  EFD1  F020         	goto	l4170
  4752  00418E                     u3950:
  4753  00418E                     l4166:
  4754                           
  4755                           ; BSR set to: 0
  4756  00418E  0E00               	movlw	0
  4757  004190  6E5B               	movwf	?___fltol^0,c
  4758  004192  0E00               	movlw	0
  4759  004194  6E5C               	movwf	(?___fltol+1)^0,c
  4760  004196  0E00               	movlw	0
  4761  004198  6E5D               	movwf	(?___fltol+2)^0,c
  4762  00419A  0E00               	movlw	0
  4763  00419C  6E5E               	movwf	(?___fltol+3)^0,c
  4764  00419E  EF3E  F021         	goto	l977
  4765  0041A2                     l4170:
  4766                           
  4767                           ; BSR set to: 0
  4768  0041A2  C05B  F060         	movff	___fltol@f1,??___fltol
  4769  0041A6  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4770  0041AA  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4771  0041AE  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4772  0041B2  0E20               	movlw	32
  4773  0041B4  EFE1  F020         	goto	u3960
  4774  0041B8                     u3965:
  4775  0041B8  90D8               	bcf	status,0,c
  4776  0041BA  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4777  0041BC  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4778  0041BE  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4779  0041C0  3360               	rrcf	??___fltol& (0+255),f,b
  4780  0041C2                     u3960:
  4781  0041C2  2EE8               	decfsz	wreg,f,c
  4782  0041C4  EFDC  F020         	goto	u3965
  4783  0041C8  5160               	movf	??___fltol& (0+255),w,b
  4784  0041CA  6F64               	movwf	___fltol@sign1& (0+255),b
  4785  0041CC                     
  4786                           ; BSR set to: 0
  4787  0041CC  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4788  0041CE                     
  4789                           ; BSR set to: 0
  4790  0041CE  0EFF               	movlw	255
  4791  0041D0  165B               	andwf	___fltol@f1^0,f,c
  4792  0041D2  0EFF               	movlw	255
  4793  0041D4  165C               	andwf	(___fltol@f1+1)^0,f,c
  4794  0041D6  0EFF               	movlw	255
  4795  0041D8  165D               	andwf	(___fltol@f1+2)^0,f,c
  4796  0041DA  0E00               	movlw	0
  4797  0041DC  165E               	andwf	(___fltol@f1+3)^0,f,c
  4798  0041DE                     
  4799                           ; BSR set to: 0
  4800  0041DE  0E96               	movlw	150
  4801  0041E0  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4802  0041E2                     
  4803                           ; BSR set to: 0
  4804  0041E2  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4805  0041E4  EFF8  F020         	goto	u3970
  4806  0041E8  EFF6  F020         	goto	u3971
  4807  0041EC                     u3971:
  4808  0041EC  EF0E  F021         	goto	l4190
  4809  0041F0                     u3970:
  4810  0041F0                     
  4811                           ; BSR set to: 0
  4812  0041F0  5165               	movf	___fltol@exp1& (0+255),w,b
  4813  0041F2  0A80               	xorlw	128
  4814  0041F4  0F97               	addlw	151
  4815  0041F6  B0D8               	btfsc	status,0,c
  4816  0041F8  EF00  F021         	goto	u3981
  4817  0041FC  EF02  F021         	goto	u3980
  4818  004200                     u3981:
  4819  004200  EF04  F021         	goto	l4186
  4820  004204                     u3980:
  4821  004204  EFC7  F020         	goto	l4166
  4822  004208                     l4186:
  4823                           
  4824                           ; BSR set to: 0
  4825  004208  90D8               	bcf	status,0,c
  4826  00420A  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4827  00420C  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4828  00420E  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4829  004210  325B               	rrcf	___fltol@f1^0,f,c
  4830  004212                     
  4831                           ; BSR set to: 0
  4832  004212  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4833  004214  EF04  F021         	goto	l4186
  4834  004218  EF26  F021         	goto	l4200
  4835  00421C                     l4190:
  4836                           
  4837                           ; BSR set to: 0
  4838  00421C  0E1F               	movlw	31
  4839  00421E  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4840  004220  EF14  F021         	goto	u3991
  4841  004224  EF16  F021         	goto	u3990
  4842  004228                     u3991:
  4843  004228  EF1E  F021         	goto	l4198
  4844  00422C                     u3990:
  4845  00422C  EFC7  F020         	goto	l4166
  4846  004230                     l4196:
  4847                           
  4848                           ; BSR set to: 0
  4849  004230  90D8               	bcf	status,0,c
  4850  004232  365B               	rlcf	___fltol@f1^0,f,c
  4851  004234  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4852  004236  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4853  004238  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4854  00423A  0765               	decf	___fltol@exp1& (0+255),f,b
  4855  00423C                     l4198:
  4856                           
  4857                           ; BSR set to: 0
  4858  00423C  5165               	movf	___fltol@exp1& (0+255),w,b
  4859  00423E  A4D8               	btfss	status,2,c
  4860  004240  EF24  F021         	goto	u4001
  4861  004244  EF26  F021         	goto	u4000
  4862  004248                     u4001:
  4863  004248  EF18  F021         	goto	l4196
  4864  00424C                     u4000:
  4865  00424C                     l4200:
  4866                           
  4867                           ; BSR set to: 0
  4868  00424C  5164               	movf	___fltol@sign1& (0+255),w,b
  4869  00424E  B4D8               	btfsc	status,2,c
  4870  004250  EF2C  F021         	goto	u4011
  4871  004254  EF2E  F021         	goto	u4010
  4872  004258                     u4011:
  4873  004258  EF36  F021         	goto	l4204
  4874  00425C                     u4010:
  4875  00425C                     
  4876                           ; BSR set to: 0
  4877  00425C  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4878  00425E  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4879  004260  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4880  004262  6C5B               	negf	___fltol@f1^0,c
  4881  004264  0E00               	movlw	0
  4882  004266  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4883  004268  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4884  00426A  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4885  00426C                     l4204:
  4886                           
  4887                           ; BSR set to: 0
  4888  00426C  C05B  F05B         	movff	___fltol@f1,?___fltol
  4889  004270  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4890  004274  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4891  004278  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4892  00427C                     l977:
  4893                           
  4894                           ; BSR set to: 0
  4895  00427C  0012               	return		;funcret
  4896  00427E                     __end_of___fltol:
  4897                           	callstack 0
  4898                           
  4899 ;; *************** function _compare *****************
  4900 ;; Defined at:
  4901 ;;		line 304 in file "color.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;  lower           2   10[BANK0 ] unsigned int 
  4904 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4905 ;;  upper           2   14[BANK0 ] unsigned int 
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;  result          1   16[BANK0 ] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  1    wreg      unsigned char 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4917 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;Total ram usage:        7 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; Hardware stack levels required when called: 1
  4924 ;; This function calls:
  4925 ;;		Nothing
  4926 ;; This function is called by:
  4927 ;;		_detect_color
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text11
  4932  00509E                     __ptext11:
  4933                           	callstack 0
  4934  00509E                     _compare:
  4935                           	callstack 27
  4936  00509E                     
  4937                           ;color.c: 304: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 305: {;color.c: 306:     unsigned char result = 0;
  4938  00509E  0E00               	movlw	0
  4939  0050A0  0100               	movlb	0	; () banked
  4940  0050A2  6F70               	movwf	compare@result& (0+255),b
  4941  0050A4                     
  4942                           ; BSR set to: 0
  4943                           ;color.c: 307:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4944  0050A4  516C               	movf	compare@value2compare& (0+255),w,b
  4945  0050A6  5D6A               	subwf	compare@lower& (0+255),w,b
  4946  0050A8  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4947  0050AA  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4948  0050AC  B0D8               	btfsc	status,0,c
  4949  0050AE  EF5B  F028         	goto	u4131
  4950  0050B2  EF5D  F028         	goto	u4130
  4951  0050B6                     u4131:
  4952  0050B6  EF6A  F028         	goto	l156
  4953  0050BA                     u4130:
  4954  0050BA                     
  4955                           ; BSR set to: 0
  4956  0050BA  516C               	movf	compare@value2compare& (0+255),w,b
  4957  0050BC  5D6E               	subwf	compare@upper& (0+255),w,b
  4958  0050BE  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4959  0050C0  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4960  0050C2  A0D8               	btfss	status,0,c
  4961  0050C4  EF66  F028         	goto	u4141
  4962  0050C8  EF68  F028         	goto	u4140
  4963  0050CC                     u4141:
  4964  0050CC  EF6A  F028         	goto	l156
  4965  0050D0                     u4140:
  4966  0050D0                     
  4967                           ; BSR set to: 0
  4968  0050D0  0E01               	movlw	1
  4969  0050D2  6F70               	movwf	compare@result& (0+255),b
  4970  0050D4                     l156:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;color.c: 308:     return result;
  4974  0050D4  5170               	movf	compare@result& (0+255),w,b
  4975  0050D6                     
  4976                           ; BSR set to: 0
  4977  0050D6  0012               	return		;funcret
  4978  0050D8                     __end_of_compare:
  4979                           	callstack 0
  4980                           
  4981 ;; *************** function ___xxtofl *****************
  4982 ;; Defined at:
  4983 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  sign            1    wreg     unsigned char 
  4986 ;;  val             4    0[COMRAM] long 
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;  sign            1    8[COMRAM] unsigned char 
  4989 ;;  arg             4   10[COMRAM] unsigned long 
  4990 ;;  exp             1    9[COMRAM] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  4    0[COMRAM] unsigned char 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;Total ram usage:       14 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_detect_color
  5011 ;;		_check_color_reading
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text12
  5016  003788                     __ptext12:
  5017                           	callstack 0
  5018  003788                     ___xxtofl:
  5019                           	callstack 27
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;incstack = 0
  5023                           ;___xxtofl@sign stored from wreg
  5024  003788  6E09               	movwf	___xxtofl@sign^0,c
  5025  00378A  5009               	movf	___xxtofl@sign^0,w,c
  5026  00378C  B4D8               	btfsc	status,2,c
  5027  00378E  EFCB  F01B         	goto	u4481
  5028  003792  EFCD  F01B         	goto	u4480
  5029  003796                     u4481:
  5030  003796  EFEF  F01B         	goto	l1335
  5031  00379A                     u4480:
  5032  00379A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5033  00379C  EFD4  F01B         	goto	u4490
  5034  0037A0  EFD2  F01B         	goto	u4491
  5035  0037A4                     u4491:
  5036  0037A4  EFEF  F01B         	goto	l1335
  5037  0037A8                     u4490:
  5038  0037A8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5039  0037AC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5040  0037B0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5041  0037B4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5042  0037B8  1E05               	comf	??___xxtofl^0,f,c
  5043  0037BA  1E06               	comf	(??___xxtofl+1)^0,f,c
  5044  0037BC  1E07               	comf	(??___xxtofl+2)^0,f,c
  5045  0037BE  1E08               	comf	(??___xxtofl+3)^0,f,c
  5046  0037C0  2A05               	incf	??___xxtofl^0,f,c
  5047  0037C2  0E00               	movlw	0
  5048  0037C4  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5049  0037C6  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5050  0037C8  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5051  0037CA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5052  0037CE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5053  0037D2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5054  0037D6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5055  0037DA  EFF7  F01B         	goto	l4526
  5056  0037DE                     l1335:
  5057  0037DE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5058  0037E2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5059  0037E6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5060  0037EA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5061  0037EE                     l4526:
  5062  0037EE  5001               	movf	___xxtofl@val^0,w,c
  5063  0037F0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5064  0037F2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5065  0037F4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5066  0037F6  A4D8               	btfss	status,2,c
  5067  0037F8  EF00  F01C         	goto	u4501
  5068  0037FC  EF02  F01C         	goto	u4500
  5069  003800                     u4501:
  5070  003800  EF0C  F01C         	goto	l4532
  5071  003804                     u4500:
  5072  003804  0E00               	movlw	0
  5073  003806  6E01               	movwf	?___xxtofl^0,c
  5074  003808  0E00               	movlw	0
  5075  00380A  6E02               	movwf	(?___xxtofl+1)^0,c
  5076  00380C  0E00               	movlw	0
  5077  00380E  6E03               	movwf	(?___xxtofl+2)^0,c
  5078  003810  0E00               	movlw	0
  5079  003812  6E04               	movwf	(?___xxtofl+3)^0,c
  5080  003814  EF9D  F01C         	goto	l1338
  5081  003818                     l4532:
  5082  003818  0E96               	movlw	150
  5083  00381A  6E0A               	movwf	___xxtofl@exp^0,c
  5084  00381C  EF16  F01C         	goto	l4536
  5085  003820                     l4534:
  5086  003820  2A0A               	incf	___xxtofl@exp^0,f,c
  5087  003822  90D8               	bcf	status,0,c
  5088  003824  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5089  003826  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5090  003828  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5091  00382A  320B               	rrcf	___xxtofl@arg^0,f,c
  5092  00382C                     l4536:
  5093  00382C  0E00               	movlw	0
  5094  00382E  140B               	andwf	___xxtofl@arg^0,w,c
  5095  003830  6E05               	movwf	??___xxtofl^0,c
  5096  003832  0E00               	movlw	0
  5097  003834  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5098  003836  6E06               	movwf	(??___xxtofl+1)^0,c
  5099  003838  0E00               	movlw	0
  5100  00383A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5101  00383C  6E07               	movwf	(??___xxtofl+2)^0,c
  5102  00383E  0EFE               	movlw	254
  5103  003840  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5104  003842  6E08               	movwf	(??___xxtofl+3)^0,c
  5105  003844  5005               	movf	??___xxtofl^0,w,c
  5106  003846  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5107  003848  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5108  00384A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5109  00384C  A4D8               	btfss	status,2,c
  5110  00384E  EF2B  F01C         	goto	u4511
  5111  003852  EF2D  F01C         	goto	u4510
  5112  003856                     u4511:
  5113  003856  EF10  F01C         	goto	l4534
  5114  00385A                     u4510:
  5115  00385A  EF3B  F01C         	goto	l1342
  5116  00385E                     l4538:
  5117  00385E  2A0A               	incf	___xxtofl@exp^0,f,c
  5118  003860  0E01               	movlw	1
  5119  003862  260B               	addwf	___xxtofl@arg^0,f,c
  5120  003864  0E00               	movlw	0
  5121  003866  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5122  003868  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5123  00386A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5124  00386C  90D8               	bcf	status,0,c
  5125  00386E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5126  003870  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5127  003872  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5128  003874  320B               	rrcf	___xxtofl@arg^0,f,c
  5129  003876                     l1342:
  5130  003876  0E00               	movlw	0
  5131  003878  140B               	andwf	___xxtofl@arg^0,w,c
  5132  00387A  6E05               	movwf	??___xxtofl^0,c
  5133  00387C  0E00               	movlw	0
  5134  00387E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5135  003880  6E06               	movwf	(??___xxtofl+1)^0,c
  5136  003882  0E00               	movlw	0
  5137  003884  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5138  003886  6E07               	movwf	(??___xxtofl+2)^0,c
  5139  003888  0EFF               	movlw	255
  5140  00388A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5141  00388C  6E08               	movwf	(??___xxtofl+3)^0,c
  5142  00388E  5005               	movf	??___xxtofl^0,w,c
  5143  003890  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5144  003892  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5145  003894  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5146  003896  A4D8               	btfss	status,2,c
  5147  003898  EF50  F01C         	goto	u4521
  5148  00389C  EF52  F01C         	goto	u4520
  5149  0038A0                     u4521:
  5150  0038A0  EF2F  F01C         	goto	l4538
  5151  0038A4                     u4520:
  5152  0038A4  EF5A  F01C         	goto	l4546
  5153  0038A8                     l4544:
  5154  0038A8  060A               	decf	___xxtofl@exp^0,f,c
  5155  0038AA  90D8               	bcf	status,0,c
  5156  0038AC  360B               	rlcf	___xxtofl@arg^0,f,c
  5157  0038AE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5158  0038B0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5159  0038B2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5160  0038B4                     l4546:
  5161  0038B4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5162  0038B6  EF5F  F01C         	goto	u4531
  5163  0038BA  EF61  F01C         	goto	u4530
  5164  0038BE                     u4531:
  5165  0038BE  EF69  F01C         	goto	l1349
  5166  0038C2                     u4530:
  5167  0038C2  0E02               	movlw	2
  5168  0038C4  600A               	cpfslt	___xxtofl@exp^0,c
  5169  0038C6  EF67  F01C         	goto	u4541
  5170  0038CA  EF69  F01C         	goto	u4540
  5171  0038CE                     u4541:
  5172  0038CE  EF54  F01C         	goto	l4544
  5173  0038D2                     u4540:
  5174  0038D2                     l1349:
  5175  0038D2  B00A               	btfsc	___xxtofl@exp^0,0,c
  5176  0038D4  EF6E  F01C         	goto	u4551
  5177  0038D8  EF70  F01C         	goto	u4550
  5178  0038DC                     u4551:
  5179  0038DC  EF71  F01C         	goto	l4552
  5180  0038E0                     u4550:
  5181  0038E0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5182  0038E2                     l4552:
  5183  0038E2  90D8               	bcf	status,0,c
  5184  0038E4  320A               	rrcf	___xxtofl@exp^0,f,c
  5185  0038E6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5186  0038EA  6A06               	clrf	(??___xxtofl+1)^0,c
  5187  0038EC  6A07               	clrf	(??___xxtofl+2)^0,c
  5188  0038EE  6A08               	clrf	(??___xxtofl+3)^0,c
  5189  0038F0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5190  0038F4  6A07               	clrf	(??___xxtofl+2)^0,c
  5191  0038F6  6A06               	clrf	(??___xxtofl+1)^0,c
  5192  0038F8  6A05               	clrf	??___xxtofl^0,c
  5193  0038FA  5005               	movf	??___xxtofl^0,w,c
  5194  0038FC  120B               	iorwf	___xxtofl@arg^0,f,c
  5195  0038FE  5006               	movf	(??___xxtofl+1)^0,w,c
  5196  003900  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5197  003902  5007               	movf	(??___xxtofl+2)^0,w,c
  5198  003904  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5199  003906  5008               	movf	(??___xxtofl+3)^0,w,c
  5200  003908  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5201  00390A  5009               	movf	___xxtofl@sign^0,w,c
  5202  00390C  B4D8               	btfsc	status,2,c
  5203  00390E  EF8B  F01C         	goto	u4561
  5204  003912  EF8D  F01C         	goto	u4560
  5205  003916                     u4561:
  5206  003916  EF95  F01C         	goto	l4562
  5207  00391A                     u4560:
  5208  00391A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5209  00391C  EF94  F01C         	goto	u4570
  5210  003920  EF92  F01C         	goto	u4571
  5211  003924                     u4571:
  5212  003924  EF95  F01C         	goto	l4562
  5213  003928                     u4570:
  5214  003928  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5215  00392A                     l4562:
  5216  00392A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5217  00392E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5218  003932  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5219  003936  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5220  00393A                     l1338:
  5221  00393A  0012               	return		;funcret
  5222  00393C                     __end_of___xxtofl:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function ___fldiv *****************
  5226 ;; Defined at:
  5227 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  b               4   14[COMRAM] unsigned char 
  5230 ;;  a               4   18[COMRAM] unsigned char 
  5231 ;; Auto vars:     Size  Location     Type
  5232 ;;  grs             4   33[COMRAM] unsigned long 
  5233 ;;  rem             4   26[COMRAM] unsigned long 
  5234 ;;  new_exp         2   31[COMRAM] short 
  5235 ;;  aexp            1   38[COMRAM] unsigned char 
  5236 ;;  bexp            1   37[COMRAM] unsigned char 
  5237 ;;  sign            1   30[COMRAM] unsigned char 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  4   14[COMRAM] unsigned char 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:       25 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 1
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_detect_color
  5258 ;;		_check_color_reading
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           	psect	text13
  5263  0027B4                     __ptext13:
  5264                           	callstack 0
  5265  0027B4                     ___fldiv:
  5266                           	callstack 27
  5267  0027B4  5012               	movf	(___fldiv@b+3)^0,w,c
  5268  0027B6  0B80               	andlw	128
  5269  0027B8  6E1F               	movwf	___fldiv@sign^0,c
  5270  0027BA  5012               	movf	(___fldiv@b+3)^0,w,c
  5271  0027BC  2412               	addwf	(___fldiv@b+3)^0,w,c
  5272  0027BE  6E26               	movwf	___fldiv@bexp^0,c
  5273  0027C0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5274  0027C2  EFE5  F013         	goto	u4251
  5275  0027C6  EFE7  F013         	goto	u4250
  5276  0027CA                     u4251:
  5277  0027CA  EFE8  F013         	goto	l4388
  5278  0027CE                     u4250:
  5279  0027CE  8026               	bsf	___fldiv@bexp^0,0,c
  5280  0027D0                     l4388:
  5281  0027D0  5026               	movf	___fldiv@bexp^0,w,c
  5282  0027D2  B4D8               	btfsc	status,2,c
  5283  0027D4  EFEE  F013         	goto	u4261
  5284  0027D8  EFF0  F013         	goto	u4260
  5285  0027DC                     u4261:
  5286  0027DC  EF05  F014         	goto	l4398
  5287  0027E0                     u4260:
  5288  0027E0  2826               	incf	___fldiv@bexp^0,w,c
  5289  0027E2  A4D8               	btfss	status,2,c
  5290  0027E4  EFF6  F013         	goto	u4271
  5291  0027E8  EFF8  F013         	goto	u4270
  5292  0027EC                     u4271:
  5293  0027EC  EF00  F014         	goto	l4394
  5294  0027F0                     u4270:
  5295  0027F0  0E00               	movlw	0
  5296  0027F2  6E0F               	movwf	___fldiv@b^0,c
  5297  0027F4  0E00               	movlw	0
  5298  0027F6  6E10               	movwf	(___fldiv@b+1)^0,c
  5299  0027F8  0E00               	movlw	0
  5300  0027FA  6E11               	movwf	(___fldiv@b+2)^0,c
  5301  0027FC  0E00               	movlw	0
  5302  0027FE  6E12               	movwf	(___fldiv@b+3)^0,c
  5303  002800                     l4394:
  5304  002800  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5305  002802  0E00               	movlw	0
  5306  002804  6E12               	movwf	(___fldiv@b+3)^0,c
  5307  002806  EF0D  F014         	goto	l4400
  5308  00280A                     l4398:
  5309  00280A  0E00               	movlw	0
  5310  00280C  6E0F               	movwf	___fldiv@b^0,c
  5311  00280E  0E00               	movlw	0
  5312  002810  6E10               	movwf	(___fldiv@b+1)^0,c
  5313  002812  0E00               	movlw	0
  5314  002814  6E11               	movwf	(___fldiv@b+2)^0,c
  5315  002816  0E00               	movlw	0
  5316  002818  6E12               	movwf	(___fldiv@b+3)^0,c
  5317  00281A                     l4400:
  5318  00281A  5016               	movf	(___fldiv@a+3)^0,w,c
  5319  00281C  0B80               	andlw	128
  5320  00281E  1A1F               	xorwf	___fldiv@sign^0,f,c
  5321  002820  5016               	movf	(___fldiv@a+3)^0,w,c
  5322  002822  2416               	addwf	(___fldiv@a+3)^0,w,c
  5323  002824  6E27               	movwf	___fldiv@aexp^0,c
  5324  002826  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5325  002828  EF18  F014         	goto	u4281
  5326  00282C  EF1A  F014         	goto	u4280
  5327  002830                     u4281:
  5328  002830  EF1B  F014         	goto	l4408
  5329  002834                     u4280:
  5330  002834  8027               	bsf	___fldiv@aexp^0,0,c
  5331  002836                     l4408:
  5332  002836  5027               	movf	___fldiv@aexp^0,w,c
  5333  002838  B4D8               	btfsc	status,2,c
  5334  00283A  EF21  F014         	goto	u4291
  5335  00283E  EF23  F014         	goto	u4290
  5336  002842                     u4291:
  5337  002842  EF38  F014         	goto	l4418
  5338  002846                     u4290:
  5339  002846  2827               	incf	___fldiv@aexp^0,w,c
  5340  002848  A4D8               	btfss	status,2,c
  5341  00284A  EF29  F014         	goto	u4301
  5342  00284E  EF2B  F014         	goto	u4300
  5343  002852                     u4301:
  5344  002852  EF33  F014         	goto	l4414
  5345  002856                     u4300:
  5346  002856  0E00               	movlw	0
  5347  002858  6E13               	movwf	___fldiv@a^0,c
  5348  00285A  0E00               	movlw	0
  5349  00285C  6E14               	movwf	(___fldiv@a+1)^0,c
  5350  00285E  0E00               	movlw	0
  5351  002860  6E15               	movwf	(___fldiv@a+2)^0,c
  5352  002862  0E00               	movlw	0
  5353  002864  6E16               	movwf	(___fldiv@a+3)^0,c
  5354  002866                     l4414:
  5355  002866  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5356  002868  0E00               	movlw	0
  5357  00286A  6E16               	movwf	(___fldiv@a+3)^0,c
  5358  00286C  EF40  F014         	goto	l4420
  5359  002870                     l4418:
  5360  002870  0E00               	movlw	0
  5361  002872  6E13               	movwf	___fldiv@a^0,c
  5362  002874  0E00               	movlw	0
  5363  002876  6E14               	movwf	(___fldiv@a+1)^0,c
  5364  002878  0E00               	movlw	0
  5365  00287A  6E15               	movwf	(___fldiv@a+2)^0,c
  5366  00287C  0E00               	movlw	0
  5367  00287E  6E16               	movwf	(___fldiv@a+3)^0,c
  5368  002880                     l4420:
  5369  002880  5013               	movf	___fldiv@a^0,w,c
  5370  002882  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5371  002884  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5372  002886  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5373  002888  A4D8               	btfss	status,2,c
  5374  00288A  EF49  F014         	goto	u4311
  5375  00288E  EF4B  F014         	goto	u4310
  5376  002892                     u4311:
  5377  002892  EF63  F014         	goto	l4432
  5378  002896                     u4310:
  5379  002896  0E00               	movlw	0
  5380  002898  6E0F               	movwf	___fldiv@b^0,c
  5381  00289A  0E00               	movlw	0
  5382  00289C  6E10               	movwf	(___fldiv@b+1)^0,c
  5383  00289E  0E00               	movlw	0
  5384  0028A0  6E11               	movwf	(___fldiv@b+2)^0,c
  5385  0028A2  0E00               	movlw	0
  5386  0028A4  6E12               	movwf	(___fldiv@b+3)^0,c
  5387  0028A6  0E80               	movlw	128
  5388  0028A8  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5389  0028AA  0E7F               	movlw	127
  5390  0028AC  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5391  0028AE                     l4426:
  5392  0028AE  501F               	movf	___fldiv@sign^0,w,c
  5393  0028B0  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5394  0028B2  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5395  0028B6  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5396  0028BA  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5397  0028BE  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5398  0028C2  EFA6  F015         	goto	l1262
  5399  0028C6                     l4432:
  5400  0028C6  5026               	movf	___fldiv@bexp^0,w,c
  5401  0028C8  A4D8               	btfss	status,2,c
  5402  0028CA  EF69  F014         	goto	u4321
  5403  0028CE  EF6B  F014         	goto	u4320
  5404  0028D2                     u4321:
  5405  0028D2  EF75  F014         	goto	l4440
  5406  0028D6                     u4320:
  5407  0028D6  0E00               	movlw	0
  5408  0028D8  6E0F               	movwf	?___fldiv^0,c
  5409  0028DA  0E00               	movlw	0
  5410  0028DC  6E10               	movwf	(?___fldiv+1)^0,c
  5411  0028DE  0E00               	movlw	0
  5412  0028E0  6E11               	movwf	(?___fldiv+2)^0,c
  5413  0028E2  0E00               	movlw	0
  5414  0028E4  6E12               	movwf	(?___fldiv+3)^0,c
  5415  0028E6  EFA6  F015         	goto	l1262
  5416  0028EA                     l4440:
  5417  0028EA  5027               	movf	___fldiv@aexp^0,w,c
  5418  0028EC  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5419  0028F0  6A18               	clrf	(??___fldiv+1)^0,c
  5420  0028F2  5E17               	subwf	??___fldiv^0,f,c
  5421  0028F4  0E00               	movlw	0
  5422  0028F6  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5423  0028F8  0E7F               	movlw	127
  5424  0028FA  2417               	addwf	??___fldiv^0,w,c
  5425  0028FC  6E20               	movwf	___fldiv@new_exp^0,c
  5426  0028FE  0E00               	movlw	0
  5427  002900  2018               	addwfc	(??___fldiv+1)^0,w,c
  5428  002902  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5429  002904  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5430  002908  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5431  00290C  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5432  002910  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5433  002914  0E00               	movlw	0
  5434  002916  6E0F               	movwf	___fldiv@b^0,c
  5435  002918  0E00               	movlw	0
  5436  00291A  6E10               	movwf	(___fldiv@b+1)^0,c
  5437  00291C  0E00               	movlw	0
  5438  00291E  6E11               	movwf	(___fldiv@b+2)^0,c
  5439  002920  0E00               	movlw	0
  5440  002922  6E12               	movwf	(___fldiv@b+3)^0,c
  5441  002924  0E00               	movlw	0
  5442  002926  6E22               	movwf	___fldiv@grs^0,c
  5443  002928  0E00               	movlw	0
  5444  00292A  6E23               	movwf	(___fldiv@grs+1)^0,c
  5445  00292C  0E00               	movlw	0
  5446  00292E  6E24               	movwf	(___fldiv@grs+2)^0,c
  5447  002930  0E00               	movlw	0
  5448  002932  6E25               	movwf	(___fldiv@grs+3)^0,c
  5449  002934  0E00               	movlw	0
  5450  002936  6E27               	movwf	___fldiv@aexp^0,c
  5451  002938  EFD6  F014         	goto	l1264
  5452  00293C                     l4450:
  5453  00293C  5027               	movf	___fldiv@aexp^0,w,c
  5454  00293E  B4D8               	btfsc	status,2,c
  5455  002940  EFA4  F014         	goto	u4331
  5456  002944  EFA6  F014         	goto	u4330
  5457  002948                     u4331:
  5458  002948  EFBD  F014         	goto	l4458
  5459  00294C                     u4330:
  5460  00294C  90D8               	bcf	status,0,c
  5461  00294E  361B               	rlcf	___fldiv@rem^0,f,c
  5462  002950  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5463  002952  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5464  002954  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5465  002956  90D8               	bcf	status,0,c
  5466  002958  360F               	rlcf	___fldiv@b^0,f,c
  5467  00295A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5468  00295C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5469  00295E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5470  002960  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5471  002962  EFB5  F014         	goto	u4341
  5472  002966  EFB7  F014         	goto	u4340
  5473  00296A                     u4341:
  5474  00296A  EFB8  F014         	goto	l1267
  5475  00296E                     u4340:
  5476  00296E  800F               	bsf	___fldiv@b^0,0,c
  5477  002970                     l1267:
  5478  002970  90D8               	bcf	status,0,c
  5479  002972  3622               	rlcf	___fldiv@grs^0,f,c
  5480  002974  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5481  002976  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5482  002978  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5483  00297A                     l4458:
  5484  00297A  5013               	movf	___fldiv@a^0,w,c
  5485  00297C  5C1B               	subwf	___fldiv@rem^0,w,c
  5486  00297E  5014               	movf	(___fldiv@a+1)^0,w,c
  5487  002980  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5488  002982  5015               	movf	(___fldiv@a+2)^0,w,c
  5489  002984  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5490  002986  5016               	movf	(___fldiv@a+3)^0,w,c
  5491  002988  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5492  00298A  A0D8               	btfss	status,0,c
  5493  00298C  EFCA  F014         	goto	u4351
  5494  002990  EFCC  F014         	goto	u4350
  5495  002994                     u4351:
  5496  002994  EFD5  F014         	goto	l4464
  5497  002998                     u4350:
  5498  002998  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5499  00299A  5013               	movf	___fldiv@a^0,w,c
  5500  00299C  5E1B               	subwf	___fldiv@rem^0,f,c
  5501  00299E  5014               	movf	(___fldiv@a+1)^0,w,c
  5502  0029A0  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5503  0029A2  5015               	movf	(___fldiv@a+2)^0,w,c
  5504  0029A4  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5505  0029A6  5016               	movf	(___fldiv@a+3)^0,w,c
  5506  0029A8  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5507  0029AA                     l4464:
  5508  0029AA  2A27               	incf	___fldiv@aexp^0,f,c
  5509  0029AC                     l1264:
  5510  0029AC  0E19               	movlw	25
  5511  0029AE  6427               	cpfsgt	___fldiv@aexp^0,c
  5512  0029B0  EFDC  F014         	goto	u4361
  5513  0029B4  EFDE  F014         	goto	u4360
  5514  0029B8                     u4361:
  5515  0029B8  EF9E  F014         	goto	l4450
  5516  0029BC                     u4360:
  5517  0029BC  501B               	movf	___fldiv@rem^0,w,c
  5518  0029BE  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5519  0029C0  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5520  0029C2  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5521  0029C4  B4D8               	btfsc	status,2,c
  5522  0029C6  EFE7  F014         	goto	u4371
  5523  0029CA  EFE9  F014         	goto	u4370
  5524  0029CE                     u4371:
  5525  0029CE  EF01  F015         	goto	l4476
  5526  0029D2                     u4370:
  5527  0029D2  8022               	bsf	___fldiv@grs^0,0,c
  5528  0029D4  EF01  F015         	goto	l4476
  5529  0029D8                     l4470:
  5530  0029D8  90D8               	bcf	status,0,c
  5531  0029DA  360F               	rlcf	___fldiv@b^0,f,c
  5532  0029DC  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5533  0029DE  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5534  0029E0  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5535  0029E2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5536  0029E4  EFF6  F014         	goto	u4381
  5537  0029E8  EFF8  F014         	goto	u4380
  5538  0029EC                     u4381:
  5539  0029EC  EFF9  F014         	goto	l1273
  5540  0029F0                     u4380:
  5541  0029F0  800F               	bsf	___fldiv@b^0,0,c
  5542  0029F2                     l1273:
  5543  0029F2  90D8               	bcf	status,0,c
  5544  0029F4  3622               	rlcf	___fldiv@grs^0,f,c
  5545  0029F6  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5546  0029F8  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5547  0029FA  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5548  0029FC  0620               	decf	___fldiv@new_exp^0,f,c
  5549  0029FE  A0D8               	btfss	status,0,c
  5550  002A00  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5551  002A02                     l4476:
  5552  002A02  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5553  002A04  EF06  F015         	goto	u4391
  5554  002A08  EF08  F015         	goto	u4390
  5555  002A0C                     u4391:
  5556  002A0C  EFEC  F014         	goto	l4470
  5557  002A10                     u4390:
  5558  002A10  0E00               	movlw	0
  5559  002A12  6E27               	movwf	___fldiv@aexp^0,c
  5560  002A14  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5561  002A16  EF0F  F015         	goto	u4401
  5562  002A1A  EF11  F015         	goto	u4400
  5563  002A1E                     u4401:
  5564  002A1E  EF35  F015         	goto	l1275
  5565  002A22                     u4400:
  5566  002A22  0EFF               	movlw	255
  5567  002A24  1422               	andwf	___fldiv@grs^0,w,c
  5568  002A26  6E17               	movwf	??___fldiv^0,c
  5569  002A28  0EFF               	movlw	255
  5570  002A2A  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5571  002A2C  6E18               	movwf	(??___fldiv+1)^0,c
  5572  002A2E  0EFF               	movlw	255
  5573  002A30  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5574  002A32  6E19               	movwf	(??___fldiv+2)^0,c
  5575  002A34  0E7F               	movlw	127
  5576  002A36  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5577  002A38  6E1A               	movwf	(??___fldiv+3)^0,c
  5578  002A3A  5017               	movf	??___fldiv^0,w,c
  5579  002A3C  1018               	iorwf	(??___fldiv+1)^0,w,c
  5580  002A3E  1019               	iorwf	(??___fldiv+2)^0,w,c
  5581  002A40  101A               	iorwf	(??___fldiv+3)^0,w,c
  5582  002A42  B4D8               	btfsc	status,2,c
  5583  002A44  EF26  F015         	goto	u4411
  5584  002A48  EF28  F015         	goto	u4410
  5585  002A4C                     u4411:
  5586  002A4C  EF2C  F015         	goto	l1276
  5587  002A50                     u4410:
  5588  002A50                     l4484:
  5589  002A50  0E01               	movlw	1
  5590  002A52  6E27               	movwf	___fldiv@aexp^0,c
  5591  002A54  EF35  F015         	goto	l1275
  5592  002A58                     l1276:
  5593  002A58  A00F               	btfss	___fldiv@b^0,0,c
  5594  002A5A  EF31  F015         	goto	u4421
  5595  002A5E  EF33  F015         	goto	u4420
  5596  002A62                     u4421:
  5597  002A62  EF35  F015         	goto	l1275
  5598  002A66                     u4420:
  5599  002A66  EF28  F015         	goto	l4484
  5600  002A6A                     l1275:
  5601  002A6A  5027               	movf	___fldiv@aexp^0,w,c
  5602  002A6C  B4D8               	btfsc	status,2,c
  5603  002A6E  EF3B  F015         	goto	u4431
  5604  002A72  EF3D  F015         	goto	u4430
  5605  002A76                     u4431:
  5606  002A76  EF61  F015         	goto	l4496
  5607  002A7A                     u4430:
  5608  002A7A  0E01               	movlw	1
  5609  002A7C  260F               	addwf	___fldiv@b^0,f,c
  5610  002A7E  0E00               	movlw	0
  5611  002A80  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5612  002A82  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5613  002A84  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5614  002A86  A012               	btfss	(___fldiv@b+3)^0,0,c
  5615  002A88  EF48  F015         	goto	u4441
  5616  002A8C  EF4A  F015         	goto	u4440
  5617  002A90                     u4441:
  5618  002A90  EF61  F015         	goto	l4496
  5619  002A94                     u4440:
  5620  002A94  C00F  F017         	movff	___fldiv@b,??___fldiv
  5621  002A98  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5622  002A9C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5623  002AA0  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5624  002AA4  341A               	rlcf	(??___fldiv+3)^0,w,c
  5625  002AA6  321A               	rrcf	(??___fldiv+3)^0,f,c
  5626  002AA8  3219               	rrcf	(??___fldiv+2)^0,f,c
  5627  002AAA  3218               	rrcf	(??___fldiv+1)^0,f,c
  5628  002AAC  3217               	rrcf	??___fldiv^0,f,c
  5629  002AAE  C017  F00F         	movff	??___fldiv,___fldiv@b
  5630  002AB2  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5631  002AB6  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5632  002ABA  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5633  002ABE  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5634  002AC0  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5635  002AC2                     l4496:
  5636  002AC2  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5637  002AC4  EF6C  F015         	goto	u4451
  5638  002AC8  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5639  002ACA  E108               	bnz	u4450
  5640  002ACC  2820               	incf	___fldiv@new_exp^0,w,c
  5641  002ACE  A0D8               	btfss	status,0,c
  5642  002AD0  EF6C  F015         	goto	u4451
  5643  002AD4  EF6E  F015         	goto	u4450
  5644  002AD8                     u4451:
  5645  002AD8  EF79  F015         	goto	l4500
  5646  002ADC                     u4450:
  5647  002ADC  0E00               	movlw	0
  5648  002ADE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5649  002AE0  6820               	setf	___fldiv@new_exp^0,c
  5650  002AE2  0E00               	movlw	0
  5651  002AE4  6E0F               	movwf	___fldiv@b^0,c
  5652  002AE6  0E00               	movlw	0
  5653  002AE8  6E10               	movwf	(___fldiv@b+1)^0,c
  5654  002AEA  0E00               	movlw	0
  5655  002AEC  6E11               	movwf	(___fldiv@b+2)^0,c
  5656  002AEE  0E00               	movlw	0
  5657  002AF0  6E12               	movwf	(___fldiv@b+3)^0,c
  5658  002AF2                     l4500:
  5659  002AF2  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5660  002AF4  EF86  F015         	goto	u4460
  5661  002AF8  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5662  002AFA  E106               	bnz	u4461
  5663  002AFC  0420               	decf	___fldiv@new_exp^0,w,c
  5664  002AFE  B0D8               	btfsc	status,0,c
  5665  002B00  EF84  F015         	goto	u4461
  5666  002B04  EF86  F015         	goto	u4460
  5667  002B08                     u4461:
  5668  002B08  EF94  F015         	goto	l4504
  5669  002B0C                     u4460:
  5670  002B0C  0E00               	movlw	0
  5671  002B0E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5672  002B10  0E00               	movlw	0
  5673  002B12  6E20               	movwf	___fldiv@new_exp^0,c
  5674  002B14  0E00               	movlw	0
  5675  002B16  6E0F               	movwf	___fldiv@b^0,c
  5676  002B18  0E00               	movlw	0
  5677  002B1A  6E10               	movwf	(___fldiv@b+1)^0,c
  5678  002B1C  0E00               	movlw	0
  5679  002B1E  6E11               	movwf	(___fldiv@b+2)^0,c
  5680  002B20  0E00               	movlw	0
  5681  002B22  6E12               	movwf	(___fldiv@b+3)^0,c
  5682  002B24  0E00               	movlw	0
  5683  002B26  6E1F               	movwf	___fldiv@sign^0,c
  5684  002B28                     l4504:
  5685  002B28  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5686  002B2C  A026               	btfss	___fldiv@bexp^0,0,c
  5687  002B2E  EF9B  F015         	goto	u4471
  5688  002B32  EF9D  F015         	goto	u4470
  5689  002B36                     u4471:
  5690  002B36  EFA0  F015         	goto	l4510
  5691  002B3A                     u4470:
  5692  002B3A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5693  002B3C  EFA1  F015         	goto	l4512
  5694  002B40                     l4510:
  5695  002B40  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5696  002B42                     l4512:
  5697  002B42  90D8               	bcf	status,0,c
  5698  002B44  3026               	rrcf	___fldiv@bexp^0,w,c
  5699  002B46  6E12               	movwf	(___fldiv@b+3)^0,c
  5700  002B48  EF57  F014         	goto	l4426
  5701  002B4C                     l1262:
  5702  002B4C  0012               	return		;funcret
  5703  002B4E                     __end_of___fldiv:
  5704                           	callstack 0
  5705                           
  5706 ;; *************** function _short_burst *****************
  5707 ;; Defined at:
  5708 ;;		line 11 in file "movement.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5711 ;;		 -> main@motorL(10), 
  5712 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5713 ;;		 -> main@motorR(10), 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;		None
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;Total ram usage:        6 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 4
  5732 ;; This function calls:
  5733 ;;		_fullSpeedAhead
  5734 ;;		_stop
  5735 ;; This function is called by:
  5736 ;;		_main
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           	psect	text14
  5741  004C1C                     __ptext14:
  5742                           	callstack 0
  5743  004C1C                     _short_burst:
  5744                           	callstack 26
  5745  004C1C                     
  5746                           ;movement.c: 11: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          12: {;movement.c: 13:     fullSpeedAhead(mL,mR);
  5747  004C1C  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  5748  004C20  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  5749  004C24  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  5750  004C28  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  5751  004C2C  ECFD  F024         	call	_fullSpeedAhead	;wreg free
  5752  004C30                     
  5753                           ;movement.c: 14:     _delay((unsigned long)((300)*(64000000/4000.0)));
  5754  004C30  0E19               	movlw	25
  5755  004C32  6E25               	movwf	(??_short_burst+1)^0,c
  5756  004C34  0E5A               	movlw	90
  5757  004C36  6E24               	movwf	??_short_burst^0,c
  5758  004C38  0EB2               	movlw	178
  5759  004C3A                     u5387:
  5760  004C3A  2EE8               	decfsz	wreg,f,c
  5761  004C3C  D7FE               	bra	u5387
  5762  004C3E  2E24               	decfsz	??_short_burst^0,f,c
  5763  004C40  D7FC               	bra	u5387
  5764  004C42  2E25               	decfsz	(??_short_burst+1)^0,f,c
  5765  004C44  D7FA               	bra	u5387
  5766  004C46                     
  5767                           ;movement.c: 15:     stop(mL,mR);
  5768  004C46  C020  F01A         	movff	short_burst@mL,stop@mL
  5769  004C4A  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  5770  004C4E  C022  F01C         	movff	short_burst@mR,stop@mR
  5771  004C52  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  5772  004C56  EC9F  F024         	call	_stop	;wreg free
  5773                           
  5774                           ;movement.c: 16:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5775  004C5A  0E29               	movlw	41
  5776  004C5C  6E25               	movwf	(??_short_burst+1)^0,c
  5777  004C5E  0E96               	movlw	150
  5778  004C60  6E24               	movwf	??_short_burst^0,c
  5779  004C62  0E7F               	movlw	127
  5780  004C64                     u5397:
  5781  004C64  2EE8               	decfsz	wreg,f,c
  5782  004C66  D7FE               	bra	u5397
  5783  004C68  2E24               	decfsz	??_short_burst^0,f,c
  5784  004C6A  D7FC               	bra	u5397
  5785  004C6C  2E25               	decfsz	(??_short_burst+1)^0,f,c
  5786  004C6E  D7FA               	bra	u5397
  5787  004C70  F000               	nop	
  5788  004C72  0012               	return		;funcret
  5789  004C74                     __end_of_short_burst:
  5790                           	callstack 0
  5791                           
  5792 ;; *************** function _pin_init *****************
  5793 ;; Defined at:
  5794 ;;		line 91 in file "movement.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		None
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 1
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text15
  5823  0052FE                     __ptext15:
  5824                           	callstack 0
  5825  0052FE                     _pin_init:
  5826                           	callstack 29
  5827  0052FE  8486               	bsf	134,2,c	;volatile
  5828                           
  5829                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
  5830  005300  010E               	movlb	14	; () banked
  5831  005302  95B4               	bcf	180,2,b	;volatile
  5832                           
  5833                           ;movement.c: 94:     TRISFbits.TRISF3=1;
  5834  005304  8686               	bsf	134,3,c	;volatile
  5835                           
  5836                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
  5837  005306  97B4               	bcf	180,3,b	;volatile
  5838                           
  5839                           ;movement.c: 97:     TRISFbits.TRISF6 = 0;
  5840  005308  9C86               	bcf	134,6,c	;volatile
  5841                           
  5842                           ;movement.c: 98:     LATFbits.LATF6 = 0;
  5843  00530A  9C7E               	bcf	126,6,c	;volatile
  5844                           
  5845                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
  5846  00530C  9287               	bcf	135,1,c	;volatile
  5847                           
  5848                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
  5849  00530E  9E86               	bcf	134,7,c	;volatile
  5850                           
  5851                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
  5852  005310  9881               	bcf	129,4,c	;volatile
  5853                           
  5854                           ;movement.c: 103:     LATGbits.LATG1 = 1;
  5855  005312  827F               	bsf	127,1,c	;volatile
  5856                           
  5857                           ;movement.c: 104:     LATFbits.LATF7 = 1;
  5858  005314  8E7E               	bsf	126,7,c	;volatile
  5859                           
  5860                           ;movement.c: 105:     LATAbits.LATA4 = 1;
  5861  005316  8879               	bsf	121,4,c	;volatile
  5862  005318                     
  5863                           ; BSR set to: 14
  5864  005318  0012               	return		;funcret
  5865  00531A                     __end_of_pin_init:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _initUSART4 *****************
  5869 ;; Defined at:
  5870 ;;		line 4 in file "serial.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 1
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_main
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text16
  5899  0052C2                     __ptext16:
  5900                           	callstack 0
  5901  0052C2                     _initUSART4:
  5902                           	callstack 29
  5903  0052C2                     
  5904                           ;serial.c: 8:     RC0PPS = 0x12;
  5905  0052C2  0E12               	movlw	18
  5906  0052C4  010E               	movlb	14	; () banked
  5907  0052C6  6F62               	movwf	98,b	;volatile
  5908                           
  5909                           ;serial.c: 9:     RX4PPS = 0x11;
  5910  0052C8  0E11               	movlw	17
  5911  0052CA  6F15               	movwf	21,b	;volatile
  5912  0052CC                     
  5913                           ; BSR set to: 14
  5914                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  5915  0052CC  97E9               	bcf	233,3,b	;volatile
  5916  0052CE                     
  5917                           ; BSR set to: 14
  5918                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  5919  0052CE  95E8               	bcf	232,2,b	;volatile
  5920                           
  5921                           ;serial.c: 13:     SP4BRGL = 51;
  5922  0052D0  0E33               	movlw	51
  5923  0052D2  6FE5               	movwf	229,b	;volatile
  5924                           
  5925                           ;serial.c: 15:     SP4BRGH = 0;
  5926  0052D4  0E00               	movlw	0
  5927  0052D6  6FE6               	movwf	230,b	;volatile
  5928  0052D8                     
  5929                           ; BSR set to: 14
  5930                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  5931  0052D8  89E7               	bsf	231,4,b	;volatile
  5932  0052DA                     
  5933                           ; BSR set to: 14
  5934                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  5935  0052DA  8BE8               	bsf	232,5,b	;volatile
  5936  0052DC                     
  5937                           ; BSR set to: 14
  5938                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  5939  0052DC  8FE7               	bsf	231,7,b	;volatile
  5940  0052DE                     
  5941                           ; BSR set to: 14
  5942  0052DE  0012               	return		;funcret
  5943  0052E0                     __end_of_initUSART4:
  5944                           	callstack 0
  5945                           
  5946 ;; *************** function _initDCmotors_parameter *****************
  5947 ;; Defined at:
  5948 ;;		line 41 in file "dc_motor.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  5951 ;;		 -> main@motorL(10), 
  5952 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  5953 ;;		 -> main@motorR(10), 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;		None
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      void 
  5958 ;; Registers used:
  5959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5969 ;;Total ram usage:        4 bytes
  5970 ;; Hardware stack levels used: 1
  5971 ;; Hardware stack levels required when called: 1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_main
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           	psect	text17
  5980  004558                     __ptext17:
  5981                           	callstack 0
  5982  004558                     _initDCmotors_parameter:
  5983                           	callstack 29
  5984  004558                     
  5985                           ;dc_motor.c: 43:     motorL->power = 0;
  5986  004558  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  5987  00455C  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  5988  004560  0E00               	movlw	0
  5989  004562  6EDF               	movwf	indf2,c
  5990  004564                     
  5991                           ;dc_motor.c: 44:     motorL->direction = 1;
  5992  004564  EE20 F001          	lfsr	2,1
  5993  004568  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  5994  00456A  26D9               	addwf	fsr2l,f,c
  5995  00456C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  5996  00456E  22DA               	addwfc	fsr2h,f,c
  5997  004570  0E01               	movlw	1
  5998  004572  6EDF               	movwf	indf2,c
  5999  004574                     
  6000                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  6001  004574  EE20 F002          	lfsr	2,2
  6002  004578  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6003  00457A  26D9               	addwf	fsr2l,f,c
  6004  00457C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6005  00457E  22DA               	addwfc	fsr2h,f,c
  6006  004580  0EA3               	movlw	163
  6007  004582  6EDE               	movwf	postinc2,c
  6008  004584  0E0F               	movlw	15
  6009  004586  6EDD               	movwf	postdec2,c
  6010  004588                     
  6011                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
  6012  004588  EE20 F004          	lfsr	2,4
  6013  00458C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6014  00458E  26D9               	addwf	fsr2l,f,c
  6015  004590  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6016  004592  22DA               	addwfc	fsr2h,f,c
  6017  004594  0E7D               	movlw	125
  6018  004596  6EDE               	movwf	postinc2,c
  6019  004598  0E0F               	movlw	15
  6020  00459A  6EDD               	movwf	postdec2,c
  6021  00459C                     
  6022                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
  6023  00459C  EE20 F006          	lfsr	2,6
  6024  0045A0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6025  0045A2  26D9               	addwf	fsr2l,f,c
  6026  0045A4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6027  0045A6  22DA               	addwfc	fsr2h,f,c
  6028  0045A8  0E04               	movlw	4
  6029  0045AA  6EDF               	movwf	indf2,c
  6030  0045AC                     
  6031                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
  6032  0045AC  EE20 F007          	lfsr	2,7
  6033  0045B0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6034  0045B2  26D9               	addwf	fsr2l,f,c
  6035  0045B4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6036  0045B6  22DA               	addwfc	fsr2h,f,c
  6037  0045B8  0EC7               	movlw	199
  6038  0045BA  6EDE               	movwf	postinc2,c
  6039  0045BC  0E00               	movlw	0
  6040  0045BE  6EDD               	movwf	postdec2,c
  6041  0045C0                     
  6042                           ;dc_motor.c: 51:     motorR->power = 0;
  6043  0045C0  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  6044  0045C4  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  6045  0045C8  0E00               	movlw	0
  6046  0045CA  6EDF               	movwf	indf2,c
  6047                           
  6048                           ;dc_motor.c: 52:     motorR->direction = 1;
  6049  0045CC  EE20 F001          	lfsr	2,1
  6050  0045D0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6051  0045D2  26D9               	addwf	fsr2l,f,c
  6052  0045D4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6053  0045D6  22DA               	addwfc	fsr2h,f,c
  6054  0045D8  0E01               	movlw	1
  6055  0045DA  6EDF               	movwf	indf2,c
  6056                           
  6057                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  6058  0045DC  EE20 F002          	lfsr	2,2
  6059  0045E0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6060  0045E2  26D9               	addwf	fsr2l,f,c
  6061  0045E4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6062  0045E6  22DA               	addwfc	fsr2h,f,c
  6063  0045E8  0EA0               	movlw	160
  6064  0045EA  6EDE               	movwf	postinc2,c
  6065  0045EC  0E0F               	movlw	15
  6066  0045EE  6EDD               	movwf	postdec2,c
  6067                           
  6068                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
  6069  0045F0  EE20 F004          	lfsr	2,4
  6070  0045F4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6071  0045F6  26D9               	addwf	fsr2l,f,c
  6072  0045F8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6073  0045FA  22DA               	addwfc	fsr2h,f,c
  6074  0045FC  0E7F               	movlw	127
  6075  0045FE  6EDE               	movwf	postinc2,c
  6076  004600  0E0F               	movlw	15
  6077  004602  6EDD               	movwf	postdec2,c
  6078                           
  6079                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
  6080  004604  EE20 F006          	lfsr	2,6
  6081  004608  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6082  00460A  26D9               	addwf	fsr2l,f,c
  6083  00460C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6084  00460E  22DA               	addwfc	fsr2h,f,c
  6085  004610  0E06               	movlw	6
  6086  004612  6EDF               	movwf	indf2,c
  6087                           
  6088                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
  6089  004614  EE20 F007          	lfsr	2,7
  6090  004618  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6091  00461A  26D9               	addwf	fsr2l,f,c
  6092  00461C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6093  00461E  22DA               	addwfc	fsr2h,f,c
  6094  004620  0EC7               	movlw	199
  6095  004622  6EDE               	movwf	postinc2,c
  6096  004624  0E00               	movlw	0
  6097  004626  6EDD               	movwf	postdec2,c
  6098  004628  0012               	return		;funcret
  6099  00462A                     __end_of_initDCmotors_parameter:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _initDCmotorsPWM *****************
  6103 ;; Defined at:
  6104 ;;		line 11 in file "dc_motor.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  PWMperiod       2    0[COMRAM] int 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;Total ram usage:        2 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 1
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           	psect	text18
  6133  004F1C                     __ptext18:
  6134                           	callstack 0
  6135  004F1C                     _initDCmotorsPWM:
  6136                           	callstack 29
  6137  004F1C                     
  6138                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
  6139  004F1C  9485               	bcf	133,2,c	;volatile
  6140                           
  6141                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  6142  004F1E  9E83               	bcf	131,7,c	;volatile
  6143                           
  6144                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  6145  004F20  9C87               	bcf	135,6,c	;volatile
  6146                           
  6147                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  6148  004F22  9885               	bcf	133,4,c	;volatile
  6149                           
  6150                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  6151  004F24  947D               	bcf	125,2,c	;volatile
  6152                           
  6153                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  6154  004F26  9E7B               	bcf	123,7,c	;volatile
  6155                           
  6156                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
  6157  004F28  9C7F               	bcf	127,6,c	;volatile
  6158                           
  6159                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  6160  004F2A  987D               	bcf	125,4,c	;volatile
  6161  004F2C                     
  6162                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  6163  004F2C  50BD               	movf	189,w,c	;volatile
  6164  004F2E  0B8F               	andlw	-113
  6165  004F30  0930               	iorlw	48
  6166  004F32  6EBD               	movwf	189,c	;volatile
  6167                           
  6168                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  6169  004F34  0EE0               	movlw	-32
  6170  004F36  16BE               	andwf	190,f,c	;volatile
  6171                           
  6172                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  6173  004F38  50BF               	movf	191,w,c	;volatile
  6174  004F3A  0BF0               	andlw	-16
  6175  004F3C  0901               	iorlw	1
  6176  004F3E  6EBF               	movwf	191,c	;volatile
  6177                           
  6178                           ;dc_motor.c: 29:     T2PR=200-1;
  6179  004F40  0EC7               	movlw	199
  6180  004F42  6EBC               	movwf	188,c	;volatile
  6181  004F44                     
  6182                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  6183  004F44  8EBD               	bsf	189,7,c	;volatile
  6184                           
  6185                           ;dc_motor.c: 32:     RE2PPS=0x0A;
  6186  004F46  0E0A               	movlw	10
  6187  004F48  010E               	movlb	14	; () banked
  6188  004F4A  6F74               	movwf	116,b	;volatile
  6189                           
  6190                           ;dc_motor.c: 33:     RC7PPS=0x0B;
  6191  004F4C  0E0B               	movlw	11
  6192  004F4E  6F69               	movwf	105,b	;volatile
  6193                           
  6194                           ;dc_motor.c: 35:     PWM6DCH=0;
  6195  004F50  0E00               	movlw	0
  6196  004F52  6EA3               	movwf	163,c	;volatile
  6197                           
  6198                           ;dc_motor.c: 36:     PWM7DCH=0;
  6199  004F54  0E00               	movlw	0
  6200  004F56  6EA0               	movwf	160,c	;volatile
  6201  004F58                     
  6202                           ; BSR set to: 14
  6203                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
  6204  004F58  8EA4               	bsf	164,7,c	;volatile
  6205  004F5A                     
  6206                           ; BSR set to: 14
  6207                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
  6208  004F5A  8EA1               	bsf	161,7,c	;volatile
  6209  004F5C                     
  6210                           ; BSR set to: 14
  6211  004F5C  0012               	return		;funcret
  6212  004F5E                     __end_of_initDCmotorsPWM:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function _distance_measure *****************
  6216 ;; Defined at:
  6217 ;;		line 328 in file "color.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  mL              2   11[COMRAM] PTR struct DC_motor
  6220 ;;		 -> main@motorL(10), 
  6221 ;;  mR              2   13[COMRAM] PTR struct DC_motor
  6222 ;;		 -> main@motorR(10), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  CC              2   21[COMRAM] unsigned int 
  6225 ;;  CB              2   19[COMRAM] unsigned int 
  6226 ;;  CG              2   17[COMRAM] unsigned int 
  6227 ;;  CR              2   15[COMRAM] unsigned int 
  6228 ;;  stop            1   23[COMRAM] unsigned char 
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      unsigned char 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2, status,0, cstack
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6239 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;Total ram usage:       13 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; Hardware stack levels required when called: 4
  6245 ;; This function calls:
  6246 ;;		_LED_C
  6247 ;;		_color_read_Clear
  6248 ;; This function is called by:
  6249 ;;		_main
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text19
  6254  004E06                     __ptext19:
  6255                           	callstack 0
  6256  004E06                     _distance_measure:
  6257                           	callstack 26
  6258  004E06  0E00               	movlw	0
  6259  004E08  6E11               	movwf	(distance_measure@CR+1)^0,c
  6260  004E0A  0E00               	movlw	0
  6261  004E0C  6E10               	movwf	distance_measure@CR^0,c
  6262  004E0E  0E00               	movlw	0
  6263  004E10  6E13               	movwf	(distance_measure@CG+1)^0,c
  6264  004E12  0E00               	movlw	0
  6265  004E14  6E12               	movwf	distance_measure@CG^0,c
  6266  004E16  0E00               	movlw	0
  6267  004E18  6E15               	movwf	(distance_measure@CB+1)^0,c
  6268  004E1A  0E00               	movlw	0
  6269  004E1C  6E14               	movwf	distance_measure@CB^0,c
  6270                           
  6271                           ;color.c: 331:     unsigned char stop = 0;
  6272  004E1E  0E00               	movlw	0
  6273  004E20  6E18               	movwf	distance_measure@stop^0,c
  6274  004E22                     
  6275                           ;color.c: 332:     LED_C();
  6276  004E22  EC11  F029         	call	_LED_C	;wreg free
  6277  004E26                     
  6278                           ;color.c: 334:     CC = color_read_Clear();
  6279  004E26  ECB3  F026         	call	_color_read_Clear	;wreg free
  6280  004E2A  C005  F016         	movff	?_color_read_Clear,distance_measure@CC
  6281  004E2E  C006  F017         	movff	?_color_read_Clear+1,distance_measure@CC+1
  6282  004E32                     
  6283                           ;color.c: 335:     if (CC >= 1500 ){
  6284  004E32  0EDC               	movlw	220
  6285  004E34  5C16               	subwf	distance_measure@CC^0,w,c
  6286  004E36  0E05               	movlw	5
  6287  004E38  5817               	subwfb	(distance_measure@CC+1)^0,w,c
  6288  004E3A  A0D8               	btfss	status,0,c
  6289  004E3C  EF22  F027         	goto	u5081
  6290  004E40  EF24  F027         	goto	u5080
  6291  004E44                     u5081:
  6292  004E44  EF26  F027         	goto	l169
  6293  004E48                     u5080:
  6294  004E48                     
  6295                           ;color.c: 336:         stop = 1;
  6296  004E48  0E01               	movlw	1
  6297  004E4A  6E18               	movwf	distance_measure@stop^0,c
  6298  004E4C                     l169:
  6299                           
  6300                           ;color.c: 338:     return stop;
  6301  004E4C  5018               	movf	distance_measure@stop^0,w,c
  6302  004E4E  0012               	return		;funcret
  6303  004E50                     __end_of_distance_measure:
  6304                           	callstack 0
  6305                           
  6306 ;; *************** function _color_data_collection *****************
  6307 ;; Defined at:
  6308 ;;		line 136 in file "color.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  m               2   89[COMRAM] PTR struct color_rgb
  6311 ;;		 -> main@rgb(8), 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;  x               2  132[BANK0 ] int 
  6314 ;;  k               2  130[BANK0 ] int 
  6315 ;;  j               2  128[BANK0 ] int 
  6316 ;;  i               2  126[BANK0 ] int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;Total ram usage:       12 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 10
  6333 ;; This function calls:
  6334 ;;		_LED_B
  6335 ;;		_LED_C
  6336 ;;		_LED_G
  6337 ;;		_LED_R
  6338 ;;		_color_display
  6339 ;;		_color_predict
  6340 ;;		_read_color
  6341 ;; This function is called by:
  6342 ;;		_main
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text20
  6347  0035D2                     __ptext20:
  6348                           	callstack 0
  6349  0035D2                     _color_data_collection:
  6350                           	callstack 20
  6351  0035D2                     
  6352                           ;color.c: 138:     int i = 0; int j = 0; int k = 0; int x = 0;
  6353  0035D2  0E00               	movlw	0
  6354  0035D4  0100               	movlb	0	; () banked
  6355  0035D6  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  6356  0035D8  0E00               	movlw	0
  6357  0035DA  6FDE               	movwf	color_data_collection@i& (0+255),b
  6358  0035DC  0E00               	movlw	0
  6359  0035DE  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  6360  0035E0  0E00               	movlw	0
  6361  0035E2  6FE2               	movwf	color_data_collection@k& (0+255),b
  6362  0035E4  0E00               	movlw	0
  6363  0035E6  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  6364  0035E8  0E00               	movlw	0
  6365  0035EA  6FE4               	movwf	color_data_collection@x& (0+255),b
  6366                           
  6367                           ;color.c: 139:     for (i = 0; i <5; ++i){
  6368  0035EC  0E00               	movlw	0
  6369  0035EE  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  6370  0035F0  0E00               	movlw	0
  6371  0035F2  6FDE               	movwf	color_data_collection@i& (0+255),b
  6372  0035F4                     l4862:
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;color.c: 140:         LED_C();
  6376  0035F4  EC11  F029         	call	_LED_C	;wreg free
  6377  0035F8                     
  6378                           ;color.c: 141:         read_color(m);
  6379  0035F8  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6380  0035FC  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6381  003600  ECDF  F025         	call	_read_color	;wreg free
  6382  003604                     
  6383                           ;color.c: 142:         color_display(m);
  6384  003604  C05A  F058         	movff	color_data_collection@m,color_display@m
  6385  003608  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6386  00360C  EC47  F025         	call	_color_display	;wreg free
  6387  003610                     
  6388                           ;color.c: 143:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6389  003610  0E09               	movlw	9
  6390  003612  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6391  003614  0E1E               	movlw	30
  6392  003616  6E5C               	movwf	??_color_data_collection^0,c
  6393  003618  0EE4               	movlw	228
  6394  00361A                     u5407:
  6395  00361A  2EE8               	decfsz	wreg,f,c
  6396  00361C  D7FE               	bra	u5407
  6397  00361E  2E5C               	decfsz	??_color_data_collection^0,f,c
  6398  003620  D7FC               	bra	u5407
  6399  003622  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6400  003624  D7FA               	bra	u5407
  6401  003626  D000               	nop2	
  6402  003628                     
  6403                           ;color.c: 144:     }
  6404  003628  0100               	movlb	0	; () banked
  6405  00362A  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  6406  00362C  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  6407  00362E                     
  6408                           ; BSR set to: 0
  6409  00362E  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  6410  003630  EF23  F01B         	goto	u5031
  6411  003634  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  6412  003636  E109               	bnz	u5030
  6413  003638  0E05               	movlw	5
  6414  00363A  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  6415  00363C  A0D8               	btfss	status,0,c
  6416  00363E  EF23  F01B         	goto	u5031
  6417  003642  EF25  F01B         	goto	u5030
  6418  003646                     u5031:
  6419  003646  EFFA  F01A         	goto	l4862
  6420  00364A                     u5030:
  6421  00364A                     
  6422                           ; BSR set to: 0
  6423                           ;color.c: 145:     color_predict(00000);
  6424  00364A  0E00               	movlw	0
  6425  00364C  EC3D  F022         	call	_color_predict
  6426  003650                     
  6427                           ;color.c: 146:     for (j = 0; j < 5; ++j){
  6428  003650  0E00               	movlw	0
  6429  003652  0100               	movlb	0	; () banked
  6430  003654  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  6431  003656  0E00               	movlw	0
  6432  003658  6FE0               	movwf	color_data_collection@j& (0+255),b
  6433  00365A                     l4882:
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;color.c: 147:         LED_R();
  6437  00365A  EC31  F029         	call	_LED_R	;wreg free
  6438  00365E                     
  6439                           ;color.c: 148:         read_color(m);
  6440  00365E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6441  003662  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6442  003666  ECDF  F025         	call	_read_color	;wreg free
  6443  00366A                     
  6444                           ;color.c: 149:         color_display(m);
  6445  00366A  C05A  F058         	movff	color_data_collection@m,color_display@m
  6446  00366E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6447  003672  EC47  F025         	call	_color_display	;wreg free
  6448  003676                     
  6449                           ;color.c: 150:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6450  003676  0E09               	movlw	9
  6451  003678  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6452  00367A  0E1E               	movlw	30
  6453  00367C  6E5C               	movwf	??_color_data_collection^0,c
  6454  00367E  0EE4               	movlw	228
  6455  003680                     u5417:
  6456  003680  2EE8               	decfsz	wreg,f,c
  6457  003682  D7FE               	bra	u5417
  6458  003684  2E5C               	decfsz	??_color_data_collection^0,f,c
  6459  003686  D7FC               	bra	u5417
  6460  003688  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6461  00368A  D7FA               	bra	u5417
  6462  00368C  D000               	nop2	
  6463  00368E                     
  6464                           ;color.c: 151:     }
  6465  00368E  0100               	movlb	0	; () banked
  6466  003690  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  6467  003692  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  6468  003694                     
  6469                           ; BSR set to: 0
  6470  003694  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  6471  003696  EF56  F01B         	goto	u5041
  6472  00369A  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  6473  00369C  E109               	bnz	u5040
  6474  00369E  0E05               	movlw	5
  6475  0036A0  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  6476  0036A2  A0D8               	btfss	status,0,c
  6477  0036A4  EF56  F01B         	goto	u5041
  6478  0036A8  EF58  F01B         	goto	u5040
  6479  0036AC                     u5041:
  6480  0036AC  EF2D  F01B         	goto	l4882
  6481  0036B0                     u5040:
  6482  0036B0                     
  6483                           ; BSR set to: 0
  6484                           ;color.c: 152:     color_predict(00000);
  6485  0036B0  0E00               	movlw	0
  6486  0036B2  EC3D  F022         	call	_color_predict
  6487  0036B6                     
  6488                           ;color.c: 153:     for (k = 0; k < 5; ++k){
  6489  0036B6  0E00               	movlw	0
  6490  0036B8  0100               	movlb	0	; () banked
  6491  0036BA  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  6492  0036BC  0E00               	movlw	0
  6493  0036BE  6FE2               	movwf	color_data_collection@k& (0+255),b
  6494  0036C0                     l4902:
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;color.c: 154:         LED_G();
  6498  0036C0  EC41  F029         	call	_LED_G	;wreg free
  6499  0036C4                     
  6500                           ;color.c: 155:         read_color(m);
  6501  0036C4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6502  0036C8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6503  0036CC  ECDF  F025         	call	_read_color	;wreg free
  6504  0036D0                     
  6505                           ;color.c: 156:         color_display(m);
  6506  0036D0  C05A  F058         	movff	color_data_collection@m,color_display@m
  6507  0036D4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6508  0036D8  EC47  F025         	call	_color_display	;wreg free
  6509  0036DC                     
  6510                           ;color.c: 157:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6511  0036DC  0E09               	movlw	9
  6512  0036DE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6513  0036E0  0E1E               	movlw	30
  6514  0036E2  6E5C               	movwf	??_color_data_collection^0,c
  6515  0036E4  0EE4               	movlw	228
  6516  0036E6                     u5427:
  6517  0036E6  2EE8               	decfsz	wreg,f,c
  6518  0036E8  D7FE               	bra	u5427
  6519  0036EA  2E5C               	decfsz	??_color_data_collection^0,f,c
  6520  0036EC  D7FC               	bra	u5427
  6521  0036EE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6522  0036F0  D7FA               	bra	u5427
  6523  0036F2  D000               	nop2	
  6524  0036F4                     
  6525                           ;color.c: 158:     }
  6526  0036F4  0100               	movlb	0	; () banked
  6527  0036F6  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  6528  0036F8  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  6529  0036FA                     
  6530                           ; BSR set to: 0
  6531  0036FA  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  6532  0036FC  EF89  F01B         	goto	u5051
  6533  003700  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  6534  003702  E109               	bnz	u5050
  6535  003704  0E05               	movlw	5
  6536  003706  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  6537  003708  A0D8               	btfss	status,0,c
  6538  00370A  EF89  F01B         	goto	u5051
  6539  00370E  EF8B  F01B         	goto	u5050
  6540  003712                     u5051:
  6541  003712  EF60  F01B         	goto	l4902
  6542  003716                     u5050:
  6543  003716                     
  6544                           ; BSR set to: 0
  6545                           ;color.c: 159:     color_predict(00000);
  6546  003716  0E00               	movlw	0
  6547  003718  EC3D  F022         	call	_color_predict
  6548  00371C                     
  6549                           ;color.c: 160:     for (x = 0; x < 5; ++x){
  6550  00371C  0E00               	movlw	0
  6551  00371E  0100               	movlb	0	; () banked
  6552  003720  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  6553  003722  0E00               	movlw	0
  6554  003724  6FE4               	movwf	color_data_collection@x& (0+255),b
  6555  003726                     l4922:
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;color.c: 161:         LED_B();
  6559  003726  EC51  F029         	call	_LED_B	;wreg free
  6560  00372A                     
  6561                           ;color.c: 162:         read_color(m);
  6562  00372A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6563  00372E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6564  003732  ECDF  F025         	call	_read_color	;wreg free
  6565  003736                     
  6566                           ;color.c: 163:         color_display(m);
  6567  003736  C05A  F058         	movff	color_data_collection@m,color_display@m
  6568  00373A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6569  00373E  EC47  F025         	call	_color_display	;wreg free
  6570  003742                     
  6571                           ;color.c: 164:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6572  003742  0E09               	movlw	9
  6573  003744  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6574  003746  0E1E               	movlw	30
  6575  003748  6E5C               	movwf	??_color_data_collection^0,c
  6576  00374A  0EE4               	movlw	228
  6577  00374C                     u5437:
  6578  00374C  2EE8               	decfsz	wreg,f,c
  6579  00374E  D7FE               	bra	u5437
  6580  003750  2E5C               	decfsz	??_color_data_collection^0,f,c
  6581  003752  D7FC               	bra	u5437
  6582  003754  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6583  003756  D7FA               	bra	u5437
  6584  003758  D000               	nop2	
  6585  00375A                     
  6586                           ;color.c: 165:     }
  6587  00375A  0100               	movlb	0	; () banked
  6588  00375C  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  6589  00375E  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  6590  003760                     
  6591                           ; BSR set to: 0
  6592  003760  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  6593  003762  EFBC  F01B         	goto	u5061
  6594  003766  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  6595  003768  E109               	bnz	u5060
  6596  00376A  0E05               	movlw	5
  6597  00376C  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  6598  00376E  A0D8               	btfss	status,0,c
  6599  003770  EFBC  F01B         	goto	u5061
  6600  003774  EFBE  F01B         	goto	u5060
  6601  003778                     u5061:
  6602  003778  EF93  F01B         	goto	l4922
  6603  00377C                     u5060:
  6604  00377C                     
  6605                           ; BSR set to: 0
  6606                           ;color.c: 166:     color_predict(1);
  6607  00377C  0E01               	movlw	1
  6608  00377E  EC3D  F022         	call	_color_predict
  6609  003782                     
  6610                           ;color.c: 167:     LED_C();
  6611  003782  EC11  F029         	call	_LED_C	;wreg free
  6612  003786  0012               	return		;funcret
  6613  003788                     __end_of_color_data_collection:
  6614                           	callstack 0
  6615                           
  6616 ;; *************** function _read_color *****************
  6617 ;; Defined at:
  6618 ;;		line 92 in file "color.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;  m               2   11[COMRAM] PTR struct color_rgb
  6621 ;;		 -> main@rgb(8), 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;Total ram usage:        2 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 4
  6640 ;; This function calls:
  6641 ;;		_color_read_Blue
  6642 ;;		_color_read_Clear
  6643 ;;		_color_read_Green
  6644 ;;		_color_read_Red
  6645 ;; This function is called by:
  6646 ;;		_color_data_collection
  6647 ;;		_detect_color
  6648 ;;		_main
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           	psect	text21
  6653  004BBE                     __ptext21:
  6654                           	callstack 0
  6655  004BBE                     _read_color:
  6656                           	callstack 24
  6657  004BBE                     
  6658                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  6659  004BBE  EC63  F026         	call	_color_read_Red	;wreg free
  6660  004BC2  C00C  FFD9         	movff	read_color@m,fsr2l
  6661  004BC6  C00D  FFDA         	movff	read_color@m+1,fsr2h
  6662  004BCA  C005  FFDE         	movff	?_color_read_Red,postinc2
  6663  004BCE  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6664                           
  6665                           ;color.c: 95:     m->B = color_read_Blue();
  6666  004BD2  ECDB  F026         	call	_color_read_Blue	;wreg free
  6667  004BD6  EE20 F004          	lfsr	2,4
  6668  004BDA  500C               	movf	read_color@m^0,w,c
  6669  004BDC  26D9               	addwf	fsr2l,f,c
  6670  004BDE  500D               	movf	(read_color@m+1)^0,w,c
  6671  004BE0  22DA               	addwfc	fsr2h,f,c
  6672  004BE2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6673  004BE6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6674                           
  6675                           ;color.c: 96:     m->G = color_read_Green();
  6676  004BEA  EC8B  F026         	call	_color_read_Green	;wreg free
  6677  004BEE  EE20 F002          	lfsr	2,2
  6678  004BF2  500C               	movf	read_color@m^0,w,c
  6679  004BF4  26D9               	addwf	fsr2l,f,c
  6680  004BF6  500D               	movf	(read_color@m+1)^0,w,c
  6681  004BF8  22DA               	addwfc	fsr2h,f,c
  6682  004BFA  C005  FFDE         	movff	?_color_read_Green,postinc2
  6683  004BFE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6684                           
  6685                           ;color.c: 97:     m->C = color_read_Clear();
  6686  004C02  ECB3  F026         	call	_color_read_Clear	;wreg free
  6687  004C06  EE20 F006          	lfsr	2,6
  6688  004C0A  500C               	movf	read_color@m^0,w,c
  6689  004C0C  26D9               	addwf	fsr2l,f,c
  6690  004C0E  500D               	movf	(read_color@m+1)^0,w,c
  6691  004C10  22DA               	addwfc	fsr2h,f,c
  6692  004C12  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6693  004C16  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6694  004C1A  0012               	return		;funcret
  6695  004C1C                     __end_of_read_color:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _color_predict *****************
  6699 ;; Defined at:
  6700 ;;		line 186 in file "color.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  color           1    wreg     unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  color           1  125[BANK0 ] unsigned char 
  6705 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6706 ;;  color_name      1    0        unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  1    wreg      void 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6719 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6720 ;;Total ram usage:      101 bytes
  6721 ;; Hardware stack levels used: 1
  6722 ;; Hardware stack levels required when called: 9
  6723 ;; This function calls:
  6724 ;;		_sendStringSerial4
  6725 ;;		_sprintf
  6726 ;; This function is called by:
  6727 ;;		_color_data_collection
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text22
  6732  00447A                     __ptext22:
  6733                           	callstack 0
  6734  00447A                     _color_predict:
  6735                           	callstack 20
  6736                           
  6737                           ;incstack = 0
  6738                           ;color_predict@color stored from wreg
  6739  00447A  0100               	movlb	0	; () banked
  6740  00447C  6FDD               	movwf	color_predict@color& (0+255),b
  6741  00447E                     
  6742                           ;color.c: 186: void color_predict(unsigned char color);color.c: 187: {;color.c: 188:    
      +                           char buf[100];;color.c: 189:     char color_name;;color.c: 190:     if (color == 0){col
      +                          or_name = "Error";}
  6743  00447E  0100               	movlb	0	; () banked
  6744  004480  51DD               	movf	color_predict@color& (0+255),w,b
  6745  004482  A4D8               	btfss	status,2,c
  6746  004484  EF46  F022         	goto	u4581
  6747  004488  EF48  F022         	goto	u4580
  6748  00448C                     u4581:
  6749  00448C  EF48  F022         	goto	l4592
  6750  004490                     u4580:
  6751  004490                     l4592:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;color.c: 191:     if (color == 1){color_name = "Red";}
  6755  004490  05DD               	decf	color_predict@color& (0+255),w,b
  6756  004492  A4D8               	btfss	status,2,c
  6757  004494  EF4E  F022         	goto	u4591
  6758  004498  EF50  F022         	goto	u4590
  6759  00449C                     u4591:
  6760  00449C  EF50  F022         	goto	l4596
  6761  0044A0                     u4590:
  6762  0044A0                     l4596:
  6763                           
  6764                           ; BSR set to: 0
  6765                           ;color.c: 192:     if (color == 2){color_name = "Green";}
  6766  0044A0  0E02               	movlw	2
  6767  0044A2  19DD               	xorwf	color_predict@color& (0+255),w,b
  6768  0044A4  A4D8               	btfss	status,2,c
  6769  0044A6  EF57  F022         	goto	u4601
  6770  0044AA  EF59  F022         	goto	u4600
  6771  0044AE                     u4601:
  6772  0044AE  EF59  F022         	goto	l4600
  6773  0044B2                     u4600:
  6774  0044B2                     l4600:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;color.c: 193:     if (color == 3){color_name = "Blue";}
  6778  0044B2  0E03               	movlw	3
  6779  0044B4  19DD               	xorwf	color_predict@color& (0+255),w,b
  6780  0044B6  A4D8               	btfss	status,2,c
  6781  0044B8  EF60  F022         	goto	u4611
  6782  0044BC  EF62  F022         	goto	u4610
  6783  0044C0                     u4611:
  6784  0044C0  EF62  F022         	goto	l4604
  6785  0044C4                     u4610:
  6786  0044C4                     l4604:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;color.c: 194:     if (color == 4){color_name = "Yellow";}
  6790  0044C4  0E04               	movlw	4
  6791  0044C6  19DD               	xorwf	color_predict@color& (0+255),w,b
  6792  0044C8  A4D8               	btfss	status,2,c
  6793  0044CA  EF69  F022         	goto	u4621
  6794  0044CE  EF6B  F022         	goto	u4620
  6795  0044D2                     u4621:
  6796  0044D2  EF6B  F022         	goto	l4608
  6797  0044D6                     u4620:
  6798  0044D6                     l4608:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;color.c: 195:     if (color == 5){color_name = "Pink";}
  6802  0044D6  0E05               	movlw	5
  6803  0044D8  19DD               	xorwf	color_predict@color& (0+255),w,b
  6804  0044DA  A4D8               	btfss	status,2,c
  6805  0044DC  EF72  F022         	goto	u4631
  6806  0044E0  EF74  F022         	goto	u4630
  6807  0044E4                     u4631:
  6808  0044E4  EF74  F022         	goto	l4612
  6809  0044E8                     u4630:
  6810  0044E8                     l4612:
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;color.c: 196:     if (color == 6){color_name = "Orange";}
  6814  0044E8  0E06               	movlw	6
  6815  0044EA  19DD               	xorwf	color_predict@color& (0+255),w,b
  6816  0044EC  A4D8               	btfss	status,2,c
  6817  0044EE  EF7B  F022         	goto	u4641
  6818  0044F2  EF7D  F022         	goto	u4640
  6819  0044F6                     u4641:
  6820  0044F6  EF7D  F022         	goto	l4616
  6821  0044FA                     u4640:
  6822  0044FA                     l4616:
  6823                           
  6824                           ; BSR set to: 0
  6825                           ;color.c: 197:     if (color == 7){color_name = "Light blue";}
  6826  0044FA  0E07               	movlw	7
  6827  0044FC  19DD               	xorwf	color_predict@color& (0+255),w,b
  6828  0044FE  A4D8               	btfss	status,2,c
  6829  004500  EF84  F022         	goto	u4651
  6830  004504  EF86  F022         	goto	u4650
  6831  004508                     u4651:
  6832  004508  EF86  F022         	goto	l4620
  6833  00450C                     u4650:
  6834  00450C                     l4620:
  6835                           
  6836                           ; BSR set to: 0
  6837                           ;color.c: 198:     if (color == 8){color_name = "White";}
  6838  00450C  0E08               	movlw	8
  6839  00450E  19DD               	xorwf	color_predict@color& (0+255),w,b
  6840  004510  A4D8               	btfss	status,2,c
  6841  004512  EF8D  F022         	goto	u4661
  6842  004516  EF8F  F022         	goto	u4660
  6843  00451A                     u4661:
  6844  00451A  EF8F  F022         	goto	l4624
  6845  00451E                     u4660:
  6846  00451E                     l4624:
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;color.c: 199:     if (color == 9){color_name = "Black";}
  6850  00451E  0E09               	movlw	9
  6851  004520  19DD               	xorwf	color_predict@color& (0+255),w,b
  6852  004522  A4D8               	btfss	status,2,c
  6853  004524  EF96  F022         	goto	u4671
  6854  004528  EF98  F022         	goto	u4670
  6855  00452C                     u4671:
  6856  00452C  EF98  F022         	goto	l4628
  6857  004530                     u4670:
  6858  004530                     l4628:
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;color.c: 201:     sprintf(buf,"\t%d\r\n", color);
  6862  004530  0E79               	movlw	low color_predict@buf
  6863  004532  6F60               	movwf	sprintf@s& (0+255),b
  6864  004534  0E00               	movlw	high color_predict@buf
  6865  004536  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6866  004538  0E0D               	movlw	low (STR_1+8)
  6867  00453A  6F62               	movwf	sprintf@fmt& (0+255),b
  6868  00453C  0E0E               	movlw	high (STR_1+8)
  6869  00453E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6870  004540  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  6871  004544  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6872  004546  EC3A  F026         	call	_sprintf	;wreg free
  6873  00454A                     
  6874                           ;color.c: 202:     sendStringSerial4(buf);
  6875  00454A  0E79               	movlw	low color_predict@buf
  6876  00454C  6E02               	movwf	sendStringSerial4@string^0,c
  6877  00454E  0E00               	movlw	high color_predict@buf
  6878  004550  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6879  004552  ECBD  F028         	call	_sendStringSerial4	;wreg free
  6880  004556  0012               	return		;funcret
  6881  004558                     __end_of_color_predict:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function _color_display *****************
  6885 ;; Defined at:
  6886 ;;		line 170 in file "color.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  m               2   87[COMRAM] PTR struct color_rgb
  6889 ;;		 -> main@rgb(8), 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      void 
  6894 ;; Registers used:
  6895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;Total ram usage:      102 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 9
  6908 ;; This function calls:
  6909 ;;		_sendStringSerial4
  6910 ;;		_sprintf
  6911 ;; This function is called by:
  6912 ;;		_color_data_collection
  6913 ;;		_main
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text23
  6918  004A8E                     __ptext23:
  6919                           	callstack 0
  6920  004A8E                     _color_display:
  6921                           	callstack 21
  6922  004A8E                     
  6923                           ;color.c: 170: void color_display(struct color_rgb *m);color.c: 171: {;color.c: 172:    
      +                           char buf[100];;color.c: 173:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  6924  004A8E  0E79               	movlw	low color_display@buf
  6925  004A90  0100               	movlb	0	; () banked
  6926  004A92  6F60               	movwf	sprintf@s& (0+255),b
  6927  004A94  0E00               	movlw	high color_display@buf
  6928  004A96  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6929  004A98  0E05               	movlw	low STR_1
  6930  004A9A  6F62               	movwf	sprintf@fmt& (0+255),b
  6931  004A9C  0E0E               	movlw	high STR_1
  6932  004A9E  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6933  004AA0  C058  FFD9         	movff	color_display@m,fsr2l
  6934  004AA4  C059  FFDA         	movff	color_display@m+1,fsr2h
  6935  004AA8  CFDE F064          	movff	postinc2,?_sprintf+4
  6936  004AAC  CFDD F065          	movff	postdec2,?_sprintf+5
  6937  004AB0  EE20 F002          	lfsr	2,2
  6938  004AB4  5058               	movf	color_display@m^0,w,c
  6939  004AB6  26D9               	addwf	fsr2l,f,c
  6940  004AB8  5059               	movf	(color_display@m+1)^0,w,c
  6941  004ABA  22DA               	addwfc	fsr2h,f,c
  6942  004ABC  CFDE F066          	movff	postinc2,?_sprintf+6
  6943  004AC0  CFDD F067          	movff	postdec2,?_sprintf+7
  6944  004AC4  EE20 F004          	lfsr	2,4
  6945  004AC8  5058               	movf	color_display@m^0,w,c
  6946  004ACA  26D9               	addwf	fsr2l,f,c
  6947  004ACC  5059               	movf	(color_display@m+1)^0,w,c
  6948  004ACE  22DA               	addwfc	fsr2h,f,c
  6949  004AD0  CFDE F068          	movff	postinc2,?_sprintf+8
  6950  004AD4  CFDD F069          	movff	postdec2,?_sprintf+9
  6951  004AD8  EE20 F006          	lfsr	2,6
  6952  004ADC  5058               	movf	color_display@m^0,w,c
  6953  004ADE  26D9               	addwf	fsr2l,f,c
  6954  004AE0  5059               	movf	(color_display@m+1)^0,w,c
  6955  004AE2  22DA               	addwfc	fsr2h,f,c
  6956  004AE4  CFDE F06A          	movff	postinc2,?_sprintf+10
  6957  004AE8  CFDD F06B          	movff	postdec2,?_sprintf+11
  6958  004AEC  EC3A  F026         	call	_sprintf	;wreg free
  6959  004AF0                     
  6960                           ;color.c: 174:     sendStringSerial4(buf);
  6961  004AF0  0E79               	movlw	low color_display@buf
  6962  004AF2  6E02               	movwf	sendStringSerial4@string^0,c
  6963  004AF4  0E00               	movlw	high color_display@buf
  6964  004AF6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6965  004AF8  ECBD  F028         	call	_sendStringSerial4	;wreg free
  6966  004AFC  0012               	return		;funcret
  6967  004AFE                     __end_of_color_display:
  6968                           	callstack 0
  6969                           
  6970 ;; *************** function _sprintf *****************
  6971 ;; Defined at:
  6972 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  6973 ;; Parameters:    Size  Location     Type
  6974 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6975 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  6976 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6977 ;;		 -> STR_13(6), STR_2(12), STR_1(14), 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  f              11   14[BANK0 ] struct _IO_FILE
  6980 ;;  ap              2   12[BANK0 ] PTR void [1]
  6981 ;;		 -> ?_sprintf(2), 
  6982 ;;  ret             2    0        int 
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  2    0[BANK0 ] int 
  6985 ;; Registers used:
  6986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6992 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6995 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6996 ;;Total ram usage:       25 bytes
  6997 ;; Hardware stack levels used: 1
  6998 ;; Hardware stack levels required when called: 8
  6999 ;; This function calls:
  7000 ;;		_vfprintf
  7001 ;; This function is called by:
  7002 ;;		_color_display
  7003 ;;		_color_predict
  7004 ;;		_check_color_reading
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text24
  7009  004C74                     __ptext24:
  7010                           	callstack 0
  7011  004C74                     _sprintf:
  7012                           	callstack 21
  7013  004C74  0E64               	movlw	low (?_sprintf+4)
  7014  004C76  0100               	movlb	0	; () banked
  7015  004C78  6F6C               	movwf	sprintf@ap& (0+255),b
  7016  004C7A  0E00               	movlw	high (?_sprintf+4)
  7017  004C7C  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  7018  004C7E  C060  F06E         	movff	sprintf@s,sprintf@f
  7019  004C82  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  7020  004C86                     
  7021                           ; BSR set to: 0
  7022  004C86  0E00               	movlw	0
  7023  004C88  6F72               	movwf	(sprintf@f+4)& (0+255),b
  7024  004C8A  0E00               	movlw	0
  7025  004C8C  6F71               	movwf	(sprintf@f+3)& (0+255),b
  7026  004C8E                     
  7027                           ; BSR set to: 0
  7028  004C8E  0E00               	movlw	0
  7029  004C90  6F78               	movwf	(sprintf@f+10)& (0+255),b
  7030  004C92  0E00               	movlw	0
  7031  004C94  6F77               	movwf	(sprintf@f+9)& (0+255),b
  7032  004C96                     
  7033                           ; BSR set to: 0
  7034  004C96  0E6E               	movlw	low sprintf@f
  7035  004C98  6E50               	movwf	vfprintf@fp^0,c
  7036  004C9A  0E00               	movlw	high sprintf@f
  7037  004C9C  6E51               	movwf	(vfprintf@fp+1)^0,c
  7038  004C9E  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  7039  004CA2  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7040  004CA6  0E6C               	movlw	low sprintf@ap
  7041  004CA8  6E54               	movwf	vfprintf@ap^0,c
  7042  004CAA  0E00               	movlw	high sprintf@ap
  7043  004CAC  6E55               	movwf	(vfprintf@ap+1)^0,c
  7044  004CAE  EC7F  F025         	call	_vfprintf	;wreg free
  7045  004CB2  0100               	movlb	0	; () banked
  7046  004CB4  5171               	movf	(sprintf@f+3)& (0+255),w,b
  7047  004CB6  2560               	addwf	sprintf@s& (0+255),w,b
  7048  004CB8  6ED9               	movwf	fsr2l,c
  7049  004CBA  5172               	movf	(sprintf@f+4)& (0+255),w,b
  7050  004CBC  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7051  004CBE  6EDA               	movwf	fsr2h,c
  7052  004CC0  0E00               	movlw	0
  7053  004CC2  6EDF               	movwf	indf2,c
  7054  004CC4                     
  7055                           ; BSR set to: 0
  7056  004CC4  0012               	return		;funcret
  7057  004CC6                     __end_of_sprintf:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function _vfprintf *****************
  7061 ;; Defined at:
  7062 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  7065 ;;		 -> sprintf@f(11), 
  7066 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  7067 ;;		 -> STR_13(6), STR_2(12), STR_1(14), 
  7068 ;;  ap              2   83[COMRAM] PTR PTR void 
  7069 ;;		 -> sprintf@ap(2), 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  7072 ;;		 -> STR_13(6), STR_2(12), STR_1(14), 
  7073 ;; Return value:  Size  Location     Type
  7074 ;;                  2   79[COMRAM] int 
  7075 ;; Registers used:
  7076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7077 ;; Tracked objects:
  7078 ;;		On entry : 0/0
  7079 ;;		On exit  : 0/0
  7080 ;;		Unchanged: 0/0
  7081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7082 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;Total ram usage:        8 bytes
  7087 ;; Hardware stack levels used: 1
  7088 ;; Hardware stack levels required when called: 7
  7089 ;; This function calls:
  7090 ;;		_vfpfcnvrt
  7091 ;; This function is called by:
  7092 ;;		_sprintf
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text25
  7097  004AFE                     __ptext25:
  7098                           	callstack 0
  7099  004AFE                     _vfprintf:
  7100                           	callstack 21
  7101  004AFE                     
  7102                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7103  004AFE  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  7104  004B02  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7105  004B06                     
  7106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7107  004B06  0E00               	movlw	0
  7108  004B08  0100               	movlb	0	; () banked
  7109  004B0A  6FE9               	movwf	(_nout+1)& (0+255),b
  7110  004B0C  0E00               	movlw	0
  7111  004B0E  6FE8               	movwf	_nout& (0+255),b
  7112                           
  7113                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7114  004B10  EF9D  F025         	goto	l4248
  7115  004B14                     l4246:
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7119  004B14  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7120  004B18  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7121  004B1C  0E56               	movlw	low vfprintf@cfmt
  7122  004B1E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7123  004B20  0E00               	movlw	high vfprintf@cfmt
  7124  004B22  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7125  004B24  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7126  004B28  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7127  004B2C  EC9E  F01C         	call	_vfpfcnvrt	;wreg free
  7128  004B30  5040               	movf	?_vfpfcnvrt^0,w,c
  7129  004B32  0100               	movlb	0	; () banked
  7130  004B34  27E8               	addwf	_nout& (0+255),f,b
  7131  004B36  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7132  004B38  23E9               	addwfc	(_nout+1)& (0+255),f,b
  7133  004B3A                     l4248:
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7137  004B3A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  7138  004B3E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7139  004B42                     	if	0	;tblptru may be non-zero
  7140  004B42                     	endif
  7141  004B42                     	if	0	;tblptru may be non-zero
  7142  004B42                     	endif
  7143  004B42  0008               	tblrd		*
  7144  004B44  50F5               	movf	tablat,w,c
  7145  004B46  0900               	iorlw	0
  7146  004B48  A4D8               	btfss	status,2,c
  7147  004B4A  EFA9  F025         	goto	u4111
  7148  004B4E  EFAB  F025         	goto	u4110
  7149  004B52                     u4111:
  7150  004B52  EF8A  F025         	goto	l4246
  7151  004B56                     u4110:
  7152  004B56                     
  7153                           ; BSR set to: 0
  7154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7155  004B56  C0E8  F050         	movff	_nout,?_vfprintf
  7156  004B5A  C0E9  F051         	movff	_nout+1,?_vfprintf+1
  7157  004B5E                     
  7158                           ; BSR set to: 0
  7159  004B5E  0012               	return		;funcret
  7160  004B60                     __end_of_vfprintf:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _vfpfcnvrt *****************
  7164 ;; Defined at:
  7165 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7168 ;;		 -> sprintf@f(11), 
  7169 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7170 ;;		 -> vfprintf@cfmt(2), 
  7171 ;;  ap              2   67[COMRAM] PTR PTR void 
  7172 ;;		 -> sprintf@ap(2), 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;  ll              8   71[COMRAM] long long 
  7175 ;;  llu             8    0        unsigned long long 
  7176 ;;  f               4    0        unsigned long long 
  7177 ;;  vp              3    0        PTR void 
  7178 ;;  ct              3    0        unsigned char [3]
  7179 ;;  cp              3    0        PTR unsigned char 
  7180 ;;  i               2    0        int 
  7181 ;;  done            2    0        int 
  7182 ;;  c               1    0        unsigned char 
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  2   63[COMRAM] int 
  7185 ;; Registers used:
  7186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7192 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7194 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7195 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7196 ;;Total ram usage:       16 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; Hardware stack levels required when called: 6
  7199 ;; This function calls:
  7200 ;;		_dtoa
  7201 ;;		_fputc
  7202 ;; This function is called by:
  7203 ;;		_vfprintf
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text26
  7208  00393C                     __ptext26:
  7209                           	callstack 0
  7210  00393C                     _vfpfcnvrt:
  7211                           	callstack 21
  7212  00393C                     
  7213                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7214  00393C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7215  003940  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7216  003944  CFDE FFF6          	movff	postinc2,tblptrl
  7217  003948  CFDD FFF7          	movff	postdec2,tblptrh
  7218  00394C                     	if	0	;tblptru may be non-zero
  7219  00394C                     	endif
  7220  00394C                     	if	0	;tblptru may be non-zero
  7221  00394C                     	endif
  7222  00394C  0008               	tblrd		*
  7223  00394E  50F5               	movf	tablat,w,c
  7224  003950  0A25               	xorlw	37
  7225  003952  A4D8               	btfss	status,2,c
  7226  003954  EFAE  F01C         	goto	u3881
  7227  003958  EFB0  F01C         	goto	u3880
  7228  00395C                     u3881:
  7229  00395C  EF5C  F01D         	goto	l4110
  7230  003960                     u3880:
  7231  003960                     
  7232                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7233  003960  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7234  003964  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7235  003968  2ADE               	incf	postinc2,f,c
  7236  00396A  0E00               	movlw	0
  7237  00396C  22DD               	addwfc	postdec2,f,c
  7238  00396E                     
  7239                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7240  00396E  0E00               	movlw	0
  7241  003970  0100               	movlb	0	; () banked
  7242  003972  6FEB               	movwf	(_width+1)& (0+255),b
  7243  003974  0E00               	movlw	0
  7244  003976  6FEA               	movwf	_width& (0+255),b
  7245  003978  C0EA  F0EE         	movff	_width,_flags
  7246  00397C  C0EB  F0EF         	movff	_width+1,_flags+1
  7247  003980                     
  7248                           ; BSR set to: 0
  7249                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7250  003980  69EC               	setf	_prec& (0+255),b
  7251  003982  69ED               	setf	(_prec+1)& (0+255),b
  7252  003984                     
  7253                           ; BSR set to: 0
  7254                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7255  003984  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7256  003988  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7257  00398C  CFDE FFF6          	movff	postinc2,tblptrl
  7258  003990  CFDD FFF7          	movff	postdec2,tblptrh
  7259  003994                     	if	0	;tblptru may be non-zero
  7260  003994                     	endif
  7261  003994                     	if	0	;tblptru may be non-zero
  7262  003994                     	endif
  7263  003994  0008               	tblrd		*
  7264  003996  50F5               	movf	tablat,w,c
  7265  003998  0A64               	xorlw	100
  7266  00399A  B4D8               	btfsc	status,2,c
  7267  00399C  EFD2  F01C         	goto	u3891
  7268  0039A0  EFD4  F01C         	goto	u3890
  7269  0039A4                     u3891:
  7270  0039A4  EFE6  F01C         	goto	l4088
  7271  0039A8                     u3890:
  7272  0039A8                     
  7273                           ; BSR set to: 0
  7274  0039A8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7275  0039AC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7276  0039B0  CFDE FFF6          	movff	postinc2,tblptrl
  7277  0039B4  CFDD FFF7          	movff	postdec2,tblptrh
  7278  0039B8                     	if	0	;tblptru may be non-zero
  7279  0039B8                     	endif
  7280  0039B8                     	if	0	;tblptru may be non-zero
  7281  0039B8                     	endif
  7282  0039B8  0008               	tblrd		*
  7283  0039BA  50F5               	movf	tablat,w,c
  7284  0039BC  0A69               	xorlw	105
  7285  0039BE  A4D8               	btfss	status,2,c
  7286  0039C0  EFE4  F01C         	goto	u3901
  7287  0039C4  EFE6  F01C         	goto	u3900
  7288  0039C8                     u3901:
  7289  0039C8  EF26  F01D         	goto	l4094
  7290  0039CC                     u3900:
  7291  0039CC                     l4088:
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7295  0039CC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7296  0039D0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7297  0039D4  2ADE               	incf	postinc2,f,c
  7298  0039D6  0E00               	movlw	0
  7299  0039D8  22DD               	addwfc	postdec2,f,c
  7300                           
  7301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7302  0039DA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7303  0039DE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7304  0039E2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7305  0039E6  0E02               	movlw	2
  7306  0039E8  26DE               	addwf	postinc2,f,c
  7307  0039EA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7308  0039EE  0E00               	movlw	0
  7309  0039F0  22DD               	addwfc	postdec2,f,c
  7310  0039F2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7311  0039F6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7312  0039FA  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  7313  0039FE  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  7314  003A02  0E00               	movlw	0
  7315  003A04  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7316  003A06  0EFF               	movlw	-1
  7317  003A08  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  7318  003A0A  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  7319  003A0C  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  7320  003A0E  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  7321  003A10  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  7322  003A12  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  7323  003A14                     
  7324                           ; BSR set to: 0
  7325                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7326  003A14  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7327  003A18  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7328  003A1C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7329  003A20  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7330  003A24  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7331  003A28  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7332  003A2C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7333  003A30  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7334  003A34  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7335  003A38  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7336  003A3C  EC3A  F017         	call	_dtoa	;wreg free
  7337  003A40  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7338  003A44  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7339  003A48  EF77  F01D         	goto	l1428
  7340  003A4C                     l4094:
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7344  003A4C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7345  003A50  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7346  003A54  CFDE FFF6          	movff	postinc2,tblptrl
  7347  003A58  CFDD FFF7          	movff	postdec2,tblptrh
  7348  003A5C                     	if	0	;tblptru may be non-zero
  7349  003A5C                     	endif
  7350  003A5C                     	if	0	;tblptru may be non-zero
  7351  003A5C                     	endif
  7352  003A5C  0008               	tblrd		*
  7353  003A5E  50F5               	movf	tablat,w,c
  7354  003A60  0A25               	xorlw	37
  7355  003A62  A4D8               	btfss	status,2,c
  7356  003A64  EF36  F01D         	goto	u3911
  7357  003A68  EF38  F01D         	goto	u3910
  7358  003A6C                     u3911:
  7359  003A6C  EF4F  F01D         	goto	l4104
  7360  003A70                     u3910:
  7361  003A70                     
  7362                           ; BSR set to: 0
  7363                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7364  003A70  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7365  003A74  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7366  003A78  2ADE               	incf	postinc2,f,c
  7367  003A7A  0E00               	movlw	0
  7368  003A7C  22DD               	addwfc	postdec2,f,c
  7369  003A7E                     
  7370                           ; BSR set to: 0
  7371                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7372  003A7E  0E00               	movlw	0
  7373  003A80  6E02               	movwf	(fputc@c+1)^0,c
  7374  003A82  0E25               	movlw	37
  7375  003A84  6E01               	movwf	fputc@c^0,c
  7376  003A86  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7377  003A8A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7378  003A8E  EC15  F023         	call	_fputc	;wreg free
  7379  003A92                     l4100:
  7380                           
  7381                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7382  003A92  0E00               	movlw	0
  7383  003A94  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7384  003A96  0E01               	movlw	1
  7385  003A98  6E40               	movwf	?_vfpfcnvrt^0,c
  7386  003A9A  EF77  F01D         	goto	l1428
  7387  003A9E                     l4104:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7391  003A9E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7392  003AA2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7393  003AA6  2ADE               	incf	postinc2,f,c
  7394  003AA8  0E00               	movlw	0
  7395  003AAA  22DD               	addwfc	postdec2,f,c
  7396  003AAC                     
  7397                           ; BSR set to: 0
  7398                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7399  003AAC  0E00               	movlw	0
  7400  003AAE  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7401  003AB0  0E00               	movlw	0
  7402  003AB2  6E40               	movwf	?_vfpfcnvrt^0,c
  7403  003AB4  EF77  F01D         	goto	l1428
  7404  003AB8                     l4110:
  7405                           
  7406                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7407  003AB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7408  003ABC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7409  003AC0  CFDE FFF6          	movff	postinc2,tblptrl
  7410  003AC4  CFDD FFF7          	movff	postdec2,tblptrh
  7411  003AC8                     	if	0	;tblptru may be non-zero
  7412  003AC8                     	endif
  7413  003AC8                     	if	0	;tblptru may be non-zero
  7414  003AC8                     	endif
  7415  003AC8  0008               	tblrd		*
  7416  003ACA  50F5               	movf	tablat,w,c
  7417  003ACC  6E01               	movwf	fputc@c^0,c
  7418  003ACE  6A02               	clrf	(fputc@c+1)^0,c
  7419  003AD0  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7420  003AD4  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7421  003AD8  EC15  F023         	call	_fputc	;wreg free
  7422  003ADC                     
  7423                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7424  003ADC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7425  003AE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7426  003AE4  2ADE               	incf	postinc2,f,c
  7427  003AE6  0E00               	movlw	0
  7428  003AE8  22DD               	addwfc	postdec2,f,c
  7429  003AEA  EF49  F01D         	goto	l4100
  7430  003AEE                     l1428:
  7431  003AEE  0012               	return		;funcret
  7432  003AF0                     __end_of_vfpfcnvrt:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _dtoa *****************
  7436 ;; Defined at:
  7437 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7440 ;;		 -> sprintf@f(11), 
  7441 ;;  d               8   29[COMRAM] long long 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  n               8   53[COMRAM] long long 
  7444 ;;  i               2   61[COMRAM] int 
  7445 ;;  s               2   51[COMRAM] int 
  7446 ;;  w               2   49[COMRAM] int 
  7447 ;;  p               2   47[COMRAM] int 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  2   27[COMRAM] int 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7457 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;Total ram usage:       36 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; Hardware stack levels required when called: 5
  7464 ;; This function calls:
  7465 ;;		___aodiv
  7466 ;;		___aomod
  7467 ;;		_abs
  7468 ;;		_pad
  7469 ;; This function is called by:
  7470 ;;		_vfpfcnvrt
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text27
  7475  002E74                     __ptext27:
  7476                           	callstack 0
  7477  002E74                     _dtoa:
  7478                           	callstack 21
  7479  002E74                     
  7480                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7481  002E74  C01E  F036         	movff	dtoa@d,dtoa@n
  7482  002E78  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7483  002E7C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7484  002E80  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7485  002E84  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7486  002E88  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7487  002E8C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7488  002E90  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7489  002E94                     
  7490                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7491  002E94  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7492  002E96  EF4F  F017         	goto	u3421
  7493  002E9A  EF52  F017         	goto	u3420
  7494  002E9E                     u3421:
  7495  002E9E  0E01               	movlw	1
  7496  002EA0  EF53  F017         	goto	u3430
  7497  002EA4                     u3420:
  7498  002EA4  0E00               	movlw	0
  7499  002EA6                     u3430:
  7500  002EA6  6E34               	movwf	dtoa@s^0,c
  7501  002EA8  6A35               	clrf	(dtoa@s+1)^0,c
  7502                           
  7503                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7504  002EAA  5034               	movf	dtoa@s^0,w,c
  7505  002EAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7506  002EAE  B4D8               	btfsc	status,2,c
  7507  002EB0  EF5C  F017         	goto	u3441
  7508  002EB4  EF5E  F017         	goto	u3440
  7509  002EB8                     u3441:
  7510  002EB8  EF6E  F017         	goto	l3802
  7511  002EBC                     u3440:
  7512  002EBC                     
  7513                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7514  002EBC  1E3D               	comf	(dtoa@n+7)^0,f,c
  7515  002EBE  1E3C               	comf	(dtoa@n+6)^0,f,c
  7516  002EC0  1E3B               	comf	(dtoa@n+5)^0,f,c
  7517  002EC2  1E3A               	comf	(dtoa@n+4)^0,f,c
  7518  002EC4  1E39               	comf	(dtoa@n+3)^0,f,c
  7519  002EC6  1E38               	comf	(dtoa@n+2)^0,f,c
  7520  002EC8  1E37               	comf	(dtoa@n+1)^0,f,c
  7521  002ECA  6C36               	negf	dtoa@n^0,c
  7522  002ECC  0E00               	movlw	0
  7523  002ECE  2237               	addwfc	(dtoa@n+1)^0,f,c
  7524  002ED0  2238               	addwfc	(dtoa@n+2)^0,f,c
  7525  002ED2  2239               	addwfc	(dtoa@n+3)^0,f,c
  7526  002ED4  223A               	addwfc	(dtoa@n+4)^0,f,c
  7527  002ED6  223B               	addwfc	(dtoa@n+5)^0,f,c
  7528  002ED8  223C               	addwfc	(dtoa@n+6)^0,f,c
  7529  002EDA  223D               	addwfc	(dtoa@n+7)^0,f,c
  7530  002EDC                     l3802:
  7531                           
  7532                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7533  002EDC  0100               	movlb	0	; () banked
  7534  002EDE  BFED               	btfsc	(_prec+1)& (0+255),7,b
  7535  002EE0  EF74  F017         	goto	u3451
  7536  002EE4  EF76  F017         	goto	u3450
  7537  002EE8                     u3451:
  7538  002EE8  EF77  F017         	goto	l3806
  7539  002EEC                     u3450:
  7540  002EEC                     
  7541                           ; BSR set to: 0
  7542                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7543  002EEC  93EE               	bcf	_flags& (0+255),1,b
  7544  002EEE                     l3806:
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7548  002EEE  BFED               	btfsc	(_prec+1)& (0+255),7,b
  7549  002EF0  EF84  F017         	goto	u3460
  7550  002EF4  51ED               	movf	(_prec+1)& (0+255),w,b
  7551  002EF6  E106               	bnz	u3461
  7552  002EF8  05EC               	decf	_prec& (0+255),w,b
  7553  002EFA  B0D8               	btfsc	status,0,c
  7554  002EFC  EF82  F017         	goto	u3461
  7555  002F00  EF84  F017         	goto	u3460
  7556  002F04                     u3461:
  7557  002F04  EF8A  F017         	goto	l1401
  7558  002F08                     u3460:
  7559  002F08                     
  7560                           ; BSR set to: 0
  7561  002F08  0E00               	movlw	0
  7562  002F0A  6E31               	movwf	(dtoa@p+1)^0,c
  7563  002F0C  0E01               	movlw	1
  7564  002F0E  6E30               	movwf	dtoa@p^0,c
  7565  002F10  EF8E  F017         	goto	l1403
  7566  002F14                     l1401:
  7567                           
  7568                           ; BSR set to: 0
  7569  002F14  C0EC  F030         	movff	_prec,dtoa@p
  7570  002F18  C0ED  F031         	movff	_prec+1,dtoa@p+1
  7571  002F1C                     l1403:
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7575  002F1C  C0EA  F032         	movff	_width,dtoa@w
  7576  002F20  C0EB  F033         	movff	_width+1,dtoa@w+1
  7577  002F24                     
  7578                           ; BSR set to: 0
  7579                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7580  002F24  5034               	movf	dtoa@s^0,w,c
  7581  002F26  1035               	iorwf	(dtoa@s+1)^0,w,c
  7582  002F28  A4D8               	btfss	status,2,c
  7583  002F2A  EF99  F017         	goto	u3471
  7584  002F2E  EF9B  F017         	goto	u3470
  7585  002F32                     u3471:
  7586  002F32  EFA2  F017         	goto	l3814
  7587  002F36                     u3470:
  7588  002F36                     
  7589                           ; BSR set to: 0
  7590  002F36  A5EE               	btfss	_flags& (0+255),2,b
  7591  002F38  EFA0  F017         	goto	u3481
  7592  002F3C  EFA2  F017         	goto	u3480
  7593  002F40                     u3481:
  7594  002F40  EFA5  F017         	goto	l3816
  7595  002F44                     u3480:
  7596  002F44                     l3814:
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7600  002F44  0632               	decf	dtoa@w^0,f,c
  7601  002F46  A0D8               	btfss	status,0,c
  7602  002F48  0633               	decf	(dtoa@w+1)^0,f,c
  7603  002F4A                     l3816:
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7607  002F4A  0E00               	movlw	0
  7608  002F4C  6E3F               	movwf	(dtoa@i+1)^0,c
  7609  002F4E  0E1F               	movlw	31
  7610  002F50  6E3E               	movwf	dtoa@i^0,c
  7611  002F52                     
  7612                           ; BSR set to: 0
  7613                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7614  002F52  0E00               	movlw	0
  7615  002F54  0101               	movlb	1	; () banked
  7616  002F56  6FB0               	movwf	(_dbuf+31)& (0+255),b
  7617                           
  7618                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7619  002F58  EF2A  F018         	goto	l3830
  7620  002F5C                     l3820:
  7621                           
  7622                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7623  002F5C  063E               	decf	dtoa@i^0,f,c
  7624  002F5E  A0D8               	btfss	status,0,c
  7625  002F60  063F               	decf	(dtoa@i+1)^0,f,c
  7626  002F62                     
  7627                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7628  002F62  0E91               	movlw	low _dbuf
  7629  002F64  243E               	addwf	dtoa@i^0,w,c
  7630  002F66  6ED9               	movwf	fsr2l,c
  7631  002F68  0E01               	movlw	high _dbuf
  7632  002F6A  203F               	addwfc	(dtoa@i+1)^0,w,c
  7633  002F6C  6EDA               	movwf	fsr2h,c
  7634  002F6E  C036  F001         	movff	dtoa@n,___aomod@dividend
  7635  002F72  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7636  002F76  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7637  002F7A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7638  002F7E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7639  002F82  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7640  002F86  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7641  002F8A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7642  002F8E  0E0A               	movlw	10
  7643  002F90  6E09               	movwf	___aomod@divisor^0,c
  7644  002F92  0E00               	movlw	0
  7645  002F94  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7646  002F96  0E00               	movlw	0
  7647  002F98  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7648  002F9A  0E00               	movlw	0
  7649  002F9C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7650  002F9E  0E00               	movlw	0
  7651  002FA0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7652  002FA2  0E00               	movlw	0
  7653  002FA4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7654  002FA6  0E00               	movlw	0
  7655  002FA8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7656  002FAA  0E00               	movlw	0
  7657  002FAC  6E10               	movwf	(___aomod@divisor+7)^0,c
  7658  002FAE  EC3C  F01E         	call	___aomod	;wreg free
  7659  002FB2  C001  F026         	movff	?___aomod,??_dtoa
  7660  002FB6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7661  002FBA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7662  002FBE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7663  002FC2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7664  002FC6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7665  002FCA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7666  002FCE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7667  002FD2  C026  F013         	movff	??_dtoa,abs@a
  7668  002FD6  C028  F014         	movff	??_dtoa+2,abs@a+1
  7669  002FDA  EC12  F028         	call	_abs	;wreg free
  7670  002FDE  5013               	movf	?_abs^0,w,c
  7671  002FE0  0F30               	addlw	48
  7672  002FE2  6EDF               	movwf	indf2,c
  7673  002FE4                     
  7674                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7675  002FE4  0630               	decf	dtoa@p^0,f,c
  7676  002FE6  A0D8               	btfss	status,0,c
  7677  002FE8  0631               	decf	(dtoa@p+1)^0,f,c
  7678  002FEA                     
  7679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7680  002FEA  0632               	decf	dtoa@w^0,f,c
  7681  002FEC  A0D8               	btfss	status,0,c
  7682  002FEE  0633               	decf	(dtoa@w+1)^0,f,c
  7683  002FF0                     
  7684                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7685  002FF0  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7686  002FF4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7687  002FF8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7688  002FFC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7689  003000  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7690  003004  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7691  003008  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7692  00300C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7693  003010  0E0A               	movlw	10
  7694  003012  6E09               	movwf	___aodiv@divisor^0,c
  7695  003014  0E00               	movlw	0
  7696  003016  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7697  003018  0E00               	movlw	0
  7698  00301A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7699  00301C  0E00               	movlw	0
  7700  00301E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7701  003020  0E00               	movlw	0
  7702  003022  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7703  003024  0E00               	movlw	0
  7704  003026  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7705  003028  0E00               	movlw	0
  7706  00302A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7707  00302C  0E00               	movlw	0
  7708  00302E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7709  003030  EC78  F01D         	call	___aodiv	;wreg free
  7710  003034  C001  F036         	movff	?___aodiv,dtoa@n
  7711  003038  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7712  00303C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7713  003040  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7714  003044  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7715  003048  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7716  00304C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7717  003050  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7718  003054                     l3830:
  7719                           
  7720                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7721  003054  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7722  003056  EF35  F018         	goto	u3491
  7723  00305A  503F               	movf	(dtoa@i+1)^0,w,c
  7724  00305C  E108               	bnz	u3490
  7725  00305E  043E               	decf	dtoa@i^0,w,c
  7726  003060  A0D8               	btfss	status,0,c
  7727  003062  EF35  F018         	goto	u3491
  7728  003066  EF37  F018         	goto	u3490
  7729  00306A                     u3491:
  7730  00306A  EF68  F018         	goto	l3840
  7731  00306E                     u3490:
  7732  00306E  5036               	movf	dtoa@n^0,w,c
  7733  003070  1037               	iorwf	(dtoa@n+1)^0,w,c
  7734  003072  1038               	iorwf	(dtoa@n+2)^0,w,c
  7735  003074  1039               	iorwf	(dtoa@n+3)^0,w,c
  7736  003076  103A               	iorwf	(dtoa@n+4)^0,w,c
  7737  003078  103B               	iorwf	(dtoa@n+5)^0,w,c
  7738  00307A  103C               	iorwf	(dtoa@n+6)^0,w,c
  7739  00307C  103D               	iorwf	(dtoa@n+7)^0,w,c
  7740  00307E  A4D8               	btfss	status,2,c
  7741  003080  EF44  F018         	goto	u3501
  7742  003084  EF46  F018         	goto	u3500
  7743  003088                     u3501:
  7744  003088  EFAE  F017         	goto	l3820
  7745  00308C                     u3500:
  7746  00308C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7747  00308E  EF53  F018         	goto	u3510
  7748  003092  5031               	movf	(dtoa@p+1)^0,w,c
  7749  003094  E106               	bnz	u3511
  7750  003096  0430               	decf	dtoa@p^0,w,c
  7751  003098  B0D8               	btfsc	status,0,c
  7752  00309A  EF51  F018         	goto	u3511
  7753  00309E  EF53  F018         	goto	u3510
  7754  0030A2                     u3511:
  7755  0030A2  EFAE  F017         	goto	l3820
  7756  0030A6                     u3510:
  7757  0030A6  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7758  0030A8  EF5E  F018         	goto	u3521
  7759  0030AC  5033               	movf	(dtoa@w+1)^0,w,c
  7760  0030AE  E108               	bnz	u3520
  7761  0030B0  0432               	decf	dtoa@w^0,w,c
  7762  0030B2  A0D8               	btfss	status,0,c
  7763  0030B4  EF5E  F018         	goto	u3521
  7764  0030B8  EF60  F018         	goto	u3520
  7765  0030BC                     u3521:
  7766  0030BC  EF68  F018         	goto	l3840
  7767  0030C0                     u3520:
  7768  0030C0  0100               	movlb	0	; () banked
  7769  0030C2  B3EE               	btfsc	_flags& (0+255),1,b
  7770  0030C4  EF66  F018         	goto	u3531
  7771  0030C8  EF68  F018         	goto	u3530
  7772  0030CC                     u3531:
  7773  0030CC  EFAE  F017         	goto	l3820
  7774  0030D0                     u3530:
  7775  0030D0                     l3840:
  7776                           
  7777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7778  0030D0  5034               	movf	dtoa@s^0,w,c
  7779  0030D2  1035               	iorwf	(dtoa@s+1)^0,w,c
  7780  0030D4  A4D8               	btfss	status,2,c
  7781  0030D6  EF6F  F018         	goto	u3541
  7782  0030DA  EF71  F018         	goto	u3540
  7783  0030DE                     u3541:
  7784  0030DE  EF79  F018         	goto	l3844
  7785  0030E2                     u3540:
  7786  0030E2  0100               	movlb	0	; () banked
  7787  0030E4  A5EE               	btfss	_flags& (0+255),2,b
  7788  0030E6  EF77  F018         	goto	u3551
  7789  0030EA  EF79  F018         	goto	u3550
  7790  0030EE                     u3551:
  7791  0030EE  EF97  F018         	goto	l3854
  7792  0030F2                     u3550:
  7793  0030F2                     l3844:
  7794                           
  7795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7796  0030F2  063E               	decf	dtoa@i^0,f,c
  7797  0030F4  A0D8               	btfss	status,0,c
  7798  0030F6  063F               	decf	(dtoa@i+1)^0,f,c
  7799  0030F8                     
  7800                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7801  0030F8  5034               	movf	dtoa@s^0,w,c
  7802  0030FA  1035               	iorwf	(dtoa@s+1)^0,w,c
  7803  0030FC  A4D8               	btfss	status,2,c
  7804  0030FE  EF83  F018         	goto	u3561
  7805  003102  EF85  F018         	goto	u3560
  7806  003106                     u3561:
  7807  003106  EF8B  F018         	goto	l3850
  7808  00310A                     u3560:
  7809  00310A  0E00               	movlw	0
  7810  00310C  6E2F               	movwf	(_dtoa$2509+1)^0,c
  7811  00310E  0E2B               	movlw	43
  7812  003110  6E2E               	movwf	_dtoa$2509^0,c
  7813  003112  EF8F  F018         	goto	l3852
  7814  003116                     l3850:
  7815  003116  0E00               	movlw	0
  7816  003118  6E2F               	movwf	(_dtoa$2509+1)^0,c
  7817  00311A  0E2D               	movlw	45
  7818  00311C  6E2E               	movwf	_dtoa$2509^0,c
  7819  00311E                     l3852:
  7820  00311E  0E91               	movlw	low _dbuf
  7821  003120  243E               	addwf	dtoa@i^0,w,c
  7822  003122  6ED9               	movwf	fsr2l,c
  7823  003124  0E01               	movlw	high _dbuf
  7824  003126  203F               	addwfc	(dtoa@i+1)^0,w,c
  7825  003128  6EDA               	movwf	fsr2h,c
  7826  00312A  C02E  FFDF         	movff	_dtoa$2509,indf2
  7827  00312E                     l3854:
  7828                           
  7829                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7830  00312E  C01C  F011         	movff	dtoa@fp,pad@fp
  7831  003132  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7832  003136  0E91               	movlw	low _dbuf
  7833  003138  243E               	addwf	dtoa@i^0,w,c
  7834  00313A  6E13               	movwf	pad@buf^0,c
  7835  00313C  0E01               	movlw	high _dbuf
  7836  00313E  203F               	addwfc	(dtoa@i+1)^0,w,c
  7837  003140  6E14               	movwf	(pad@buf+1)^0,c
  7838  003142  C032  F015         	movff	dtoa@w,pad@p
  7839  003146  C033  F016         	movff	dtoa@w+1,pad@p+1
  7840  00314A  EC7A  F023         	call	_pad	;wreg free
  7841  00314E  C011  F01C         	movff	?_pad,?_dtoa
  7842  003152  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7843  003156  0012               	return		;funcret
  7844  003158                     __end_of_dtoa:
  7845                           	callstack 0
  7846                           
  7847 ;; *************** function _pad *****************
  7848 ;; Defined at:
  7849 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7852 ;;		 -> sprintf@f(11), 
  7853 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7854 ;;		 -> dbuf(32), 
  7855 ;;  p               2   20[COMRAM] int 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;  w               2   25[COMRAM] int 
  7858 ;;  i               2   23[COMRAM] int 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  2   16[COMRAM] int 
  7861 ;; Registers used:
  7862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7868 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7869 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7871 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7872 ;;Total ram usage:       11 bytes
  7873 ;; Hardware stack levels used: 1
  7874 ;; Hardware stack levels required when called: 4
  7875 ;; This function calls:
  7876 ;;		_fputc
  7877 ;;		_fputs
  7878 ;;		_strlen
  7879 ;; This function is called by:
  7880 ;;		_dtoa
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text28
  7885  0046F4                     __ptext28:
  7886                           	callstack 0
  7887  0046F4                     _pad:
  7888                           	callstack 21
  7889  0046F4                     
  7890                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7891  0046F4  0100               	movlb	0	; () banked
  7892  0046F6  A1EE               	btfss	_flags& (0+255),0,b
  7893  0046F8  EF80  F023         	goto	u2921
  7894  0046FC  EF82  F023         	goto	u2920
  7895  004700                     u2921:
  7896  004700  EF8C  F023         	goto	l3554
  7897  004704                     u2920:
  7898  004704                     
  7899                           ; BSR set to: 0
  7900                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7901  004704  C013  F00A         	movff	pad@buf,fputs@s
  7902  004708  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7903  00470C  C011  F00C         	movff	pad@fp,fputs@fp
  7904  004710  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7905  004714  EC4B  F027         	call	_fputs	;wreg free
  7906  004718                     l3554:
  7907                           
  7908                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7909  004718  BE16               	btfsc	(pad@p+1)^0,7,c
  7910  00471A  EF91  F023         	goto	u2931
  7911  00471E  EF93  F023         	goto	u2930
  7912  004722                     u2931:
  7913  004722  EF99  F023         	goto	l3558
  7914  004726                     u2930:
  7915  004726  C015  F01A         	movff	pad@p,pad@w
  7916  00472A  C016  F01B         	movff	pad@p+1,pad@w+1
  7917  00472E  EF9D  F023         	goto	l1390
  7918  004732                     l3558:
  7919  004732  0E00               	movlw	0
  7920  004734  6E1B               	movwf	(pad@w+1)^0,c
  7921  004736  0E00               	movlw	0
  7922  004738  6E1A               	movwf	pad@w^0,c
  7923  00473A                     l1390:
  7924                           
  7925                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7926  00473A  0E00               	movlw	0
  7927  00473C  6E19               	movwf	(pad@i+1)^0,c
  7928  00473E  0E00               	movlw	0
  7929  004740  6E18               	movwf	pad@i^0,c
  7930                           
  7931                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7932  004742  EFAF  F023         	goto	l3564
  7933  004746                     l3560:
  7934                           
  7935                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7936  004746  0E00               	movlw	0
  7937  004748  6E02               	movwf	(fputc@c+1)^0,c
  7938  00474A  0E20               	movlw	32
  7939  00474C  6E01               	movwf	fputc@c^0,c
  7940  00474E  C011  F003         	movff	pad@fp,fputc@fp
  7941  004752  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7942  004756  EC15  F023         	call	_fputc	;wreg free
  7943  00475A                     
  7944                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7945  00475A  4A18               	infsnz	pad@i^0,f,c
  7946  00475C  2A19               	incf	(pad@i+1)^0,f,c
  7947  00475E                     l3564:
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7950  00475E  501A               	movf	pad@w^0,w,c
  7951  004760  5C18               	subwf	pad@i^0,w,c
  7952  004762  5019               	movf	(pad@i+1)^0,w,c
  7953  004764  0A80               	xorlw	128
  7954  004766  6E17               	movwf	??_pad^0,c
  7955  004768  501B               	movf	(pad@w+1)^0,w,c
  7956  00476A  0A80               	xorlw	128
  7957  00476C  5817               	subwfb	??_pad^0,w,c
  7958  00476E  A0D8               	btfss	status,0,c
  7959  004770  EFBC  F023         	goto	u2941
  7960  004774  EFBE  F023         	goto	u2940
  7961  004778                     u2941:
  7962  004778  EFA3  F023         	goto	l3560
  7963  00477C                     u2940:
  7964  00477C                     
  7965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7966  00477C  0100               	movlb	0	; () banked
  7967  00477E  B1EE               	btfsc	_flags& (0+255),0,b
  7968  004780  EFC4  F023         	goto	u2951
  7969  004784  EFC6  F023         	goto	u2950
  7970  004788                     u2951:
  7971  004788  EFD0  F023         	goto	l3568
  7972  00478C                     u2950:
  7973  00478C                     
  7974                           ; BSR set to: 0
  7975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7976  00478C  C013  F00A         	movff	pad@buf,fputs@s
  7977  004790  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7978  004794  C011  F00C         	movff	pad@fp,fputs@fp
  7979  004798  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7980  00479C  EC4B  F027         	call	_fputs	;wreg free
  7981  0047A0                     l3568:
  7982                           
  7983                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7984  0047A0  C013  F001         	movff	pad@buf,strlen@s
  7985  0047A4  C014  F002         	movff	pad@buf+1,strlen@s+1
  7986  0047A8  EC88  F028         	call	_strlen	;wreg free
  7987  0047AC  501A               	movf	pad@w^0,w,c
  7988  0047AE  2401               	addwf	?_strlen^0,w,c
  7989  0047B0  6E11               	movwf	?_pad^0,c
  7990  0047B2  501B               	movf	(pad@w+1)^0,w,c
  7991  0047B4  2002               	addwfc	(?_strlen+1)^0,w,c
  7992  0047B6  6E12               	movwf	(?_pad+1)^0,c
  7993  0047B8  0012               	return		;funcret
  7994  0047BA                     __end_of_pad:
  7995                           	callstack 0
  7996                           
  7997 ;; *************** function _strlen *****************
  7998 ;; Defined at:
  7999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8002 ;;		 -> dbuf(32), 
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8005 ;;		 -> dbuf(32), 
  8006 ;; Return value:  Size  Location     Type
  8007 ;;                  2    0[COMRAM] unsigned int 
  8008 ;; Registers used:
  8009 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8010 ;; Tracked objects:
  8011 ;;		On entry : 0/0
  8012 ;;		On exit  : 0/0
  8013 ;;		Unchanged: 0/0
  8014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8018 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8019 ;;Total ram usage:        4 bytes
  8020 ;; Hardware stack levels used: 1
  8021 ;; Hardware stack levels required when called: 1
  8022 ;; This function calls:
  8023 ;;		Nothing
  8024 ;; This function is called by:
  8025 ;;		_pad
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           	psect	text29
  8030  005110                     __ptext29:
  8031                           	callstack 0
  8032  005110                     _strlen:
  8033                           	callstack 23
  8034  005110  C001  F003         	movff	strlen@s,strlen@a
  8035  005114  C002  F004         	movff	strlen@s+1,strlen@a+1
  8036  005118  EF90  F028         	goto	l3414
  8037  00511C                     l3412:
  8038  00511C  4A01               	infsnz	strlen@s^0,f,c
  8039  00511E  2A02               	incf	(strlen@s+1)^0,f,c
  8040  005120                     l3414:
  8041  005120  C001  FFD9         	movff	strlen@s,fsr2l
  8042  005124  C002  FFDA         	movff	strlen@s+1,fsr2h
  8043  005128  50DF               	movf	indf2,w,c
  8044  00512A  A4D8               	btfss	status,2,c
  8045  00512C  EF9A  F028         	goto	u2721
  8046  005130  EF9C  F028         	goto	u2720
  8047  005134                     u2721:
  8048  005134  EF8E  F028         	goto	l3412
  8049  005138                     u2720:
  8050  005138  5003               	movf	strlen@a^0,w,c
  8051  00513A  5C01               	subwf	strlen@s^0,w,c
  8052  00513C  6E01               	movwf	?_strlen^0,c
  8053  00513E  5004               	movf	(strlen@a+1)^0,w,c
  8054  005140  5802               	subwfb	(strlen@s+1)^0,w,c
  8055  005142  6E02               	movwf	(?_strlen+1)^0,c
  8056  005144  0012               	return		;funcret
  8057  005146                     __end_of_strlen:
  8058                           	callstack 0
  8059                           
  8060 ;; *************** function _fputs *****************
  8061 ;; Defined at:
  8062 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8065 ;;		 -> dbuf(32), 
  8066 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8067 ;;		 -> sprintf@f(11), 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  i               2   14[COMRAM] int 
  8070 ;;  c               1   13[COMRAM] unsigned char 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  2    9[COMRAM] int 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8084 ;;Total ram usage:        7 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 3
  8087 ;; This function calls:
  8088 ;;		_fputc
  8089 ;; This function is called by:
  8090 ;;		_pad
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text30
  8095  004E96                     __ptext30:
  8096                           	callstack 0
  8097  004E96                     _fputs:
  8098                           	callstack 21
  8099  004E96  0E00               	movlw	0
  8100  004E98  6E10               	movwf	(fputs@i+1)^0,c
  8101  004E9A  0E00               	movlw	0
  8102  004E9C  6E0F               	movwf	fputs@i^0,c
  8103  004E9E  EF5C  F027         	goto	l3408
  8104  004EA2                     l3404:
  8105  004EA2  C00E  F001         	movff	fputs@c,fputc@c
  8106  004EA6  6A02               	clrf	(fputc@c+1)^0,c
  8107  004EA8  C00C  F003         	movff	fputs@fp,fputc@fp
  8108  004EAC  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8109  004EB0  EC15  F023         	call	_fputc	;wreg free
  8110  004EB4  4A0F               	infsnz	fputs@i^0,f,c
  8111  004EB6  2A10               	incf	(fputs@i+1)^0,f,c
  8112  004EB8                     l3408:
  8113  004EB8  500F               	movf	fputs@i^0,w,c
  8114  004EBA  240A               	addwf	fputs@s^0,w,c
  8115  004EBC  6ED9               	movwf	fsr2l,c
  8116  004EBE  5010               	movf	(fputs@i+1)^0,w,c
  8117  004EC0  200B               	addwfc	(fputs@s+1)^0,w,c
  8118  004EC2  6EDA               	movwf	fsr2h,c
  8119  004EC4  50DF               	movf	indf2,w,c
  8120  004EC6  6E0E               	movwf	fputs@c^0,c
  8121  004EC8  500E               	movf	fputs@c^0,w,c
  8122  004ECA  A4D8               	btfss	status,2,c
  8123  004ECC  EF6A  F027         	goto	u2711
  8124  004ED0  EF6C  F027         	goto	u2710
  8125  004ED4                     u2711:
  8126  004ED4  EF51  F027         	goto	l3404
  8127  004ED8                     u2710:
  8128  004ED8  0012               	return		;funcret
  8129  004EDA                     __end_of_fputs:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function _fputc *****************
  8133 ;; Defined at:
  8134 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  c               2    0[COMRAM] int 
  8137 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8138 ;;		 -> sprintf@f(11), 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2    0[COMRAM] int 
  8143 ;; Registers used:
  8144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;Total ram usage:        9 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; Hardware stack levels required when called: 2
  8157 ;; This function calls:
  8158 ;;		_putch
  8159 ;; This function is called by:
  8160 ;;		_pad
  8161 ;;		_vfpfcnvrt
  8162 ;;		_fputs
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text31
  8167  00462A                     __ptext31:
  8168                           	callstack 0
  8169  00462A                     _fputc:
  8170                           	callstack 24
  8171  00462A  5003               	movf	fputc@fp^0,w,c
  8172  00462C  1004               	iorwf	(fputc@fp+1)^0,w,c
  8173  00462E  B4D8               	btfsc	status,2,c
  8174  004630  EF1C  F023         	goto	u2671
  8175  004634  EF1E  F023         	goto	u2670
  8176  004638                     u2671:
  8177  004638  EF27  F023         	goto	l3392
  8178  00463C                     u2670:
  8179  00463C  5003               	movf	fputc@fp^0,w,c
  8180  00463E  1004               	iorwf	(fputc@fp+1)^0,w,c
  8181  004640  A4D8               	btfss	status,2,c
  8182  004642  EF25  F023         	goto	u2681
  8183  004646  EF27  F023         	goto	u2680
  8184  00464A                     u2681:
  8185  00464A  EF2C  F023         	goto	l3394
  8186  00464E                     u2680:
  8187  00464E                     l3392:
  8188  00464E  5001               	movf	fputc@c^0,w,c
  8189  004650  ECB5  F029         	call	_putch
  8190  004654  EF79  F023         	goto	l1454
  8191  004658                     l3394:
  8192  004658  EE20 F009          	lfsr	2,9
  8193  00465C  5003               	movf	fputc@fp^0,w,c
  8194  00465E  26D9               	addwf	fsr2l,f,c
  8195  004660  5004               	movf	(fputc@fp+1)^0,w,c
  8196  004662  22DA               	addwfc	fsr2h,f,c
  8197  004664  50DE               	movf	postinc2,w,c
  8198  004666  10DE               	iorwf	postinc2,w,c
  8199  004668  B4D8               	btfsc	status,2,c
  8200  00466A  EF39  F023         	goto	u2691
  8201  00466E  EF3B  F023         	goto	u2690
  8202  004672                     u2691:
  8203  004672  EF56  F023         	goto	l3398
  8204  004676                     u2690:
  8205  004676  EE20 F009          	lfsr	2,9
  8206  00467A  5003               	movf	fputc@fp^0,w,c
  8207  00467C  26D9               	addwf	fsr2l,f,c
  8208  00467E  5004               	movf	(fputc@fp+1)^0,w,c
  8209  004680  22DA               	addwfc	fsr2h,f,c
  8210  004682  EE10 F003          	lfsr	1,3
  8211  004686  5003               	movf	fputc@fp^0,w,c
  8212  004688  26E1               	addwf	fsr1l,f,c
  8213  00468A  5004               	movf	(fputc@fp+1)^0,w,c
  8214  00468C  22E2               	addwfc	fsr1h,f,c
  8215  00468E  50DE               	movf	postinc2,w,c
  8216  004690  5CE6               	subwf	postinc1,w,c
  8217  004692  50E6               	movf	postinc1,w,c
  8218  004694  0A80               	xorlw	128
  8219  004696  6E09               	movwf	(??_fputc+4)^0,c
  8220  004698  50DE               	movf	postinc2,w,c
  8221  00469A  0A80               	xorlw	128
  8222  00469C  5809               	subwfb	(??_fputc+4)^0,w,c
  8223  00469E  B0D8               	btfsc	status,0,c
  8224  0046A0  EF54  F023         	goto	u2701
  8225  0046A4  EF56  F023         	goto	u2700
  8226  0046A8                     u2701:
  8227  0046A8  EF79  F023         	goto	l1454
  8228  0046AC                     u2700:
  8229  0046AC                     l3398:
  8230  0046AC  EE20 F003          	lfsr	2,3
  8231  0046B0  5003               	movf	fputc@fp^0,w,c
  8232  0046B2  26D9               	addwf	fsr2l,f,c
  8233  0046B4  5004               	movf	(fputc@fp+1)^0,w,c
  8234  0046B6  22DA               	addwfc	fsr2h,f,c
  8235  0046B8  CFDE F005          	movff	postinc2,??_fputc
  8236  0046BC  CFDD F006          	movff	postdec2,??_fputc+1
  8237  0046C0  C003  FFD9         	movff	fputc@fp,fsr2l
  8238  0046C4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8239  0046C8  CFDE F007          	movff	postinc2,??_fputc+2
  8240  0046CC  CFDD F008          	movff	postdec2,??_fputc+3
  8241  0046D0  5005               	movf	??_fputc^0,w,c
  8242  0046D2  2407               	addwf	(??_fputc+2)^0,w,c
  8243  0046D4  6ED9               	movwf	fsr2l,c
  8244  0046D6  5006               	movf	(??_fputc+1)^0,w,c
  8245  0046D8  2008               	addwfc	(??_fputc+3)^0,w,c
  8246  0046DA  6EDA               	movwf	fsr2h,c
  8247  0046DC  C001  FFDF         	movff	fputc@c,indf2
  8248  0046E0  EE20 F003          	lfsr	2,3
  8249  0046E4  5003               	movf	fputc@fp^0,w,c
  8250  0046E6  26D9               	addwf	fsr2l,f,c
  8251  0046E8  5004               	movf	(fputc@fp+1)^0,w,c
  8252  0046EA  22DA               	addwfc	fsr2h,f,c
  8253  0046EC  2ADE               	incf	postinc2,f,c
  8254  0046EE  0E00               	movlw	0
  8255  0046F0  22DD               	addwfc	postdec2,f,c
  8256  0046F2                     l1454:
  8257  0046F2  0012               	return		;funcret
  8258  0046F4                     __end_of_fputc:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function _putch *****************
  8262 ;; Defined at:
  8263 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  c               1    wreg     unsigned char 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  c               1    0[COMRAM] unsigned char 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  1    wreg      void 
  8270 ;; Registers used:
  8271 ;;		wreg
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;Total ram usage:        0 bytes
  8282 ;; Hardware stack levels used: 1
  8283 ;; Hardware stack levels required when called: 1
  8284 ;; This function calls:
  8285 ;;		Nothing
  8286 ;; This function is called by:
  8287 ;;		_fputc
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text32
  8292  00536A                     __ptext32:
  8293                           	callstack 0
  8294  00536A                     _putch:
  8295                           	callstack 24
  8296  00536A  0012               	return		;funcret
  8297  00536C                     __end_of_putch:
  8298                           	callstack 0
  8299                           
  8300 ;; *************** function _abs *****************
  8301 ;; Defined at:
  8302 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  a               2   18[COMRAM] int 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;		None
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  2   18[COMRAM] int 
  8309 ;; Registers used:
  8310 ;;		wreg, status,2, status,0
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8318 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;Total ram usage:        4 bytes
  8321 ;; Hardware stack levels used: 1
  8322 ;; Hardware stack levels required when called: 1
  8323 ;; This function calls:
  8324 ;;		Nothing
  8325 ;; This function is called by:
  8326 ;;		_dtoa
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           	psect	text33
  8331  005024                     __ptext33:
  8332                           	callstack 0
  8333  005024                     _abs:
  8334                           	callstack 24
  8335  005024  BE14               	btfsc	(abs@a+1)^0,7,c
  8336  005026  EF1F  F028         	goto	u2960
  8337  00502A  5014               	movf	(abs@a+1)^0,w,c
  8338  00502C  E106               	bnz	u2961
  8339  00502E  0413               	decf	abs@a^0,w,c
  8340  005030  B0D8               	btfsc	status,0,c
  8341  005032  EF1D  F028         	goto	u2961
  8342  005036  EF1F  F028         	goto	u2960
  8343  00503A                     u2961:
  8344  00503A  EF2D  F028         	goto	l1439
  8345  00503E                     u2960:
  8346  00503E  C013  F015         	movff	abs@a,??_abs
  8347  005042  C014  F016         	movff	abs@a+1,??_abs+1
  8348  005046  1E15               	comf	??_abs^0,f,c
  8349  005048  1E16               	comf	(??_abs+1)^0,f,c
  8350  00504A  4A15               	infsnz	??_abs^0,f,c
  8351  00504C  2A16               	incf	(??_abs+1)^0,f,c
  8352  00504E  C015  F013         	movff	??_abs,?_abs
  8353  005052  C016  F014         	movff	??_abs+1,?_abs+1
  8354  005056  EF31  F028         	goto	l1442
  8355  00505A                     l1439:
  8356  00505A  C013  F013         	movff	abs@a,?_abs
  8357  00505E  C014  F014         	movff	abs@a+1,?_abs+1
  8358  005062                     l1442:
  8359  005062  0012               	return		;funcret
  8360  005064                     __end_of_abs:
  8361                           	callstack 0
  8362                           
  8363 ;; *************** function ___aomod *****************
  8364 ;; Defined at:
  8365 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  dividend        8    0[COMRAM] long long 
  8368 ;;  divisor         8    8[COMRAM] long long 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;  sign            1   17[COMRAM] unsigned char 
  8371 ;;  counter         1   16[COMRAM] unsigned char 
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  8    0[COMRAM] long long 
  8374 ;; Registers used:
  8375 ;;		wreg, status,2, status,0
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8381 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;Total ram usage:       18 bytes
  8386 ;; Hardware stack levels used: 1
  8387 ;; Hardware stack levels required when called: 1
  8388 ;; This function calls:
  8389 ;;		Nothing
  8390 ;; This function is called by:
  8391 ;;		_dtoa
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text34
  8396  003C78                     __ptext34:
  8397                           	callstack 0
  8398  003C78                     ___aomod:
  8399                           	callstack 24
  8400  003C78  0E00               	movlw	0
  8401  003C7A  6E12               	movwf	___aomod@sign^0,c
  8402  003C7C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8403  003C7E  EF45  F01E         	goto	u2800
  8404  003C82  EF43  F01E         	goto	u2801
  8405  003C86                     u2801:
  8406  003C86  EF57  F01E         	goto	l3478
  8407  003C8A                     u2800:
  8408  003C8A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8409  003C8C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8410  003C8E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8411  003C90  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8412  003C92  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8413  003C94  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8414  003C96  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8415  003C98  6C01               	negf	___aomod@dividend^0,c
  8416  003C9A  0E00               	movlw	0
  8417  003C9C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8418  003C9E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8419  003CA0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8420  003CA2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8421  003CA4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8422  003CA6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8423  003CA8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8424  003CAA  0E01               	movlw	1
  8425  003CAC  6E12               	movwf	___aomod@sign^0,c
  8426  003CAE                     l3478:
  8427  003CAE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8428  003CB0  EF5E  F01E         	goto	u2810
  8429  003CB4  EF5C  F01E         	goto	u2811
  8430  003CB8                     u2811:
  8431  003CB8  EF6E  F01E         	goto	l3482
  8432  003CBC                     u2810:
  8433  003CBC  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8434  003CBE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8435  003CC0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8436  003CC2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8437  003CC4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8438  003CC6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8439  003CC8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8440  003CCA  6C09               	negf	___aomod@divisor^0,c
  8441  003CCC  0E00               	movlw	0
  8442  003CCE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8443  003CD0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8444  003CD2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8445  003CD4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8446  003CD6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8447  003CD8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8448  003CDA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8449  003CDC                     l3482:
  8450  003CDC  5009               	movf	___aomod@divisor^0,w,c
  8451  003CDE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8452  003CE0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8453  003CE2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8454  003CE4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8455  003CE6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8456  003CE8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8457  003CEA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8458  003CEC  B4D8               	btfsc	status,2,c
  8459  003CEE  EF7B  F01E         	goto	u2821
  8460  003CF2  EF7D  F01E         	goto	u2820
  8461  003CF6                     u2821:
  8462  003CF6  EFC5  F01E         	goto	l3498
  8463  003CFA                     u2820:
  8464  003CFA  0E01               	movlw	1
  8465  003CFC  6E11               	movwf	___aomod@counter^0,c
  8466  003CFE  EF8B  F01E         	goto	l3488
  8467  003D02                     l3486:
  8468  003D02  90D8               	bcf	status,0,c
  8469  003D04  3609               	rlcf	___aomod@divisor^0,f,c
  8470  003D06  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8471  003D08  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8472  003D0A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8473  003D0C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8474  003D0E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8475  003D10  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8476  003D12  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8477  003D14  2A11               	incf	___aomod@counter^0,f,c
  8478  003D16                     l3488:
  8479  003D16  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8480  003D18  EF90  F01E         	goto	u2831
  8481  003D1C  EF92  F01E         	goto	u2830
  8482  003D20                     u2831:
  8483  003D20  EF81  F01E         	goto	l3486
  8484  003D24                     u2830:
  8485  003D24                     l3490:
  8486  003D24  5009               	movf	___aomod@divisor^0,w,c
  8487  003D26  5C01               	subwf	___aomod@dividend^0,w,c
  8488  003D28  500A               	movf	(___aomod@divisor+1)^0,w,c
  8489  003D2A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8490  003D2C  500B               	movf	(___aomod@divisor+2)^0,w,c
  8491  003D2E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8492  003D30  500C               	movf	(___aomod@divisor+3)^0,w,c
  8493  003D32  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8494  003D34  500D               	movf	(___aomod@divisor+4)^0,w,c
  8495  003D36  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8496  003D38  500E               	movf	(___aomod@divisor+5)^0,w,c
  8497  003D3A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8498  003D3C  500F               	movf	(___aomod@divisor+6)^0,w,c
  8499  003D3E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8500  003D40  5010               	movf	(___aomod@divisor+7)^0,w,c
  8501  003D42  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8502  003D44  A0D8               	btfss	status,0,c
  8503  003D46  EFA7  F01E         	goto	u2841
  8504  003D4A  EFA9  F01E         	goto	u2840
  8505  003D4E                     u2841:
  8506  003D4E  EFB9  F01E         	goto	l3494
  8507  003D52                     u2840:
  8508  003D52  5009               	movf	___aomod@divisor^0,w,c
  8509  003D54  5E01               	subwf	___aomod@dividend^0,f,c
  8510  003D56  500A               	movf	(___aomod@divisor+1)^0,w,c
  8511  003D58  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8512  003D5A  500B               	movf	(___aomod@divisor+2)^0,w,c
  8513  003D5C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8514  003D5E  500C               	movf	(___aomod@divisor+3)^0,w,c
  8515  003D60  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8516  003D62  500D               	movf	(___aomod@divisor+4)^0,w,c
  8517  003D64  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8518  003D66  500E               	movf	(___aomod@divisor+5)^0,w,c
  8519  003D68  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8520  003D6A  500F               	movf	(___aomod@divisor+6)^0,w,c
  8521  003D6C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8522  003D6E  5010               	movf	(___aomod@divisor+7)^0,w,c
  8523  003D70  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8524  003D72                     l3494:
  8525  003D72  90D8               	bcf	status,0,c
  8526  003D74  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8527  003D76  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8528  003D78  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8529  003D7A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8530  003D7C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8531  003D7E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8532  003D80  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8533  003D82  3209               	rrcf	___aomod@divisor^0,f,c
  8534  003D84  2E11               	decfsz	___aomod@counter^0,f,c
  8535  003D86  EF92  F01E         	goto	l3490
  8536  003D8A                     l3498:
  8537  003D8A  5012               	movf	___aomod@sign^0,w,c
  8538  003D8C  B4D8               	btfsc	status,2,c
  8539  003D8E  EFCB  F01E         	goto	u2851
  8540  003D92  EFCD  F01E         	goto	u2850
  8541  003D96                     u2851:
  8542  003D96  EFDD  F01E         	goto	l3502
  8543  003D9A                     u2850:
  8544  003D9A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8545  003D9C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8546  003D9E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8547  003DA0  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8548  003DA2  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8549  003DA4  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8550  003DA6  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8551  003DA8  6C01               	negf	___aomod@dividend^0,c
  8552  003DAA  0E00               	movlw	0
  8553  003DAC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8554  003DAE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8555  003DB0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8556  003DB2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8557  003DB4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8558  003DB6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8559  003DB8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8560  003DBA                     l3502:
  8561  003DBA  C001  F001         	movff	___aomod@dividend,?___aomod
  8562  003DBE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8563  003DC2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8564  003DC6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8565  003DCA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8566  003DCE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8567  003DD2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8568  003DD6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8569  003DDA  0012               	return		;funcret
  8570  003DDC                     __end_of___aomod:
  8571                           	callstack 0
  8572                           
  8573 ;; *************** function ___aodiv *****************
  8574 ;; Defined at:
  8575 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;  dividend        8    0[COMRAM] long long 
  8578 ;;  divisor         8    8[COMRAM] long long 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  quotient        8   18[COMRAM] long long 
  8581 ;;  sign            1   17[COMRAM] unsigned char 
  8582 ;;  counter         1   16[COMRAM] unsigned char 
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  8    0[COMRAM] long long 
  8585 ;; Registers used:
  8586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8592 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8595 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8596 ;;Total ram usage:       26 bytes
  8597 ;; Hardware stack levels used: 1
  8598 ;; Hardware stack levels required when called: 1
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_dtoa
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text35
  8607  003AF0                     __ptext35:
  8608                           	callstack 0
  8609  003AF0                     ___aodiv:
  8610                           	callstack 24
  8611  003AF0  0E00               	movlw	0
  8612  003AF2  6E12               	movwf	___aodiv@sign^0,c
  8613  003AF4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8614  003AF6  EF81  F01D         	goto	u2730
  8615  003AFA  EF7F  F01D         	goto	u2731
  8616  003AFE                     u2731:
  8617  003AFE  EF93  F01D         	goto	l3434
  8618  003B02                     u2730:
  8619  003B02  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8620  003B04  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8621  003B06  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8622  003B08  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8623  003B0A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8624  003B0C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8625  003B0E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8626  003B10  6C09               	negf	___aodiv@divisor^0,c
  8627  003B12  0E00               	movlw	0
  8628  003B14  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8629  003B16  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8630  003B18  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8631  003B1A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8632  003B1C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8633  003B1E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8634  003B20  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8635  003B22  0E01               	movlw	1
  8636  003B24  6E12               	movwf	___aodiv@sign^0,c
  8637  003B26                     l3434:
  8638  003B26  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8639  003B28  EF9A  F01D         	goto	u2740
  8640  003B2C  EF98  F01D         	goto	u2741
  8641  003B30                     u2741:
  8642  003B30  EFAC  F01D         	goto	l3440
  8643  003B34                     u2740:
  8644  003B34  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8645  003B36  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8646  003B38  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8647  003B3A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8648  003B3C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8649  003B3E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8650  003B40  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8651  003B42  6C01               	negf	___aodiv@dividend^0,c
  8652  003B44  0E00               	movlw	0
  8653  003B46  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8654  003B48  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8655  003B4A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8656  003B4C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8657  003B4E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8658  003B50  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8659  003B52  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8660  003B54  0E01               	movlw	1
  8661  003B56  1A12               	xorwf	___aodiv@sign^0,f,c
  8662  003B58                     l3440:
  8663  003B58  EE20  F013         	lfsr	2,___aodiv@quotient
  8664  003B5C  0E07               	movlw	7
  8665  003B5E                     u2751:
  8666  003B5E  6ADE               	clrf	postinc2,c
  8667  003B60  06E8               	decf	wreg,f,c
  8668  003B62  E2FD               	bc	u2751
  8669  003B64  5009               	movf	___aodiv@divisor^0,w,c
  8670  003B66  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8671  003B68  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8672  003B6A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8673  003B6C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8674  003B6E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8675  003B70  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8676  003B72  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8677  003B74  B4D8               	btfsc	status,2,c
  8678  003B76  EFBF  F01D         	goto	u2761
  8679  003B7A  EFC1  F01D         	goto	u2760
  8680  003B7E                     u2761:
  8681  003B7E  EF13  F01E         	goto	l3462
  8682  003B82                     u2760:
  8683  003B82  0E01               	movlw	1
  8684  003B84  6E11               	movwf	___aodiv@counter^0,c
  8685  003B86  EFCF  F01D         	goto	l3448
  8686  003B8A                     l3446:
  8687  003B8A  90D8               	bcf	status,0,c
  8688  003B8C  3609               	rlcf	___aodiv@divisor^0,f,c
  8689  003B8E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8690  003B90  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8691  003B92  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8692  003B94  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8693  003B96  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8694  003B98  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8695  003B9A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8696  003B9C  2A11               	incf	___aodiv@counter^0,f,c
  8697  003B9E                     l3448:
  8698  003B9E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8699  003BA0  EFD4  F01D         	goto	u2771
  8700  003BA4  EFD6  F01D         	goto	u2770
  8701  003BA8                     u2771:
  8702  003BA8  EFC5  F01D         	goto	l3446
  8703  003BAC                     u2770:
  8704  003BAC                     l3450:
  8705  003BAC  90D8               	bcf	status,0,c
  8706  003BAE  3613               	rlcf	___aodiv@quotient^0,f,c
  8707  003BB0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8708  003BB2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8709  003BB4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8710  003BB6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8711  003BB8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8712  003BBA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8713  003BBC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8714  003BBE  5009               	movf	___aodiv@divisor^0,w,c
  8715  003BC0  5C01               	subwf	___aodiv@dividend^0,w,c
  8716  003BC2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8717  003BC4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8718  003BC6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8719  003BC8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8720  003BCA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8721  003BCC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8722  003BCE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8723  003BD0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8724  003BD2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8725  003BD4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8726  003BD6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8727  003BD8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8728  003BDA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8729  003BDC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8730  003BDE  A0D8               	btfss	status,0,c
  8731  003BE0  EFF4  F01D         	goto	u2781
  8732  003BE4  EFF6  F01D         	goto	u2780
  8733  003BE8                     u2781:
  8734  003BE8  EF07  F01E         	goto	l3458
  8735  003BEC                     u2780:
  8736  003BEC  5009               	movf	___aodiv@divisor^0,w,c
  8737  003BEE  5E01               	subwf	___aodiv@dividend^0,f,c
  8738  003BF0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8739  003BF2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8740  003BF4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8741  003BF6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8742  003BF8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8743  003BFA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8744  003BFC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8745  003BFE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8746  003C00  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8747  003C02  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8748  003C04  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8749  003C06  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8750  003C08  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8751  003C0A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8752  003C0C  8013               	bsf	___aodiv@quotient^0,0,c
  8753  003C0E                     l3458:
  8754  003C0E  90D8               	bcf	status,0,c
  8755  003C10  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8756  003C12  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8757  003C14  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8758  003C16  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8759  003C18  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8760  003C1A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8761  003C1C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8762  003C1E  3209               	rrcf	___aodiv@divisor^0,f,c
  8763  003C20  2E11               	decfsz	___aodiv@counter^0,f,c
  8764  003C22  EFD6  F01D         	goto	l3450
  8765  003C26                     l3462:
  8766  003C26  5012               	movf	___aodiv@sign^0,w,c
  8767  003C28  B4D8               	btfsc	status,2,c
  8768  003C2A  EF19  F01E         	goto	u2791
  8769  003C2E  EF1B  F01E         	goto	u2790
  8770  003C32                     u2791:
  8771  003C32  EF2B  F01E         	goto	l3466
  8772  003C36                     u2790:
  8773  003C36  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8774  003C38  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8775  003C3A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8776  003C3C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8777  003C3E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8778  003C40  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8779  003C42  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8780  003C44  6C13               	negf	___aodiv@quotient^0,c
  8781  003C46  0E00               	movlw	0
  8782  003C48  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8783  003C4A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8784  003C4C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8785  003C4E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8786  003C50  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8787  003C52  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8788  003C54  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8789  003C56                     l3466:
  8790  003C56  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8791  003C5A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8792  003C5E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8793  003C62  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8794  003C66  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8795  003C6A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8796  003C6E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8797  003C72  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8798  003C76  0012               	return		;funcret
  8799  003C78                     __end_of___aodiv:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function _sendStringSerial4 *****************
  8803 ;; Defined at:
  8804 ;;		line 36 in file "serial.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  string          2    1[COMRAM] PTR unsigned char 
  8807 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;		None
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  1    wreg      void 
  8812 ;; Registers used:
  8813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;Total ram usage:        2 bytes
  8824 ;; Hardware stack levels used: 1
  8825 ;; Hardware stack levels required when called: 2
  8826 ;; This function calls:
  8827 ;;		_sendCharSerial4
  8828 ;; This function is called by:
  8829 ;;		_color_display
  8830 ;;		_color_predict
  8831 ;;		_check_color_reading
  8832 ;; This function uses a non-reentrant model
  8833 ;;
  8834                           
  8835                           	psect	text36
  8836  00517A                     __ptext36:
  8837                           	callstack 0
  8838  00517A                     _sendStringSerial4:
  8839                           	callstack 27
  8840  00517A                     
  8841                           ;serial.c: 38:     while(*string != 0){
  8842  00517A  EFC8  F028         	goto	l4282
  8843  00517E                     l4278:
  8844                           
  8845                           ;serial.c: 39:   sendCharSerial4(*string++);}
  8846  00517E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8847  005182  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8848  005186  50DF               	movf	indf2,w,c
  8849  005188  EC8D  F029         	call	_sendCharSerial4
  8850  00518C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8851  00518E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8852  005190                     l4282:
  8853                           
  8854                           ;serial.c: 38:     while(*string != 0){
  8855  005190  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8856  005194  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8857  005198  50DF               	movf	indf2,w,c
  8858  00519A  A4D8               	btfss	status,2,c
  8859  00519C  EFD2  F028         	goto	u4121
  8860  0051A0  EFD4  F028         	goto	u4120
  8861  0051A4                     u4121:
  8862  0051A4  EFBF  F028         	goto	l4278
  8863  0051A8                     u4120:
  8864  0051A8  0012               	return		;funcret
  8865  0051AA                     __end_of_sendStringSerial4:
  8866                           	callstack 0
  8867                           
  8868 ;; *************** function _sendCharSerial4 *****************
  8869 ;; Defined at:
  8870 ;;		line 29 in file "serial.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  charToSend      1    wreg     unsigned char 
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;  charToSend      1    0[COMRAM] unsigned char 
  8875 ;; Return value:  Size  Location     Type
  8876 ;;                  1    wreg      void 
  8877 ;; Registers used:
  8878 ;;		wreg
  8879 ;; Tracked objects:
  8880 ;;		On entry : 0/0
  8881 ;;		On exit  : 0/0
  8882 ;;		Unchanged: 0/0
  8883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8888 ;;Total ram usage:        1 bytes
  8889 ;; Hardware stack levels used: 1
  8890 ;; Hardware stack levels required when called: 1
  8891 ;; This function calls:
  8892 ;;		Nothing
  8893 ;; This function is called by:
  8894 ;;		_sendStringSerial4
  8895 ;; This function uses a non-reentrant model
  8896 ;;
  8897                           
  8898                           	psect	text37
  8899  00531A                     __ptext37:
  8900                           	callstack 0
  8901  00531A                     _sendCharSerial4:
  8902                           	callstack 27
  8903                           
  8904                           ;incstack = 0
  8905                           ;sendCharSerial4@charToSend stored from wreg
  8906  00531A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8907  00531C                     l419:
  8908  00531C  010E               	movlb	14	; () banked
  8909  00531E  A537               	btfss	55,2,b	;volatile
  8910  005320  EF94  F029         	goto	u3941
  8911  005324  EF96  F029         	goto	u3940
  8912  005328                     u3941:
  8913  005328  EF8E  F029         	goto	l419
  8914  00532C                     u3940:
  8915  00532C                     
  8916                           ; BSR set to: 14
  8917                           ;serial.c: 31:     TX4REG = charToSend;
  8918  00532C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8919  005330                     
  8920                           ; BSR set to: 14
  8921  005330  0012               	return		;funcret
  8922  005332                     __end_of_sendCharSerial4:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _LED_C *****************
  8926 ;; Defined at:
  8927 ;;		line 109 in file "color.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;Total ram usage:        2 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 1
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_color_data_collection
  8952 ;;		_distance_measure
  8953 ;;		_main
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text38
  8958  005222                     __ptext38:
  8959                           	callstack 0
  8960  005222                     _LED_C:
  8961                           	callstack 28
  8962  005222                     
  8963                           ;color.c: 111:     LATGbits.LATG1 = 1;
  8964  005222  827F               	bsf	127,1,c	;volatile
  8965                           
  8966                           ;color.c: 112:     LATFbits.LATF7 = 1;
  8967  005224  8E7E               	bsf	126,7,c	;volatile
  8968                           
  8969                           ;color.c: 113:     LATAbits.LATA4 = 1;
  8970  005226  8879               	bsf	121,4,c	;volatile
  8971  005228                     
  8972                           ;color.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8973  005228  0E05               	movlw	5
  8974  00522A  6E02               	movwf	(??_LED_C+1)^0,c
  8975  00522C  0E0F               	movlw	15
  8976  00522E  6E01               	movwf	??_LED_C^0,c
  8977  005230  0EF1               	movlw	241
  8978  005232                     u5447:
  8979  005232  2EE8               	decfsz	wreg,f,c
  8980  005234  D7FE               	bra	u5447
  8981  005236  2E01               	decfsz	??_LED_C^0,f,c
  8982  005238  D7FC               	bra	u5447
  8983  00523A  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8984  00523C  D7FA               	bra	u5447
  8985  00523E  F000               	nop	
  8986  005240  0012               	return		;funcret
  8987  005242                     __end_of_LED_C:
  8988                           	callstack 0
  8989                           
  8990 ;; *************** function _color_click_init *****************
  8991 ;; Defined at:
  8992 ;;		line 12 in file "color.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;		None
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		wreg, status,2, status,0, cstack
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;Total ram usage:        1 bytes
  9011 ;; Hardware stack levels used: 1
  9012 ;; Hardware stack levels required when called: 4
  9013 ;; This function calls:
  9014 ;;		_I2C_2_Master_Init
  9015 ;;		_color_writetoaddr
  9016 ;; This function is called by:
  9017 ;;		_main
  9018 ;; This function uses a non-reentrant model
  9019 ;;
  9020                           
  9021                           	psect	text39
  9022  005146                     __ptext39:
  9023                           	callstack 0
  9024  005146                     _color_click_init:
  9025                           	callstack 26
  9026  005146                     
  9027                           ;color.c: 15:     I2C_2_Master_Init();
  9028  005146  ECD5  F028         	call	_I2C_2_Master_Init	;wreg free
  9029  00514A                     
  9030                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  9031  00514A  0E01               	movlw	1
  9032  00514C  6E03               	movwf	color_writetoaddr@value^0,c
  9033  00514E  0E00               	movlw	0
  9034  005150  EC21  F029         	call	_color_writetoaddr
  9035  005154                     
  9036                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9037  005154  0E3F               	movlw	63
  9038  005156  6E05               	movwf	??_color_click_init^0,c
  9039  005158  0E55               	movlw	85
  9040  00515A                     u5457:
  9041  00515A  2EE8               	decfsz	wreg,f,c
  9042  00515C  D7FE               	bra	u5457
  9043  00515E  2E05               	decfsz	??_color_click_init^0,f,c
  9044  005160  D7FC               	bra	u5457
  9045  005162  F000               	nop	
  9046  005164                     
  9047                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  9048  005164  0E03               	movlw	3
  9049  005166  6E03               	movwf	color_writetoaddr@value^0,c
  9050  005168  0E00               	movlw	0
  9051  00516A  EC21  F029         	call	_color_writetoaddr
  9052  00516E                     
  9053                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  9054  00516E  0ED5               	movlw	213
  9055  005170  6E03               	movwf	color_writetoaddr@value^0,c
  9056  005172  0E01               	movlw	1
  9057  005174  EC21  F029         	call	_color_writetoaddr
  9058  005178  0012               	return		;funcret
  9059  00517A                     __end_of_color_click_init:
  9060                           	callstack 0
  9061                           
  9062 ;; *************** function _color_writetoaddr *****************
  9063 ;; Defined at:
  9064 ;;		line 28 in file "color.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  address         1    wreg     unsigned char 
  9067 ;;  value           1    2[COMRAM] unsigned char 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  address         1    3[COMRAM] unsigned char 
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2, status,0, cstack
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9079 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;Total ram usage:        2 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 3
  9086 ;; This function calls:
  9087 ;;		_I2C_2_Master_Start
  9088 ;;		_I2C_2_Master_Stop
  9089 ;;		_I2C_2_Master_Write
  9090 ;; This function is called by:
  9091 ;;		_color_click_init
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text40
  9096  005242                     __ptext40:
  9097                           	callstack 0
  9098  005242                     _color_writetoaddr:
  9099                           	callstack 26
  9100                           
  9101                           ;incstack = 0
  9102                           ;color_writetoaddr@address stored from wreg
  9103  005242  6E04               	movwf	color_writetoaddr@address^0,c
  9104  005244                     
  9105                           ;color.c: 29:     I2C_2_Master_Start();
  9106  005244  ECAA  F029         	call	_I2C_2_Master_Start	;wreg free
  9107                           
  9108                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  9109  005248  0E52               	movlw	82
  9110  00524A  EC99  F029         	call	_I2C_2_Master_Write
  9111                           
  9112                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  9113  00524E  5004               	movf	color_writetoaddr@address^0,w,c
  9114  005250  0980               	iorlw	128
  9115  005252  EC99  F029         	call	_I2C_2_Master_Write
  9116                           
  9117                           ;color.c: 32:     I2C_2_Master_Write(value);
  9118  005256  5003               	movf	color_writetoaddr@value^0,w,c
  9119  005258  EC99  F029         	call	_I2C_2_Master_Write
  9120                           
  9121                           ;color.c: 33:     I2C_2_Master_Stop();
  9122  00525C  ECA5  F029         	call	_I2C_2_Master_Stop	;wreg free
  9123  005260  0012               	return		;funcret
  9124  005262                     __end_of_color_writetoaddr:
  9125                           	callstack 0
  9126                           
  9127 ;; *************** function _I2C_2_Master_Init *****************
  9128 ;; Defined at:
  9129 ;;		line 4 in file "i2c.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;		None
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;		None
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      void 
  9136 ;; Registers used:
  9137 ;;		wreg, status,2
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;Total ram usage:        0 bytes
  9148 ;; Hardware stack levels used: 1
  9149 ;; Hardware stack levels required when called: 1
  9150 ;; This function calls:
  9151 ;;		Nothing
  9152 ;; This function is called by:
  9153 ;;		_color_click_init
  9154 ;;		_main
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text41
  9159  0051AA                     __ptext41:
  9160                           	callstack 0
  9161  0051AA                     _I2C_2_Master_Init:
  9162                           	callstack 28
  9163  0051AA                     
  9164                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9165  0051AA  010E               	movlb	14	; () banked
  9166  0051AC  51D9               	movf	217,w,b	;volatile
  9167  0051AE  0BF0               	andlw	-16
  9168  0051B0  0908               	iorlw	8
  9169  0051B2  6FD9               	movwf	217,b	;volatile
  9170  0051B4                     
  9171                           ; BSR set to: 14
  9172                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9173  0051B4  8BD9               	bsf	217,5,b	;volatile
  9174                           
  9175                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9176  0051B6  0E9F               	movlw	159
  9177  0051B8  6FD6               	movwf	214,b	;volatile
  9178  0051BA                     
  9179                           ; BSR set to: 14
  9180                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9181  0051BA  8A84               	bsf	132,5,c	;volatile
  9182  0051BC                     
  9183                           ; BSR set to: 14
  9184                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9185  0051BC  8C84               	bsf	132,6,c	;volatile
  9186  0051BE                     
  9187                           ; BSR set to: 14
  9188                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9189  0051BE  9BA7               	bcf	167,5,b	;volatile
  9190  0051C0                     
  9191                           ; BSR set to: 14
  9192                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9193  0051C0  9DA7               	bcf	167,6,b	;volatile
  9194                           
  9195                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9196  0051C2  0E1D               	movlw	29
  9197  0051C4  6F1D               	movwf	29,b	;volatile
  9198                           
  9199                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9200  0051C6  0E1E               	movlw	30
  9201  0051C8  6F1C               	movwf	28,b	;volatile
  9202                           
  9203                           ;i2c.c: 18:   RD5PPS=0x1C;
  9204  0051CA  0E1C               	movlw	28
  9205  0051CC  6F6F               	movwf	111,b	;volatile
  9206                           
  9207                           ;i2c.c: 19:   RD6PPS=0x1B;
  9208  0051CE  0E1B               	movlw	27
  9209  0051D0  6F70               	movwf	112,b	;volatile
  9210  0051D2                     
  9211                           ; BSR set to: 14
  9212  0051D2  0012               	return		;funcret
  9213  0051D4                     __end_of_I2C_2_Master_Init:
  9214                           	callstack 0
  9215                           
  9216 ;; *************** function _calibrate_white *****************
  9217 ;; Defined at:
  9218 ;;		line 206 in file "color.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  w               2   11[COMRAM] PTR struct white_card
  9221 ;;		 -> main@white(20), 
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9235 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9236 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9237 ;;Total ram usage:        4 bytes
  9238 ;; Hardware stack levels used: 1
  9239 ;; Hardware stack levels required when called: 4
  9240 ;; This function calls:
  9241 ;;		_LED_B
  9242 ;;		_LED_G
  9243 ;;		_LED_R
  9244 ;;		_color_read_Blue
  9245 ;;		_color_read_Clear
  9246 ;;		_color_read_Green
  9247 ;;		_color_read_Red
  9248 ;; This function is called by:
  9249 ;;		_main
  9250 ;; This function uses a non-reentrant model
  9251 ;;
  9252                           
  9253                           	psect	text42
  9254  003DDC                     __ptext42:
  9255                           	callstack 0
  9256  003DDC                     _calibrate_white:
  9257                           	callstack 26
  9258  003DDC                     
  9259                           ;color.c: 206: void calibrate_white(struct white_card *w);color.c: 207: {;color.c: 208: 
      +                              LED_R();
  9260  003DDC  EC31  F029         	call	_LED_R	;wreg free
  9261  003DE0                     
  9262                           ;color.c: 210:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  9263  003DE0  EC63  F026         	call	_color_read_Red	;wreg free
  9264  003DE4  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  9265  003DE8  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  9266  003DEC  C005  FFDE         	movff	?_color_read_Red,postinc2
  9267  003DF0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9268  003DF4  EC8B  F026         	call	_color_read_Green	;wreg free
  9269  003DF8  EE20 F002          	lfsr	2,2
  9270  003DFC  500C               	movf	calibrate_white@w^0,w,c
  9271  003DFE  26D9               	addwf	fsr2l,f,c
  9272  003E00  500D               	movf	(calibrate_white@w+1)^0,w,c
  9273  003E02  22DA               	addwfc	fsr2h,f,c
  9274  003E04  C005  FFDE         	movff	?_color_read_Green,postinc2
  9275  003E08  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9276  003E0C  ECDB  F026         	call	_color_read_Blue	;wreg free
  9277  003E10  EE20 F004          	lfsr	2,4
  9278  003E14  500C               	movf	calibrate_white@w^0,w,c
  9279  003E16  26D9               	addwf	fsr2l,f,c
  9280  003E18  500D               	movf	(calibrate_white@w+1)^0,w,c
  9281  003E1A  22DA               	addwfc	fsr2h,f,c
  9282  003E1C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9283  003E20  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9284  003E24                     
  9285                           ;color.c: 211:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9286  003E24  0E09               	movlw	9
  9287  003E26  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9288  003E28  0E1E               	movlw	30
  9289  003E2A  6E0E               	movwf	??_calibrate_white^0,c
  9290  003E2C  0EE4               	movlw	228
  9291  003E2E                     u5467:
  9292  003E2E  2EE8               	decfsz	wreg,f,c
  9293  003E30  D7FE               	bra	u5467
  9294  003E32  2E0E               	decfsz	??_calibrate_white^0,f,c
  9295  003E34  D7FC               	bra	u5467
  9296  003E36  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9297  003E38  D7FA               	bra	u5467
  9298  003E3A  D000               	nop2	
  9299  003E3C                     
  9300                           ;color.c: 213:     LED_G();
  9301  003E3C  EC41  F029         	call	_LED_G	;wreg free
  9302  003E40                     
  9303                           ;color.c: 215:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9304  003E40  EC63  F026         	call	_color_read_Red	;wreg free
  9305  003E44  EE20 F006          	lfsr	2,6
  9306  003E48  500C               	movf	calibrate_white@w^0,w,c
  9307  003E4A  26D9               	addwf	fsr2l,f,c
  9308  003E4C  500D               	movf	(calibrate_white@w+1)^0,w,c
  9309  003E4E  22DA               	addwfc	fsr2h,f,c
  9310  003E50  C005  FFDE         	movff	?_color_read_Red,postinc2
  9311  003E54  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9312  003E58  EC8B  F026         	call	_color_read_Green	;wreg free
  9313  003E5C  EE20 F008          	lfsr	2,8
  9314  003E60  500C               	movf	calibrate_white@w^0,w,c
  9315  003E62  26D9               	addwf	fsr2l,f,c
  9316  003E64  500D               	movf	(calibrate_white@w+1)^0,w,c
  9317  003E66  22DA               	addwfc	fsr2h,f,c
  9318  003E68  C005  FFDE         	movff	?_color_read_Green,postinc2
  9319  003E6C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9320  003E70  ECDB  F026         	call	_color_read_Blue	;wreg free
  9321  003E74  EE20 F00A          	lfsr	2,10
  9322  003E78  500C               	movf	calibrate_white@w^0,w,c
  9323  003E7A  26D9               	addwf	fsr2l,f,c
  9324  003E7C  500D               	movf	(calibrate_white@w+1)^0,w,c
  9325  003E7E  22DA               	addwfc	fsr2h,f,c
  9326  003E80  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9327  003E84  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9328  003E88                     
  9329                           ;color.c: 216:     w->GC = color_read_Clear();
  9330  003E88  ECB3  F026         	call	_color_read_Clear	;wreg free
  9331  003E8C  EE20 F012          	lfsr	2,18
  9332  003E90  500C               	movf	calibrate_white@w^0,w,c
  9333  003E92  26D9               	addwf	fsr2l,f,c
  9334  003E94  500D               	movf	(calibrate_white@w+1)^0,w,c
  9335  003E96  22DA               	addwfc	fsr2h,f,c
  9336  003E98  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9337  003E9C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9338  003EA0                     
  9339                           ;color.c: 217:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9340  003EA0  0E09               	movlw	9
  9341  003EA2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9342  003EA4  0E1E               	movlw	30
  9343  003EA6  6E0E               	movwf	??_calibrate_white^0,c
  9344  003EA8  0EE4               	movlw	228
  9345  003EAA                     u5477:
  9346  003EAA  2EE8               	decfsz	wreg,f,c
  9347  003EAC  D7FE               	bra	u5477
  9348  003EAE  2E0E               	decfsz	??_calibrate_white^0,f,c
  9349  003EB0  D7FC               	bra	u5477
  9350  003EB2  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9351  003EB4  D7FA               	bra	u5477
  9352  003EB6  D000               	nop2	
  9353  003EB8                     
  9354                           ;color.c: 219:     LED_B();
  9355  003EB8  EC51  F029         	call	_LED_B	;wreg free
  9356  003EBC                     
  9357                           ;color.c: 221:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  9358  003EBC  EC63  F026         	call	_color_read_Red	;wreg free
  9359  003EC0  EE20 F00C          	lfsr	2,12
  9360  003EC4  500C               	movf	calibrate_white@w^0,w,c
  9361  003EC6  26D9               	addwf	fsr2l,f,c
  9362  003EC8  500D               	movf	(calibrate_white@w+1)^0,w,c
  9363  003ECA  22DA               	addwfc	fsr2h,f,c
  9364  003ECC  C005  FFDE         	movff	?_color_read_Red,postinc2
  9365  003ED0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9366  003ED4  EC8B  F026         	call	_color_read_Green	;wreg free
  9367  003ED8  EE20 F00E          	lfsr	2,14
  9368  003EDC  500C               	movf	calibrate_white@w^0,w,c
  9369  003EDE  26D9               	addwf	fsr2l,f,c
  9370  003EE0  500D               	movf	(calibrate_white@w+1)^0,w,c
  9371  003EE2  22DA               	addwfc	fsr2h,f,c
  9372  003EE4  C005  FFDE         	movff	?_color_read_Green,postinc2
  9373  003EE8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9374  003EEC  ECDB  F026         	call	_color_read_Blue	;wreg free
  9375  003EF0  EE20 F010          	lfsr	2,16
  9376  003EF4  500C               	movf	calibrate_white@w^0,w,c
  9377  003EF6  26D9               	addwf	fsr2l,f,c
  9378  003EF8  500D               	movf	(calibrate_white@w+1)^0,w,c
  9379  003EFA  22DA               	addwfc	fsr2h,f,c
  9380  003EFC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9381  003F00  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9382  003F04                     
  9383                           ;color.c: 222:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9384  003F04  0E09               	movlw	9
  9385  003F06  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9386  003F08  0E1E               	movlw	30
  9387  003F0A  6E0E               	movwf	??_calibrate_white^0,c
  9388  003F0C  0EE4               	movlw	228
  9389  003F0E                     u5487:
  9390  003F0E  2EE8               	decfsz	wreg,f,c
  9391  003F10  D7FE               	bra	u5487
  9392  003F12  2E0E               	decfsz	??_calibrate_white^0,f,c
  9393  003F14  D7FC               	bra	u5487
  9394  003F16  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9395  003F18  D7FA               	bra	u5487
  9396  003F1A  D000               	nop2	
  9397  003F1C  0012               	return		;funcret
  9398  003F1E                     __end_of_calibrate_white:
  9399                           	callstack 0
  9400                           
  9401 ;; *************** function _color_read_Red *****************
  9402 ;; Defined at:
  9403 ;;		line 36 in file "color.c"
  9404 ;; Parameters:    Size  Location     Type
  9405 ;;		None
  9406 ;; Auto vars:     Size  Location     Type
  9407 ;;  tmp             2    9[COMRAM] unsigned int 
  9408 ;; Return value:  Size  Location     Type
  9409 ;;                  2    4[COMRAM] unsigned int 
  9410 ;; Registers used:
  9411 ;;		wreg, status,2, status,0, cstack
  9412 ;; Tracked objects:
  9413 ;;		On entry : 0/0
  9414 ;;		On exit  : 0/0
  9415 ;;		Unchanged: 0/0
  9416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9419 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9420 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9421 ;;Total ram usage:        7 bytes
  9422 ;; Hardware stack levels used: 1
  9423 ;; Hardware stack levels required when called: 3
  9424 ;; This function calls:
  9425 ;;		_I2C_2_Master_Read
  9426 ;;		_I2C_2_Master_RepStart
  9427 ;;		_I2C_2_Master_Start
  9428 ;;		_I2C_2_Master_Stop
  9429 ;;		_I2C_2_Master_Write
  9430 ;; This function is called by:
  9431 ;;		_read_color
  9432 ;;		_calibrate_white
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           	psect	text43
  9437  004CC6                     __ptext43:
  9438                           	callstack 0
  9439  004CC6                     _color_read_Red:
  9440                           	callstack 24
  9441  004CC6                     
  9442                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  9443  004CC6  ECAA  F029         	call	_I2C_2_Master_Start	;wreg free
  9444                           
  9445                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  9446  004CCA  0E52               	movlw	82
  9447  004CCC  EC99  F029         	call	_I2C_2_Master_Write
  9448                           
  9449                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  9450  004CD0  0EB6               	movlw	182
  9451  004CD2  EC99  F029         	call	_I2C_2_Master_Write
  9452                           
  9453                           ;color.c: 42:  I2C_2_Master_RepStart();
  9454  004CD6  ECAF  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9455                           
  9456                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  9457  004CDA  0E53               	movlw	83
  9458  004CDC  EC99  F029         	call	_I2C_2_Master_Write
  9459                           
  9460                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  9461  004CE0  0E01               	movlw	1
  9462  004CE2  ECAF  F027         	call	_I2C_2_Master_Read
  9463  004CE6  6E07               	movwf	??_color_read_Red^0,c
  9464  004CE8  5007               	movf	??_color_read_Red^0,w,c
  9465  004CEA  6E0A               	movwf	color_read_Red@tmp^0,c
  9466  004CEC  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9467                           
  9468                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9469  004CEE  0E00               	movlw	0
  9470  004CF0  ECAF  F027         	call	_I2C_2_Master_Read
  9471  004CF4  6E07               	movwf	??_color_read_Red^0,c
  9472  004CF6  5007               	movf	??_color_read_Red^0,w,c
  9473  004CF8  6E09               	movwf	(??_color_read_Red+2)^0,c
  9474  004CFA  6A08               	clrf	(??_color_read_Red+1)^0,c
  9475  004CFC  500A               	movf	color_read_Red@tmp^0,w,c
  9476  004CFE  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9477  004D00  6E0A               	movwf	color_read_Red@tmp^0,c
  9478  004D02  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9479  004D04  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9480  004D06  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9481                           
  9482                           ;color.c: 46:  I2C_2_Master_Stop();
  9483  004D08  ECA5  F029         	call	_I2C_2_Master_Stop	;wreg free
  9484  004D0C                     
  9485                           ;color.c: 47:  return tmp;
  9486  004D0C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9487  004D10  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9488  004D14  0012               	return		;funcret
  9489  004D16                     __end_of_color_read_Red:
  9490                           	callstack 0
  9491                           
  9492 ;; *************** function _color_read_Green *****************
  9493 ;; Defined at:
  9494 ;;		line 64 in file "color.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;		None
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  tmp             2    9[COMRAM] unsigned int 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  2    4[COMRAM] unsigned int 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9510 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9511 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9512 ;;Total ram usage:        7 bytes
  9513 ;; Hardware stack levels used: 1
  9514 ;; Hardware stack levels required when called: 3
  9515 ;; This function calls:
  9516 ;;		_I2C_2_Master_Read
  9517 ;;		_I2C_2_Master_RepStart
  9518 ;;		_I2C_2_Master_Start
  9519 ;;		_I2C_2_Master_Stop
  9520 ;;		_I2C_2_Master_Write
  9521 ;; This function is called by:
  9522 ;;		_read_color
  9523 ;;		_calibrate_white
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           	psect	text44
  9528  004D16                     __ptext44:
  9529                           	callstack 0
  9530  004D16                     _color_read_Green:
  9531                           	callstack 24
  9532  004D16                     
  9533                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  9534  004D16  ECAA  F029         	call	_I2C_2_Master_Start	;wreg free
  9535                           
  9536                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  9537  004D1A  0E52               	movlw	82
  9538  004D1C  EC99  F029         	call	_I2C_2_Master_Write
  9539                           
  9540                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  9541  004D20  0EB8               	movlw	184
  9542  004D22  EC99  F029         	call	_I2C_2_Master_Write
  9543                           
  9544                           ;color.c: 70:  I2C_2_Master_RepStart();
  9545  004D26  ECAF  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9546                           
  9547                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  9548  004D2A  0E53               	movlw	83
  9549  004D2C  EC99  F029         	call	_I2C_2_Master_Write
  9550                           
  9551                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  9552  004D30  0E01               	movlw	1
  9553  004D32  ECAF  F027         	call	_I2C_2_Master_Read
  9554  004D36  6E07               	movwf	??_color_read_Green^0,c
  9555  004D38  5007               	movf	??_color_read_Green^0,w,c
  9556  004D3A  6E0A               	movwf	color_read_Green@tmp^0,c
  9557  004D3C  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9558                           
  9559                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9560  004D3E  0E00               	movlw	0
  9561  004D40  ECAF  F027         	call	_I2C_2_Master_Read
  9562  004D44  6E07               	movwf	??_color_read_Green^0,c
  9563  004D46  5007               	movf	??_color_read_Green^0,w,c
  9564  004D48  6E09               	movwf	(??_color_read_Green+2)^0,c
  9565  004D4A  6A08               	clrf	(??_color_read_Green+1)^0,c
  9566  004D4C  500A               	movf	color_read_Green@tmp^0,w,c
  9567  004D4E  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9568  004D50  6E0A               	movwf	color_read_Green@tmp^0,c
  9569  004D52  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9570  004D54  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9571  004D56  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9572                           
  9573                           ;color.c: 74:  I2C_2_Master_Stop();
  9574  004D58  ECA5  F029         	call	_I2C_2_Master_Stop	;wreg free
  9575  004D5C                     
  9576                           ;color.c: 75:  return tmp;
  9577  004D5C  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9578  004D60  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9579  004D64  0012               	return		;funcret
  9580  004D66                     __end_of_color_read_Green:
  9581                           	callstack 0
  9582                           
  9583 ;; *************** function _color_read_Clear *****************
  9584 ;; Defined at:
  9585 ;;		line 78 in file "color.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  tmp             2    9[COMRAM] unsigned int 
  9590 ;; Return value:  Size  Location     Type
  9591 ;;                  2    4[COMRAM] unsigned int 
  9592 ;; Registers used:
  9593 ;;		wreg, status,2, status,0, cstack
  9594 ;; Tracked objects:
  9595 ;;		On entry : 0/0
  9596 ;;		On exit  : 0/0
  9597 ;;		Unchanged: 0/0
  9598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9599 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9600 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9601 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9602 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9603 ;;Total ram usage:        7 bytes
  9604 ;; Hardware stack levels used: 1
  9605 ;; Hardware stack levels required when called: 3
  9606 ;; This function calls:
  9607 ;;		_I2C_2_Master_Read
  9608 ;;		_I2C_2_Master_RepStart
  9609 ;;		_I2C_2_Master_Start
  9610 ;;		_I2C_2_Master_Stop
  9611 ;;		_I2C_2_Master_Write
  9612 ;; This function is called by:
  9613 ;;		_read_color
  9614 ;;		_calibrate_white
  9615 ;;		_distance_measure
  9616 ;; This function uses a non-reentrant model
  9617 ;;
  9618                           
  9619                           	psect	text45
  9620  004D66                     __ptext45:
  9621                           	callstack 0
  9622  004D66                     _color_read_Clear:
  9623                           	callstack 24
  9624  004D66                     
  9625                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  9626  004D66  ECAA  F029         	call	_I2C_2_Master_Start	;wreg free
  9627                           
  9628                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  9629  004D6A  0E52               	movlw	82
  9630  004D6C  EC99  F029         	call	_I2C_2_Master_Write
  9631                           
  9632                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  9633  004D70  0EB4               	movlw	180
  9634  004D72  EC99  F029         	call	_I2C_2_Master_Write
  9635                           
  9636                           ;color.c: 84:  I2C_2_Master_RepStart();
  9637  004D76  ECAF  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9638                           
  9639                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  9640  004D7A  0E53               	movlw	83
  9641  004D7C  EC99  F029         	call	_I2C_2_Master_Write
  9642                           
  9643                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  9644  004D80  0E01               	movlw	1
  9645  004D82  ECAF  F027         	call	_I2C_2_Master_Read
  9646  004D86  6E07               	movwf	??_color_read_Clear^0,c
  9647  004D88  5007               	movf	??_color_read_Clear^0,w,c
  9648  004D8A  6E0A               	movwf	color_read_Clear@tmp^0,c
  9649  004D8C  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  9650                           
  9651                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9652  004D8E  0E00               	movlw	0
  9653  004D90  ECAF  F027         	call	_I2C_2_Master_Read
  9654  004D94  6E07               	movwf	??_color_read_Clear^0,c
  9655  004D96  5007               	movf	??_color_read_Clear^0,w,c
  9656  004D98  6E09               	movwf	(??_color_read_Clear+2)^0,c
  9657  004D9A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  9658  004D9C  500A               	movf	color_read_Clear@tmp^0,w,c
  9659  004D9E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  9660  004DA0  6E0A               	movwf	color_read_Clear@tmp^0,c
  9661  004DA2  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  9662  004DA4  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  9663  004DA6  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  9664                           
  9665                           ;color.c: 88:  I2C_2_Master_Stop();
  9666  004DA8  ECA5  F029         	call	_I2C_2_Master_Stop	;wreg free
  9667  004DAC                     
  9668                           ;color.c: 89:  return tmp;
  9669  004DAC  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  9670  004DB0  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9671  004DB4  0012               	return		;funcret
  9672  004DB6                     __end_of_color_read_Clear:
  9673                           	callstack 0
  9674                           
  9675 ;; *************** function _color_read_Blue *****************
  9676 ;; Defined at:
  9677 ;;		line 50 in file "color.c"
  9678 ;; Parameters:    Size  Location     Type
  9679 ;;		None
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;  tmp             2    9[COMRAM] unsigned int 
  9682 ;; Return value:  Size  Location     Type
  9683 ;;                  2    4[COMRAM] unsigned int 
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0, cstack
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9693 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9694 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9695 ;;Total ram usage:        7 bytes
  9696 ;; Hardware stack levels used: 1
  9697 ;; Hardware stack levels required when called: 3
  9698 ;; This function calls:
  9699 ;;		_I2C_2_Master_Read
  9700 ;;		_I2C_2_Master_RepStart
  9701 ;;		_I2C_2_Master_Start
  9702 ;;		_I2C_2_Master_Stop
  9703 ;;		_I2C_2_Master_Write
  9704 ;; This function is called by:
  9705 ;;		_read_color
  9706 ;;		_calibrate_white
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text46
  9711  004DB6                     __ptext46:
  9712                           	callstack 0
  9713  004DB6                     _color_read_Blue:
  9714                           	callstack 24
  9715  004DB6                     
  9716                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  9717  004DB6  ECAA  F029         	call	_I2C_2_Master_Start	;wreg free
  9718                           
  9719                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  9720  004DBA  0E52               	movlw	82
  9721  004DBC  EC99  F029         	call	_I2C_2_Master_Write
  9722                           
  9723                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  9724  004DC0  0EBA               	movlw	186
  9725  004DC2  EC99  F029         	call	_I2C_2_Master_Write
  9726                           
  9727                           ;color.c: 56:  I2C_2_Master_RepStart();
  9728  004DC6  ECAF  F029         	call	_I2C_2_Master_RepStart	;wreg free
  9729                           
  9730                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  9731  004DCA  0E53               	movlw	83
  9732  004DCC  EC99  F029         	call	_I2C_2_Master_Write
  9733                           
  9734                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  9735  004DD0  0E01               	movlw	1
  9736  004DD2  ECAF  F027         	call	_I2C_2_Master_Read
  9737  004DD6  6E07               	movwf	??_color_read_Blue^0,c
  9738  004DD8  5007               	movf	??_color_read_Blue^0,w,c
  9739  004DDA  6E0A               	movwf	color_read_Blue@tmp^0,c
  9740  004DDC  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9741                           
  9742                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9743  004DDE  0E00               	movlw	0
  9744  004DE0  ECAF  F027         	call	_I2C_2_Master_Read
  9745  004DE4  6E07               	movwf	??_color_read_Blue^0,c
  9746  004DE6  5007               	movf	??_color_read_Blue^0,w,c
  9747  004DE8  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9748  004DEA  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9749  004DEC  500A               	movf	color_read_Blue@tmp^0,w,c
  9750  004DEE  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9751  004DF0  6E0A               	movwf	color_read_Blue@tmp^0,c
  9752  004DF2  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9753  004DF4  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9754  004DF6  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9755                           
  9756                           ;color.c: 60:  I2C_2_Master_Stop();
  9757  004DF8  ECA5  F029         	call	_I2C_2_Master_Stop	;wreg free
  9758  004DFC                     
  9759                           ;color.c: 61:  return tmp;
  9760  004DFC  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9761  004E00  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9762  004E04  0012               	return		;funcret
  9763  004E06                     __end_of_color_read_Blue:
  9764                           	callstack 0
  9765                           
  9766 ;; *************** function _I2C_2_Master_Write *****************
  9767 ;; Defined at:
  9768 ;;		line 45 in file "i2c.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  data_byte       1    wreg     unsigned char 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  data_byte       1    1[COMRAM] unsigned char 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0, cstack
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9786 ;;Total ram usage:        1 bytes
  9787 ;; Hardware stack levels used: 1
  9788 ;; Hardware stack levels required when called: 2
  9789 ;; This function calls:
  9790 ;;		_I2C_2_Master_Idle
  9791 ;; This function is called by:
  9792 ;;		_color_writetoaddr
  9793 ;;		_color_read_Red
  9794 ;;		_color_read_Blue
  9795 ;;		_color_read_Green
  9796 ;;		_color_read_Clear
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text47
  9801  005332                     __ptext47:
  9802                           	callstack 0
  9803  005332                     _I2C_2_Master_Write:
  9804                           	callstack 24
  9805                           
  9806                           ;incstack = 0
  9807                           ;I2C_2_Master_Write@data_byte stored from wreg
  9808  005332  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9809  005334                     
  9810                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9811  005334  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
  9812  005338                     
  9813                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9814  005338  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9815  00533C  0012               	return		;funcret
  9816  00533E                     __end_of_I2C_2_Master_Write:
  9817                           	callstack 0
  9818                           
  9819 ;; *************** function _I2C_2_Master_Stop *****************
  9820 ;; Defined at:
  9821 ;;		line 39 in file "i2c.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;		None
  9826 ;; Return value:  Size  Location     Type
  9827 ;;                  1    wreg      void 
  9828 ;; Registers used:
  9829 ;;		wreg, status,2, status,0, cstack
  9830 ;; Tracked objects:
  9831 ;;		On entry : 0/0
  9832 ;;		On exit  : 0/0
  9833 ;;		Unchanged: 0/0
  9834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9839 ;;Total ram usage:        0 bytes
  9840 ;; Hardware stack levels used: 1
  9841 ;; Hardware stack levels required when called: 2
  9842 ;; This function calls:
  9843 ;;		_I2C_2_Master_Idle
  9844 ;; This function is called by:
  9845 ;;		_color_writetoaddr
  9846 ;;		_color_read_Red
  9847 ;;		_color_read_Blue
  9848 ;;		_color_read_Green
  9849 ;;		_color_read_Clear
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           	psect	text48
  9854  00534A                     __ptext48:
  9855                           	callstack 0
  9856  00534A                     _I2C_2_Master_Stop:
  9857                           	callstack 24
  9858  00534A                     
  9859                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9860  00534A  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
  9861  00534E                     
  9862                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9863  00534E  010E               	movlb	14	; () banked
  9864  005350  85DA               	bsf	218,2,b	;volatile
  9865  005352                     
  9866                           ; BSR set to: 14
  9867  005352  0012               	return		;funcret
  9868  005354                     __end_of_I2C_2_Master_Stop:
  9869                           	callstack 0
  9870                           
  9871 ;; *************** function _I2C_2_Master_Start *****************
  9872 ;; Defined at:
  9873 ;;		line 27 in file "i2c.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		wreg, status,2, status,0, cstack
  9882 ;; Tracked objects:
  9883 ;;		On entry : 0/0
  9884 ;;		On exit  : 0/0
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used: 1
  9893 ;; Hardware stack levels required when called: 2
  9894 ;; This function calls:
  9895 ;;		_I2C_2_Master_Idle
  9896 ;; This function is called by:
  9897 ;;		_color_writetoaddr
  9898 ;;		_color_read_Red
  9899 ;;		_color_read_Blue
  9900 ;;		_color_read_Green
  9901 ;;		_color_read_Clear
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           	psect	text49
  9906  005354                     __ptext49:
  9907                           	callstack 0
  9908  005354                     _I2C_2_Master_Start:
  9909                           	callstack 24
  9910  005354                     
  9911                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9912  005354  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
  9913  005358                     
  9914                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9915  005358  010E               	movlb	14	; () banked
  9916  00535A  81DA               	bsf	218,0,b	;volatile
  9917  00535C                     
  9918                           ; BSR set to: 14
  9919  00535C  0012               	return		;funcret
  9920  00535E                     __end_of_I2C_2_Master_Start:
  9921                           	callstack 0
  9922                           
  9923 ;; *************** function _I2C_2_Master_RepStart *****************
  9924 ;; Defined at:
  9925 ;;		line 33 in file "i2c.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9943 ;;Total ram usage:        0 bytes
  9944 ;; Hardware stack levels used: 1
  9945 ;; Hardware stack levels required when called: 2
  9946 ;; This function calls:
  9947 ;;		_I2C_2_Master_Idle
  9948 ;; This function is called by:
  9949 ;;		_color_read_Red
  9950 ;;		_color_read_Blue
  9951 ;;		_color_read_Green
  9952 ;;		_color_read_Clear
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text50
  9957  00535E                     __ptext50:
  9958                           	callstack 0
  9959  00535E                     _I2C_2_Master_RepStart:
  9960                           	callstack 24
  9961  00535E                     
  9962                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9963  00535E  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
  9964  005362                     
  9965                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9966  005362  010E               	movlb	14	; () banked
  9967  005364  83DA               	bsf	218,1,b	;volatile
  9968  005366                     
  9969                           ; BSR set to: 14
  9970  005366  0012               	return		;funcret
  9971  005368                     __end_of_I2C_2_Master_RepStart:
  9972                           	callstack 0
  9973                           
  9974 ;; *************** function _I2C_2_Master_Read *****************
  9975 ;; Defined at:
  9976 ;;		line 51 in file "i2c.c"
  9977 ;; Parameters:    Size  Location     Type
  9978 ;;  ack             1    wreg     unsigned char 
  9979 ;; Auto vars:     Size  Location     Type
  9980 ;;  ack             1    2[COMRAM] unsigned char 
  9981 ;;  tmp             1    3[COMRAM] unsigned char 
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1    wreg      unsigned char 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2, status,0, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 0/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9995 ;;Total ram usage:        3 bytes
  9996 ;; Hardware stack levels used: 1
  9997 ;; Hardware stack levels required when called: 2
  9998 ;; This function calls:
  9999 ;;		_I2C_2_Master_Idle
 10000 ;; This function is called by:
 10001 ;;		_color_read_Red
 10002 ;;		_color_read_Blue
 10003 ;;		_color_read_Green
 10004 ;;		_color_read_Clear
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text51
 10009  004F5E                     __ptext51:
 10010                           	callstack 0
 10011  004F5E                     _I2C_2_Master_Read:
 10012                           	callstack 24
 10013                           
 10014                           ; BSR set to: 14
 10015                           ;incstack = 0
 10016                           ;I2C_2_Master_Read@ack stored from wreg
 10017  004F5E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 10018  004F60                     
 10019                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10020  004F60  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
 10021  004F64                     
 10022                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10023  004F64  010E               	movlb	14	; () banked
 10024  004F66  87DA               	bsf	218,3,b	;volatile
 10025                           
 10026                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10027  004F68  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
 10028  004F6C                     
 10029                           ;i2c.c: 57:   tmp = SSP2BUF;
 10030  004F6C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10031                           
 10032                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10033  004F70  ECEA  F028         	call	_I2C_2_Master_Idle	;wreg free
 10034  004F74                     
 10035                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10036  004F74  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 10037  004F76  B4D8               	btfsc	status,2,c
 10038  004F78  EFC0  F027         	goto	u3571
 10039  004F7C  EFC4  F027         	goto	u3570
 10040  004F80                     u3571:
 10041  004F80  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10042  004F82  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 10043  004F84  EFC5  F027         	goto	u3588
 10044  004F88                     u3570:
 10045  004F88  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10046  004F8A                     u3588:
 10047  004F8A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 10048  004F8C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 10049  004F8E  010E               	movlb	14	; () banked
 10050  004F90  51DA               	movf	218,w,b	;volatile
 10051  004F92  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10052  004F94  0BDF               	andlw	-33
 10053  004F96  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10054  004F98  6FDA               	movwf	218,b	;volatile
 10055  004F9A                     
 10056                           ; BSR set to: 14
 10057                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10058  004F9A  89DA               	bsf	218,4,b	;volatile
 10059  004F9C                     
 10060                           ; BSR set to: 14
 10061                           ;i2c.c: 61:   return tmp;
 10062  004F9C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 10063  004F9E                     
 10064                           ; BSR set to: 14
 10065  004F9E  0012               	return		;funcret
 10066  004FA0                     __end_of_I2C_2_Master_Read:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _I2C_2_Master_Idle *****************
 10070 ;; Defined at:
 10071 ;;		line 22 in file "i2c.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		wreg, status,2, status,0
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;Total ram usage:        1 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; Hardware stack levels required when called: 1
 10092 ;; This function calls:
 10093 ;;		Nothing
 10094 ;; This function is called by:
 10095 ;;		_I2C_2_Master_Start
 10096 ;;		_I2C_2_Master_RepStart
 10097 ;;		_I2C_2_Master_Stop
 10098 ;;		_I2C_2_Master_Write
 10099 ;;		_I2C_2_Master_Read
 10100 ;; This function uses a non-reentrant model
 10101 ;;
 10102                           
 10103                           	psect	text52
 10104  0051D4                     __ptext52:
 10105                           	callstack 0
 10106  0051D4                     _I2C_2_Master_Idle:
 10107                           	callstack 24
 10108  0051D4                     l200:
 10109  0051D4  010E               	movlb	14	; () banked
 10110  0051D6  B5D8               	btfsc	216,2,b	;volatile
 10111  0051D8  EFF0  F028         	goto	u2971
 10112  0051DC  EFF2  F028         	goto	u2970
 10113  0051E0                     u2971:
 10114  0051E0  EFEA  F028         	goto	l200
 10115  0051E4                     u2970:
 10116  0051E4                     
 10117                           ; BSR set to: 14
 10118  0051E4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10119  0051E8  0E1F               	movlw	31
 10120  0051EA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 10121  0051EC  A4D8               	btfss	status,2,c
 10122  0051EE  EFFB  F028         	goto	u2981
 10123  0051F2  EFFD  F028         	goto	u2980
 10124  0051F6                     u2981:
 10125  0051F6  EFEA  F028         	goto	l200
 10126  0051FA                     u2980:
 10127  0051FA                     
 10128                           ; BSR set to: 14
 10129  0051FA  0012               	return		;funcret
 10130  0051FC                     __end_of_I2C_2_Master_Idle:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function _LED_R *****************
 10134 ;; Defined at:
 10135 ;;		line 100 in file "color.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;		None
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1    wreg      void 
 10142 ;; Registers used:
 10143 ;;		wreg
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;Total ram usage:        2 bytes
 10154 ;; Hardware stack levels used: 1
 10155 ;; Hardware stack levels required when called: 1
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_color_data_collection
 10160 ;;		_calibrate_white
 10161 ;;		_detect_color
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           
 10165                           	psect	text53
 10166  005262                     __ptext53:
 10167                           	callstack 0
 10168  005262                     _LED_R:
 10169                           	callstack 27
 10170  005262                     
 10171                           ;color.c: 102:     LATGbits.LATG1 = 1;
 10172  005262  827F               	bsf	127,1,c	;volatile
 10173                           
 10174                           ;color.c: 103:     LATFbits.LATF7 = 0;
 10175  005264  9E7E               	bcf	126,7,c	;volatile
 10176                           
 10177                           ;color.c: 104:     LATAbits.LATA4 = 0;
 10178  005266  9879               	bcf	121,4,c	;volatile
 10179  005268                     
 10180                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10181  005268  0E11               	movlw	17
 10182  00526A  6E02               	movwf	(??_LED_R+1)^0,c
 10183  00526C  0E3C               	movlw	60
 10184  00526E  6E01               	movwf	??_LED_R^0,c
 10185  005270  0ECB               	movlw	203
 10186  005272                     u5497:
 10187  005272  2EE8               	decfsz	wreg,f,c
 10188  005274  D7FE               	bra	u5497
 10189  005276  2E01               	decfsz	??_LED_R^0,f,c
 10190  005278  D7FC               	bra	u5497
 10191  00527A  2E02               	decfsz	(??_LED_R+1)^0,f,c
 10192  00527C  D7FA               	bra	u5497
 10193  00527E  F000               	nop	
 10194  005280  0012               	return		;funcret
 10195  005282                     __end_of_LED_R:
 10196                           	callstack 0
 10197                           
 10198 ;; *************** function _LED_G *****************
 10199 ;; Defined at:
 10200 ;;		line 127 in file "color.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;		None
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;		None
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  1    wreg      void 
 10207 ;; Registers used:
 10208 ;;		wreg
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10216 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10217 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10218 ;;Total ram usage:        2 bytes
 10219 ;; Hardware stack levels used: 1
 10220 ;; Hardware stack levels required when called: 1
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		_color_data_collection
 10225 ;;		_calibrate_white
 10226 ;;		_detect_color
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           	psect	text54
 10231  005282                     __ptext54:
 10232                           	callstack 0
 10233  005282                     _LED_G:
 10234                           	callstack 27
 10235  005282                     
 10236                           ;color.c: 129:     LATGbits.LATG1 = 0;
 10237  005282  927F               	bcf	127,1,c	;volatile
 10238                           
 10239                           ;color.c: 130:     LATFbits.LATF7 = 0;
 10240  005284  9E7E               	bcf	126,7,c	;volatile
 10241                           
 10242                           ;color.c: 131:     LATAbits.LATA4 = 1;
 10243  005286  8879               	bsf	121,4,c	;volatile
 10244  005288                     
 10245                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10246  005288  0E11               	movlw	17
 10247  00528A  6E02               	movwf	(??_LED_G+1)^0,c
 10248  00528C  0E3C               	movlw	60
 10249  00528E  6E01               	movwf	??_LED_G^0,c
 10250  005290  0ECB               	movlw	203
 10251  005292                     u5507:
 10252  005292  2EE8               	decfsz	wreg,f,c
 10253  005294  D7FE               	bra	u5507
 10254  005296  2E01               	decfsz	??_LED_G^0,f,c
 10255  005298  D7FC               	bra	u5507
 10256  00529A  2E02               	decfsz	(??_LED_G+1)^0,f,c
 10257  00529C  D7FA               	bra	u5507
 10258  00529E  F000               	nop	
 10259  0052A0  0012               	return		;funcret
 10260  0052A2                     __end_of_LED_G:
 10261                           	callstack 0
 10262                           
 10263 ;; *************** function _LED_B *****************
 10264 ;; Defined at:
 10265 ;;		line 118 in file "color.c"
 10266 ;; Parameters:    Size  Location     Type
 10267 ;;		None
 10268 ;; Auto vars:     Size  Location     Type
 10269 ;;		None
 10270 ;; Return value:  Size  Location     Type
 10271 ;;                  1    wreg      void 
 10272 ;; Registers used:
 10273 ;;		wreg
 10274 ;; Tracked objects:
 10275 ;;		On entry : 0/0
 10276 ;;		On exit  : 0/0
 10277 ;;		Unchanged: 0/0
 10278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10282 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10283 ;;Total ram usage:        2 bytes
 10284 ;; Hardware stack levels used: 1
 10285 ;; Hardware stack levels required when called: 1
 10286 ;; This function calls:
 10287 ;;		Nothing
 10288 ;; This function is called by:
 10289 ;;		_color_data_collection
 10290 ;;		_calibrate_white
 10291 ;;		_detect_color
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           	psect	text55
 10296  0052A2                     __ptext55:
 10297                           	callstack 0
 10298  0052A2                     _LED_B:
 10299                           	callstack 27
 10300  0052A2                     
 10301                           ;color.c: 120:     LATGbits.LATG1 = 0;
 10302  0052A2  927F               	bcf	127,1,c	;volatile
 10303                           
 10304                           ;color.c: 121:     LATFbits.LATF7 = 1;
 10305  0052A4  8E7E               	bsf	126,7,c	;volatile
 10306                           
 10307                           ;color.c: 122:     LATAbits.LATA4 = 0;
 10308  0052A6  9879               	bcf	121,4,c	;volatile
 10309  0052A8                     
 10310                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10311  0052A8  0E11               	movlw	17
 10312  0052AA  6E02               	movwf	(??_LED_B+1)^0,c
 10313  0052AC  0E3C               	movlw	60
 10314  0052AE  6E01               	movwf	??_LED_B^0,c
 10315  0052B0  0ECB               	movlw	203
 10316  0052B2                     u5517:
 10317  0052B2  2EE8               	decfsz	wreg,f,c
 10318  0052B4  D7FE               	bra	u5517
 10319  0052B6  2E01               	decfsz	??_LED_B^0,f,c
 10320  0052B8  D7FC               	bra	u5517
 10321  0052BA  2E02               	decfsz	(??_LED_B+1)^0,f,c
 10322  0052BC  D7FA               	bra	u5517
 10323  0052BE  F000               	nop	
 10324  0052C0  0012               	return		;funcret
 10325  0052C2                     __end_of_LED_B:
 10326                           	callstack 0
 10327                           
 10328 ;; *************** function _action *****************
 10329 ;; Defined at:
 10330 ;;		line 19 in file "movement.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  color           1    wreg     unsigned char 
 10333 ;;  mL              2   53[COMRAM] PTR struct DC_motor
 10334 ;;		 -> main@motorL(10), 
 10335 ;;  mR              2   55[COMRAM] PTR struct DC_motor
 10336 ;;		 -> main@motorR(10), 
 10337 ;; Auto vars:     Size  Location     Type
 10338 ;;  color           1   59[COMRAM] unsigned char 
 10339 ;; Return value:  Size  Location     Type
 10340 ;;                  1    wreg      void 
 10341 ;; Registers used:
 10342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10343 ;; Tracked objects:
 10344 ;;		On entry : 0/0
 10345 ;;		On exit  : 0/0
 10346 ;;		Unchanged: 0/0
 10347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10349 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10351 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10352 ;;Total ram usage:        7 bytes
 10353 ;; Hardware stack levels used: 1
 10354 ;; Hardware stack levels required when called: 7
 10355 ;; This function calls:
 10356 ;;		_fullSpeedAhead
 10357 ;;		_goback
 10358 ;;		_reverse_square
 10359 ;;		_short_reverse
 10360 ;;		_stop
 10361 ;;		_turnLeft
 10362 ;;		_turnRight
 10363 ;; This function is called by:
 10364 ;;		_main
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367                           
 10368                           	psect	text56
 10369  002B4E                     __ptext56:
 10370                           	callstack 0
 10371  002B4E                     _action:
 10372                           	callstack 23
 10373                           
 10374                           ;incstack = 0
 10375                           ;action@color stored from wreg
 10376  002B4E  6E3C               	movwf	action@color^0,c
 10377  002B50                     
 10378                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: { T0CON0bits.T0EN=1;
 10379  002B50  8ED5               	bsf	213,7,c	;volatile
 10380                           
 10381                           ;movement.c: 21:     start_move = second;
 10382  002B52  C0F4  F0F2         	movff	_second,_start_move
 10383  002B56  C0F5  F0F3         	movff	_second+1,_start_move+1
 10384  002B5A                     
 10385                           ;movement.c: 22:     fullSpeedAhead(mL,mR);
 10386  002B5A  C036  F01A         	movff	action@mL,fullSpeedAhead@mL
 10387  002B5E  C037  F01B         	movff	action@mL+1,fullSpeedAhead@mL+1
 10388  002B62  C038  F01C         	movff	action@mR,fullSpeedAhead@mR
 10389  002B66  C039  F01D         	movff	action@mR+1,fullSpeedAhead@mR+1
 10390  002B6A  ECFD  F024         	call	_fullSpeedAhead	;wreg free
 10391  002B6E                     
 10392                           ;movement.c: 23:     if (color != 0){
 10393  002B6E  503C               	movf	action@color^0,w,c
 10394  002B70  B4D8               	btfsc	status,2,c
 10395  002B72  EFBD  F015         	goto	u5111
 10396  002B76  EFBF  F015         	goto	u5110
 10397  002B7A                     u5111:
 10398  002B7A  EF39  F017         	goto	l618
 10399  002B7E                     u5110:
 10400  002B7E                     
 10401                           ;movement.c: 24:         T0CON0bits.T0EN=0;
 10402  002B7E  9ED5               	bcf	213,7,c	;volatile
 10403                           
 10404                           ;movement.c: 25:         stop_move = second;
 10405  002B80  C0F4  F0F0         	movff	_second,_stop_move
 10406  002B84  C0F5  F0F1         	movff	_second+1,_stop_move+1
 10407  002B88                     
 10408                           ;movement.c: 26:         memory[array_index] = (start_move-stop_move);
 10409  002B88  0100               	movlb	0	; () banked
 10410  002B8A  51F0               	movf	_stop_move& (0+255),w,b
 10411  002B8C  5DF2               	subwf	_start_move& (0+255),w,b
 10412  002B8E  6E3A               	movwf	??_action^0,c
 10413  002B90  51F1               	movf	(_stop_move+1)& (0+255),w,b
 10414  002B92  59F3               	subwfb	(_start_move+1)& (0+255),w,b
 10415  002B94  6E3B               	movwf	(??_action+1)^0,c
 10416  002B96  51F6               	movf	_array_index& (0+255),w,b
 10417  002B98  0D02               	mullw	2
 10418  002B9A  0E3C               	movlw	low _memory
 10419  002B9C  24F3               	addwf	243,w,c
 10420  002B9E  6ED9               	movwf	fsr2l,c
 10421  002BA0  0E01               	movlw	high _memory
 10422  002BA2  20F4               	addwfc	prodh,w,c
 10423  002BA4  6EDA               	movwf	fsr2h,c
 10424  002BA6  C03A  FFDE         	movff	??_action,postinc2
 10425  002BAA  C03B  FFDD         	movff	??_action+1,postdec2
 10426  002BAE                     
 10427                           ; BSR set to: 0
 10428                           ;movement.c: 27:         array_index++;
 10429  002BAE  2BF6               	incf	_array_index& (0+255),f,b
 10430  002BB0                     
 10431                           ; BSR set to: 0
 10432                           ;movement.c: 28:         stop(mL,mR);
 10433  002BB0  C036  F01A         	movff	action@mL,stop@mL
 10434  002BB4  C037  F01B         	movff	action@mL+1,stop@mL+1
 10435  002BB8  C038  F01C         	movff	action@mR,stop@mR
 10436  002BBC  C039  F01D         	movff	action@mR+1,stop@mR+1
 10437  002BC0  EC9F  F024         	call	_stop	;wreg free
 10438  002BC4                     
 10439                           ;movement.c: 29:         if (color == 1){
 10440  002BC4  043C               	decf	action@color^0,w,c
 10441  002BC6  A4D8               	btfss	status,2,c
 10442  002BC8  EFE8  F015         	goto	u5121
 10443  002BCC  EFEA  F015         	goto	u5120
 10444  002BD0                     u5121:
 10445  002BD0  EF0E  F016         	goto	l5080
 10446  002BD4                     u5120:
 10447  002BD4                     
 10448                           ;movement.c: 30:             short_reverse(mL,mR);
 10449  002BD4  C036  F026         	movff	action@mL,short_reverse@mL
 10450  002BD8  C037  F027         	movff	action@mL+1,short_reverse@mL+1
 10451  002BDC  C038  F028         	movff	action@mR,short_reverse@mR
 10452  002BE0  C039  F029         	movff	action@mR+1,short_reverse@mR+1
 10453  002BE4  ECD0  F027         	call	_short_reverse	;wreg free
 10454                           
 10455                           ;movement.c: 31:             turnRight(mL,mR,90);
 10456  002BE8  C036  F020         	movff	action@mL,turnRight@mL
 10457  002BEC  C037  F021         	movff	action@mL+1,turnRight@mL+1
 10458  002BF0  C038  F022         	movff	action@mR,turnRight@mR
 10459  002BF4  C039  F023         	movff	action@mR+1,turnRight@mR+1
 10460  002BF8  0E5A               	movlw	90
 10461  002BFA  6E24               	movwf	turnRight@angle_right^0,c
 10462  002BFC  EC8F  F01F         	call	_turnRight	;wreg free
 10463  002C00                     
 10464                           ;movement.c: 32:             memory[array_index] = 1;
 10465  002C00  0100               	movlb	0	; () banked
 10466  002C02  51F6               	movf	_array_index& (0+255),w,b
 10467  002C04  0D02               	mullw	2
 10468  002C06  0E3C               	movlw	low _memory
 10469  002C08  24F3               	addwf	243,w,c
 10470  002C0A  6ED9               	movwf	fsr2l,c
 10471  002C0C  0E01               	movlw	high _memory
 10472  002C0E  20F4               	addwfc	prodh,w,c
 10473  002C10  6EDA               	movwf	fsr2h,c
 10474  002C12  0E01               	movlw	1
 10475  002C14  6EDE               	movwf	postinc2,c
 10476  002C16  0E00               	movlw	0
 10477  002C18  6EDD               	movwf	postdec2,c
 10478  002C1A                     
 10479                           ; BSR set to: 0
 10480                           ;movement.c: 33:             array_index++;
 10481  002C1A  2BF6               	incf	_array_index& (0+255),f,b
 10482  002C1C                     l5080:
 10483                           
 10484                           ;movement.c: 35:         if (color == 2){
 10485  002C1C  0E02               	movlw	2
 10486  002C1E  183C               	xorwf	action@color^0,w,c
 10487  002C20  A4D8               	btfss	status,2,c
 10488  002C22  EF15  F016         	goto	u5131
 10489  002C26  EF17  F016         	goto	u5130
 10490  002C2A                     u5131:
 10491  002C2A  EF3B  F016         	goto	l5088
 10492  002C2E                     u5130:
 10493  002C2E                     
 10494                           ;movement.c: 36:             short_reverse(mL,mR);
 10495  002C2E  C036  F026         	movff	action@mL,short_reverse@mL
 10496  002C32  C037  F027         	movff	action@mL+1,short_reverse@mL+1
 10497  002C36  C038  F028         	movff	action@mR,short_reverse@mR
 10498  002C3A  C039  F029         	movff	action@mR+1,short_reverse@mR+1
 10499  002C3E  ECD0  F027         	call	_short_reverse	;wreg free
 10500                           
 10501                           ;movement.c: 37:             turnLeft(mL,mR,90);
 10502  002C42  C036  F020         	movff	action@mL,turnLeft@mL
 10503  002C46  C037  F021         	movff	action@mL+1,turnLeft@mL+1
 10504  002C4A  C038  F022         	movff	action@mR,turnLeft@mR
 10505  002C4E  C039  F023         	movff	action@mR+1,turnLeft@mR+1
 10506  002C52  0E5A               	movlw	90
 10507  002C54  6E24               	movwf	turnLeft@angle_left^0,c
 10508  002C56  EC25  F020         	call	_turnLeft	;wreg free
 10509  002C5A                     
 10510                           ;movement.c: 38:             memory[array_index] = 2;
 10511  002C5A  0100               	movlb	0	; () banked
 10512  002C5C  51F6               	movf	_array_index& (0+255),w,b
 10513  002C5E  0D02               	mullw	2
 10514  002C60  0E3C               	movlw	low _memory
 10515  002C62  24F3               	addwf	243,w,c
 10516  002C64  6ED9               	movwf	fsr2l,c
 10517  002C66  0E01               	movlw	high _memory
 10518  002C68  20F4               	addwfc	prodh,w,c
 10519  002C6A  6EDA               	movwf	fsr2h,c
 10520  002C6C  0E02               	movlw	2
 10521  002C6E  6EDE               	movwf	postinc2,c
 10522  002C70  0E00               	movlw	0
 10523  002C72  6EDD               	movwf	postdec2,c
 10524  002C74                     
 10525                           ; BSR set to: 0
 10526                           ;movement.c: 39:             array_index++;
 10527  002C74  2BF6               	incf	_array_index& (0+255),f,b
 10528  002C76                     l5088:
 10529                           
 10530                           ;movement.c: 41:         if (color == 3){
 10531  002C76  0E03               	movlw	3
 10532  002C78  183C               	xorwf	action@color^0,w,c
 10533  002C7A  A4D8               	btfss	status,2,c
 10534  002C7C  EF42  F016         	goto	u5141
 10535  002C80  EF44  F016         	goto	u5140
 10536  002C84                     u5141:
 10537  002C84  EF68  F016         	goto	l5096
 10538  002C88                     u5140:
 10539  002C88                     
 10540                           ;movement.c: 42:             short_reverse(mL,mR);
 10541  002C88  C036  F026         	movff	action@mL,short_reverse@mL
 10542  002C8C  C037  F027         	movff	action@mL+1,short_reverse@mL+1
 10543  002C90  C038  F028         	movff	action@mR,short_reverse@mR
 10544  002C94  C039  F029         	movff	action@mR+1,short_reverse@mR+1
 10545  002C98  ECD0  F027         	call	_short_reverse	;wreg free
 10546                           
 10547                           ;movement.c: 43:             turnLeft(mL,mR,180);
 10548  002C9C  C036  F020         	movff	action@mL,turnLeft@mL
 10549  002CA0  C037  F021         	movff	action@mL+1,turnLeft@mL+1
 10550  002CA4  C038  F022         	movff	action@mR,turnLeft@mR
 10551  002CA8  C039  F023         	movff	action@mR+1,turnLeft@mR+1
 10552  002CAC  0EB4               	movlw	180
 10553  002CAE  6E24               	movwf	turnLeft@angle_left^0,c
 10554  002CB0  EC25  F020         	call	_turnLeft	;wreg free
 10555  002CB4                     
 10556                           ;movement.c: 44:             memory[array_index] = 3;
 10557  002CB4  0100               	movlb	0	; () banked
 10558  002CB6  51F6               	movf	_array_index& (0+255),w,b
 10559  002CB8  0D02               	mullw	2
 10560  002CBA  0E3C               	movlw	low _memory
 10561  002CBC  24F3               	addwf	243,w,c
 10562  002CBE  6ED9               	movwf	fsr2l,c
 10563  002CC0  0E01               	movlw	high _memory
 10564  002CC2  20F4               	addwfc	prodh,w,c
 10565  002CC4  6EDA               	movwf	fsr2h,c
 10566  002CC6  0E03               	movlw	3
 10567  002CC8  6EDE               	movwf	postinc2,c
 10568  002CCA  0E00               	movlw	0
 10569  002CCC  6EDD               	movwf	postdec2,c
 10570  002CCE                     
 10571                           ; BSR set to: 0
 10572                           ;movement.c: 45:             array_index++;
 10573  002CCE  2BF6               	incf	_array_index& (0+255),f,b
 10574  002CD0                     l5096:
 10575                           
 10576                           ;movement.c: 47:         if (color == 4){
 10577  002CD0  0E04               	movlw	4
 10578  002CD2  183C               	xorwf	action@color^0,w,c
 10579  002CD4  A4D8               	btfss	status,2,c
 10580  002CD6  EF6F  F016         	goto	u5151
 10581  002CDA  EF71  F016         	goto	u5150
 10582  002CDE                     u5151:
 10583  002CDE  EF95  F016         	goto	l5104
 10584  002CE2                     u5150:
 10585  002CE2                     
 10586                           ;movement.c: 48:             reverse_square(mL,mR);
 10587  002CE2  C036  F026         	movff	action@mL,reverse_square@mL
 10588  002CE6  C037  F027         	movff	action@mL+1,reverse_square@mL+1
 10589  002CEA  C038  F028         	movff	action@mR,reverse_square@mR
 10590  002CEE  C039  F029         	movff	action@mR+1,reverse_square@mR+1
 10591  002CF2  ECF1  F027         	call	_reverse_square	;wreg free
 10592                           
 10593                           ;movement.c: 49:             turnRight(mL,mR,90);
 10594  002CF6  C036  F020         	movff	action@mL,turnRight@mL
 10595  002CFA  C037  F021         	movff	action@mL+1,turnRight@mL+1
 10596  002CFE  C038  F022         	movff	action@mR,turnRight@mR
 10597  002D02  C039  F023         	movff	action@mR+1,turnRight@mR+1
 10598  002D06  0E5A               	movlw	90
 10599  002D08  6E24               	movwf	turnRight@angle_right^0,c
 10600  002D0A  EC8F  F01F         	call	_turnRight	;wreg free
 10601  002D0E                     
 10602                           ;movement.c: 50:             memory[array_index] = 4;
 10603  002D0E  0100               	movlb	0	; () banked
 10604  002D10  51F6               	movf	_array_index& (0+255),w,b
 10605  002D12  0D02               	mullw	2
 10606  002D14  0E3C               	movlw	low _memory
 10607  002D16  24F3               	addwf	243,w,c
 10608  002D18  6ED9               	movwf	fsr2l,c
 10609  002D1A  0E01               	movlw	high _memory
 10610  002D1C  20F4               	addwfc	prodh,w,c
 10611  002D1E  6EDA               	movwf	fsr2h,c
 10612  002D20  0E04               	movlw	4
 10613  002D22  6EDE               	movwf	postinc2,c
 10614  002D24  0E00               	movlw	0
 10615  002D26  6EDD               	movwf	postdec2,c
 10616  002D28                     
 10617                           ; BSR set to: 0
 10618                           ;movement.c: 51:             array_index++;
 10619  002D28  2BF6               	incf	_array_index& (0+255),f,b
 10620  002D2A                     l5104:
 10621                           
 10622                           ;movement.c: 53:         if (color == 5){
 10623  002D2A  0E05               	movlw	5
 10624  002D2C  183C               	xorwf	action@color^0,w,c
 10625  002D2E  A4D8               	btfss	status,2,c
 10626  002D30  EF9C  F016         	goto	u5161
 10627  002D34  EF9E  F016         	goto	u5160
 10628  002D38                     u5161:
 10629  002D38  EFC2  F016         	goto	l5112
 10630  002D3C                     u5160:
 10631  002D3C                     
 10632                           ;movement.c: 54:             reverse_square(mL,mR);
 10633  002D3C  C036  F026         	movff	action@mL,reverse_square@mL
 10634  002D40  C037  F027         	movff	action@mL+1,reverse_square@mL+1
 10635  002D44  C038  F028         	movff	action@mR,reverse_square@mR
 10636  002D48  C039  F029         	movff	action@mR+1,reverse_square@mR+1
 10637  002D4C  ECF1  F027         	call	_reverse_square	;wreg free
 10638                           
 10639                           ;movement.c: 55:             turnLeft(mL,mR,90);
 10640  002D50  C036  F020         	movff	action@mL,turnLeft@mL
 10641  002D54  C037  F021         	movff	action@mL+1,turnLeft@mL+1
 10642  002D58  C038  F022         	movff	action@mR,turnLeft@mR
 10643  002D5C  C039  F023         	movff	action@mR+1,turnLeft@mR+1
 10644  002D60  0E5A               	movlw	90
 10645  002D62  6E24               	movwf	turnLeft@angle_left^0,c
 10646  002D64  EC25  F020         	call	_turnLeft	;wreg free
 10647  002D68                     
 10648                           ;movement.c: 56:             memory[array_index] = 5;
 10649  002D68  0100               	movlb	0	; () banked
 10650  002D6A  51F6               	movf	_array_index& (0+255),w,b
 10651  002D6C  0D02               	mullw	2
 10652  002D6E  0E3C               	movlw	low _memory
 10653  002D70  24F3               	addwf	243,w,c
 10654  002D72  6ED9               	movwf	fsr2l,c
 10655  002D74  0E01               	movlw	high _memory
 10656  002D76  20F4               	addwfc	prodh,w,c
 10657  002D78  6EDA               	movwf	fsr2h,c
 10658  002D7A  0E05               	movlw	5
 10659  002D7C  6EDE               	movwf	postinc2,c
 10660  002D7E  0E00               	movlw	0
 10661  002D80  6EDD               	movwf	postdec2,c
 10662  002D82                     
 10663                           ; BSR set to: 0
 10664                           ;movement.c: 57:             array_index++;
 10665  002D82  2BF6               	incf	_array_index& (0+255),f,b
 10666  002D84                     l5112:
 10667                           
 10668                           ;movement.c: 59:         if (color == 6){
 10669  002D84  0E06               	movlw	6
 10670  002D86  183C               	xorwf	action@color^0,w,c
 10671  002D88  A4D8               	btfss	status,2,c
 10672  002D8A  EFC9  F016         	goto	u5171
 10673  002D8E  EFCB  F016         	goto	u5170
 10674  002D92                     u5171:
 10675  002D92  EFEF  F016         	goto	l5120
 10676  002D96                     u5170:
 10677  002D96                     
 10678                           ;movement.c: 60:             short_reverse(mL,mR);
 10679  002D96  C036  F026         	movff	action@mL,short_reverse@mL
 10680  002D9A  C037  F027         	movff	action@mL+1,short_reverse@mL+1
 10681  002D9E  C038  F028         	movff	action@mR,short_reverse@mR
 10682  002DA2  C039  F029         	movff	action@mR+1,short_reverse@mR+1
 10683  002DA6  ECD0  F027         	call	_short_reverse	;wreg free
 10684                           
 10685                           ;movement.c: 61:             turnRight(mL,mR,135);
 10686  002DAA  C036  F020         	movff	action@mL,turnRight@mL
 10687  002DAE  C037  F021         	movff	action@mL+1,turnRight@mL+1
 10688  002DB2  C038  F022         	movff	action@mR,turnRight@mR
 10689  002DB6  C039  F023         	movff	action@mR+1,turnRight@mR+1
 10690  002DBA  0E87               	movlw	135
 10691  002DBC  6E24               	movwf	turnRight@angle_right^0,c
 10692  002DBE  EC8F  F01F         	call	_turnRight	;wreg free
 10693  002DC2                     
 10694                           ;movement.c: 62:             memory[array_index] = 6;
 10695  002DC2  0100               	movlb	0	; () banked
 10696  002DC4  51F6               	movf	_array_index& (0+255),w,b
 10697  002DC6  0D02               	mullw	2
 10698  002DC8  0E3C               	movlw	low _memory
 10699  002DCA  24F3               	addwf	243,w,c
 10700  002DCC  6ED9               	movwf	fsr2l,c
 10701  002DCE  0E01               	movlw	high _memory
 10702  002DD0  20F4               	addwfc	prodh,w,c
 10703  002DD2  6EDA               	movwf	fsr2h,c
 10704  002DD4  0E06               	movlw	6
 10705  002DD6  6EDE               	movwf	postinc2,c
 10706  002DD8  0E00               	movlw	0
 10707  002DDA  6EDD               	movwf	postdec2,c
 10708  002DDC                     
 10709                           ; BSR set to: 0
 10710                           ;movement.c: 63:             array_index++;
 10711  002DDC  2BF6               	incf	_array_index& (0+255),f,b
 10712  002DDE                     l5120:
 10713                           
 10714                           ;movement.c: 65:         if (color == 7){
 10715  002DDE  0E07               	movlw	7
 10716  002DE0  183C               	xorwf	action@color^0,w,c
 10717  002DE2  A4D8               	btfss	status,2,c
 10718  002DE4  EFF6  F016         	goto	u5181
 10719  002DE8  EFF8  F016         	goto	u5180
 10720  002DEC                     u5181:
 10721  002DEC  EF1C  F017         	goto	l5128
 10722  002DF0                     u5180:
 10723  002DF0                     
 10724                           ;movement.c: 66:             short_reverse(mL,mR);
 10725  002DF0  C036  F026         	movff	action@mL,short_reverse@mL
 10726  002DF4  C037  F027         	movff	action@mL+1,short_reverse@mL+1
 10727  002DF8  C038  F028         	movff	action@mR,short_reverse@mR
 10728  002DFC  C039  F029         	movff	action@mR+1,short_reverse@mR+1
 10729  002E00  ECD0  F027         	call	_short_reverse	;wreg free
 10730                           
 10731                           ;movement.c: 67:             turnLeft(mL,mR,135);
 10732  002E04  C036  F020         	movff	action@mL,turnLeft@mL
 10733  002E08  C037  F021         	movff	action@mL+1,turnLeft@mL+1
 10734  002E0C  C038  F022         	movff	action@mR,turnLeft@mR
 10735  002E10  C039  F023         	movff	action@mR+1,turnLeft@mR+1
 10736  002E14  0E87               	movlw	135
 10737  002E16  6E24               	movwf	turnLeft@angle_left^0,c
 10738  002E18  EC25  F020         	call	_turnLeft	;wreg free
 10739  002E1C                     
 10740                           ;movement.c: 68:             memory[array_index] = 7;
 10741  002E1C  0100               	movlb	0	; () banked
 10742  002E1E  51F6               	movf	_array_index& (0+255),w,b
 10743  002E20  0D02               	mullw	2
 10744  002E22  0E3C               	movlw	low _memory
 10745  002E24  24F3               	addwf	243,w,c
 10746  002E26  6ED9               	movwf	fsr2l,c
 10747  002E28  0E01               	movlw	high _memory
 10748  002E2A  20F4               	addwfc	prodh,w,c
 10749  002E2C  6EDA               	movwf	fsr2h,c
 10750  002E2E  0E07               	movlw	7
 10751  002E30  6EDE               	movwf	postinc2,c
 10752  002E32  0E00               	movlw	0
 10753  002E34  6EDD               	movwf	postdec2,c
 10754  002E36                     
 10755                           ; BSR set to: 0
 10756                           ;movement.c: 69:             array_index++;
 10757  002E36  2BF6               	incf	_array_index& (0+255),f,b
 10758  002E38                     l5128:
 10759                           
 10760                           ;movement.c: 71:         if (color == 8){
 10761  002E38  0E08               	movlw	8
 10762  002E3A  183C               	xorwf	action@color^0,w,c
 10763  002E3C  A4D8               	btfss	status,2,c
 10764  002E3E  EF23  F017         	goto	u5191
 10765  002E42  EF25  F017         	goto	u5190
 10766  002E46                     u5191:
 10767  002E46  EF39  F017         	goto	l618
 10768  002E4A                     u5190:
 10769  002E4A                     
 10770                           ;movement.c: 72:             short_reverse(mL,mR);
 10771  002E4A  C036  F026         	movff	action@mL,short_reverse@mL
 10772  002E4E  C037  F027         	movff	action@mL+1,short_reverse@mL+1
 10773  002E52  C038  F028         	movff	action@mR,short_reverse@mR
 10774  002E56  C039  F029         	movff	action@mR+1,short_reverse@mR+1
 10775  002E5A  ECD0  F027         	call	_short_reverse	;wreg free
 10776                           
 10777                           ;movement.c: 73:             goback(mL,mR);
 10778  002E5E  C036  F02E         	movff	action@mL,goback@mL
 10779  002E62  C037  F02F         	movff	action@mL+1,goback@mL+1
 10780  002E66  C038  F030         	movff	action@mR,goback@mR
 10781  002E6A  C039  F031         	movff	action@mR+1,goback@mR+1
 10782  002E6E  ECAC  F018         	call	_goback	;wreg free
 10783  002E72                     l618:
 10784  002E72  0012               	return		;funcret
 10785  002E74                     __end_of_action:
 10786                           	callstack 0
 10787                           
 10788 ;; *************** function _short_reverse *****************
 10789 ;; Defined at:
 10790 ;;		line 176 in file "dc_motor.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10793 ;;		 -> main@motorL(10), 
 10794 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10795 ;;		 -> main@motorR(10), 
 10796 ;; Auto vars:     Size  Location     Type
 10797 ;;		None
 10798 ;; Return value:  Size  Location     Type
 10799 ;;                  1    wreg      void 
 10800 ;; Registers used:
 10801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10802 ;; Tracked objects:
 10803 ;;		On entry : 0/0
 10804 ;;		On exit  : 0/0
 10805 ;;		Unchanged: 0/0
 10806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10811 ;;Total ram usage:        6 bytes
 10812 ;; Hardware stack levels used: 1
 10813 ;; Hardware stack levels required when called: 5
 10814 ;; This function calls:
 10815 ;;		_fullSpeedBack
 10816 ;;		_stop
 10817 ;; This function is called by:
 10818 ;;		_action
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           	psect	text57
 10823  004FA0                     __ptext57:
 10824                           	callstack 0
 10825  004FA0                     _short_reverse:
 10826                           	callstack 24
 10827  004FA0                     
 10828                           ;dc_motor.c: 176: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 177: { fullSpeedBack(mL, mR);
 10829  004FA0  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10830  004FA4  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10831  004FA8  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10832  004FAC  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10833  004FB0  EC3F  F024         	call	_fullSpeedBack	;wreg free
 10834  004FB4                     
 10835                           ;dc_motor.c: 178:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10836  004FB4  0E29               	movlw	41
 10837  004FB6  6E2B               	movwf	(??_short_reverse+1)^0,c
 10838  004FB8  0E96               	movlw	150
 10839  004FBA  6E2A               	movwf	??_short_reverse^0,c
 10840  004FBC  0E7F               	movlw	127
 10841  004FBE                     u5527:
 10842  004FBE  2EE8               	decfsz	wreg,f,c
 10843  004FC0  D7FE               	bra	u5527
 10844  004FC2  2E2A               	decfsz	??_short_reverse^0,f,c
 10845  004FC4  D7FC               	bra	u5527
 10846  004FC6  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10847  004FC8  D7FA               	bra	u5527
 10848  004FCA  F000               	nop	
 10849  004FCC                     
 10850                           ;dc_motor.c: 179:     stop(mL,mR);
 10851  004FCC  C026  F01A         	movff	short_reverse@mL,stop@mL
 10852  004FD0  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10853  004FD4  C028  F01C         	movff	short_reverse@mR,stop@mR
 10854  004FD8  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10855  004FDC  EC9F  F024         	call	_stop	;wreg free
 10856  004FE0  0012               	return		;funcret
 10857  004FE2                     __end_of_short_reverse:
 10858                           	callstack 0
 10859                           
 10860 ;; *************** function _goback *****************
 10861 ;; Defined at:
 10862 ;;		line 108 in file "movement.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  mL              2   45[COMRAM] PTR struct DC_motor
 10865 ;;		 -> main@motorL(10), 
 10866 ;;  mR              2   47[COMRAM] PTR struct DC_motor
 10867 ;;		 -> main@motorR(10), 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  i               2   51[COMRAM] unsigned int 
 10870 ;; Return value:  Size  Location     Type
 10871 ;;                  1    wreg      void 
 10872 ;; Registers used:
 10873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10874 ;; Tracked objects:
 10875 ;;		On entry : 0/0
 10876 ;;		On exit  : 0/0
 10877 ;;		Unchanged: 0/0
 10878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10881 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10882 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10883 ;;Total ram usage:        8 bytes
 10884 ;; Hardware stack levels used: 1
 10885 ;; Hardware stack levels required when called: 6
 10886 ;; This function calls:
 10887 ;;		_fullSpeedAhead
 10888 ;;		_reverse_square
 10889 ;;		_stop
 10890 ;;		_turnLeft
 10891 ;;		_turnRight
 10892 ;; This function is called by:
 10893 ;;		_action
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text58
 10898  003158                     __ptext58:
 10899                           	callstack 0
 10900  003158                     _goback:
 10901                           	callstack 23
 10902  003158                     
 10903                           ;movement.c: 108: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 109:
      +                           { turnLeft(mL,mR,180);
 10904  003158  C02E  F020         	movff	goback@mL,turnLeft@mL
 10905  00315C  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 10906  003160  C030  F022         	movff	goback@mR,turnLeft@mR
 10907  003164  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 10908  003168  0EB4               	movlw	180
 10909  00316A  6E24               	movwf	turnLeft@angle_left^0,c
 10910  00316C  EC25  F020         	call	_turnLeft	;wreg free
 10911                           
 10912                           ;movement.c: 110:     while(array_index > 0){
 10913  003170  EFF5  F019         	goto	l4844
 10914  003174                     l4784:
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;movement.c: 111:         fullSpeedAhead(mL,mR);
 10918  003174  C02E  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10919  003178  C02F  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10920  00317C  C030  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10921  003180  C031  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10922  003184  ECFD  F024         	call	_fullSpeedAhead	;wreg free
 10923  003188                     
 10924                           ;movement.c: 112:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10925  003188  0E00               	movlw	0
 10926  00318A  6E35               	movwf	(goback@i+1)^0,c
 10927  00318C  0E00               	movlw	0
 10928  00318E  6E34               	movwf	goback@i^0,c
 10929  003190  EFD8  F018         	goto	l4792
 10930  003194                     l4788:
 10931                           
 10932                           ; BSR set to: 0
 10933  003194  0E52               	movlw	82
 10934  003196  6E33               	movwf	(??_goback+1)^0,c
 10935  003198  0E2B               	movlw	43
 10936  00319A  6E32               	movwf	??_goback^0,c
 10937  00319C  0E00               	movlw	0
 10938  00319E                     u5537:
 10939  00319E  2EE8               	decfsz	wreg,f,c
 10940  0031A0  D7FE               	bra	u5537
 10941  0031A2  2E32               	decfsz	??_goback^0,f,c
 10942  0031A4  D7FC               	bra	u5537
 10943  0031A6  2E33               	decfsz	(??_goback+1)^0,f,c
 10944  0031A8  D7FA               	bra	u5537
 10945  0031AA  D000               	nop2	
 10946  0031AC  4A34               	infsnz	goback@i^0,f,c
 10947  0031AE  2A35               	incf	(goback@i+1)^0,f,c
 10948  0031B0                     l4792:
 10949  0031B0  0100               	movlb	0	; () banked
 10950  0031B2  51F6               	movf	_array_index& (0+255),w,b
 10951  0031B4  0D02               	mullw	2
 10952  0031B6  0E3C               	movlw	low _memory
 10953  0031B8  24F3               	addwf	243,w,c
 10954  0031BA  6ED9               	movwf	fsr2l,c
 10955  0031BC  0E01               	movlw	high _memory
 10956  0031BE  20F4               	addwfc	prodh,w,c
 10957  0031C0  6EDA               	movwf	fsr2h,c
 10958  0031C2  50DE               	movf	postinc2,w,c
 10959  0031C4  5C34               	subwf	goback@i^0,w,c
 10960  0031C6  50DE               	movf	postinc2,w,c
 10961  0031C8  5835               	subwfb	(goback@i+1)^0,w,c
 10962  0031CA  A0D8               	btfss	status,0,c
 10963  0031CC  EFEA  F018         	goto	u4931
 10964  0031D0  EFEC  F018         	goto	u4930
 10965  0031D4                     u4931:
 10966  0031D4  EFCA  F018         	goto	l4788
 10967  0031D8                     u4930:
 10968  0031D8                     
 10969                           ; BSR set to: 0
 10970                           ;movement.c: 113:         stop(mL,mR);
 10971  0031D8  C02E  F01A         	movff	goback@mL,stop@mL
 10972  0031DC  C02F  F01B         	movff	goback@mL+1,stop@mL+1
 10973  0031E0  C030  F01C         	movff	goback@mR,stop@mR
 10974  0031E4  C031  F01D         	movff	goback@mR+1,stop@mR+1
 10975  0031E8  EC9F  F024         	call	_stop	;wreg free
 10976  0031EC                     
 10977                           ;movement.c: 114:         if (array_index == 0){break;}
 10978  0031EC  0100               	movlb	0	; () banked
 10979  0031EE  51F6               	movf	_array_index& (0+255),w,b
 10980  0031F0  A4D8               	btfss	status,2,c
 10981  0031F2  EFFD  F018         	goto	u4941
 10982  0031F6  EFFF  F018         	goto	u4940
 10983  0031FA                     u4941:
 10984  0031FA  EF01  F019         	goto	l4800
 10985  0031FE                     u4940:
 10986  0031FE  EFFE  F019         	goto	l641
 10987  003202                     l4800:
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;movement.c: 115:         array_index--;
 10991  003202  07F6               	decf	_array_index& (0+255),f,b
 10992  003204                     
 10993                           ; BSR set to: 0
 10994                           ;movement.c: 117:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10995  003204  51F6               	movf	_array_index& (0+255),w,b
 10996  003206  0D02               	mullw	2
 10997  003208  0E3C               	movlw	low _memory
 10998  00320A  24F3               	addwf	243,w,c
 10999  00320C  6ED9               	movwf	fsr2l,c
 11000  00320E  0E01               	movlw	high _memory
 11001  003210  20F4               	addwfc	prodh,w,c
 11002  003212  6EDA               	movwf	fsr2h,c
 11003  003214  04DE               	decf	postinc2,w,c
 11004  003216  10DE               	iorwf	postinc2,w,c
 11005  003218  A4D8               	btfss	status,2,c
 11006  00321A  EF11  F019         	goto	u4951
 11007  00321E  EF13  F019         	goto	u4950
 11008  003222                     u4951:
 11009  003222  EF21  F019         	goto	l4808
 11010  003226                     u4950:
 11011  003226                     
 11012                           ; BSR set to: 0
 11013  003226  C02E  F020         	movff	goback@mL,turnLeft@mL
 11014  00322A  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 11015  00322E  C030  F022         	movff	goback@mR,turnLeft@mR
 11016  003232  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 11017  003236  0E5A               	movlw	90
 11018  003238  6E24               	movwf	turnLeft@angle_left^0,c
 11019  00323A  EC25  F020         	call	_turnLeft	;wreg free
 11020  00323E  0100               	movlb	0	; () banked
 11021  003240  07F6               	decf	_array_index& (0+255),f,b
 11022  003242                     l4808:
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;movement.c: 118:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 11026  003242  51F6               	movf	_array_index& (0+255),w,b
 11027  003244  0D02               	mullw	2
 11028  003246  0E3C               	movlw	low _memory
 11029  003248  24F3               	addwf	243,w,c
 11030  00324A  6ED9               	movwf	fsr2l,c
 11031  00324C  0E01               	movlw	high _memory
 11032  00324E  20F4               	addwfc	prodh,w,c
 11033  003250  6EDA               	movwf	fsr2h,c
 11034  003252  0E02               	movlw	2
 11035  003254  18DE               	xorwf	postinc2,w,c
 11036  003256  10DE               	iorwf	postinc2,w,c
 11037  003258  A4D8               	btfss	status,2,c
 11038  00325A  EF31  F019         	goto	u4961
 11039  00325E  EF33  F019         	goto	u4960
 11040  003262                     u4961:
 11041  003262  EF41  F019         	goto	l4814
 11042  003266                     u4960:
 11043  003266                     
 11044                           ; BSR set to: 0
 11045  003266  C02E  F020         	movff	goback@mL,turnRight@mL
 11046  00326A  C02F  F021         	movff	goback@mL+1,turnRight@mL+1
 11047  00326E  C030  F022         	movff	goback@mR,turnRight@mR
 11048  003272  C031  F023         	movff	goback@mR+1,turnRight@mR+1
 11049  003276  0E5A               	movlw	90
 11050  003278  6E24               	movwf	turnRight@angle_right^0,c
 11051  00327A  EC8F  F01F         	call	_turnRight	;wreg free
 11052  00327E  0100               	movlb	0	; () banked
 11053  003280  07F6               	decf	_array_index& (0+255),f,b
 11054  003282                     l4814:
 11055                           
 11056                           ; BSR set to: 0
 11057                           ;movement.c: 119:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 11058  003282  51F6               	movf	_array_index& (0+255),w,b
 11059  003284  0D02               	mullw	2
 11060  003286  0E3C               	movlw	low _memory
 11061  003288  24F3               	addwf	243,w,c
 11062  00328A  6ED9               	movwf	fsr2l,c
 11063  00328C  0E01               	movlw	high _memory
 11064  00328E  20F4               	addwfc	prodh,w,c
 11065  003290  6EDA               	movwf	fsr2h,c
 11066  003292  0E03               	movlw	3
 11067  003294  18DE               	xorwf	postinc2,w,c
 11068  003296  10DE               	iorwf	postinc2,w,c
 11069  003298  A4D8               	btfss	status,2,c
 11070  00329A  EF51  F019         	goto	u4971
 11071  00329E  EF53  F019         	goto	u4970
 11072  0032A2                     u4971:
 11073  0032A2  EF61  F019         	goto	l4820
 11074  0032A6                     u4970:
 11075  0032A6                     
 11076                           ; BSR set to: 0
 11077  0032A6  C02E  F020         	movff	goback@mL,turnLeft@mL
 11078  0032AA  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 11079  0032AE  C030  F022         	movff	goback@mR,turnLeft@mR
 11080  0032B2  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 11081  0032B6  0EB4               	movlw	180
 11082  0032B8  6E24               	movwf	turnLeft@angle_left^0,c
 11083  0032BA  EC25  F020         	call	_turnLeft	;wreg free
 11084  0032BE  0100               	movlb	0	; () banked
 11085  0032C0  07F6               	decf	_array_index& (0+255),f,b
 11086  0032C2                     l4820:
 11087                           
 11088                           ; BSR set to: 0
 11089                           ;movement.c: 120:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 11090  0032C2  51F6               	movf	_array_index& (0+255),w,b
 11091  0032C4  0D02               	mullw	2
 11092  0032C6  0E3C               	movlw	low _memory
 11093  0032C8  24F3               	addwf	243,w,c
 11094  0032CA  6ED9               	movwf	fsr2l,c
 11095  0032CC  0E01               	movlw	high _memory
 11096  0032CE  20F4               	addwfc	prodh,w,c
 11097  0032D0  6EDA               	movwf	fsr2h,c
 11098  0032D2  0E04               	movlw	4
 11099  0032D4  18DE               	xorwf	postinc2,w,c
 11100  0032D6  10DE               	iorwf	postinc2,w,c
 11101  0032D8  A4D8               	btfss	status,2,c
 11102  0032DA  EF71  F019         	goto	u4981
 11103  0032DE  EF73  F019         	goto	u4980
 11104  0032E2                     u4981:
 11105  0032E2  EF8B  F019         	goto	l4826
 11106  0032E6                     u4980:
 11107  0032E6                     
 11108                           ; BSR set to: 0
 11109  0032E6  C02E  F026         	movff	goback@mL,reverse_square@mL
 11110  0032EA  C02F  F027         	movff	goback@mL+1,reverse_square@mL+1
 11111  0032EE  C030  F028         	movff	goback@mR,reverse_square@mR
 11112  0032F2  C031  F029         	movff	goback@mR+1,reverse_square@mR+1
 11113  0032F6  ECF1  F027         	call	_reverse_square	;wreg free
 11114  0032FA  C02E  F020         	movff	goback@mL,turnLeft@mL
 11115  0032FE  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 11116  003302  C030  F022         	movff	goback@mR,turnLeft@mR
 11117  003306  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 11118  00330A  0E5A               	movlw	90
 11119  00330C  6E24               	movwf	turnLeft@angle_left^0,c
 11120  00330E  EC25  F020         	call	_turnLeft	;wreg free
 11121  003312  0100               	movlb	0	; () banked
 11122  003314  07F6               	decf	_array_index& (0+255),f,b
 11123  003316                     l4826:
 11124                           
 11125                           ; BSR set to: 0
 11126                           ;movement.c: 121:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 11127  003316  51F6               	movf	_array_index& (0+255),w,b
 11128  003318  0D02               	mullw	2
 11129  00331A  0E3C               	movlw	low _memory
 11130  00331C  24F3               	addwf	243,w,c
 11131  00331E  6ED9               	movwf	fsr2l,c
 11132  003320  0E01               	movlw	high _memory
 11133  003322  20F4               	addwfc	prodh,w,c
 11134  003324  6EDA               	movwf	fsr2h,c
 11135  003326  0E05               	movlw	5
 11136  003328  18DE               	xorwf	postinc2,w,c
 11137  00332A  10DE               	iorwf	postinc2,w,c
 11138  00332C  A4D8               	btfss	status,2,c
 11139  00332E  EF9B  F019         	goto	u4991
 11140  003332  EF9D  F019         	goto	u4990
 11141  003336                     u4991:
 11142  003336  EFB5  F019         	goto	l4832
 11143  00333A                     u4990:
 11144  00333A                     
 11145                           ; BSR set to: 0
 11146  00333A  C02E  F026         	movff	goback@mL,reverse_square@mL
 11147  00333E  C02F  F027         	movff	goback@mL+1,reverse_square@mL+1
 11148  003342  C030  F028         	movff	goback@mR,reverse_square@mR
 11149  003346  C031  F029         	movff	goback@mR+1,reverse_square@mR+1
 11150  00334A  ECF1  F027         	call	_reverse_square	;wreg free
 11151  00334E  C02E  F020         	movff	goback@mL,turnRight@mL
 11152  003352  C02F  F021         	movff	goback@mL+1,turnRight@mL+1
 11153  003356  C030  F022         	movff	goback@mR,turnRight@mR
 11154  00335A  C031  F023         	movff	goback@mR+1,turnRight@mR+1
 11155  00335E  0E5A               	movlw	90
 11156  003360  6E24               	movwf	turnRight@angle_right^0,c
 11157  003362  EC8F  F01F         	call	_turnRight	;wreg free
 11158  003366  0100               	movlb	0	; () banked
 11159  003368  07F6               	decf	_array_index& (0+255),f,b
 11160  00336A                     l4832:
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;movement.c: 122:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 11164  00336A  51F6               	movf	_array_index& (0+255),w,b
 11165  00336C  0D02               	mullw	2
 11166  00336E  0E3C               	movlw	low _memory
 11167  003370  24F3               	addwf	243,w,c
 11168  003372  6ED9               	movwf	fsr2l,c
 11169  003374  0E01               	movlw	high _memory
 11170  003376  20F4               	addwfc	prodh,w,c
 11171  003378  6EDA               	movwf	fsr2h,c
 11172  00337A  0E06               	movlw	6
 11173  00337C  18DE               	xorwf	postinc2,w,c
 11174  00337E  10DE               	iorwf	postinc2,w,c
 11175  003380  A4D8               	btfss	status,2,c
 11176  003382  EFC5  F019         	goto	u5001
 11177  003386  EFC7  F019         	goto	u5000
 11178  00338A                     u5001:
 11179  00338A  EFD5  F019         	goto	l4838
 11180  00338E                     u5000:
 11181  00338E                     
 11182                           ; BSR set to: 0
 11183  00338E  C02E  F020         	movff	goback@mL,turnLeft@mL
 11184  003392  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 11185  003396  C030  F022         	movff	goback@mR,turnLeft@mR
 11186  00339A  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 11187  00339E  0E87               	movlw	135
 11188  0033A0  6E24               	movwf	turnLeft@angle_left^0,c
 11189  0033A2  EC25  F020         	call	_turnLeft	;wreg free
 11190  0033A6  0100               	movlb	0	; () banked
 11191  0033A8  07F6               	decf	_array_index& (0+255),f,b
 11192  0033AA                     l4838:
 11193                           
 11194                           ; BSR set to: 0
 11195                           ;movement.c: 123:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 11196  0033AA  51F6               	movf	_array_index& (0+255),w,b
 11197  0033AC  0D02               	mullw	2
 11198  0033AE  0E3C               	movlw	low _memory
 11199  0033B0  24F3               	addwf	243,w,c
 11200  0033B2  6ED9               	movwf	fsr2l,c
 11201  0033B4  0E01               	movlw	high _memory
 11202  0033B6  20F4               	addwfc	prodh,w,c
 11203  0033B8  6EDA               	movwf	fsr2h,c
 11204  0033BA  0E07               	movlw	7
 11205  0033BC  18DE               	xorwf	postinc2,w,c
 11206  0033BE  10DE               	iorwf	postinc2,w,c
 11207  0033C0  A4D8               	btfss	status,2,c
 11208  0033C2  EFE5  F019         	goto	u5011
 11209  0033C6  EFE7  F019         	goto	u5010
 11210  0033CA                     u5011:
 11211  0033CA  EFF5  F019         	goto	l4844
 11212  0033CE                     u5010:
 11213  0033CE                     
 11214                           ; BSR set to: 0
 11215  0033CE  C02E  F020         	movff	goback@mL,turnRight@mL
 11216  0033D2  C02F  F021         	movff	goback@mL+1,turnRight@mL+1
 11217  0033D6  C030  F022         	movff	goback@mR,turnRight@mR
 11218  0033DA  C031  F023         	movff	goback@mR+1,turnRight@mR+1
 11219  0033DE  0E79               	movlw	121
 11220  0033E0  6E24               	movwf	turnRight@angle_right^0,c
 11221  0033E2  EC8F  F01F         	call	_turnRight	;wreg free
 11222  0033E6  0100               	movlb	0	; () banked
 11223  0033E8  07F6               	decf	_array_index& (0+255),f,b
 11224  0033EA                     l4844:
 11225                           
 11226                           ;movement.c: 110:     while(array_index > 0){
 11227  0033EA  0100               	movlb	0	; () banked
 11228  0033EC  51F6               	movf	_array_index& (0+255),w,b
 11229  0033EE  A4D8               	btfss	status,2,c
 11230  0033F0  EFFC  F019         	goto	u5021
 11231  0033F4  EFFE  F019         	goto	u5020
 11232  0033F8                     u5021:
 11233  0033F8  EFBA  F018         	goto	l4784
 11234  0033FC                     u5020:
 11235  0033FC                     l641:
 11236                           
 11237                           ; BSR set to: 0
 11238  0033FC  0012               	return		;funcret
 11239  0033FE                     __end_of_goback:
 11240                           	callstack 0
 11241                           
 11242 ;; *************** function _turnRight *****************
 11243 ;; Defined at:
 11244 ;;		line 119 in file "dc_motor.c"
 11245 ;; Parameters:    Size  Location     Type
 11246 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11247 ;;		 -> main@motorL(10), 
 11248 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11249 ;;		 -> main@motorR(10), 
 11250 ;;  angle_right     1   35[COMRAM] unsigned char 
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;  i               2   41[COMRAM] unsigned int 
 11253 ;;  i               2   39[COMRAM] unsigned int 
 11254 ;;  delay           2   43[COMRAM] unsigned int 
 11255 ;;  delay_180       2   37[COMRAM] unsigned int 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11265 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11266 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11268 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11269 ;;Total ram usage:       14 bytes
 11270 ;; Hardware stack levels used: 1
 11271 ;; Hardware stack levels required when called: 4
 11272 ;; This function calls:
 11273 ;;		_setMotorPWM
 11274 ;;		_stop
 11275 ;; This function is called by:
 11276 ;;		_action
 11277 ;;		_goback
 11278 ;;		_movement
 11279 ;;		_test_action
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	text59
 11284  003F1E                     __ptext59:
 11285                           	callstack 0
 11286  003F1E                     _turnRight:
 11287                           	callstack 25
 11288  003F1E                     
 11289                           ;dc_motor.c: 119: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 120: {;dc_motor.c: 121:     mL->direction=1;
 11290  003F1E  EE20 F001          	lfsr	2,1
 11291  003F22  5020               	movf	turnRight@mL^0,w,c
 11292  003F24  26D9               	addwf	fsr2l,f,c
 11293  003F26  5021               	movf	(turnRight@mL+1)^0,w,c
 11294  003F28  22DA               	addwfc	fsr2h,f,c
 11295  003F2A  0E01               	movlw	1
 11296  003F2C  6EDF               	movwf	indf2,c
 11297                           
 11298                           ;dc_motor.c: 122:     mR->direction=1;
 11299  003F2E  EE20 F001          	lfsr	2,1
 11300  003F32  5022               	movf	turnRight@mR^0,w,c
 11301  003F34  26D9               	addwf	fsr2l,f,c
 11302  003F36  5023               	movf	(turnRight@mR+1)^0,w,c
 11303  003F38  22DA               	addwfc	fsr2h,f,c
 11304  003F3A  0E01               	movlw	1
 11305  003F3C  6EDF               	movwf	indf2,c
 11306                           
 11307                           ;dc_motor.c: 123:     while (mL->power <25){
 11308  003F3E  EFC0  F01F         	goto	l4308
 11309  003F42                     l4300:
 11310                           
 11311                           ;dc_motor.c: 124:         mL->power += 5;
 11312  003F42  C020  FFD9         	movff	turnRight@mL,fsr2l
 11313  003F46  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 11314  003F4A  0E05               	movlw	5
 11315  003F4C  26DF               	addwf	indf2,f,c
 11316                           
 11317                           ;dc_motor.c: 125:         mR->power = 0;
 11318  003F4E  C022  FFD9         	movff	turnRight@mR,fsr2l
 11319  003F52  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 11320  003F56  0E00               	movlw	0
 11321  003F58  6EDF               	movwf	indf2,c
 11322  003F5A                     
 11323                           ;dc_motor.c: 126:         setMotorPWM(mL);
 11324  003F5A  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 11325  003F5E  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 11326  003F62  ECFF  F019         	call	_setMotorPWM	;wreg free
 11327  003F66                     
 11328                           ;dc_motor.c: 127:         setMotorPWM(mR);
 11329  003F66  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 11330  003F6A  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 11331  003F6E  ECFF  F019         	call	_setMotorPWM	;wreg free
 11332  003F72                     
 11333                           ;dc_motor.c: 128:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11334  003F72  0ED0               	movlw	208
 11335  003F74  6E25               	movwf	??_turnRight^0,c
 11336  003F76  0ECA               	movlw	202
 11337  003F78                     u5547:
 11338  003F78  2EE8               	decfsz	wreg,f,c
 11339  003F7A  D7FE               	bra	u5547
 11340  003F7C  2E25               	decfsz	??_turnRight^0,f,c
 11341  003F7E  D7FC               	bra	u5547
 11342  003F80                     l4308:
 11343                           
 11344                           ;dc_motor.c: 123:     while (mL->power <25){
 11345  003F80  C020  FFD9         	movff	turnRight@mL,fsr2l
 11346  003F84  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 11347  003F88  0E18               	movlw	24
 11348  003F8A  64DF               	cpfsgt	indf2,c
 11349  003F8C  EFCA  F01F         	goto	u4151
 11350  003F90  EFCC  F01F         	goto	u4150
 11351  003F94                     u4151:
 11352  003F94  EFA1  F01F         	goto	l4300
 11353  003F98                     u4150:
 11354  003F98                     
 11355                           ;dc_motor.c: 130:     unsigned int delay = angle_right * SENSITIVITY;
 11356  003F98  5024               	movf	turnRight@angle_right^0,w,c
 11357  003F9A  0100               	movlb	0	; () banked
 11358  003F9C  03FC               	mulwf	_SENSITIVITY& (0+255),b
 11359  003F9E  CFF3 F02C          	movff	prodl,turnRight@delay
 11360  003FA2  CFF4 F02D          	movff	prodh,turnRight@delay+1
 11361  003FA6                     
 11362                           ; BSR set to: 0
 11363                           ;dc_motor.c: 131:     unsigned int delay_180 = delay + CALIBRATION_180;
 11364  003FA6  0E14               	movlw	20
 11365  003FA8  242C               	addwf	turnRight@delay^0,w,c
 11366  003FAA  6E26               	movwf	turnRight@delay_180^0,c
 11367  003FAC  0E00               	movlw	0
 11368  003FAE  202D               	addwfc	(turnRight@delay+1)^0,w,c
 11369  003FB0  6E27               	movwf	(turnRight@delay_180+1)^0,c
 11370  003FB2                     
 11371                           ; BSR set to: 0
 11372                           ;dc_motor.c: 132:     if (angle_right == 180){
 11373  003FB2  0EB4               	movlw	180
 11374  003FB4  1824               	xorwf	turnRight@angle_right^0,w,c
 11375  003FB6  A4D8               	btfss	status,2,c
 11376  003FB8  EFE0  F01F         	goto	u4161
 11377  003FBC  EFE2  F01F         	goto	u4160
 11378  003FC0                     u4161:
 11379  003FC0  EFFF  F01F         	goto	l4322
 11380  003FC4                     u4160:
 11381  003FC4                     
 11382                           ; BSR set to: 0
 11383                           ;dc_motor.c: 133:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11384  003FC4  0E00               	movlw	0
 11385  003FC6  6E29               	movwf	(turnRight@i+1)^0,c
 11386  003FC8  0E00               	movlw	0
 11387  003FCA  6E28               	movwf	turnRight@i^0,c
 11388  003FCC  EFF2  F01F         	goto	l332
 11389  003FD0                     l4318:
 11390  003FD0  0E15               	movlw	21
 11391  003FD2  6E25               	movwf	??_turnRight^0,c
 11392  003FD4  0EC6               	movlw	198
 11393  003FD6                     u5557:
 11394  003FD6  2EE8               	decfsz	wreg,f,c
 11395  003FD8  D7FE               	bra	u5557
 11396  003FDA  2E25               	decfsz	??_turnRight^0,f,c
 11397  003FDC  D7FC               	bra	u5557
 11398  003FDE  D000               	nop2	
 11399  003FE0  4A28               	infsnz	turnRight@i^0,f,c
 11400  003FE2  2A29               	incf	(turnRight@i+1)^0,f,c
 11401  003FE4                     l332:
 11402  003FE4  5026               	movf	turnRight@delay_180^0,w,c
 11403  003FE6  5C28               	subwf	turnRight@i^0,w,c
 11404  003FE8  5027               	movf	(turnRight@delay_180+1)^0,w,c
 11405  003FEA  5829               	subwfb	(turnRight@i+1)^0,w,c
 11406  003FEC  A0D8               	btfss	status,0,c
 11407  003FEE  EFFB  F01F         	goto	u4171
 11408  003FF2  EFFD  F01F         	goto	u4170
 11409  003FF6                     u4171:
 11410  003FF6  EFE8  F01F         	goto	l4318
 11411  003FFA                     u4170:
 11412  003FFA  EF1A  F020         	goto	l4328
 11413  003FFE                     l4322:
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;dc_motor.c: 136:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11417  003FFE  0E00               	movlw	0
 11418  004000  6E2B               	movwf	(turnRight@i_1214+1)^0,c
 11419  004002  0E00               	movlw	0
 11420  004004  6E2A               	movwf	turnRight@i_1214^0,c
 11421  004006  EF0F  F020         	goto	l336
 11422  00400A                     l4324:
 11423  00400A  0E15               	movlw	21
 11424  00400C  6E25               	movwf	??_turnRight^0,c
 11425  00400E  0EC6               	movlw	198
 11426  004010                     u5567:
 11427  004010  2EE8               	decfsz	wreg,f,c
 11428  004012  D7FE               	bra	u5567
 11429  004014  2E25               	decfsz	??_turnRight^0,f,c
 11430  004016  D7FC               	bra	u5567
 11431  004018  D000               	nop2	
 11432  00401A  4A2A               	infsnz	turnRight@i_1214^0,f,c
 11433  00401C  2A2B               	incf	(turnRight@i_1214+1)^0,f,c
 11434  00401E                     l336:
 11435  00401E  502C               	movf	turnRight@delay^0,w,c
 11436  004020  5C2A               	subwf	turnRight@i_1214^0,w,c
 11437  004022  502D               	movf	(turnRight@delay+1)^0,w,c
 11438  004024  582B               	subwfb	(turnRight@i_1214+1)^0,w,c
 11439  004026  A0D8               	btfss	status,0,c
 11440  004028  EF18  F020         	goto	u4181
 11441  00402C  EF1A  F020         	goto	u4180
 11442  004030                     u4181:
 11443  004030  EF05  F020         	goto	l4324
 11444  004034                     u4180:
 11445  004034                     l4328:
 11446                           
 11447                           ;dc_motor.c: 138:     stop(mL,mR);
 11448  004034  C020  F01A         	movff	turnRight@mL,stop@mL
 11449  004038  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 11450  00403C  C022  F01C         	movff	turnRight@mR,stop@mR
 11451  004040  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 11452  004044  EC9F  F024         	call	_stop	;wreg free
 11453  004048  0012               	return		;funcret
 11454  00404A                     __end_of_turnRight:
 11455                           	callstack 0
 11456                           
 11457 ;; *************** function _turnLeft *****************
 11458 ;; Defined at:
 11459 ;;		line 96 in file "dc_motor.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11462 ;;		 -> main@motorL(10), 
 11463 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11464 ;;		 -> main@motorR(10), 
 11465 ;;  angle_left      1   35[COMRAM] unsigned char 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  i               2   41[COMRAM] unsigned int 
 11468 ;;  i               2   39[COMRAM] unsigned int 
 11469 ;;  delay           2   43[COMRAM] unsigned int 
 11470 ;;  delay_180       2   37[COMRAM] unsigned int 
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  1    wreg      void 
 11473 ;; Registers used:
 11474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11480 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11481 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11483 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11484 ;;Total ram usage:       14 bytes
 11485 ;; Hardware stack levels used: 1
 11486 ;; Hardware stack levels required when called: 4
 11487 ;; This function calls:
 11488 ;;		_setMotorPWM
 11489 ;;		_stop
 11490 ;; This function is called by:
 11491 ;;		_action
 11492 ;;		_goback
 11493 ;;		_test_action
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           	psect	text60
 11498  00404A                     __ptext60:
 11499                           	callstack 0
 11500  00404A                     _turnLeft:
 11501                           	callstack 25
 11502  00404A                     
 11503                           ;dc_motor.c: 96: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 97: {;dc_motor.c: 98:       mL->direction=1;
 11504  00404A  EE20 F001          	lfsr	2,1
 11505  00404E  5020               	movf	turnLeft@mL^0,w,c
 11506  004050  26D9               	addwf	fsr2l,f,c
 11507  004052  5021               	movf	(turnLeft@mL+1)^0,w,c
 11508  004054  22DA               	addwfc	fsr2h,f,c
 11509  004056  0E01               	movlw	1
 11510  004058  6EDF               	movwf	indf2,c
 11511                           
 11512                           ;dc_motor.c: 99:       mR->direction=1;
 11513  00405A  EE20 F001          	lfsr	2,1
 11514  00405E  5022               	movf	turnLeft@mR^0,w,c
 11515  004060  26D9               	addwf	fsr2l,f,c
 11516  004062  5023               	movf	(turnLeft@mR+1)^0,w,c
 11517  004064  22DA               	addwfc	fsr2h,f,c
 11518  004066  0E01               	movlw	1
 11519  004068  6EDF               	movwf	indf2,c
 11520                           
 11521                           ;dc_motor.c: 100:       while (mR->power <25){
 11522  00406A  EF56  F020         	goto	l4340
 11523  00406E                     l4332:
 11524                           
 11525                           ;dc_motor.c: 101:         mR->power += 5;
 11526  00406E  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11527  004072  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11528  004076  0E05               	movlw	5
 11529  004078  26DF               	addwf	indf2,f,c
 11530                           
 11531                           ;dc_motor.c: 102:         mL->power = 0;
 11532  00407A  C020  FFD9         	movff	turnLeft@mL,fsr2l
 11533  00407E  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 11534  004082  0E00               	movlw	0
 11535  004084  6EDF               	movwf	indf2,c
 11536  004086                     
 11537                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11538  004086  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 11539  00408A  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11540  00408E  ECFF  F019         	call	_setMotorPWM	;wreg free
 11541  004092                     
 11542                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11543  004092  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 11544  004096  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11545  00409A  ECFF  F019         	call	_setMotorPWM	;wreg free
 11546  00409E                     
 11547                           ;dc_motor.c: 105:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11548  00409E  0ED0               	movlw	208
 11549  0040A0  6E25               	movwf	??_turnLeft^0,c
 11550  0040A2  0ECA               	movlw	202
 11551  0040A4                     u5577:
 11552  0040A4  2EE8               	decfsz	wreg,f,c
 11553  0040A6  D7FE               	bra	u5577
 11554  0040A8  2E25               	decfsz	??_turnLeft^0,f,c
 11555  0040AA  D7FC               	bra	u5577
 11556  0040AC                     l4340:
 11557                           
 11558                           ;dc_motor.c: 100:       while (mR->power <25){
 11559  0040AC  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11560  0040B0  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11561  0040B4  0E18               	movlw	24
 11562  0040B6  64DF               	cpfsgt	indf2,c
 11563  0040B8  EF60  F020         	goto	u4191
 11564  0040BC  EF62  F020         	goto	u4190
 11565  0040C0                     u4191:
 11566  0040C0  EF37  F020         	goto	l4332
 11567  0040C4                     u4190:
 11568  0040C4                     
 11569                           ;dc_motor.c: 107:     unsigned int delay = angle_left * SENSITIVITY;
 11570  0040C4  5024               	movf	turnLeft@angle_left^0,w,c
 11571  0040C6  0100               	movlb	0	; () banked
 11572  0040C8  03FC               	mulwf	_SENSITIVITY& (0+255),b
 11573  0040CA  CFF3 F02C          	movff	prodl,turnLeft@delay
 11574  0040CE  CFF4 F02D          	movff	prodh,turnLeft@delay+1
 11575  0040D2                     
 11576                           ; BSR set to: 0
 11577                           ;dc_motor.c: 108:     unsigned int delay_180 = delay + CALIBRATION_180;
 11578  0040D2  0E14               	movlw	20
 11579  0040D4  242C               	addwf	turnLeft@delay^0,w,c
 11580  0040D6  6E26               	movwf	turnLeft@delay_180^0,c
 11581  0040D8  0E00               	movlw	0
 11582  0040DA  202D               	addwfc	(turnLeft@delay+1)^0,w,c
 11583  0040DC  6E27               	movwf	(turnLeft@delay_180+1)^0,c
 11584  0040DE                     
 11585                           ; BSR set to: 0
 11586                           ;dc_motor.c: 109:     if (angle_left == 180){
 11587  0040DE  0EB4               	movlw	180
 11588  0040E0  1824               	xorwf	turnLeft@angle_left^0,w,c
 11589  0040E2  A4D8               	btfss	status,2,c
 11590  0040E4  EF76  F020         	goto	u4201
 11591  0040E8  EF78  F020         	goto	u4200
 11592  0040EC                     u4201:
 11593  0040EC  EF95  F020         	goto	l4354
 11594  0040F0                     u4200:
 11595  0040F0                     
 11596                           ; BSR set to: 0
 11597                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11598  0040F0  0E00               	movlw	0
 11599  0040F2  6E29               	movwf	(turnLeft@i+1)^0,c
 11600  0040F4  0E00               	movlw	0
 11601  0040F6  6E28               	movwf	turnLeft@i^0,c
 11602  0040F8  EF88  F020         	goto	l318
 11603  0040FC                     l4350:
 11604  0040FC  0E15               	movlw	21
 11605  0040FE  6E25               	movwf	??_turnLeft^0,c
 11606  004100  0EC6               	movlw	198
 11607  004102                     u5587:
 11608  004102  2EE8               	decfsz	wreg,f,c
 11609  004104  D7FE               	bra	u5587
 11610  004106  2E25               	decfsz	??_turnLeft^0,f,c
 11611  004108  D7FC               	bra	u5587
 11612  00410A  D000               	nop2	
 11613  00410C  4A28               	infsnz	turnLeft@i^0,f,c
 11614  00410E  2A29               	incf	(turnLeft@i+1)^0,f,c
 11615  004110                     l318:
 11616  004110  5026               	movf	turnLeft@delay_180^0,w,c
 11617  004112  5C28               	subwf	turnLeft@i^0,w,c
 11618  004114  5027               	movf	(turnLeft@delay_180+1)^0,w,c
 11619  004116  5829               	subwfb	(turnLeft@i+1)^0,w,c
 11620  004118  A0D8               	btfss	status,0,c
 11621  00411A  EF91  F020         	goto	u4211
 11622  00411E  EF93  F020         	goto	u4210
 11623  004122                     u4211:
 11624  004122  EF7E  F020         	goto	l4350
 11625  004126                     u4210:
 11626  004126  EFB0  F020         	goto	l4360
 11627  00412A                     l4354:
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;dc_motor.c: 113:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11631  00412A  0E00               	movlw	0
 11632  00412C  6E2B               	movwf	(turnLeft@i_1191+1)^0,c
 11633  00412E  0E00               	movlw	0
 11634  004130  6E2A               	movwf	turnLeft@i_1191^0,c
 11635  004132  EFA5  F020         	goto	l322
 11636  004136                     l4356:
 11637  004136  0E15               	movlw	21
 11638  004138  6E25               	movwf	??_turnLeft^0,c
 11639  00413A  0EC6               	movlw	198
 11640  00413C                     u5597:
 11641  00413C  2EE8               	decfsz	wreg,f,c
 11642  00413E  D7FE               	bra	u5597
 11643  004140  2E25               	decfsz	??_turnLeft^0,f,c
 11644  004142  D7FC               	bra	u5597
 11645  004144  D000               	nop2	
 11646  004146  4A2A               	infsnz	turnLeft@i_1191^0,f,c
 11647  004148  2A2B               	incf	(turnLeft@i_1191+1)^0,f,c
 11648  00414A                     l322:
 11649  00414A  502C               	movf	turnLeft@delay^0,w,c
 11650  00414C  5C2A               	subwf	turnLeft@i_1191^0,w,c
 11651  00414E  502D               	movf	(turnLeft@delay+1)^0,w,c
 11652  004150  582B               	subwfb	(turnLeft@i_1191+1)^0,w,c
 11653  004152  A0D8               	btfss	status,0,c
 11654  004154  EFAE  F020         	goto	u4221
 11655  004158  EFB0  F020         	goto	u4220
 11656  00415C                     u4221:
 11657  00415C  EF9B  F020         	goto	l4356
 11658  004160                     u4220:
 11659  004160                     l4360:
 11660                           
 11661                           ;dc_motor.c: 115:     stop(mL,mR);
 11662  004160  C020  F01A         	movff	turnLeft@mL,stop@mL
 11663  004164  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11664  004168  C022  F01C         	movff	turnLeft@mR,stop@mR
 11665  00416C  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11666  004170  EC9F  F024         	call	_stop	;wreg free
 11667  004174  0012               	return		;funcret
 11668  004176                     __end_of_turnLeft:
 11669                           	callstack 0
 11670                           
 11671 ;; *************** function _reverse_square *****************
 11672 ;; Defined at:
 11673 ;;		line 182 in file "dc_motor.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 11676 ;;		 -> main@motorL(10), 
 11677 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 11678 ;;		 -> main@motorR(10), 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;		None
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;Total ram usage:        6 bytes
 11695 ;; Hardware stack levels used: 1
 11696 ;; Hardware stack levels required when called: 5
 11697 ;; This function calls:
 11698 ;;		_fullSpeedBack
 11699 ;;		_stop
 11700 ;; This function is called by:
 11701 ;;		_action
 11702 ;;		_goback
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text61
 11707  004FE2                     __ptext61:
 11708                           	callstack 0
 11709  004FE2                     _reverse_square:
 11710                           	callstack 24
 11711  004FE2                     
 11712                           ;dc_motor.c: 182: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 183: { fullSpeedBack(mL, mR);
 11713  004FE2  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 11714  004FE6  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 11715  004FEA  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 11716  004FEE  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 11717  004FF2  EC3F  F024         	call	_fullSpeedBack	;wreg free
 11718  004FF6                     
 11719                           ;dc_motor.c: 184:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 11720  004FF6  0E52               	movlw	82
 11721  004FF8  6E2B               	movwf	(??_reverse_square+1)^0,c
 11722  004FFA  0E2B               	movlw	43
 11723  004FFC  6E2A               	movwf	??_reverse_square^0,c
 11724  004FFE  0E00               	movlw	0
 11725  005000                     u5607:
 11726  005000  2EE8               	decfsz	wreg,f,c
 11727  005002  D7FE               	bra	u5607
 11728  005004  2E2A               	decfsz	??_reverse_square^0,f,c
 11729  005006  D7FC               	bra	u5607
 11730  005008  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 11731  00500A  D7FA               	bra	u5607
 11732  00500C  D000               	nop2	
 11733  00500E                     
 11734                           ;dc_motor.c: 185:     stop(mL,mR);
 11735  00500E  C026  F01A         	movff	reverse_square@mL,stop@mL
 11736  005012  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 11737  005016  C028  F01C         	movff	reverse_square@mR,stop@mR
 11738  00501A  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 11739  00501E  EC9F  F024         	call	_stop	;wreg free
 11740  005022  0012               	return		;funcret
 11741  005024                     __end_of_reverse_square:
 11742                           	callstack 0
 11743                           
 11744 ;; *************** function _fullSpeedBack *****************
 11745 ;; Defined at:
 11746 ;;		line 161 in file "dc_motor.c"
 11747 ;; Parameters:    Size  Location     Type
 11748 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11749 ;;		 -> main@motorL(10), 
 11750 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11751 ;;		 -> main@motorR(10), 
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;		None
 11754 ;; Return value:  Size  Location     Type
 11755 ;;                  1    wreg      void 
 11756 ;; Registers used:
 11757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11758 ;; Tracked objects:
 11759 ;;		On entry : 0/0
 11760 ;;		On exit  : 0/0
 11761 ;;		Unchanged: 0/0
 11762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11763 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11767 ;;Total ram usage:        6 bytes
 11768 ;; Hardware stack levels used: 1
 11769 ;; Hardware stack levels required when called: 4
 11770 ;; This function calls:
 11771 ;;		_setMotorPWM
 11772 ;;		_stop
 11773 ;; This function is called by:
 11774 ;;		_short_reverse
 11775 ;;		_reverse_square
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text62
 11780  00487E                     __ptext62:
 11781                           	callstack 0
 11782  00487E                     _fullSpeedBack:
 11783                           	callstack 24
 11784  00487E                     
 11785                           ;dc_motor.c: 161: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 162: {;dc_motor.c: 163:     mL->direction=0;
 11786  00487E  EE20 F001          	lfsr	2,1
 11787  004882  5020               	movf	fullSpeedBack@mL^0,w,c
 11788  004884  26D9               	addwf	fsr2l,f,c
 11789  004886  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11790  004888  22DA               	addwfc	fsr2h,f,c
 11791  00488A  0E00               	movlw	0
 11792  00488C  6EDF               	movwf	indf2,c
 11793                           
 11794                           ;dc_motor.c: 164:     mR->direction=0;
 11795  00488E  EE20 F001          	lfsr	2,1
 11796  004892  5022               	movf	fullSpeedBack@mR^0,w,c
 11797  004894  26D9               	addwf	fsr2l,f,c
 11798  004896  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11799  004898  22DA               	addwfc	fsr2h,f,c
 11800  00489A  0E00               	movlw	0
 11801  00489C  6EDF               	movwf	indf2,c
 11802                           
 11803                           ;dc_motor.c: 165:     while (mL->power<50 && mR->power<50){
 11804  00489E  EF70  F024         	goto	l4152
 11805  0048A2                     l4144:
 11806                           
 11807                           ;dc_motor.c: 166:         mL->power += 10;
 11808  0048A2  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11809  0048A6  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11810  0048AA  0E0A               	movlw	10
 11811  0048AC  26DF               	addwf	indf2,f,c
 11812                           
 11813                           ;dc_motor.c: 167:         mR->power += 10;
 11814  0048AE  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11815  0048B2  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11816  0048B6  0E0A               	movlw	10
 11817  0048B8  26DF               	addwf	indf2,f,c
 11818  0048BA                     
 11819                           ;dc_motor.c: 168:         setMotorPWM(mL);
 11820  0048BA  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11821  0048BE  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11822  0048C2  ECFF  F019         	call	_setMotorPWM	;wreg free
 11823  0048C6                     
 11824                           ;dc_motor.c: 169:         setMotorPWM(mR);
 11825  0048C6  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11826  0048CA  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11827  0048CE  ECFF  F019         	call	_setMotorPWM	;wreg free
 11828  0048D2                     
 11829                           ;dc_motor.c: 170:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11830  0048D2  0ED0               	movlw	208
 11831  0048D4  6E24               	movwf	??_fullSpeedBack^0,c
 11832  0048D6  0ECA               	movlw	202
 11833  0048D8                     u5617:
 11834  0048D8  2EE8               	decfsz	wreg,f,c
 11835  0048DA  D7FE               	bra	u5617
 11836  0048DC  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11837  0048DE  D7FC               	bra	u5617
 11838  0048E0                     l4152:
 11839                           
 11840                           ;dc_motor.c: 165:     while (mL->power<50 && mR->power<50){
 11841  0048E0  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11842  0048E4  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11843  0048E8  0E32               	movlw	50
 11844  0048EA  60DF               	cpfslt	indf2,c
 11845  0048EC  EF7A  F024         	goto	u3921
 11846  0048F0  EF7C  F024         	goto	u3920
 11847  0048F4                     u3921:
 11848  0048F4  EF88  F024         	goto	l4156
 11849  0048F8                     u3920:
 11850  0048F8  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11851  0048FC  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11852  004900  0E31               	movlw	49
 11853  004902  64DF               	cpfsgt	indf2,c
 11854  004904  EF86  F024         	goto	u3931
 11855  004908  EF88  F024         	goto	u3930
 11856  00490C                     u3931:
 11857  00490C  EF51  F024         	goto	l4144
 11858  004910                     u3930:
 11859  004910                     l4156:
 11860                           
 11861                           ;dc_motor.c: 172:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11862  004910  0E29               	movlw	41
 11863  004912  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11864  004914  0E96               	movlw	150
 11865  004916  6E24               	movwf	??_fullSpeedBack^0,c
 11866  004918  0E7F               	movlw	127
 11867  00491A                     u5627:
 11868  00491A  2EE8               	decfsz	wreg,f,c
 11869  00491C  D7FE               	bra	u5627
 11870  00491E  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11871  004920  D7FC               	bra	u5627
 11872  004922  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11873  004924  D7FA               	bra	u5627
 11874  004926  F000               	nop	
 11875  004928                     
 11876                           ;dc_motor.c: 173:     stop(mL,mR);
 11877  004928  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11878  00492C  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11879  004930  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11880  004934  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11881  004938  EC9F  F024         	call	_stop	;wreg free
 11882  00493C  0012               	return		;funcret
 11883  00493E                     __end_of_fullSpeedBack:
 11884                           	callstack 0
 11885                           
 11886 ;; *************** function _stop *****************
 11887 ;; Defined at:
 11888 ;;		line 83 in file "dc_motor.c"
 11889 ;; Parameters:    Size  Location     Type
 11890 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11891 ;;		 -> main@motorL(10), 
 11892 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11893 ;;		 -> main@motorR(10), 
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;		None
 11896 ;; Return value:  Size  Location     Type
 11897 ;;                  1    wreg      void 
 11898 ;; Registers used:
 11899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11900 ;; Tracked objects:
 11901 ;;		On entry : 0/0
 11902 ;;		On exit  : 0/0
 11903 ;;		Unchanged: 0/0
 11904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11909 ;;Total ram usage:        6 bytes
 11910 ;; Hardware stack levels used: 1
 11911 ;; Hardware stack levels required when called: 3
 11912 ;; This function calls:
 11913 ;;		_setMotorPWM
 11914 ;; This function is called by:
 11915 ;;		_turnLeft
 11916 ;;		_turnRight
 11917 ;;		_fullSpeedBack
 11918 ;;		_short_reverse
 11919 ;;		_reverse_square
 11920 ;;		_main
 11921 ;;		_short_burst
 11922 ;;		_action
 11923 ;;		_goback
 11924 ;;		_fullSpeedAhead_test
 11925 ;; This function uses a non-reentrant model
 11926 ;;
 11927                           
 11928                           	psect	text63
 11929  00493E                     __ptext63:
 11930                           	callstack 0
 11931  00493E                     _stop:
 11932                           	callstack 27
 11933  00493E                     
 11934                           ;dc_motor.c: 83: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 84: {;d
      +                          c_motor.c: 85:     while (mL->power >0 || mR->power >0){
 11935  00493E  EFD8  F024         	goto	l3904
 11936  004942                     l3890:
 11937                           
 11938                           ;dc_motor.c: 86:         if (mL->power !=0){mL->power -= 5;}
 11939  004942  C01A  FFD9         	movff	stop@mL,fsr2l
 11940  004946  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11941  00494A  50DF               	movf	indf2,w,c
 11942  00494C  B4D8               	btfsc	status,2,c
 11943  00494E  EFAB  F024         	goto	u3591
 11944  004952  EFAD  F024         	goto	u3590
 11945  004956                     u3591:
 11946  004956  EFB3  F024         	goto	l3894
 11947  00495A                     u3590:
 11948  00495A  C01A  FFD9         	movff	stop@mL,fsr2l
 11949  00495E  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11950  004962  0E05               	movlw	5
 11951  004964  5EDF               	subwf	indf2,f,c
 11952  004966                     l3894:
 11953                           
 11954                           ;dc_motor.c: 87:         if (mR->power !=0){mR->power -= 5;}
 11955  004966  C01C  FFD9         	movff	stop@mR,fsr2l
 11956  00496A  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11957  00496E  50DF               	movf	indf2,w,c
 11958  004970  B4D8               	btfsc	status,2,c
 11959  004972  EFBD  F024         	goto	u3601
 11960  004976  EFBF  F024         	goto	u3600
 11961  00497A                     u3601:
 11962  00497A  EFC5  F024         	goto	l3898
 11963  00497E                     u3600:
 11964  00497E  C01C  FFD9         	movff	stop@mR,fsr2l
 11965  004982  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11966  004986  0E05               	movlw	5
 11967  004988  5EDF               	subwf	indf2,f,c
 11968  00498A                     l3898:
 11969                           
 11970                           ;dc_motor.c: 88:         setMotorPWM(mL);
 11971  00498A  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11972  00498E  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11973  004992  ECFF  F019         	call	_setMotorPWM	;wreg free
 11974  004996                     
 11975                           ;dc_motor.c: 89:         setMotorPWM(mR);
 11976  004996  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11977  00499A  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11978  00499E  ECFF  F019         	call	_setMotorPWM	;wreg free
 11979  0049A2                     
 11980                           ;dc_motor.c: 90:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11981  0049A2  0ED0               	movlw	208
 11982  0049A4  6E1E               	movwf	??_stop^0,c
 11983  0049A6  0ECA               	movlw	202
 11984  0049A8                     u5637:
 11985  0049A8  2EE8               	decfsz	wreg,f,c
 11986  0049AA  D7FE               	bra	u5637
 11987  0049AC  2E1E               	decfsz	??_stop^0,f,c
 11988  0049AE  D7FC               	bra	u5637
 11989  0049B0                     l3904:
 11990                           
 11991                           ;dc_motor.c: 85:     while (mL->power >0 || mR->power >0){
 11992  0049B0  C01A  FFD9         	movff	stop@mL,fsr2l
 11993  0049B4  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11994  0049B8  50DF               	movf	indf2,w,c
 11995  0049BA  A4D8               	btfss	status,2,c
 11996  0049BC  EFE2  F024         	goto	u3611
 11997  0049C0  EFE4  F024         	goto	u3610
 11998  0049C4                     u3611:
 11999  0049C4  EFA1  F024         	goto	l3890
 12000  0049C8                     u3610:
 12001  0049C8  C01C  FFD9         	movff	stop@mR,fsr2l
 12002  0049CC  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12003  0049D0  50DF               	movf	indf2,w,c
 12004  0049D2  A4D8               	btfss	status,2,c
 12005  0049D4  EFEE  F024         	goto	u3621
 12006  0049D8  EFF0  F024         	goto	u3620
 12007  0049DC                     u3621:
 12008  0049DC  EFA1  F024         	goto	l3890
 12009  0049E0                     u3620:
 12010  0049E0                     
 12011                           ;dc_motor.c: 92:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12012  0049E0  0E09               	movlw	9
 12013  0049E2  6E1F               	movwf	(??_stop+1)^0,c
 12014  0049E4  0E1E               	movlw	30
 12015  0049E6  6E1E               	movwf	??_stop^0,c
 12016  0049E8  0EE4               	movlw	228
 12017  0049EA                     u5647:
 12018  0049EA  2EE8               	decfsz	wreg,f,c
 12019  0049EC  D7FE               	bra	u5647
 12020  0049EE  2E1E               	decfsz	??_stop^0,f,c
 12021  0049F0  D7FC               	bra	u5647
 12022  0049F2  2E1F               	decfsz	(??_stop+1)^0,f,c
 12023  0049F4  D7FA               	bra	u5647
 12024  0049F6  D000               	nop2	
 12025  0049F8  0012               	return		;funcret
 12026  0049FA                     __end_of_stop:
 12027                           	callstack 0
 12028                           
 12029 ;; *************** function _fullSpeedAhead *****************
 12030 ;; Defined at:
 12031 ;;		line 142 in file "dc_motor.c"
 12032 ;; Parameters:    Size  Location     Type
 12033 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 12034 ;;		 -> main@motorL(10), 
 12035 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 12036 ;;		 -> main@motorR(10), 
 12037 ;; Auto vars:     Size  Location     Type
 12038 ;;		None
 12039 ;; Return value:  Size  Location     Type
 12040 ;;                  1    wreg      void 
 12041 ;; Registers used:
 12042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12043 ;; Tracked objects:
 12044 ;;		On entry : 0/0
 12045 ;;		On exit  : 0/0
 12046 ;;		Unchanged: 0/0
 12047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12051 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12052 ;;Total ram usage:        5 bytes
 12053 ;; Hardware stack levels used: 1
 12054 ;; Hardware stack levels required when called: 3
 12055 ;; This function calls:
 12056 ;;		_setMotorPWM
 12057 ;; This function is called by:
 12058 ;;		_main
 12059 ;;		_short_burst
 12060 ;;		_action
 12061 ;;		_goback
 12062 ;;		_fullSpeedAhead_test
 12063 ;; This function uses a non-reentrant model
 12064 ;;
 12065                           
 12066                           	psect	text64
 12067  0049FA                     __ptext64:
 12068                           	callstack 0
 12069  0049FA                     _fullSpeedAhead:
 12070                           	callstack 26
 12071  0049FA                     
 12072                           ;dc_motor.c: 142: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 143: {;dc_motor.c: 144:     mL->direction=1;
 12073  0049FA  EE20 F001          	lfsr	2,1
 12074  0049FE  501A               	movf	fullSpeedAhead@mL^0,w,c
 12075  004A00  26D9               	addwf	fsr2l,f,c
 12076  004A02  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 12077  004A04  22DA               	addwfc	fsr2h,f,c
 12078  004A06  0E01               	movlw	1
 12079  004A08  6EDF               	movwf	indf2,c
 12080                           
 12081                           ;dc_motor.c: 145:     mR->direction=1;
 12082  004A0A  EE20 F001          	lfsr	2,1
 12083  004A0E  501C               	movf	fullSpeedAhead@mR^0,w,c
 12084  004A10  26D9               	addwf	fsr2l,f,c
 12085  004A12  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 12086  004A14  22DA               	addwfc	fsr2h,f,c
 12087  004A16  0E01               	movlw	1
 12088  004A18  6EDF               	movwf	indf2,c
 12089                           
 12090                           ;dc_motor.c: 146:     while (mL->power<20 && mR->power<20){
 12091  004A1A  EF2E  F025         	goto	l4372
 12092  004A1E                     l4364:
 12093                           
 12094                           ;dc_motor.c: 147:         mL->power += 10;
 12095  004A1E  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12096  004A22  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12097  004A26  0E0A               	movlw	10
 12098  004A28  26DF               	addwf	indf2,f,c
 12099                           
 12100                           ;dc_motor.c: 148:         mR->power += 10;
 12101  004A2A  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12102  004A2E  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12103  004A32  0E0A               	movlw	10
 12104  004A34  26DF               	addwf	indf2,f,c
 12105  004A36                     
 12106                           ;dc_motor.c: 149:         setMotorPWM(mL);
 12107  004A36  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 12108  004A3A  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 12109  004A3E  ECFF  F019         	call	_setMotorPWM	;wreg free
 12110  004A42                     
 12111                           ;dc_motor.c: 150:         setMotorPWM(mR);
 12112  004A42  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 12113  004A46  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 12114  004A4A  ECFF  F019         	call	_setMotorPWM	;wreg free
 12115  004A4E                     
 12116                           ;dc_motor.c: 151:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12117  004A4E  0ED0               	movlw	208
 12118  004A50  6E1E               	movwf	??_fullSpeedAhead^0,c
 12119  004A52  0ECA               	movlw	202
 12120  004A54                     u5657:
 12121  004A54  2EE8               	decfsz	wreg,f,c
 12122  004A56  D7FE               	bra	u5657
 12123  004A58  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 12124  004A5A  D7FC               	bra	u5657
 12125  004A5C                     l4372:
 12126                           
 12127                           ;dc_motor.c: 146:     while (mL->power<20 && mR->power<20){
 12128  004A5C  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12129  004A60  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12130  004A64  0E14               	movlw	20
 12131  004A66  60DF               	cpfslt	indf2,c
 12132  004A68  EF38  F025         	goto	u4231
 12133  004A6C  EF3A  F025         	goto	u4230
 12134  004A70                     u4231:
 12135  004A70  EF46  F025         	goto	l347
 12136  004A74                     u4230:
 12137  004A74  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12138  004A78  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12139  004A7C  0E13               	movlw	19
 12140  004A7E  64DF               	cpfsgt	indf2,c
 12141  004A80  EF44  F025         	goto	u4241
 12142  004A84  EF46  F025         	goto	u4240
 12143  004A88                     u4241:
 12144  004A88  EF0F  F025         	goto	l4364
 12145  004A8C                     u4240:
 12146  004A8C                     l347:
 12147  004A8C  0012               	return		;funcret
 12148  004A8E                     __end_of_fullSpeedAhead:
 12149                           	callstack 0
 12150                           
 12151 ;; *************** function _setMotorPWM *****************
 12152 ;; Defined at:
 12153 ;;		line 60 in file "dc_motor.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  m               2   14[COMRAM] PTR struct DC_motor
 12156 ;;		 -> main@motorR(10), main@motorL(10), 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  PWMduty         2   23[COMRAM] int 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  1    wreg      void 
 12161 ;; Registers used:
 12162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12170 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12171 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;Total ram usage:       11 bytes
 12173 ;; Hardware stack levels used: 1
 12174 ;; Hardware stack levels required when called: 2
 12175 ;; This function calls:
 12176 ;;		___awdiv
 12177 ;;		___wmul
 12178 ;; This function is called by:
 12179 ;;		_stop
 12180 ;;		_turnLeft
 12181 ;;		_turnRight
 12182 ;;		_fullSpeedAhead
 12183 ;;		_fullSpeedBack
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           	psect	text65
 12188  0033FE                     __ptext65:
 12189                           	callstack 0
 12190  0033FE                     _setMotorPWM:
 12191                           	callstack 27
 12192  0033FE                     
 12193                           ;dc_motor.c: 60: void setMotorPWM(struct DC_motor *m);dc_motor.c: 61: {;dc_motor.c: 62: 
      +                           int PWMduty;;dc_motor.c: 64:  if (m->direction){
 12194  0033FE  EE20 F001          	lfsr	2,1
 12195  003402  500F               	movf	setMotorPWM@m^0,w,c
 12196  003404  26D9               	addwf	fsr2l,f,c
 12197  003406  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12198  003408  22DA               	addwfc	fsr2h,f,c
 12199  00340A  50DF               	movf	indf2,w,c
 12200  00340C  B4D8               	btfsc	status,2,c
 12201  00340E  EF0B  F01A         	goto	u2991
 12202  003412  EF0D  F01A         	goto	u2990
 12203  003416                     u2991:
 12204  003416  EF3E  F01A         	goto	l3584
 12205  00341A                     u2990:
 12206  00341A                     
 12207                           ;dc_motor.c: 66:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 12208  00341A  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 12209  00341E  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12210  003422  50DF               	movf	indf2,w,c
 12211  003424  6E11               	movwf	??_setMotorPWM^0,c
 12212  003426  5011               	movf	??_setMotorPWM^0,w,c
 12213  003428  6E01               	movwf	___wmul@multiplier^0,c
 12214  00342A  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12215  00342C  EE20 F007          	lfsr	2,7
 12216  003430  500F               	movf	setMotorPWM@m^0,w,c
 12217  003432  26D9               	addwf	fsr2l,f,c
 12218  003434  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12219  003436  22DA               	addwfc	fsr2h,f,c
 12220  003438  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12221  00343C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12222  003440  ECFE  F028         	call	___wmul	;wreg free
 12223  003444  C001  F007         	movff	?___wmul,___awdiv@dividend
 12224  003448  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12225  00344C  0E00               	movlw	0
 12226  00344E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12227  003450  0E64               	movlw	100
 12228  003452  6E09               	movwf	___awdiv@divisor^0,c
 12229  003454  ECDD  F023         	call	___awdiv	;wreg free
 12230  003458  EE20 F007          	lfsr	2,7
 12231  00345C  500F               	movf	setMotorPWM@m^0,w,c
 12232  00345E  26D9               	addwf	fsr2l,f,c
 12233  003460  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12234  003462  22DA               	addwfc	fsr2h,f,c
 12235  003464  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 12236  003468  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 12237  00346C  5007               	movf	?___awdiv^0,w,c
 12238  00346E  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 12239  003470  6E18               	movwf	setMotorPWM@PWMduty^0,c
 12240  003472  5008               	movf	(?___awdiv+1)^0,w,c
 12241  003474  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 12242  003476  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 12243                           
 12244                           ;dc_motor.c: 67:  }
 12245  003478  EF61  F01A         	goto	l3586
 12246  00347C                     l3584:
 12247                           
 12248                           ;dc_motor.c: 70:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 12249  00347C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 12250  003480  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12251  003484  50DF               	movf	indf2,w,c
 12252  003486  6E11               	movwf	??_setMotorPWM^0,c
 12253  003488  5011               	movf	??_setMotorPWM^0,w,c
 12254  00348A  6E01               	movwf	___wmul@multiplier^0,c
 12255  00348C  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12256  00348E  EE20 F007          	lfsr	2,7
 12257  003492  500F               	movf	setMotorPWM@m^0,w,c
 12258  003494  26D9               	addwf	fsr2l,f,c
 12259  003496  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12260  003498  22DA               	addwfc	fsr2h,f,c
 12261  00349A  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12262  00349E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12263  0034A2  ECFE  F028         	call	___wmul	;wreg free
 12264  0034A6  C001  F007         	movff	?___wmul,___awdiv@dividend
 12265  0034AA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12266  0034AE  0E00               	movlw	0
 12267  0034B0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12268  0034B2  0E64               	movlw	100
 12269  0034B4  6E09               	movwf	___awdiv@divisor^0,c
 12270  0034B6  ECDD  F023         	call	___awdiv	;wreg free
 12271  0034BA  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 12272  0034BE  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 12273  0034C2                     l3586:
 12274                           
 12275                           ;dc_motor.c: 73:  *(m->dutyHighByte) = PWMduty;
 12276  0034C2  EE20 F002          	lfsr	2,2
 12277  0034C6  500F               	movf	setMotorPWM@m^0,w,c
 12278  0034C8  26D9               	addwf	fsr2l,f,c
 12279  0034CA  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12280  0034CC  22DA               	addwfc	fsr2h,f,c
 12281  0034CE  CFDE F011          	movff	postinc2,??_setMotorPWM
 12282  0034D2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 12283  0034D6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 12284  0034DA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12285  0034DE  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 12286  0034E2                     
 12287                           ;dc_motor.c: 75:  if (m->direction){
 12288  0034E2  EE20 F001          	lfsr	2,1
 12289  0034E6  500F               	movf	setMotorPWM@m^0,w,c
 12290  0034E8  26D9               	addwf	fsr2l,f,c
 12291  0034EA  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12292  0034EC  22DA               	addwfc	fsr2h,f,c
 12293  0034EE  50DF               	movf	indf2,w,c
 12294  0034F0  B4D8               	btfsc	status,2,c
 12295  0034F2  EF7D  F01A         	goto	u3001
 12296  0034F6  EF7F  F01A         	goto	u3000
 12297  0034FA                     u3001:
 12298  0034FA  EFB4  F01A         	goto	l3592
 12299  0034FE                     u3000:
 12300  0034FE                     
 12301                           ;dc_motor.c: 76:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 12302  0034FE  EE20 F004          	lfsr	2,4
 12303  003502  500F               	movf	setMotorPWM@m^0,w,c
 12304  003504  26D9               	addwf	fsr2l,f,c
 12305  003506  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12306  003508  22DA               	addwfc	fsr2h,f,c
 12307  00350A  CFDE F011          	movff	postinc2,??_setMotorPWM
 12308  00350E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 12309  003512  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 12310  003516  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12311  00351A  EE10 F004          	lfsr	1,4
 12312  00351E  500F               	movf	setMotorPWM@m^0,w,c
 12313  003520  26E1               	addwf	fsr1l,f,c
 12314  003522  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12315  003524  22E2               	addwfc	fsr1h,f,c
 12316  003526  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 12317  00352A  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 12318  00352E  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 12319  003532  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 12320  003536  50E7               	movf	indf1,w,c
 12321  003538  6E15               	movwf	(??_setMotorPWM+4)^0,c
 12322  00353A  EE10 F006          	lfsr	1,6
 12323  00353E  500F               	movf	setMotorPWM@m^0,w,c
 12324  003540  26E1               	addwf	fsr1l,f,c
 12325  003542  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12326  003544  22E2               	addwfc	fsr1h,f,c
 12327  003546  50E7               	movf	indf1,w,c
 12328  003548  6E16               	movwf	(??_setMotorPWM+5)^0,c
 12329  00354A  0E01               	movlw	1
 12330  00354C  6E17               	movwf	(??_setMotorPWM+6)^0,c
 12331  00354E  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 12332  003550  EFAC  F01A         	goto	u3014
 12333  003554                     u3015:
 12334  003554  90D8               	bcf	status,0,c
 12335  003556  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 12336  003558                     u3014:
 12337  003558  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 12338  00355A  EFAA  F01A         	goto	u3015
 12339  00355E  5017               	movf	(??_setMotorPWM+6)^0,w,c
 12340  003560  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 12341  003562  6EDF               	movwf	indf2,c
 12342                           
 12343                           ;dc_motor.c: 77:  } else {
 12344  003564  EFE8  F01A         	goto	l303
 12345  003568                     l3592:
 12346                           
 12347                           ;dc_motor.c: 78:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 12348  003568  EE20 F004          	lfsr	2,4
 12349  00356C  500F               	movf	setMotorPWM@m^0,w,c
 12350  00356E  26D9               	addwf	fsr2l,f,c
 12351  003570  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12352  003572  22DA               	addwfc	fsr2h,f,c
 12353  003574  CFDE F011          	movff	postinc2,??_setMotorPWM
 12354  003578  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 12355  00357C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 12356  003580  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12357  003584  EE10 F004          	lfsr	1,4
 12358  003588  500F               	movf	setMotorPWM@m^0,w,c
 12359  00358A  26E1               	addwf	fsr1l,f,c
 12360  00358C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12361  00358E  22E2               	addwfc	fsr1h,f,c
 12362  003590  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 12363  003594  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 12364  003598  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 12365  00359C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 12366  0035A0  50E7               	movf	indf1,w,c
 12367  0035A2  6E15               	movwf	(??_setMotorPWM+4)^0,c
 12368  0035A4  EE10 F006          	lfsr	1,6
 12369  0035A8  500F               	movf	setMotorPWM@m^0,w,c
 12370  0035AA  26E1               	addwf	fsr1l,f,c
 12371  0035AC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12372  0035AE  22E2               	addwfc	fsr1h,f,c
 12373  0035B0  50E7               	movf	indf1,w,c
 12374  0035B2  6E16               	movwf	(??_setMotorPWM+5)^0,c
 12375  0035B4  0E01               	movlw	1
 12376  0035B6  6E17               	movwf	(??_setMotorPWM+6)^0,c
 12377  0035B8  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 12378  0035BA  EFE1  F01A         	goto	u3024
 12379  0035BE                     u3025:
 12380  0035BE  90D8               	bcf	status,0,c
 12381  0035C0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 12382  0035C2                     u3024:
 12383  0035C2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 12384  0035C4  EFDF  F01A         	goto	u3025
 12385  0035C8  5017               	movf	(??_setMotorPWM+6)^0,w,c
 12386  0035CA  0AFF               	xorlw	255
 12387  0035CC  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 12388  0035CE  6EDF               	movwf	indf2,c
 12389  0035D0                     l303:
 12390  0035D0  0012               	return		;funcret
 12391  0035D2                     __end_of_setMotorPWM:
 12392                           	callstack 0
 12393                           
 12394 ;; *************** function ___wmul *****************
 12395 ;; Defined at:
 12396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  multiplier      2    0[COMRAM] unsigned int 
 12399 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  product         2    4[COMRAM] unsigned int 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  2    0[COMRAM] unsigned int 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2, status,0, prodl, prodh
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12415 ;;Total ram usage:        6 bytes
 12416 ;; Hardware stack levels used: 1
 12417 ;; Hardware stack levels required when called: 1
 12418 ;; This function calls:
 12419 ;;		Nothing
 12420 ;; This function is called by:
 12421 ;;		_setMotorPWM
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           	psect	text66
 12426  0051FC                     __ptext66:
 12427                           	callstack 0
 12428  0051FC                     ___wmul:
 12429                           	callstack 27
 12430  0051FC  5001               	movf	___wmul@multiplier^0,w,c
 12431  0051FE  0203               	mulwf	___wmul@multiplicand^0,c
 12432  005200  CFF3 F005          	movff	prodl,___wmul@product
 12433  005204  CFF4 F006          	movff	prodh,___wmul@product+1
 12434  005208  5001               	movf	___wmul@multiplier^0,w,c
 12435  00520A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12436  00520C  50F3               	movf	243,w,c
 12437  00520E  2606               	addwf	(___wmul@product+1)^0,f,c
 12438  005210  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12439  005212  0203               	mulwf	___wmul@multiplicand^0,c
 12440  005214  50F3               	movf	243,w,c
 12441  005216  2606               	addwf	(___wmul@product+1)^0,f,c
 12442  005218  C005  F001         	movff	___wmul@product,?___wmul
 12443  00521C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12444  005220  0012               	return		;funcret
 12445  005222                     __end_of___wmul:
 12446                           	callstack 0
 12447                           
 12448 ;; *************** function ___awdiv *****************
 12449 ;; Defined at:
 12450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;  dividend        2    6[COMRAM] int 
 12453 ;;  divisor         2    8[COMRAM] int 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  quotient        2   12[COMRAM] int 
 12456 ;;  sign            1   11[COMRAM] unsigned char 
 12457 ;;  counter         1   10[COMRAM] unsigned char 
 12458 ;; Return value:  Size  Location     Type
 12459 ;;                  2    6[COMRAM] int 
 12460 ;; Registers used:
 12461 ;;		wreg, status,2, status,0
 12462 ;; Tracked objects:
 12463 ;;		On entry : 0/0
 12464 ;;		On exit  : 0/0
 12465 ;;		Unchanged: 0/0
 12466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12468 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12470 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12471 ;;Total ram usage:        8 bytes
 12472 ;; Hardware stack levels used: 1
 12473 ;; Hardware stack levels required when called: 1
 12474 ;; This function calls:
 12475 ;;		Nothing
 12476 ;; This function is called by:
 12477 ;;		_setMotorPWM
 12478 ;; This function uses a non-reentrant model
 12479 ;;
 12480                           
 12481                           	psect	text67
 12482  0047BA                     __ptext67:
 12483                           	callstack 0
 12484  0047BA                     ___awdiv:
 12485                           	callstack 27
 12486  0047BA  0E00               	movlw	0
 12487  0047BC  6E0C               	movwf	___awdiv@sign^0,c
 12488  0047BE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 12489  0047C0  EFE6  F023         	goto	u2860
 12490  0047C4  EFE4  F023         	goto	u2861
 12491  0047C8                     u2861:
 12492  0047C8  EFEC  F023         	goto	l3514
 12493  0047CC                     u2860:
 12494  0047CC  6C09               	negf	___awdiv@divisor^0,c
 12495  0047CE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 12496  0047D0  B0D8               	btfsc	status,0,c
 12497  0047D2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 12498  0047D4  0E01               	movlw	1
 12499  0047D6  6E0C               	movwf	___awdiv@sign^0,c
 12500  0047D8                     l3514:
 12501  0047D8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 12502  0047DA  EFF3  F023         	goto	u2870
 12503  0047DE  EFF1  F023         	goto	u2871
 12504  0047E2                     u2871:
 12505  0047E2  EFF9  F023         	goto	l3520
 12506  0047E6                     u2870:
 12507  0047E6  6C07               	negf	___awdiv@dividend^0,c
 12508  0047E8  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 12509  0047EA  B0D8               	btfsc	status,0,c
 12510  0047EC  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 12511  0047EE  0E01               	movlw	1
 12512  0047F0  1A0C               	xorwf	___awdiv@sign^0,f,c
 12513  0047F2                     l3520:
 12514  0047F2  0E00               	movlw	0
 12515  0047F4  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 12516  0047F6  0E00               	movlw	0
 12517  0047F8  6E0D               	movwf	___awdiv@quotient^0,c
 12518  0047FA  5009               	movf	___awdiv@divisor^0,w,c
 12519  0047FC  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 12520  0047FE  B4D8               	btfsc	status,2,c
 12521  004800  EF04  F024         	goto	u2881
 12522  004804  EF06  F024         	goto	u2880
 12523  004808                     u2881:
 12524  004808  EF2E  F024         	goto	l3542
 12525  00480C                     u2880:
 12526  00480C  0E01               	movlw	1
 12527  00480E  6E0B               	movwf	___awdiv@counter^0,c
 12528  004810  EF0E  F024         	goto	l3528
 12529  004814                     l3526:
 12530  004814  90D8               	bcf	status,0,c
 12531  004816  3609               	rlcf	___awdiv@divisor^0,f,c
 12532  004818  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 12533  00481A  2A0B               	incf	___awdiv@counter^0,f,c
 12534  00481C                     l3528:
 12535  00481C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 12536  00481E  EF13  F024         	goto	u2891
 12537  004822  EF15  F024         	goto	u2890
 12538  004826                     u2891:
 12539  004826  EF0A  F024         	goto	l3526
 12540  00482A                     u2890:
 12541  00482A                     l3530:
 12542  00482A  90D8               	bcf	status,0,c
 12543  00482C  360D               	rlcf	___awdiv@quotient^0,f,c
 12544  00482E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 12545  004830  5009               	movf	___awdiv@divisor^0,w,c
 12546  004832  5C07               	subwf	___awdiv@dividend^0,w,c
 12547  004834  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12548  004836  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 12549  004838  A0D8               	btfss	status,0,c
 12550  00483A  EF21  F024         	goto	u2901
 12551  00483E  EF23  F024         	goto	u2900
 12552  004842                     u2901:
 12553  004842  EF28  F024         	goto	l3538
 12554  004846                     u2900:
 12555  004846  5009               	movf	___awdiv@divisor^0,w,c
 12556  004848  5E07               	subwf	___awdiv@dividend^0,f,c
 12557  00484A  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12558  00484C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 12559  00484E  800D               	bsf	___awdiv@quotient^0,0,c
 12560  004850                     l3538:
 12561  004850  90D8               	bcf	status,0,c
 12562  004852  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 12563  004854  3209               	rrcf	___awdiv@divisor^0,f,c
 12564  004856  2E0B               	decfsz	___awdiv@counter^0,f,c
 12565  004858  EF15  F024         	goto	l3530
 12566  00485C                     l3542:
 12567  00485C  500C               	movf	___awdiv@sign^0,w,c
 12568  00485E  B4D8               	btfsc	status,2,c
 12569  004860  EF34  F024         	goto	u2911
 12570  004864  EF36  F024         	goto	u2910
 12571  004868                     u2911:
 12572  004868  EF3A  F024         	goto	l3546
 12573  00486C                     u2910:
 12574  00486C  6C0D               	negf	___awdiv@quotient^0,c
 12575  00486E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 12576  004870  B0D8               	btfsc	status,0,c
 12577  004872  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 12578  004874                     l3546:
 12579  004874  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 12580  004878  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 12581  00487C  0012               	return		;funcret
 12582  00487E                     __end_of___awdiv:
 12583                           	callstack 0
 12584                           
 12585 ;; *************** function _Timer0_init *****************
 12586 ;; Defined at:
 12587 ;;		line 7 in file "timers.c"
 12588 ;; Parameters:    Size  Location     Type
 12589 ;;		None
 12590 ;; Auto vars:     Size  Location     Type
 12591 ;;		None
 12592 ;; Return value:  Size  Location     Type
 12593 ;;                  1    wreg      void 
 12594 ;; Registers used:
 12595 ;;		wreg, status,2
 12596 ;; Tracked objects:
 12597 ;;		On entry : 0/0
 12598 ;;		On exit  : 0/0
 12599 ;;		Unchanged: 0/0
 12600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;Total ram usage:        0 bytes
 12606 ;; Hardware stack levels used: 1
 12607 ;; Hardware stack levels required when called: 1
 12608 ;; This function calls:
 12609 ;;		Nothing
 12610 ;; This function is called by:
 12611 ;;		_main
 12612 ;; This function uses a non-reentrant model
 12613 ;;
 12614                           
 12615                           	psect	text68
 12616  0052E0                     __ptext68:
 12617                           	callstack 0
 12618  0052E0                     _Timer0_init:
 12619                           	callstack 29
 12620  0052E0                     
 12621                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 12622  0052E0  50D6               	movf	214,w,c	;volatile
 12623  0052E2  0B1F               	andlw	-225
 12624  0052E4  0940               	iorlw	64
 12625  0052E6  6ED6               	movwf	214,c	;volatile
 12626  0052E8                     
 12627                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 12628  0052E8  88D6               	bsf	214,4,c	;volatile
 12629                           
 12630                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 12631  0052EA  50D6               	movf	214,w,c	;volatile
 12632  0052EC  0BF0               	andlw	-16
 12633  0052EE  0908               	iorlw	8
 12634  0052F0  6ED6               	movwf	214,c	;volatile
 12635  0052F2                     
 12636                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 12637  0052F2  88D5               	bsf	213,4,c	;volatile
 12638                           
 12639                           ;timers.c: 16:     TMR0H=0b00001011;
 12640  0052F4  0E0B               	movlw	11
 12641  0052F6  6ED4               	movwf	212,c	;volatile
 12642                           
 12643                           ;timers.c: 17:     TMR0L=0b11011011;
 12644  0052F8  0EDB               	movlw	219
 12645  0052FA  6ED3               	movwf	211,c	;volatile
 12646  0052FC  0012               	return		;funcret
 12647  0052FE                     __end_of_Timer0_init:
 12648                           	callstack 0
 12649                           
 12650 ;; *************** function _Interrupts_init *****************
 12651 ;; Defined at:
 12652 ;;		line 9 in file "interrupts.c"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;		None
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;		None
 12657 ;; Return value:  Size  Location     Type
 12658 ;;                  1    wreg      void 
 12659 ;; Registers used:
 12660 ;;		None
 12661 ;; Tracked objects:
 12662 ;;		On entry : 0/0
 12663 ;;		On exit  : 0/0
 12664 ;;		Unchanged: 0/0
 12665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12670 ;;Total ram usage:        0 bytes
 12671 ;; Hardware stack levels used: 1
 12672 ;; Hardware stack levels required when called: 1
 12673 ;; This function calls:
 12674 ;;		Nothing
 12675 ;; This function is called by:
 12676 ;;		_main
 12677 ;; This function uses a non-reentrant model
 12678 ;;
 12679                           
 12680                           	psect	text69
 12681  00533E                     __ptext69:
 12682                           	callstack 0
 12683  00533E                     _Interrupts_init:
 12684                           	callstack 29
 12685  00533E  8EF2               	bsf	242,7,c	;volatile
 12686                           
 12687                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 12688  005340  8AF2               	bsf	242,5,c	;volatile
 12689                           
 12690                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 12691  005342  8CF2               	bsf	242,6,c	;volatile
 12692                           
 12693                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 12694  005344  010E               	movlb	14	; () banked
 12695  005346  8B29               	bsf	41,5,b	;volatile
 12696  005348                     
 12697                           ; BSR set to: 14
 12698  005348  0012               	return		;funcret
 12699  00534A                     __end_of_Interrupts_init:
 12700                           	callstack 0
 12701                           
 12702 ;; *************** function _HighISR *****************
 12703 ;; Defined at:
 12704 ;;		line 20 in file "interrupts.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;		None
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;		None
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  1    wreg      void 
 12711 ;; Registers used:
 12712 ;;		status,2, status,0
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12722 ;;Total ram usage:        0 bytes
 12723 ;; Hardware stack levels used: 1
 12724 ;; This function calls:
 12725 ;;		Nothing
 12726 ;; This function is called by:
 12727 ;;		Interrupt level 2
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           	psect	intcode
 12732  000008                     __pintcode:
 12733                           	callstack 0
 12734  000008                     _HighISR:
 12735                           	callstack 20
 12736                           
 12737                           ; BSR set to: 14
 12738                           ;incstack = 0
 12739  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12740  00000A                     
 12741                           ;interrupts.c: 22:     if(PIR0bits.TMR0IF){
 12742  00000A  010E               	movlb	14	; () banked
 12743  00000C  AB33               	btfss	51,5,b	;volatile
 12744  00000E  EF0B  F000         	goto	i2u531_41
 12745  000012  EF0D  F000         	goto	i2u531_40
 12746  000016                     i2u531_41:
 12747  000016  EF12  F000         	goto	i2l677
 12748  00001A                     i2u531_40:
 12749  00001A                     
 12750                           ; BSR set to: 14
 12751                           ;interrupts.c: 23:         second ++;
 12752  00001A  0100               	movlb	0	; () banked
 12753  00001C  4BF4               	infsnz	_second& (0+255),f,b
 12754  00001E  2BF5               	incf	(_second+1)& (0+255),f,b
 12755  000020                     
 12756                           ; BSR set to: 0
 12757                           ;interrupts.c: 24:         PIR0bits.TMR0IF = 0;
 12758  000020  010E               	movlb	14	; () banked
 12759  000022  9B33               	bcf	51,5,b	;volatile
 12760  000024                     i2l677:
 12761                           
 12762                           ; BSR set to: 14
 12763  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12764  000026  0011               	retfie		f
 12765  000028                     __end_of_HighISR:
 12766                           	callstack 0
 12767                           
 12768                           	psect	rparam
 12769  0000                     
 12770                           	psect	temp
 12771  00005F                     btemp:
 12772                           	callstack 0
 12773  00005F                     	ds	1
 12774  0000                     int$flags	set	btemp
 12775  0000                     wtemp8	set	btemp+1
 12776  0000                     ttemp5	set	btemp+1
 12777  0000                     ttemp6	set	btemp+4
 12778  0000                     ttemp7	set	btemp+8
 12779                           
 12780                           	psect	idloc
 12781                           
 12782                           ;Config register IDLOC0 @ 0x200000
 12783                           ;	unspecified, using default values
 12784  200000                     	org	2097152
 12785  200000  0FFF               	dw	4095
 12786                           
 12787                           ;Config register IDLOC1 @ 0x200002
 12788                           ;	unspecified, using default values
 12789  200002                     	org	2097154
 12790  200002  0FFF               	dw	4095
 12791                           
 12792                           ;Config register IDLOC2 @ 0x200004
 12793                           ;	unspecified, using default values
 12794  200004                     	org	2097156
 12795  200004  0FFF               	dw	4095
 12796                           
 12797                           ;Config register IDLOC3 @ 0x200006
 12798                           ;	unspecified, using default values
 12799  200006                     	org	2097158
 12800  200006  0FFF               	dw	4095
 12801                           
 12802                           ;Config register IDLOC4 @ 0x200008
 12803                           ;	unspecified, using default values
 12804  200008                     	org	2097160
 12805  200008  0FFF               	dw	4095
 12806                           
 12807                           ;Config register IDLOC5 @ 0x20000A
 12808                           ;	unspecified, using default values
 12809  20000A                     	org	2097162
 12810  20000A  0FFF               	dw	4095
 12811                           
 12812                           ;Config register IDLOC6 @ 0x20000C
 12813                           ;	unspecified, using default values
 12814  20000C                     	org	2097164
 12815  20000C  0FFF               	dw	4095
 12816                           
 12817                           ;Config register IDLOC7 @ 0x20000E
 12818                           ;	unspecified, using default values
 12819  20000E                     	org	2097166
 12820  20000E  0FFF               	dw	4095
 12821                           
 12822                           	psect	config
 12823                           
 12824                           ;Config register CONFIG1L @ 0x300000
 12825                           ;	External Oscillator mode Selection bits
 12826                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12827                           ;	Power-up default value for COSC bits
 12828                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12829  300000                     	org	3145728
 12830  300000  AA                 	db	170
 12831                           
 12832                           ;Config register CONFIG1H @ 0x300001
 12833                           ;	unspecified, using default values
 12834                           ;	Clock Out Enable bit
 12835                           ;	CLKOUTEN = 0x1, unprogrammed default
 12836                           ;	Clock Switch Enable bit
 12837                           ;	CSWEN = 0x1, unprogrammed default
 12838                           ;	Fail-Safe Clock Monitor Enable bit
 12839                           ;	FCMEN = 0x1, unprogrammed default
 12840  300001                     	org	3145729
 12841  300001  FF                 	db	255
 12842                           
 12843                           ;Config register CONFIG2L @ 0x300002
 12844                           ;	unspecified, using default values
 12845                           ;	Master Clear Enable bit
 12846                           ;	MCLRE = 0x1, unprogrammed default
 12847                           ;	Power-up Timer Enable bit
 12848                           ;	PWRTE = 0x1, unprogrammed default
 12849                           ;	Low-power BOR enable bit
 12850                           ;	LPBOREN = 0x1, unprogrammed default
 12851                           ;	Brown-out Reset Enable bits
 12852                           ;	BOREN = 0x3, unprogrammed default
 12853  300002                     	org	3145730
 12854  300002  FF                 	db	255
 12855                           
 12856                           ;Config register CONFIG2H @ 0x300003
 12857                           ;	unspecified, using default values
 12858                           ;	Brown Out Reset Voltage selection bits
 12859                           ;	BORV = 0x3, unprogrammed default
 12860                           ;	ZCD Disable bit
 12861                           ;	ZCD = 0x1, unprogrammed default
 12862                           ;	PPSLOCK bit One-Way Set Enable bit
 12863                           ;	PPS1WAY = 0x1, unprogrammed default
 12864                           ;	Stack Full/Underflow Reset Enable bit
 12865                           ;	STVREN = 0x1, unprogrammed default
 12866                           ;	Debugger Enable bit
 12867                           ;	DEBUG = 0x1, unprogrammed default
 12868                           ;	Extended Instruction Set Enable bit
 12869                           ;	XINST = 0x1, unprogrammed default
 12870  300003                     	org	3145731
 12871  300003  FF                 	db	255
 12872                           
 12873                           ;Config register CONFIG3L @ 0x300004
 12874                           ;	WDT Period Select bits
 12875                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12876                           ;	WDT operating mode
 12877                           ;	WDTE = OFF, WDT Disabled
 12878  300004                     	org	3145732
 12879  300004  9F                 	db	159
 12880                           
 12881                           ;Config register CONFIG3H @ 0x300005
 12882                           ;	unspecified, using default values
 12883                           ;	WDT Window Select bits
 12884                           ;	WDTCWS = 0x7, unprogrammed default
 12885                           ;	WDT input clock selector
 12886                           ;	WDTCCS = 0x7, unprogrammed default
 12887  300005                     	org	3145733
 12888  300005  FF                 	db	255
 12889                           
 12890                           ;Config register CONFIG4L @ 0x300006
 12891                           ;	unspecified, using default values
 12892                           ;	Write Protection Block 0
 12893                           ;	WRT0 = 0x1, unprogrammed default
 12894                           ;	Write Protection Block 1
 12895                           ;	WRT1 = 0x1, unprogrammed default
 12896                           ;	Write Protection Block 2
 12897                           ;	WRT2 = 0x1, unprogrammed default
 12898                           ;	Write Protection Block 3
 12899                           ;	WRT3 = 0x1, unprogrammed default
 12900                           ;	Write Protection Block 3
 12901                           ;	WRT4 = 0x1, unprogrammed default
 12902                           ;	Write Protection Block 3
 12903                           ;	WRT5 = 0x1, unprogrammed default
 12904                           ;	Write Protection Block 3
 12905                           ;	WRT6 = 0x1, unprogrammed default
 12906                           ;	Write Protection Block 3
 12907                           ;	WRT7 = 0x1, unprogrammed default
 12908  300006                     	org	3145734
 12909  300006  FF                 	db	255
 12910                           
 12911                           ;Config register CONFIG4H @ 0x300007
 12912                           ;	unspecified, using default values
 12913                           ;	Configuration Register Write Protection bit
 12914                           ;	WRTC = 0x1, unprogrammed default
 12915                           ;	Boot Block Write Protection bit
 12916                           ;	WRTB = 0x1, unprogrammed default
 12917                           ;	Data EEPROM Write Protection bit
 12918                           ;	WRTD = 0x1, unprogrammed default
 12919                           ;	Scanner Enable bit
 12920                           ;	SCANE = 0x1, unprogrammed default
 12921                           ;	Low Voltage Programming Enable bit
 12922                           ;	LVP = 0x1, unprogrammed default
 12923  300007                     	org	3145735
 12924  300007  FF                 	db	255
 12925                           
 12926                           ;Config register CONFIG5L @ 0x300008
 12927                           ;	unspecified, using default values
 12928                           ;	UserNVM Program Memory Code Protection bit
 12929                           ;	CP = 0x1, unprogrammed default
 12930                           ;	DataNVM Memory Code Protection bit
 12931                           ;	CPD = 0x1, unprogrammed default
 12932  300008                     	org	3145736
 12933  300008  FF                 	db	255
 12934                           
 12935                           ;Config register CONFIG5H @ 0x300009
 12936                           ;	unspecified, using default values
 12937  300009                     	org	3145737
 12938  300009  FF                 	db	255
 12939                           
 12940                           ;Config register CONFIG6L @ 0x30000A
 12941                           ;	unspecified, using default values
 12942                           ;	Table Read Protection Block 0
 12943                           ;	EBTR0 = 0x1, unprogrammed default
 12944                           ;	Table Read Protection Block 1
 12945                           ;	EBTR1 = 0x1, unprogrammed default
 12946                           ;	Table Read Protection Block 2
 12947                           ;	EBTR2 = 0x1, unprogrammed default
 12948                           ;	Table Read Protection Block 3
 12949                           ;	EBTR3 = 0x1, unprogrammed default
 12950                           ;	Table Read Protection Block 4
 12951                           ;	EBTR4 = 0x1, unprogrammed default
 12952                           ;	Table Read Protection Block 5
 12953                           ;	EBTR5 = 0x1, unprogrammed default
 12954                           ;	Table Read Protection Block 6
 12955                           ;	EBTR6 = 0x1, unprogrammed default
 12956                           ;	Table Read Protection Block 7
 12957                           ;	EBTR7 = 0x1, unprogrammed default
 12958  30000A                     	org	3145738
 12959  30000A  FF                 	db	255
 12960                           
 12961                           ;Config register CONFIG6H @ 0x30000B
 12962                           ;	unspecified, using default values
 12963                           ;	Boot Block Table Read Protection bit
 12964                           ;	EBTRB = 0x1, unprogrammed default
 12965  30000B                     	org	3145739
 12966  30000B  FF                 	db	255
 12967                           tosu	equ	0xFFF
 12968                           tosh	equ	0xFFE
 12969                           tosl	equ	0xFFD
 12970                           stkptr	equ	0xFFC
 12971                           pclatu	equ	0xFFB
 12972                           pclath	equ	0xFFA
 12973                           pcl	equ	0xFF9
 12974                           tblptru	equ	0xFF8
 12975                           tblptrh	equ	0xFF7
 12976                           tblptrl	equ	0xFF6
 12977                           tablat	equ	0xFF5
 12978                           prodh	equ	0xFF4
 12979                           prodl	equ	0xFF3
 12980                           indf0	equ	0xFEF
 12981                           postinc0	equ	0xFEE
 12982                           postdec0	equ	0xFED
 12983                           preinc0	equ	0xFEC
 12984                           plusw0	equ	0xFEB
 12985                           fsr0h	equ	0xFEA
 12986                           fsr0l	equ	0xFE9
 12987                           wreg	equ	0xFE8
 12988                           indf1	equ	0xFE7
 12989                           postinc1	equ	0xFE6
 12990                           postdec1	equ	0xFE5
 12991                           preinc1	equ	0xFE4
 12992                           plusw1	equ	0xFE3
 12993                           fsr1h	equ	0xFE2
 12994                           fsr1l	equ	0xFE1
 12995                           bsr	equ	0xFE0
 12996                           indf2	equ	0xFDF
 12997                           postinc2	equ	0xFDE
 12998                           postdec2	equ	0xFDD
 12999                           preinc2	equ	0xFDC
 13000                           plusw2	equ	0xFDB
 13001                           fsr2h	equ	0xFDA
 13002                           fsr2l	equ	0xFD9
 13003                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        2
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    136     157
    BANK1           256     48     225
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2427$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2427$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S225DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S225DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 20
		 -> main@white(BANK1[20]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 20
		 -> main@white(BANK1[20]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 20
		 -> main@white(BANK1[20]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _short_burst->_stop
    _distance_measure->_color_read_Clear
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _verify_color->_detect_color
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0  175374
                                            134 BANK0      2     2      0
                                              0 BANK1     48    48      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                              _LED_C
                        _Timer0_init
                             _action
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                      _color_display
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _read_color
                        _short_burst
                               _stop
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                         9     5      4   26066
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   25812
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12792
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11477
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2392
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1758
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2683
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    6942
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _distance_measure                                    13     9      4     316
                                             11 COMRAM    13     9      4
                              _LED_C
                   _color_read_Clear
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16670
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1224
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      102   102      0    7357
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7649
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     748
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _action                                               7     3      4   81777
                                             53 COMRAM     7     3      4
                     _fullSpeedAhead
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11021
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   35159
                                             45 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     9      5    8176
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     9      5    8860
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   10717
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6290
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3731
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_C
   _Timer0_init
   _action
     _fullSpeedAhead
       _setMotorPWM
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _goback
       _fullSpeedAhead
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _color_display
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _distance_measure
     _LED_C
     _color_read_Clear
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _read_color
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      60        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     30      E1       7       87.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      9D       5       98.1%
BITBIGSFRllhh       8F      0       0      43        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllllh     32      0       0      48        0.0%
BITBIGSFRlllllh     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      58        0.0%
BITBIGSFRllllhh     20      0       0      46        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhlh      17      0       0      35        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRhhhlll     11      0       0      37        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRllllhl      C      0       0      47        0.0%
BITBIGSFRlllllh      B      0       0      56        0.0%
BITBIGSFRllhlll      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      57        0.0%
BITBIGSFRlllllh      6      0       0      51        0.0%
BITBIGSFRhhhlll      6      0       0      38        0.0%
BITBIGSFRlllllh      5      0       0      54        0.0%
BITBIGSFRlllllh      5      0       0      50        0.0%
BITBIGSFRlllllh      3      0       0      53        0.0%
BITBIGSFRlllllh      3      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      49        0.0%
BITBIGSFRhlh         1      0       0      39        0.0%
BITBIGSFRhhhllh      1      0       0      36        0.0%
BITBIGSFRlhh         1      0       0      41        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BITBIGSFRlhl         1      0       0      42        0.0%
BITBIGSFRhll         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1DC      59        0.0%
DATA                 0      0     1DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 10 23:30:31 2022

                ?_short_reverse 0026                  _color_read_Red 4CC6                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 4DB6  
                 _color_predict 447A                              l51 5178                              l60 4E04  
                            l54 5260                              l63 4D64                              l72 5280  
                            l81 52A0                              l57 4D14                              l66 4DB4  
                            l75 5240                              l92 3786                              l69 4C1A  
                            l78 52C0                              l95 4AFC                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 4D66                _color_read_Green 4D16  
             ??_Interrupts_init 0001                             l111 4556                             l200 51D4  
                           l114 3F1C                             l203 51FA                             l212 5352  
                           l206 535C                             l303 35D0                             l311 49F8  
                           l215 533C                             l209 5366                             l153 1B1A  
                           l161 4BBC                             l322 414A                             l218 4F9E  
                           l170 4E4E                             l410 52DE                             l332 3FE4  
                           l156 50D4                             l325 4174                             l157 50D6  
                           l149 1B18                             l318 4110                             l422 5330  
                           l336 401E                             l361 4FE0                             l169 4E4C  
                           l347 4A8C                             l339 4048                             l419 531C  
                           l364 5022                             l428 51A8                             l197 51D2  
                           l293 4F5C                             l358 493C                             l606 4C72  
                           l296 4628                             l624 5318                             l641 33FC  
                           l618 2E72                             l652 52FC                             l671 5348  
                           l911 487C                             l807 3DDA                             l680 5220  
                           l950 4380                             l945 433A                             l794 3C76  
                           l954 510E                             l977 427C               verify_color@color 009A  
              ?_calibrate_white 000C        __end_of_distance_measure 4E50                             _abs 5024  
                           _pad 46F4                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                    ___fltol@exp1 0065  
                          l1210 1CBE                            ?_abs 0013                            l1301 2296  
                          l1311 23C6                            l1303 230E                            l1304 22FC  
                          l1208 1D0A                            l1401 2F14                            l1225 1E24  
                          l1217 1FDA                            l1209 1CF8                            l1234 1EF4  
                          l1250 4E94                            l1403 2F1C                            l1235 1EE2  
                          l1421 3156                            l1262 2B4C                            l1342 3876  
                          l1335 37DE                            l1264 29AC                            l4000 22B4  
                          l1273 29F2                            l1442 5062                            l1434 4B56  
                          l1338 393A                            l4010 231E                            l4002 22B8  
                          l1435 4B5E                            l1363 4CC4                            l1275 2A6A  
                          l1267 2970                            l4100 3A92                            l1428 3AEE  
                          l1276 2A58                            l4020 2380                            l4012 232A  
                          l4004 22C6                            l1356 509C                            l1349 38D2  
                          l1454 46F2                            l1462 4ED8                            l1390 473A  
                          l4110 3AB8                            l4030 23E8                            l4022 2394  
                          l4014 2338                            l4006 22F4                            l1294 20A0  
                          l1439 505A                            l4120 4D0C                            l4112 3ADC  
                          l4104 3A9E                            l5000 4F44                            l4200 424C  
                          l4032 23EA                            l4024 23AE                            l4016 2362  
                          l4040 4E50                            l1465 536A                            l1393 477C  
                          l1473 27B2                            l4130 4D16                            l3402 4E96  
                          l3410 5110                            l4106 3AAC                            l5002 4F58  
                          l5010 4574                            l4202 425C                            l4050 42BC  
                          l4026 23CA                            l4034 23F0                            l4018 2366  
                          l1298 2404                            l4042 4E60                            l4210 2426  
                          l1395 47B8                            l3420 51FC                            l4300 3F42  
                          l5100 2D0E                            l4124 4DB6                            l4132 4D5C  
                          l3500 3D9A                            l3404 4EA2                            l3412 511C  
                          l5004 4F5A                            l5012 4588                            l4204 426C  
                          l4060 4328                            l4052 42EA                            l4036 23F4  
                          l4028 23DA                            l4220 24FE                            l4212 246E  
                          l3510 47CC                            l3422 5218                            l4150 48D2  
                          l4142 487E                            l4310 3F98                            l4302 3F5A  
                          l5110 2D82                            l5102 2D28                            l4126 4DFC  
                          l4118 4CC6                            l3430 3B02                            l3502 3DBA  
                          l3406 4EB4                            l1486 5144                            l3414 5120  
                          l5014 459C                            l5006 4558                            l5030 52CE  
                          l4062 4378                            l4054 42FA                            l4046 427E  
                          l4070 50EE                            l4230 26A2                            l4214 2482  
                          l3520 47F2                            l3512 47D4                            l4144 48A2  
                          l4152 48E0                            l4320 3FE0                            l4312 3FA6  
                          l4304 3F66                            l5120 2DDE                            l5112 2D84  
                          l5104 2D2A                            l4136 4D66                            l4160 531C  
                          l3440 3B58                            l3432 3B22                            l3408 4EB8  
                          l3416 5138                            l4080 396E                            l5016 45AC  
                          l5008 4564                            l5032 52D8                            l4400 281A  
                          l4064 437E                            l4056 4308                            l4048 42AC  
                          l4072 50FE                            l3600 1B38                            l4232 270E  
                          l4224 2536                            l4216 24BE                            l4208 2406  
                          l5042 533E                            l3530 482A                            l3522 47FA  
                          l3514 47D8                            l3506 47BA                            l4154 48F8  
                          l4146 48BA                            l4330 404A                            l4322 3FFE  
                          l4314 3FB2                            l4306 3F72                            l5130 2E4A  
                          l5122 2DF0                            l5114 2D96                            l5106 2D3C  
                          l4138 4DAC                            l4162 532C                            l3450 3BAC  
                          l3442 3B64                            l3434 3B26                            l3426 3AF0  
                          l4090 3A14                            l4082 3980                            l4242 4AFE  
                          l4250 4BBE                            l5018 45C0                            l5034 52DA  
                          l5026 52C2                            l5050 52FE                            l4410 2846  
                          l4402 2820                            l4170 41A2                            l4058 431A  
                          l3602 1B48                            l3610 1B72                            l4234 2742  
                          l4226 2604                            l4218 24E2                            l5210 438A  
                          l5044 52E0                            l3540 4856                            l3532 4830  
                          l3524 480C                            l3516 47E6                            l3508 47BE  
                          l4156 4910                            l4148 48C6                            l4332 406E  
                          l4340 40AC                            l4324 400A                            l4316 3FC4  
                          l4308 3F80                            l5124 2E1C                            l5116 2DC2  
                          l5108 2D68                            l5060 2B5A                            l4260 5282  
                          l4252 5262                            l3460 3C20                            l3452 3BBE  
                          l3444 3B82                            l3436 3B34                            l3428 3AF4  
                          l4084 3984                            l4076 393C                            l4244 4B06  
                          l5036 52DC                            l5028 52CC                            l5052 4C1C  
                          l4500 2AF2                            l4420 2880                            l4412 2856  
                          l4404 2826                            l4180 41F0                            l4172 41CC  
                          l4164 4176                            l4068 50D8                            l3700 1D3C  
                          l3620 1BA2                            l3612 1B82                            l3604 1B58  
                          l4236 277E                            l4228 2670                            l5220 43B6  
                          l5212 438E                            l5046 52E8                            l3534 4846  
                          l3526 4814                            l3542 485C                            l3518 47EE  
                          l4158 4928                            l4350 40FC                            l4342 40C4  
                          l4334 4086                            l4326 401A                            l4318 3FD0  
                          l5126 2E36                            l5118 2DDC                            l5070 2BB0  
                          l5062 2B6E                            l4262 5288                            l4254 5268  
                          l3454 3BEC                            l3446 3B8A                            l3462 3C26  
                          l3438 3B54                            l3470 3C78                            l3390 463C  
                          l3550 46F4                            l4094 3A4C                            l4086 39A8  
                          l4078 3960                            l4246 4B14                            l4270 4C96  
                          l5054 4C30                            l4510 2B40                            l4502 2B0C  
                          l4422 2896                            l4414 2866                            l4406 2834  
                          l4190 421C                            l4174 41CE                            l4166 418E  
                          l3710 1D78                            l3702 1D4C                            l3630 1BE2  
                          l3622 1BB0                            l3614 1B88                            l3606 1B68  
                          l4238 27A2                            l5230 43F6                            l5222 43BA  
                          l5214 4392                            l5206 4382                            l5048 52F2  
                          l3544 486C                            l3536 484E                            l3528 481C  
                          l4360 4160                            l4352 410C                            l4344 40D2  
                          l4336 4092                            l4328 4034                            l5128 2E38  
                          l5080 2C1C                            l5072 2BC4                            l5064 2B7E  
                          l4256 52A2                            l4280 518C                            l3464 3C36  
                          l3456 3C0C                            l3448 3B9E                            l3480 3CBC  
                          l3472 3C7C                            l3392 464E                            l3560 4746  
                          l3552 4704                            l3800 2EBC                            l4096 3A70  
                          l4088 39CC                            l4248 4B3A                            l4272 4CB2  
                          l4264 4C74                            l4600 44B2                            l5056 4C46  
                          l4512 2B42                            l4504 2B28                            l4440 28EA  
                          l4424 28A6                            l4432 28C6                            l4416 2868  
                          l4408 2836                            l4520 378A                            l4176 41DE  
                          l3720 1DBE                            l3712 1D86                            l3704 1D5A  
                          l3640 1C1C                            l3632 1BE4                            l3624 1BB2  
                          l3616 1B9A                            l3608 1B6A                            l5224 43D2  
                          l5216 439E                            l5208 4386                            l3546 4874  
                          l3538 4850                            l4370 4A4E                            l4362 49FA  
                          l4354 412A                            l4346 40DE                            l4338 409E  
                          l5090 2C88                            l5082 2C2E                            l5074 2BD4  
                          l5066 2B88                            l5058 2B50                            l4258 52A8  
                          l4282 5190                            l3466 3C56                            l3458 3C0E  
                          l3490 3D24                            l3482 3CDC                            l3474 3C8A  
                          l3394 4658                            l3562 475A                            l3554 4718  
                          l3810 2F24                            l3802 2EDC                            l4098 3A7E  
                          l4266 4C86                            l4610 44E8                            l4602 44C4  
                          l4506 2B2C                            l4450 293C                            l4442 2904  
                          l4434 28D6                            l4426 28AE                            l4418 2870  
                          l4522 379A                            l4290 50A4                            l4186 4208  
                          l4178 41E2                            l3730 1E3A                            l3722 1DF2  
                          l3714 1D88                            l3706 1D68                            l3650 1C30  
                          l3642 1C20                            l3626 1BC2                            l3634 1BEC  
                          l3618 1B9C                            l5250 440E                            l5226 43DE  
                          l5218 43A2                            l3580 33FE                            l4364 4A1E  
                          l4372 4A5C                            l3900 4996                            l4380 500E  
                          l4356 4136                            l4348 40F0                            l5092 2CB4  
                          l5084 2C5A                            l5076 2C00                            l5068 2BAE  
                          l4276 517A                            l3492 3D52                            l3484 3CFA  
                          l3476 3CAA                            l3572 5024                            l3396 4676  
                          l3388 462A                            l3564 475E                            l3556 4726  
                          l3820 2F5C                            l3812 2F36                            l3804 2EEC  
                          l4268 4C8E                            l4620 450C                            l4612 44E8  
                          l4604 44C4                            l4508 2B3A                            l4460 2998  
                          l4452 294C                            l4444 2914                            l4436 28D6  
                          l4428 28B2                            l4540 3860                            l4532 3818  
                          l4524 37A8                            l4292 50BA                            l4196 4230  
                          l4188 4212                            l3740 1E76                            l3732 1E4A  
                          l3724 1DF4                            l3716 1D92                            l3708 1D74  
                          l3660 1C44                            l3652 1C34                            l3644 1C24  
                          l3636 1BFC                            l3628 1BD2                            l4284 5064  
                          l4700 179C                            l5252 4428                            l5228 43F6  
                          l3590 34FE                            l3582 341A                            l4374 4A74  
                          l4366 4A36                            l3902 49A2                            l4358 4146  
                          l5094 2CCE                            l5086 2C74                            l5078 2C1A  
                          l4278 517E                            l3494 3D72                            l3486 3D02  
                          l3478 3CAE                            l3574 503E                            l3398 46AC  
                          l3566 478C                            l3558 4732                            l3822 2F62  
                          l3830 3054                            l3814 2F44                            l3806 2EEE  
                          l4630 454A                            l4622 451E                            l4614 44FA  
                          l4606 44D6                            l4470 29D8                            l4462 299A  
                          l4454 2960                            l4446 2924                            l4390 27E0  
                          l4382 27B4                            l4550 38E0                            l4542 386C  
                          l4534 3820                            l4526 37EE                            l4294 50D0  
                          l4198 423C                            l3910 1FDC                            l3750 1EA2  
                          l3742 1E78                            l3726 1E04                            l3718 1D98  
                          l3670 1C58                            l3662 1C48                            l3654 1C38  
                          l3646 1C28                            l3638 1C0E                            l4710 18B4  
                          l4702 17CA                            l5254 443A                            ?_pad 0011  
                          l3592 3568                            l3584 347C                            l4368 4A42  
                          l3904 49B0                            l4376 4FE2                            l4800 3202  
                          l5096 2CD0                            l5088 2C76                            l3576 51D4  
                          l3496 3D84                            l3488 3D16                            l3568 47A0  
                          l3832 306E                            l3840 30D0                            l3824 2FE4  
                          l3816 2F4A                            l3808 2F08                            l4624 451E  
                          l4616 44FA                            l4608 44D6                            l4480 2A14  
                          l4472 29E2                            l4464 29AA                            l4456 296E  
                          l4448 2934                            l4392 27F0                            l4384 27C0  
                          l4560 3928                            l4552 38E2                            l4544 38A8  
                          l4536 382C                            l4528 3804                            l4288 509E  
                          l3920 2018                            l3912 1FE8                            l3760 1EDA  
                          l3744 1E86                            l3736 1E5E                            l3752 1EA4  
                          l3728 1E14                            l3680 1CB6                            l3664 1C4C  
                          l3656 1C3C                            l3648 1C2C                            l3672 1C5C  
                          l4720 190C                            l4704 188A                            l4712 18BE  
                          l4640 0F4E                            l4632 0E54                            l5256 4454  
                          l5248 43FA                            l3586 34C2                            l3906 49C8  
                          l4378 4FF6                            l4298 3F1E                            l4810 3266  
                          l4802 3204                            l5098 2CE2                            l3578 51E4  
                          l4570 51BA                            l3498 3D8A                            l3850 3116  
                          l3842 30E2                            l3834 308C                            l3826 2FEA  
                          l3818 2F52                            l4626 4530                            l4618 450C  
                          l4490 2A86                            l4482 2A22                            l4474 29F0  
                          l4466 29BC                            l4458 297A                            l4394 2800  
                          l4386 27CE                            l4562 392A                            l4554 38E6  
                          l4546 38B4                            l4538 385E                            l3930 204A  
                          l3922 2028                            l3914 1FF6                            l3770 1F58  
                          l3746 1E8E                            l3738 1E68                            l3754 1EB2  
                          l3690 1CEC                            l3682 1CCC                            l3674 1C60  
                          l3666 1C50                            l3658 1C40                            l3594 1B1C  
                          l4722 1924                            l4714 18EC                            l4706 18A2  
                          l4730 195E                            l4650 10EA                            l4642 0F6A  
                          l4634 0EA2                            l5258 446C                            l3588 34E2  
                          l3908 49E0                            l4820 32C2                            l4812 327E  
                          l4804 3226                            l3860 5358                            l4572 51BC  
                          l4580 5222                            l3852 311E                            l3844 30F2  
                          l3836 30A6                            l3828 2FF0                            l4628 4530  
                          l4492 2A94                            l4484 2A50                            l4468 29D2  
                          l4476 2A02                            l4396 2802                            l4388 27D0  
                          l4556 390A                            l4548 38C2                            l3940 208A  
                          l3932 2058                            l3924 202E                            l3916 1FF8  
                          l3780 1F9E                            l3764 1F04                            l3772 1F5A  
                          l3756 1EB6                            l3748 1E92                            l3692 1CF6  
                          l3684 1CD8                            l3676 1C8A                            l3668 1C54  
                          l3596 1B28                            l4740 1A1A                            l4732 198A  
                          l4724 192C                            l4716 1904                            l4708 18AA  
                          l4660 11D0                            l4652 1102                            l4644 1012  
                          l4636 0EA6                            l4830 3366                            l4822 32E6  
                          l4814 3282                            l4806 323E                            l3870 535E  
                          l3862 5334                            l4574 51BE                            l4566 51AA  
                          l4582 5228                            l3846 30F8                            l3854 312E  
                          l3838 30C0                            l4590 4490                            l4910 36F4  
                          l4902 36C0                            l4494 2ABE                            l4478 2A10  
                          l4398 280A                            l4558 391A                            l3950 20D4  
                          l3942 2090                            l3934 205A                            l3926 203E  
                          l3918 2008                            l3790 1FC8                            l3782 1FAC  
                          l3774 1F6A                            l3766 1F10                            l3758 1EC4  
                          l3694 1D18                            l3686 1CDC                            l3678 1CA6  
                          l3598 1B36                            l4750 1A60                            l4742 1A20  
                          l4734 19B8                            l4726 1958                            l4670 13F2  
                          l4662 1278                            l4654 1106                            l4646 102E  
                          l4638 0EB2                            l4840 33CE                            l4832 336A  
                          l4824 3312                            l4816 32A6                            l4808 3242  
                          l3880 4F74                            l3872 5362                            l3864 5338  
                          l4576 51C0                            l4568 51B4                            l3848 310A  
                          l4584 4A8E                            l4592 4490                            l4912 36FA  
                          l4904 36C4                            l4488 2A7A                            l4496 2AC2  
                          l3960 2124                            l3952 20E0                            l3944 20B0  
                          l3936 206A                            l3928 2044                            l3792 1FCA  
                          l3784 1FB2                            l3776 1F7A                            l3768 1F1E  
                          l3696 1D28                            l3688 1CEA                            l4760 1AAE  
                          l4752 1A70                            l4744 1A34                            l4736 19BE  
                          l4680 14D0                            l4672 1406                            l4664 1294  
                          l4656 1112                            l4648 10D6                            l3890 4942  
                          l4842 33E6                            l4834 338E                            l4826 3316  
                          l4818 32BE                            l3882 4F9A                            l3874 4F60  
                          l3858 5354                            l3866 534A                            l4578 5244  
                          l4850 5154                            l4586 4AF0                            l4594 44A0  
                          l4930 375A                            l4922 3726                            l4914 3716  
                          l4906 36D0                            l4498 2ADC                            l3970 2166  
                          l3962 2130                            l3954 20EA                            l3946 20C0  
                          l3938 207A                            l3786 1FB4                            l3778 1F9A  
                          l4770 1AFE                            l4762 1AC0                            l4754 1A82  
                          l4746 1A46                            l4738 19EC                            l4690 1674  
                          l4682 14EC                            l4674 141E                            l4666 133C  
                          l4658 11B4                            l3892 495A                            l4836 33A6  
                          l4828 333A                            l4844 33EA                            l4780 4FCC  
                          l3884 4F9C                            l3876 4F64                            l3868 534E  
                          l4940 3DE0                            l4852 5164                            l3796 2E74  
                          l4596 44A0                            l4588 447E                            l4932 3760  
                          l4924 372A                            l4916 371C                            l4908 36DC  
                          l3980 21C8                            l3972 2172                            l3964 213C  
                          l3956 2100                            l3788 1FBA                            l4772 1B14  
                          l4764 1AD6                            l4756 1A98                            l4748 1A5C  
                          l4692 168C                            l4684 1594                            l4676 1422  
                          l4668 1350                            l3894 4966                            l4838 33AA  
                          l4790 31AC                            l4782 3158                            l3878 4F6C  
                          l4950 3E40                            l4942 3DF4                            l4854 516E  
                          l4846 5146                            l3798 2E94                            l4598 44B2  
                          l4934 377C                            l4926 3736                            l4870 3628  
                          l4862 35F4                            l3990 225E                            l3982 21D4  
                          l3974 2182                            l3966 214A                            l3958 210C  
                          l4766 1ADA                            l4758 1A9C                            l4694 16BA  
                          l4686 15B0                            l4678 142E                            l3896 497E  
                          l3888 493E                            l4792 31B0                            l4784 3174  
                          l4776 4FA0                            l4960 3EB8                            l4952 3E58  
                          l4944 3E0C                            l4848 514A                            l4936 3782  
                          l4928 3742                            l4872 362E                            l4864 35F8  
                          l4856 35D2                            l3992 227C                            l3984 21F0  
                          l3976 219C                            l3968 2156                            l4768 1AEC  
                          l4696 1788                            l4688 1658                            l3898 498A  
                          l4794 31D8                            l4786 3188                            l4778 4FB4  
                          l4962 3EBC                            l4954 3E70                            l4946 3E24  
                          l4938 3DDC                            l4890 368E                            l4882 365A  
                          l4874 364A                            l4866 3604                            l3994 2286  
                          l3986 221A                            l3978 21AC                            l4698 1792  
                          l4970 4B64                            l4796 31EC                            l4788 3194  
                          l4964 3ED4                            l4956 3E88                            l4948 3E3C  
                          l4892 3694                            l4884 365E                            l4876 3650  
                          l4868 3610                            l3996 2294                            l3988 2250  
                          l4980 4BBC                            l4972 4B7C                            l4966 3EEC  
                          l4958 3EA0                            l4894 36B0                            l4886 366A  
                          l4990 4E32                            l3998 22A6                            l4974 4B9A  
                          l4968 3F04                            l4896 36B6                            l4888 3676  
                          l4992 4E48                            l4984 4E06                            l4986 4E22  
                          l4988 4E26                            l4996 4F1C                            l4998 4F2C  
                          STR_1 0E05                            STR_3 0E3E                            STR_4 0E4E  
                          STR_5 0E38                            STR_6 0E44                            STR_7 0E25  
                          STR_8 0E49                            STR_9 0E1E                            u3000 34FE  
                          u3001 34FA                            u3100 1C0E                            u3101 1C0A  
                          u3014 3558                            u3110 1C1C                            u3030 1B36  
                          u3015 3554                            u3111 1C18                            u3031 1B32  
                          u3024 35C2                            u4000 424C                            u3200 1D5A  
                          u3120 1C8A                            u3040 1B48                    _BAUD4CONbits 000EE9  
                          u3025 35BE                            u4001 4248                            u3201 1D56  
                          u3121 1C86                            u3041 1B44                            _LATE 000F7D  
                          u4010 425C                            u3210 1D68                            u3130 1CA2  
                          u3050 1B58                            u4011 4258                            u3211 1D64  
                          u3131 1C9C                            u3051 1B54                            _LATG 000F7F  
                          u3300 1EB2                            u3220 1D86                            u3140 1CA4  
                          u3060 1B9A                            u4100 277E                            u4020 2446  
                          u3301 1EAE                            u3221 1D82                            u3061 1B96  
                          u4101 277A                            u4110 4B56                            u3310 1EC4  
                          u3230 1DBE                            u3150 1CCC                            u3070 1BB0  
                          u4030 246E                            u4111 4B52                            u3311 1EC0  
                          u3231 1DBA                            u3151 1CC8                            u3071 1BAC  
                          u4031 246A                            u4200 40F0                            u5000 338E  
                          u4120 51A8                            u3400 1FAC                            u3320 1EDA  
                          u3240 1E04                            u3160 1CEA                            u3080 1BC2  
                          u4040 24A2                            u4201 40EC                            u5001 338A  
                          u4121 51A4                            u3401 1FA8                            u3321 1ED6  
                          u3241 1E00                            u3161 1CE6                            u3081 1BBE  
                          u4025 243C                            u4210 4126                            u5010 33CE  
                          u4130 50BA                            u3410 1FC8                            u3330 1EF0  
                          u3250 1E3A                            u3170 1D0A                            u3090 1BD2  
                          u4050 24BE                            _T2PR 000FBC                            u4211 4122  
                          u5011 33CA                            u4131 50B6                            u3411 1FC4  
                          u3331 1EEC                            u3251 1E36                            u3171 1D06  
                          u3091 1BCE                            u4051 24BA                            u4220 4160  
                          u5020 33FC                            u2700 46AC                            u3500 308C  
                          u3420 2EA4                            u4300 2856                            u4140 50D0  
                          u3340 1F04                            u3260 1E4A                            u3180 1D18  
                          u4060 24FE                            u4221 415C                            u5021 33F8  
                          u2701 46A8                            u3501 3088                            u3421 2E9E  
                          u4301 2852                            u4141 50CC                            u3341 1F00  
                          u3261 1E46                            u3181 1D14                            u4061 24FA  
                          u4045 2498                            u4230 4A74                            u4150 3F98  
                          u5110 2B7E                            u2710 4ED8                            u3510 30A6  
                          u3430 2EA6                            u5030 364A                            u4310 2896  
                          u3350 1F1E                            u3270 1E76                            u3190 1D28  
                          u4070 2604                            u4231 4A70                            u4151 3F94  
                          u5111 2B7A                            u2711 4ED4                            u3511 30A2  
                          u5031 3646                            u4311 2892                            u3351 1F1A  
                          u3271 1E72                            u3191 1D24                            u4071 2600  
                          u4240 4A8C                            u3600 497E                            u4160 3FC4  
                          u5120 2BD4                            u2800 3C8A                            u2720 5138  
                          u3520 30C0                            u3440 2EBC                            u5040 36B0  
                          u4400 2A22                            u4320 28D6                            u3360 1F58  
                          u3280 1E86                            u4080 26A2                            u4241 4A88  
                          u3601 497A                            u4161 3FC0                            u5121 2BD0  
                          u2801 3C86                            u2721 5134                            u3521 30BC  
                          u3441 2EB8                            u5041 36AC                            u4401 2A1E  
                          u4321 28D2                            u3361 1F54                            u3281 1E82  
                          u4081 269E                            u3610 49C8                            u4170 3FFA  
                          u5130 2C2E                            u2730 3B02                            u2810 3CBC  
                          u3530 30D0                            u3450 2EEC                            u5050 3716  
                          u4410 2A50                            u4330 294C                            u4250 27CE  
                          u3370 1F6A                            u3290 1EA2                            u4090 2762  
                          u3611 49C4                            u4171 3FF6                            u5131 2C2A  
                          u2731 3AFE                            u2811 3CB8                            u3531 30CC  
                          u3451 2EE8                            u5051 3712                            u4411 2A4C  
                          u4331 2948                            u4251 27CA                            u3371 1F66  
                          u3291 1E9E                            u2900 4846                            u3620 49E0  
                          u4180 4034                            u5140 2C88                            u2740 3B34  
                          u2820 3CFA                            u3540 30E2                            u3460 2F08  
                          u5060 377C                            u4420 2A66                            u4340 296E  
                          u4260 27E0                            u4500 3804                            u3700 20C0  
                          u3380 1F7A                            u5300 443A                            u2901 4842  
                          u3621 49DC                            u4181 4030                            u5141 2C84  
                          u2741 3B30                            u2821 3CF6                            u3541 30DE  
                          u3461 2F04                            u5061 3778                            u4421 2A62  
                          u4341 296A                            u4261 27DC                            u4501 3800  
                          u3701 20BC                            u3381 1F76                            u5301 4436  
                          u2910 486C                            u4190 40C4                            u5150 2CE2  
                          u2830 3D24                            u2670 463C                            u3550 30F2  
                          u3470 2F36                            u4430 2A7A                            u4350 2998  
                          u4270 27F0                            u4510 385A                            u3710 223A  
                          u3630 1FF6                            u3390 1F9A                            u5070 4BB8  
                          u2911 4868                            u4191 40C0                            u5151 2CDE  
                          u2751 3B5E                            u2831 3D20                            u2671 4638  
                          u3551 30EE                            u3471 2F32                            u4431 2A76  
                          u4351 2994                            u4271 27EC                            u4511 3856  
                          u3631 1FF2                            u3391 1F96                            u4095 2758  
                          u5071 4BB4                            u5160 2D3C                            u2760 3B82  
                          u2840 3D52                            u2680 464E                            u2920 4704  
                          u3560 310A                            u3480 2F44                            u4600 44B2  
                          u5080 4E48                            u4440 2A94                            u4360 29BC  
                          u4280 2834                            u4520 38A4                            u3800 23AE  
                          u3720 2294                            u3640 2008                            u5161 2D38  
                          u2761 3B7E                            u2841 3D4E                            u2681 464A  
                          u2921 4700                            u3561 3106                            u3481 2F40  
                          u4601 44AE                            u5081 4E44                            u4441 2A90  
                          u4361 29B8                            u4281 2830                            u4521 38A0  
                          u3801 23AA                            u3721 2290                            u3641 2004  
                          u5170 2D96                            u3570 4F88                            u2770 3BAC  
                          u2850 3D9A                            u2690 4676                            u2930 4726  
                          u3490 306E                            u4610 44C4                            u4450 2ADC  
                          u4370 29D2                            u4290 2846                            u4530 38C2  
                          u3810 23E8                            u3730 22B4                            u3650 2018  
            verify_color@color2 0098                            u5171 2D92                            u3571 4F80  
                          u2771 3BA8                            u2851 3D96                            u2691 4672  
                          u2931 4722                            u3491 306A                            u4611 44C0  
                          u4451 2AD8                            u4371 29CE                            u4291 2842  
                          u4531 38BE                            u3811 23E4                            u3731 22B0  
                          u3715 2230                            u3651 2014                            u2860 47CC  
                          u5180 2DF0                            u2780 3BEC                            u2940 477C  
                          u3900 39CC                            u4620 44D6                            u4460 2B0C  
                          u4380 29F0                            u4540 38D2                            u3820 42AC  
                          u3740 22C6                            u3660 2058                            u4700 17CA  
                          u2861 47C8                            u5181 2DEC                            u2781 3BE8  
                          u2941 4778                            u3901 39C8                            u4621 44D2  
                          u4461 2B08                            u4381 29EC                            u4541 38CE  
                          u3821 42A8                            u3741 22C2                            u3661 2054  
                          u4701 17C6                            u2870 47E6                            u3590 495A  
                          u5190 2E4A                            u2790 3C36                            u2950 478C  
                          u3910 3A70                            u4630 44E8                            u4470 2B3A  
                          u4390 2A10                            u4550 38E0                            u3830 42EA  
                          u3750 22F4                            u3670 206A                            u4710 188A  
                          u2871 47E2                            u3591 4956                            u5191 2E46  
                          u2791 3C32                            u2951 4788                            u3911 3A6C  
                          u4631 44E4                            u5407 361A                            u4471 2B36  
                          u4391 2A0C                            u4551 38DC                            u3831 42E6  
                          u3751 22F0                            u3671 2066                            u4711 1886  
                          u5327 43C6                            u2880 480C                            u3920 48F8  
                          u2960 503E                            u4640 44FA                            u4560 391A  
                          u4480 379A                            u3840 4308                            u3760 230A  
                          u3680 207A                            u4800 1A1A                            u4720 18A2  
                          u2881 4808                            u3921 48F4                            u2961 503A  
                          u4641 44F6                            u5417 3680                            u4561 3916  
                          u4481 3796                            u3841 4304                            u3761 2306  
                          u3681 2076                            u4801 1A16                            u4721 189E  
                          u5337 43EA                            u2890 482A                            u3930 4910  
                          u2970 51E4                            u4650 450C                            u4570 3928  
                          u4490 37A8                            u3850 4328                            u3770 231E  
                          u3690 20B0                            u4810 1A34                            u4730 18EC  
                          u2891 4826                            u3931 490C                            u5507 5292  
                          u2971 51E0                            u4651 4508                            u5427 36E6  
                          u4571 3924                            u4491 37A4                            u3851 4324  
                          u3771 231A                            u3691 20AC                            u4811 1A30  
                          u4731 18E8                            u5347 4B70                            u2980 51FA  
                          u3588 4F8A                            u3940 532C                            u4660 451E  
                          u4580 4490                            u3860 4378                            u3780 2338  
                          u4900 1AEC                            u4820 1A46                            u4740 1904  
                          u5517 52B2                            u2981 51F6                            u3941 5328  
                          u4661 451A                            u4581 448C                            u5437 374C  
                          u3861 4374                            u3781 2334                            u4901 1AE8  
                          u4821 1A42                            u4741 1900                            u5357 10F6  
                          u2990 341A                            u4670 4530                            u4590 44A0  
                          u3950 418E                            u3790 2380                            u3870 50EE  
                          u4910 1AFE                            u4830 1A5C                            u4750 1924  
                          u2991 3416                            u5607 5000                            u5527 4FBE  
                          u5447 5232                            u4671 452C                            u4591 449C  
                          u3951 418A                            u3791 237C                            u3871 50EA  
                          u4911 1AFA                            u4831 1A58                            u4751 1920  
                          u5367 1412                            u3880 3960                            u3960 41C2  
                          u4920 1B14                            u4840 1A70                            u4760 1958  
                          u4680 16BA                            u5617 48D8                            u5537 319E  
                          u5457 515A                            u3881 395C                            u4921 1B10  
                          u4841 1A6C                            u4761 1954                            u4681 16B6  
                          u5377 1680                            u4930 31D8                            u3890 39A8  
                          u3970 41F0                            u4850 1A82                            u4770 198A  
                          u4690 1788                            u5627 491A                            u5547 3F78  
                          u4931 31D4                            u5467 3E2E                            u3891 39A4  
                          u5387 4C3A                            u3971 41EC                            u4851 1A7E  
                          u4771 1986                            u4691 1784                            u4940 31FE  
                          u3980 4204                            u4860 1A98                            u4780 19B8  
                          u5637 49A8                            u5557 3FD6                            u4941 31FA  
                          u5477 3EAA                            u5397 4C64                            u3981 4200  
                          u3965 41B8                            u4861 1A94                            u4781 19B4  
                          u4950 3226                            u3990 422C                            u4870 1AAE  
                          u4790 19EC                            u5647 49EA                            u5567 4010  
                          u4951 3222                            u5487 3F0E                            u3991 4228  
                          u4871 1AAA                            u4791 19E8                            u4960 3266  
                          u4880 1AC0                            u5657 4A54                            u5577 40A4  
                          u4961 3262                            u5497 5272                            u4881 1ABC  
                          u4970 32A6                            u4890 1AD6                            u5587 4102  
                          u4971 32A2                            u4891 1AD2                            u4980 32E6  
                          u5597 413C                            u4981 32E2                            u4990 333A  
                          u4991 3336                            abs@a 0013                            _dbuf 0191  
                          _main 4382                            _dtoa 2E74                            _prec 00EC  
                          _nout 00E8                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            btemp 005F                            _stop 493E  
                          prodh 000FF4                            prodl 000FF3                            start 0028  
                ?_color_display 0058                 ___fldiv@new_exp 0020          __end_of_color_read_Red 4D16  
               __end_of_HighISR 0028                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 3C78                 __end_of___fladd 1FDC                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 3DDC                 __end_of___fldiv 2B4E  
               __end_of___awdiv 487E                 __end_of___flneg 5110                           STR_10 0E13  
                         STR_11 0E2C                           STR_12 0E32                           STR_13 0E0D  
               __end_of___flmul 2406                 __end_of___flsub 4E96                 __end_of___fltol 427E  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 52A2  
                         _LED_C 5222                           _LED_G 5282                           _LED_R 5262  
                         i2l677 0024                 ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 5332  
    __end_of_I2C_2_Master_Start 535E         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 533E  
               __end_of_compare 50D8                    compare@lower 006A                           _flags 00EE  
                         _color 0190                    compare@upper 006E                           _fputc 462A  
                         _fputs 4E96                           pad@fp 0011                           _width 00EA  
                         _putch 536A                           _toint 0E01                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                           tablat 000FF5  
               __end_of_lroundf 509E                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 4CC6                color_display@buf 0079         __end_of_color_read_Blue 4E06  
         _I2C_2_Master_RepStart 535E                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 4EDA                   short_burst@mL 0020                   short_burst@mR 0022  
                  __end_of_main 447A                    __end_of_dtoa 3158            __end_of_detect_color 1B1C  
                  __end_of_stop 49FA          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
                        ??_main 00E6                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001          _initDCmotors_parameter 4558  
                  ?_setMotorPWM 000F                          ?_fputc 0001                          ?_fputs 000A  
              ___awdiv@dividend 0007                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5274 000A  
                        i2l5276 001A                          i2l5278 0020              turnLeft@angle_left 0024  
                     ??_HighISR 0001        __end_of_color_click_init 517A                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A                __end_of___xxtofl 393C  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 427E                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 51FC                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                        _action 2B4E                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 3158                   compare@result 0070                          _memory 013C  
                        clear_0 4EF8                          clear_1 4F04                ___awdiv@quotient 000D  
                        _second 00F4                          _motorL 0182                          _motorR 0178  
                        isa$std 000001                          pad@buf 0013                          _roundf 2406  
                        dtoa@fp 001C                          _strlen 5110                       ??_compare 005F  
              __end_of_pin_init 531A                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 4B60                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
              __end_of_turnLeft 4176                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                  ?_short_burst 0020                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                      __accesstop 0060         __end_of__initialization 4F0A  
                 verify_color@m 0092                   verify_color@w 0094        __end_of_color_read_Clear 4DB6  
                    ___flneg@f1 0001        __end_of_color_read_Green 4D66          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 52C2  
                 __end_of_LED_C 5242                   __end_of_LED_G 52A2                   __end_of_LED_R 5282  
              ?_color_read_Blue 0005                 _Interrupts_init 533E                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 487E                    __pidataBANK0 5368            turnRight@angle_right 0024  
                 __end_of_fputc 46F4               detect_color@color 008D                   __end_of_fputs 4EDA  
                 __end_of_putch 536C                   __end_of_toint 0E05             __end_of_Timer0_init 52FE  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 000C              ??_distance_measure 0010  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00E8                      __pbssBANK1 0100                color_predict@buf 0079  
             _color_writetoaddr 5242                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 0036                         ?_goback 002E                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
                  _detect_color 0E54   __end_of_color_data_collection 3788         __end_of_Interrupts_init 534A  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 5262              _I2C_2_Master_Start 5354                      _initUSART4 52C2  
            _I2C_2_Master_Write 5332                       ?_pin_init 0001                         __Hparam 0000  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 52E0  
       sendStringSerial4@string 0002                         ___aodiv 3AF0                         ___fladd 1B1C  
                       ___aomod 3C78                         ___fldiv 27B4                         ___awdiv 47BA  
                       ___flneg 50D8                         ___flmul 1FDC                         ___flsub 4E50  
                       ___fltol 4176             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 4EDA  
                       __ramtop 0E00                      _read_color 4BBE                       ?_turnLeft 0020  
                       __ptext0 4382                         __ptext1 4B60                         __ptext2 0E54  
                       __ptext3 5064                         __ptext4 2406                         __ptext5 4E50  
                       __ptext6 1B1C                         __ptext7 50D8                         __ptext8 1FDC  
                       __ptext9 427E                         _compare 509E         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD                      ??___xxtofl 0005                       _T2HLTbits 000FBE  
                       _lroundf 5064                   _RxBufWriteCnt 00FA                         goback@i 0034  
                       _sprintf 4C74                         main@rgb 01C5            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 4F0A              setMotorPWM@PWMduty 0018  
               _CALIBRATION_180 00FB                         fputc@fp 0003                         fputs@fp 000C  
             ?_color_click_init 0001                 ??_fullSpeedBack 0024                      ??_pin_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 3AF0           __end_of_short_reverse 4FE2  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 4F1C                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 462A  
                     _PORTFbits 000F8E               __end_of_turnRight 404A                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                      _start_move 00F2                ?_Interrupts_init 0001  
                   ___flmul@grs 0035               ?_color_read_Clear 0005                    _EUSART4RXbuf 0164  
                  _EUSART4TXbuf 0100               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001                   ?_verify_color 0092           __end_of_color_display 4AFE  
                    main@motorL 01CD                      main@motorR 01D7               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 0085                  detect_color@BG 008B                  detect_color@GB 007B  
                detect_color@GC 007D                  detect_color@GG 0081                  detect_color@BR 0087  
                detect_color@GR 0089                  detect_color@RB 0079                  detect_color@RG 007F  
                detect_color@RR 0083           __end_of_color_predict 4558                  __end_of___flge 4382  
                _fullSpeedAhead 49FA                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5222                  __end_of_action 2E74  
                   ?_read_color 000C                  __end_of_goback 33FE                  __end_of_roundf 27B4  
            turnRight@delay_180 0026                  __end_of_strlen 5146             color_read_Clear@tmp 000A  
           start_initialization 4EDA                     __end_of_abs 5064                     __end_of_pad 47BA  
                 _TxBufWriteCnt 00F8               turnLeft@delay_180 0026                  ??_verify_color 0096  
           color_read_Green@tmp 000A                  _reverse_square 4FE2         __end_of_initDCmotorsPWM 4F5E  
                   vfprintf@fmt 0052          __end_of_fullSpeedAhead 4A8E                        ??___flge 0009  
                      ??___wmul 0005                        ??_action 003A                        ??_goback 0032  
               short_reverse@mL 0026                 short_reverse@mR 0028                     __pdataBANK0 00FB  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 01B1  
              ___aodiv@dividend 0001                        ?_HighISR 0001          __end_of_reverse_square 5024  
                     _dtoa$2509 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B                 turnRight@i_1214 002A  
                turnLeft@i_1191 002A            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 51D4  
             _I2C_2_Master_Init 51AA               _I2C_2_Master_Read 4F5E               _I2C_2_Master_Stop 534A  
                  _RxBufReadCnt 00F9                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 517A           _color_data_collection 35D2             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
               ?_reverse_square 0026                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR0bits 000E33                        i2u531_40 001A                        i2u531_41 0016  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 00F6                       _vfpfcnvrt 393C       __end_of_I2C_2_Master_Idle 51FC  
     __end_of_I2C_2_Master_Init 51D4       __end_of_I2C_2_Master_Read 4FA0               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 5354                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 4BBE                       main@white 01B1               ??_color_read_Blue 0007  
                     _stop_move 00F0                   detect_color@m 0071                   detect_color@w 0073  
                  _TxBufReadCnt 00F7                       _turnRight 3F1E                 _calibrate_white 3DDC  
     __end_of_sendStringSerial4 51AA                   ??_short_burst 0024   __end_of_I2C_2_Master_RepStart 5368  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 35D2                      roundf@F527 018C  
              _distance_measure 4E06                    ??_initUSART4 0001                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 493E                    __Lsmallconst 0E00            compare@value2compare 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 003C                      sprintf@fmt 0062                        ___xxtofl 3788  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 52E0  
                    ?_turnRight 0020                        __ptext10 4176                        __ptext11 509E  
                      __ptext20 35D2                        __ptext12 3788                        __ptext21 4BBE  
                      __ptext13 27B4                        __ptext30 4E96                        __ptext22 447A  
                      __ptext14 4C1C                        __ptext31 462A                        __ptext23 4A8E  
                      __ptext15 52FE                        __ptext40 5242                        __ptext32 536A  
                      __ptext24 4C74                        __ptext16 52C2                        __ptext41 51AA  
                      __ptext33 5024                        __ptext25 4AFE                        __ptext17 4558  
                      __ptext50 535E                        __ptext42 3DDC                        __ptext34 3C78  
                      __ptext26 393C                        __ptext18 4F1C                        __ptext51 4F5E  
                      __ptext43 4CC6                        __ptext35 3AF0                        __ptext27 2E74  
                      __ptext19 4E06                        __ptext60 404A                        __ptext52 51D4  
                      __ptext44 4D16                        __ptext36 517A                        __ptext28 46F4  
                      __ptext61 4FE2                        __ptext53 5262                        __ptext45 4D66  
                      __ptext37 531A                        __ptext29 5110                        __ptext62 487E  
                      __ptext54 5282                        __ptext46 4DB6                        __ptext38 5222  
                      __ptext63 493E                        __ptext55 52A2                        __ptext47 5332  
                      __ptext39 5146                        __ptext64 49FA                        __ptext56 2B4E  
                      __ptext48 534A                        __ptext65 33FE                        __ptext57 4FA0  
                      __ptext49 5354                        __ptext66 51FC                        __ptext58 3158  
                      __ptext67 47BA                        __ptext59 3F1E                        __ptext68 52E0  
                      __ptext69 533E                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A                  turnRight@delay 002C                   turnLeft@delay 002C  
                      action@mL 0036                        action@mR 0038                      turnLeft@mL 0020  
                    turnLeft@mR 0022              __end_of_read_color 4C1C                        _pin_init 52FE  
                    turnRight@i 0028             __end_of_short_burst 4C74                        isa$xinst 000000  
          distance_measure@stop 0018                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00FC                        goback@mL 002E                        goback@mR 0030  
                      _vfprintf 4AFE                        _turnLeft 404A                ___aomod@dividend 0001  
       __end_of_calibrate_white 3F1E                      _INTCONbits 000FF2                     _setMotorPWM 33FE  
                 ?_detect_color 0071                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006C                ??_fullSpeedAhead 001E  
                     turnLeft@i 0028                reverse_square@mL 0026                reverse_square@mR 0028  
                      lroundf@x 0066        ??_initDCmotors_parameter 0005                   _short_reverse 4FA0  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 5146                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$2862 008E                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
            distance_measure@CB 0014              distance_measure@CC 0016              distance_measure@CG 0012  
            distance_measure@CR 0010              distance_measure@mL 000C              distance_measure@mR 000E  
                ??_detect_color 0075                     ??_turnRight 0025                   ___fladd@signs 000D  
              ??_reverse_square 002A                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 531A                     _short_burst 4C1C                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                    ___aomod@sign 0012                    _verify_color 4B60  
                   _roundf$2863 004F                     _roundf$2864 0049                   _color_display 4A8E  
